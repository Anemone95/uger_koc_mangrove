[36391, 36392, 36395]
1 :: ENTR :: entry :: null :: demo.DemoMultipleMC.main(java.lang.String[])::CD,5:CD,38:JM,44113:JM,44098:JM,44146:JM,44115:JM,44166:JM,35975:JM,44120:JM,44141:JM,35982:JM,44094:CD,46:CD,50:CD,54:CD,84:CD,88:CD,89:JM,36768:JM,36803:JM,36832:JM,33281:JM,33287:JM,33274:CD,103:CD,111:CD,119:CD,128:CD,140:CD,152:CD,158
5 :: NORM :: declaration :: [Ljava/lang/String :: v4 = new java.lang.String[]::JM,38:JM,88:JM,63
6 :: EXPR :: modify :: Ljava/lang/Object :: v4[#(0)] = #(d1hm9a1)::
10 :: EXPR :: modify :: Ljava/lang/Object :: v4[#(1)] = #(d1kk6a_)::
14 :: EXPR :: modify :: Ljava/lang/Object :: v4[#(2)] = #(d1krra_)::
18 :: EXPR :: modify :: Ljava/lang/Object :: v4[#(3)] = #(d1lxaa_)::
22 :: EXPR :: modify :: Ljava/lang/Object :: v4[#(4)] = #(d1ocxa_)::
26 :: EXPR :: modify :: Ljava/lang/Object :: v4[#(5)] = #(d1qrea_)::
30 :: EXPR :: modify :: Ljava/lang/Object :: v4[#(6)] = #(d1xata_)::
34 :: EXPR :: modify :: Ljava/lang/Object :: v4[#(7)] = #(d3tdta_)::
38 :: CALL :: call :: Ljava/util/List :: v22 = asList(v4)::JM,38:JM,88:JM,63
46 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::
50 :: NORM :: declaration :: Ljava/util/ArrayList :: v27 = new java.util.ArrayList::
54 :: CALL :: call :: Ljava/util/Iterator :: v30 = v22.iterator()::JM,88:JM,63
59 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,88:JM,63
63 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,33190:JM,33193:CF,64
64 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName :: v36 = new org.biojava.nbio.structure.align.client.StructureName::JM,33190:JM,33193
69 :: CALL :: call :: Z :: v39 = v27.add(v36)::
74 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v41 = v23.getAtoms(v36)::CL,33205
79 :: CALL :: call :: Z :: v43 = v25.add(v41)::
84 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,88:JM,63
88 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 89::CF,89:CD,59:CD,63:CD,64:JM,33190:JM,33193:CD,69:CD,74:CD,79:CD,84:JM,88
89 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/multiple/mc/MultipleMcMain :: v44 = new org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain::
103 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(#(15))::
111 :: CALL :: call :: Ljava/lang/Integer :: v57 = valueOf(#(10))::
119 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v60 = v44.align(v25)::JM,33447:JM,37327:CL,33348
128 :: CALL :: call :: V :: v62.setStructureIdentifiers(v27)::CL,33398
140 :: CALL :: call :: V :: v65.setAlgorithmName(v67)::CL,33415
152 :: CALL :: call :: V :: v70.setVersion(v72)::CL,33432
158 :: CALL :: call :: Ljava/lang/String :: v76 = toFatCat(v60)::JM,33447:JM,37327:CL,33443
651 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.<clinit>()::CD,661:CD,668:CD,675
661 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^(?:CATH:)?([0-9][a-z...), #(2))::
668 :: CALL :: call :: Ljava/util/regex/Pattern :: v11 = compile(#(^(?:SCOP:)?d([0-9][a-...), #(2))::
675 :: CALL :: call :: Ljava/util/regex/Pattern :: v14 = compile(#(^(?:ECOD:)?e([0-9][a-...), #(2))::
780 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.<clinit>()::CD,790:CD,798:CD,802:CD,810:CD,814:CD,822:CD,826:CD,834:CD,838:CD,846:CD,850:CD,858:CD,862:CD,870:CD,874:CD,882:CD,886:CD,894:CD,898:CD,906:CD,910:CD,918:CD,922:CD,930:CD,934:CD,942:CD,946:CD,954:CD,958:CD,966:CD,970:CD,978:CD,982:CD,990:CD,994:CD,1002:CD,1006:CD,1014:CD,1018:CD,1026:CD,1030:CD,1038:CD,1042:CD,1050:CD,1054:CD,1062:CD,1066:CD,1074:CD,1078:CD,1086:CD,1090:CD,1098:CD,1102:CD,1108:CD,1114:CD,1163:CD,1192:CD,1193:CD,1201:CD,1205:CD,1213:CD,1217:CD,1225:CD,1229:CD,1237:CD,1241:CD,1249:CD,1253:CD,1261:CD,1265:CD,1273:CD,1277:CD,1285:CD,1289:CD,1297:CD,1301:CD,1309:CD,1313:CD,1321:CD,1325:CD,1333:CD,1337:CD,1345:CD,1349:CD,1357:CD,1361:CD,1369:CD,1373:CD,1381:CD,1385:CD,1393:CD,1397:CD,1405:CD,1409:CD,1417:CD,1421:CD,1429:CD,1433:CD,1441:CD,1445:CD,1453:CD,1457:CD,1465:CD,1469:CD,1477:CD,1481:CD,1489:CD,1493:CD,1499:CD,1509:CD,1518:CD,1527:CD,1533
790 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
798 :: CALL :: call :: Ljava/lang/Character :: v11 = valueOf(#(65))::
802 :: CALL :: call :: Ljava/lang/Object :: v13 = v7.put(#(DA), v11)::
810 :: CALL :: call :: Ljava/lang/Character :: v18 = valueOf(#(67))::
814 :: CALL :: call :: Ljava/lang/Object :: v20 = v14.put(#(DC), v18)::
822 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(#(71))::
826 :: CALL :: call :: Ljava/lang/Object :: v27 = v21.put(#(DG), v25)::
834 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(84))::
838 :: CALL :: call :: Ljava/lang/Object :: v34 = v28.put(#(DT), v32)::
846 :: CALL :: call :: Ljava/lang/Character :: v39 = valueOf(#(73))::
850 :: CALL :: call :: Ljava/lang/Object :: v41 = v35.put(#(DI), v39)::
858 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(#(65))::
862 :: CALL :: call :: Ljava/lang/Object :: v47 = v42.put(#(A), v45)::
870 :: CALL :: call :: Ljava/lang/Character :: v51 = valueOf(#(71))::
874 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.put(#(G), v51)::
882 :: CALL :: call :: Ljava/lang/Character :: v57 = valueOf(#(67))::
886 :: CALL :: call :: Ljava/lang/Object :: v59 = v54.put(#(C), v57)::
894 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(85))::
898 :: CALL :: call :: Ljava/lang/Object :: v66 = v60.put(#(U), v64)::
906 :: CALL :: call :: Ljava/lang/Character :: v70 = valueOf(#(73))::
910 :: CALL :: call :: Ljava/lang/Object :: v72 = v67.put(#(I), v70)::
918 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(88))::
922 :: CALL :: call :: Ljava/lang/Object :: v79 = v73.put(#(TAF), v77)::
930 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(88))::
934 :: CALL :: call :: Ljava/lang/Object :: v85 = v80.put(#(TC1), v83)::
942 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(88))::
946 :: CALL :: call :: Ljava/lang/Object :: v91 = v86.put(#(TFE), v89)::
954 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(88))::
958 :: CALL :: call :: Ljava/lang/Object :: v97 = v92.put(#(TFO), v95)::
966 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(88))::
970 :: CALL :: call :: Ljava/lang/Object :: v103 = v98.put(#(TGP), v101)::
978 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(88))::
982 :: CALL :: call :: Ljava/lang/Object :: v109 = v104.put(#(THX), v107)::
990 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(88))::
994 :: CALL :: call :: Ljava/lang/Object :: v115 = v110.put(#(TLC), v113)::
1002 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(#(88))::
1006 :: CALL :: call :: Ljava/lang/Object :: v121 = v116.put(#(TLN), v119)::
1014 :: CALL :: call :: Ljava/lang/Character :: v125 = valueOf(#(88))::
1018 :: CALL :: call :: Ljava/lang/Object :: v127 = v122.put(#(LCG), v125)::
1026 :: CALL :: call :: Ljava/lang/Character :: v131 = valueOf(#(88))::
1030 :: CALL :: call :: Ljava/lang/Object :: v133 = v128.put(#(TP1), v131)::
1038 :: CALL :: call :: Ljava/lang/Character :: v137 = valueOf(#(88))::
1042 :: CALL :: call :: Ljava/lang/Object :: v139 = v134.put(#(CP1), v137)::
1050 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(88))::
1054 :: CALL :: call :: Ljava/lang/Object :: v145 = v140.put(#(TPN), v143)::
1062 :: CALL :: call :: Ljava/lang/Character :: v149 = valueOf(#(88))::
1066 :: CALL :: call :: Ljava/lang/Object :: v151 = v146.put(#(CPN), v149)::
1074 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(88))::
1078 :: CALL :: call :: Ljava/lang/Object :: v157 = v152.put(#(GPN), v155)::
1086 :: CALL :: call :: Ljava/lang/Character :: v161 = valueOf(#(88))::
1090 :: CALL :: call :: Ljava/lang/Object :: v163 = v158.put(#(APN), v161)::
1098 :: CALL :: call :: Ljava/lang/Character :: v167 = valueOf(#(88))::
1102 :: CALL :: call :: Ljava/lang/Object :: v169 = v164.put(#(TPC), v167)::
1108 :: NORM :: declaration :: Ljava/util/HashMap :: v170 = new java.util.HashMap::
1114 :: NORM :: declaration :: [Ljava/lang/String :: v173 = new java.lang.String[]::DD,1163
1115 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(0)] = #(C)::
1119 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(1)] = #(G)::
1123 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(2)] = #(A)::
1127 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(3)] = #(T)::
1131 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(4)] = #(U)::
1135 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(5)] = #(I)::
1139 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(6)] = #(+C)::
1143 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(7)] = #(+G)::
1147 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(8)] = #(+A)::
1151 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(9)] = #(+T)::
1155 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(10)] = #(+U)::
1159 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(11)] = #(+I)::
1163 :: EXPR :: assign :: I :: v193 = v173.length::DD,1192
1165 :: EXPR :: reference :: Ljava/lang/Object :: v194 = v173[v206]::JM,1175
1171 :: CALL :: call :: I :: v197 = v194.length()::JM,1175
1175 :: EXPR :: assign :: Ljava/lang/Object :: v198 = v197 - #(1)::
1176 :: CALL :: call :: C :: v200 = v194.charAt(v198)::
1181 :: CALL :: call :: Ljava/lang/Character :: v202 = valueOf(v200)::
1185 :: CALL :: call :: Ljava/lang/Object :: v204 = v195.put(v194, v202)::
1191 :: EXPR :: assign :: Ljava/lang/Object :: v205 = v206 + #(1)::DD,1533
1192 :: PRED :: IF :: Z :: if (v206 < v193) goto 530::CF,1193:CD,1171:CD,1175:CD,1176:CD,1181:CD,1185:CD,1191:CD,1533
1193 :: NORM :: declaration :: Ljava/util/HashMap :: v207 = new java.util.HashMap::
1201 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(71))::
1205 :: CALL :: call :: Ljava/lang/Object :: v214 = v209.put(#(GLY), v212)::
1213 :: CALL :: call :: Ljava/lang/Character :: v218 = valueOf(#(65))::
1217 :: CALL :: call :: Ljava/lang/Object :: v220 = v215.put(#(ALA), v218)::
1225 :: CALL :: call :: Ljava/lang/Character :: v225 = valueOf(#(86))::
1229 :: CALL :: call :: Ljava/lang/Object :: v227 = v221.put(#(VAL), v225)::
1237 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(76))::
1241 :: CALL :: call :: Ljava/lang/Object :: v234 = v228.put(#(LEU), v232)::
1249 :: CALL :: call :: Ljava/lang/Character :: v238 = valueOf(#(73))::
1253 :: CALL :: call :: Ljava/lang/Object :: v240 = v235.put(#(ILE), v238)::
1261 :: CALL :: call :: Ljava/lang/Character :: v245 = valueOf(#(70))::
1265 :: CALL :: call :: Ljava/lang/Object :: v247 = v241.put(#(PHE), v245)::
1273 :: CALL :: call :: Ljava/lang/Character :: v252 = valueOf(#(89))::
1277 :: CALL :: call :: Ljava/lang/Object :: v254 = v248.put(#(TYR), v252)::
1285 :: CALL :: call :: Ljava/lang/Character :: v259 = valueOf(#(87))::
1289 :: CALL :: call :: Ljava/lang/Object :: v261 = v255.put(#(TRP), v259)::
1297 :: CALL :: call :: Ljava/lang/Character :: v266 = valueOf(#(80))::
1301 :: CALL :: call :: Ljava/lang/Object :: v268 = v262.put(#(PRO), v266)::
1309 :: CALL :: call :: Ljava/lang/Character :: v273 = valueOf(#(72))::
1313 :: CALL :: call :: Ljava/lang/Object :: v275 = v269.put(#(HIS), v273)::
1321 :: CALL :: call :: Ljava/lang/Character :: v280 = valueOf(#(75))::
1325 :: CALL :: call :: Ljava/lang/Object :: v282 = v276.put(#(LYS), v280)::
1333 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(82))::
1337 :: CALL :: call :: Ljava/lang/Object :: v289 = v283.put(#(ARG), v287)::
1345 :: CALL :: call :: Ljava/lang/Character :: v294 = valueOf(#(83))::
1349 :: CALL :: call :: Ljava/lang/Object :: v296 = v290.put(#(SER), v294)::
1357 :: CALL :: call :: Ljava/lang/Character :: v300 = valueOf(#(84))::
1361 :: CALL :: call :: Ljava/lang/Object :: v302 = v297.put(#(THR), v300)::
1369 :: CALL :: call :: Ljava/lang/Character :: v307 = valueOf(#(69))::
1373 :: CALL :: call :: Ljava/lang/Object :: v309 = v303.put(#(GLU), v307)::
1381 :: CALL :: call :: Ljava/lang/Character :: v314 = valueOf(#(81))::
1385 :: CALL :: call :: Ljava/lang/Object :: v316 = v310.put(#(GLN), v314)::
1393 :: CALL :: call :: Ljava/lang/Character :: v321 = valueOf(#(68))::
1397 :: CALL :: call :: Ljava/lang/Object :: v323 = v317.put(#(ASP), v321)::
1405 :: CALL :: call :: Ljava/lang/Character :: v328 = valueOf(#(78))::
1409 :: CALL :: call :: Ljava/lang/Object :: v330 = v324.put(#(ASN), v328)::
1417 :: CALL :: call :: Ljava/lang/Character :: v334 = valueOf(#(67))::
1421 :: CALL :: call :: Ljava/lang/Object :: v336 = v331.put(#(CYS), v334)::
1429 :: CALL :: call :: Ljava/lang/Character :: v341 = valueOf(#(77))::
1433 :: CALL :: call :: Ljava/lang/Object :: v343 = v337.put(#(MET), v341)::
1441 :: CALL :: call :: Ljava/lang/Character :: v347 = valueOf(#(77))::
1445 :: CALL :: call :: Ljava/lang/Object :: v349 = v344.put(#(MSE), v347)::
1453 :: CALL :: call :: Ljava/lang/Character :: v353 = valueOf(#(85))::
1457 :: CALL :: call :: Ljava/lang/Object :: v355 = v350.put(#(CSE), v353)::
1465 :: CALL :: call :: Ljava/lang/Character :: v359 = valueOf(#(85))::
1469 :: CALL :: call :: Ljava/lang/Object :: v361 = v356.put(#(SEC), v359)::
1477 :: CALL :: call :: Ljava/lang/Character :: v366 = valueOf(#(79))::
1481 :: CALL :: call :: Ljava/lang/Object :: v368 = v362.put(#(PYH), v366)::
1489 :: CALL :: call :: Ljava/lang/Character :: v372 = valueOf(#(79))::
1493 :: CALL :: call :: Ljava/lang/Object :: v374 = v369.put(#(PYL), v372)::
1499 :: NORM :: declaration :: Ljava/util/HashSet :: v375 = new java.util.HashSet::
1509 :: CALL :: call :: Z :: v380 = v377.add(v378)::
1518 :: CALL :: call :: Z :: v384 = v381.add(v382)::
1527 :: CALL :: call :: Z :: v388 = v385.add(v386)::
1533 :: EXPR :: assign :: null :: PHI v206 = #(0), v205::DD,1191:DD,1192
1762 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECalculator.<clinit>()::CD,1766:CD,1774:CD,1857:CD,1940:CD,2023:CD,2106:CD,2189:CD,2272:CD,2355:CD,2438:CD,3041
1766 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
1774 :: NORM :: declaration :: [D :: v9 = new []::
1775 :: EXPR :: modify :: D :: v9[#(0)] = #(2.54 d)::
1779 :: EXPR :: modify :: D :: v9[#(1)] = #(2.51 d)::
1783 :: EXPR :: modify :: D :: v9[#(2)] = #(2.72 d)::
1787 :: EXPR :: modify :: D :: v9[#(3)] = #(3.01 d)::
1791 :: EXPR :: modify :: D :: v9[#(4)] = #(3.31 d)::
1795 :: EXPR :: modify :: D :: v9[#(5)] = #(3.61 d)::
1799 :: EXPR :: modify :: D :: v9[#(6)] = #(3.9 d)::
1803 :: EXPR :: modify :: D :: v9[#(7)] = #(4.19 d)::
1807 :: EXPR :: modify :: D :: v9[#(8)] = #(4.47 d)::
1811 :: EXPR :: modify :: D :: v9[#(9)] = #(4.74 d)::
1815 :: EXPR :: modify :: D :: v9[#(10)] = #(4.99 d)::
1819 :: EXPR :: modify :: D :: v9[#(11)] = #(5.22 d)::
1823 :: EXPR :: modify :: D :: v9[#(12)] = #(5.46 d)::
1827 :: EXPR :: modify :: D :: v9[#(13)] = #(5.7 d)::
1831 :: EXPR :: modify :: D :: v9[#(14)] = #(5.94 d)::
1835 :: EXPR :: modify :: D :: v9[#(15)] = #(6.13 d)::
1839 :: EXPR :: modify :: D :: v9[#(16)] = #(6.36 d)::
1843 :: EXPR :: modify :: D :: v9[#(17)] = #(6.52 d)::
1847 :: EXPR :: modify :: D :: v9[#(18)] = #(6.68 d)::
1851 :: EXPR :: modify :: D :: v9[#(19)] = #(6.91 d)::
1857 :: NORM :: declaration :: [D :: v48 = new []::
1858 :: EXPR :: modify :: D :: v48[#(0)] = #(1.33 d)::
1862 :: EXPR :: modify :: D :: v48[#(1)] = #(0.88 d)::
1866 :: EXPR :: modify :: D :: v48[#(2)] = #(0.73 d)::
1870 :: EXPR :: modify :: D :: v48[#(3)] = #(0.71 d)::
1874 :: EXPR :: modify :: D :: v48[#(4)] = #(0.74 d)::
1878 :: EXPR :: modify :: D :: v48[#(5)] = #(0.8 d)::
1882 :: EXPR :: modify :: D :: v48[#(6)] = #(0.86 d)::
1886 :: EXPR :: modify :: D :: v48[#(7)] = #(0.92 d)::
1890 :: EXPR :: modify :: D :: v48[#(8)] = #(0.98 d)::
1894 :: EXPR :: modify :: D :: v48[#(9)] = #(1.04 d)::
1898 :: EXPR :: modify :: D :: v48[#(10)] = #(1.08 d)::
1902 :: EXPR :: modify :: D :: v48[#(11)] = #(1.1 d)::
1906 :: EXPR :: modify :: D :: v48[#(12)] = #(1.15 d)::
1910 :: EXPR :: modify :: D :: v48[#(13)] = #(1.19 d)::
1914 :: EXPR :: modify :: D :: v48[#(14)] = #(1.23 d)::
1918 :: EXPR :: modify :: D :: v48[#(15)] = #(1.25 d)::
1922 :: EXPR :: modify :: D :: v48[#(16)] = #(1.32 d)::
1926 :: EXPR :: modify :: D :: v48[#(17)] = #(1.34 d)::
1930 :: EXPR :: modify :: D :: v48[#(18)] = #(1.36 d)::
1934 :: EXPR :: modify :: D :: v48[#(19)] = #(1.45 d)::
1940 :: NORM :: declaration :: [D :: v69 = new []::
1941 :: EXPR :: modify :: D :: v69[#(0)] = #(0.0 d)::
1945 :: EXPR :: modify :: D :: v69[#(1)] = #(11.5 d)::
1949 :: EXPR :: modify :: D :: v69[#(2)] = #(23.32 d)::
1953 :: EXPR :: modify :: D :: v69[#(3)] = #(35.95 d)::
1957 :: EXPR :: modify :: D :: v69[#(4)] = #(49.02 d)::
1961 :: EXPR :: modify :: D :: v69[#(5)] = #(62.44 d)::
1965 :: EXPR :: modify :: D :: v69[#(6)] = #(76.28 d)::
1969 :: EXPR :: modify :: D :: v69[#(7)] = #(90.26 d)::
1973 :: EXPR :: modify :: D :: v69[#(8)] = #(104.86 d)::
1977 :: EXPR :: modify :: D :: v69[#(9)] = #(119.97 d)::
1981 :: EXPR :: modify :: D :: v69[#(10)] = #(134.86 d)::
1985 :: EXPR :: modify :: D :: v69[#(11)] = #(150.54 d)::
1989 :: EXPR :: modify :: D :: v69[#(12)] = #(164.86 d)::
1993 :: EXPR :: modify :: D :: v69[#(13)] = #(179.57 d)::
1997 :: EXPR :: modify :: D :: v69[#(14)] = #(194.39 d)::
2001 :: EXPR :: modify :: D :: v69[#(15)] = #(209.38 d)::
2005 :: EXPR :: modify :: D :: v69[#(16)] = #(224.74 d)::
2009 :: EXPR :: modify :: D :: v69[#(17)] = #(238.96 d)::
2013 :: EXPR :: modify :: D :: v69[#(18)] = #(253.72 d)::
2017 :: EXPR :: modify :: D :: v69[#(19)] = #(270.79 d)::
2023 :: NORM :: declaration :: [D :: v90 = new []::
2024 :: EXPR :: modify :: D :: v90[#(0)] = #(0.0 d)::
2028 :: EXPR :: modify :: D :: v90[#(1)] = #(9.88 d)::
2032 :: EXPR :: modify :: D :: v90[#(2)] = #(14.34 d)::
2036 :: EXPR :: modify :: D :: v90[#(3)] = #(17.99 d)::
2040 :: EXPR :: modify :: D :: v90[#(4)] = #(21.1 d)::
2044 :: EXPR :: modify :: D :: v90[#(5)] = #(23.89 d)::
2048 :: EXPR :: modify :: D :: v90[#(6)] = #(26.55 d)::
2052 :: EXPR :: modify :: D :: v90[#(7)] = #(29.0 d)::
2056 :: EXPR :: modify :: D :: v90[#(8)] = #(31.11 d)::
2060 :: EXPR :: modify :: D :: v90[#(9)] = #(33.1 d)::
2064 :: EXPR :: modify :: D :: v90[#(10)] = #(35.02 d)::
2068 :: EXPR :: modify :: D :: v90[#(11)] = #(36.03 d)::
2072 :: EXPR :: modify :: D :: v90[#(12)] = #(37.19 d)::
2076 :: EXPR :: modify :: D :: v90[#(13)] = #(38.82 d)::
2080 :: EXPR :: modify :: D :: v90[#(14)] = #(41.04 d)::
2084 :: EXPR :: modify :: D :: v90[#(15)] = #(43.35 d)::
2088 :: EXPR :: modify :: D :: v90[#(16)] = #(45.45 d)::
2092 :: EXPR :: modify :: D :: v90[#(17)] = #(48.41 d)::
2096 :: EXPR :: modify :: D :: v90[#(18)] = #(50.87 d)::
2100 :: EXPR :: modify :: D :: v90[#(19)] = #(52.27 d)::
2106 :: NORM :: declaration :: [D :: v110 = new []::
2107 :: EXPR :: modify :: D :: v110[#(0)] = #(1.98 d)::
2111 :: EXPR :: modify :: D :: v110[#(1)] = #(1.97 d)::
2115 :: EXPR :: modify :: D :: v110[#(2)] = #(2.22 d)::
2119 :: EXPR :: modify :: D :: v110[#(3)] = #(2.54 d)::
2123 :: EXPR :: modify :: D :: v110[#(4)] = #(2.87 d)::
2127 :: EXPR :: modify :: D :: v110[#(5)] = #(3.18 d)::
2131 :: EXPR :: modify :: D :: v110[#(6)] = #(3.48 d)::
2135 :: EXPR :: modify :: D :: v110[#(7)] = #(3.77 d)::
2139 :: EXPR :: modify :: D :: v110[#(8)] = #(4.05 d)::
2143 :: EXPR :: modify :: D :: v110[#(9)] = #(4.31 d)::
2147 :: EXPR :: modify :: D :: v110[#(10)] = #(4.57 d)::
2151 :: EXPR :: modify :: D :: v110[#(11)] = #(4.82 d)::
2155 :: EXPR :: modify :: D :: v110[#(12)] = #(5.03 d)::
2159 :: EXPR :: modify :: D :: v110[#(13)] = #(5.24 d)::
2163 :: EXPR :: modify :: D :: v110[#(14)] = #(5.43 d)::
2167 :: EXPR :: modify :: D :: v110[#(15)] = #(5.64 d)::
2171 :: EXPR :: modify :: D :: v110[#(16)] = #(5.82 d)::
2175 :: EXPR :: modify :: D :: v110[#(17)] = #(6.02 d)::
2179 :: EXPR :: modify :: D :: v110[#(18)] = #(6.21 d)::
2183 :: EXPR :: modify :: D :: v110[#(19)] = #(6.42 d)::
2189 :: NORM :: declaration :: [D :: v130 = new []::
2190 :: EXPR :: modify :: D :: v130[#(0)] = #(1.15 d)::
2194 :: EXPR :: modify :: D :: v130[#(1)] = #(0.73 d)::
2198 :: EXPR :: modify :: D :: v130[#(2)] = #(0.63 d)::
2202 :: EXPR :: modify :: D :: v130[#(3)] = #(0.64 d)::
2206 :: EXPR :: modify :: D :: v130[#(4)] = #(0.71 d)::
2210 :: EXPR :: modify :: D :: v130[#(5)] = #(0.8 d)::
2214 :: EXPR :: modify :: D :: v130[#(6)] = #(0.87 d)::
2218 :: EXPR :: modify :: D :: v130[#(7)] = #(0.95 d)::
2222 :: EXPR :: modify :: D :: v130[#(8)] = #(1.01 d)::
2226 :: EXPR :: modify :: D :: v130[#(9)] = #(1.07 d)::
2230 :: EXPR :: modify :: D :: v130[#(10)] = #(1.13 d)::
2234 :: EXPR :: modify :: D :: v130[#(11)] = #(1.19 d)::
2238 :: EXPR :: modify :: D :: v130[#(12)] = #(1.22 d)::
2242 :: EXPR :: modify :: D :: v130[#(13)] = #(1.25 d)::
2246 :: EXPR :: modify :: D :: v130[#(14)] = #(1.28 d)::
2250 :: EXPR :: modify :: D :: v130[#(15)] = #(1.32 d)::
2254 :: EXPR :: modify :: D :: v130[#(16)] = #(1.35 d)::
2258 :: EXPR :: modify :: D :: v130[#(17)] = #(1.39 d)::
2262 :: EXPR :: modify :: D :: v130[#(18)] = #(1.45 d)::
2266 :: EXPR :: modify :: D :: v130[#(19)] = #(1.5 d)::
2272 :: NORM :: declaration :: [D :: v143 = new []::
2273 :: EXPR :: modify :: D :: v143[#(0)] = #(0.0 d)::
2277 :: EXPR :: modify :: D :: v143[#(1)] = #(10.12 d)::
2281 :: EXPR :: modify :: D :: v143[#(2)] = #(20.25 d)::
2285 :: EXPR :: modify :: D :: v143[#(3)] = #(31.29 d)::
2289 :: EXPR :: modify :: D :: v143[#(4)] = #(42.95 d)::
2293 :: EXPR :: modify :: D :: v143[#(5)] = #(55.2 d)::
2297 :: EXPR :: modify :: D :: v143[#(6)] = #(67.53 d)::
2301 :: EXPR :: modify :: D :: v143[#(7)] = #(80.15 d)::
2305 :: EXPR :: modify :: D :: v143[#(8)] = #(93.3 d)::
2309 :: EXPR :: modify :: D :: v143[#(9)] = #(106.47 d)::
2313 :: EXPR :: modify :: D :: v143[#(10)] = #(120.52 d)::
2317 :: EXPR :: modify :: D :: v143[#(11)] = #(134.38 d)::
2321 :: EXPR :: modify :: D :: v143[#(12)] = #(148.59 d)::
2325 :: EXPR :: modify :: D :: v143[#(13)] = #(162.58 d)::
2329 :: EXPR :: modify :: D :: v143[#(14)] = #(176.64 d)::
2333 :: EXPR :: modify :: D :: v143[#(15)] = #(191.23 d)::
2337 :: EXPR :: modify :: D :: v143[#(16)] = #(204.12 d)::
2341 :: EXPR :: modify :: D :: v143[#(17)] = #(218.64 d)::
2345 :: EXPR :: modify :: D :: v143[#(18)] = #(231.82 d)::
2349 :: EXPR :: modify :: D :: v143[#(19)] = #(243.43 d)::
2355 :: NORM :: declaration :: [D :: v163 = new []::
2356 :: EXPR :: modify :: D :: v163[#(0)] = #(0.0 d)::
2360 :: EXPR :: modify :: D :: v163[#(1)] = #(9.8 d)::
2364 :: EXPR :: modify :: D :: v163[#(2)] = #(14.44 d)::
2368 :: EXPR :: modify :: D :: v163[#(3)] = #(18.14 d)::
2372 :: EXPR :: modify :: D :: v163[#(4)] = #(21.35 d)::
2376 :: EXPR :: modify :: D :: v163[#(5)] = #(24.37 d)::
2380 :: EXPR :: modify :: D :: v163[#(6)] = #(27.0 d)::
2384 :: EXPR :: modify :: D :: v163[#(7)] = #(29.68 d)::
2388 :: EXPR :: modify :: D :: v163[#(8)] = #(32.22 d)::
2392 :: EXPR :: modify :: D :: v163[#(9)] = #(34.37 d)::
2396 :: EXPR :: modify :: D :: v163[#(10)] = #(36.65 d)::
2400 :: EXPR :: modify :: D :: v163[#(11)] = #(38.63 d)::
2404 :: EXPR :: modify :: D :: v163[#(12)] = #(40.31 d)::
2408 :: EXPR :: modify :: D :: v163[#(13)] = #(42.16 d)::
2412 :: EXPR :: modify :: D :: v163[#(14)] = #(43.78 d)::
2416 :: EXPR :: modify :: D :: v163[#(15)] = #(44.98 d)::
2420 :: EXPR :: modify :: D :: v163[#(16)] = #(47.08 d)::
2424 :: EXPR :: modify :: D :: v163[#(17)] = #(49.09 d)::
2428 :: EXPR :: modify :: D :: v163[#(18)] = #(50.78 d)::
2432 :: EXPR :: modify :: D :: v163[#(19)] = #(52.15 d)::
2438 :: NORM :: declaration :: [D :: v184 = new []::
2439 :: EXPR :: modify :: D :: v184[#(0)] = #(1.0 d)::
2443 :: EXPR :: modify :: D :: v184[#(1)] = #(0.92 d)::
2447 :: EXPR :: modify :: D :: v184[#(2)] = #(0.841 d)::
2451 :: EXPR :: modify :: D :: v184[#(3)] = #(0.764 d)::
2455 :: EXPR :: modify :: D :: v184[#(4)] = #(0.689 d)::
2459 :: EXPR :: modify :: D :: v184[#(5)] = #(0.617 d)::
2463 :: EXPR :: modify :: D :: v184[#(6)] = #(0.549 d)::
2467 :: EXPR :: modify :: D :: v184[#(7)] = #(0.484 d)::
2471 :: EXPR :: modify :: D :: v184[#(8)] = #(0.424 d)::
2475 :: EXPR :: modify :: D :: v184[#(9)] = #(0.368 d)::
2479 :: EXPR :: modify :: D :: v184[#(10)] = #(0.317 d)::
2483 :: EXPR :: modify :: D :: v184[#(11)] = #(0.271 d)::
2487 :: EXPR :: modify :: D :: v184[#(12)] = #(0.23 d)::
2491 :: EXPR :: modify :: D :: v184[#(13)] = #(0.194 d)::
2495 :: EXPR :: modify :: D :: v184[#(14)] = #(0.162 d)::
2499 :: EXPR :: modify :: D :: v184[#(15)] = #(0.134 d)::
2503 :: EXPR :: modify :: D :: v184[#(16)] = #(0.11 d)::
2507 :: EXPR :: modify :: D :: v184[#(17)] = #(0.0891 d)::
2511 :: EXPR :: modify :: D :: v184[#(18)] = #(0.0719 d)::
2515 :: EXPR :: modify :: D :: v184[#(19)] = #(0.0574 d)::
2519 :: EXPR :: modify :: D :: v184[#(20)] = #(0.0455 d)::
2523 :: EXPR :: modify :: D :: v184[#(21)] = #(0.0357 d)::
2527 :: EXPR :: modify :: D :: v184[#(22)] = #(0.0278 d)::
2531 :: EXPR :: modify :: D :: v184[#(23)] = #(0.0214 d)::
2535 :: EXPR :: modify :: D :: v184[#(24)] = #(0.0164 d)::
2539 :: EXPR :: modify :: D :: v184[#(25)] = #(0.0124 d)::
2543 :: EXPR :: modify :: D :: v184[#(26)] = #(0.00932 d)::
2547 :: EXPR :: modify :: D :: v184[#(27)] = #(0.00693 d)::
2551 :: EXPR :: modify :: D :: v184[#(28)] = #(0.00511 d)::
2555 :: EXPR :: modify :: D :: v184[#(29)] = #(0.00373 d)::
2559 :: EXPR :: modify :: D :: v184[#(30)] = #(0.0027 d)::
2563 :: EXPR :: modify :: D :: v184[#(31)] = #(0.00194 d)::
2567 :: EXPR :: modify :: D :: v184[#(32)] = #(0.00137 d)::
2571 :: EXPR :: modify :: D :: v184[#(33)] = #(9.67E-4 d)::
2575 :: EXPR :: modify :: D :: v184[#(34)] = #(6.74E-4 d)::
2579 :: EXPR :: modify :: D :: v184[#(35)] = #(4.65E-4 d)::
2583 :: EXPR :: modify :: D :: v184[#(36)] = #(3.18E-4 d)::
2587 :: EXPR :: modify :: D :: v184[#(37)] = #(2.16E-4 d)::
2591 :: EXPR :: modify :: D :: v184[#(38)] = #(1.45E-4 d)::
2595 :: EXPR :: modify :: D :: v184[#(39)] = #(9.62E-5 d)::
2599 :: EXPR :: modify :: D :: v184[#(40)] = #(6.33E-5 d)::
2603 :: EXPR :: modify :: D :: v184[#(41)] = #(4.13E-5 d)::
2607 :: EXPR :: modify :: D :: v184[#(42)] = #(2.67E-5 d)::
2611 :: EXPR :: modify :: D :: v184[#(43)] = #(1.71E-5 d)::
2615 :: EXPR :: modify :: D :: v184[#(44)] = #(1.08E-5 d)::
2619 :: EXPR :: modify :: D :: v184[#(45)] = #(6.8E-6 d)::
2623 :: EXPR :: modify :: D :: v184[#(46)] = #(4.22E-6 d)::
2627 :: EXPR :: modify :: D :: v184[#(47)] = #(2.6E-6 d)::
2631 :: EXPR :: modify :: D :: v184[#(48)] = #(1.59E-6 d)::
2635 :: EXPR :: modify :: D :: v184[#(49)] = #(9.58E-7 d)::
2639 :: EXPR :: modify :: D :: v184[#(50)] = #(5.73E-7 d)::
2643 :: EXPR :: modify :: D :: v184[#(51)] = #(3.4E-7 d)::
2647 :: EXPR :: modify :: D :: v184[#(52)] = #(1.99E-7 d)::
2651 :: EXPR :: modify :: D :: v184[#(53)] = #(1.16E-7 d)::
2655 :: EXPR :: modify :: D :: v184[#(54)] = #(6.66E-8 d)::
2659 :: EXPR :: modify :: D :: v184[#(55)] = #(3.8E-8 d)::
2663 :: EXPR :: modify :: D :: v184[#(56)] = #(2.14E-8 d)::
2667 :: EXPR :: modify :: D :: v184[#(57)] = #(1.2E-8 d)::
2671 :: EXPR :: modify :: D :: v184[#(58)] = #(6.63E-9 d)::
2675 :: EXPR :: modify :: D :: v184[#(59)] = #(3.64E-9 d)::
2679 :: EXPR :: modify :: D :: v184[#(60)] = #(1.97E-9 d)::
2683 :: EXPR :: modify :: D :: v184[#(61)] = #(1.06E-9 d)::
2687 :: EXPR :: modify :: D :: v184[#(62)] = #(5.65E-10 d)::
2691 :: EXPR :: modify :: D :: v184[#(63)] = #(2.98E-10 d)::
2695 :: EXPR :: modify :: D :: v184[#(64)] = #(1.55E-10 d)::
2699 :: EXPR :: modify :: D :: v184[#(65)] = #(8.03E-11 d)::
2703 :: EXPR :: modify :: D :: v184[#(66)] = #(4.11E-11 d)::
2707 :: EXPR :: modify :: D :: v184[#(67)] = #(2.08E-11 d)::
2711 :: EXPR :: modify :: D :: v184[#(68)] = #(1.05E-11 d)::
2715 :: EXPR :: modify :: D :: v184[#(69)] = #(5.2E-12 d)::
2719 :: EXPR :: modify :: D :: v184[#(70)] = #(2.56E-12 d)::
2723 :: EXPR :: modify :: D :: v184[#(71)] = #(1.25E-12 d)::
2727 :: EXPR :: modify :: D :: v184[#(72)] = #(6.02E-13 d)::
2731 :: EXPR :: modify :: D :: v184[#(73)] = #(2.88E-13 d)::
2735 :: EXPR :: modify :: D :: v184[#(74)] = #(1.36E-13 d)::
2739 :: EXPR :: modify :: D :: v184[#(75)] = #(6.38E-14 d)::
2743 :: EXPR :: modify :: D :: v184[#(76)] = #(2.96E-14 d)::
2747 :: EXPR :: modify :: D :: v184[#(77)] = #(1.36E-14 d)::
2751 :: EXPR :: modify :: D :: v184[#(78)] = #(6.19E-15 d)::
2755 :: EXPR :: modify :: D :: v184[#(79)] = #(2.79E-15 d)::
2759 :: EXPR :: modify :: D :: v184[#(80)] = #(1.24E-15 d)::
2763 :: EXPR :: modify :: D :: v184[#(81)] = #(5.5E-16 d)::
2767 :: EXPR :: modify :: D :: v184[#(82)] = #(2.4E-16 d)::
2771 :: EXPR :: modify :: D :: v184[#(83)] = #(1.04E-16 d)::
2775 :: EXPR :: modify :: D :: v184[#(84)] = #(4.46E-17 d)::
2779 :: EXPR :: modify :: D :: v184[#(85)] = #(1.9E-17 d)::
2783 :: EXPR :: modify :: D :: v184[#(86)] = #(7.97E-18 d)::
2787 :: EXPR :: modify :: D :: v184[#(87)] = #(3.32E-18 d)::
2791 :: EXPR :: modify :: D :: v184[#(88)] = #(1.37E-18 d)::
2795 :: EXPR :: modify :: D :: v184[#(89)] = #(5.58E-19 d)::
2799 :: EXPR :: modify :: D :: v184[#(90)] = #(2.26E-19 d)::
2803 :: EXPR :: modify :: D :: v184[#(91)] = #(9.03E-20 d)::
2807 :: EXPR :: modify :: D :: v184[#(92)] = #(3.58E-20 d)::
2811 :: EXPR :: modify :: D :: v184[#(93)] = #(1.4E-20 d)::
2815 :: EXPR :: modify :: D :: v184[#(94)] = #(5.46E-21 d)::
2819 :: EXPR :: modify :: D :: v184[#(95)] = #(2.1E-21 d)::
2823 :: EXPR :: modify :: D :: v184[#(96)] = #(7.99E-22 d)::
2827 :: EXPR :: modify :: D :: v184[#(97)] = #(3.02E-22 d)::
2831 :: EXPR :: modify :: D :: v184[#(98)] = #(1.13E-22 d)::
2835 :: EXPR :: modify :: D :: v184[#(99)] = #(4.16E-23 d)::
2839 :: EXPR :: modify :: D :: v184[#(100)] = #(1.52E-23 d)::
2843 :: EXPR :: modify :: D :: v184[#(101)] = #(5.52E-24 d)::
2847 :: EXPR :: modify :: D :: v184[#(102)] = #(1.98E-24 d)::
2851 :: EXPR :: modify :: D :: v184[#(103)] = #(7.05E-25 d)::
2855 :: EXPR :: modify :: D :: v184[#(104)] = #(2.48E-25 d)::
2859 :: EXPR :: modify :: D :: v184[#(105)] = #(8.64E-26 d)::
2863 :: EXPR :: modify :: D :: v184[#(106)] = #(2.98E-26 d)::
2867 :: EXPR :: modify :: D :: v184[#(107)] = #(1.02E-26 d)::
2871 :: EXPR :: modify :: D :: v184[#(108)] = #(3.44E-27 d)::
2875 :: EXPR :: modify :: D :: v184[#(109)] = #(1.15E-27 d)::
2879 :: EXPR :: modify :: D :: v184[#(110)] = #(3.82E-28 d)::
2883 :: EXPR :: modify :: D :: v184[#(111)] = #(1.25E-28 d)::
2887 :: EXPR :: modify :: D :: v184[#(112)] = #(4.08E-29 d)::
2891 :: EXPR :: modify :: D :: v184[#(113)] = #(1.31E-29 d)::
2895 :: EXPR :: modify :: D :: v184[#(114)] = #(4.18E-30 d)::
2899 :: EXPR :: modify :: D :: v184[#(115)] = #(1.32E-30 d)::
2903 :: EXPR :: modify :: D :: v184[#(116)] = #(4.12E-31 d)::
2907 :: EXPR :: modify :: D :: v184[#(117)] = #(1.27E-31 d)::
2911 :: EXPR :: modify :: D :: v184[#(118)] = #(3.9E-32 d)::
2915 :: EXPR :: modify :: D :: v184[#(119)] = #(1.18E-32 d)::
2919 :: EXPR :: modify :: D :: v184[#(120)] = #(3.55E-33 d)::
2923 :: EXPR :: modify :: D :: v184[#(121)] = #(1.06E-33 d)::
2927 :: EXPR :: modify :: D :: v184[#(122)] = #(3.11E-34 d)::
2931 :: EXPR :: modify :: D :: v184[#(123)] = #(9.06E-35 d)::
2935 :: EXPR :: modify :: D :: v184[#(124)] = #(2.61E-35 d)::
2939 :: EXPR :: modify :: D :: v184[#(125)] = #(7.47E-36 d)::
2943 :: EXPR :: modify :: D :: v184[#(126)] = #(2.11E-36 d)::
2947 :: EXPR :: modify :: D :: v184[#(127)] = #(5.91E-37 d)::
2951 :: EXPR :: modify :: D :: v184[#(128)] = #(1.64E-37 d)::
2955 :: EXPR :: modify :: D :: v184[#(129)] = #(4.5E-38 d)::
2959 :: EXPR :: modify :: D :: v184[#(130)] = #(1.22E-38 d)::
2963 :: EXPR :: modify :: D :: v184[#(131)] = #(3.29E-39 d)::
2967 :: EXPR :: modify :: D :: v184[#(132)] = #(8.77E-40 d)::
2971 :: EXPR :: modify :: D :: v184[#(133)] = #(2.31E-40 d)::
2975 :: EXPR :: modify :: D :: v184[#(134)] = #(6.05E-41 d)::
2979 :: EXPR :: modify :: D :: v184[#(135)] = #(1.56E-41 d)::
2983 :: EXPR :: modify :: D :: v184[#(136)] = #(4.0E-42 d)::
2987 :: EXPR :: modify :: D :: v184[#(137)] = #(1.02E-42 d)::
2991 :: EXPR :: modify :: D :: v184[#(138)] = #(2.55E-43 d)::
2995 :: EXPR :: modify :: D :: v184[#(139)] = #(6.33E-44 d)::
2999 :: EXPR :: modify :: D :: v184[#(140)] = #(1.56E-44 d)::
3003 :: EXPR :: modify :: D :: v184[#(141)] = #(3.8E-45 d)::
3007 :: EXPR :: modify :: D :: v184[#(142)] = #(9.16E-46 d)::
3011 :: EXPR :: modify :: D :: v184[#(143)] = #(2.19E-46 d)::
3015 :: EXPR :: modify :: D :: v184[#(144)] = #(5.17E-47 d)::
3019 :: EXPR :: modify :: D :: v184[#(145)] = #(1.21E-47 d)::
3023 :: EXPR :: modify :: D :: v184[#(146)] = #(2.81E-48 d)::
3027 :: EXPR :: modify :: D :: v184[#(147)] = #(6.45E-49 d)::
3031 :: EXPR :: modify :: D :: v184[#(148)] = #(1.46E-49 d)::
3035 :: EXPR :: modify :: D :: v184[#(149)] = #(3.3E-50 d)::
3041 :: NORM :: declaration :: [D :: v463 = new []::
3042 :: EXPR :: modify :: D :: v463[#(0)] = #(0.0 d)::
3046 :: EXPR :: modify :: D :: v463[#(1)] = #(0.73 d)::
3050 :: EXPR :: modify :: D :: v463[#(2)] = #(1.24 d)::
3054 :: EXPR :: modify :: D :: v463[#(3)] = #(1.64 d)::
3058 :: EXPR :: modify :: D :: v463[#(4)] = #(1.99 d)::
3062 :: EXPR :: modify :: D :: v463[#(5)] = #(2.3 d)::
3066 :: EXPR :: modify :: D :: v463[#(6)] = #(2.58 d)::
3070 :: EXPR :: modify :: D :: v463[#(7)] = #(2.83 d)::
3074 :: EXPR :: modify :: D :: v463[#(8)] = #(3.07 d)::
3078 :: EXPR :: modify :: D :: v463[#(9)] = #(3.29 d)::
3082 :: EXPR :: modify :: D :: v463[#(10)] = #(3.5 d)::
3086 :: EXPR :: modify :: D :: v463[#(11)] = #(3.7 d)::
3090 :: EXPR :: modify :: D :: v463[#(12)] = #(3.89 d)::
3094 :: EXPR :: modify :: D :: v463[#(13)] = #(4.07 d)::
3098 :: EXPR :: modify :: D :: v463[#(14)] = #(4.25 d)::
3102 :: EXPR :: modify :: D :: v463[#(15)] = #(4.42 d)::
3106 :: EXPR :: modify :: D :: v463[#(16)] = #(4.58 d)::
3110 :: EXPR :: modify :: D :: v463[#(17)] = #(4.74 d)::
3114 :: EXPR :: modify :: D :: v463[#(18)] = #(4.89 d)::
3118 :: EXPR :: modify :: D :: v463[#(19)] = #(5.04 d)::
3122 :: EXPR :: modify :: D :: v463[#(20)] = #(5.19 d)::
3126 :: EXPR :: modify :: D :: v463[#(21)] = #(5.33 d)::
3130 :: EXPR :: modify :: D :: v463[#(22)] = #(5.46 d)::
3134 :: EXPR :: modify :: D :: v463[#(23)] = #(5.6 d)::
3138 :: EXPR :: modify :: D :: v463[#(24)] = #(5.73 d)::
3142 :: EXPR :: modify :: D :: v463[#(25)] = #(5.86 d)::
3146 :: EXPR :: modify :: D :: v463[#(26)] = #(5.99 d)::
3150 :: EXPR :: modify :: D :: v463[#(27)] = #(6.11 d)::
3154 :: EXPR :: modify :: D :: v463[#(28)] = #(6.23 d)::
3158 :: EXPR :: modify :: D :: v463[#(29)] = #(6.35 d)::
3162 :: EXPR :: modify :: D :: v463[#(30)] = #(6.47 d)::
3166 :: EXPR :: modify :: D :: v463[#(31)] = #(6.58 d)::
3170 :: EXPR :: modify :: D :: v463[#(32)] = #(6.7 d)::
3174 :: EXPR :: modify :: D :: v463[#(33)] = #(6.81 d)::
3178 :: EXPR :: modify :: D :: v463[#(34)] = #(6.92 d)::
3182 :: EXPR :: modify :: D :: v463[#(35)] = #(7.02 d)::
3186 :: EXPR :: modify :: D :: v463[#(36)] = #(7.13 d)::
3190 :: EXPR :: modify :: D :: v463[#(37)] = #(7.24 d)::
3194 :: EXPR :: modify :: D :: v463[#(38)] = #(7.34 d)::
3198 :: EXPR :: modify :: D :: v463[#(39)] = #(7.44 d)::
3202 :: EXPR :: modify :: D :: v463[#(40)] = #(7.54 d)::
3206 :: EXPR :: modify :: D :: v463[#(41)] = #(7.64 d)::
3210 :: EXPR :: modify :: D :: v463[#(42)] = #(7.74 d)::
3214 :: EXPR :: modify :: D :: v463[#(43)] = #(7.84 d)::
3218 :: EXPR :: modify :: D :: v463[#(44)] = #(7.93 d)::
3222 :: EXPR :: modify :: D :: v463[#(45)] = #(8.03 d)::
3226 :: EXPR :: modify :: D :: v463[#(46)] = #(8.12 d)::
3230 :: EXPR :: modify :: D :: v463[#(47)] = #(8.21 d)::
3234 :: EXPR :: modify :: D :: v463[#(48)] = #(8.3 d)::
3238 :: EXPR :: modify :: D :: v463[#(49)] = #(8.4 d)::
3242 :: EXPR :: modify :: D :: v463[#(50)] = #(8.49 d)::
3246 :: EXPR :: modify :: D :: v463[#(51)] = #(8.57 d)::
3250 :: EXPR :: modify :: D :: v463[#(52)] = #(8.66 d)::
3254 :: EXPR :: modify :: D :: v463[#(53)] = #(8.75 d)::
3258 :: EXPR :: modify :: D :: v463[#(54)] = #(8.84 d)::
3262 :: EXPR :: modify :: D :: v463[#(55)] = #(8.92 d)::
3266 :: EXPR :: modify :: D :: v463[#(56)] = #(9.01 d)::
3270 :: EXPR :: modify :: D :: v463[#(57)] = #(9.09 d)::
3274 :: EXPR :: modify :: D :: v463[#(58)] = #(9.17 d)::
3278 :: EXPR :: modify :: D :: v463[#(59)] = #(9.25 d)::
3282 :: EXPR :: modify :: D :: v463[#(60)] = #(9.34 d)::
3286 :: EXPR :: modify :: D :: v463[#(61)] = #(9.42 d)::
3290 :: EXPR :: modify :: D :: v463[#(62)] = #(9.5 d)::
3294 :: EXPR :: modify :: D :: v463[#(63)] = #(9.58 d)::
3298 :: EXPR :: modify :: D :: v463[#(64)] = #(9.66 d)::
3302 :: EXPR :: modify :: D :: v463[#(65)] = #(9.73 d)::
3306 :: EXPR :: modify :: D :: v463[#(66)] = #(9.81 d)::
3310 :: EXPR :: modify :: D :: v463[#(67)] = #(9.89 d)::
3314 :: EXPR :: modify :: D :: v463[#(68)] = #(9.97 d)::
3318 :: EXPR :: modify :: D :: v463[#(69)] = #(10.04 d)::
3322 :: EXPR :: modify :: D :: v463[#(70)] = #(10.12 d)::
3326 :: EXPR :: modify :: D :: v463[#(71)] = #(10.19 d)::
3330 :: EXPR :: modify :: D :: v463[#(72)] = #(10.27 d)::
3334 :: EXPR :: modify :: D :: v463[#(73)] = #(10.34 d)::
3338 :: EXPR :: modify :: D :: v463[#(74)] = #(10.41 d)::
3342 :: EXPR :: modify :: D :: v463[#(75)] = #(10.49 d)::
3346 :: EXPR :: modify :: D :: v463[#(76)] = #(10.56 d)::
3350 :: EXPR :: modify :: D :: v463[#(77)] = #(10.63 d)::
3354 :: EXPR :: modify :: D :: v463[#(78)] = #(10.7 d)::
3358 :: EXPR :: modify :: D :: v463[#(79)] = #(10.77 d)::
3362 :: EXPR :: modify :: D :: v463[#(80)] = #(10.84 d)::
3366 :: EXPR :: modify :: D :: v463[#(81)] = #(10.91 d)::
3370 :: EXPR :: modify :: D :: v463[#(82)] = #(10.98 d)::
3374 :: EXPR :: modify :: D :: v463[#(83)] = #(11.05 d)::
3378 :: EXPR :: modify :: D :: v463[#(84)] = #(11.12 d)::
3382 :: EXPR :: modify :: D :: v463[#(85)] = #(11.19 d)::
3386 :: EXPR :: modify :: D :: v463[#(86)] = #(11.26 d)::
3390 :: EXPR :: modify :: D :: v463[#(87)] = #(11.32 d)::
3394 :: EXPR :: modify :: D :: v463[#(88)] = #(11.39 d)::
3398 :: EXPR :: modify :: D :: v463[#(89)] = #(11.46 d)::
3402 :: EXPR :: modify :: D :: v463[#(90)] = #(11.52 d)::
3406 :: EXPR :: modify :: D :: v463[#(91)] = #(11.59 d)::
3410 :: EXPR :: modify :: D :: v463[#(92)] = #(11.66 d)::
3414 :: EXPR :: modify :: D :: v463[#(93)] = #(11.72 d)::
3418 :: EXPR :: modify :: D :: v463[#(94)] = #(11.79 d)::
3422 :: EXPR :: modify :: D :: v463[#(95)] = #(11.85 d)::
3426 :: EXPR :: modify :: D :: v463[#(96)] = #(11.91 d)::
3430 :: EXPR :: modify :: D :: v463[#(97)] = #(11.98 d)::
3434 :: EXPR :: modify :: D :: v463[#(98)] = #(12.04 d)::
3438 :: EXPR :: modify :: D :: v463[#(99)] = #(12.1 d)::
3442 :: EXPR :: modify :: D :: v463[#(100)] = #(12.17 d)::
3446 :: EXPR :: modify :: D :: v463[#(101)] = #(12.23 d)::
3450 :: EXPR :: modify :: D :: v463[#(102)] = #(12.29 d)::
3454 :: EXPR :: modify :: D :: v463[#(103)] = #(12.35 d)::
3458 :: EXPR :: modify :: D :: v463[#(104)] = #(12.42 d)::
3462 :: EXPR :: modify :: D :: v463[#(105)] = #(12.48 d)::
3466 :: EXPR :: modify :: D :: v463[#(106)] = #(12.54 d)::
3470 :: EXPR :: modify :: D :: v463[#(107)] = #(12.6 d)::
3474 :: EXPR :: modify :: D :: v463[#(108)] = #(12.66 d)::
3478 :: EXPR :: modify :: D :: v463[#(109)] = #(12.72 d)::
3482 :: EXPR :: modify :: D :: v463[#(110)] = #(12.78 d)::
3486 :: EXPR :: modify :: D :: v463[#(111)] = #(12.84 d)::
3490 :: EXPR :: modify :: D :: v463[#(112)] = #(12.9 d)::
3494 :: EXPR :: modify :: D :: v463[#(113)] = #(12.96 d)::
3498 :: EXPR :: modify :: D :: v463[#(114)] = #(13.02 d)::
3502 :: EXPR :: modify :: D :: v463[#(115)] = #(13.07 d)::
3506 :: EXPR :: modify :: D :: v463[#(116)] = #(13.13 d)::
3510 :: EXPR :: modify :: D :: v463[#(117)] = #(13.19 d)::
3514 :: EXPR :: modify :: D :: v463[#(118)] = #(13.25 d)::
3518 :: EXPR :: modify :: D :: v463[#(119)] = #(13.31 d)::
3522 :: EXPR :: modify :: D :: v463[#(120)] = #(13.36 d)::
3526 :: EXPR :: modify :: D :: v463[#(121)] = #(13.42 d)::
3530 :: EXPR :: modify :: D :: v463[#(122)] = #(13.48 d)::
3534 :: EXPR :: modify :: D :: v463[#(123)] = #(13.53 d)::
3538 :: EXPR :: modify :: D :: v463[#(124)] = #(13.59 d)::
3542 :: EXPR :: modify :: D :: v463[#(125)] = #(13.65 d)::
3546 :: EXPR :: modify :: D :: v463[#(126)] = #(13.7 d)::
3550 :: EXPR :: modify :: D :: v463[#(127)] = #(13.76 d)::
3554 :: EXPR :: modify :: D :: v463[#(128)] = #(13.81 d)::
3558 :: EXPR :: modify :: D :: v463[#(129)] = #(13.87 d)::
3562 :: EXPR :: modify :: D :: v463[#(130)] = #(13.92 d)::
3566 :: EXPR :: modify :: D :: v463[#(131)] = #(13.98 d)::
3570 :: EXPR :: modify :: D :: v463[#(132)] = #(14.03 d)::
3574 :: EXPR :: modify :: D :: v463[#(133)] = #(14.09 d)::
3578 :: EXPR :: modify :: D :: v463[#(134)] = #(14.14 d)::
3582 :: EXPR :: modify :: D :: v463[#(135)] = #(14.19 d)::
3586 :: EXPR :: modify :: D :: v463[#(136)] = #(14.25 d)::
3590 :: EXPR :: modify :: D :: v463[#(137)] = #(14.3 d)::
3594 :: EXPR :: modify :: D :: v463[#(138)] = #(14.35 d)::
3598 :: EXPR :: modify :: D :: v463[#(139)] = #(14.41 d)::
3602 :: EXPR :: modify :: D :: v463[#(140)] = #(14.46 d)::
3606 :: EXPR :: modify :: D :: v463[#(141)] = #(14.51 d)::
3610 :: EXPR :: modify :: D :: v463[#(142)] = #(14.57 d)::
3614 :: EXPR :: modify :: D :: v463[#(143)] = #(14.62 d)::
3618 :: EXPR :: modify :: D :: v463[#(144)] = #(14.67 d)::
3622 :: EXPR :: modify :: D :: v463[#(145)] = #(14.72 d)::
3626 :: EXPR :: modify :: D :: v463[#(146)] = #(14.77 d)::
3630 :: EXPR :: modify :: D :: v463[#(147)] = #(14.83 d)::
3634 :: EXPR :: modify :: D :: v463[#(148)] = #(14.88 d)::
3638 :: EXPR :: modify :: D :: v463[#(149)] = #(14.93 d)::
5050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeCPMain.<clinit>()::CD,5054
5054 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
5072 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentTools.<clinit>()::CD,5076
5076 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
5090 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.<clinit>()::CD,5093:CD,5099:CD,5101:CD,5107:CD,5109:CD,5115:CD,5117:CD,5123:CD,5125:CD,5131:CD,5133:CD,5134:CD,5140:CD,5146:CD,5152:CD,5158
5093 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,5099
5099 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY = v2::
5101 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,5107
5107 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES = v6::
5109 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,5115
5115 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED = v10::
5117 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,5123
5123 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED = v14::
5125 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v18 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,5131
5131 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD = v18::
5133 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v23 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::
5134 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v24 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::DD,5136
5136 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(0)] = v24::
5140 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v25 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::DD,5142
5142 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(1)] = v25::
5146 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::DD,5148
5148 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(2)] = v26::
5152 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v27 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::DD,5154
5154 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(3)] = v27::
5158 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v28 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::DD,5160
5160 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(4)] = v28::
5209 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.ObsoleteBehavior.<clinit>()::CD,5212:CD,5218:CD,5220:CD,5226:CD,5228:CD,5234:CD,5236:CD,5237:CD,5243:CD,5249
5212 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,5218
5218 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT = v2::
5220 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,5226
5226 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE = v6::
5228 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,5234
5234 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION = v10::
5236 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v15 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior[]::
5237 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v16 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::DD,5239
5239 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
5243 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v17 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::DD,5245
5245 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
5249 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION::DD,5251
5251 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
5286 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.<clinit>()::CD,5289:CD,5295:CD,5297:CD,5303:CD,5305:CD,5311:CD,5313:CD,5319:CD,5321:CD,5327:CD,5329:CD,5335:CD,5337:CD,5343:CD,5345:CD,5351:CD,5353:CD,5354:CD,5360:CD,5366:CD,5372:CD,5378:CD,5384:CD,5390:CD,5396
5289 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,5295
5295 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDB = v2::
5297 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v6 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,5303
5303 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.SCOP = v6::
5305 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,5311
5311 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDP = v10::
5313 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,5319
5319 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.CATH = v14::
5321 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v18 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,5327
5327 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.URL = v18::
5329 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v22 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,5335
5335 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.FILE = v22::
5337 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,5343
5343 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.ECOD = v26::
5345 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v30 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,5351
5351 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.BIO = v30::
5353 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v35 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::
5354 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v36 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::DD,5356
5356 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
5360 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v37 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::DD,5362
5362 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = v37::
5366 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::DD,5368
5368 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = v38::
5372 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v39 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::DD,5374
5374 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = v39::
5378 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v40 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::DD,5380
5380 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = v40::
5384 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v41 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::DD,5386
5386 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(5)] = v41::
5390 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v42 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::DD,5392
5392 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(6)] = v42::
5396 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v43 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::DD,5398
5398 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(7)] = v43::
5570 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.<clinit>()::CD,5573:CD,5574:JM,34816:JM,34849:JM,34819:JM,34822:JM,34825:JM,34828:JM,34831:JM,34834:JM,34837:JM,34807:JM,34840:JM,34810:JM,34843:JM,34813:JM,34846:CD,5602:CD,5604:CD,5605:CD,5661:CD,5663:CD,5664:CD,5720:CD,5722:CD,5723:CD,5763:CD,5765:CD,5766:CD,5794:CD,5796:CD,5797:CD,5825:CD,5827:CD,5852:CD,5854:CD,5855:CD,5883:CD,5885:CD,5886:CD,5918:CD,5920:CD,5921:CD,5957:CD,5959:CD,5960:CD,5992:CD,5994:CD,6019:CD,6021:CD,6022:CD,6054:CD,6056:CD,6057:CD,6089:CD,6091:CD,6092:CD,6128:CD,6130:CD,6131:CD,6187:CD,6189:CD,6190:CD,6246:CD,6248:CD,6249:CD,6305:CD,6307:CD,6308:CD,6364:CD,6366:CD,6391:CD,6393:CD,6394:CD,6426:CD,6428:CD,6429:CD,6461:CD,6463:CD,6464:CD,6500:CD,6502:CD,6503:CD,6547:CD,6549:CD,6550:CD,6598:CD,6600:CD,6601:CD,6657:CD,6659:CD,6660:CD,6724:CD,6726:CD,6727:CD,6783:CD,6785:CD,6786:CD,6834:CD,6836:CD,6837:CD,6881:CD,6883:CD,6884:CD,6924:CD,6926:CD,6927:CD,6959:CD,6961:CD,6962:CD,6998:CD,7000:CD,7001:CD,7057:CD,7059:CD,7060:CD,7104:CD,7106:CD,7107:CD,7151:CD,7153:CD,7154:CD,7206:CD,7208:CD,7209:CD,7237:CD,7239:CD,7240:CD,7272:CD,7274:CD,7275:CD,7307:CD,7309:CD,7310:CD,7346:CD,7348:CD,7349:CD,7389:CD,7391:CD,7392:CD,7440:CD,7442:CD,7443:CD,7499:CD,7501:CD,7502:CD,7562:CD,7564:CD,7565:CD,7625:CD,7627:CD,7628:CD,7680:CD,7682:CD,7683:CD,7719:CD,7721:CD,7722:CD,7762:CD,7764:CD,7765:CD,7797:CD,7799:CD,7800:CD,7836:CD,7838:CD,7839:CD,7875:CD,7877:CD,7878:CD,7914:CD,7916:CD,7917:CD,7961:CD,7963:CD,7964:CD,8012:CD,8014:CD,8015:CD,8059:CD,8061:CD,8062:CD,8094:CD,8096:CD,8097:CD,8125:CD,8127:CD,8128:CD,8160:CD,8162:CD,8163:CD,8199:CD,8201:CD,8202:CD,8238:CD,8240:CD,8241:CD,8277:CD,8279:CD,8280:CD,8312:CD,8314:CD,8315:CD,8347:CD,8349:CD,8350:CD,8382:CD,8384:CD,8385:CD,8421:CD,8423:CD,8424:CD,8464:CD,8466:CD,8467:CD,8503:CD,8505:CD,8506:CD,8538:CD,8540:CD,8541:CD,8573:CD,8575:CD,8576:CD,8612:CD,8614:CD,8615:CD,8647:CD,8649:CD,8650:CD,8678:CD,8680:CD,8681:CD,8717:CD,8719:CD,8720:CD,8764:CD,8766:CD,8767:CD,8823:CD,8825:CD,8826:CD,8886:CD,8888:CD,8889:CD,8953:CD,8955:CD,8956:CD,9016:CD,9018:CD,9019:CD,9075:CD,9077:CD,9078:CD,9122:CD,9124:CD,9125:CD,9161:CD,9163:CD,9164:CD,9200:CD,9202:CD,9203:CD,9239:CD,9241:CD,9242:CD,9282:CD,9284:CD,9285:CD,9329:CD,9331:CD,9332:CD,9376:CD,9378:CD,9379:CD,9411:CD,9413:CD,9414:CD,9442:CD,9444:CD,9445:CD,9473:CD,9475:CD,9476:CD,9508:CD,9510:CD,9511:CD,9547:CD,9549:CD,9550:CD,9590:CD,9592:CD,9593:CD,9637:CD,9639:CD,9640:CD,9684:CD,9686:CD,9687:CD,9735:CD,9737:CD,9738:CD,9786:CD,9788:CD,9789:CD,9821:CD,9823:CD,9824:CD,9860:CD,9862:CD,9863:CD,9899:CD,9901:CD,9902:CD,9934:CD,9936:CD,9937:CD,9969:CD,9971:CD,9972:CD,10004:CD,10006:CD,10007:CD,10039:CD,10041:CD,10042:CD,10070:CD,10072:CD,10096:CD,10098:CD,10099:CD,10105:CD,10111:CD,10117:CD,10123:CD,10129:CD,10135:CD,10141:CD,10147:CD,10153:CD,10159:CD,10165:CD,10171:CD,10177:CD,10183:CD,10189:CD,10195:CD,10201:CD,10207:CD,10213:CD,10219:CD,10225:CD,10231:CD,10237:CD,10243:CD,10249:CD,10255:CD,10261:CD,10267:CD,10273:CD,10279:CD,10285:CD,10291:CD,10297:CD,10303:CD,10309:CD,10315:CD,10321:CD,10327:CD,10333:CD,10339:CD,10345:CD,10351:CD,10357:CD,10363:CD,10369:CD,10375:CD,10381:CD,10387:CD,10393:CD,10399:CD,10405:CD,10411:CD,10417:CD,10423:CD,10429:CD,10435:CD,10441:CD,10447:CD,10453:CD,10459:CD,10465:CD,10471:CD,10477:CD,10483:CD,10489:CD,10495:CD,10501:CD,10507:CD,10513:CD,10519:CD,10525:CD,10531:CD,10537:CD,10543:CD,10549:CD,10555:CD,10561:CD,10567:CD,10573:CD,10579:CD,10585:CD,10591:CD,10597:CD,10603:CD,10609:CD,10615:CD,10621:CD,10627:CD,10633:CD,10639:CD,10645:CD,10651:CD,10657:CD,10663:CD,10669:CD,10675:CD,10681:CD,10687:CD,10693:CD,10699:CD,10705:CD,10711:CD,10717:CD,10723:CD,10729:CD,10737:CD,10743:CD,10746:CD,10769:CD,10771
5573 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v2 = new org.biojava.nbio.structure.Element::DD,5602:CF,5574
5574 :: NORM :: declaration :: [I :: v10 = new []::
5575 :: EXPR :: modify :: I :: v10[#(0)] = #(1)::
5602 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.H = v2::
5604 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v14 = new org.biojava.nbio.structure.Element::DD,5661:CF,5605
5605 :: NORM :: declaration :: [I :: v24 = new []::
5606 :: EXPR :: modify :: I :: v24[#(0)] = #(-4)::
5610 :: EXPR :: modify :: I :: v24[#(1)] = #(-3)::
5614 :: EXPR :: modify :: I :: v24[#(2)] = #(-2)::
5618 :: EXPR :: modify :: I :: v24[#(4)] = #(-1)::
5622 :: EXPR :: modify :: I :: v24[#(5)] = #(1)::
5626 :: EXPR :: modify :: I :: v24[#(6)] = #(2)::
5630 :: EXPR :: modify :: I :: v24[#(7)] = #(3)::
5634 :: EXPR :: modify :: I :: v24[#(8)] = #(4)::
5661 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.C = v14::
5663 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v35 = new org.biojava.nbio.structure.Element::DD,5720:CF,5664
5664 :: NORM :: declaration :: [I :: v41 = new []::
5665 :: EXPR :: modify :: I :: v41[#(0)] = #(-3)::
5669 :: EXPR :: modify :: I :: v41[#(1)] = #(-2)::
5673 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
5677 :: EXPR :: modify :: I :: v41[#(4)] = #(1)::
5681 :: EXPR :: modify :: I :: v41[#(5)] = #(2)::
5685 :: EXPR :: modify :: I :: v41[#(6)] = #(3)::
5689 :: EXPR :: modify :: I :: v41[#(7)] = #(4)::
5693 :: EXPR :: modify :: I :: v41[#(8)] = #(5)::
5720 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.N = v35::
5722 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v45 = new org.biojava.nbio.structure.Element::DD,5763:CF,5723
5723 :: NORM :: declaration :: [I :: v51 = new []::
5724 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
5728 :: EXPR :: modify :: I :: v51[#(1)] = #(-1)::
5732 :: EXPR :: modify :: I :: v51[#(3)] = #(1)::
5736 :: EXPR :: modify :: I :: v51[#(4)] = #(2)::
5763 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.O = v45::
5765 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v55 = new org.biojava.nbio.structure.Element::DD,5794:CF,5766
5766 :: NORM :: declaration :: [I :: v58 = new []::
5767 :: EXPR :: modify :: I :: v58[#(1)] = #(1)::
5794 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.D = v55::
5796 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v61 = new org.biojava.nbio.structure.Element::DD,5825:CF,5797
5797 :: NORM :: declaration :: [I :: v64 = new []::
5798 :: EXPR :: modify :: I :: v64[#(1)] = #(1)::
5825 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.T = v61::
5827 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v67 = new org.biojava.nbio.structure.Element::DD,5852
5852 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.He = v67::
5854 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v77 = new org.biojava.nbio.structure.Element::DD,5883:CF,5855
5855 :: NORM :: declaration :: [I :: v83 = new []::
5856 :: EXPR :: modify :: I :: v83[#(1)] = #(1)::
5883 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Li = v77::
5885 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v87 = new org.biojava.nbio.structure.Element::DD,5918:CF,5886
5886 :: NORM :: declaration :: [I :: v92 = new []::
5887 :: EXPR :: modify :: I :: v92[#(1)] = #(1)::
5891 :: EXPR :: modify :: I :: v92[#(2)] = #(2)::
5918 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Be = v87::
5920 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v96 = new org.biojava.nbio.structure.Element::DD,5957:CF,5921
5921 :: NORM :: declaration :: [I :: v101 = new []::
5922 :: EXPR :: modify :: I :: v101[#(1)] = #(1)::
5926 :: EXPR :: modify :: I :: v101[#(2)] = #(2)::
5930 :: EXPR :: modify :: I :: v101[#(3)] = #(3)::
5957 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.B = v96::
5959 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v105 = new org.biojava.nbio.structure.Element::DD,5992:CF,5960
5960 :: NORM :: declaration :: [I :: v111 = new []::
5961 :: EXPR :: modify :: I :: v111[#(0)] = #(-1)::
5965 :: EXPR :: modify :: I :: v111[#(2)] = #(1)::
5992 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.F = v105::
5994 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v115 = new org.biojava.nbio.structure.Element::DD,6019
6019 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ne = v115::
6021 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v125 = new org.biojava.nbio.structure.Element::DD,6054:CF,6022
6022 :: NORM :: declaration :: [I :: v130 = new []::
6023 :: EXPR :: modify :: I :: v130[#(0)] = #(-1)::
6027 :: EXPR :: modify :: I :: v130[#(2)] = #(1)::
6054 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Na = v125::
6056 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v134 = new org.biojava.nbio.structure.Element::DD,6089:CF,6057
6057 :: NORM :: declaration :: [I :: v140 = new []::
6058 :: EXPR :: modify :: I :: v140[#(1)] = #(1)::
6062 :: EXPR :: modify :: I :: v140[#(2)] = #(2)::
6089 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mg = v134::
6091 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v144 = new org.biojava.nbio.structure.Element::DD,6128:CF,6092
6092 :: NORM :: declaration :: [I :: v149 = new []::
6093 :: EXPR :: modify :: I :: v149[#(1)] = #(1)::
6097 :: EXPR :: modify :: I :: v149[#(2)] = #(2)::
6101 :: EXPR :: modify :: I :: v149[#(3)] = #(3)::
6128 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Al = v144::
6130 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v153 = new org.biojava.nbio.structure.Element::DD,6187:CF,6131
6131 :: NORM :: declaration :: [I :: v159 = new []::
6132 :: EXPR :: modify :: I :: v159[#(0)] = #(-4)::
6136 :: EXPR :: modify :: I :: v159[#(1)] = #(-3)::
6140 :: EXPR :: modify :: I :: v159[#(2)] = #(-2)::
6144 :: EXPR :: modify :: I :: v159[#(3)] = #(-1)::
6148 :: EXPR :: modify :: I :: v159[#(5)] = #(1)::
6152 :: EXPR :: modify :: I :: v159[#(6)] = #(2)::
6156 :: EXPR :: modify :: I :: v159[#(7)] = #(3)::
6160 :: EXPR :: modify :: I :: v159[#(8)] = #(4)::
6187 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Si = v153::
6189 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v163 = new org.biojava.nbio.structure.Element::DD,6246:CF,6190
6190 :: NORM :: declaration :: [I :: v170 = new []::
6191 :: EXPR :: modify :: I :: v170[#(0)] = #(-3)::
6195 :: EXPR :: modify :: I :: v170[#(1)] = #(-2)::
6199 :: EXPR :: modify :: I :: v170[#(2)] = #(-1)::
6203 :: EXPR :: modify :: I :: v170[#(4)] = #(1)::
6207 :: EXPR :: modify :: I :: v170[#(5)] = #(2)::
6211 :: EXPR :: modify :: I :: v170[#(6)] = #(3)::
6215 :: EXPR :: modify :: I :: v170[#(7)] = #(4)::
6219 :: EXPR :: modify :: I :: v170[#(8)] = #(5)::
6246 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.P = v163::
6248 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v174 = new org.biojava.nbio.structure.Element::DD,6305:CF,6249
6249 :: NORM :: declaration :: [I :: v181 = new []::
6250 :: EXPR :: modify :: I :: v181[#(0)] = #(-2)::
6254 :: EXPR :: modify :: I :: v181[#(1)] = #(-1)::
6258 :: EXPR :: modify :: I :: v181[#(3)] = #(1)::
6262 :: EXPR :: modify :: I :: v181[#(4)] = #(2)::
6266 :: EXPR :: modify :: I :: v181[#(5)] = #(3)::
6270 :: EXPR :: modify :: I :: v181[#(6)] = #(4)::
6274 :: EXPR :: modify :: I :: v181[#(7)] = #(5)::
6278 :: EXPR :: modify :: I :: v181[#(8)] = #(6)::
6305 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.S = v174::
6307 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v185 = new org.biojava.nbio.structure.Element::DD,6364:CF,6308
6308 :: NORM :: declaration :: [I :: v192 = new []::
6309 :: EXPR :: modify :: I :: v192[#(0)] = #(-1)::
6313 :: EXPR :: modify :: I :: v192[#(2)] = #(1)::
6317 :: EXPR :: modify :: I :: v192[#(3)] = #(2)::
6321 :: EXPR :: modify :: I :: v192[#(4)] = #(3)::
6325 :: EXPR :: modify :: I :: v192[#(5)] = #(4)::
6329 :: EXPR :: modify :: I :: v192[#(6)] = #(5)::
6333 :: EXPR :: modify :: I :: v192[#(7)] = #(6)::
6337 :: EXPR :: modify :: I :: v192[#(8)] = #(7)::
6364 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cl = v185::
6366 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v196 = new org.biojava.nbio.structure.Element::DD,6391
6391 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ar = v196::
6393 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v204 = new org.biojava.nbio.structure.Element::DD,6426:CF,6394
6394 :: NORM :: declaration :: [I :: v211 = new []::
6395 :: EXPR :: modify :: I :: v211[#(0)] = #(-1)::
6399 :: EXPR :: modify :: I :: v211[#(2)] = #(1)::
6426 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.K = v204::
6428 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v214 = new org.biojava.nbio.structure.Element::DD,6461:CF,6429
6429 :: NORM :: declaration :: [I :: v219 = new []::
6430 :: EXPR :: modify :: I :: v219[#(1)] = #(1)::
6434 :: EXPR :: modify :: I :: v219[#(2)] = #(2)::
6461 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ca = v214::
6463 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v223 = new org.biojava.nbio.structure.Element::DD,6500:CF,6464
6464 :: NORM :: declaration :: [I :: v230 = new []::
6465 :: EXPR :: modify :: I :: v230[#(1)] = #(1)::
6469 :: EXPR :: modify :: I :: v230[#(2)] = #(2)::
6473 :: EXPR :: modify :: I :: v230[#(3)] = #(3)::
6500 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sc = v223::
6502 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v234 = new org.biojava.nbio.structure.Element::DD,6547:CF,6503
6503 :: NORM :: declaration :: [I :: v239 = new []::
6504 :: EXPR :: modify :: I :: v239[#(0)] = #(-1)::
6508 :: EXPR :: modify :: I :: v239[#(2)] = #(1)::
6512 :: EXPR :: modify :: I :: v239[#(3)] = #(2)::
6516 :: EXPR :: modify :: I :: v239[#(4)] = #(3)::
6520 :: EXPR :: modify :: I :: v239[#(5)] = #(4)::
6547 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ti = v234::
6549 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v242 = new org.biojava.nbio.structure.Element::DD,6598:CF,6550
6550 :: NORM :: declaration :: [I :: v248 = new []::
6551 :: EXPR :: modify :: I :: v248[#(0)] = #(-1)::
6555 :: EXPR :: modify :: I :: v248[#(2)] = #(1)::
6559 :: EXPR :: modify :: I :: v248[#(3)] = #(2)::
6563 :: EXPR :: modify :: I :: v248[#(4)] = #(3)::
6567 :: EXPR :: modify :: I :: v248[#(5)] = #(4)::
6571 :: EXPR :: modify :: I :: v248[#(6)] = #(5)::
6598 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.V = v242::
6600 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v252 = new org.biojava.nbio.structure.Element::DD,6657:CF,6601
6601 :: NORM :: declaration :: [I :: v258 = new []::
6602 :: EXPR :: modify :: I :: v258[#(0)] = #(-2)::
6606 :: EXPR :: modify :: I :: v258[#(1)] = #(-1)::
6610 :: EXPR :: modify :: I :: v258[#(3)] = #(1)::
6614 :: EXPR :: modify :: I :: v258[#(4)] = #(2)::
6618 :: EXPR :: modify :: I :: v258[#(5)] = #(3)::
6622 :: EXPR :: modify :: I :: v258[#(6)] = #(4)::
6626 :: EXPR :: modify :: I :: v258[#(7)] = #(5)::
6630 :: EXPR :: modify :: I :: v258[#(8)] = #(6)::
6657 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cr = v252::
6659 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v262 = new org.biojava.nbio.structure.Element::DD,6724:CF,6660
6660 :: NORM :: declaration :: [I :: v269 = new []::
6661 :: EXPR :: modify :: I :: v269[#(0)] = #(-3)::
6665 :: EXPR :: modify :: I :: v269[#(1)] = #(-2)::
6669 :: EXPR :: modify :: I :: v269[#(2)] = #(-1)::
6673 :: EXPR :: modify :: I :: v269[#(4)] = #(1)::
6677 :: EXPR :: modify :: I :: v269[#(5)] = #(2)::
6681 :: EXPR :: modify :: I :: v269[#(6)] = #(3)::
6685 :: EXPR :: modify :: I :: v269[#(7)] = #(4)::
6689 :: EXPR :: modify :: I :: v269[#(8)] = #(5)::
6693 :: EXPR :: modify :: I :: v269[#(9)] = #(6)::
6697 :: EXPR :: modify :: I :: v269[#(10)] = #(7)::
6724 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mn = v262::
6726 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v272 = new org.biojava.nbio.structure.Element::DD,6783:CF,6727
6727 :: NORM :: declaration :: [I :: v276 = new []::
6728 :: EXPR :: modify :: I :: v276[#(0)] = #(-2)::
6732 :: EXPR :: modify :: I :: v276[#(1)] = #(-1)::
6736 :: EXPR :: modify :: I :: v276[#(3)] = #(1)::
6740 :: EXPR :: modify :: I :: v276[#(4)] = #(2)::
6744 :: EXPR :: modify :: I :: v276[#(5)] = #(3)::
6748 :: EXPR :: modify :: I :: v276[#(6)] = #(4)::
6752 :: EXPR :: modify :: I :: v276[#(7)] = #(5)::
6756 :: EXPR :: modify :: I :: v276[#(8)] = #(6)::
6783 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fe = v272::
6785 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v280 = new org.biojava.nbio.structure.Element::DD,6834:CF,6786
6786 :: NORM :: declaration :: [I :: v285 = new []::
6787 :: EXPR :: modify :: I :: v285[#(0)] = #(-1)::
6791 :: EXPR :: modify :: I :: v285[#(2)] = #(1)::
6795 :: EXPR :: modify :: I :: v285[#(3)] = #(2)::
6799 :: EXPR :: modify :: I :: v285[#(4)] = #(3)::
6803 :: EXPR :: modify :: I :: v285[#(5)] = #(4)::
6807 :: EXPR :: modify :: I :: v285[#(6)] = #(5)::
6834 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Co = v280::
6836 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v288 = new org.biojava.nbio.structure.Element::DD,6881:CF,6837
6837 :: NORM :: declaration :: [I :: v295 = new []::
6838 :: EXPR :: modify :: I :: v295[#(0)] = #(-1)::
6842 :: EXPR :: modify :: I :: v295[#(2)] = #(1)::
6846 :: EXPR :: modify :: I :: v295[#(3)] = #(2)::
6850 :: EXPR :: modify :: I :: v295[#(4)] = #(3)::
6854 :: EXPR :: modify :: I :: v295[#(5)] = #(4)::
6881 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ni = v288::
6883 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v299 = new org.biojava.nbio.structure.Element::DD,6924:CF,6884
6884 :: NORM :: declaration :: [I :: v305 = new []::
6885 :: EXPR :: modify :: I :: v305[#(1)] = #(1)::
6889 :: EXPR :: modify :: I :: v305[#(2)] = #(2)::
6893 :: EXPR :: modify :: I :: v305[#(3)] = #(3)::
6897 :: EXPR :: modify :: I :: v305[#(4)] = #(4)::
6924 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cu = v299::
6926 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v308 = new org.biojava.nbio.structure.Element::DD,6959:CF,6927
6927 :: NORM :: declaration :: [I :: v313 = new []::
6928 :: EXPR :: modify :: I :: v313[#(1)] = #(1)::
6932 :: EXPR :: modify :: I :: v313[#(2)] = #(2)::
6959 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zn = v308::
6961 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v317 = new org.biojava.nbio.structure.Element::DD,6998:CF,6962
6962 :: NORM :: declaration :: [I :: v321 = new []::
6963 :: EXPR :: modify :: I :: v321[#(1)] = #(1)::
6967 :: EXPR :: modify :: I :: v321[#(2)] = #(2)::
6971 :: EXPR :: modify :: I :: v321[#(3)] = #(3)::
6998 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ga = v317::
7000 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v324 = new org.biojava.nbio.structure.Element::DD,7057:CF,7001
7001 :: NORM :: declaration :: [I :: v329 = new []::
7002 :: EXPR :: modify :: I :: v329[#(0)] = #(-4)::
7006 :: EXPR :: modify :: I :: v329[#(1)] = #(-3)::
7010 :: EXPR :: modify :: I :: v329[#(2)] = #(-2)::
7014 :: EXPR :: modify :: I :: v329[#(3)] = #(-1)::
7018 :: EXPR :: modify :: I :: v329[#(5)] = #(1)::
7022 :: EXPR :: modify :: I :: v329[#(6)] = #(2)::
7026 :: EXPR :: modify :: I :: v329[#(7)] = #(3)::
7030 :: EXPR :: modify :: I :: v329[#(8)] = #(4)::
7057 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ge = v324::
7059 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v333 = new org.biojava.nbio.structure.Element::DD,7104:CF,7060
7060 :: NORM :: declaration :: [I :: v338 = new []::
7061 :: EXPR :: modify :: I :: v338[#(0)] = #(-3)::
7065 :: EXPR :: modify :: I :: v338[#(2)] = #(1)::
7069 :: EXPR :: modify :: I :: v338[#(3)] = #(2)::
7073 :: EXPR :: modify :: I :: v338[#(4)] = #(3)::
7077 :: EXPR :: modify :: I :: v338[#(5)] = #(5)::
7104 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.As = v333::
7106 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v342 = new org.biojava.nbio.structure.Element::DD,7151:CF,7107
7107 :: NORM :: declaration :: [I :: v348 = new []::
7108 :: EXPR :: modify :: I :: v348[#(0)] = #(-2)::
7112 :: EXPR :: modify :: I :: v348[#(2)] = #(1)::
7116 :: EXPR :: modify :: I :: v348[#(3)] = #(2)::
7120 :: EXPR :: modify :: I :: v348[#(4)] = #(4)::
7124 :: EXPR :: modify :: I :: v348[#(5)] = #(6)::
7151 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Se = v342::
7153 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v351 = new org.biojava.nbio.structure.Element::DD,7206:CF,7154
7154 :: NORM :: declaration :: [I :: v355 = new []::
7155 :: EXPR :: modify :: I :: v355[#(0)] = #(-1)::
7159 :: EXPR :: modify :: I :: v355[#(2)] = #(1)::
7163 :: EXPR :: modify :: I :: v355[#(3)] = #(2)::
7167 :: EXPR :: modify :: I :: v355[#(4)] = #(3)::
7171 :: EXPR :: modify :: I :: v355[#(5)] = #(4)::
7175 :: EXPR :: modify :: I :: v355[#(6)] = #(5)::
7179 :: EXPR :: modify :: I :: v355[#(7)] = #(7)::
7206 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Br = v351::
7208 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v359 = new org.biojava.nbio.structure.Element::DD,7237:CF,7209
7209 :: NORM :: declaration :: [I :: v364 = new []::
7210 :: EXPR :: modify :: I :: v364[#(1)] = #(2)::
7237 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Kr = v359::
7239 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v368 = new org.biojava.nbio.structure.Element::DD,7272:CF,7240
7240 :: NORM :: declaration :: [I :: v374 = new []::
7241 :: EXPR :: modify :: I :: v374[#(0)] = #(-1)::
7245 :: EXPR :: modify :: I :: v374[#(2)] = #(1)::
7272 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rb = v368::
7274 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v377 = new org.biojava.nbio.structure.Element::DD,7307:CF,7275
7275 :: NORM :: declaration :: [I :: v382 = new []::
7276 :: EXPR :: modify :: I :: v382[#(1)] = #(1)::
7280 :: EXPR :: modify :: I :: v382[#(2)] = #(2)::
7307 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sr = v377::
7309 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v386 = new org.biojava.nbio.structure.Element::DD,7346:CF,7310
7310 :: NORM :: declaration :: [I :: v391 = new []::
7311 :: EXPR :: modify :: I :: v391[#(1)] = #(1)::
7315 :: EXPR :: modify :: I :: v391[#(2)] = #(2)::
7319 :: EXPR :: modify :: I :: v391[#(3)] = #(3)::
7346 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Y = v386::
7348 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v394 = new org.biojava.nbio.structure.Element::DD,7389:CF,7349
7349 :: NORM :: declaration :: [I :: v401 = new []::
7350 :: EXPR :: modify :: I :: v401[#(1)] = #(1)::
7354 :: EXPR :: modify :: I :: v401[#(2)] = #(2)::
7358 :: EXPR :: modify :: I :: v401[#(3)] = #(3)::
7362 :: EXPR :: modify :: I :: v401[#(4)] = #(4)::
7389 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zr = v394::
7391 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v405 = new org.biojava.nbio.structure.Element::DD,7440:CF,7392
7392 :: NORM :: declaration :: [I :: v411 = new []::
7393 :: EXPR :: modify :: I :: v411[#(0)] = #(-1)::
7397 :: EXPR :: modify :: I :: v411[#(2)] = #(1)::
7401 :: EXPR :: modify :: I :: v411[#(3)] = #(2)::
7405 :: EXPR :: modify :: I :: v411[#(4)] = #(3)::
7409 :: EXPR :: modify :: I :: v411[#(5)] = #(4)::
7413 :: EXPR :: modify :: I :: v411[#(6)] = #(5)::
7440 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nb = v405::
7442 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v414 = new org.biojava.nbio.structure.Element::DD,7499:CF,7443
7443 :: NORM :: declaration :: [I :: v420 = new []::
7444 :: EXPR :: modify :: I :: v420[#(0)] = #(-2)::
7448 :: EXPR :: modify :: I :: v420[#(1)] = #(-1)::
7452 :: EXPR :: modify :: I :: v420[#(3)] = #(1)::
7456 :: EXPR :: modify :: I :: v420[#(4)] = #(2)::
7460 :: EXPR :: modify :: I :: v420[#(5)] = #(3)::
7464 :: EXPR :: modify :: I :: v420[#(6)] = #(4)::
7468 :: EXPR :: modify :: I :: v420[#(7)] = #(5)::
7472 :: EXPR :: modify :: I :: v420[#(8)] = #(6)::
7499 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mo = v414::
7501 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v424 = new org.biojava.nbio.structure.Element::DD,7562:CF,7502
7502 :: NORM :: declaration :: [I :: v431 = new []::
7503 :: EXPR :: modify :: I :: v431[#(0)] = #(-3)::
7507 :: EXPR :: modify :: I :: v431[#(1)] = #(-1)::
7511 :: EXPR :: modify :: I :: v431[#(3)] = #(1)::
7515 :: EXPR :: modify :: I :: v431[#(4)] = #(2)::
7519 :: EXPR :: modify :: I :: v431[#(5)] = #(3)::
7523 :: EXPR :: modify :: I :: v431[#(6)] = #(4)::
7527 :: EXPR :: modify :: I :: v431[#(7)] = #(5)::
7531 :: EXPR :: modify :: I :: v431[#(8)] = #(6)::
7535 :: EXPR :: modify :: I :: v431[#(9)] = #(7)::
7562 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tc = v424::
7564 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v434 = new org.biojava.nbio.structure.Element::DD,7625:CF,7565
7565 :: NORM :: declaration :: [I :: v440 = new []::
7566 :: EXPR :: modify :: I :: v440[#(0)] = #(-2)::
7570 :: EXPR :: modify :: I :: v440[#(2)] = #(1)::
7574 :: EXPR :: modify :: I :: v440[#(3)] = #(2)::
7578 :: EXPR :: modify :: I :: v440[#(4)] = #(3)::
7582 :: EXPR :: modify :: I :: v440[#(5)] = #(4)::
7586 :: EXPR :: modify :: I :: v440[#(6)] = #(5)::
7590 :: EXPR :: modify :: I :: v440[#(7)] = #(6)::
7594 :: EXPR :: modify :: I :: v440[#(8)] = #(7)::
7598 :: EXPR :: modify :: I :: v440[#(9)] = #(8)::
7625 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ru = v434::
7627 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v443 = new org.biojava.nbio.structure.Element::DD,7680:CF,7628
7628 :: NORM :: declaration :: [I :: v448 = new []::
7629 :: EXPR :: modify :: I :: v448[#(0)] = #(-1)::
7633 :: EXPR :: modify :: I :: v448[#(2)] = #(1)::
7637 :: EXPR :: modify :: I :: v448[#(3)] = #(2)::
7641 :: EXPR :: modify :: I :: v448[#(4)] = #(3)::
7645 :: EXPR :: modify :: I :: v448[#(5)] = #(4)::
7649 :: EXPR :: modify :: I :: v448[#(6)] = #(5)::
7653 :: EXPR :: modify :: I :: v448[#(7)] = #(6)::
7680 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rh = v443::
7682 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v452 = new org.biojava.nbio.structure.Element::DD,7719:CF,7683
7683 :: NORM :: declaration :: [I :: v456 = new []::
7684 :: EXPR :: modify :: I :: v456[#(1)] = #(1)::
7688 :: EXPR :: modify :: I :: v456[#(2)] = #(2)::
7692 :: EXPR :: modify :: I :: v456[#(3)] = #(4)::
7719 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pd = v452::
7721 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v459 = new org.biojava.nbio.structure.Element::DD,7762:CF,7722
7722 :: NORM :: declaration :: [I :: v463 = new []::
7723 :: EXPR :: modify :: I :: v463[#(1)] = #(1)::
7727 :: EXPR :: modify :: I :: v463[#(2)] = #(2)::
7731 :: EXPR :: modify :: I :: v463[#(3)] = #(3)::
7735 :: EXPR :: modify :: I :: v463[#(4)] = #(4)::
7762 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ag = v459::
7764 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v467 = new org.biojava.nbio.structure.Element::DD,7797:CF,7765
7765 :: NORM :: declaration :: [I :: v471 = new []::
7766 :: EXPR :: modify :: I :: v471[#(1)] = #(1)::
7770 :: EXPR :: modify :: I :: v471[#(2)] = #(2)::
7797 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cd = v467::
7799 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v475 = new org.biojava.nbio.structure.Element::DD,7836:CF,7800
7800 :: NORM :: declaration :: [I :: v479 = new []::
7801 :: EXPR :: modify :: I :: v479[#(1)] = #(1)::
7805 :: EXPR :: modify :: I :: v479[#(2)] = #(2)::
7809 :: EXPR :: modify :: I :: v479[#(3)] = #(3)::
7836 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.In = v475::
7838 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v483 = new org.biojava.nbio.structure.Element::DD,7875:CF,7839
7839 :: NORM :: declaration :: [I :: v490 = new []::
7840 :: EXPR :: modify :: I :: v490[#(0)] = #(-4)::
7844 :: EXPR :: modify :: I :: v490[#(2)] = #(2)::
7848 :: EXPR :: modify :: I :: v490[#(3)] = #(4)::
7875 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sn = v483::
7877 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v493 = new org.biojava.nbio.structure.Element::DD,7914:CF,7878
7878 :: NORM :: declaration :: [I :: v498 = new []::
7879 :: EXPR :: modify :: I :: v498[#(0)] = #(-3)::
7883 :: EXPR :: modify :: I :: v498[#(2)] = #(3)::
7887 :: EXPR :: modify :: I :: v498[#(3)] = #(5)::
7914 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sb = v493::
7916 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v502 = new org.biojava.nbio.structure.Element::DD,7961:CF,7917
7917 :: NORM :: declaration :: [I :: v507 = new []::
7918 :: EXPR :: modify :: I :: v507[#(0)] = #(-2)::
7922 :: EXPR :: modify :: I :: v507[#(2)] = #(2)::
7926 :: EXPR :: modify :: I :: v507[#(3)] = #(4)::
7930 :: EXPR :: modify :: I :: v507[#(4)] = #(5)::
7934 :: EXPR :: modify :: I :: v507[#(5)] = #(6)::
7961 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Te = v502::
7963 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v511 = new org.biojava.nbio.structure.Element::DD,8012:CF,7964
7964 :: NORM :: declaration :: [I :: v515 = new []::
7965 :: EXPR :: modify :: I :: v515[#(0)] = #(-1)::
7969 :: EXPR :: modify :: I :: v515[#(2)] = #(1)::
7973 :: EXPR :: modify :: I :: v515[#(3)] = #(3)::
7977 :: EXPR :: modify :: I :: v515[#(4)] = #(4)::
7981 :: EXPR :: modify :: I :: v515[#(5)] = #(5)::
7985 :: EXPR :: modify :: I :: v515[#(6)] = #(7)::
8012 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.I = v511::
8014 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v519 = new org.biojava.nbio.structure.Element::DD,8059:CF,8015
8015 :: NORM :: declaration :: [I :: v524 = new []::
8016 :: EXPR :: modify :: I :: v524[#(1)] = #(1)::
8020 :: EXPR :: modify :: I :: v524[#(2)] = #(2)::
8024 :: EXPR :: modify :: I :: v524[#(3)] = #(4)::
8028 :: EXPR :: modify :: I :: v524[#(4)] = #(6)::
8032 :: EXPR :: modify :: I :: v524[#(5)] = #(8)::
8059 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Xe = v519::
8061 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v528 = new org.biojava.nbio.structure.Element::DD,8094:CF,8062
8062 :: NORM :: declaration :: [I :: v533 = new []::
8063 :: EXPR :: modify :: I :: v533[#(0)] = #(-1)::
8067 :: EXPR :: modify :: I :: v533[#(2)] = #(1)::
8094 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cs = v528::
8096 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v537 = new org.biojava.nbio.structure.Element::DD,8125:CF,8097
8097 :: NORM :: declaration :: [I :: v542 = new []::
8098 :: EXPR :: modify :: I :: v542[#(1)] = #(2)::
8125 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ba = v537::
8127 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v546 = new org.biojava.nbio.structure.Element::DD,8160:CF,8128
8128 :: NORM :: declaration :: [I :: v549 = new []::
8129 :: EXPR :: modify :: I :: v549[#(1)] = #(2)::
8133 :: EXPR :: modify :: I :: v549[#(2)] = #(3)::
8160 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.La = v546::
8162 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v552 = new org.biojava.nbio.structure.Element::DD,8199:CF,8163
8163 :: NORM :: declaration :: [I :: v557 = new []::
8164 :: EXPR :: modify :: I :: v557[#(1)] = #(2)::
8168 :: EXPR :: modify :: I :: v557[#(2)] = #(3)::
8172 :: EXPR :: modify :: I :: v557[#(3)] = #(4)::
8199 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ce = v552::
8201 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v560 = new org.biojava.nbio.structure.Element::DD,8238:CF,8202
8202 :: NORM :: declaration :: [I :: v565 = new []::
8203 :: EXPR :: modify :: I :: v565[#(1)] = #(2)::
8207 :: EXPR :: modify :: I :: v565[#(2)] = #(3)::
8211 :: EXPR :: modify :: I :: v565[#(3)] = #(4)::
8238 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pr = v560::
8240 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v568 = new org.biojava.nbio.structure.Element::DD,8277:CF,8241
8241 :: NORM :: declaration :: [I :: v572 = new []::
8242 :: EXPR :: modify :: I :: v572[#(1)] = #(2)::
8246 :: EXPR :: modify :: I :: v572[#(2)] = #(3)::
8250 :: EXPR :: modify :: I :: v572[#(3)] = #(4)::
8277 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nd = v568::
8279 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v575 = new org.biojava.nbio.structure.Element::DD,8312:CF,8280
8280 :: NORM :: declaration :: [I :: v580 = new []::
8281 :: EXPR :: modify :: I :: v580[#(1)] = #(2)::
8285 :: EXPR :: modify :: I :: v580[#(2)] = #(3)::
8312 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pm = v575::
8314 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v583 = new org.biojava.nbio.structure.Element::DD,8347:CF,8315
8315 :: NORM :: declaration :: [I :: v589 = new []::
8316 :: EXPR :: modify :: I :: v589[#(1)] = #(2)::
8320 :: EXPR :: modify :: I :: v589[#(2)] = #(3)::
8347 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sm = v583::
8349 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v593 = new org.biojava.nbio.structure.Element::DD,8382:CF,8350
8350 :: NORM :: declaration :: [I :: v598 = new []::
8351 :: EXPR :: modify :: I :: v598[#(1)] = #(2)::
8355 :: EXPR :: modify :: I :: v598[#(2)] = #(3)::
8382 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Eu = v593::
8384 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v601 = new org.biojava.nbio.structure.Element::DD,8421:CF,8385
8385 :: NORM :: declaration :: [I :: v605 = new []::
8386 :: EXPR :: modify :: I :: v605[#(1)] = #(1)::
8390 :: EXPR :: modify :: I :: v605[#(2)] = #(2)::
8394 :: EXPR :: modify :: I :: v605[#(3)] = #(3)::
8421 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Gd = v601::
8423 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v608 = new org.biojava.nbio.structure.Element::DD,8464:CF,8424
8424 :: NORM :: declaration :: [I :: v614 = new []::
8425 :: EXPR :: modify :: I :: v614[#(1)] = #(1)::
8429 :: EXPR :: modify :: I :: v614[#(2)] = #(2)::
8433 :: EXPR :: modify :: I :: v614[#(3)] = #(3)::
8437 :: EXPR :: modify :: I :: v614[#(4)] = #(4)::
8464 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tb = v608::
8466 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v617 = new org.biojava.nbio.structure.Element::DD,8503:CF,8467
8467 :: NORM :: declaration :: [I :: v621 = new []::
8468 :: EXPR :: modify :: I :: v621[#(1)] = #(2)::
8472 :: EXPR :: modify :: I :: v621[#(2)] = #(3)::
8476 :: EXPR :: modify :: I :: v621[#(3)] = #(4)::
8503 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Dy = v617::
8505 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v624 = new org.biojava.nbio.structure.Element::DD,8538:CF,8506
8506 :: NORM :: declaration :: [I :: v628 = new []::
8507 :: EXPR :: modify :: I :: v628[#(1)] = #(2)::
8511 :: EXPR :: modify :: I :: v628[#(2)] = #(3)::
8538 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ho = v624::
8540 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v632 = new org.biojava.nbio.structure.Element::DD,8573:CF,8541
8541 :: NORM :: declaration :: [I :: v638 = new []::
8542 :: EXPR :: modify :: I :: v638[#(1)] = #(2)::
8546 :: EXPR :: modify :: I :: v638[#(2)] = #(3)::
8573 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Er = v632::
8575 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v641 = new org.biojava.nbio.structure.Element::DD,8612:CF,8576
8576 :: NORM :: declaration :: [I :: v646 = new []::
8577 :: EXPR :: modify :: I :: v646[#(1)] = #(2)::
8581 :: EXPR :: modify :: I :: v646[#(2)] = #(3)::
8585 :: EXPR :: modify :: I :: v646[#(3)] = #(4)::
8612 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tm = v641::
8614 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v649 = new org.biojava.nbio.structure.Element::DD,8647:CF,8615
8615 :: NORM :: declaration :: [I :: v654 = new []::
8616 :: EXPR :: modify :: I :: v654[#(1)] = #(2)::
8620 :: EXPR :: modify :: I :: v654[#(2)] = #(3)::
8647 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Yb = v649::
8649 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v657 = new org.biojava.nbio.structure.Element::DD,8678:CF,8650
8650 :: NORM :: declaration :: [I :: v662 = new []::
8651 :: EXPR :: modify :: I :: v662[#(1)] = #(3)::
8678 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lu = v657::
8680 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v665 = new org.biojava.nbio.structure.Element::DD,8717:CF,8681
8681 :: NORM :: declaration :: [I :: v669 = new []::
8682 :: EXPR :: modify :: I :: v669[#(1)] = #(2)::
8686 :: EXPR :: modify :: I :: v669[#(2)] = #(3)::
8690 :: EXPR :: modify :: I :: v669[#(3)] = #(4)::
8717 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hf = v665::
8719 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v672 = new org.biojava.nbio.structure.Element::DD,8764:CF,8720
8720 :: NORM :: declaration :: [I :: v677 = new []::
8721 :: EXPR :: modify :: I :: v677[#(0)] = #(-1)::
8725 :: EXPR :: modify :: I :: v677[#(2)] = #(2)::
8729 :: EXPR :: modify :: I :: v677[#(3)] = #(3)::
8733 :: EXPR :: modify :: I :: v677[#(4)] = #(4)::
8737 :: EXPR :: modify :: I :: v677[#(5)] = #(5)::
8764 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ta = v672::
8766 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v680 = new org.biojava.nbio.structure.Element::DD,8823:CF,8767
8767 :: NORM :: declaration :: [I :: v685 = new []::
8768 :: EXPR :: modify :: I :: v685[#(0)] = #(-2)::
8772 :: EXPR :: modify :: I :: v685[#(1)] = #(-1)::
8776 :: EXPR :: modify :: I :: v685[#(3)] = #(1)::
8780 :: EXPR :: modify :: I :: v685[#(4)] = #(2)::
8784 :: EXPR :: modify :: I :: v685[#(5)] = #(3)::
8788 :: EXPR :: modify :: I :: v685[#(6)] = #(4)::
8792 :: EXPR :: modify :: I :: v685[#(7)] = #(5)::
8796 :: EXPR :: modify :: I :: v685[#(8)] = #(6)::
8823 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.W = v680::
8825 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v689 = new org.biojava.nbio.structure.Element::DD,8886:CF,8826
8826 :: NORM :: declaration :: [I :: v694 = new []::
8827 :: EXPR :: modify :: I :: v694[#(0)] = #(-3)::
8831 :: EXPR :: modify :: I :: v694[#(1)] = #(-1)::
8835 :: EXPR :: modify :: I :: v694[#(3)] = #(1)::
8839 :: EXPR :: modify :: I :: v694[#(4)] = #(2)::
8843 :: EXPR :: modify :: I :: v694[#(5)] = #(3)::
8847 :: EXPR :: modify :: I :: v694[#(6)] = #(4)::
8851 :: EXPR :: modify :: I :: v694[#(7)] = #(5)::
8855 :: EXPR :: modify :: I :: v694[#(8)] = #(6)::
8859 :: EXPR :: modify :: I :: v694[#(9)] = #(7)::
8886 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Re = v689::
8888 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v697 = new org.biojava.nbio.structure.Element::DD,8953:CF,8889
8889 :: NORM :: declaration :: [I :: v701 = new []::
8890 :: EXPR :: modify :: I :: v701[#(0)] = #(-2)::
8894 :: EXPR :: modify :: I :: v701[#(1)] = #(-1)::
8898 :: EXPR :: modify :: I :: v701[#(3)] = #(1)::
8902 :: EXPR :: modify :: I :: v701[#(4)] = #(2)::
8906 :: EXPR :: modify :: I :: v701[#(5)] = #(3)::
8910 :: EXPR :: modify :: I :: v701[#(6)] = #(4)::
8914 :: EXPR :: modify :: I :: v701[#(7)] = #(5)::
8918 :: EXPR :: modify :: I :: v701[#(8)] = #(6)::
8922 :: EXPR :: modify :: I :: v701[#(9)] = #(7)::
8926 :: EXPR :: modify :: I :: v701[#(10)] = #(8)::
8953 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Os = v697::
8955 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v704 = new org.biojava.nbio.structure.Element::DD,9016:CF,8956
8956 :: NORM :: declaration :: [I :: v707 = new []::
8957 :: EXPR :: modify :: I :: v707[#(0)] = #(-3)::
8961 :: EXPR :: modify :: I :: v707[#(1)] = #(-1)::
8965 :: EXPR :: modify :: I :: v707[#(3)] = #(1)::
8969 :: EXPR :: modify :: I :: v707[#(4)] = #(2)::
8973 :: EXPR :: modify :: I :: v707[#(5)] = #(3)::
8977 :: EXPR :: modify :: I :: v707[#(6)] = #(4)::
8981 :: EXPR :: modify :: I :: v707[#(7)] = #(5)::
8985 :: EXPR :: modify :: I :: v707[#(8)] = #(6)::
8989 :: EXPR :: modify :: I :: v707[#(9)] = #(8)::
9016 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ir = v704::
9018 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v710 = new org.biojava.nbio.structure.Element::DD,9075:CF,9019
9019 :: NORM :: declaration :: [I :: v713 = new []::
9020 :: EXPR :: modify :: I :: v713[#(0)] = #(-2)::
9024 :: EXPR :: modify :: I :: v713[#(1)] = #(-1)::
9028 :: EXPR :: modify :: I :: v713[#(3)] = #(1)::
9032 :: EXPR :: modify :: I :: v713[#(4)] = #(2)::
9036 :: EXPR :: modify :: I :: v713[#(5)] = #(3)::
9040 :: EXPR :: modify :: I :: v713[#(6)] = #(4)::
9044 :: EXPR :: modify :: I :: v713[#(7)] = #(5)::
9048 :: EXPR :: modify :: I :: v713[#(8)] = #(6)::
9075 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pt = v710::
9077 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v716 = new org.biojava.nbio.structure.Element::DD,9122:CF,9078
9078 :: NORM :: declaration :: [I :: v720 = new []::
9079 :: EXPR :: modify :: I :: v720[#(0)] = #(-1)::
9083 :: EXPR :: modify :: I :: v720[#(2)] = #(1)::
9087 :: EXPR :: modify :: I :: v720[#(3)] = #(2)::
9091 :: EXPR :: modify :: I :: v720[#(4)] = #(3)::
9095 :: EXPR :: modify :: I :: v720[#(5)] = #(5)::
9122 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Au = v716::
9124 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v724 = new org.biojava.nbio.structure.Element::DD,9161:CF,9125
9125 :: NORM :: declaration :: [I :: v727 = new []::
9126 :: EXPR :: modify :: I :: v727[#(1)] = #(1)::
9130 :: EXPR :: modify :: I :: v727[#(2)] = #(2)::
9134 :: EXPR :: modify :: I :: v727[#(3)] = #(4)::
9161 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hg = v724::
9163 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v731 = new org.biojava.nbio.structure.Element::DD,9200:CF,9164
9164 :: NORM :: declaration :: [I :: v735 = new []::
9165 :: EXPR :: modify :: I :: v735[#(0)] = #(-1)::
9169 :: EXPR :: modify :: I :: v735[#(2)] = #(1)::
9173 :: EXPR :: modify :: I :: v735[#(3)] = #(3)::
9200 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tl = v731::
9202 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v738 = new org.biojava.nbio.structure.Element::DD,9239:CF,9203
9203 :: NORM :: declaration :: [I :: v742 = new []::
9204 :: EXPR :: modify :: I :: v742[#(0)] = #(-4)::
9208 :: EXPR :: modify :: I :: v742[#(2)] = #(2)::
9212 :: EXPR :: modify :: I :: v742[#(3)] = #(4)::
9239 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pb = v738::
9241 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v746 = new org.biojava.nbio.structure.Element::DD,9282:CF,9242
9242 :: NORM :: declaration :: [I :: v750 = new []::
9243 :: EXPR :: modify :: I :: v750[#(0)] = #(-3)::
9247 :: EXPR :: modify :: I :: v750[#(2)] = #(1)::
9251 :: EXPR :: modify :: I :: v750[#(3)] = #(3)::
9255 :: EXPR :: modify :: I :: v750[#(4)] = #(5)::
9282 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bi = v746::
9284 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v753 = new org.biojava.nbio.structure.Element::DD,9329:CF,9285
9285 :: NORM :: declaration :: [I :: v757 = new []::
9286 :: EXPR :: modify :: I :: v757[#(0)] = #(-2)::
9290 :: EXPR :: modify :: I :: v757[#(2)] = #(2)::
9294 :: EXPR :: modify :: I :: v757[#(3)] = #(4)::
9298 :: EXPR :: modify :: I :: v757[#(4)] = #(5)::
9302 :: EXPR :: modify :: I :: v757[#(5)] = #(6)::
9329 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Po = v753::
9331 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v760 = new org.biojava.nbio.structure.Element::DD,9376:CF,9332
9332 :: NORM :: declaration :: [I :: v764 = new []::
9333 :: EXPR :: modify :: I :: v764[#(0)] = #(-1)::
9337 :: EXPR :: modify :: I :: v764[#(2)] = #(1)::
9341 :: EXPR :: modify :: I :: v764[#(3)] = #(3)::
9345 :: EXPR :: modify :: I :: v764[#(4)] = #(5)::
9349 :: EXPR :: modify :: I :: v764[#(5)] = #(7)::
9376 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.At = v760::
9378 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v767 = new org.biojava.nbio.structure.Element::DD,9411:CF,9379
9379 :: NORM :: declaration :: [I :: v771 = new []::
9380 :: EXPR :: modify :: I :: v771[#(1)] = #(2)::
9384 :: EXPR :: modify :: I :: v771[#(2)] = #(6)::
9411 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rn = v767::
9413 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v774 = new org.biojava.nbio.structure.Element::DD,9442:CF,9414
9414 :: NORM :: declaration :: [I :: v778 = new []::
9415 :: EXPR :: modify :: I :: v778[#(1)] = #(1)::
9442 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fr = v774::
9444 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v782 = new org.biojava.nbio.structure.Element::DD,9473:CF,9445
9445 :: NORM :: declaration :: [I :: v787 = new []::
9446 :: EXPR :: modify :: I :: v787[#(1)] = #(2)::
9473 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ra = v782::
9475 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v790 = new org.biojava.nbio.structure.Element::DD,9508:CF,9476
9476 :: NORM :: declaration :: [I :: v794 = new []::
9477 :: EXPR :: modify :: I :: v794[#(1)] = #(2)::
9481 :: EXPR :: modify :: I :: v794[#(2)] = #(3)::
9508 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ac = v790::
9510 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v797 = new org.biojava.nbio.structure.Element::DD,9547:CF,9511
9511 :: NORM :: declaration :: [I :: v802 = new []::
9512 :: EXPR :: modify :: I :: v802[#(1)] = #(2)::
9516 :: EXPR :: modify :: I :: v802[#(2)] = #(3)::
9520 :: EXPR :: modify :: I :: v802[#(3)] = #(4)::
9547 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Th = v797::
9549 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v805 = new org.biojava.nbio.structure.Element::DD,9590:CF,9550
9550 :: NORM :: declaration :: [I :: v808 = new []::
9551 :: EXPR :: modify :: I :: v808[#(1)] = #(2)::
9555 :: EXPR :: modify :: I :: v808[#(2)] = #(3)::
9559 :: EXPR :: modify :: I :: v808[#(3)] = #(4)::
9563 :: EXPR :: modify :: I :: v808[#(4)] = #(5)::
9590 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pa = v805::
9592 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v811 = new org.biojava.nbio.structure.Element::DD,9637:CF,9593
9593 :: NORM :: declaration :: [I :: v816 = new []::
9594 :: EXPR :: modify :: I :: v816[#(1)] = #(2)::
9598 :: EXPR :: modify :: I :: v816[#(2)] = #(3)::
9602 :: EXPR :: modify :: I :: v816[#(3)] = #(4)::
9606 :: EXPR :: modify :: I :: v816[#(4)] = #(5)::
9610 :: EXPR :: modify :: I :: v816[#(5)] = #(6)::
9637 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.U = v811::
9639 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v819 = new org.biojava.nbio.structure.Element::DD,9684:CF,9640
9640 :: NORM :: declaration :: [I :: v823 = new []::
9641 :: EXPR :: modify :: I :: v823[#(1)] = #(3)::
9645 :: EXPR :: modify :: I :: v823[#(2)] = #(4)::
9649 :: EXPR :: modify :: I :: v823[#(3)] = #(5)::
9653 :: EXPR :: modify :: I :: v823[#(4)] = #(6)::
9657 :: EXPR :: modify :: I :: v823[#(5)] = #(7)::
9684 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Np = v819::
9686 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v826 = new org.biojava.nbio.structure.Element::DD,9735:CF,9687
9687 :: NORM :: declaration :: [I :: v829 = new []::
9688 :: EXPR :: modify :: I :: v829[#(1)] = #(3)::
9692 :: EXPR :: modify :: I :: v829[#(2)] = #(4)::
9696 :: EXPR :: modify :: I :: v829[#(3)] = #(5)::
9700 :: EXPR :: modify :: I :: v829[#(4)] = #(6)::
9704 :: EXPR :: modify :: I :: v829[#(5)] = #(7)::
9708 :: EXPR :: modify :: I :: v829[#(6)] = #(8)::
9735 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pu = v826::
9737 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v832 = new org.biojava.nbio.structure.Element::DD,9786:CF,9738
9738 :: NORM :: declaration :: [I :: v835 = new []::
9739 :: EXPR :: modify :: I :: v835[#(1)] = #(2)::
9743 :: EXPR :: modify :: I :: v835[#(2)] = #(3)::
9747 :: EXPR :: modify :: I :: v835[#(3)] = #(4)::
9751 :: EXPR :: modify :: I :: v835[#(4)] = #(5)::
9755 :: EXPR :: modify :: I :: v835[#(5)] = #(6)::
9759 :: EXPR :: modify :: I :: v835[#(6)] = #(7)::
9786 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Am = v832::
9788 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v838 = new org.biojava.nbio.structure.Element::DD,9821:CF,9789
9789 :: NORM :: declaration :: [I :: v841 = new []::
9790 :: EXPR :: modify :: I :: v841[#(1)] = #(3)::
9794 :: EXPR :: modify :: I :: v841[#(2)] = #(4)::
9821 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cm = v838::
9823 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v844 = new org.biojava.nbio.structure.Element::DD,9860:CF,9824
9824 :: NORM :: declaration :: [I :: v848 = new []::
9825 :: EXPR :: modify :: I :: v848[#(1)] = #(2)::
9829 :: EXPR :: modify :: I :: v848[#(2)] = #(3)::
9833 :: EXPR :: modify :: I :: v848[#(3)] = #(4)::
9860 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bk = v844::
9862 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v851 = new org.biojava.nbio.structure.Element::DD,9899:CF,9863
9863 :: NORM :: declaration :: [I :: v854 = new []::
9864 :: EXPR :: modify :: I :: v854[#(1)] = #(2)::
9868 :: EXPR :: modify :: I :: v854[#(2)] = #(3)::
9872 :: EXPR :: modify :: I :: v854[#(3)] = #(4)::
9899 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cf = v851::
9901 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v857 = new org.biojava.nbio.structure.Element::DD,9934:CF,9902
9902 :: NORM :: declaration :: [I :: v860 = new []::
9903 :: EXPR :: modify :: I :: v860[#(1)] = #(2)::
9907 :: EXPR :: modify :: I :: v860[#(2)] = #(3)::
9934 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Es = v857::
9936 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v863 = new org.biojava.nbio.structure.Element::DD,9969:CF,9937
9937 :: NORM :: declaration :: [I :: v866 = new []::
9938 :: EXPR :: modify :: I :: v866[#(1)] = #(2)::
9942 :: EXPR :: modify :: I :: v866[#(2)] = #(3)::
9969 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fm = v863::
9971 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v869 = new org.biojava.nbio.structure.Element::DD,10004:CF,9972
9972 :: NORM :: declaration :: [I :: v872 = new []::
9973 :: EXPR :: modify :: I :: v872[#(1)] = #(2)::
9977 :: EXPR :: modify :: I :: v872[#(2)] = #(3)::
10004 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Md = v869::
10006 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v875 = new org.biojava.nbio.structure.Element::DD,10039:CF,10007
10007 :: NORM :: declaration :: [I :: v877 = new []::
10008 :: EXPR :: modify :: I :: v877[#(1)] = #(2)::
10012 :: EXPR :: modify :: I :: v877[#(2)] = #(3)::
10039 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.No = v875::
10041 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v880 = new org.biojava.nbio.structure.Element::DD,10070:CF,10042
10042 :: NORM :: declaration :: [I :: v883 = new []::
10043 :: EXPR :: modify :: I :: v883[#(1)] = #(3)::
10070 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lr = v880::
10072 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v886 = new org.biojava.nbio.structure.Element::DD,10096
10096 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.R = v886::
10098 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v891 = new org.biojava.nbio.structure.Element[]::
10099 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v892 = org.biojava.nbio.structure.Element.H::DD,10101
10101 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(0)] = v892::
10105 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v893 = org.biojava.nbio.structure.Element.C::DD,10107
10107 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(1)] = v893::
10111 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v894 = org.biojava.nbio.structure.Element.N::DD,10113
10113 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(2)] = v894::
10117 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v895 = org.biojava.nbio.structure.Element.O::DD,10119
10119 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(3)] = v895::
10123 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v896 = org.biojava.nbio.structure.Element.D::DD,10125
10125 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(4)] = v896::
10129 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v897 = org.biojava.nbio.structure.Element.T::DD,10131
10131 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(5)] = v897::
10135 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v898 = org.biojava.nbio.structure.Element.He::DD,10137
10137 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(6)] = v898::
10141 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v899 = org.biojava.nbio.structure.Element.Li::DD,10143
10143 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(7)] = v899::
10147 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v900 = org.biojava.nbio.structure.Element.Be::DD,10149
10149 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(8)] = v900::
10153 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v901 = org.biojava.nbio.structure.Element.B::DD,10155
10155 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(9)] = v901::
10159 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v902 = org.biojava.nbio.structure.Element.F::DD,10161
10161 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(10)] = v902::
10165 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v903 = org.biojava.nbio.structure.Element.Ne::DD,10167
10167 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(11)] = v903::
10171 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v904 = org.biojava.nbio.structure.Element.Na::DD,10173
10173 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(12)] = v904::
10177 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v905 = org.biojava.nbio.structure.Element.Mg::DD,10179
10179 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(13)] = v905::
10183 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v906 = org.biojava.nbio.structure.Element.Al::DD,10185
10185 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(14)] = v906::
10189 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v907 = org.biojava.nbio.structure.Element.Si::DD,10191
10191 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(15)] = v907::
10195 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v908 = org.biojava.nbio.structure.Element.P::DD,10197
10197 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(16)] = v908::
10201 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v909 = org.biojava.nbio.structure.Element.S::DD,10203
10203 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(17)] = v909::
10207 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v910 = org.biojava.nbio.structure.Element.Cl::DD,10209
10209 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(18)] = v910::
10213 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v911 = org.biojava.nbio.structure.Element.Ar::DD,10215
10215 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(19)] = v911::
10219 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v912 = org.biojava.nbio.structure.Element.K::DD,10221
10221 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(20)] = v912::
10225 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v913 = org.biojava.nbio.structure.Element.Ca::DD,10227
10227 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(21)] = v913::
10231 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v914 = org.biojava.nbio.structure.Element.Sc::DD,10233
10233 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(22)] = v914::
10237 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v915 = org.biojava.nbio.structure.Element.Ti::DD,10239
10239 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(23)] = v915::
10243 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v916 = org.biojava.nbio.structure.Element.V::DD,10245
10245 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(24)] = v916::
10249 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v917 = org.biojava.nbio.structure.Element.Cr::DD,10251
10251 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(25)] = v917::
10255 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v918 = org.biojava.nbio.structure.Element.Mn::DD,10257
10257 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(26)] = v918::
10261 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v919 = org.biojava.nbio.structure.Element.Fe::DD,10263
10263 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(27)] = v919::
10267 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v920 = org.biojava.nbio.structure.Element.Co::DD,10269
10269 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(28)] = v920::
10273 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v921 = org.biojava.nbio.structure.Element.Ni::DD,10275
10275 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(29)] = v921::
10279 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v922 = org.biojava.nbio.structure.Element.Cu::DD,10281
10281 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(30)] = v922::
10285 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v923 = org.biojava.nbio.structure.Element.Zn::DD,10287
10287 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(31)] = v923::
10291 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v924 = org.biojava.nbio.structure.Element.Ga::DD,10293
10293 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(32)] = v924::
10297 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v925 = org.biojava.nbio.structure.Element.Ge::DD,10299
10299 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(33)] = v925::
10303 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v926 = org.biojava.nbio.structure.Element.As::DD,10305
10305 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(34)] = v926::
10309 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v927 = org.biojava.nbio.structure.Element.Se::DD,10311
10311 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(35)] = v927::
10315 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v928 = org.biojava.nbio.structure.Element.Br::DD,10317
10317 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(36)] = v928::
10321 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v929 = org.biojava.nbio.structure.Element.Kr::DD,10323
10323 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(37)] = v929::
10327 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v930 = org.biojava.nbio.structure.Element.Rb::DD,10329
10329 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(38)] = v930::
10333 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v931 = org.biojava.nbio.structure.Element.Sr::DD,10335
10335 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(39)] = v931::
10339 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v932 = org.biojava.nbio.structure.Element.Y::DD,10341
10341 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(40)] = v932::
10345 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v933 = org.biojava.nbio.structure.Element.Zr::DD,10347
10347 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(41)] = v933::
10351 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v934 = org.biojava.nbio.structure.Element.Nb::DD,10353
10353 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(42)] = v934::
10357 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v935 = org.biojava.nbio.structure.Element.Mo::DD,10359
10359 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(43)] = v935::
10363 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v936 = org.biojava.nbio.structure.Element.Tc::DD,10365
10365 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(44)] = v936::
10369 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v937 = org.biojava.nbio.structure.Element.Ru::DD,10371
10371 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(45)] = v937::
10375 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v938 = org.biojava.nbio.structure.Element.Rh::DD,10377
10377 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(46)] = v938::
10381 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v939 = org.biojava.nbio.structure.Element.Pd::DD,10383
10383 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(47)] = v939::
10387 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v940 = org.biojava.nbio.structure.Element.Ag::DD,10389
10389 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(48)] = v940::
10393 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v941 = org.biojava.nbio.structure.Element.Cd::DD,10395
10395 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(49)] = v941::
10399 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v942 = org.biojava.nbio.structure.Element.In::DD,10401
10401 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(50)] = v942::
10405 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v943 = org.biojava.nbio.structure.Element.Sn::DD,10407
10407 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(51)] = v943::
10411 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v944 = org.biojava.nbio.structure.Element.Sb::DD,10413
10413 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(52)] = v944::
10417 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v945 = org.biojava.nbio.structure.Element.Te::DD,10419
10419 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(53)] = v945::
10423 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v946 = org.biojava.nbio.structure.Element.I::DD,10425
10425 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(54)] = v946::
10429 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v947 = org.biojava.nbio.structure.Element.Xe::DD,10431
10431 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(55)] = v947::
10435 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v948 = org.biojava.nbio.structure.Element.Cs::DD,10437
10437 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(56)] = v948::
10441 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v949 = org.biojava.nbio.structure.Element.Ba::DD,10443
10443 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(57)] = v949::
10447 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v950 = org.biojava.nbio.structure.Element.La::DD,10449
10449 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(58)] = v950::
10453 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v951 = org.biojava.nbio.structure.Element.Ce::DD,10455
10455 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(59)] = v951::
10459 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v952 = org.biojava.nbio.structure.Element.Pr::DD,10461
10461 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(60)] = v952::
10465 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v953 = org.biojava.nbio.structure.Element.Nd::DD,10467
10467 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(61)] = v953::
10471 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v954 = org.biojava.nbio.structure.Element.Pm::DD,10473
10473 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(62)] = v954::
10477 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v955 = org.biojava.nbio.structure.Element.Sm::DD,10479
10479 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(63)] = v955::
10483 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v956 = org.biojava.nbio.structure.Element.Eu::DD,10485
10485 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(64)] = v956::
10489 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v957 = org.biojava.nbio.structure.Element.Gd::DD,10491
10491 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(65)] = v957::
10495 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v958 = org.biojava.nbio.structure.Element.Tb::DD,10497
10497 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(66)] = v958::
10501 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v959 = org.biojava.nbio.structure.Element.Dy::DD,10503
10503 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(67)] = v959::
10507 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v960 = org.biojava.nbio.structure.Element.Ho::DD,10509
10509 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(68)] = v960::
10513 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v961 = org.biojava.nbio.structure.Element.Er::DD,10515
10515 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(69)] = v961::
10519 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v962 = org.biojava.nbio.structure.Element.Tm::DD,10521
10521 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(70)] = v962::
10525 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v963 = org.biojava.nbio.structure.Element.Yb::DD,10527
10527 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(71)] = v963::
10531 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v964 = org.biojava.nbio.structure.Element.Lu::DD,10533
10533 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(72)] = v964::
10537 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v965 = org.biojava.nbio.structure.Element.Hf::DD,10539
10539 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(73)] = v965::
10543 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v966 = org.biojava.nbio.structure.Element.Ta::DD,10545
10545 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(74)] = v966::
10549 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v967 = org.biojava.nbio.structure.Element.W::DD,10551
10551 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(75)] = v967::
10555 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v968 = org.biojava.nbio.structure.Element.Re::DD,10557
10557 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(76)] = v968::
10561 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v969 = org.biojava.nbio.structure.Element.Os::DD,10563
10563 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(77)] = v969::
10567 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v970 = org.biojava.nbio.structure.Element.Ir::DD,10569
10569 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(78)] = v970::
10573 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v971 = org.biojava.nbio.structure.Element.Pt::DD,10575
10575 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(79)] = v971::
10579 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v972 = org.biojava.nbio.structure.Element.Au::DD,10581
10581 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(80)] = v972::
10585 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v973 = org.biojava.nbio.structure.Element.Hg::DD,10587
10587 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(81)] = v973::
10591 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v974 = org.biojava.nbio.structure.Element.Tl::DD,10593
10593 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(82)] = v974::
10597 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v975 = org.biojava.nbio.structure.Element.Pb::DD,10599
10599 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(83)] = v975::
10603 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v976 = org.biojava.nbio.structure.Element.Bi::DD,10605
10605 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(84)] = v976::
10609 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v977 = org.biojava.nbio.structure.Element.Po::DD,10611
10611 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(85)] = v977::
10615 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v978 = org.biojava.nbio.structure.Element.At::DD,10617
10617 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(86)] = v978::
10621 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v979 = org.biojava.nbio.structure.Element.Rn::DD,10623
10623 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(87)] = v979::
10627 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v980 = org.biojava.nbio.structure.Element.Fr::DD,10629
10629 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(88)] = v980::
10633 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v981 = org.biojava.nbio.structure.Element.Ra::DD,10635
10635 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(89)] = v981::
10639 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v982 = org.biojava.nbio.structure.Element.Ac::DD,10641
10641 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(90)] = v982::
10645 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v983 = org.biojava.nbio.structure.Element.Th::DD,10647
10647 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(91)] = v983::
10651 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v984 = org.biojava.nbio.structure.Element.Pa::DD,10653
10653 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(92)] = v984::
10657 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v985 = org.biojava.nbio.structure.Element.U::DD,10659
10659 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(93)] = v985::
10663 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v986 = org.biojava.nbio.structure.Element.Np::DD,10665
10665 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(94)] = v986::
10669 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v987 = org.biojava.nbio.structure.Element.Pu::DD,10671
10671 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(95)] = v987::
10675 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v988 = org.biojava.nbio.structure.Element.Am::DD,10677
10677 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(96)] = v988::
10681 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v989 = org.biojava.nbio.structure.Element.Cm::DD,10683
10683 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(97)] = v989::
10687 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v990 = org.biojava.nbio.structure.Element.Bk::DD,10689
10689 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(98)] = v990::
10693 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v991 = org.biojava.nbio.structure.Element.Cf::DD,10695
10695 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(99)] = v991::
10699 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v992 = org.biojava.nbio.structure.Element.Es::DD,10701
10701 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(100)] = v992::
10705 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v993 = org.biojava.nbio.structure.Element.Fm::DD,10707
10707 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(101)] = v993::
10711 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v994 = org.biojava.nbio.structure.Element.Md::DD,10713
10713 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(102)] = v994::
10717 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v995 = org.biojava.nbio.structure.Element.No::DD,10719
10719 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(103)] = v995::
10723 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v996 = org.biojava.nbio.structure.Element.Lr::DD,10725
10725 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(104)] = v996::
10729 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v997 = org.biojava.nbio.structure.Element.R::DD,10731
10731 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(105)] = v997::
10737 :: NORM :: declaration :: Ljava/util/HashMap :: v998 = new java.util.HashMap::
10743 :: CALL :: call :: [Lorg/biojava/nbio/structure/Element :: v1001 = values()::JM,10746:CL,34886
10746 :: EXPR :: assign :: I :: v1002 = v1001.length::DD,10769
10762 :: CALL :: call :: Ljava/lang/Object :: v1010 = v1004.put(v1008, v1003)::
10768 :: EXPR :: assign :: Ljava/lang/Object :: v1011 = v1012 + #(1)::DD,10771
10769 :: PRED :: IF :: Z :: if (v1012 < v1002) goto 7461::CD,10762:CD,10768:CD,10771
10771 :: EXPR :: assign :: null :: PHI v1012 = #(0), v1011::DD,10768:DD,10769
14422 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.<clinit>()::CD,14425
14425 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:PDP:)([0-9][a-z0-...), #(2))::
14436 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.<clinit>()::CD,14439
14439 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:BIO:)([0-9][a-z0-...), #(2))::
14462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.<clinit>()::CD,14472
14472 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^([0-9][a-z0-9]{3})([...), #(2))::
14484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.<clinit>()::CD,14487:JM,34939:CD,14494:CD,14496:CD,14503:CD,14505:CD,14512:CD,14514:CD,14521:CD,14523:CD,14530:CD,14532:CD,14539:CD,14541:CD,14548:CD,14550:CD,14557:CD,14559:CD,14566:CD,14568:CD,14575:CD,14577:CD,14584:CD,14586:CD,14587:CD,14593:CD,14599:CD,14605:CD,14611:CD,14617:CD,14623:CD,14629:CD,14635:CD,14641:CD,14647
14487 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v2 = new org.biojava.nbio.structure.ElementType::DD,14494
14494 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.METALLOID = v2::
14496 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v6 = new org.biojava.nbio.structure.ElementType::DD,14503
14503 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.OTHER_NONMETAL = v6::
14505 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v10 = new org.biojava.nbio.structure.ElementType::DD,14512
14512 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.HALOGEN = v10::
14514 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v14 = new org.biojava.nbio.structure.ElementType::DD,14521
14521 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.NOBLE_GAS = v14::
14523 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v18 = new org.biojava.nbio.structure.ElementType::DD,14530
14530 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALI_METAL = v18::
14532 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v22 = new org.biojava.nbio.structure.ElementType::DD,14539
14539 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL = v22::
14541 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v26 = new org.biojava.nbio.structure.ElementType::DD,14548
14548 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.LANTHANOID = v26::
14550 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v30 = new org.biojava.nbio.structure.ElementType::DD,14557
14557 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ACTINOID = v30::
14559 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v34 = new org.biojava.nbio.structure.ElementType::DD,14566
14566 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.TRANSITION_METAL = v34::
14568 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v38 = new org.biojava.nbio.structure.ElementType::DD,14575
14575 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL = v38::
14577 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v42 = new org.biojava.nbio.structure.ElementType::DD,14584
14584 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.UNKNOWN = v42::
14586 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ElementType :: v47 = new org.biojava.nbio.structure.ElementType[]::
14587 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v48 = org.biojava.nbio.structure.ElementType.METALLOID::DD,14589
14589 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(0)] = v48::
14593 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v49 = org.biojava.nbio.structure.ElementType.OTHER_NONMETAL::DD,14595
14595 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(1)] = v49::
14599 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v50 = org.biojava.nbio.structure.ElementType.HALOGEN::DD,14601
14601 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(2)] = v50::
14605 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v51 = org.biojava.nbio.structure.ElementType.NOBLE_GAS::DD,14607
14607 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(3)] = v51::
14611 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v52 = org.biojava.nbio.structure.ElementType.ALKALI_METAL::DD,14613
14613 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(4)] = v52::
14617 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v53 = org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL::DD,14619
14619 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(5)] = v53::
14623 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v54 = org.biojava.nbio.structure.ElementType.LANTHANOID::DD,14625
14625 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(6)] = v54::
14629 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v55 = org.biojava.nbio.structure.ElementType.ACTINOID::DD,14631
14631 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(7)] = v55::
14635 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v56 = org.biojava.nbio.structure.ElementType.TRANSITION_METAL::DD,14637
14637 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(8)] = v56::
14641 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v57 = org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL::DD,14643
14643 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(9)] = v57::
14647 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v58 = org.biojava.nbio.structure.ElementType.UNKNOWN::DD,14649
14649 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(10)] = v58::
14746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.ScoringStrategy.<clinit>()::CD,14749:JM,34960:CD,14756:CD,14758:CD,14765:CD,14767:CD,14774:CD,14776:CD,14783:CD,14785:CD,14792:CD,14794:CD,14795:CD,14801:CD,14807:CD,14813:CD,14819
14749 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v2 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,14756
14756 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_SCORING = v2::
14758 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v7 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,14765
14765 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_SCORING = v7::
14767 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v12 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,14774
14774 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_ANGLE_SCORING = v12::
14776 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v17 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,14783
14783 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_AND_SIDE_CHAIN_ANGLE_SCORING = v17::
14785 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v22 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,14792
14792 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION = v22::
14794 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v28 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy[]::
14795 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v29 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_SCORING::DD,14797
14797 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(0)] = v29::
14801 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v30 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_SCORING::DD,14803
14803 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(1)] = v30::
14807 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v31 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_ANGLE_SCORING::DD,14809
14809 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(2)] = v31::
14813 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v32 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_AND_SIDE_CHAIN_ANGLE_SCORING::DD,14815
14815 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(3)] = v32::
14819 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v33 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION::DD,14821
14821 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(4)] = v33::
15025 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.<clinit>()::CD,15028:CD,15034
15028 :: CALL :: call :: Ljava/util/regex/Pattern :: v4 = compile(#(^\s*([a-zA-Z0-9]+|_)(...))::
15034 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^\s*([a-zA-Z0-9]+|_)$))::
15045 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.<clinit>()::CD,15048
15048 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
15057 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.<clinit>()::CD,15067:CD,15071
15067 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::JM,15071
15071 :: CALL :: call :: Ljava/util/Map :: v8 = synchronizedMap(v5)::JM,15071
15085 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.<clinit>()::CD,15095
15095 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
20527 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
20588 :: CALL :: call :: J :: v35 = lowMask(#(-_.!~*'()))::
20594 :: CALL :: call :: J :: v37 = highMask(#(-_.!~*'()))::
20614 :: CALL :: call :: J :: v46 = lowMask(#(;/?:@&=+$,[]))::
20620 :: CALL :: call :: J :: v48 = highMask(#(;/?:@&=+$,[]))::
20644 :: CALL :: call :: J :: v61 = lowMask(#(:@&=+$,))::
20653 :: CALL :: call :: J :: v65 = highMask(#(:@&=+$,))::
20662 :: CALL :: call :: J :: v70 = lowMask(#(;/))::
20671 :: CALL :: call :: J :: v74 = highMask(#(;/))::
20678 :: CALL :: call :: J :: v78 = lowMask(#(-))::
20684 :: CALL :: call :: J :: v80 = highMask(#(-))::
20690 :: CALL :: call :: J :: v83 = lowMask(#(.))::
20696 :: CALL :: call :: J :: v85 = highMask(#(.))::
20705 :: CALL :: call :: J :: v90 = lowMask(#(;:&=+$,))::
20714 :: CALL :: call :: J :: v94 = highMask(#(;:&=+$,))::
20724 :: CALL :: call :: J :: v100 = lowMask(#($,;:@&=+))::
20733 :: CALL :: call :: J :: v104 = highMask(#($,;:@&=+))::
20748 :: CALL :: call :: J :: v113 = lowMask(#(.:@[]))::
20763 :: CALL :: call :: J :: v121 = highMask(#(.:@[]))::
20772 :: CALL :: call :: J :: v126 = lowMask(#(%))::
20781 :: CALL :: call :: J :: v130 = highMask(#(%))::
20788 :: CALL :: call :: J :: v134 = lowMask(#([))::
20794 :: CALL :: call :: J :: v136 = highMask(#([))::
20802 :: CALL :: call :: J :: v140 = lowMask(#(+-.))::
20811 :: CALL :: call :: J :: v144 = highMask(#(+-.))::
20821 :: CALL :: call :: J :: v150 = lowMask(#(;?:@&=+$,))::
20830 :: CALL :: call :: J :: v154 = highMask(#(;?:@&=+$,))::
20837 :: NORM :: declaration :: [C :: v157 = new []::
20838 :: EXPR :: modify :: C :: v157[#(0)] = #(48)::
20842 :: EXPR :: modify :: C :: v157[#(1)] = #(49)::
20846 :: EXPR :: modify :: C :: v157[#(2)] = #(50)::
20850 :: EXPR :: modify :: C :: v157[#(3)] = #(51)::
20854 :: EXPR :: modify :: C :: v157[#(4)] = #(52)::
20858 :: EXPR :: modify :: C :: v157[#(5)] = #(53)::
20862 :: EXPR :: modify :: C :: v157[#(6)] = #(54)::
20866 :: EXPR :: modify :: C :: v157[#(7)] = #(55)::
20870 :: EXPR :: modify :: C :: v157[#(8)] = #(56)::
20874 :: EXPR :: modify :: C :: v157[#(9)] = #(57)::
20878 :: EXPR :: modify :: C :: v157[#(10)] = #(65)::
20882 :: EXPR :: modify :: C :: v157[#(11)] = #(66)::
20886 :: EXPR :: modify :: C :: v157[#(12)] = #(67)::
20890 :: EXPR :: modify :: C :: v157[#(13)] = #(68)::
20894 :: EXPR :: modify :: C :: v157[#(14)] = #(69)::
20898 :: EXPR :: modify :: C :: v157[#(15)] = #(70)::
21059 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.<clinit>()::CD,21069:CD,21085
21069 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v7 = getResourceManager(#(jfatcat))::CL,35034
21085 :: NORM :: declaration :: Ljava/util/Random :: v13 = new java.util.Random::
21291 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.<clinit>()::CD,21301
21301 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^e(....).+\d+$))::
21491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.<clinit>()::CD,21494:CD,21502:CD,21507:CD,21515:CD,21520:CD,21528:CD,21533
21494 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
21502 :: NORM :: declaration :: [Ljava/lang/String :: v7 = new java.lang.String[]::
21503 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(0)] = #(1.75A)::
21507 :: CALL :: call :: Ljava/lang/Object :: v11 = v4.put(#(2.01), v7)::
21515 :: NORM :: declaration :: [Ljava/lang/String :: v14 = new java.lang.String[]::
21516 :: EXPR :: modify :: Ljava/lang/Object :: v14[#(0)] = #(1.75B)::
21520 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.put(#(2.02), v14)::
21528 :: NORM :: declaration :: [Ljava/lang/String :: v20 = new java.lang.String[]::
21529 :: EXPR :: modify :: Ljava/lang/Object :: v20[#(0)] = #(1.75C)::
21533 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.put(#(2.03), v20)::
27903 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECPParameters.DuplicationHint.<clinit>()::CD,27906:JM,35268:CD,27913:CD,27915:CD,27922:CD,27924:CD,27931:CD,27933:CD,27934:CD,27940:CD,27946
27906 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v2 = new org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint::DD,27913
27913 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.SHORTER = v2::
27915 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v7 = new org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint::DD,27922
27922 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.LEFT = v7::
27924 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v12 = new org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint::DD,27931
27931 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.RIGHT = v12::
27933 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v18 = new org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint[]::
27934 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v19 = org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.SHORTER::DD,27936
27936 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(0)] = v19::
27940 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v20 = org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.LEFT::DD,27942
27942 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(1)] = v20::
27946 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CECPParameters$DuplicationHint :: v21 = org.biojava.nbio.structure.align.ce.CECPParameters$DuplicationHint.RIGHT::DD,27948
27948 :: EXPR :: modify :: Ljava/lang/Object :: v18[#(2)] = v21::
28067 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.<clinit>()::CD,28070:JM,49312:JM,42947:JM,49701:JM,49254:JM,49318:JM,42951:JM,42955:JM,42959:JM,42963:JM,49268:JM,49332:JM,49304:JM,42943:CD,28075:JM,35313:CD,28085:CD,28087:JM,42995:JM,42999:JM,43003:JM,42991:CD,28092:CD,28102:CD,28104:CD,28114:CD,28116:CD,28117:CD,28123:CD,28129
28070 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,28085
28075 :: CALL :: call :: Ljava/util/List :: v8 = v5.getExtensions()::CL,35288
28085 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB = v2::
28087 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v10 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,28102
28092 :: CALL :: call :: Ljava/util/List :: v16 = v13.getExtensions()::CL,35288
28102 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF = v10::
28104 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v18 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,28114
28114 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN = v18::
28116 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v25 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::
28117 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v26 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::DD,28119
28119 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(0)] = v26::
28123 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::DD,28125
28125 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(1)] = v27::
28129 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v28 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,28131
28131 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(2)] = v28::
28207 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.<clinit>()::CD,28210:CD,28229
28210 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
28211 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
28215 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
28219 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
28223 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(pdb)::
28229 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
28230 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
28234 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
28238 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
28242 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(pdb)::
28277 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.<clinit>()::CD,28281:CD,28316:CD,28321:CD,28325:CD,28330:CD,28347
28281 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
28316 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
28321 :: CALL :: call :: Ljava/lang/String :: v27 = v21.getMessage()::
28325 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(v27)::
28330 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
28347 :: EXPR :: assign :: Ljava/lang/Exception :: v21 = catch <exc>::
28390 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.<clinit>()::CD,28393:CD,28412
28393 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
28394 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
28398 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
28402 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
28406 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(mmCIF)::
28412 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
28413 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
28417 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
28421 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
28425 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(mmCIF)::
28484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.<clinit>()::CD,28500:CD,28501:CD,28542:CD,28552:CD,28553:CD,28574:CD,28584:CD,28585:CD,28722
28500 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::CF,28501
28501 :: NORM :: declaration :: [Ljava/lang/String :: v10 = new java.lang.String[]::JM,28542
28502 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(0)] = #(MOL_ID:)::
28506 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(1)] = #(MOLECULE:)::
28510 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(2)] = #(CHAIN:)::
28514 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(3)] = #(SYNONYM:)::
28518 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(4)] = #(EC:)::
28522 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(5)] = #(FRAGMENT:)::
28526 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(6)] = #(ENGINEERED:)::
28530 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(7)] = #(MUTATION:)::
28534 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(8)] = #(BIOLOGICAL_UNIT:)::
28538 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(9)] = #(OTHER_DETAILS:)::
28542 :: CALL :: call :: Ljava/util/List :: v32 = asList(v10)::JM,28542
28552 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::CF,28553
28553 :: NORM :: declaration :: [Ljava/lang/String :: v35 = new java.lang.String[]::JM,28574
28554 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = #(HETEROGEN:)::
28558 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = #(ENGINEEREED:)::
28562 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = #(FRAGMENT,)::
28566 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = #(MUTANT:)::
28570 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = #(SYNTHETIC:)::
28574 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,28574
28584 :: NORM :: declaration :: Ljava/util/ArrayList :: v44 = new java.util.ArrayList::CF,28585
28585 :: NORM :: declaration :: [Ljava/lang/String :: v46 = new java.lang.String[]::JM,28722
28586 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(0)] = #(ENGINEERED:)::
28590 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(1)] = #(MOL_ID:)::
28594 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(2)] = #(SYNTHETIC:)::
28598 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(3)] = #(FRAGMENT:)::
28602 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(4)] = #(ORGANISM_SCIENTIFIC:)::
28606 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(5)] = #(ORGANISM_COMMON:)::
28610 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(6)] = #(ORGANISM_TAXID:)::
28614 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(7)] = #(STRAIN:)::
28618 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(8)] = #(VARIANT:)::
28622 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(9)] = #(CELL_LINE:)::
28626 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(10)] = #(ATCC:)::
28630 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(11)] = #(ORGAN:)::
28634 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(12)] = #(TISSUE:)::
28638 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(13)] = #(CELL:)::
28642 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(14)] = #(ORGANELLE:)::
28646 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(15)] = #(SECRETION:)::
28650 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(16)] = #(GENE:)::
28654 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(17)] = #(CELLULAR_LOCATION:)::
28658 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(18)] = #(EXPRESSION_SYSTEM:)::
28662 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(19)] = #(EXPRESSION_SYSTEM_TAXID:)::
28666 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(20)] = #(EXPRESSION_SYSTEM_STRAIN:)::
28670 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(21)] = #(EXPRESSION_SYSTEM_VAR...)::
28674 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(22)] = #(EXPRESSION_SYSTEM_CEL...)::
28678 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(23)] = #(EXPRESSION_SYSTEM_ATC...)::
28682 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(24)] = #(EXPRESSION_SYSTEM_ORGAN:)::
28686 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(25)] = #(EXPRESSION_SYSTEM_TISSUE:)::
28690 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(26)] = #(EXPRESSION_SYSTEM_CELL:)::
28694 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(27)] = #(EXPRESSION_SYSTEM_ORG...)::
28698 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(28)] = #(EXPRESSION_SYSTEM_CEL...)::
28702 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(29)] = #(EXPRESSION_SYSTEM_VEC...)::
28706 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(30)] = #(EXPRESSION_SYSTEM_VECTOR:)::
28710 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(31)] = #(EXPRESSION_SYSTEM_PLA...)::
28714 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(32)] = #(EXPRESSION_SYSTEM_GENE:)::
28718 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(33)] = #(OTHER_DETAILS:)::
28722 :: CALL :: call :: Ljava/util/List :: v100 = asList(v46)::JM,28722
28924 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.<clinit>()::CD,28928:CD,28943
28928 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
28943 :: NORM :: declaration :: Ljava/util/Hashtable :: v11 = new java.util.Hashtable::
28958 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.<clinit>()::CD,28961:CD,28967:CD,28969:CD,28975:CD,28977:CD,28983:CD,28985:CD,28991:CD,28993:CD,28999:CD,29001:CD,29007:CD,29009:CD,29015:CD,29017:CD,29023:CD,29025:CD,29031:CD,29033:CD,29039:CD,29041:CD,29047:CD,29049:CD,29055:CD,29057:CD,29063:CD,29065:CD,29066:CD,29072:CD,29078:CD,29084:CD,29090:CD,29096:CD,29102:CD,29108:CD,29114:CD,29120:CD,29126:CD,29132:CD,29138
28961 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = new org.biojava.nbio.structure.PDBStatus$Status::DD,28967
28967 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE = v2::
28969 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v6 = new org.biojava.nbio.structure.PDBStatus$Status::DD,28975
28975 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.CURRENT = v6::
28977 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v10 = new org.biojava.nbio.structure.PDBStatus$Status::DD,28983
28983 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.AUTH = v10::
28985 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = new org.biojava.nbio.structure.PDBStatus$Status::DD,28991
28991 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HOLD = v14::
28993 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v18 = new org.biojava.nbio.structure.PDBStatus$Status::DD,28999
28999 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HPUB = v18::
29001 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v22 = new org.biojava.nbio.structure.PDBStatus$Status::DD,29007
29007 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.POLC = v22::
29009 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = new org.biojava.nbio.structure.PDBStatus$Status::DD,29015
29015 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.PROC = v26::
29017 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v30 = new org.biojava.nbio.structure.PDBStatus$Status::DD,29023
29023 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REFI = v30::
29025 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v34 = new org.biojava.nbio.structure.PDBStatus$Status::DD,29031
29031 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REPL = v34::
29033 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = new org.biojava.nbio.structure.PDBStatus$Status::DD,29039
29039 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WAIT = v38::
29041 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v42 = new org.biojava.nbio.structure.PDBStatus$Status::DD,29047
29047 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WDRN = v42::
29049 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v46 = new org.biojava.nbio.structure.PDBStatus$Status::DD,29055
29055 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.MODEL = v46::
29057 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = new org.biojava.nbio.structure.PDBStatus$Status::DD,29063
29063 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN = v50::
29065 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v55 = new org.biojava.nbio.structure.PDBStatus$Status[]::
29066 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,29068
29068 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(0)] = v56::
29072 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,29074
29074 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(1)] = v57::
29078 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,29080
29080 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(2)] = v58::
29084 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,29086
29086 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(3)] = v59::
29090 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,29092
29092 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(4)] = v60::
29096 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,29098
29098 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(5)] = v61::
29102 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,29104
29104 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(6)] = v62::
29108 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,29110
29110 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(7)] = v63::
29114 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,29116
29116 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(8)] = v64::
29120 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,29122
29122 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(9)] = v65::
29126 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,29128
29128 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(10)] = v66::
29132 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,29134
29134 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(11)] = v67::
29138 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,29140
29140 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(12)] = v68::
29240 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.<clinit>()::CD,29256:CD,29262
29256 :: CALL :: call :: Ljava/util/regex/Pattern :: v10 = compile(#(.*\s([A-Z]+)(\s'.+')?...))::
29262 :: CALL :: call :: Ljava/util/TreeMap :: v12 = parseSpaceGroupsXML()::CL,35348
29322 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.<clinit>()::CD,29332:CD,29340:CD,29347:CD,29354:CD,29361:CD,29368:CD,29375
29332 :: NORM :: declaration :: Ljava/util/HashSet :: v5 = new java.util.HashSet::
29340 :: CALL :: call :: Z :: v10 = v7.add(#(disulf))::
29347 :: CALL :: call :: Z :: v14 = v11.add(#(covale))::
29354 :: CALL :: call :: Z :: v18 = v15.add(#(covale_base))::
29361 :: CALL :: call :: Z :: v22 = v19.add(#(covale_phosphate))::
29368 :: CALL :: call :: Z :: v26 = v23.add(#(covale_sugar))::
29375 :: CALL :: call :: Z :: v30 = v27.add(#(modres))::
29409 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucType.<clinit>()::CD,29412:CD,29413:JM,35539:JM,35542:CD,29424:CD,29426:CD,29427:CD,29438:CD,29440:CD,29441:CD,29452:CD,29454:CD,29455:CD,29466:CD,29468:CD,29469:CD,29480:CD,29482:CD,29483:CD,29494:CD,29496:CD,29497:CD,29508:CD,29510:CD,29511:CD,29522:CD,29524:CD,29525:CD,29531:CD,29537:CD,29543:CD,29549:CD,29555:CD,29561:CD,29567
29412 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v2 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,29424
29413 :: CALL :: call :: Ljava/lang/Character :: v8 = valueOf(#(72))::
29424 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix4 = v2::
29426 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v10 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,29438
29427 :: CALL :: call :: Ljava/lang/Character :: v16 = valueOf(#(69))::
29438 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.extended = v10::
29440 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v18 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,29452
29441 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(66))::
29452 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bridge = v18::
29454 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v26 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,29466
29455 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(71))::
29466 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix3 = v26::
29468 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v34 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,29480
29469 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(#(73))::
29480 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix5 = v34::
29482 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v42 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,29494
29483 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(84))::
29494 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.turn = v42::
29496 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v50 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,29508
29497 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(83))::
29508 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bend = v50::
29510 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v58 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,29522
29511 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(32))::
29522 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.coil = v58::
29524 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v67 = new org.biojava.nbio.structure.secstruc.SecStrucType[]::
29525 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v68 = org.biojava.nbio.structure.secstruc.SecStrucType.helix4::DD,29527
29527 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(0)] = v68::
29531 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v69 = org.biojava.nbio.structure.secstruc.SecStrucType.extended::DD,29533
29533 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(1)] = v69::
29537 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v70 = org.biojava.nbio.structure.secstruc.SecStrucType.bridge::DD,29539
29539 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(2)] = v70::
29543 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v71 = org.biojava.nbio.structure.secstruc.SecStrucType.helix3::DD,29545
29545 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(3)] = v71::
29549 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v72 = org.biojava.nbio.structure.secstruc.SecStrucType.helix5::DD,29551
29551 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(4)] = v72::
29555 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v73 = org.biojava.nbio.structure.secstruc.SecStrucType.turn::DD,29557
29557 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(5)] = v73::
29561 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v74 = org.biojava.nbio.structure.secstruc.SecStrucType.bend::DD,29563
29563 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(6)] = v74::
29567 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v75 = org.biojava.nbio.structure.secstruc.SecStrucType.coil::DD,29569
29569 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(7)] = v75::
29650 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.<clinit>()::JM,35569
29724 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.<clinit>()::CD,29727:CD,29730:JM,35650:JM,35653:CD,29741:CD,29743:CD,29746:CD,29757:CD,29759:CD,29760:CD,29770:CD,29772:CD,29773:CD,29779:CD,29785:CD,29793:CD,29806
29727 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v2 = new org.biojava.nbio.structure.GroupType::DD,29741
29730 :: CALL :: call :: Ljava/util/Set :: v8 = matchPolymerTypes(v6)::CL,35577
29741 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.AMINOACID = v2::
29743 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v10 = new org.biojava.nbio.structure.GroupType::DD,29757
29746 :: CALL :: call :: Ljava/util/Set :: v16 = matchPolymerTypes(v14)::CL,35577
29757 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.NUCLEOTIDE = v10::
29759 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v18 = new org.biojava.nbio.structure.GroupType::DD,29770
29760 :: CALL :: call :: Ljava/util/Set :: v23 = getHetatmTypes()::CL,35664
29770 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.HETATM = v18::
29772 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/GroupType :: v26 = new org.biojava.nbio.structure.GroupType[]::
29773 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v27 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,29775
29775 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(0)] = v27::
29779 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v28 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,29781
29781 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(1)] = v28::
29785 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v29 = org.biojava.nbio.structure.GroupType.HETATM::DD,29787
29787 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(2)] = v29::
29793 :: NORM :: declaration :: [Ljava/lang/String :: v30 = new java.lang.String[]::JM,29806
29794 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(0)] = #(HOH)::
29798 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(1)] = #(DOD)::
29802 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(2)] = #(WAT)::
29806 :: CALL :: call :: Ljava/util/List :: v35 = asList(v30)::JM,29806
29852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.<clinit>()::CD,29855:JM,35761:JM,35755:JM,35758:CD,29864:CD,29866:CD,29875:CD,29877:CD,29886:CD,29888:CD,29897:CD,29899:CD,29908:CD,29910:CD,29919:CD,29921:CD,29930:CD,29932:CD,29941:CD,29943:CD,29952:CD,29954:CD,29963:CD,29965:CD,29974:CD,29976:CD,29977:CD,29983:CD,29989:CD,29995:CD,30001:CD,30007:CD,30013:CD,30019:CD,30025:CD,30031:CD,30037:CD,30045
29855 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,29864
29864 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION = v2::
29866 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v8 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,29875
29875 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR = v8::
29877 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v12 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,29886
29886 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR = v12::
29888 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v17 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,29897
29897 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY = v17::
29899 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v22 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,29908
29908 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY = v22::
29910 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v27 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,29919
29919 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION = v27::
29921 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v32 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,29930
29930 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION = v32::
29932 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v37 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,29941
29941 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING = v37::
29943 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v42 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,29952
29952 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION = v42::
29954 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v47 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,29963
29963 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER = v47::
29965 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v52 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,29974
29974 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY = v52::
29976 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v58 = new org.biojava.nbio.structure.ExperimentalTechnique[]::
29977 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v59 = org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION::DD,29979
29979 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
29983 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v60 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR::DD,29985
29985 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
29989 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v61 = org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR::DD,29991
29991 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
29995 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v62 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY::DD,29997
29997 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
30001 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v63 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY::DD,30003
30003 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
30007 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v64 = org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION::DD,30009
30009 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
30013 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v65 = org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION::DD,30015
30015 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
30019 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v66 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING::DD,30021
30021 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
30025 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v67 = org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION::DD,30027
30027 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
30031 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v68 = org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER::DD,30033
30033 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
30037 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v69 = org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY::DD,30039
30039 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
30045 :: CALL :: call :: Ljava/util/HashMap :: v71 = initExpTechStr2Value()::CL,35774
30188 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.<clinit>()::CD,30191:JM,35835:CD,30198:CD,30200:CD,30207:CD,30209:CD,30216:CD,30218:CD,30225:CD,30227:CD,30234:CD,30236:CD,30243:CD,30245:CD,30252:CD,30254:CD,30261:CD,30263:CD,30270:CD,30272:CD,30279:CD,30281:CD,30288:CD,30290:CD,30291:CD,30297:CD,30303:CD,30309:CD,30315:CD,30321:CD,30327:CD,30333:CD,30339:CD,30345:CD,30351:CD,30359:CD,30365:CD,30370:CD,30376:CD,30382:CD,30387:CD,30393:CD,30399:CD,30404:CD,30410:CD,30416:CD,30423:CD,30430:CD,30435:CD,30441:CD,30442:CD,30445:CD,30453
30191 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,30198
30198 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide = v2::
30200 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v7 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,30207
30207 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide = v7::
30209 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v12 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,30216
30216 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna = v12::
30218 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,30225
30225 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna = v17::
30227 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v22 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,30234
30234 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna = v22::
30236 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v27 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,30243
30243 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide = v27::
30245 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,30252
30252 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide = v32::
30254 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v37 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,30261
30261 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer = v37::
30263 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v42 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,30270
30270 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide = v42::
30272 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v47 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,30279
30279 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid = v47::
30281 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v52 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,30288
30288 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown = v52::
30290 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v58 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::
30291 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v59 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::DD,30293
30293 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
30297 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v60 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::DD,30299
30299 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
30303 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v61 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::DD,30305
30305 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
30309 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v62 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::DD,30311
30311 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
30315 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v63 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna::DD,30317
30317 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
30321 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v64 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide::DD,30323
30323 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
30327 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v65 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide::DD,30329
30329 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
30333 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v66 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer::DD,30335
30335 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
30339 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v67 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide::DD,30341
30341 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
30345 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v68 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid::DD,30347
30347 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
30351 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v69 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown::DD,30353
30353 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
30359 :: NORM :: declaration :: Ljava/util/HashSet :: v70 = new java.util.HashSet::JM,30370
30365 :: CALL :: call :: Z :: v74 = v70.add(v72)::
30370 :: CALL :: call :: Ljava/util/Set :: v76 = unmodifiableSet(v70)::JM,30370
30376 :: NORM :: declaration :: Ljava/util/HashSet :: v77 = new java.util.HashSet::JM,30387
30382 :: CALL :: call :: Z :: v81 = v77.add(v79)::
30387 :: CALL :: call :: Ljava/util/Set :: v83 = unmodifiableSet(v77)::JM,30387
30393 :: NORM :: declaration :: Ljava/util/HashSet :: v84 = new java.util.HashSet::JM,30404
30399 :: CALL :: call :: Z :: v88 = v84.add(v86)::
30404 :: CALL :: call :: Ljava/util/Set :: v90 = unmodifiableSet(v84)::JM,30404
30410 :: NORM :: declaration :: Ljava/util/HashSet :: v91 = new java.util.HashSet::JM,30435
30416 :: CALL :: call :: Z :: v95 = v91.add(v93)::
30423 :: CALL :: call :: Z :: v98 = v91.add(v96)::
30430 :: CALL :: call :: Z :: v101 = v91.add(v99)::
30435 :: CALL :: call :: Ljava/util/Set :: v103 = unmodifiableSet(v91)::JM,30435
30441 :: NORM :: declaration :: Ljava/util/HashSet :: v104 = new java.util.HashSet::JM,30453
30442 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v106 = values()::JM,30445:CL,35844
30445 :: CALL :: call :: Ljava/util/List :: v108 = asList(v106)::JM,30445
30453 :: CALL :: call :: Ljava/util/Set :: v111 = unmodifiableSet(v104)::JM,30453
30580 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.<clinit>()::CD,30596:CD,30603:CD,30607:CD,30609:CD,30611:CD,30616:CD,30618:CD,30623:CD,30625:CD,30630:CD,30632
30596 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::
30603 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,30607
30607 :: EXPR :: modify :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs = v11::
30609 :: EXPR :: reference :: Ljava/util/List :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
30611 :: CALL :: call :: Z :: v16 = v13.add(#(CON))::
30616 :: EXPR :: reference :: Ljava/util/List :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
30618 :: CALL :: call :: Z :: v20 = v17.add(#(PRN))::
30623 :: EXPR :: reference :: Ljava/util/List :: v21 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
30625 :: CALL :: call :: Z :: v24 = v21.add(#(AUX))::
30630 :: EXPR :: reference :: Ljava/util/List :: v25 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
30632 :: CALL :: call :: Z :: v28 = v25.add(#(NUL))::
30655 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.PerformanceBehavior.<clinit>()::CD,30658:CD,30664:CD,30666:CD,30672:CD,30674:CD,30675:CD,30681
30658 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v2 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,30664
30664 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY = v2::
30666 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v6 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,30672
30672 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE = v6::
30674 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior[]::
30675 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v12 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::DD,30677
30677 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(0)] = v12::
30681 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v13 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE::DD,30683
30683 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(1)] = v13::
30706 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.<clinit>()::CD,30709:JM,35944:JM,35947:CD,30717:CD,30719:CD,30729:CD,30731:CD,30741:CD,30743:CD,30753:CD,30755:CD,30765:CD,30767:CD,30777:CD,30779:CD,30789:CD,30791:CD,30801:CD,30803:CD,30813:CD,30815:CD,30825:CD,30827:CD,30837:CD,30839:CD,30849:CD,30851:CD,30861:CD,30863:CD,30873:CD,30875:CD,30885:CD,30887:CD,30897:CD,30899:CD,30909:CD,30911:CD,30921:CD,30923:CD,30933:CD,30935:CD,30945:CD,30947:CD,30957:CD,30959:CD,30969:CD,30971:CD,30981:CD,30983:CD,30993:CD,30995:CD,31005:CD,31007:CD,31017:CD,31019:CD,31029:CD,31031:CD,31041:CD,31043:CD,31051:CD,31053:CD,31061:CD,31063:CD,31064:CD,31070:CD,31076:CD,31082:CD,31088:CD,31094:CD,31100:CD,31106:CD,31112:CD,31118:CD,31124:CD,31130:CD,31136:CD,31142:CD,31148:CD,31154:CD,31160:CD,31166:CD,31172:CD,31178:CD,31184:CD,31190:CD,31196:CD,31202:CD,31208:CD,31214:CD,31220:CD,31226:CD,31232:CD,31238
30709 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30717
30717 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn = v2::
30719 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v8 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30729
30729 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking = v8::
30731 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v14 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30741
30741 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking = v14::
30743 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v20 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30753
30753 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine = v20::
30755 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v26 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30765
30765 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike = v26::
30767 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30777
30777 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus = v32::
30779 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v38 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30789
30789 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus = v38::
30791 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v44 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30801
30801 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus = v44::
30803 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30813
30813 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus = v50::
30815 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v56 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30825
30825 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking = v56::
30827 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v62 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30837
30837 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking = v62::
30839 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v68 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30849
30849 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus = v68::
30851 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v74 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30861
30861 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus = v74::
30863 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v80 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30873
30873 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus = v80::
30875 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v86 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30885
30885 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus = v86::
30887 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v92 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30897
30897 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide = v92::
30899 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v98 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30909
30909 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking = v98::
30911 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v104 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30921
30921 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking = v104::
30923 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v110 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30933
30933 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide = v110::
30935 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v116 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30945
30945 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking = v116::
30947 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v122 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30957
30957 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking = v122::
30959 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v128 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30969
30969 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide = v128::
30971 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v133 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30981
30981 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking = v133::
30983 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v139 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,30993
30993 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking = v139::
30995 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v145 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,31005
31005 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking = v145::
31007 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v151 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,31017
31017 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking = v151::
31019 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v157 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,31029
31029 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking = v157::
31031 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v163 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,31041
31041 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking = v163::
31043 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v169 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,31051
31051 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer = v169::
31053 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v174 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,31061
31061 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp = v174::
31063 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v180 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::
31064 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v181 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn::DD,31066
31066 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(0)] = v181::
31070 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v182 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking::DD,31072
31072 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(1)] = v182::
31076 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v183 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::DD,31078
31078 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(2)] = v183::
31082 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v184 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine::DD,31084
31084 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(3)] = v184::
31088 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v185 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike::DD,31090
31090 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(4)] = v185::
31094 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v186 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus::DD,31096
31096 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(5)] = v186::
31100 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v187 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus::DD,31102
31102 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(6)] = v187::
31106 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v188 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus::DD,31108
31108 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(7)] = v188::
31112 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v189 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus::DD,31114
31114 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(8)] = v189::
31118 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v190 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking::DD,31120
31120 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(9)] = v190::
31124 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v191 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking::DD,31126
31126 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(10)] = v191::
31130 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v192 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus::DD,31132
31132 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(11)] = v192::
31136 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v193 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus::DD,31138
31138 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(12)] = v193::
31142 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v194 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus::DD,31144
31144 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(13)] = v194::
31148 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v195 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus::DD,31150
31150 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(14)] = v195::
31154 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v196 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide::DD,31156
31156 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(15)] = v196::
31160 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v197 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking::DD,31162
31162 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(16)] = v197::
31166 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v198 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking::DD,31168
31168 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(17)] = v198::
31172 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v199 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide::DD,31174
31174 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(18)] = v199::
31178 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v200 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking::DD,31180
31180 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(19)] = v200::
31184 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v201 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking::DD,31186
31186 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(20)] = v201::
31190 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v202 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide::DD,31192
31192 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(21)] = v202::
31196 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v203 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking::DD,31198
31198 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(22)] = v203::
31202 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v204 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking::DD,31204
31204 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(23)] = v204::
31208 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v205 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking::DD,31210
31210 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(24)] = v205::
31214 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v206 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking::DD,31216
31216 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(25)] = v206::
31220 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v207 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking::DD,31222
31222 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(26)] = v207::
31226 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v208 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking::DD,31228
31228 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(27)] = v208::
31232 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v209 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer::DD,31234
31234 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(28)] = v209::
31238 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v210 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp::DD,31240
31240 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(29)] = v210::
31523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.<clinit>()::CD,31533:CD,31540
31533 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v5 = new java.util.concurrent.atomic.AtomicBoolean::
31540 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::
31555 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.<clinit>()::CD,31558:CD,31564:CD,31570:CD,31574:CD,31578:CD,31584:CD,31588:CD,31594:CD,31598:CD,31604:CD,31608:CD,31614:CD,31618:CD,31624:CD,31628:CD,31634:CD,31638:CD,31644:CD,31648:CD,31654:CD,31658:CD,31664:CD,31668:CD,31674:CD,31678:CD,31684:CD,31688:CD,31694:CD,31698:CD,31704:CD,31708:CD,31714:CD,31718:CD,31724:CD,31728:CD,31734:CD,31738:CD,31744:CD,31748:CD,31754:CD,31758:CD,31764:CD,31768:CD,31774:CD,31778:CD,31784:CD,31788:CD,31794:CD,31798:CD,31802:CD,31804:CD,31808:CD,31812:CD,31818:CD,31822:CD,31828:CD,31832:CD,31838:CD,31842:CD,31848:CD,31852:CD,31858:CD,31862:CD,31868:CD,31872:CD,31878:CD,31882:CD,31888:CD,31892:CD,31898:CD,31902:CD,31908:CD,31912:CD,31918:CD,31922:CD,31928:CD,31932:CD,31938:CD,31942:CD,31948:CD,31952:CD,31958:CD,31962:CD,31968:CD,31972:CD,31978:CD,31982:CD,31988:CD,31992:CD,31998:CD,32002:CD,32008:CD,32012:CD,32018:CD,32022:CD,32028:CD,32032:CD,32038:CD,32042:CD,32046:CD,32052:CD,32056:CD,32062:CD,32066:CD,32072:CD,32076:CD,32082:CD,32086:CD,32092:CD,32096:CD,32102:CD,32106:CD,32110:CD,32112:CD,32116:CD,32120:CD,32126:CD,32130:CD,32136:CD,32140:CD,32146:CD,32150:CD,32156:CD,32160:CD,32166:CD,32170:CD,32176:CD,32180:CD,32186:CD,32190:CD,32192:CD,32196:CD,32201:CD,32203:CD,32207
31558 :: CALL :: call :: Ljava/lang/Character :: v4 = valueOf(#(88))::
31564 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(#(78))::
31570 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,31794:JM,31798:JM,31802
31574 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(65))::
31578 :: CALL :: call :: Ljava/lang/Object :: v15 = v8.put(#(ALA), v13)::
31584 :: CALL :: call :: Ljava/lang/Character :: v19 = valueOf(#(68))::
31588 :: CALL :: call :: Ljava/lang/Object :: v21 = v8.put(#(ASP), v19)::
31594 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(78))::
31598 :: CALL :: call :: Ljava/lang/Object :: v26 = v8.put(#(ASN), v24)::
31604 :: CALL :: call :: Ljava/lang/Character :: v30 = valueOf(#(66))::
31608 :: CALL :: call :: Ljava/lang/Object :: v32 = v8.put(#(ASX), v30)::
31614 :: CALL :: call :: Ljava/lang/Character :: v36 = valueOf(#(82))::
31618 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.put(#(ARG), v36)::
31624 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(#(67))::
31628 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.put(#(CYS), v42)::
31634 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(69))::
31638 :: CALL :: call :: Ljava/lang/Object :: v50 = v8.put(#(GLU), v48)::
31644 :: CALL :: call :: Ljava/lang/Character :: v54 = valueOf(#(81))::
31648 :: CALL :: call :: Ljava/lang/Object :: v56 = v8.put(#(GLN), v54)::
31654 :: CALL :: call :: Ljava/lang/Character :: v60 = valueOf(#(71))::
31658 :: CALL :: call :: Ljava/lang/Object :: v62 = v8.put(#(GLY), v60)::
31664 :: CALL :: call :: Ljava/lang/Character :: v66 = valueOf(#(90))::
31668 :: CALL :: call :: Ljava/lang/Object :: v68 = v8.put(#(GLX), v66)::
31674 :: CALL :: call :: Ljava/lang/Character :: v72 = valueOf(#(72))::
31678 :: CALL :: call :: Ljava/lang/Object :: v74 = v8.put(#(HIS), v72)::
31684 :: CALL :: call :: Ljava/lang/Character :: v78 = valueOf(#(73))::
31688 :: CALL :: call :: Ljava/lang/Object :: v80 = v8.put(#(ILE), v78)::
31694 :: CALL :: call :: Ljava/lang/Character :: v84 = valueOf(#(75))::
31698 :: CALL :: call :: Ljava/lang/Object :: v86 = v8.put(#(LYS), v84)::
31704 :: CALL :: call :: Ljava/lang/Character :: v90 = valueOf(#(76))::
31708 :: CALL :: call :: Ljava/lang/Object :: v92 = v8.put(#(LEU), v90)::
31714 :: CALL :: call :: Ljava/lang/Character :: v96 = valueOf(#(77))::
31718 :: CALL :: call :: Ljava/lang/Object :: v98 = v8.put(#(MET), v96)::
31724 :: CALL :: call :: Ljava/lang/Character :: v102 = valueOf(#(70))::
31728 :: CALL :: call :: Ljava/lang/Object :: v104 = v8.put(#(PHE), v102)::
31734 :: CALL :: call :: Ljava/lang/Character :: v108 = valueOf(#(80))::
31738 :: CALL :: call :: Ljava/lang/Object :: v110 = v8.put(#(PRO), v108)::
31744 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(83))::
31748 :: CALL :: call :: Ljava/lang/Object :: v116 = v8.put(#(SER), v114)::
31754 :: CALL :: call :: Ljava/lang/Character :: v120 = valueOf(#(84))::
31758 :: CALL :: call :: Ljava/lang/Object :: v122 = v8.put(#(THR), v120)::
31764 :: CALL :: call :: Ljava/lang/Character :: v126 = valueOf(#(87))::
31768 :: CALL :: call :: Ljava/lang/Object :: v128 = v8.put(#(TRP), v126)::
31774 :: CALL :: call :: Ljava/lang/Character :: v132 = valueOf(#(89))::
31778 :: CALL :: call :: Ljava/lang/Object :: v134 = v8.put(#(TYR), v132)::
31784 :: CALL :: call :: Ljava/lang/Character :: v138 = valueOf(#(86))::
31788 :: CALL :: call :: Ljava/lang/Object :: v140 = v8.put(#(VAL), v138)::
31794 :: CALL :: call :: Ljava/util/Map :: v142 = synchronizedMap(v8)::JM,31794:JM,31798:JM,31802
31798 :: CALL :: call :: Ljava/util/Map :: v144 = unmodifiableMap(v142)::JM,31798:JM,31802
31802 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1 = v144::
31804 :: NORM :: declaration :: Ljava/util/HashMap :: v145 = new java.util.HashMap::JM,32032:JM,32028
31808 :: CALL :: call :: Ljava/lang/Character :: v148 = valueOf(#(65))::
31812 :: CALL :: call :: Ljava/lang/Object :: v150 = v145.put(v148, #(ALA))::
31818 :: CALL :: call :: Ljava/lang/Character :: v152 = valueOf(#(68))::
31822 :: CALL :: call :: Ljava/lang/Object :: v154 = v145.put(v152, #(ASP))::
31828 :: CALL :: call :: Ljava/lang/Character :: v156 = valueOf(#(78))::
31832 :: CALL :: call :: Ljava/lang/Object :: v158 = v145.put(v156, #(ASN))::
31838 :: CALL :: call :: Ljava/lang/Character :: v160 = valueOf(#(66))::
31842 :: CALL :: call :: Ljava/lang/Object :: v162 = v145.put(v160, #(ASX))::
31848 :: CALL :: call :: Ljava/lang/Character :: v164 = valueOf(#(82))::
31852 :: CALL :: call :: Ljava/lang/Object :: v166 = v145.put(v164, #(ARG))::
31858 :: CALL :: call :: Ljava/lang/Character :: v168 = valueOf(#(67))::
31862 :: CALL :: call :: Ljava/lang/Object :: v170 = v145.put(v168, #(CYS))::
31868 :: CALL :: call :: Ljava/lang/Character :: v172 = valueOf(#(69))::
31872 :: CALL :: call :: Ljava/lang/Object :: v174 = v145.put(v172, #(GLU))::
31878 :: CALL :: call :: Ljava/lang/Character :: v176 = valueOf(#(81))::
31882 :: CALL :: call :: Ljava/lang/Object :: v178 = v145.put(v176, #(GLN))::
31888 :: CALL :: call :: Ljava/lang/Character :: v180 = valueOf(#(71))::
31892 :: CALL :: call :: Ljava/lang/Object :: v182 = v145.put(v180, #(GLY))::
31898 :: CALL :: call :: Ljava/lang/Character :: v184 = valueOf(#(90))::
31902 :: CALL :: call :: Ljava/lang/Object :: v186 = v145.put(v184, #(GLX))::
31908 :: CALL :: call :: Ljava/lang/Character :: v188 = valueOf(#(72))::
31912 :: CALL :: call :: Ljava/lang/Object :: v190 = v145.put(v188, #(HIS))::
31918 :: CALL :: call :: Ljava/lang/Character :: v192 = valueOf(#(73))::
31922 :: CALL :: call :: Ljava/lang/Object :: v194 = v145.put(v192, #(ILE))::
31928 :: CALL :: call :: Ljava/lang/Character :: v196 = valueOf(#(75))::
31932 :: CALL :: call :: Ljava/lang/Object :: v198 = v145.put(v196, #(LYS))::
31938 :: CALL :: call :: Ljava/lang/Character :: v200 = valueOf(#(76))::
31942 :: CALL :: call :: Ljava/lang/Object :: v202 = v145.put(v200, #(LEU))::
31948 :: CALL :: call :: Ljava/lang/Character :: v204 = valueOf(#(77))::
31952 :: CALL :: call :: Ljava/lang/Object :: v206 = v145.put(v204, #(MET))::
31958 :: CALL :: call :: Ljava/lang/Character :: v208 = valueOf(#(70))::
31962 :: CALL :: call :: Ljava/lang/Object :: v210 = v145.put(v208, #(PHE))::
31968 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(80))::
31972 :: CALL :: call :: Ljava/lang/Object :: v214 = v145.put(v212, #(PRO))::
31978 :: CALL :: call :: Ljava/lang/Character :: v216 = valueOf(#(83))::
31982 :: CALL :: call :: Ljava/lang/Object :: v218 = v145.put(v216, #(SER))::
31988 :: CALL :: call :: Ljava/lang/Character :: v220 = valueOf(#(84))::
31992 :: CALL :: call :: Ljava/lang/Object :: v222 = v145.put(v220, #(THR))::
31998 :: CALL :: call :: Ljava/lang/Character :: v224 = valueOf(#(87))::
32002 :: CALL :: call :: Ljava/lang/Object :: v226 = v145.put(v224, #(TRP))::
32008 :: CALL :: call :: Ljava/lang/Character :: v228 = valueOf(#(89))::
32012 :: CALL :: call :: Ljava/lang/Object :: v230 = v145.put(v228, #(TYR))::
32018 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(86))::
32022 :: CALL :: call :: Ljava/lang/Object :: v234 = v145.put(v232, #(VAL))::
32028 :: CALL :: call :: Ljava/util/Map :: v236 = synchronizedMap(v145)::JM,32032:JM,32028
32032 :: CALL :: call :: Ljava/util/Map :: v238 = unmodifiableMap(v236)::JM,32032
32038 :: NORM :: declaration :: Ljava/util/HashMap :: v239 = new java.util.HashMap::JM,32102:JM,32106:JM,32110
32042 :: CALL :: call :: Ljava/lang/Character :: v243 = valueOf(#(65))::
32046 :: CALL :: call :: Ljava/lang/Object :: v245 = v239.put(#(DA), v243)::
32052 :: CALL :: call :: Ljava/lang/Character :: v248 = valueOf(#(67))::
32056 :: CALL :: call :: Ljava/lang/Object :: v250 = v239.put(#(DC), v248)::
32062 :: CALL :: call :: Ljava/lang/Character :: v253 = valueOf(#(71))::
32066 :: CALL :: call :: Ljava/lang/Object :: v255 = v239.put(#(DG), v253)::
32072 :: CALL :: call :: Ljava/lang/Character :: v258 = valueOf(#(73))::
32076 :: CALL :: call :: Ljava/lang/Object :: v260 = v239.put(#(DI), v258)::
32082 :: CALL :: call :: Ljava/lang/Character :: v264 = valueOf(#(85))::
32086 :: CALL :: call :: Ljava/lang/Object :: v266 = v239.put(#(DU), v264)::
32092 :: CALL :: call :: Ljava/lang/Character :: v269 = valueOf(#(84))::
32096 :: CALL :: call :: Ljava/lang/Object :: v271 = v239.put(#(DT), v269)::
32102 :: CALL :: call :: Ljava/util/Map :: v273 = synchronizedMap(v239)::JM,32102:JM,32106:JM,32110
32106 :: CALL :: call :: Ljava/util/Map :: v275 = unmodifiableMap(v273)::JM,32106:JM,32110
32110 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1 = v275::
32112 :: NORM :: declaration :: Ljava/util/HashMap :: v276 = new java.util.HashMap::JM,32176:JM,32180
32116 :: CALL :: call :: Ljava/lang/Character :: v279 = valueOf(#(65))::
32120 :: CALL :: call :: Ljava/lang/Object :: v281 = v276.put(v279, #(DA))::
32126 :: CALL :: call :: Ljava/lang/Character :: v283 = valueOf(#(67))::
32130 :: CALL :: call :: Ljava/lang/Object :: v285 = v276.put(v283, #(DC))::
32136 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(71))::
32140 :: CALL :: call :: Ljava/lang/Object :: v289 = v276.put(v287, #(DG))::
32146 :: CALL :: call :: Ljava/lang/Character :: v291 = valueOf(#(73))::
32150 :: CALL :: call :: Ljava/lang/Object :: v293 = v276.put(v291, #(DI))::
32156 :: CALL :: call :: Ljava/lang/Character :: v295 = valueOf(#(85))::
32160 :: CALL :: call :: Ljava/lang/Object :: v297 = v276.put(v295, #(DU))::
32166 :: CALL :: call :: Ljava/lang/Character :: v299 = valueOf(#(84))::
32170 :: CALL :: call :: Ljava/lang/Object :: v301 = v276.put(v299, #(DT))::
32176 :: CALL :: call :: Ljava/util/Map :: v303 = synchronizedMap(v276)::JM,32176:JM,32180
32180 :: CALL :: call :: Ljava/util/Map :: v305 = unmodifiableMap(v303)::JM,32180
32186 :: NORM :: declaration :: Ljava/util/ArrayList :: v306 = new java.util.ArrayList::
32190 :: EXPR :: reference :: Ljava/util/Map :: v308 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1::
32192 :: CALL :: call :: Ljava/util/Set :: v310 = v308.keySet()::
32196 :: CALL :: call :: Z :: v312 = v306.addAll(v310)::
32201 :: EXPR :: reference :: Ljava/util/Map :: v313 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1::
32203 :: CALL :: call :: Ljava/util/Set :: v315 = v313.keySet()::
32207 :: CALL :: call :: Z :: v317 = v306.addAll(v315)::
33184 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = #(null)::
33187 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = #(null)::
33190 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $name ::
33193 :: CALL :: call :: V :: p0 $this .init()::JM,33190:CL,36059
33205 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getAtoms(org.biojava.nbio.structure.StructureIdentifier)::CE,33206:CD,33210:CD,33215:CD,33219
33206 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.align.util.AtomCache.getAtoms(org.biojava.nbio.structure.StructureIdentifier)::
33210 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p0 $this .getStructure(p1 $name )::CL,36611
33215 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v8 = getAtomCAArray(v6)::JM,33219:CL,36640
33219 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Atom :: return v8::DD,33206
33274 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/multiple/mc/MultipleMcParameters :: v7 = new org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters::DD,33278
33278 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/multiple/mc/MultipleMcParameters :: p0 $this .params = v7::
33281 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/StructureAlignment :: p0 $this .pairwise = p1 $pairwiseAlgo ::
33284 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/StructureAlignment :: v9 = p0 $this .pairwise::DD,33287
33287 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 48::JM,36768:JM,36803
33348 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain.align(java.util.List)::CE,33349:CD,33356:CD,33373:CD,33379
33349 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain.align(java.util.List)::JM,33447:JM,37327
33353 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/mc/MultipleMcParameters :: v4 = p0 $this .params::DD,33356
33356 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 32::JM,36832
33373 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v13 = p0 $this .align(p1 $atomArrays , v11)::JM,33379:CL,36856
33379 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: return v13::DD,33349
33398 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.setStructureIdentifiers(java.util.List)::JM,33403
33403 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structureIdentifiers = p1 $structureNames ::
33415 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.setAlgorithmName(java.lang.String)::JM,33420
33420 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .algorithmName = p1 $algorithmName ::
33432 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.setVersion(java.lang.String)::JM,33437
33437 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = p1 $version ::
33443 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentWriter.toFatCat(org.biojava.nbio.structure.align.multiple.MultipleAlignment)::CD,33447:CD,33451:CD,33452:CD,33456:CD,33464:CD,33469:CD,33473:CD,33478:CD,33482:JM,37327
33447 :: NORM :: declaration :: Ljava/io/StringWriter :: v3 = new java.io.StringWriter::
33451 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
33452 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $alignment .toString()::CL,37024
33456 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
33464 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v5.append(#())::
33469 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
33473 :: CALL :: call :: Ljava/io/StringWriter :: v17 = v3.append(v15)::
33478 :: NORM :: declaration :: Ljava/util/ArrayList :: v18 = new java.util.ArrayList::JM,37327
33482 :: CALL :: call :: Ljava/util/List :: v21 = getSequenceAlignment(p1 $alignment , v18)::JM,37327:CL,37322
34807 :: EXPR :: modify :: I :: p0 $this .atomicNumber = p3 $atomicNumber ::
34810 :: EXPR :: modify :: I :: p0 $this .period = p4 $period ::
34813 :: EXPR :: modify :: F :: p0 $this .VDWRadius = p6 $VDWRadius ::
34816 :: EXPR :: modify :: F :: p0 $this .covalentRadius = p7 $covalentRadius ::
34819 :: EXPR :: modify :: I :: p0 $this .valenceElectronCount = p8 $valenceElectronCount ::
34822 :: EXPR :: modify :: I :: p0 $this .minimumValence = p9 $minimumValence ::
34825 :: EXPR :: modify :: I :: p0 $this .maximumValence = p10 $maximumValence ::
34828 :: EXPR :: modify :: I :: p0 $this .commonValence = p11 $commonValence ::
34831 :: EXPR :: modify :: I :: p0 $this .maximumCovalentValence = p12 $maximumCovalentValence ::
34834 :: EXPR :: modify :: F :: p0 $this .atomicMass = p13 $atomicMass ::
34837 :: EXPR :: modify :: I :: p0 $this .coreElectronCount = p14 $coreElectronCount ::
34840 :: EXPR :: modify :: I :: p0 $this .oxidationState = p15 $oxidationState ::
34843 :: EXPR :: modify :: [I :: p0 $this .allOxidationStates = p16 $allOxidationStates ::
34846 :: EXPR :: modify :: F :: p0 $this .paulingElectronegativity = p17 $paulingElectronegativity ::
34849 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: p0 $this .elementType = p18 $elementType ::
34886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.values()::CF,34887:CD,34889:CD,34891:CD,34892:CD,34900
34887 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.values()::JM,10746
34889 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/Element :: v2 = org.biojava.nbio.structure.Element.ENUM$VALUES::DD,34891
34891 :: EXPR :: assign :: I :: v4 = v2.length::DD,34892
34892 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v5 = new org.biojava.nbio.structure.Element[]::DD,34900
34900 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Element :: return v5::CF,34887
34939 :: EXPR :: modify :: Z :: p0 $this .metal = p3 $metal ::
34960 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
35034 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.ResourceManager.getResourceManager(java.lang.String)::JM,42722:JM,42714
35268 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
35288 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::CE,35289:CD,35295:CD,35299
35289 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::JM,109127:JM,109083
35292 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .extensions::JM,35299:JM,35295
35295 :: CALL :: call :: Ljava/util/List :: v5 = unmodifiableList(v3)::JM,35299:JM,35295
35299 :: NORM :: compound :: Ljava/util/List :: return v5::DD,35289
35313 :: EXPR :: modify :: Ljava/util/List :: p0 $this .extensions = p3 $extensions ::
35348 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML()::CD,35352:CD,35356:CD,35361:CD,35371:CD,35375:CD,35382:CD,35387:CD,35391:CD,35396:CD,35404:CD,35410:CD,35415:CD,35419:CD,35424:CD,35432:CD,35435:CD,35441:CD,35445:CD,35487:CD,35491:CD,35494:CD,35495
35352 :: CALL :: call :: Ljava/lang/ClassLoader :: v4 = v2.getClassLoader()::JM,35361
35356 :: CALL :: call :: Ljava/io/InputStream :: v7 = v4.getResourceAsStream(#(org/biojava/nbio/stru...))::JM,35361
35361 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CF,35371:CD,35368
35368 :: CALL :: call :: V :: exit(#(1))::
35371 :: NORM :: declaration :: Ljava/util/TreeMap :: v14 = new java.util.TreeMap::DD,35495
35375 :: CALL :: call :: Ljava/util/TreeMap :: v17 = parseSpaceGroupsXML(v7)::JM,35495:CL,43031
35382 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
35387 :: CALL :: call :: Ljava/lang/String :: v37 = v31.getMessage()::
35391 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::
35396 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
35404 :: CALL :: call :: V :: exit(#(1))::
35410 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
35415 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
35419 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
35424 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
35432 :: CALL :: call :: V :: exit(#(1))::
35435 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
35441 :: CALL :: call :: Ljava/util/Collection :: v49 = v45.values()::JM,35491:JM,35454
35445 :: CALL :: call :: Ljava/util/Iterator :: v51 = v49.iterator()::JM,35491:JM,35454
35450 :: CALL :: call :: Ljava/lang/Object :: v56 = v51.next()::JM,35491:JM,35454
35454 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::JM,35474:JM,35470
35464 :: CALL :: call :: Ljava/lang/Object :: v63 = v59.put(v61, v57)::
35470 :: CALL :: call :: Ljava/lang/String :: v65 = v57.getAltShortSymbol()::JM,35474:JM,35470
35474 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 181::CD,35481:JM,35491:JM,35454
35481 :: CALL :: call :: Ljava/lang/Object :: v70 = v66.put(v68, v57)::
35487 :: CALL :: call :: Z :: v53 = v51.hasNext()::JM,35491:JM,35454
35491 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 136::CD,35450:CD,35454:CD,35464:CD,35470:CD,35474:CD,35487:JM,35491
35494 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
35495 :: EXPR :: assign :: null :: PHI v45 = v17, v14, v14::CF,35435:JM,35491:JM,35454
35539 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
35542 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .type = p4 $stype ::
35560 :: EXPR :: modify :: Z :: p0 $this .downloadAll = #(0)::
35569 :: CALL :: call :: V :: initPath()::CL,43159
35577 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.matchPolymerTypes(java.util.Set)::CD,35581:CD,35585:CD,35588:CD,35609:CD,35610:CD,35615
35581 :: NORM :: declaration :: Ljava/util/HashSet :: v3 = new java.util.HashSet::JM,35610
35585 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v6 = values()::JM,35588:CL,43188
35588 :: EXPR :: assign :: I :: v7 = v6.length::DD,35609
35597 :: CALL :: call :: Z :: v12 = p1 $allowedTypes .contains(v10)::JM,35602
35602 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 48::CD,35603:CF,35608
35603 :: CALL :: call :: Z :: v14 = v3.add(v9)::
35608 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,35615
35609 :: PRED :: IF :: Z :: if (v17 < v7) goto 25::CD,35597:CD,35602:CD,35608:CD,35615:JM,35610
35610 :: CALL :: call :: Ljava/util/Set :: v19 = unmodifiableSet(v3)::JM,35610
35615 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,35608:DD,35609
35650 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
35653 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .types = p4 $types ::
35664 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.getHetatmTypes()::CD,35667:CD,35671:CD,35674:CD,35710:CD,35711:CD,35716
35667 :: NORM :: declaration :: Ljava/util/HashSet :: v2 = new java.util.HashSet::JM,35711
35671 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = values()::JM,35674:CL,43188
35674 :: EXPR :: assign :: I :: v6 = v5.length::DD,35710
35686 :: CALL :: call :: Z :: v13 = v11.contains(v8)::JM,35691
35691 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 64::CD,35698:CD,35703:CF,35709
35698 :: CALL :: call :: Z :: v18 = v16.contains(v8)::JM,35703
35703 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 64::CD,35704:CF,35709
35704 :: CALL :: call :: Z :: v20 = v2.add(v8)::
35709 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,35716
35710 :: PRED :: IF :: Z :: if (v23 < v6) goto 24::CD,35686:CD,35691:CD,35709:CD,35716:JM,35711
35711 :: CALL :: call :: Ljava/util/Set :: v25 = unmodifiableSet(v2)::JM,35711
35716 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,35709:DD,35710
35755 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
35758 :: EXPR :: modify :: Z :: p0 $this .isCrystallographic = p4 $isXtallographic ::
35761 :: EXPR :: modify :: Z :: p0 $this .isNmr = p5 $isNmr ::
35774 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.initExpTechStr2Value()::CD,35777:CD,35781:CD,35784:CD,35801:CD,35803
35777 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
35781 :: CALL :: call :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = values()::JM,35784:CL,43240
35784 :: EXPR :: assign :: I :: v6 = v5.length::DD,35801
35794 :: CALL :: call :: Ljava/lang/Object :: v12 = v2.put(v10, v8)::
35800 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,35803
35801 :: PRED :: IF :: Z :: if (v15 < v6) goto 24::CD,35794:CD,35800:CD,35803
35803 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,35800:DD,35801
35835 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .entity_poly_type = p3 $entity_poly_type ::
35844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::CF,35845:CD,35847:CD,35849:CD,35850:CD,35858
35845 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::JM,30445
35847 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.ENUM$VALUES::DD,35849
35849 :: EXPR :: assign :: I :: v4 = v2.length::DD,35850
35850 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::DD,35858
35858 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v5::CF,35845
35944 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p3 $pt ::
35947 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chem_comp_type = p4 $chem_comp_type ::
35975 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .initPdbFilePath()::CL,43305
35982 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .initCacheFilePath()::CL,43631
36059 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.init()::CD,36066:CD,36075:CD,36076:CD,36125:CD,36126:CD,36131:CD,36136:CD,36155:CD,36156:CD,36161:CD,36166:CD,36182:CD,36183:CD,36188:CD,36193:CD,36212:CD,36213:CD,36218:CD,36223:CD,36239:CD,36240:CD,36245:CD,36250:CD,36266:CD,36267:CD,36272:CD,36277:CD,36307:CD,36308:CD,36313:CD,36318:CD,36328:CD,36329:CD,36337:CD,36342
36066 :: CALL :: call :: [Ljava/lang/String :: v7 = v3.split(#(:), #(2))::JM,36075
36072 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = #(null)::
36075 :: EXPR :: assign :: I :: v9 = v7.length::DD,36076
36076 :: PRED :: IF :: Z :: if (v9 <= #(1)) goto 396::CD,36085:CD,36089:CD,36103:CD,36354:CD,36359
36077 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(1)]::JM,36292
36085 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
36089 :: CALL :: call :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v17 = valueOf(v15)::JM,36093:CL,44247
36093 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v17::
36097 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = #(null)::
36100 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = p0 $this .mySource::DD,36103
36103 :: PRED :: IF :: Z :: if (v20 == #(null)) goto 396::CD,36104:CD,36110:CD,36118:CD,36354:CD,36359
36104 :: CALL :: call :: [I :: v78 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,44260
36107 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v79 = p0 $this .mySource::
36110 :: CALL :: call :: I :: v81 = v79.ordinal()::
36114 :: EXPR :: reference :: I :: v82 = v78[v81]::DD,36118
36118 :: PRED :: IF :: null :: switch v82::CD,36119:CD,36149:CD,36176:CD,36206:CD,36233:CD,36260:CD,36287:CD,36292:CD,36301
36119 :: CALL :: call :: Z :: v168 = p0 $this .initFromScop(v11)::CL,44403
36125 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v169 = new java.lang.IllegalArgumentException::
36126 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
36131 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v11)::
36136 :: CALL :: call :: Ljava/lang/String :: v176 = v174.toString()::
36149 :: CALL :: call :: Z :: v157 = p0 $this .initFromPDP(v155)::CL,44462
36155 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v158 = new java.lang.IllegalArgumentException::
36156 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
36161 :: CALL :: call :: Ljava/lang/StringBuilder :: v163 = v159.append(v11)::
36166 :: CALL :: call :: Ljava/lang/String :: v165 = v163.toString()::
36176 :: CALL :: call :: Z :: v145 = p0 $this .initFromCATH(v11)::CL,44514
36182 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v146 = new java.lang.IllegalArgumentException::
36183 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
36188 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v11)::
36193 :: CALL :: call :: Ljava/lang/String :: v153 = v151.toString()::
36206 :: CALL :: call :: Z :: v134 = p0 $this .initFromBIO(v132)::CL,44573
36212 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v135 = new java.lang.IllegalArgumentException::
36213 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::
36218 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v136.append(v11)::
36223 :: CALL :: call :: Ljava/lang/String :: v142 = v140.toString()::
36233 :: CALL :: call :: Z :: v122 = p0 $this .initFromECOD(v11)::CL,44614
36239 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v123 = new java.lang.IllegalArgumentException::
36240 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
36245 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v124.append(v11)::
36250 :: CALL :: call :: Ljava/lang/String :: v130 = v128.toString()::
36260 :: CALL :: call :: Z :: v111 = p0 $this .initFromPDB(v11)::CL,44667
36266 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v112 = new java.lang.IllegalArgumentException::
36267 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v113 = new java.lang.StringBuilder::
36272 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v113.append(v11)::
36277 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
36287 :: CALL :: call :: Z :: v95 = v11.startsWith(#(/))::JM,36292
36292 :: PRED :: IF :: Z :: if (v95 != #(0)) goto 333::CD,36293:CD,36301
36293 :: CALL :: call :: Z :: v109 = p0 $this .initFromFile()::CL,44749
36301 :: CALL :: call :: Z :: v98 = p0 $this .initFromURL(v96)::CL,44772
36307 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v99 = new java.lang.IllegalArgumentException::
36308 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
36313 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v11)::
36318 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
36328 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v83 = new java.lang.IllegalStateException::
36329 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
36337 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v84.append(v87)::
36342 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
36354 :: CALL :: call :: Z :: v24 = p0 $this .initFromScop(v22)::JM,36359:CL,44403
36359 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 408::CD,36364:CD,36369
36364 :: CALL :: call :: Z :: v27 = p0 $this .initFromCATH(v25)::JM,36369:CL,44514
36369 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 420::CD,36374:CD,36379
36374 :: CALL :: call :: Z :: v30 = p0 $this .initFromECOD(v28)::JM,36379:CL,44614
36379 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 432::CD,36384:CD,36389
36384 :: CALL :: call :: Z :: v33 = p0 $this .initFromURL(v31)::JM,36389:CL,44772
36389 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 442::CF,36391:CD,36395:CD,36403:CD,36407
36391 :: NORM :: declaration :: Ljava/io/File :: v34 = new java.io.File::JM,36432:JM,36475
36392 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .name::JM,44884:JM,44855
36395 :: CALL :: call :: Ljava/lang/String :: v37 = expandUserHome(v35)::JM,44884:JM,44855:CL,44830
36403 :: CALL :: call :: Z :: v40 = v34.canRead()::JM,36407
36407 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 577::CD,36408:CD,36412:CD,36508
36408 :: CALL :: call :: Z :: v42 = v34.isDirectory()::JM,36412
36412 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 577::CD,36416:CD,36421:CD,36500:CD,36508
36416 :: CALL :: call :: Z :: v49 = v46.matches(#(\d\w\w\w))::JM,36421
36421 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 531::CD,36432:CD,36436:CD,36475:CD,36479
36432 :: CALL :: call :: Ljava/io/File :: v68 = v34.getAbsoluteFile()::JM,36432
36436 :: CALL :: call :: Ljava/lang/String :: v70 = v68.getParent()::
36475 :: CALL :: call :: Ljava/io/File :: v56 = v34.getAbsoluteFile()::JM,36475
36479 :: CALL :: call :: Ljava/lang/String :: v58 = v56.getParent()::
36500 :: CALL :: call :: Z :: v76 = p0 $this .initFromFile()::CL,44749
36508 :: CALL :: call :: Z :: v45 = p0 $this .initFromPDB(v43)::CL,44667
36611 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(org.biojava.nbio.structure.StructureIdentifier)::CD,36616:CD,36621
36616 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v5 = p1 $strucId .loadStructure(p0 $this )::CL,44986:CL,45002:CL,44969:CL,45018
36621 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $strucId .reduce(v5)::CL,45069:CL,45086:CL,45052:CL,45035
36640 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getAtomCAArray(org.biojava.nbio.structure.Structure)::CE,36641:CD,36644:CD,36648:CD,36652:CD,36709:CD,36713:CD,36714:CD,36718:CD,36719:CD,36724:CD,36725
36641 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.StructureTools.getAtomCAArray(org.biojava.nbio.structure.Structure)::JM,33219
36644 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,36718:JM,36724
36648 :: CALL :: call :: Ljava/util/List :: v6 = p1 $s .getChains()::JM,36713:CL,45114
36652 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,36713
36657 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,36713
36662 :: CALL :: call :: Ljava/util/List :: v16 = v14.getAtomGroups()::JM,36708:CL,45126
36666 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,36708
36671 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,36708
36676 :: CALL :: call :: Z :: v26 = v23.hasAtom(#(CA))::JM,36681:CL,45135
36681 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 111::CD,36682:CD,36687:CD,36691:CD,36693:JM,36708
36682 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v28 = v23.getAtom(#(CA))::CL,45210
36687 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v30 = v28.getElement()::JM,36693:CL,45274
36691 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v31 = org.biojava.nbio.structure.Element.C::CF,36693
36693 :: PRED :: IF :: Z :: if (v30 != v31) goto 111::CD,36694:CD,36699:JM,36708
36694 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v33 = v23.getAtom(#(CA))::CL,45210
36699 :: CALL :: call :: Z :: v35 = v3.add(v33)::
36704 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,36708
36708 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 51::CD,36671:CD,36676:CD,36681:CD,36704:JM,36708:JM,36713
36709 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,36713
36713 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,36657:CD,36662:CD,36666:CD,36704:CD,36708:CD,36709:JM,36713:JM,36718
36714 :: CALL :: call :: I :: v37 = v3.size()::JM,36718
36718 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v38 = new org.biojava.nbio.structure.Atom[]::JM,36724
36719 :: CALL :: call :: [Ljava/lang/Object :: v40 = v3.toArray(v38)::JM,36724
36724 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::CF,36725
36725 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Atom :: return v41::DD,36641
36768 :: CALL :: call :: V :: p0 $this .reset()::CL,45283
36803 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::
36832 :: CALL :: call :: V :: p0 $this .reset()::CL,45390
36856 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain.align(java.util.List,java.lang.Object)::CE,36857:CD,36872:CD,36879:CD,36886:CD,36893:CD,36896:CD,36900:CD,36905:CD,36909:CD,36930:JM,45953:JM,45893:JM,46214:JM,45900:JM,45907:JM,45908:JM,46164:JM,45912:JM,46104:JM,46168:JM,46169:JM,46108:JM,46109:JM,46053:JM,52774:JM,52775:JM,46060:JM,52780:JM,46191:JM,46064:JM,52785:JM,46195:JM,45878:JM,46071:JM,46199:JM,45882:JM,46075:JM,45949:CD,36943:CD,36949:CD,36953:CD,36957:CD,36958:CD,36965:CD,36969:CD,36976:CD,36983:CD,36987
36857 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain.align(java.util.List,java.lang.Object)::JM,33379
36872 :: CALL :: call :: V :: v8.setAtomArrays(p1 $atomArrays )::CL,45509
36879 :: CALL :: call :: V :: v10.setAlgorithmName(#(jMultipleMC))::CL,33415
36886 :: CALL :: call :: V :: v13.setVersion(#(1.1))::CL,33432
36893 :: CALL :: call :: J :: v18 = currentTimeMillis()::
36896 :: CALL :: call :: Ljava/lang/Long :: v20 = valueOf(v18)::
36900 :: CALL :: call :: V :: v16.setIoTime(v20)::CL,45520
36905 :: CALL :: call :: V :: p0 $this .setParameters(v22)::CL,45531
36909 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v25 = p0 $this .generateSeed(p1 $atomArrays )::CL,45553
36930 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/multiple/mc/MultipleMcOptimizer :: v35 = new org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer::JM,45953:JM,45893:JM,46214:JM,45900:JM,45907:JM,45908:JM,46164:JM,45912:JM,46104:JM,46168:JM,46169:JM,46108:JM,46109:JM,46053:JM,52774:JM,52775:JM,46060:JM,52780:JM,46191:JM,46064:JM,52785:JM,46195:JM,45878:JM,46071:JM,46199:JM,45882:JM,46075:JM,45949:JM,52897
36943 :: CALL :: call :: J :: v40 = currentTimeMillis()::JM,36957
36949 :: CALL :: call :: Ljava/lang/Long :: v43 = v41.getIoTime()::JM,36957:CL,46328
36953 :: CALL :: call :: J :: v45 = v43.longValue()::JM,36957
36957 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v40 - v45::
36958 :: CALL :: call :: Ljava/lang/Long :: v48 = valueOf(v46)::
36965 :: CALL :: call :: V :: v49.setCalculationTime(v48)::CL,46337
36969 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v52 = v35.optimize()::JM,52897:JM,36987:CL,46348
36976 :: CALL :: call :: V :: v52.setEnsemble(v53)::CL,46774
36983 :: CALL :: call :: V :: v55.addMultipleAlignment(v52)::CL,46785
36987 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: return v52::DD,36857
37024 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.toString()::CD,37028:CD,37032:CD,37036:CD,37047:CD,37051:CD,37070:CD,37074:CD,37075:CD,37080:CD,37085:CD,37093:CD,37097:CD,37102:CD,37110:CD,37114:CD,37119:CD,37124:CD,37128:CD,37132:CD,37137:CD,37142:CD,37146:CD,37150:CD,37155:CD,37160:CD,37164:CD,37169:CD,37174:CD,37178:CD,37183:CD,37187:CD,37191:CD,37262:CD,37266
37028 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
37032 :: CALL :: call :: Ljava/util/List :: v6 = v4.getStructureIdentifiers()::CL,46823
37036 :: CALL :: call :: I :: v8 = v6.size()::
37047 :: CALL :: call :: Ljava/util/List :: v12 = v10.getStructureIdentifiers()::JM,37074:CL,46823
37051 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,37074
37056 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,37074
37061 :: CALL :: call :: Ljava/lang/String :: v22 = v20.getIdentifier()::CL,46861:CL,46832:CL,46842:CL,46852
37065 :: CALL :: call :: Z :: v24 = v3.add(v22)::
37070 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,37074
37074 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 41::CF,37075:CD,37056:CD,37061:CD,37065:CD,37070:JM,37074
37075 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
37080 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v3)::
37085 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#( Algorithm:))::
37093 :: CALL :: call :: Ljava/lang/String :: v35 = v33.getAlgorithmName()::CL,46871
37097 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v32.append(v35)::
37102 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v37.append(#(_))::
37110 :: CALL :: call :: Ljava/lang/String :: v43 = v41.getVersion()::CL,46880
37114 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v40.append(v43)::
37119 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v45.append(#( BlockSets: ))::
37124 :: CALL :: call :: Ljava/util/List :: v50 = p0 $this .getBlockSets()::CL,38841
37128 :: CALL :: call :: I :: v52 = v50.size()::
37132 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v48.append(v52)::
37137 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#( Blocks: ))::
37142 :: CALL :: call :: Ljava/util/List :: v59 = p0 $this .getBlocks()::CL,46889
37146 :: CALL :: call :: I :: v61 = v59.size()::
37150 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v57.append(v61)::
37155 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#( Length: ))::
37160 :: CALL :: call :: I :: v68 = p0 $this .length()::CL,46938
37164 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v66.append(v68)::
37169 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v70.append(#( Core Length: ))::
37174 :: CALL :: call :: I :: v75 = p0 $this .getCoreLength()::CL,46957
37178 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v73.append(v75)::
37183 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
37187 :: CALL :: call :: Ljava/util/Set :: v81 = p0 $this .getScores()::JM,37200:JM,37266:CL,46976
37191 :: CALL :: call :: Ljava/util/Iterator :: v83 = v81.iterator()::JM,37200:JM,37266
37196 :: CALL :: call :: Ljava/lang/Object :: v87 = v83.next()::JM,37200:JM,37266
37200 :: EXPR :: assign :: Ljava/lang/Object :: v88 = CHECKCAST v87::CF,37201
37201 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v89 = new java.lang.StringBuilder::
37202 :: CALL :: call :: Ljava/lang/String :: v91 = valueOf(v118)::
37210 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v89.append(#( ))::
37215 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v95.append(v88)::
37220 :: CALL :: call :: Ljava/lang/StringBuilder :: v100 = v97.append(#(: ))::
37225 :: CALL :: call :: Ljava/lang/String :: v102 = v100.toString()::
37229 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v103 = new java.lang.StringBuilder::
37230 :: CALL :: call :: Ljava/lang/String :: v105 = valueOf(v102)::
37239 :: CALL :: call :: Ljava/lang/Double :: v111 = p0 $this .getScore(v88)::CL,47003
37248 :: CALL :: call :: Ljava/lang/String :: v113 = format(#(%.2f), v109)::
37253 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v103.append(v113)::
37258 :: CALL :: call :: Ljava/lang/String :: v117 = v115.toString()::
37262 :: CALL :: call :: Z :: v85 = v83.hasNext()::JM,37200:JM,37266
37266 :: PRED :: IF :: Z :: if (v85 != #(0)) goto 197::CD,37196:CD,37200:CD,37201:CD,37202:CD,37210:CD,37215:CD,37220:CD,37225:CD,37229:CD,37230:CD,37239:CD,37248:CD,37253:CD,37258:CD,37262:JM,37266
37322 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentTools.getSequenceAlignment(org.biojava.nbio.structure.align.multiple.MultipleAlignment,java.util.List)::CD,37327:CD,37338:CD,37342:CD,37343:CD,37346:CD,38229
37327 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
37332 :: CALL :: call :: Z :: v11 = v4.add(#())::
37337 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v14 + #(1)::DD,38229
37338 :: CALL :: call :: I :: v8 = p1 $alignment .size()::JM,37342:CL,38720
37342 :: PRED :: IF :: Z :: if (v14 < v8) goto 16::CD,37332:CD,37337:CD,37338:CD,38229
37343 :: CALL :: call :: V :: p2 $mapSeqToStruct .clear()::
37346 :: CALL :: call :: Ljava/util/List :: v17 = p1 $alignment .getAtomArrays()::JM,37327:CL,47040
38229 :: EXPR :: assign :: null :: PHI v14 = #(0), v13::DD,37337:DD,37342
38720 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.size()::CE,38721:CD,38727:CD,38731
38721 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.size()::JM,37342:JM,45904
38727 :: CALL :: call :: I :: v5 = v3.size()::JM,38731:CL,47254
38731 :: NORM :: compound :: I :: return v5::DD,38721
38832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.getTransformations()::CE,38833:CD,38839
38833 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.getTransformations()::JM,65890
38836 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .pose::DD,38839
38839 :: NORM :: compound :: Ljava/util/List :: return v3::CF,38833
38841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.getBlockSets()::CE,38842:CD,38848:CD,38859
38842 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.getBlockSets()::JM,46163:JM,46135:JM,46924:JM,52982:JM,55994:JM,56375:JM,65924
38845 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .blockSets::DD,38848
38848 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 19::CD,38849
38849 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,38853
38853 :: EXPR :: modify :: Ljava/util/List :: p0 $this .blockSets = v5::
38856 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .blockSets::DD,38859
38859 :: NORM :: compound :: Ljava/util/List :: return v7::DD,38842
39176 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::CE,39177:CD,39180:CD,39184:CD,39193:CD,39194:CD,39198:CD,39207:CD,39208:CD,39212:CD,39221:CD,39222:CD,39226:CD,39235:CD,39236:CD,39240:CD,39249:CD,39250:CD,39254:CD,39263:CD,39264:CD,39265:CD,39266:CD,39267:CD,39268:CD,39269:CD,39270
39177 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::
39180 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,39193
39181 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainID1::DD,39184
39184 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,39189:CD,39265
39186 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainID1::JM,39265
39189 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,39265
39193 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39194
39194 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,39207
39195 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainID2::DD,39198
39198 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,39203:CD,39266
39200 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainID2::JM,39266
39203 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,39266
39207 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39208
39208 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,39221
39209 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .insCode1::DD,39212
39212 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,39217:CD,39267
39214 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::JM,39267
39217 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,39267
39221 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,39222
39222 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,39235
39223 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,39226
39226 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,39231:CD,39268
39228 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,39268
39231 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,39268
39235 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,39236
39236 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,39249
39237 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::DD,39240
39240 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,39245:CD,39269
39242 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .resnum1::JM,39269
39245 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,39269
39249 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,39250
39250 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,39263
39251 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .resnum2::DD,39254
39254 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,39259:CD,39270
39256 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .resnum2::JM,39270
39259 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,39270
39263 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,39264
39264 :: NORM :: compound :: I :: return v48::CF,39177
39265 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,39193
39266 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,39207
39267 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,39221
39268 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,39235
39269 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,39249
39270 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,39263
39440 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.hashCode()::CE,39441:CD,39444:CD,39448:CD,39457:CD,39458:CD,39459
39441 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.client.StructureName.hashCode()::
39444 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,39457
39445 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .name::DD,39448
39448 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,39453:CD,39459
39450 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .name::JM,39459
39453 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,39459
39457 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39458
39458 :: NORM :: compound :: I :: return v13::CF,39441
39459 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,39457
39472 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.hashCode()::CE,39473:CD,39476:CD,39480:CD,39489:CD,39490:CD,39494:CD,39503:CD,39504:CD,39505:CD,39506
39473 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Author.hashCode()::
39476 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(19) * #(3)::DD,39489
39477 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .surname::DD,39480
39480 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,39484:CD,39505
39481 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .surname::JM,39505
39484 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,39505
39489 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39490
39490 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(19) * v13::DD,39503
39491 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .initials::DD,39494
39494 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 48::CD,39498:CD,39506
39495 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .initials::JM,39506
39498 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,39506
39503 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39504
39504 :: NORM :: compound :: I :: return v20::CF,39473
39505 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,39489
39506 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,39503
39643 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.hashCode()::CE,39644:CD,39647:CD,39651:CD,39660:CD,39661:CD,39665:CD,39674:CD,39675:CD,39679:CD,39688:CD,39689:CD,39690:CD,39691:CD,39692
39644 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.hashCode()::JM,39863:JM,39864
39647 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,39660
39648 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainId::DD,39651
39651 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,39656:CD,39690
39653 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainId::JM,39690
39656 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,39690
39660 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39661
39661 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,39674
39662 :: EXPR :: reference :: Ljava/lang/Character :: v15 = p0 $this .insCode::DD,39665
39665 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,39670:CD,39691
39667 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::JM,39691
39670 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,39691
39674 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39675
39675 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,39688
39676 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,39679
39679 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,39684:CD,39692
39681 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::JM,39692
39684 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,39692
39688 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,39689
39689 :: NORM :: compound :: I :: return v27::CF,39644
39690 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,39660
39691 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,39674
39692 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,39688
39719 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.hashCode()::CE,39720:CD,39723:CD,39727:CD,39736:CD,39737:CD,39741:CD,39750:CD,39751:CD,39755:CD,39764:CD,39765:CD,39769:CD,39778:CD,39779:CD,39780:CD,39781:CD,39782:CD,39783
39720 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.hashCode()::
39723 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(37) * #(5)::DD,39736
39724 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::DD,39727
39727 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,39731:CD,39780
39728 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .siteID::JM,39780
39731 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,39780
39736 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39737
39737 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(37) * v13::DD,39750
39738 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::DD,39741
39741 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 50::CD,39745:CD,39781
39745 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,39781
39750 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39751
39751 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(37) * v20::DD,39764
39752 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .evCode::DD,39755
39755 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 74::CD,39759:CD,39782
39756 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .evCode::JM,39782
39759 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,39782
39764 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,39765
39765 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(37) * v27::DD,39778
39766 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .description::DD,39769
39769 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 98::CD,39773:CD,39783
39770 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::JM,39783
39773 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,39783
39778 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,39779
39779 :: NORM :: compound :: I :: return v34::DD,39720
39780 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,39736
39781 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,39750
39782 :: EXPR :: assign :: null :: PHI v26 = v25, #(0)::CF,39764
39783 :: EXPR :: assign :: null :: PHI v33 = v32, #(0)::CF,39778
39815 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.hashCode()::CE,39816:CD,39819:CD,39823:CD,39832:CD,39833:CD,39837:CD,39846:CD,39847:CD,39851:CD,39860:CD,39861:CD,39862:CD,39863:CD,39864
39816 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueRange.hashCode()::
39819 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,39832
39820 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chain::DD,39823
39823 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,39828:CD,39862
39825 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chain::JM,39862
39828 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,39862
39832 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39833
39833 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,39846
39834 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v15 = p0 $this .end::DD,39837
39837 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,39842:CD,39863
39842 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,39863:CL,39643
39846 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39847
39847 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,39860
39848 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = p0 $this .start::DD,39851
39851 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,39856:CD,39864
39856 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,39864:CL,39643
39860 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,39861
39861 :: NORM :: compound :: I :: return v27::CF,39816
39862 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,39832
39863 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,39846
39864 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,39860
39891 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::CE,39892:CD,39895:CD,39899:CD,39908:CD,39909:CD,39913:CD,39922:CD,39923:CD,39927:CD,39936:CD,39937:CD,39941:CD,39950:CD,39951:CD,39955:CD,39964:CD,39965:CD,39969:CD,39978:CD,39979:CD,39983:CD,39992:CD,39993:CD,39997:CD,40006:CD,40007:CD,40011:CD,40020:CD,40021:CD,40025:CD,40034:CD,40035:CD,40039:CD,40048:CD,40049:CD,40053:CD,40062:CD,40063:CD,40067:CD,40076:CD,40077:CD,40081:CD,40090:CD,40091:CD,40095:CD,40104:CD,40105:CD,40109:CD,40118:CD,40119:CD,40123:CD,40132:CD,40133:CD,40134:CD,40135:CD,40136:CD,40137:CD,40138:CD,40139:CD,40140:CD,40141:CD,40142:CD,40143:CD,40144:CD,40145:CD,40146:CD,40147:CD,40148:CD,40149:CD,40150
39892 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::
39895 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,39908
39896 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .architectureName::DD,39899
39899 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,39904:CD,40134
39901 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .architectureName::JM,40134
39904 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,40134
39908 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39909
39909 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,39922
39910 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainId::DD,39913
39913 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,39918:CD,40135
39915 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainId::JM,40135
39918 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,40135
39922 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39923
39923 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,39936
39924 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .domainId::DD,39927
39927 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,39932:CD,40136
39929 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::JM,40136
39932 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,40136
39936 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,39937
39937 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,39950
39938 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,39941
39941 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,39946:CD,40137
39943 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,40137
39946 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,40137
39950 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,39951
39951 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,39964
39952 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::DD,39955
39955 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,39960:CD,40138
39957 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = p0 $this .fGroup::JM,40138
39960 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,40138
39964 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,39965
39965 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,39978
39966 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p0 $this .hGroup::DD,39969
39969 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,39974:CD,40139
39971 :: EXPR :: reference :: Ljava/lang/Integer :: v44 = p0 $this .hGroup::JM,40139
39974 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,40139
39978 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,39979
39979 :: EXPR :: assign :: Ljava/lang/Object :: v49 = #(31) * v48::DD,39992
39980 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .hGroupName::DD,39983
39983 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 165::CD,39988:CD,40140
39985 :: EXPR :: reference :: Ljava/lang/String :: v51 = p0 $this .hGroupName::JM,40140
39988 :: CALL :: call :: I :: v53 = v51.hashCode()::JM,40140
39992 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v49 + v54::DD,39993
39993 :: EXPR :: assign :: Ljava/lang/Object :: v56 = #(31) * v55::DD,40006
39994 :: EXPR :: reference :: Ljava/lang/Long :: v57 = p0 $this .assemblyId::DD,39997
39997 :: PRED :: IF :: Z :: if (v57 != #(null)) goto 189::CD,40002:CD,40141
39999 :: EXPR :: reference :: Ljava/lang/Long :: v58 = p0 $this .assemblyId::JM,40141
40002 :: CALL :: call :: I :: v60 = v58.hashCode()::JM,40141
40006 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v56 + v61::DD,40007
40007 :: EXPR :: assign :: Ljava/lang/Object :: v63 = #(31) * v62::DD,40020
40008 :: EXPR :: reference :: Ljava/util/Set :: v64 = p0 $this .ligands::DD,40011
40011 :: PRED :: IF :: Z :: if (v64 != #(null)) goto 213::CD,40016:CD,40142
40016 :: CALL :: call :: I :: v67 = v65.hashCode()::JM,40142
40020 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v63 + v68::DD,40021
40021 :: EXPR :: assign :: Ljava/lang/Object :: v70 = #(31) * v69::DD,40034
40022 :: EXPR :: reference :: Ljava/lang/Boolean :: v71 = p0 $this .manual::DD,40025
40025 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 239::CD,40030:CD,40143
40027 :: EXPR :: reference :: Ljava/lang/Boolean :: v72 = p0 $this .manual::JM,40143
40030 :: CALL :: call :: I :: v74 = v72.hashCode()::JM,40143
40034 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v70 + v75::DD,40035
40035 :: EXPR :: assign :: Ljava/lang/Object :: v77 = #(31) * v76::DD,40048
40036 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .pdbId::DD,40039
40039 :: PRED :: IF :: Z :: if (v78 != #(null)) goto 263::CD,40044:CD,40144
40041 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .pdbId::JM,40144
40044 :: CALL :: call :: I :: v81 = v79.hashCode()::JM,40144
40048 :: EXPR :: assign :: Ljava/lang/Object :: v83 = v77 + v82::DD,40049
40049 :: EXPR :: assign :: Ljava/lang/Object :: v84 = #(31) * v83::DD,40062
40050 :: EXPR :: reference :: Ljava/lang/String :: v85 = p0 $this .range::DD,40053
40053 :: PRED :: IF :: Z :: if (v85 != #(null)) goto 287::CD,40058:CD,40145
40055 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .range::JM,40145
40058 :: CALL :: call :: I :: v88 = v86.hashCode()::JM,40145
40062 :: EXPR :: assign :: Ljava/lang/Object :: v90 = v84 + v89::DD,40063
40063 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(31) * v90::DD,40076
40064 :: EXPR :: reference :: Ljava/lang/Integer :: v92 = p0 $this .tGroup::DD,40067
40067 :: PRED :: IF :: Z :: if (v92 != #(null)) goto 311::CD,40072:CD,40146
40069 :: EXPR :: reference :: Ljava/lang/Integer :: v93 = p0 $this .tGroup::JM,40146
40072 :: CALL :: call :: I :: v95 = v93.hashCode()::JM,40146
40076 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v91 + v96::DD,40077
40077 :: EXPR :: assign :: Ljava/lang/Object :: v98 = #(31) * v97::DD,40090
40078 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .tGroupName::DD,40081
40081 :: PRED :: IF :: Z :: if (v99 != #(null)) goto 335::CD,40086:CD,40147
40083 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .tGroupName::JM,40147
40086 :: CALL :: call :: I :: v102 = v100.hashCode()::JM,40147
40090 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v98 + v103::DD,40091
40091 :: EXPR :: assign :: Ljava/lang/Object :: v105 = #(31) * v104::DD,40104
40092 :: EXPR :: reference :: Ljava/lang/Long :: v106 = p0 $this .uid::DD,40095
40095 :: PRED :: IF :: Z :: if (v106 != #(null)) goto 359::CD,40100:CD,40148
40097 :: EXPR :: reference :: Ljava/lang/Long :: v107 = p0 $this .uid::JM,40148
40100 :: CALL :: call :: I :: v109 = v107.hashCode()::JM,40148
40104 :: EXPR :: assign :: Ljava/lang/Object :: v111 = v105 + v110::DD,40105
40105 :: EXPR :: assign :: Ljava/lang/Object :: v112 = #(31) * v111::DD,40118
40106 :: EXPR :: reference :: Ljava/lang/Integer :: v113 = p0 $this .xGroup::DD,40109
40109 :: PRED :: IF :: Z :: if (v113 != #(null)) goto 383::CD,40114:CD,40149
40111 :: EXPR :: reference :: Ljava/lang/Integer :: v114 = p0 $this .xGroup::JM,40149
40114 :: CALL :: call :: I :: v116 = v114.hashCode()::JM,40149
40118 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v112 + v117::DD,40119
40119 :: EXPR :: assign :: Ljava/lang/Object :: v119 = #(31) * v118::DD,40132
40120 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .xGroupName::DD,40123
40123 :: PRED :: IF :: Z :: if (v120 != #(null)) goto 407::CD,40128:CD,40150
40125 :: EXPR :: reference :: Ljava/lang/String :: v121 = p0 $this .xGroupName::JM,40150
40128 :: CALL :: call :: I :: v123 = v121.hashCode()::JM,40150
40132 :: EXPR :: assign :: Ljava/lang/Object :: v125 = v119 + v124::DD,40133
40133 :: NORM :: compound :: I :: return v125::DD,39892
40134 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,39908
40135 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,39922
40136 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,39936
40137 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,39950
40138 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,39964
40139 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,39978
40140 :: EXPR :: assign :: null :: PHI v54 = #(0), v53::CF,39992
40141 :: EXPR :: assign :: null :: PHI v61 = #(0), v60::CF,40006
40142 :: EXPR :: assign :: null :: PHI v68 = #(0), v67::CF,40020
40143 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::CF,40034
40144 :: EXPR :: assign :: null :: PHI v82 = #(0), v81::CF,40048
40145 :: EXPR :: assign :: null :: PHI v89 = #(0), v88::CF,40062
40146 :: EXPR :: assign :: null :: PHI v96 = #(0), v95::CF,40076
40147 :: EXPR :: assign :: null :: PHI v103 = #(0), v102::CF,40090
40148 :: EXPR :: assign :: null :: PHI v110 = #(0), v109::CF,40104
40149 :: EXPR :: assign :: null :: PHI v117 = #(0), v116::CF,40118
40150 :: EXPR :: assign :: null :: PHI v124 = #(0), v123::CF,40132
40347 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::CE,40348:CD,40352:JM,40354:JM,40356:JM,40360:JM,40364:JM,40366
40348 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::
40352 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,40353:CD,40354
40353 :: NORM :: compound :: Z :: return #(1)::DD,40348
40354 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,40355:CD,40356:CD,40360:CD,40364:JM,40352:JM,40354:JM,40366
40355 :: NORM :: compound :: Z :: return #(0)::DD,40348
40356 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,40352:JM,40354:JM,40356:JM,40360:JM,40364:JM,40366
40360 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,40352:JM,40356:JM,40360:JM,40364:JM,40366
40364 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,40365:CD,40366:CD,40370
40365 :: NORM :: compound :: Z :: return #(0)::DD,40348
40366 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
40367 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .architectureName::DD,40370
40370 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,40374:CD,40382:CD,40387
40371 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.architectureName::DD,40374
40374 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,40375:CD,40392
40375 :: NORM :: compound :: Z :: return #(0)::DD,40348
40376 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .architectureName::JM,40387
40379 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.architectureName::JM,40387
40382 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,40387
40387 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,40388:CD,40392
40388 :: NORM :: compound :: Z :: return #(0)::DD,40348
40389 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainId::DD,40392
40392 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,40396:CD,40404:CD,40409
40393 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainId::DD,40396
40396 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,40397:CD,40414
40397 :: NORM :: compound :: Z :: return #(0)::DD,40348
40398 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainId::JM,40409
40401 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainId::JM,40409
40404 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,40409
40409 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,40410:CD,40414
40410 :: NORM :: compound :: Z :: return #(0)::DD,40348
40411 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::DD,40414
40414 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,40418:CD,40426:CD,40431
40415 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.domainId::DD,40418
40418 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,40419:CD,40436
40419 :: NORM :: compound :: Z :: return #(0)::DD,40348
40420 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .domainId::JM,40431
40423 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.domainId::JM,40431
40426 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,40431
40431 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,40432:CD,40436
40432 :: NORM :: compound :: Z :: return #(0)::DD,40348
40433 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,40436
40436 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,40440:CD,40448:CD,40453
40437 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.fGroupName::DD,40440
40440 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,40441:CD,40458
40441 :: NORM :: compound :: Z :: return #(0)::DD,40348
40442 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,40453
40445 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.fGroupName::JM,40453
40448 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,40453
40453 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,40454:CD,40458
40454 :: NORM :: compound :: Z :: return #(0)::DD,40348
40455 :: EXPR :: reference :: Ljava/lang/Integer :: v35 = p0 $this .fGroup::DD,40458
40458 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,40462:CD,40470:CD,40475
40459 :: EXPR :: reference :: Ljava/lang/Integer :: v40 = v9.fGroup::DD,40462
40462 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,40463:CD,40480
40463 :: NORM :: compound :: Z :: return #(0)::DD,40348
40464 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::JM,40475
40467 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = v9.fGroup::JM,40475
40470 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,40475
40475 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,40476:CD,40480
40476 :: NORM :: compound :: Z :: return #(0)::DD,40348
40477 :: EXPR :: reference :: Ljava/lang/Integer :: v41 = p0 $this .hGroup::DD,40480
40480 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,40484:CD,40492:CD,40497
40481 :: EXPR :: reference :: Ljava/lang/Integer :: v46 = v9.hGroup::DD,40484
40484 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,40485:CD,40502
40485 :: NORM :: compound :: Z :: return #(0)::DD,40348
40486 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .hGroup::JM,40497
40489 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = v9.hGroup::JM,40497
40492 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,40497
40497 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,40498:CD,40502
40498 :: NORM :: compound :: Z :: return #(0)::DD,40348
40499 :: EXPR :: reference :: Ljava/lang/String :: v47 = p0 $this .hGroupName::DD,40502
40502 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 240::CD,40506:CD,40514:CD,40519
40503 :: EXPR :: reference :: Ljava/lang/String :: v52 = v9.hGroupName::DD,40506
40506 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 256::CD,40507:CD,40524
40507 :: NORM :: compound :: Z :: return #(0)::DD,40348
40508 :: EXPR :: reference :: Ljava/lang/String :: v48 = p0 $this .hGroupName::JM,40519
40511 :: EXPR :: reference :: Ljava/lang/String :: v49 = v9.hGroupName::JM,40519
40514 :: CALL :: call :: Z :: v51 = v48.equals(v49)::JM,40519
40519 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 256::CD,40520:CD,40524
40520 :: NORM :: compound :: Z :: return #(0)::DD,40348
40521 :: EXPR :: reference :: Ljava/lang/Long :: v53 = p0 $this .assemblyId::DD,40524
40524 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 272::CD,40528:CD,40536:CD,40541
40525 :: EXPR :: reference :: Ljava/lang/Long :: v58 = v9.assemblyId::DD,40528
40528 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 288::CD,40529:CD,40546
40529 :: NORM :: compound :: Z :: return #(0)::DD,40348
40530 :: EXPR :: reference :: Ljava/lang/Long :: v54 = p0 $this .assemblyId::JM,40541
40533 :: EXPR :: reference :: Ljava/lang/Long :: v55 = v9.assemblyId::JM,40541
40536 :: CALL :: call :: Z :: v57 = v54.equals(v55)::JM,40541
40541 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 288::CD,40542:CD,40546
40542 :: NORM :: compound :: Z :: return #(0)::DD,40348
40543 :: EXPR :: reference :: Ljava/util/Set :: v59 = p0 $this .ligands::DD,40546
40546 :: PRED :: IF :: Z :: if (v59 != #(null)) goto 304::CD,40550:CD,40558:CD,40563
40547 :: EXPR :: reference :: Ljava/util/Set :: v64 = v9.ligands::DD,40550
40550 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 322::CD,40551:CD,40568
40551 :: NORM :: compound :: Z :: return #(0)::DD,40348
40558 :: CALL :: call :: Z :: v63 = v60.equals(v61)::JM,40563
40563 :: PRED :: IF :: Z :: if (v63 != #(0)) goto 322::CD,40564:CD,40568
40564 :: NORM :: compound :: Z :: return #(0)::DD,40348
40565 :: EXPR :: reference :: Ljava/lang/Boolean :: v65 = p0 $this .manual::DD,40568
40568 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 338::CD,40572:CD,40580:CD,40585
40569 :: EXPR :: reference :: Ljava/lang/Boolean :: v70 = v9.manual::DD,40572
40572 :: PRED :: IF :: Z :: if (v70 == #(null)) goto 354::CD,40573:CD,40590
40573 :: NORM :: compound :: Z :: return #(0)::DD,40348
40574 :: EXPR :: reference :: Ljava/lang/Boolean :: v66 = p0 $this .manual::JM,40585
40577 :: EXPR :: reference :: Ljava/lang/Boolean :: v67 = v9.manual::JM,40585
40580 :: CALL :: call :: Z :: v69 = v66.equals(v67)::JM,40585
40585 :: PRED :: IF :: Z :: if (v69 != #(0)) goto 354::CD,40586:CD,40590
40586 :: NORM :: compound :: Z :: return #(0)::DD,40348
40587 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .pdbId::DD,40590
40590 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 370::CD,40594:CD,40602:CD,40607
40591 :: EXPR :: reference :: Ljava/lang/String :: v76 = v9.pdbId::DD,40594
40594 :: PRED :: IF :: Z :: if (v76 == #(null)) goto 386::CD,40595:CD,40612
40595 :: NORM :: compound :: Z :: return #(0)::DD,40348
40596 :: EXPR :: reference :: Ljava/lang/String :: v72 = p0 $this .pdbId::JM,40607
40599 :: EXPR :: reference :: Ljava/lang/String :: v73 = v9.pdbId::JM,40607
40602 :: CALL :: call :: Z :: v75 = v72.equals(v73)::JM,40607
40607 :: PRED :: IF :: Z :: if (v75 != #(0)) goto 386::CD,40608:CD,40612
40608 :: NORM :: compound :: Z :: return #(0)::DD,40348
40609 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .range::DD,40612
40612 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 402::CD,40616:CD,40624:CD,40629
40613 :: EXPR :: reference :: Ljava/lang/String :: v82 = v9.range::DD,40616
40616 :: PRED :: IF :: Z :: if (v82 == #(null)) goto 418::CD,40617:CD,40634
40617 :: NORM :: compound :: Z :: return #(0)::DD,40348
40618 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .range::JM,40629
40621 :: EXPR :: reference :: Ljava/lang/String :: v79 = v9.range::JM,40629
40624 :: CALL :: call :: Z :: v81 = v78.equals(v79)::JM,40629
40629 :: PRED :: IF :: Z :: if (v81 != #(0)) goto 418::CD,40630:CD,40634
40630 :: NORM :: compound :: Z :: return #(0)::DD,40348
40631 :: EXPR :: reference :: Ljava/lang/Integer :: v83 = p0 $this .tGroup::DD,40634
40634 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 434::CD,40638:CD,40646:CD,40651
40635 :: EXPR :: reference :: Ljava/lang/Integer :: v88 = v9.tGroup::DD,40638
40638 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 450::CD,40639:CD,40656
40639 :: NORM :: compound :: Z :: return #(0)::DD,40348
40640 :: EXPR :: reference :: Ljava/lang/Integer :: v84 = p0 $this .tGroup::JM,40651
40643 :: EXPR :: reference :: Ljava/lang/Integer :: v85 = v9.tGroup::JM,40651
40646 :: CALL :: call :: Z :: v87 = v84.equals(v85)::JM,40651
40651 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 450::CD,40652:CD,40656
40652 :: NORM :: compound :: Z :: return #(0)::DD,40348
40653 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .tGroupName::DD,40656
40656 :: PRED :: IF :: Z :: if (v89 != #(null)) goto 466::CD,40660:CD,40668:CD,40673
40657 :: EXPR :: reference :: Ljava/lang/String :: v94 = v9.tGroupName::DD,40660
40660 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 482::CD,40661:CD,40678
40661 :: NORM :: compound :: Z :: return #(0)::DD,40348
40662 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .tGroupName::JM,40673
40665 :: EXPR :: reference :: Ljava/lang/String :: v91 = v9.tGroupName::JM,40673
40668 :: CALL :: call :: Z :: v93 = v90.equals(v91)::JM,40673
40673 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 482::CD,40674:CD,40678
40674 :: NORM :: compound :: Z :: return #(0)::DD,40348
40675 :: EXPR :: reference :: Ljava/lang/Long :: v95 = p0 $this .uid::DD,40678
40678 :: PRED :: IF :: Z :: if (v95 != #(null)) goto 498::CD,40682:CD,40690:CD,40695
40679 :: EXPR :: reference :: Ljava/lang/Long :: v100 = v9.uid::DD,40682
40682 :: PRED :: IF :: Z :: if (v100 == #(null)) goto 514::CD,40683:CD,40700
40683 :: NORM :: compound :: Z :: return #(0)::DD,40348
40684 :: EXPR :: reference :: Ljava/lang/Long :: v96 = p0 $this .uid::JM,40695
40687 :: EXPR :: reference :: Ljava/lang/Long :: v97 = v9.uid::JM,40695
40690 :: CALL :: call :: Z :: v99 = v96.equals(v97)::JM,40695
40695 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 514::CD,40696:CD,40700
40696 :: NORM :: compound :: Z :: return #(0)::DD,40348
40697 :: EXPR :: reference :: Ljava/lang/Integer :: v101 = p0 $this .xGroup::DD,40700
40700 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 530::CD,40704:CD,40712:CD,40717
40701 :: EXPR :: reference :: Ljava/lang/Integer :: v106 = v9.xGroup::DD,40704
40704 :: PRED :: IF :: Z :: if (v106 == #(null)) goto 546::CD,40705:CD,40722
40705 :: NORM :: compound :: Z :: return #(0)::DD,40348
40706 :: EXPR :: reference :: Ljava/lang/Integer :: v102 = p0 $this .xGroup::JM,40717
40709 :: EXPR :: reference :: Ljava/lang/Integer :: v103 = v9.xGroup::JM,40717
40712 :: CALL :: call :: Z :: v105 = v102.equals(v103)::JM,40717
40717 :: PRED :: IF :: Z :: if (v105 != #(0)) goto 546::CD,40718:CD,40722
40718 :: NORM :: compound :: Z :: return #(0)::DD,40348
40719 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .xGroupName::DD,40722
40722 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 562::CD,40726:CD,40734:CD,40739
40723 :: EXPR :: reference :: Ljava/lang/String :: v112 = v9.xGroupName::DD,40726
40726 :: PRED :: IF :: Z :: if (v112 == #(null)) goto 578::CD,40727:CD,40741
40727 :: NORM :: compound :: Z :: return #(0)::DD,40348
40728 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .xGroupName::JM,40739
40731 :: EXPR :: reference :: Ljava/lang/String :: v109 = v9.xGroupName::JM,40739
40734 :: CALL :: call :: Z :: v111 = v108.equals(v109)::JM,40739
40739 :: PRED :: IF :: Z :: if (v111 != #(0)) goto 578::CD,40740:CD,40741
40740 :: NORM :: compound :: Z :: return #(0)::DD,40348
40741 :: NORM :: compound :: Z :: return #(1)::DD,40348
40907 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::CE,40908:CD,40912:JM,40914:JM,40918:JM,40922:JM,40924
40908 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::
40912 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,40913:CD,40914:CD,40918:CD,40922:JM,40912:JM,40924
40913 :: NORM :: compound :: Z :: return #(0)::CF,40908
40914 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,40912:JM,40914:JM,40918:JM,40922:JM,40924
40918 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,40912:JM,40914:JM,40918:JM,40922:JM,40924
40922 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,40923:CD,40924:CD,40928
40923 :: NORM :: compound :: Z :: return #(0)::CF,40908
40924 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
40925 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .surname::DD,40928
40928 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,40932:CD,40940:CD,40945
40929 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.surname::DD,40932
40932 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,40946:CD,40950:CD,40969:CD,40970
40934 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .surname::JM,40945
40937 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.surname::JM,40945
40940 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,40945
40945 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,40946:CD,40950:CD,40969:CD,40970
40946 :: NORM :: compound :: Z :: return #(0)::CF,40908
40947 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .initials::DD,40950
40950 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 75::CD,40954:CD,40962:CD,40967
40951 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.initials::DD,40954
40954 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 93::CD,40970
40956 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .initials::JM,40967
40959 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.initials::JM,40967
40962 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,40967
40967 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 93::CD,40970
40969 :: NORM :: compound :: Z :: return v24::CF,40908
40970 :: EXPR :: assign :: null :: PHI v24 = #(0), #(1)::CF,40969
40996 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::CE,40997:CD,41001:JM,41009:JM,41013:JM,41015:JM,41003:JM,41005
40997 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::
41001 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,41002:CD,41003
41002 :: NORM :: compound :: Z :: return #(1)::CF,40997
41003 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,41004:CD,41005:CD,41009:CD,41013:JM,41015:JM,41001:JM,41003
41004 :: NORM :: compound :: Z :: return #(0)::CF,40997
41005 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,41009:JM,41013:JM,41015:JM,41001:JM,41003:JM,41005
41009 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,41009:JM,41013:JM,41015:JM,41001:JM,41005
41013 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,41014:CD,41015:CD,41019
41014 :: NORM :: compound :: Z :: return #(0)::CF,40997
41015 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
41016 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainID1::DD,41019
41019 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,41023:CD,41031:CD,41036
41020 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainID1::DD,41023
41023 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,41024:CD,41041
41024 :: NORM :: compound :: Z :: return #(0)::CF,40997
41025 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainID1::JM,41036
41028 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainID1::JM,41036
41031 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,41036
41036 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,41037:CD,41041
41037 :: NORM :: compound :: Z :: return #(0)::CF,40997
41038 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainID2::DD,41041
41041 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,41045:CD,41053:CD,41058
41042 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainID2::DD,41045
41045 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,41046:CD,41063
41046 :: NORM :: compound :: Z :: return #(0)::CF,40997
41047 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainID2::JM,41058
41050 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainID2::JM,41058
41053 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,41058
41058 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,41059:CD,41063
41059 :: NORM :: compound :: Z :: return #(0)::CF,40997
41060 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::DD,41063
41063 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,41067:CD,41075:CD,41080
41064 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.insCode1::DD,41067
41067 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,41068:CD,41085
41068 :: NORM :: compound :: Z :: return #(0)::CF,40997
41069 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .insCode1::JM,41080
41072 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.insCode1::JM,41080
41075 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,41080
41080 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,41081:CD,41085
41081 :: NORM :: compound :: Z :: return #(0)::CF,40997
41082 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,41085
41085 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,41089:CD,41097:CD,41102
41086 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.insCode2::DD,41089
41089 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,41090:CD,41107
41090 :: NORM :: compound :: Z :: return #(0)::CF,40997
41091 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,41102
41094 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.insCode2::JM,41102
41097 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,41102
41102 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,41103:CD,41107
41103 :: NORM :: compound :: Z :: return #(0)::CF,40997
41104 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::DD,41107
41107 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,41111:CD,41119:CD,41124
41108 :: EXPR :: reference :: Ljava/lang/String :: v40 = v9.resnum1::DD,41111
41111 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,41112:CD,41129
41112 :: NORM :: compound :: Z :: return #(0)::CF,40997
41113 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::JM,41124
41116 :: EXPR :: reference :: Ljava/lang/String :: v37 = v9.resnum1::JM,41124
41119 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,41124
41124 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,41125:CD,41129
41125 :: NORM :: compound :: Z :: return #(0)::CF,40997
41126 :: EXPR :: reference :: Ljava/lang/String :: v41 = p0 $this .resnum2::DD,41129
41129 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,41133:CD,41141:CD,41146
41130 :: EXPR :: reference :: Ljava/lang/String :: v46 = v9.resnum2::DD,41133
41133 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,41134:CD,41148
41134 :: NORM :: compound :: Z :: return #(0)::CF,40997
41135 :: EXPR :: reference :: Ljava/lang/String :: v42 = p0 $this .resnum2::JM,41146
41138 :: EXPR :: reference :: Ljava/lang/String :: v43 = v9.resnum2::JM,41146
41141 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,41146
41146 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,41147:CD,41148
41147 :: NORM :: compound :: Z :: return #(0)::CF,40997
41148 :: NORM :: compound :: Z :: return #(1)::CF,40997
41215 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.equals(java.lang.Object)::CE,41216:CD,41220:JM,41232:JM,41234:JM,41222:JM,41224:JM,41228
41216 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.equals(java.lang.Object)::JM,75144
41220 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,41221:CD,41222
41221 :: NORM :: compound :: Z :: return #(1)::CF,41216
41222 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,41223:CD,41224:CD,41228:CD,41232:JM,41234:JM,41220:JM,41222
41223 :: NORM :: compound :: Z :: return #(0)::CF,41216
41224 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,41232:JM,41234:JM,41220:JM,41222:JM,41224:JM,41228
41228 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,41232:JM,41234:JM,41220:JM,41224:JM,41228
41232 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,41233:CD,41234:CD,41238
41233 :: NORM :: compound :: Z :: return #(0)::CF,41216
41234 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
41235 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .name::DD,41238
41238 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,41242:CD,41250:CD,41255
41239 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.name::DD,41242
41242 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,41243:CD,41257
41243 :: NORM :: compound :: Z :: return #(0)::CF,41216
41244 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .name::JM,41255
41247 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.name::JM,41255
41250 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,41255
41255 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,41256:CD,41257
41256 :: NORM :: compound :: Z :: return #(0)::CF,41216
41257 :: NORM :: compound :: Z :: return #(1)::CF,41216
41466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::CE,41467:CD,41471:JM,41473:JM,41475:JM,41479:JM,41483:JM,41485
41467 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::JM,41869:JM,41891:JM,94695:JM,97997:JM,117330
41471 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,41472:CD,41473
41472 :: NORM :: compound :: Z :: return #(1)::CF,41467
41473 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,41474:CD,41475:CD,41479:CD,41483:JM,41473:JM,41485:JM,41471
41474 :: NORM :: compound :: Z :: return #(0)::CF,41467
41475 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,41473:JM,41475:JM,41479:JM,41483:JM,41485:JM,41471
41479 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,41475:JM,41479:JM,41483:JM,41485:JM,41471
41483 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,41484:CD,41485:CD,41489
41484 :: NORM :: compound :: Z :: return #(0)::CF,41467
41485 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
41486 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainId::DD,41489
41489 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,41493:CD,41501:CD,41506
41490 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainId::DD,41493
41493 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,41494:CD,41511
41494 :: NORM :: compound :: Z :: return #(0)::CF,41467
41495 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainId::JM,41506
41498 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainId::JM,41506
41501 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,41506
41506 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,41507:CD,41511
41507 :: NORM :: compound :: Z :: return #(0)::CF,41467
41508 :: EXPR :: reference :: Ljava/lang/Character :: v17 = p0 $this .insCode::DD,41511
41511 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,41515:CD,41523:CD,41528
41512 :: EXPR :: reference :: Ljava/lang/Character :: v22 = v9.insCode::DD,41515
41515 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,41516:CD,41533
41516 :: NORM :: compound :: Z :: return #(0)::CF,41467
41517 :: EXPR :: reference :: Ljava/lang/Character :: v18 = p0 $this .insCode::JM,41528
41520 :: EXPR :: reference :: Ljava/lang/Character :: v19 = v9.insCode::JM,41528
41523 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,41528
41528 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,41529:CD,41533
41529 :: NORM :: compound :: Z :: return #(0)::CF,41467
41530 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::DD,41533
41533 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,41537:CD,41545:CD,41550
41534 :: EXPR :: reference :: Ljava/lang/Integer :: v28 = v9.seqNum::DD,41537
41537 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,41538:CD,41552
41538 :: NORM :: compound :: Z :: return #(0)::CF,41467
41539 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::JM,41550
41542 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = v9.seqNum::JM,41550
41545 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,41550
41550 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,41551:CD,41552
41551 :: NORM :: compound :: Z :: return #(0)::CF,41467
41552 :: NORM :: compound :: Z :: return #(1)::CF,41467
41664 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::CE,41665:CD,41669:CD,41670:JM,41672
41665 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::
41669 :: EXPR :: assign :: Z :: v4=p1 $o  INSTANCEOF org.biojava.nbio.structure.secstruc.SecStrucInfo::DD,41670
41670 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 10::CD,41671:CD,41672:CD,41679
41671 :: NORM :: compound :: Z :: return #(0)::CF,41665
41672 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $o ::
41673 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v7 = p0 $this .type::DD,41679
41676 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v8 = v6.type::DD,41679
41679 :: PRED :: IF :: Z :: if (v7 != v8) goto 28::CD,41680:CD,41681
41680 :: NORM :: compound :: Z :: return #(1)::CF,41665
41681 :: NORM :: compound :: Z :: return #(0)::CF,41665
41807 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::CE,41808:CD,41812:JM,41824:JM,41826:JM,41814:JM,41816:JM,41820
41808 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::
41812 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,41813:CD,41814
41813 :: NORM :: compound :: Z :: return #(1)::CF,41808
41814 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,41815:CD,41816:CD,41820:CD,41824:JM,41826:JM,41812:JM,41814
41815 :: NORM :: compound :: Z :: return #(0)::CF,41808
41816 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,41824:JM,41826:JM,41812:JM,41814:JM,41816:JM,41820
41820 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,41824:JM,41826:JM,41812:JM,41816:JM,41820
41824 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,41825:CD,41826:CD,41830
41825 :: NORM :: compound :: Z :: return #(0)::CF,41808
41826 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
41827 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chain::DD,41830
41830 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,41834:CD,41842:CD,41847
41831 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chain::DD,41834
41834 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,41835:CD,41852
41835 :: NORM :: compound :: Z :: return #(0)::CF,41808
41836 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chain::JM,41847
41839 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chain::JM,41847
41842 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,41847
41847 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,41848:CD,41852
41848 :: NORM :: compound :: Z :: return #(0)::CF,41808
41849 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = p0 $this .end::DD,41852
41852 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,41856:CD,41864:CD,41869
41853 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = v9.end::DD,41856
41856 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,41857:CD,41874
41857 :: NORM :: compound :: Z :: return #(0)::CF,41808
41864 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,41869:CL,41466
41869 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,41870:CD,41874
41870 :: NORM :: compound :: Z :: return #(0)::CF,41808
41871 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v23 = p0 $this .start::DD,41874
41874 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,41878:CD,41886:CD,41891
41875 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v28 = v9.start::DD,41878
41878 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,41879:CD,41893
41879 :: NORM :: compound :: Z :: return #(0)::CF,41808
41886 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,41891:CL,41466
41891 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,41892:CD,41893
41892 :: NORM :: compound :: Z :: return #(0)::CF,41808
41893 :: NORM :: compound :: Z :: return #(1)::CF,41808
41933 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::CE,41934:CD,41938:JM,41940:JM,41944:JM,41948:JM,41950
41934 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::
41938 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,41939:CD,41940:CD,41944:CD,41948:JM,41938:JM,41950
41939 :: NORM :: compound :: Z :: return #(0)::DD,41934
41940 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,41938:JM,41940:JM,41944:JM,41948:JM,41950
41944 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,41938:JM,41940:JM,41944:JM,41948:JM,41950
41948 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,41949:CD,41950:CD,41954
41949 :: NORM :: compound :: Z :: return #(0)::DD,41934
41950 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
41951 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .siteID::DD,41954
41954 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,41958:CD,41966:CD,41971
41955 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.siteID::DD,41958
41958 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,41972:CD,41979
41960 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .siteID::JM,41971
41963 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.siteID::JM,41971
41966 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,41971
41971 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,41972:CD,41979
41972 :: NORM :: compound :: Z :: return #(0)::DD,41934
41973 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .groups::DD,41979
41976 :: EXPR :: reference :: Ljava/util/List :: v18 = v9.groups::DD,41979
41979 :: PRED :: IF :: Z :: if (v17 == v18) goto 94::CD,41983:CD,42000
41980 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::DD,41983
41983 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 92::CD,41990:CD,41995:CD,41996
41990 :: CALL :: call :: Z :: v23 = v20.equals(v21)::JM,41995
41995 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 94::CD,41996:CD,42000
41996 :: NORM :: compound :: Z :: return #(0)::DD,41934
41997 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .evCode::DD,42000
42000 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 111::CD,42004:CD,42012:CD,42017
42001 :: EXPR :: reference :: Ljava/lang/String :: v29 = v9.evCode::DD,42004
42004 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 127::CD,42018:CD,42022
42006 :: EXPR :: reference :: Ljava/lang/String :: v25 = p0 $this .evCode::JM,42017
42009 :: EXPR :: reference :: Ljava/lang/String :: v26 = v9.evCode::JM,42017
42012 :: CALL :: call :: Z :: v28 = v25.equals(v26)::JM,42017
42017 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 127::CD,42018:CD,42022
42018 :: NORM :: compound :: Z :: return #(0)::DD,41934
42019 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::DD,42022
42022 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 144::CD,42026:CD,42034:CD,42039
42023 :: EXPR :: reference :: Ljava/lang/String :: v35 = v9.description::DD,42026
42026 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 160::CD,42040:CD,42041
42028 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .description::JM,42039
42031 :: EXPR :: reference :: Ljava/lang/String :: v32 = v9.description::JM,42039
42034 :: CALL :: call :: Z :: v34 = v31.equals(v32)::JM,42039
42039 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 160::CD,42040:CD,42041
42040 :: NORM :: compound :: Z :: return #(0)::DD,41934
42041 :: NORM :: compound :: Z :: return #(1)::DD,41934
42714 :: CALL :: call :: Ljava/util/ResourceBundle :: v6 = getBundle(p1 $bundleName )::JM,42718
42718 :: EXPR :: modify :: Ljava/util/ResourceBundle :: p0 $this .RESOURCE_BUNDLE = v6::
42722 :: CALL :: call :: V :: v7.printStackTrace()::
42943 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent))::CL,49359
42947 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb))::CL,49359
42951 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.gz))::CL,49359
42955 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.gz))::CL,49359
42959 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.Z))::CL,49359
42963 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.Z))::CL,49359
42991 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif))::CL,49359
42995 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif))::CL,49359
42999 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif.gz))::CL,49359
43003 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif.gz))::CL,49359
43031 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::CE,43032:CD,43035:CD,43039:CD,43043:CD,43047
43032 :: EXIT :: exit :: Ljava/util/TreeMap :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::JM,35495
43035 :: CALL :: call :: Ljava/lang/String :: v4 = convertStreamToString(p1 $spaceGroupIS )::CL,49399
43039 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: v6 = fromXML(v4)::JM,43043:JM,43047:CL,49457
43043 :: CALL :: call :: Ljava/util/TreeMap :: v8 = v6.getMapProperty()::JM,43043:JM,43047
43047 :: NORM :: compound :: Ljava/util/TreeMap :: return v8::DD,43032
43159 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.initPath()::CD,43162:CD,43164
43162 :: EXPR :: reference :: Ljava/io/File :: v2 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::DD,43164
43164 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 28::JM,35975:JM,35982:CD,43169:CD,43170:CD,43178
43169 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::DD,43178
43170 :: CALL :: call :: Ljava/lang/String :: v8 = v4.getCacheFilePath()::CL,44076
43178 :: EXPR :: modify :: Ljava/io/File :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path = v6::
43188 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::CF,43189:CD,43191:CD,43193:CD,43194:CD,43202
43189 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::JM,35588:JM,35674
43191 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.ENUM$VALUES::DD,43193
43193 :: EXPR :: assign :: I :: v4 = v2.length::DD,43194
43194 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::DD,43202
43202 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v5::CF,43189
43240 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.values()::CF,43241:CD,43243:CD,43245:CD,43246:CD,43254
43241 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.values()::JM,35784
43243 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = org.biojava.nbio.structure.ExperimentalTechnique.ENUM$VALUES::DD,43245
43245 :: EXPR :: assign :: I :: v4 = v2.length::DD,43246
43246 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = new org.biojava.nbio.structure.ExperimentalTechnique[]::DD,43254
43254 :: NORM :: compound :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v5::CF,43241
43305 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initPdbFilePath()::CD,43309:CD,43313:CD,43504:CD,43506:CD,43511:CD,43533
43309 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_DIR))::JM,43313:JM,43318:JM,43322:JM,43309:JM,43533
43313 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 118::CD,43314:CD,43318:CD,43322:CD,43384:CD,43387:CD,43392:JM,43533
43314 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::JM,43318:JM,43322:JM,43533
43318 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,43318:JM,43322
43322 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 118::CD,43331:CD,43336:CD,43340:CD,43384:CD,43387:CD,43392
43331 :: NORM :: declaration :: Ljava/io/File :: v61 = new java.io.File::
43336 :: CALL :: call :: Z :: v64 = v61.isDirectory()::JM,43340
43340 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 97::CD,43365:CD,43370:CD,43374:CD,43533
43365 :: CALL :: call :: Ljava/lang/String :: v77 = getProperty(#(java.io.tmpdir))::JM,43365:JM,43533
43370 :: CALL :: call :: Z :: v66 = v61.canWrite()::JM,43374
43374 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 297::CF,43533
43384 :: CALL :: call :: Ljava/util/Map :: v13 = getenv()::
43387 :: CALL :: call :: Z :: v15 = v13.containsKey(#(PDB_DIR))::JM,43392
43392 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 260::CD,43393:CD,43398:CD,43399:CD,43403:CD,43407:CD,43475:CD,43499:CD,43533
43393 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.get(#(PDB_DIR))::JM,43398
43398 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,43403:JM,43407
43399 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,43403:JM,43407
43403 :: CALL :: call :: Z :: v22 = v20.isEmpty()::JM,43403:JM,43407
43407 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 260::CD,43408:CD,43413:CD,43422:CD,43427:CD,43431:CD,43475:CD,43499:CD,43533
43408 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(PDB_DIR))::JM,43413
43413 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::DD,43533
43422 :: NORM :: declaration :: Ljava/io/File :: v41 = new java.io.File::
43427 :: CALL :: call :: Z :: v44 = v41.isDirectory()::JM,43431
43431 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 237::CD,43456:CD,43461:CD,43465:CD,43533
43456 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,43456:JM,43533
43461 :: CALL :: call :: Z :: v46 = v41.canWrite()::JM,43465
43465 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 297::CF,43533
43475 :: CALL :: call :: Ljava/lang/String :: v25 = getProperty(#(java.io.tmpdir))::JM,43475:JM,43533
43499 :: CALL :: call :: Ljava/lang/String :: v34 = setProperty(#(PDB_DIR), v25)::
43504 :: EXPR :: reference :: Ljava/lang/String :: v80 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,43511
43506 :: CALL :: call :: Z :: v82 = v78.endsWith(v80)::JM,43511
43511 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 328::CF,43512:CD,43513:CD,43521:CD,43523:CD,43528
43512 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v83 = new java.lang.StringBuilder::
43513 :: CALL :: call :: Ljava/lang/String :: v85 = valueOf(v78)::
43521 :: EXPR :: reference :: Ljava/lang/String :: v87 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
43523 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v83.append(v87)::
43528 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
43533 :: EXPR :: assign :: null :: PHI v78 = v77, v6, v6, v57, v37, v37, v25::JM,43511
43631 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initCacheFilePath()::CD,43635:CD,43639:CD,43900:CD,43902:CD,43907:CD,43929
43635 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_CACHE_DIR))::JM,43635:JM,43639:JM,43929
43639 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 138::CD,43648:CD,43653:CD,43657:CD,43726:CD,43729:CD,43734
43648 :: NORM :: declaration :: Ljava/io/File :: v69 = new java.io.File::
43653 :: CALL :: call :: Z :: v72 = v69.isDirectory()::JM,43657
43657 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 87::CD,43682:CD,43687:CD,43691:CD,43929
43682 :: CALL :: call :: Ljava/lang/String :: v92 = getProperty(#(java.io.tmpdir))::JM,43682:JM,43929
43687 :: CALL :: call :: Z :: v74 = v69.canWrite()::JM,43691
43691 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 385::CF,43929:CD,43716:CD,43720
43716 :: CALL :: call :: Ljava/lang/String :: v82 = getProperty(#(java.io.tmpdir))::JM,43716:JM,43929
43720 :: CALL :: call :: Ljava/lang/String :: v84 = setProperty(#(PDB_CACHE_DIR), v82)::
43726 :: CALL :: call :: Ljava/util/Map :: v8 = getenv()::
43729 :: CALL :: call :: Z :: v10 = v8.containsKey(#(PDB_CACHE_DIR))::JM,43734
43734 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 282::CF,43822:CD,43735:CD,43740:CD,43749:CD,43754:CD,43758:CD,43830:CD,43834
43735 :: CALL :: call :: Ljava/lang/Object :: v39 = v8.get(#(PDB_CACHE_DIR))::JM,43740
43740 :: EXPR :: assign :: Ljava/lang/Object :: v40 = CHECKCAST v39::DD,43929
43749 :: NORM :: declaration :: Ljava/io/File :: v44 = new java.io.File::
43754 :: CALL :: call :: Z :: v47 = v44.isDirectory()::JM,43758
43758 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 237::CD,43783:CD,43788:CD,43792:CD,43929
43783 :: CALL :: call :: Ljava/lang/String :: v65 = getProperty(#(java.io.tmpdir))::JM,43783:JM,43929
43788 :: CALL :: call :: Z :: v49 = v44.canWrite()::JM,43792
43792 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 385::CF,43929:CD,43817
43817 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,43817:JM,43929
43822 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
43823 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdbFilePath::
43830 :: CALL :: call :: Z :: v16 = v12.canWrite()::JM,43834
43834 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 341::CD,43858:CD,43864:CD,43895:CD,43929
43835 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdbFilePath::DD,43929
43858 :: CALL :: call :: Ljava/lang/String :: v37 = setProperty(#(PDB_CACHE_DIR), v31)::
43864 :: CALL :: call :: Ljava/lang/String :: v19 = getProperty(#(java.io.tmpdir))::JM,43864:JM,43929
43895 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(PDB_CACHE_DIR), v19)::
43900 :: EXPR :: reference :: Ljava/lang/String :: v95 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,43907
43902 :: CALL :: call :: Z :: v97 = v93.endsWith(v95)::JM,43907
43907 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 416::CF,43908:CD,43909:CD,43917:CD,43919:CD,43924
43908 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
43909 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v93)::
43917 :: EXPR :: reference :: Ljava/lang/String :: v102 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
43919 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(v102)::
43924 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
43929 :: EXPR :: assign :: null :: PHI v93 = v92, v6, v82, v65, v40, v57, v31, v19::JM,43907
44067 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::CE,44068:CD,44074
44068 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::JM,49332
44071 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,44074
44074 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,44068
44076 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::CE,44077:CD,44083
44077 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::
44080 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,44083
44083 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,44077
44094 :: NORM :: declaration :: Ljava/util/TreeSet :: v6 = new java.util.TreeSet::JM,44120:JM,44098:JM,44102
44098 :: CALL :: call :: Ljava/util/Collection :: v9 = synchronizedCollection(v6)::JM,44098:JM,44102
44102 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .currentlyLoading = v9::
44113 :: EXPR :: reference :: Ljava/lang/String :: v13 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::JM,44120
44115 :: CALL :: call :: Z :: v15 = p1 $pdbFilePath .endsWith(v13)::JM,44120
44120 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 65::CF,44121:CD,44122:CD,44130:CD,44132:CD,44137
44121 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
44122 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(p1 $pdbFilePath )::
44130 :: EXPR :: reference :: Ljava/lang/String :: v21 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::
44132 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
44137 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
44141 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(biojava.cache.files), #(true))::
44146 :: CALL :: call :: V :: p0 $this .setPath(v26)::CL,49679
44163 :: EXPR :: reference :: Ljava/util/Collection :: v34 = p0 $this .currentlyLoading::
44166 :: CALL :: call :: V :: v34.clear()::
44247 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::CE,44248:CD,44252:CD,44257:CD,44258
44248 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::JM,36093
44252 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::JM,44257
44257 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,44258
44258 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v6::DD,44248
44260 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CE,44261:CD,44263:CD,44265
44261 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::
44263 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source::DD,44265:DD,44266
44265 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,44266:CD,44267:CD,44270:CD,44271:CD,44272:CD,44274:CD,44283:CD,44285:CD,44294:CD,44296:CD,44305:CD,44307:CD,44316:CD,44318:CD,44327:CD,44329:CD,44338:CD,44340:CD,44349:CD,44351:CD,44362
44266 :: NORM :: compound :: [I :: return v2::DD,44261
44267 :: CALL :: call :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = values()::JM,44270:CL,49790
44270 :: EXPR :: assign :: I :: v6 = v5.length::CF,44271
44271 :: NORM :: declaration :: [I :: v7 = new []::DD,44362
44272 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v8 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::
44274 :: CALL :: call :: I :: v10 = v8.ordinal()::
44278 :: EXPR :: modify :: I :: v7[v10] = #(8)::
44283 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::
44285 :: CALL :: call :: I :: v16 = v14.ordinal()::
44289 :: EXPR :: modify :: I :: v7[v16] = #(4)::
44294 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::
44296 :: CALL :: call :: I :: v22 = v20.ordinal()::
44300 :: EXPR :: modify :: I :: v7[v22] = #(7)::
44305 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::
44307 :: CALL :: call :: I :: v28 = v26.ordinal()::
44311 :: EXPR :: modify :: I :: v7[v28] = #(6)::
44316 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v32 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::
44318 :: CALL :: call :: I :: v34 = v32.ordinal()::
44322 :: EXPR :: modify :: I :: v7[v34] = #(1)::
44327 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::
44329 :: CALL :: call :: I :: v40 = v38.ordinal()::
44333 :: EXPR :: modify :: I :: v7[v40] = #(3)::
44338 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v44 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::
44340 :: CALL :: call :: I :: v46 = v44.ordinal()::
44344 :: EXPR :: modify :: I :: v7[v46] = #(2)::
44349 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v50 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::
44351 :: CALL :: call :: I :: v52 = v50.ordinal()::
44355 :: EXPR :: modify :: I :: v7[v52] = #(5)::
44362 :: NORM :: compound :: [I :: return v7::DD,44261
44403 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::CE,44404:CD,44410:CD,44415:CD,44419
44404 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::JM,36359
44410 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,44419:JM,44442
44415 :: CALL :: call :: Z :: v8 = v6.matches()::JM,44419:JM,44442
44419 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,44420:CD,44425:CD,44430:CD,44437:CD,44445:CD,44446
44420 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::DD,44422
44422 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
44425 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,44419:JM,44442
44430 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::JM,44434
44434 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v15::
44437 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,44419:JM,44442
44442 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v18::
44445 :: NORM :: compound :: Z :: return #(1)::DD,44404
44446 :: NORM :: compound :: Z :: return #(0)::DD,44404
44462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDP(java.lang.String)::CD,44469:CD,44474:CD,44478
44469 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,44496:JM,44478
44474 :: CALL :: call :: Z :: v8 = v6.matches()::JM,44496:JM,44478
44478 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 39::CD,44479:CD,44484:CD,44491:JM,44496:JM,44478
44479 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,44496:JM,44478
44484 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::JM,44488
44488 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v14::
44491 :: CALL :: call :: Ljava/lang/String :: v17 = v6.group(#(2))::JM,44496:JM,44478
44496 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v17::
44514 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::CE,44515:CD,44521:CD,44526:CD,44530
44515 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::JM,36369
44521 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,44530:JM,44553
44526 :: CALL :: call :: Z :: v8 = v6.matches()::JM,44530:JM,44553
44530 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,44531:CD,44536:CD,44541:CD,44548:CD,44556:CD,44557
44531 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::DD,44533
44533 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
44536 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,44530:JM,44553
44541 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::JM,44545
44545 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v15::
44548 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,44530:JM,44553
44553 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v18::
44556 :: NORM :: compound :: Z :: return #(1)::DD,44515
44557 :: NORM :: compound :: Z :: return #(0)::DD,44515
44573 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromBIO(java.lang.String)::CD,44580:CD,44585:CD,44589
44580 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,44589
44585 :: CALL :: call :: Z :: v8 = v6.matches()::JM,44589
44589 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 30::CD,44590:CD,44595:JM,44589
44590 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,44589
44595 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::JM,44599
44599 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v14::
44614 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::CE,44615:CD,44621:CD,44626:CD,44630
44615 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::JM,36379
44621 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,44630
44626 :: CALL :: call :: Z :: v8 = v6.matches()::JM,44630
44630 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 42::CD,44631:CD,44636:CD,44641:CD,44651:CD,44652
44631 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::DD,44633
44633 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
44636 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,44630
44641 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::JM,44645
44645 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v15::
44648 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
44651 :: NORM :: compound :: Z :: return #(1)::DD,44615
44652 :: NORM :: compound :: Z :: return #(0)::DD,44615
44667 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDB(java.lang.String)::CD,44672:CD,44677:JM,49889:JM,49907:JM,49877:JM,49862:JM,49946:JM,49947:JM,49871:JM,49903:CD,44685:CD,44692:CD,44696:CD,44700
44672 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v4 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::DD,44674
44674 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v4::
44677 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,44682
44682 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v5::
44685 :: CALL :: call :: Ljava/lang/String :: v8 = v5.getPdbId()::JM,44689:CL,50004
44689 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v8::
44692 :: CALL :: call :: Ljava/util/Set :: v10 = getChainIds(v5)::JM,44709:JM,44700:JM,44718:CL,50013
44696 :: CALL :: call :: I :: v12 = v10.size()::JM,44709:JM,44700:JM,44718
44700 :: PRED :: IF :: Z :: if (v12 != #(1)) goto 66::CD,44701:CD,44705:CD,44709:CD,44714:CD,44718:JM,44700
44701 :: CALL :: call :: Ljava/util/Iterator :: v19 = v10.iterator()::JM,44709:JM,44700:JM,44718
44705 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.next()::JM,44709:JM,44718
44709 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,44710
44710 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v22::
44714 :: CALL :: call :: I :: v15 = v10.size()::JM,44709:JM,44700:JM,44718
44718 :: PRED :: IF :: Z :: if (v15 <= #(1)) goto 87::
44719 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(.)::
44723 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
44749 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromFile()::CD,44753
44753 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v3 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::DD,44755
44755 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v3::
44758 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = #(null)::
44761 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
44772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::CE,44773:CD,44786:CD,44802:CD,44812:CD,44813
44773 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::JM,36389
44786 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::DD,44788
44788 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
44802 :: CALL :: call :: Ljava/lang/String :: v19 = guessPDBID(v17)::JM,44806:CL,50083
44806 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v19::
44809 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
44812 :: NORM :: compound :: Z :: return #(1)::DD,44773
44813 :: NORM :: compound :: Z :: return #(0)::DD,44773
44830 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::CE,44831:CD,44834:CD,44839:CD,44841:CD,44846:CD,44850:CD,44855:CD,44883:CD,44884
44831 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::JM,49332
44834 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,44855
44839 :: EXPR :: reference :: Ljava/lang/String :: v6 = java.io.File.separator::JM,44855
44841 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,44855
44846 :: CALL :: call :: Ljava/lang/String :: v10 = v8.toString()::JM,44855
44850 :: CALL :: call :: Z :: v12 = p1 $file .startsWith(v10)::JM,44884:JM,44855
44855 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 53::CF,44884:CF,44856:CD,44861:CD,44869:CD,44874:CD,44879
44856 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::JM,44884
44861 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(v17)::
44869 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $file .substring(#(1))::JM,44884:JM,44855
44874 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v14.append(v23)::JM,44884
44879 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,44884
44883 :: NORM :: compound :: Ljava/lang/String :: return v28::DD,44831
44884 :: EXPR :: assign :: null :: PHI v28 = p1 $file , v27::CF,44883
44969 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,44974:CD,44978
44974 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getThePdbId()::JM,50160:JM,33190:CL,50138
44978 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $cache .getStructure(v5)::JM,50160:JM,33190:CL,50155
44986 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,44994
44994 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p1 $cache .getStructureForPdbId(v4)::CL,50176
45002 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,45010
45010 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p1 $cache .getStructureForPdbId(v4)::CL,50176
45018 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,45023:CD,45027
45023 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v5 = p0 $this .getBaseIdentifier()::CL,50264
45027 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.loadStructure(p1 $cache )::CL,50676:CL,50692:CL,50959:CL,44986:CL,50935:CL,45002:CL,44969
45035 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.reduce(org.biojava.nbio.structure.Structure)::CD,45040:CD,45044
45040 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,50980
45044 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,51006
45052 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.reduce(org.biojava.nbio.structure.Structure)::CD,45057:CD,45061
45057 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,51554
45061 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,51006
45069 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.reduce(org.biojava.nbio.structure.Structure)::CD,45074:CD,45078
45074 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,51580
45078 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,51006
45086 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.reduce(org.biojava.nbio.structure.Structure)::CD,45091:CD,45095
45091 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v5 = p0 $this .getBaseIdentifier()::CL,50264
45095 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,51681:CL,51006:CL,45069:CL,51698:CL,45052:CL,45035
45114 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains()::CE,45115:CD,45118:CD,45123
45115 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains()::JM,36713:JM,86990:JM,88101:JM,89811:JM,128177:JM,128330:JM,128537:JM,128683:JM,134013:JM,134149
45118 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(#(0))::JM,45123:CL,51721
45123 :: NORM :: compound :: Ljava/util/List :: return v5::DD,45115
45126 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::CE,45127:CD,45133
45127 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::JM,36708:JM,51418:JM,83238:JM,83305:JM,94725:JM,95389:JM,95440:JM,95410:JM,102420:JM,108444:JM,113950:JM,128532:JM,128415:JM,128678:JM,139300:JM,139227:JM,148258
45130 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,45133
45133 :: NORM :: compound :: Ljava/util/List :: return v3::CF,45127
45135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::CE,45136:CD,45143:JM,45182
45136 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::JM,36681:JM,98200:JM,108400:JM,108429:JM,117858:JM,135047:JM,135053:JM,135059:JM,135065
45140 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,45143
45143 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 33::CD,45147:CD,45151:CD,45156:CD,45157:CD,45163:CD,45184:CD,45188
45147 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $fullName .trim()::JM,45182
45151 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,45156
45156 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,45157
45157 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 31::CD,45158:CD,45159
45158 :: NORM :: compound :: Z :: return #(1)::DD,45136
45159 :: NORM :: compound :: Z :: return #(0)::DD,45136
45160 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,45188
45163 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,45188
45168 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,45188
45173 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,45182:CL,51738
45177 :: CALL :: call :: Z :: v18 = v16.equals(p1 $fullName )::JM,45182
45182 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 71::CD,45183:CD,45184:CD,45188
45183 :: NORM :: compound :: Z :: return #(1)::DD,45136
45184 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,45188
45188 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 46::CD,45168:CD,45173:CD,45177:CD,45182:CD,45189:JM,45188
45189 :: NORM :: compound :: Z :: return #(0)::DD,45136
45210 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::CE,45211:CD,45218:JM,45251
45211 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::JM,65338:JM,113903:JM,113931:JM,128505:JM,128506:JM,128831:JM,138337:JM,138349:JM,138361:JM,138373
45215 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,45218
45218 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 22::CD,45222:CD,45227:CD,45228:CD,45232:CD,45253:CD,45257
45222 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.get(p1 $name )::JM,45227
45227 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::CF,45228
45228 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v22::DD,45211
45229 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,45241:JM,45257
45232 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,45241:JM,45257
45237 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,45241:JM,45257
45241 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,45252
45242 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,45251:CL,51738
45246 :: CALL :: call :: Z :: v18 = v16.equals(p1 $name )::JM,45251
45251 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 60::CD,45252:CD,45253:CD,45257:JM,45241
45252 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v14::DD,45211
45253 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,45241:JM,45257
45257 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 35::CD,45237:CD,45241:CD,45242:CD,45246:CD,45251:CD,45258:JM,45257
45258 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,45211
45274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getElement()::CE,45275:CD,45281
45275 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.AtomImpl.getElement()::JM,36693:JM,108412:JM,139261
45278 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v3 = p0 $this .element::DD,45281
45281 :: NORM :: compound :: Lorg/biojava/nbio/structure/Element :: return v3::CF,45275
45283 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CECPParameters.reset()::CD,45295:CD,45302
45295 :: CALL :: call :: Ljava/lang/Integer :: v7 = valueOf(#(5))::
45302 :: CALL :: call :: Ljava/lang/Integer :: v10 = valueOf(#(0))::
45390 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters.reset()::CD,45394:CD,45398
45394 :: NORM :: declaration :: Ljava/util/Random :: v3 = new java.util.Random::
45398 :: CALL :: call :: I :: v7 = v3.nextInt(#(10000))::
45467 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .algorithmName = #(null)::
45470 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = #(null)::
45473 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .ioTime = #(null)::
45476 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .calculationTime = #(null)::
45479 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structureIdentifiers = #(null)::
45482 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atomArrays = #(null)::
45485 :: EXPR :: modify :: Ljava/util/List :: p0 $this .distanceMatrix = #(null)::
45488 :: EXPR :: modify :: Ljava/util/List :: p0 $this .multipleAlignments = #(null)::
45509 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.setAtomArrays(java.util.List)::JM,45514
45514 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atomArrays = p1 $atomArrays ::
45520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.setIoTime(java.lang.Long)::JM,45525
45525 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .ioTime = p1 $millis ::
45531 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain.setParameters(org.biojava.nbio.structure.align.ce.ConfigStrucAligParams)::CF,45538
45538 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v7 = new java.lang.IllegalArgumentException::
45553 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain.generateSeed(java.util.List)::CD,45558:CD,45562:CD,45591:CD,45595:CD,45599:CD,45603:CD,45657:CD,45709:CD,45713:CD,45736:CD,45745:CD,45755:CD,45758:CD,45763:CD,45764:JM,45589:JM,45655:JM,45707
45558 :: CALL :: call :: I :: v5 = p1 $atomArrays .size()::JM,45589:JM,45591:JM,45655:JM,45657:JM,45707:JM,45709
45562 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,45582:JM,45666:JM,45688
45567 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::
45571 :: CALL :: call :: Z :: v12 = v6.add(v9)::
45577 :: CALL :: call :: Ljava/lang/Object :: v14 = v6.get(v24)::JM,45582
45582 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::
45583 :: CALL :: call :: Z :: v18 = v15.add(#(null))::
45588 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(1)::DD,45754:CF,45753
45589 :: PRED :: IF :: Z :: if (v21 < v5) goto 44::CD,45577:CD,45582:CD,45583:CD,45588:CD,45753:CD,45754:CF,45590
45590 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v24 + #(1)::DD,45755
45591 :: PRED :: IF :: Z :: if (v23 < v5) goto 22::CD,45567:CD,45571:CD,45589:CD,45590:CD,45753:CD,45754:CD,45755
45595 :: CALL :: call :: I :: v27 = v25.getNrThreads()::JM,45644:JM,45599:CL,51781
45599 :: CALL :: call :: Ljava/util/concurrent/ExecutorService :: v29 = newFixedThreadPool(v27)::JM,45644:JM,45599
45603 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::JM,45672:JM,45694
45608 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v54 + #(1)::DD,45757
45610 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/CallableStructureAlignment :: v33 = new org.biojava.nbio.structure.align.CallableStructureAlignment::JM,45644:JM,45589:JM,45591:JM,45655:JM,45657:JM,45707:JM,45709
45611 :: CALL :: call :: Ljava/lang/Object :: v35 = p1 $atomArrays .get(v55)::JM,45589:JM,45591:JM,45655:JM,45657:JM,45707:JM,45709
45617 :: CALL :: call :: Ljava/lang/Object :: v38 = p1 $atomArrays .get(v52)::JM,45589:JM,45591:JM,45655:JM,45657:JM,45707:JM,45709
45644 :: CALL :: call :: Ljava/util/concurrent/Future :: v48 = v29.submit(v33)::JM,45644
45649 :: CALL :: call :: Z :: v50 = v30.add(v48)::
45654 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v52 + #(1)::DD,45757:CF,45756
45655 :: PRED :: IF :: Z :: if (v52 < v5) goto 117::CF,45610:CD,45611:CD,45617:CD,45644:CD,45649:CD,45654:CD,45756:CD,45757:CF,45656
45656 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v55 + #(1)::DD,45758
45657 :: PRED :: IF :: Z :: if (v54 < v5) goto 111::CD,45608:CD,45655:CD,45656:CD,45756:CD,45757:CD,45758
45660 :: PRED :: IF :: Z :: if (v84 == v80) goto 307::CF,45759:CD,45661:CD,45666:CD,45667:CD,45672:CD,45673:CD,45677:CD,45678:CD,45683:CD,45688:CD,45689:CD,45694:CD,45695:CD,45699:CD,45700:CD,45705
45661 :: CALL :: call :: Ljava/lang/Object :: v57 = v6.get(v84)::JM,45666
45666 :: EXPR :: assign :: Ljava/lang/Object :: v58 = CHECKCAST v57::JM,45672
45667 :: CALL :: call :: Ljava/lang/Object :: v60 = v30.get(v79)::JM,45672
45672 :: EXPR :: assign :: Ljava/lang/Object :: v61 = CHECKCAST v60::JM,45673:JM,45677
45673 :: CALL :: call :: Ljava/lang/Object :: v63 = v61.get()::JM,45673:JM,45677
45677 :: EXPR :: assign :: Ljava/lang/Object :: v64 = CHECKCAST v63::
45678 :: CALL :: call :: V :: v58.add(v80, v64)::
45683 :: CALL :: call :: Ljava/lang/Object :: v67 = v6.get(v80)::JM,45688
45688 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::JM,45694
45689 :: CALL :: call :: Ljava/lang/Object :: v70 = v30.get(v79)::JM,45694
45694 :: EXPR :: assign :: Ljava/lang/Object :: v71 = CHECKCAST v70::JM,45699:JM,45695
45695 :: CALL :: call :: Ljava/lang/Object :: v73 = v71.get()::JM,45699:JM,45695
45699 :: EXPR :: assign :: Ljava/lang/Object :: v74 = CHECKCAST v73::
45700 :: CALL :: call :: V :: v68.add(v84, v74)::
45705 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v79 + #(1)::DD,45759
45706 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v80 + #(1)::DD,45762:CF,45760
45707 :: PRED :: IF :: Z :: if (v80 < v5) goto 225::CD,45660:CD,45706:CD,45759:CD,45760:CD,45761:CD,45762:CF,45708
45708 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v84 + #(1)::DD,45764:CF,45763
45709 :: PRED :: IF :: Z :: if (v83 < v5) goto 218::CD,45707:CD,45708:CD,45760:CD,45761:CD,45762:CD,45763:CD,45764
45713 :: CALL :: call :: I :: v87 = chooseReferenceRMSD(v6)::JM,45717:CL,51844
45717 :: EXPR :: modify :: I :: p0 $this .reference = v87::
45733 :: EXPR :: reference :: I :: v95 = p0 $this .reference::
45736 :: CALL :: call :: Ljava/lang/Object :: v97 = v6.get(v95)::
45745 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v101 = combineReferenceAlignments(v98, p1 $atomArrays , v99, v94)::CL,51993
45753 :: EXPR :: assign :: null :: PHI v24 = v23, v24::CF,45754:JM,45582:DD,45590:DD,45753
45754 :: EXPR :: assign :: null :: PHI v21 = #(0), v20::DD,45588:DD,45589
45755 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,45591:DD,45753
45756 :: EXPR :: assign :: null :: PHI v55 = v54, v55::CF,45757:JM,45589:JM,45591:JM,45655:JM,45657:JM,45707:JM,45709:DD,45656:DD,45756
45757 :: EXPR :: assign :: null :: PHI v52 = v32, v51::JM,45589:JM,45591:JM,45657:JM,45707:JM,45709:DD,45654:DD,45655
45758 :: EXPR :: assign :: null :: PHI v54 = #(0), v53::DD,45608:DD,45657:DD,45756
45759 :: EXPR :: assign :: null :: PHI v77 = v79, v76::DD,45760:CF,45706
45760 :: EXPR :: assign :: null :: PHI v79 = v82, v77::CF,45761:JM,45672:JM,45694:DD,45705:DD,45759:DD,45763
45761 :: EXPR :: assign :: null :: PHI v84 = v83, v84::CF,45762:DD,45660:JM,45666:DD,45708:DD,45761
45762 :: EXPR :: assign :: null :: PHI v80 = v83, v78::DD,45660:JM,45688:DD,45706:DD,45707
45763 :: EXPR :: assign :: null :: PHI v82 = #(0), v79::CF,45764:DD,45760
45764 :: EXPR :: assign :: null :: PHI v83 = #(0), v81::DD,45709:DD,45761:DD,45762
45878 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentEnsemble :: v10 = v8.clone()::CL,52702
45882 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v13 = v10.getMultipleAlignment(#(0))::JM,45887:CL,52712
45887 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: p0 $this .msa = v13::
45890 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v14 = p0 $this .msa::
45893 :: CALL :: call :: Ljava/util/List :: v16 = v14.getAtomArrays()::JM,45897:CL,47040
45897 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atomArrays = v16::
45900 :: CALL :: call :: I :: v18 = p1 $seedAln .size()::JM,45904:CL,38720
45904 :: EXPR :: modify :: I :: p0 $this .size = v18::
45907 :: NORM :: declaration :: Ljava/util/Random :: v19 = new java.util.Random::JM,52785:JM,52774:JM,52775:JM,52780:DD,45917
45908 :: CALL :: call :: I :: v21 = p2 $params .getRandomSeed()::JM,45912:CL,52729
45912 :: EXPR :: assign :: J :: v22 = CONVERT I to J v21::JM,52785:JM,52774:JM,52775:JM,52780
45917 :: EXPR :: modify :: Ljava/util/Random :: p0 $this .rnd = v19::
45949 :: CALL :: call :: I :: v33 = p2 $params .getConvergenceSteps()::JM,45953:CL,52803
45953 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 189::CF,45954:CD,45982:CD,45983:CD,45987:CD,45988:CD,45995:CD,46000:CD,46221
45954 :: NORM :: declaration :: Ljava/util/ArrayList :: v36 = new java.util.ArrayList::
45959 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .atomArrays::JM,45967
45962 :: CALL :: call :: Ljava/lang/Object :: v41 = v39.get(v50)::JM,45967
45967 :: EXPR :: assign :: Ljava/lang/Object :: v42 = CHECKCAST v41::CF,45968
45968 :: EXPR :: assign :: I :: v43 = v42.length::
45969 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v43)::
45973 :: CALL :: call :: Z :: v47 = v36.add(v45)::
45978 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,46221
45979 :: EXPR :: reference :: I :: v38 = p0 $this .size::DD,45982
45982 :: PRED :: IF :: Z :: if (v50 < v38) goto 129::CD,45962:CD,45967:CD,45968:CD,45969:CD,45973:CD,45978:CD,46221
45983 :: CALL :: call :: Ljava/lang/Object :: v52 = min(v36)::JM,45987
45987 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::JM,45995
45988 :: CALL :: call :: I :: v55 = v53.intValue()::JM,45995
45992 :: EXPR :: reference :: I :: v56 = p0 $this .size::DD,45995
45995 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v55 * v56::DD,45996
45996 :: EXPR :: modify :: I :: p0 $this .convergenceSteps = v57::
46000 :: CALL :: call :: I :: v35 = p2 $params .getConvergenceSteps()::JM,46004:CL,52803
46004 :: EXPR :: modify :: I :: p0 $this .convergenceSteps = v35::
46053 :: CALL :: call :: I :: v78 = p2 $params .getMinBlockLen()::JM,46057:CL,52865
46057 :: EXPR :: modify :: I :: p0 $this .Lmin = v78::
46060 :: NORM :: declaration :: Ljava/util/ArrayList :: v79 = new java.util.ArrayList::JM,52785:JM,52774:JM,52775:JM,52780:JM,46118:JM,46168
46064 :: NORM :: declaration :: Ljava/util/ArrayList :: v81 = new java.util.ArrayList::JM,52785:JM,52774:JM,52775:JM,52780:JM,46178:JM,46195
46071 :: CALL :: call :: Ljava/util/List :: v85 = v83.getBlocks()::JM,46084:JM,46108:CL,46889
46075 :: CALL :: call :: Ljava/util/Iterator :: v87 = v85.iterator()::JM,46084:JM,46108
46080 :: CALL :: call :: Ljava/lang/Object :: v91 = v87.next()::JM,46084:JM,46108
46084 :: EXPR :: assign :: Ljava/lang/Object :: v92 = CHECKCAST v91::
46085 :: CALL :: call :: I :: v94 = v92.getCoreLength()::JM,46092:CL,52874
46089 :: EXPR :: reference :: I :: v95 = p0 $this .Lmin::DD,46092
46092 :: PRED :: IF :: Z :: if (v94 >= v95) goto 343::CD,46093:JM,46084:JM,46108
46093 :: CALL :: call :: Z :: v97 = v79.add(v92)::
46104 :: CALL :: call :: Z :: v89 = v87.hasNext()::JM,46084:JM,46108
46108 :: PRED :: IF :: Z :: if (v89 != #(0)) goto 297::CD,46080:CD,46084:CD,46085:CD,46092:CD,46104:JM,46108:JM,46118:JM,46168
46109 :: CALL :: call :: Ljava/util/Iterator :: v102 = v79.iterator()::JM,46118:JM,46168
46114 :: CALL :: call :: Ljava/lang/Object :: v106 = v102.next()::JM,46118:JM,46168
46118 :: EXPR :: assign :: Ljava/lang/Object :: v107 = CHECKCAST v106::
46122 :: CALL :: call :: Ljava/util/List :: v110 = v108.getBlockSets()::JM,46163:JM,46135:CL,38841
46126 :: CALL :: call :: Ljava/util/Iterator :: v112 = v110.iterator()::JM,46163:JM,46135
46131 :: CALL :: call :: Ljava/lang/Object :: v116 = v112.next()::JM,46163:JM,46135
46135 :: EXPR :: assign :: Ljava/lang/Object :: v117 = CHECKCAST v116::
46136 :: CALL :: call :: Ljava/util/List :: v119 = v117.getBlocks()::CL,47053
46140 :: CALL :: call :: Z :: v121 = v119.remove(v107)::
46145 :: CALL :: call :: Ljava/util/List :: v123 = v117.getBlocks()::JM,46153:CL,47053
46149 :: CALL :: call :: I :: v125 = v123.size()::JM,46153
46153 :: PRED :: IF :: Z :: if (v125 != #(0)) goto 448::CD,46154:JM,46163:JM,46135
46154 :: CALL :: call :: Z :: v128 = v81.add(v117)::
46159 :: CALL :: call :: Z :: v114 = v112.hasNext()::JM,46163:JM,46135
46163 :: PRED :: IF :: Z :: if (v114 != #(0)) goto 396::CD,46131:CD,46135:CD,46136:CD,46140:CD,46145:CD,46149:CD,46153:CD,46159:JM,46163:JM,46118:JM,46168
46164 :: CALL :: call :: Z :: v104 = v102.hasNext()::JM,46118:JM,46168
46168 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 365::CD,46114:CD,46118:CD,46122:CD,46126:CD,46159:CD,46163:CD,46164:JM,46168:JM,46178:JM,46195
46169 :: CALL :: call :: Ljava/util/Iterator :: v130 = v81.iterator()::JM,46178:JM,46195
46174 :: CALL :: call :: Ljava/lang/Object :: v134 = v130.next()::JM,46178:JM,46195
46178 :: EXPR :: assign :: Ljava/lang/Object :: v135 = CHECKCAST v134::
46182 :: CALL :: call :: Ljava/util/List :: v138 = v136.getBlockSets()::CL,38841
46186 :: CALL :: call :: Z :: v140 = v138.remove(v135)::
46191 :: CALL :: call :: Z :: v132 = v130.hasNext()::JM,46178:JM,46195
46195 :: PRED :: IF :: Z :: if (v132 != #(0)) goto 480::CD,46174:CD,46178:CD,46182:CD,46186:CD,46191:JM,46195
46199 :: CALL :: call :: Ljava/util/List :: v144 = v142.getBlocks()::CL,46889
46214 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v148 = new java.lang.IllegalArgumentException::JM,52785:JM,52774:JM,52775:JM,52780
46221 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,45967:DD,45978:DD,45982
46328 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getIoTime()::CE,46329:CD,46335
46329 :: EXIT :: exit :: Ljava/lang/Long :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getIoTime()::JM,36957
46332 :: EXPR :: reference :: Ljava/lang/Long :: v3 = p0 $this .ioTime::DD,46335
46335 :: NORM :: compound :: Ljava/lang/Long :: return v3::CF,46329
46337 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.setCalculationTime(java.lang.Long)::JM,46342
46342 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .calculationTime = p1 $millis ::
46348 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.optimize()::CE,46349:CD,46352:CD,46358:CD,46599:CD,46610:CD,46617:CD,46630:CD,46638:CD,46650:CD,46651:JM,52897
46349 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.optimize()::JM,36987
46352 :: CALL :: call :: V :: p0 $this .initialize()::JM,52897:CL,52893
46355 :: EXPR :: reference :: I :: v6 = p0 $this .convergenceSteps::DD,46358
46358 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 * #(100)::DD,46599
46363 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v12 = v10.clone()::JM,46536:CL,53183
46367 :: NORM :: declaration :: Ljava/util/ArrayList :: v13 = new java.util.ArrayList::DD,46539
46372 :: NORM :: declaration :: Ljava/util/TreeSet :: v16 = new java.util.TreeSet::
46376 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .freePool::JM,46384
46379 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.get(v34)::JM,46384
46384 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::JM,46404
46385 :: CALL :: call :: Ljava/util/Iterator :: v23 = v21.iterator()::JM,46404
46390 :: CALL :: call :: Ljava/lang/Object :: v27 = v23.next()::JM,46404
46395 :: CALL :: call :: Z :: v30 = v16.add(v28)::
46400 :: CALL :: call :: Z :: v25 = v23.hasNext()::JM,46404
46404 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 80::CD,46390:CD,46395:CD,46400:CD,46639:CD,46640:CD,46641:JM,46404
46405 :: CALL :: call :: Z :: v32 = v13.add(v16)::
46410 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v35 + #(1)::DD,46644:CF,46642
46411 :: EXPR :: reference :: I :: v15 = p0 $this .size::DD,46414
46414 :: PRED :: IF :: Z :: if (v34 < v15) goto 45::CF,46372:CD,46379:CD,46384:CD,46385:CD,46400:CD,46404:CD,46405:CD,46410:CD,46639:CD,46640:CD,46641:CD,46642:CD,46643:CD,46644
46415 :: EXPR :: reference :: D :: v36 = p0 $this .mcScore::DD,46517:DD,46542
46419 :: EXPR :: reference :: Ljava/util/Random :: v37 = p0 $this .rnd::JM,46452:JM,46439:JM,46426
46422 :: CALL :: call :: D :: v39 = v37.nextDouble()::JM,46452:JM,46439:JM,46426
46426 :: EXPR :: assign :: Z :: v41 = v39 > #(0.4 d)::DD,46427
46427 :: PRED :: IF :: Z :: if (v41 >= #(0)) goto 187::CD,46428:CD,46439:CD,46440:CD,46645:CD,46646:CD,46647
46428 :: CALL :: call :: Z :: v43 = p0 $this .shiftRow()::JM,46647:CL,53193
46439 :: EXPR :: assign :: Z :: v48 = v39 > #(0.7 d)::DD,46440
46440 :: PRED :: IF :: Z :: if (v48 >= #(0)) goto 216::CD,46441:CD,46452:CD,46453:CD,46645:CD,46646:CD,46647
46441 :: CALL :: call :: Z :: v50 = p0 $this .expandBlock()::JM,46647:CL,54585
46452 :: EXPR :: assign :: Z :: v55 = v39 > #(0.85 d)::DD,46453
46453 :: PRED :: IF :: Z :: if (v55 >= #(0)) goto 241::CD,46454:CD,46465:CD,46645:CD,46646:CD,46647:JM,52897
46454 :: CALL :: call :: Z :: v57 = p0 $this .shrinkBlock()::JM,52897:JM,46647:CL,55415
46465 :: CALL :: call :: Z :: v62 = p0 $this .insertGap()::JM,52897:JM,46647:CL,55710
46475 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 145::CD,46422:CD,46426:CD,46427:CD,46645:CD,46646:CD,46647
46479 :: CALL :: call :: V :: v67.clear()::CL,55957
46485 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v70 = p0 $this .msa::
46488 :: CALL :: call :: V :: v69.superimpose(v70)::CL,56010
46492 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v72 = p0 $this .msa::
46504 :: CALL :: call :: D :: v77 = getMCScore(v72, v73, v74, v75)::JM,46511:CL,56482
46511 :: EXPR :: modify :: D :: p0 $this .mcScore = v77::
46514 :: EXPR :: reference :: D :: v78 = p0 $this .mcScore::DD,46517
46517 :: EXPR :: assign :: Ljava/lang/Object :: v79 = v78 - v36::DD,46518:JM,46575
46518 :: EXPR :: assign :: Z :: v82 = v79 > #(0.0 d)::DD,46519
46519 :: PRED :: IF :: Z :: if (v82 >= #(0)) goto 384::CD,46520:CD,46530:CD,46534:CD,46535:CD,46648:CD,46649
46520 :: CALL :: call :: D :: v84 = p0 $this .probabilityFunction(v79, v124, v8)::JM,46534:JM,46649:CL,56568
46527 :: EXPR :: reference :: Ljava/util/Random :: v85 = p0 $this .rnd::JM,46534
46530 :: CALL :: call :: D :: v87 = v85.nextDouble()::JM,46534
46534 :: EXPR :: assign :: Z :: v88 = v87 < v84::DD,46535
46535 :: PRED :: IF :: Z :: if (v88 <= #(0)) goto 379::CD,46545:CD,46648:CD,46649
46536 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: p0 $this .msa = v12::
46539 :: EXPR :: modify :: Ljava/util/List :: p0 $this .freePool = v13::
46542 :: EXPR :: modify :: D :: p0 $this .mcScore = v36::
46545 :: EXPR :: assign :: Ljava/lang/Object :: v89 = v123 + #(1)::DD,46648
46550 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v93 = new java.lang.StringBuilder::JM,46565:JM,46575
46555 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v93.append(v124)::JM,46565:JM,46575
46560 :: CALL :: call :: Ljava/lang/StringBuilder :: v100 = v97.append(#(: --prob: ))::JM,46565:JM,46575
46565 :: CALL :: call :: Ljava/lang/StringBuilder :: v102 = v100.append(v91)::JM,46565:JM,46575
46570 :: CALL :: call :: Ljava/lang/StringBuilder :: v105 = v102.append(#(, --score change: ))::JM,46575
46575 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v105.append(v79)::JM,46575
46580 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v107.append(#(, --conv: ))::
46585 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v110.append(v90)::
46590 :: CALL :: call :: Ljava/lang/String :: v114 = v112.toString()::
46598 :: EXPR :: assign :: Ljava/lang/Object :: v116 = v124 + #(1)::DD,46651:CF,46650
46599 :: PRED :: IF :: Z :: if (v118 >= v8) goto 458::CD,46603
46600 :: EXPR :: reference :: I :: v9 = p0 $this .convergenceSteps::DD,46603
46603 :: PRED :: IF :: Z :: if (v117 < v9) goto 20::CD,46363:CD,46367:CD,46414:CD,46475:CD,46479:CD,46488:CD,46504:CD,46517:CD,46518:CD,46519:CD,46550:CD,46555:CD,46560:CD,46565:CD,46570:CD,46575:CD,46580:CD,46585:CD,46590:CD,46598:CD,46599:CD,46642:CD,46643:CD,46644:CD,46645:CD,46646:CD,46647:CD,46648:CD,46649:CD,46650:CD,46651
46607 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v126 = p0 $this .msa::
46610 :: CALL :: call :: V :: v125.superimpose(v126)::CL,56010
46614 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v128 = p0 $this .msa::
46617 :: CALL :: call :: V :: calculateScores(v128)::CL,56616
46630 :: CALL :: call :: V :: v130.putScore(#(MC-score), v134)::CL,56711
46635 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v136 = p0 $this .msa::DD,46638
46638 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: return v136::DD,46349
46639 :: EXPR :: assign :: null :: PHI v121 = v119, v121::CF,46640:DD,46639:DD,46642
46640 :: EXPR :: assign :: null :: PHI v122 = v120, v122::CF,46641:DD,46640:DD,46643
46641 :: EXPR :: assign :: null :: PHI v35 = v34, v35::JM,46404:DD,46410:DD,46641
46642 :: EXPR :: assign :: null :: PHI v119 = v117, v121::CF,46643:DD,46639:DD,46645
46643 :: EXPR :: assign :: null :: PHI v120 = v118, v122::CF,46644:DD,46640:DD,46646
46644 :: EXPR :: assign :: null :: PHI v34 = #(0), v33::JM,46384:DD,46414:DD,46641
46645 :: EXPR :: assign :: null :: PHI v123 = v119, v123, v123, v123, v123::CF,46646:DD,46545:DD,46645
46646 :: EXPR :: assign :: null :: PHI v124 = v120, v124, v124, v124, v124::CF,46647:JM,46565:JM,46575:DD,46598:DD,46646
46647 :: EXPR :: assign :: null :: PHI v66 = #(0), v43, v50, v57, v62::DD,46475
46648 :: EXPR :: assign :: null :: PHI v90 = v89, #(0), #(0)::CF,46649:DD,46650
46649 :: EXPR :: assign :: null :: PHI v91 = v84, v84, #(1.0 d)::JM,46565:JM,46575
46650 :: EXPR :: assign :: null :: PHI v117 = #(0), v90::CF,46651:DD,46603:DD,46642
46651 :: EXPR :: assign :: null :: PHI v118 = #(1), v116::DD,46599:DD,46643
46774 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.setEnsemble(org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsemble)::JM,46779
46779 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentEnsemble :: p0 $this .parent = p1 $parent ::
46785 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.addMultipleAlignment(org.biojava.nbio.structure.align.multiple.MultipleAlignment)::CD,46793:CD,46804:CD,46809
46790 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .multipleAlignments::DD,46793
46793 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 19::CD,46794
46794 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,46798
46798 :: EXPR :: modify :: Ljava/util/List :: p0 $this .multipleAlignments = v6::
46801 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .multipleAlignments::
46804 :: CALL :: call :: Z :: v10 = v8.add(p1 $alignment )::
46809 :: CALL :: call :: V :: p1 $alignment .setEnsemble(p0 $this )::CL,46774
46823 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getStructureIdentifiers()::CE,46824:CD,46830
46824 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getStructureIdentifiers()::JM,37074:JM,67024
46827 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .structureIdentifiers::DD,46830
46830 :: NORM :: compound :: Ljava/util/List :: return v3::CF,46824
46832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getIdentifier()::CE,46833:CD,46836:CD,46840
46833 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getIdentifier()::
46836 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainId()::JM,46840:CL,56746
46840 :: NORM :: compound :: Ljava/lang/String :: return v4::CF,46833
46842 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getIdentifier()::CE,46843:CD,46846:CD,46850
46843 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.ScopDomain.getIdentifier()::
46846 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getScopId()::JM,46850:CL,56755
46850 :: NORM :: compound :: Ljava/lang/String :: return v4::DD,46843
46852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getIdentifier()::CE,46853:CD,46859
46853 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.client.StructureName.getIdentifier()::JM,75181
46856 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,46859
46859 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,46853
46861 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getIdentifier()::CE,46862:CD,46865:CD,46869
46862 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getIdentifier()::
46865 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getCATH()::JM,46869:CL,56764
46869 :: NORM :: compound :: Ljava/lang/String :: return v4::DD,46862
46871 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getAlgorithmName()::CE,46872:CD,46878
46872 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getAlgorithmName()::
46875 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .algorithmName::DD,46878
46878 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,46872
46880 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getVersion()::CE,46881:CD,46887
46881 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getVersion()::
46884 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .version::DD,46887
46887 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,46881
46889 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.getBlocks()::CE,46890:CD,46893:CD,46897:CD,46901:CD,46920:CD,46924:CD,46925
46890 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.getBlocks()::JM,46084:JM,46108:JM,55522:JM,64785
46893 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,46925
46897 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getBlockSets()::JM,46924:CL,38841
46901 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,46924
46906 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,46924
46911 :: CALL :: call :: Ljava/util/List :: v16 = v14.getBlocks()::CL,47053
46915 :: CALL :: call :: Z :: v18 = v3.addAll(v16)::
46920 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,46924
46924 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,46906:CD,46911:CD,46915:CD,46920:JM,46924:CF,46925
46925 :: NORM :: compound :: Ljava/util/List :: return v3::DD,46890
46938 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.length()::CE,46939:CD,46945:CD,46952
46939 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.length()::JM,55433:JM,65760
46942 :: EXPR :: reference :: I :: v3 = p0 $this .length::DD,46945
46945 :: PRED :: IF :: Z :: if (v3 >= #(0)) goto 12::CD,46946
46946 :: CALL :: call :: V :: p0 $this .updateLength()::CL,56868
46949 :: EXPR :: reference :: I :: v6 = p0 $this .length::DD,46952
46952 :: NORM :: compound :: I :: return v6::DD,46939
46957 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.getCoreLength()::CE,46958:CD,46964:CD,46971
46958 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.getCoreLength()::
46961 :: EXPR :: reference :: I :: v3 = p0 $this .coreLength::DD,46964
46964 :: PRED :: IF :: Z :: if (v3 >= #(0)) goto 12::CD,46965
46965 :: CALL :: call :: V :: p0 $this .updateCoreLength()::CL,56933
46968 :: EXPR :: reference :: I :: v6 = p0 $this .coreLength::DD,46971
46971 :: NORM :: compound :: I :: return v6::DD,46958
46976 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.AbstractScoresCache.getScores()::CE,46977:CD,46983
46977 :: EXIT :: exit :: Ljava/util/Set :: org.biojava.nbio.structure.align.multiple.AbstractScoresCache.getScores()::JM,37200:JM,37266
46980 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .scores::DD,46983
46983 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 12::CF,46984:CD,46987:CD,46991:CD,46995:CD,46999
46984 :: CALL :: call :: Ljava/util/Set :: v11 = emptySet()::JM,46987
46987 :: NORM :: compound :: Ljava/util/Set :: return v11::DD,46977
46988 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .scores::JM,46995:JM,46999
46991 :: CALL :: call :: Ljava/util/Set :: v7 = v5.keySet()::JM,46995:JM,46999
46995 :: CALL :: call :: Ljava/util/Set :: v9 = unmodifiableSet(v7)::JM,46995:JM,46999
46999 :: NORM :: compound :: Ljava/util/Set :: return v9::DD,46977
47003 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.AbstractScoresCache.getScore(java.lang.String)::CD,47011
47008 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .scores::DD,47011
47011 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 35::CD,47015:CD,47020
47015 :: CALL :: call :: Z :: v8 = v6.containsKey(p1 $property )::JM,47020
47020 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 35::CD,47024
47024 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p1 $property )::
47040 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.getAtomArrays()::CE,47041:CD,47047:CD,47051
47041 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.getAtomArrays()::JM,45897:JM,56147:JM,56153:JM,56366:JM,56514:JM,56674:JM,56659:JM,65948
47044 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentEnsemble :: v3 = p0 $this .parent::
47047 :: CALL :: call :: Ljava/util/List :: v5 = v3.getAtomArrays()::JM,47051:CL,57040
47051 :: NORM :: compound :: Ljava/util/List :: return v5::DD,47041
47053 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.getBlocks()::CE,47054:CD,47060:CD,47071
47054 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.getBlocks()::JM,46153:JM,52280:JM,52383:JM,52977:JM,56311:JM,65139:JM,65885
47057 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .blocks::DD,47060
47060 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 19::CD,47061
47061 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,47065
47065 :: EXPR :: modify :: Ljava/util/List :: p0 $this .blocks = v5::
47068 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .blocks::DD,47071
47071 :: NORM :: compound :: Ljava/util/List :: return v7::DD,47054
47077 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockImpl.getAlignRes()::CE,47078:CD,47084
47078 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.align.multiple.BlockImpl.getAlignRes()::JM,52291:JM,52394:JM,52425:JM,52954:JM,53273:JM,53291:JM,53315:JM,53332:JM,53348:JM,53365:JM,53381:JM,53421:JM,53453:JM,53469:JM,53503:JM,53535:JM,53555:JM,53581:JM,53601:JM,53628:JM,53669:JM,53704:JM,53721:JM,53741:JM,53774:JM,53791:JM,53812:JM,53837:JM,53853:JM,53869:JM,53924:JM,53954:JM,53973:JM,53990:JM,54010:JM,54043:JM,54060:JM,54081:JM,54106:JM,54122:JM,54163:JM,54179:JM,54210:JM,54226:JM,54662:JM,54684:JM,54709:JM,54755:JM,54778:JM,54794:JM,54851:JM,54867:JM,54904:JM,54920:JM,54959:JM,54981:JM,55006:JM,55045:JM,55062:JM,55112:JM,55142:JM,55550:JM,55566:JM,55806:JM,55839:JM,56249:JM,56265:JM,64740:JM,64817:JM,64849:JM,65189:JM,65849
47081 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .alignRes::DD,47084
47084 :: NORM :: compound :: Ljava/util/List :: return v3::CF,47078
47111 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockImpl.length()::CE,47112:CD,47118
47112 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.BlockImpl.length()::JM,52972:JM,54257:JM,54260:JM,54262:JM,53961:JM,54027:JM,53692:JM,54252:JM,54253:JM,53758:JM,54255:JM,53279:JM,53302:JM,53763:JM,54032:JM,54152:JM,55184:JM,55173:JM,54741:JM,54767:JM,54840:JM,54893:JM,55509:JM,55774:JM,56306:JM,64775:JM,65218:JM,65880:JM,77647
47115 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .alignRes::DD,47118
47118 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,47119:CD,47123:CD,47127
47119 :: NORM :: compound :: I :: return #(0)::DD,47112
47120 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .alignRes::JM,47127
47123 :: CALL :: call :: I :: v7 = v5.size()::JM,47127
47127 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 24::CD,47128:CD,47132:CD,47137:CD,47138:CD,47142
47128 :: NORM :: compound :: I :: return #(0)::DD,47112
47129 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .alignRes::JM,47137
47132 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.get(#(0))::JM,47137
47137 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,47142
47138 :: CALL :: call :: I :: v14 = v12.size()::JM,47142
47142 :: NORM :: compound :: I :: return v14::DD,47112
47160 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::CE,47161:CD,47167
47161 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::JM,96321:JM,96316:JM,103476:JM,115528:JM,115533:JM,130022:JM,130211:JM,147349:JM,147525:JM,152089:JM,152143:JM,152090:JM,153858:JM,153795:JM,153872:JM,153796
47164 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_name::DD,47167
47167 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,47161
47169 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::CE,47170:CD,47173:CD,47177:CD,47214:CD,47216
47170 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::JM,117224:JM,121227
47173 :: CALL :: call :: Ljava/lang/Character :: v4 = get1LetterCodeAmino(p1 $groupCode3 )::JM,47216:JM,47177:CL,57228
47177 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 71::CF,47216:CD,47178:CD,47182:CD,47186
47178 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $groupCode3 .trim()::
47182 :: CALL :: call :: Z :: v9 = isNucleotide(v7)::JM,47186:CL,57243
47186 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 66::CD,47189:CD,47194:CD,47195:CD,47204:CD,47210:CD,47215:CD,47216
47189 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.get(v7)::JM,47194
47194 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::DD,47195:DD,47215
47195 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 52::CF,47215:CD,47198:CD,47203
47198 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.get(v7)::JM,47203
47203 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,47215
47204 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 71::CF,47216:CD,47205
47205 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(88))::JM,47216
47210 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(88))::JM,47216
47214 :: NORM :: compound :: Ljava/lang/Character :: return v26::DD,47170
47215 :: EXPR :: assign :: null :: PHI v22 = v17, v21::DD,47204:DD,47216
47216 :: EXPR :: assign :: null :: PHI v26 = v4, v22, v24, v13::CF,47214
47254 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.size()::CE,47255:CD,47261:CD,47282
47255 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.size()::JM,38731
47258 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .structureIdentifiers::DD,47261
47261 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 18::CD,47265:CD,47269:CD,47277:CD,47281
47262 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .structureIdentifiers::JM,47269
47265 :: CALL :: call :: I :: v14 = v12.size()::JM,47269
47269 :: NORM :: compound :: I :: return v14::DD,47255
47274 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .atomArrays::JM,47281
47277 :: CALL :: call :: I :: v11 = v9.size()::JM,47281
47281 :: NORM :: compound :: I :: return v11::DD,47255
47282 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v6 = new java.lang.IndexOutOfBoundsException::
47621 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getMultipleAlignments()::CE,47622:CD,47628:CD,47639
47622 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getMultipleAlignments()::
47625 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .multipleAlignments::DD,47628
47628 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 19::CD,47629
47629 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,47633
47633 :: EXPR :: modify :: Ljava/util/List :: p0 $this .multipleAlignments = v5::
47636 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .multipleAlignments::DD,47639
47639 :: NORM :: compound :: Ljava/util/List :: return v7::DD,47622
49254 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,49268:JM,49701
49268 :: PRED :: IF :: Z :: if (p1 $path  != #(null)) goto 61::JM,35975:JM,35982:CD,49273:CD,49289:CD,49332
49273 :: CALL :: call :: Ljava/lang/String :: v20 = v17.getPdbFilePath()::JM,49332:CL,44067
49289 :: CALL :: call :: Ljava/lang/String :: v11 = expandUserHome(p1 $path )::JM,49332:CL,44830
49304 :: NORM :: declaration :: Ljava/io/File :: v27 = new java.io.File::JM,49268:JM,49701
49312 :: CALL :: call :: Ljava/lang/String :: v30 = getServerName()::CL,58979
49318 :: CALL :: call :: V :: p0 $this .initPaths()::CL,59076
49332 :: EXPR :: assign :: null :: PHI v26 = v20, v11::CF,49304:JM,49268:JM,49701
49359 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.addExtension(java.lang.String)::CD,49367
49364 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .extensions::
49367 :: CALL :: call :: Z :: v6 = v4.add(p1 $s )::
49399 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.convertStreamToString(java.io.InputStream)::CD,49403:CD,49404:CD,49413:CD,49430:CD,49434:CD,49435
49403 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,49434:CF,49404
49404 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
49413 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
49418 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,49434
49423 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.xtal.SymoplibParser.newline::
49425 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
49430 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,49434
49434 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,49418:CD,49423:CD,49425:CD,49430
49435 :: CALL :: call :: Ljava/lang/String :: v19 = v7.toString()::
49457 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::CE,49458:CD,49461:CD,49467:CD,49471:CD,49475:CD,49476:CD,49484:CD,49489:CD,49490
49458 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::JM,43043:JM,43047
49461 :: NORM :: declaration :: [Ljava/lang/Class :: v5 = new java.lang.Class[]::JM,49489:JM,49467:JM,49484:JM,49471
49467 :: CALL :: call :: Ljavax/xml/bind/JAXBContext :: v9 = newInstance(v5)::JM,49489:JM,49467:JM,49484:JM,49471
49471 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v11 = v9.createUnmarshaller()::JM,49489:JM,49484:JM,49471
49475 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v12 = new java.io.ByteArrayInputStream::JM,49489:JM,49484:JM,49461
49476 :: CALL :: call :: [B :: v14 = p1 $xml .getBytes()::JM,49461
49484 :: CALL :: call :: Ljava/lang/Object :: v17 = v11.unmarshal(v12)::JM,49489:JM,49484
49489 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,49490
49490 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: return v18::DD,49458
49679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.setPath(java.lang.String)::CD,49684
49684 :: CALL :: call :: Ljava/lang/String :: v5 = expandUserHome(p1 $path )::CL,44830
49701 :: CALL :: call :: V :: p0 $this .setDefault()::CL,59527
49790 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::CF,49791:CD,49793:CD,49795:CD,49796:CD,49804
49791 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::JM,44270
49793 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = org.biojava.nbio.structure.align.client.StructureName$Source.ENUM$VALUES::DD,49795
49795 :: EXPR :: assign :: I :: v4 = v2.length::DD,49796
49796 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::DD,49804
49804 :: NORM :: compound :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v5::CF,49791
49862 :: CALL :: call :: [Ljava/lang/String :: v7 = p1 $id .split(#(\.))::JM,49946
49871 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v36 = new java.lang.IllegalArgumentException::
49877 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getSimpleName()::
49889 :: CALL :: call :: Ljava/lang/String :: v44 = format(#(Malformed %s: %s), v38)::
49899 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v7[#(0)]::JM,49907
49903 :: CALL :: call :: I :: v15 = v13.length()::JM,49907
49907 :: PRED :: IF :: Z :: if (v15 == #(4)) goto 101::CD,49925:CD,49939
49908 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v7[#(0)]::DD,49912
49912 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v20::
49925 :: CALL :: call :: Ljava/lang/String :: v26 = format(#(Unrecognized PDB code %s), v23)::
49939 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toUpperCase()::JM,49943
49943 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v19::
49946 :: EXPR :: assign :: I :: v28 = v7.length::DD,49947
49947 :: PRED :: IF :: Z :: if (v28 != #(2)) goto 133::CD,49952:CD,49956:CD,49964
49948 :: EXPR :: reference :: Ljava/lang/Object :: v31 = v7[#(1)]::
49952 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::
49956 :: CALL :: call :: Ljava/util/List :: v35 = parseMultiple(v33)::JM,49960:CL,59838
49960 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v35::
49964 :: NORM :: declaration :: Ljava/util/LinkedList :: v29 = new java.util.LinkedList::DD,49968
49968 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v29::
50004 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getPdbId()::CE,50005:CD,50011
50005 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.SubstructureIdentifier.getPdbId()::JM,44689:JM,50944:JM,88299
50008 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,50011
50011 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,50005
50013 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::CE,50014:CD,50017:CD,50021:CD,50025:CD,50045:CD,50049:CD,50050
50014 :: EXIT :: exit :: Ljava/util/Set :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::JM,44709:JM,44700:JM,44718
50017 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::DD,50050
50021 :: CALL :: call :: Ljava/util/List :: v6 = p1 $si .getResidueRanges()::JM,50049:CL,59943
50025 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,50049
50030 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,50049
50035 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainId()::JM,50039:CL,59952
50039 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 57::CD,50040:JM,50049
50040 :: CALL :: call :: Z :: v19 = v3.add(v16)::
50045 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,50049
50049 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 26::CD,50030:CD,50035:CD,50039:CD,50045:JM,50049:CF,50050
50050 :: NORM :: compound :: Ljava/util/Set :: return v3::DD,50014
50083 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.guessPDBID(java.lang.String)::CE,50084:CD,50089:CD,50094:CD,50098
50084 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.URLIdentifier.guessPDBID(java.lang.String)::JM,44806
50089 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $name )::JM,50098
50094 :: CALL :: call :: Z :: v7 = v5.matches()::JM,50098
50098 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 25::CD,50099:CD,50104:CD,50108:CD,50109:JM,50098
50099 :: CALL :: call :: Ljava/lang/String :: v12 = v5.group(#(1))::JM,50098
50104 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::JM,50108
50108 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,50084
50109 :: NORM :: compound :: Ljava/lang/String :: return #(null)::DD,50084
50138 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getThePdbId()::CE,50139:CD,50145:CD,50151
50139 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getThePdbId()::JM,50160:JM,33190
50142 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::JM,50151
50145 :: CALL :: call :: Ljava/lang/String :: v7 = v3.substring(#(0), #(4))::JM,50151
50151 :: NORM :: compound :: Ljava/lang/String :: return v7::DD,50139
50155 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(java.lang.String)::CD,50160:JM,33190:JM,33193:CD,50165
50160 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName :: v4 = new org.biojava.nbio.structure.align.client.StructureName::JM,33190:JM,33193
50165 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getStructure(v4)::CL,36611
50176 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructureForPdbId(java.lang.String)::CD,50181:CD,50189:CD,50194:CD,50199
50181 :: PRED :: IF :: Z :: if (p1 $pdbId  != #(null)) goto 7::CD,50222:CD,50227:CD,50231
50189 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
50194 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(p1 $pdbId )::
50199 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
50222 :: CALL :: call :: Z :: v9 = p0 $this .checkLoading(p1 $pdbId )::JM,50227:CL,60013
50227 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 42::CD,50222
50228 :: EXPR :: reference :: Z :: v19 = p0 $this .useMmCif::DD,50231
50231 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 87::CD,50232:CD,50238
50232 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v23 = p0 $this .loadStructureFromCifByPdbId(p1 $pdbId )::CL,60029
50238 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v21 = p0 $this .loadStructureFromPdbByPdbId(p1 $pdbId )::CL,60105
50264 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getBaseIdentifier()::CD,50271:CD,50319:CD,50327:CD,50332:CD,50462:CD,50470:CD,50475:CD,50498:CD,50506:CD,50511:CD,50539:CD,50547:CD,50552:CD,50587:CD,50588:CD,50596:CD,50601
50268 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v3 = p0 $this .base::DD,50271
50271 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 489::CD,50272:CD,50278:CD,50286
50272 :: CALL :: call :: [I :: v6 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,44260
50275 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v7 = p0 $this .mySource::
50278 :: CALL :: call :: I :: v9 = v7.ordinal()::
50282 :: EXPR :: reference :: I :: v10 = v6[v9]::DD,50286
50286 :: PRED :: IF :: null :: switch v10::CD,50287:CD,50294:CD,50303:CD,50309:CD,50346:CD,50349:CD,50360:CD,50419:CD,50435:CD,50439:CD,50445:CD,50449:JM,60938:CD,50485:JM,60977:JM,71594:CD,50529:CD,50562:JM,61265:JM,61284:JM,61270:JM,61289:JM,61260:JM,61276:CD,50574:JM,49889:JM,49907:JM,49877:JM,49862:JM,49946:JM,49947:JM,49871:JM,49903
50287 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v132 = getCathDatabase()::CL,60181
50294 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v136 = v132.getDescriptionByCathId(v134)::JM,50299:CL,60200
50299 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v136::
50303 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v116 = getEcodDatabase()::CL,60232
50309 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v119 = v116.getDomainsById(v117)::JM,50314:CL,60243
50314 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v119::
50319 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v122 = new java.lang.StringBuilder::
50324 :: EXPR :: reference :: Ljava/lang/String :: v125 = p0 $this .name::
50327 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v122.append(v125)::
50332 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::
50346 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v93 = getSCOP()::CL,60384
50349 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v95 = guessScopDomain(v91, v93)::JM,50354:CL,60395
50354 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v95::
50357 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v96 = p0 $this .base::DD,50360
50360 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 489::CD,50364:CD,50369
50361 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .chainId::JM,50369
50364 :: CALL :: call :: Z :: v100 = v97.equals(#(_))::JM,50369
50369 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 185::CD,50370:JM,49889:JM,49907:JM,49877:JM,49862:JM,49946:JM,49947:JM,49871:JM,49903:CD,50382:CD,50389:JM,60806:JM,60812:JM,60815
50370 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v107 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,50378
50378 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v107::
50382 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v101 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,50398
50389 :: CALL :: call :: Ljava/util/List :: v105 = parseMultiple(v103)::CL,59838
50398 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v101::
50419 :: CALL :: call :: [Ljava/lang/String :: v63 = v59.split(#(:), #(2))::
50435 :: CALL :: call :: Ljava/lang/String :: v70 = expandUserHome(v68)::CL,44830
50439 :: NORM :: declaration :: Lorg/biojava/nbio/structure/URLIdentifier :: v71 = new org.biojava.nbio.structure.URLIdentifier::DD,50457
50445 :: CALL :: call :: Ljava/net/URI :: v75 = v72.toURI()::
50449 :: CALL :: call :: Ljava/net/URL :: v77 = v75.toURL()::
50457 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v71::
50462 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
50467 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .name::
50470 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v83)::
50475 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::
50485 :: NORM :: declaration :: Lorg/biojava/nbio/structure/URLIdentifier :: v45 = new org.biojava.nbio.structure.URLIdentifier::DD,50493
50493 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v45::
50498 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
50503 :: EXPR :: reference :: Ljava/lang/String :: v53 = p0 $this .name::
50506 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
50511 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
50529 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/PDPDomain :: v33 = v28.getPDPDomain(v31)::JM,50534:CL,60994
50534 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v33::
50539 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
50544 :: EXPR :: reference :: Ljava/lang/String :: v39 = p0 $this .name::
50547 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v36.append(v39)::
50552 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
50562 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BioAssemblyIdentifier :: v25 = new org.biojava.nbio.structure.BioAssemblyIdentifier::DD,50570
50570 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v25::
50574 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v21 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,50583
50583 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v21::
50587 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v11 = new java.lang.IllegalStateException::
50588 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
50596 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v12.append(v15)::
50601 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
50676 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,50684
50684 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = v4.loadStructure(p1 $cache )::CL,50935
50692 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,50697:CD,50702:CD,50706:CD,50711:CD,50739:CD,50747:CD,50752:CD,50761:CD,50763:CD,50775:CD,50778:CD,50786:CD,50834:CD,50886:CD,50887
50697 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v4 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,50886
50702 :: CALL :: call :: Ljava/util/Map :: v7 = parseQuery(v5)::CL,61324
50706 :: CALL :: call :: Z :: v21 = v7.containsKey(#(format))::JM,50711
50711 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 90::CF,50886:CD,50712:CD,50717:CD,50718:CD,50723:CD,50728:CD,50732
50712 :: CALL :: call :: Ljava/lang/Object :: v24 = v7.get(#(format))::JM,50717
50717 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::CF,50718
50718 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
50723 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v25)::
50728 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
50732 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v34 = guessFiletype(v32)::JM,50886:CL,61491
50739 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
50747 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
50752 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
50761 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v38 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::CF,50763
50763 :: PRED :: IF :: Z :: if (v36 != v38) goto 107::CF,50887:CD,50771
50771 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v43 = guessFiletype(v41)::JM,50887:CL,61491
50775 :: CALL :: call :: [I :: v46 = $SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::CL,61569
50778 :: CALL :: call :: I :: v48 = v44.ordinal()::
50782 :: EXPR :: reference :: I :: v49 = v46[v48]::DD,50786
50786 :: PRED :: IF :: null :: switch v49::JM,61644:JM,61667:JM,49701:JM,61674:CD,50815:CD,50819:CD,50820:CD,50829:JM,49312:JM,42947:JM,49254:JM,49318:JM,42951:JM,42955:JM,42959:JM,42963:JM,49268:JM,49332:JM,49304:JM,42943:CD,50878
50815 :: CALL :: call :: V :: v71.addMMcifConsumer(v73)::CL,61702
50819 :: NORM :: declaration :: Ljava/io/BufferedReader :: v79 = new java.io.BufferedReader::CF,50820
50820 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v80 = new java.io.InputStreamReader::
50829 :: CALL :: call :: V :: v71.parse(v79)::CL,61719
50834 :: CALL :: call :: V :: v84.printStackTrace()::
50878 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v65 = v50.getStructure(v63)::CL,62707
50886 :: EXPR :: assign :: null :: PHI v36 = v4, v34, v4::DD,50763:DD,50887
50887 :: EXPR :: assign :: null :: PHI v44 = v36, v43::
50935 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,50940:CD,50944
50940 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getPdbId()::JM,50944:CL,50004
50944 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 13::CD,50946
50946 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v8 = p1 $cache .getStructureForPdbId(v5)::CL,50176
50959 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,50970
50970 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $cache .getBiologicalAssembly(v4, v5)::CL,62734
50980 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.toCanonical()::CD,50993:JM,60806:JM,60812:JM,60815
50993 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,59838
51006 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.reduce(org.biojava.nbio.structure.Structure)::JM,62817:JM,74432:JM,62789:JM,74407:JM,74439:JM,62824:JM,62796:JM,74415:JM,62831:JM,62803:JM,62810:JM,62779:JM,74399:CD,51031:CD,51043:CD,51059:CD,51067:CD,51072:CD,51077:CD,51081:CD,51086:CD,51095:CD,51099:CD,51104:CD,51112:CD,51273:CD,51277:CD,51407:CD,51411:CD,51425
51031 :: CALL :: call :: Ljava/lang/String :: v13 = p0 $this .toString()::CL,62898
51043 :: CALL :: call :: V :: v4.setDBRefs(v16)::CL,62928
51059 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
51067 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v23.append(v26)::
51072 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v28.append(#( of ))::
51077 :: CALL :: call :: Ljava/lang/String :: v33 = v4.getPDBCode()::CL,62858
51081 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(v33)::
51086 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v35.append(#( ))::
51095 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getDescription()::CL,62995
51099 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
51104 :: CALL :: call :: Ljava/lang/String :: v46 = v44.toString()::
51112 :: CALL :: call :: Ljava/util/List :: v49 = p1 $s .getCompounds()::CL,63015
51141 :: NORM :: declaration :: Ljava/util/ArrayList :: v62 = new java.util.ArrayList::
51145 :: CALL :: call :: V :: v4.addModel(v62)::CL,63163
51149 :: CALL :: call :: Ljava/util/List :: v66 = p0 $this .getResidueRanges()::JM,51157:CL,59943
51153 :: CALL :: call :: Z :: v68 = v66.isEmpty()::JM,51157
51157 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 255::CD,51158:CD,51182:CD,51187:CD,51193:CD,51197:CD,51401:CD,51405:CD,51422:CD,51423:CD,51424
51158 :: CALL :: call :: Ljava/util/List :: v163 = p1 $s .getCompounds()::CL,63015
51182 :: CALL :: call :: Ljava/util/List :: v172 = p1 $s .getModel(v178)::CL,51721
51187 :: CALL :: call :: V :: v4.setModel(v178, v172)::CL,63207
51193 :: CALL :: call :: Ljava/util/List :: v70 = p0 $this .getResidueRanges()::JM,51405:CL,59943
51197 :: CALL :: call :: Ljava/util/Iterator :: v72 = v70.iterator()::JM,51405
51202 :: CALL :: call :: Ljava/lang/Object :: v76 = v72.next()::JM,51405
51207 :: CALL :: call :: Ljava/lang/String :: v79 = v77.getChainId()::JM,51224:CL,59952
51211 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v81 = v77.getStart()::JM,51298:JM,51231:CL,63285
51215 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v83 = v77.getEnd()::JM,51299:JM,51240:CL,63294
51219 :: CALL :: call :: Z :: v86 = v79.equals(#(_))::JM,51224
51224 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 391::CD,51225:CD,51231:CD,51240:CD,51249:CD,51266
51225 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v88 = p1 $s .getChain(v179, #(0))::CL,63303
51231 :: PRED :: IF :: Z :: if (v81 == #(null)) goto 341::CD,51236:CF,51240
51236 :: CALL :: call :: V :: v81.setChainId(v90)::CL,63339
51240 :: PRED :: IF :: Z :: if (v83 == #(null)) goto 357::CD,51245
51245 :: CALL :: call :: V :: v83.setChainId(v93)::CL,63339
51249 :: CALL :: call :: I :: v96 = p1 $s .size()::CL,63350
51266 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v104 = p1 $s .getChainByPDB(v79, v179)::CL,63384
51273 :: CALL :: call :: I :: v107 = parseInt(v79)::JM,51224
51277 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v109 = p1 $s .getChain(v179, v107)::CL,63303
51298 :: PRED :: IF :: Z :: if (v81 != #(null)) goto 482::CD,51299:CD,51305:CD,51311:CD,51418
51299 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 482::CD,51300:CD,51305:CD,51311:CD,51418
51300 :: CALL :: call :: Ljava/util/List :: v117 = v115.getAtomGroups()::JM,51418:CL,45126
51305 :: CALL :: call :: [Lorg/biojava/nbio/structure/Group :: v119 = v115.getGroupsByPDB(v81, v83)::JM,51418:JM,51311:CL,63472
51311 :: CALL :: call :: Ljava/util/List :: v121 = asList(v119)::JM,51418:JM,51311
51315 :: PRED :: IF :: Z :: if (v160 == #(null)) goto 532::CD,51316:CD,51320:CD,51325:CD,51337:CD,51419
51316 :: CALL :: call :: Ljava/lang/String :: v124 = v115.getChainID()::JM,51325:CL,63330
51320 :: CALL :: call :: Z :: v126 = v160.equals(v124)::JM,51325
51325 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 532::CD,51326:CD,51337:CD,51419
51326 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v128 = v4.getChainByPDB(v160, v179)::JM,51419:CL,63384
51337 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v132 = v4.getChainByPDB(v130, v179)::JM,51419:CL,63384
51344 :: PRED :: IF :: Z :: if (v135 != #(null)) goto 617::JM,63730:JM,63716:JM,63723:JM,63711:CD,51353:CD,51357:CD,51366
51353 :: CALL :: call :: V :: v136.setChainID(v139)::CL,63754
51357 :: CALL :: call :: V :: v4.addChain(v136, v179)::CL,63765
51366 :: CALL :: call :: V :: v136.setSeqResGroups(v143)::CL,63843
51378 :: CALL :: call :: Ljava/util/Iterator :: v150 = v122.iterator()::JM,51396
51383 :: CALL :: call :: Ljava/lang/Object :: v154 = v150.next()::JM,51396
51388 :: CALL :: call :: V :: v148.addGroup(v155)::CL,63901
51392 :: CALL :: call :: Z :: v152 = v150.hasNext()::JM,51396
51396 :: PRED :: IF :: Z :: if (v152 != #(0)) goto 629::CD,51383:CD,51388:CD,51392:CD,51421:JM,51396
51397 :: CALL :: call :: Ljava/lang/String :: v158 = v148.getChainID()::JM,51423:CL,63330
51401 :: CALL :: call :: Z :: v74 = v72.hasNext()::JM,51405
51405 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 270::CF,51424:CD,51202:CD,51207:CD,51211:CD,51215:CD,51219:CD,51224:CD,51298:CD,51315:CD,51344:CD,51378:CD,51392:CD,51396:CD,51397:CD,51401:CD,51418:CD,51419:CD,51421:CD,51422:CD,51423:JM,51405
51406 :: EXPR :: assign :: Ljava/lang/Object :: v176 = v181 + #(1)::DD,51425
51407 :: CALL :: call :: I :: v60 = p1 $s .nrModels()::JM,51411:CL,64143
51411 :: PRED :: IF :: Z :: if (v178 < v60) goto 177::CD,51141:CD,51145:CD,51149:CD,51153:CD,51157:CD,51406:CD,51407:CD,51424:CD,51425
51418 :: EXPR :: assign :: null :: PHI v122 = v117, v121::JM,51396:CF,51315
51419 :: EXPR :: assign :: null :: PHI v135 = v128, v132, #(null)::DD,51344
51421 :: EXPR :: assign :: null :: PHI v180 = v179, v180::JM,51396:DD,51421:DD,51422
51422 :: EXPR :: assign :: null :: PHI v179 = v178, v180::CF,51423:DD,51421:DD,51424
51423 :: EXPR :: assign :: null :: PHI v160 = #(null), v158::JM,51405:DD,51315:JM,51325
51424 :: EXPR :: assign :: null :: PHI v181 = v178, v179::DD,51406
51425 :: EXPR :: assign :: null :: PHI v178 = #(0), v176::DD,51411:DD,51422:DD,51424
51554 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.toCanonical()::CD,51559:CD,51563:CD,51567:JM,60806:JM,60812:JM,60815
51559 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getPdbId()::CL,64156
51563 :: CALL :: call :: Ljava/util/List :: v7 = p0 $this .getRanges()::CL,64165
51567 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,64174
51580 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.toCanonical()::CD,51584:CD,51588:CD,51592:CD,51596:CD,51600:CD,51601:CD,51606:CD,51610:CD,51614:CD,51644:CD,51648:CD,51650:JM,60806:JM,60812:JM,60815
51584 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
51588 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getDomainName()::CL,64230
51592 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getDomainName()::JM,51600:CL,64230
51596 :: CALL :: call :: I :: v10 = v8.length()::JM,51600
51600 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 - #(3)::
51601 :: CALL :: call :: C :: v14 = v6.charAt(v12)::
51606 :: CALL :: call :: Ljava/lang/String :: v16 = valueOf(v14)::
51610 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getSegments()::JM,51648:CL,64239
51614 :: CALL :: call :: Ljava/util/Iterator :: v20 = v18.iterator()::JM,51648
51619 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.next()::JM,51648
51624 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v27 = new org.biojava.nbio.structure.ResidueRange::
51639 :: CALL :: call :: Z :: v34 = v3.add(v27)::
51644 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,51648
51648 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 44::CD,51619:CD,51624:JM,64289:JM,64276:JM,64293:JM,64279:JM,64303:CD,51639:CD,51644:JM,51648
51650 :: CALL :: call :: Ljava/lang/String :: v37 = p0 $this .getThePdbId()::CL,50138
51681 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.reduce(org.biojava.nbio.structure.Structure)::CD,51686:CD,51690
51686 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,64319
51690 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,51006
51698 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.reduce(org.biojava.nbio.structure.Structure)::CD,51706
51706 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = v4.reduce(p1 $input )::CL,51006
51721 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getModel(int)::CE,51722:CD,51729:CD,51734:CD,51735
51722 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getModel(int)::JM,45123:JM,74614:JM,83316:JM,83134:JM,83404:JM,95942:JM,143721:JM,143827
51726 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,51734
51729 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $modelnr )::JM,51734
51734 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,51735
51735 :: NORM :: compound :: Ljava/util/List :: return v7::DD,51722
51738 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getName()::CE,51739:CD,51745
51739 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AtomImpl.getName()::JM,45182:JM,45251:JM,139254
51742 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,51745
51745 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,51739
51769 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .scores = #(null)::
51772 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .scores = #(null)::
51781 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters.getNrThreads()::CE,51782:CD,51788
51782 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters.getNrThreads()::JM,45644:JM,45599
51785 :: EXPR :: reference :: I :: v3 = p0 $this .nrThreads::DD,51788
51788 :: NORM :: compound :: I :: return v3::CF,51782
51844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain.chooseReferenceRMSD(java.util.List)::CE,51845:CD,51848:CD,51852:CD,51888:CD,51892:CD,51917:CD,51920:CD,51925:CD,51930:CD,51938:CD,51943:CD,51945:CD,51946:JM,51877:JM,51864
51845 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain.chooseReferenceRMSD(java.util.List)::JM,45717
51848 :: CALL :: call :: I :: v4 = p1 $afpAlignments .size()::JM,51892:JM,51877:JM,51864:JM,51917
51852 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,51899:JM,51909
51858 :: PRED :: IF :: Z :: if (v31 == v24) goto 63::CF,51939:CD,51859:CD,51864:CD,51865:CD,51870:CD,51871:CD,51875:JM,51892:JM,51877:JM,51917
51859 :: CALL :: call :: Ljava/lang/Object :: v12 = p1 $afpAlignments .get(v31)::JM,51892:JM,51877:JM,51864:JM,51917
51864 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,51870
51865 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.get(v24)::JM,51870
51870 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,51875:JM,51871
51871 :: CALL :: call :: D :: v18 = v16.getTotalRmsdOpt()::JM,51875:JM,51871
51875 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v23 + v18::DD,51939
51876 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v24 + #(1)::DD,51942:CF,51940
51877 :: PRED :: IF :: Z :: if (v24 < v4) goto 32::CD,51858:CD,51876:CD,51939:CD,51940:CD,51941:CD,51942:JM,51878
51878 :: CALL :: call :: Ljava/lang/Double :: v26 = valueOf(v23)::JM,51878
51882 :: CALL :: call :: Z :: v28 = v5.add(v26)::
51887 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v31 + #(1)::DD,51943
51888 :: CALL :: call :: I :: v9 = p1 $afpAlignments .size()::JM,51892:JM,51877:JM,51864:JM,51917
51892 :: PRED :: IF :: Z :: if (v30 < v9) goto 26::CD,51877:CD,51878:CD,51882:CD,51887:CD,51888:CD,51940:CD,51941:CD,51942:CD,51943
51894 :: CALL :: call :: Ljava/lang/Object :: v33 = v5.get(v46)::JM,51899
51899 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::JM,51914
51900 :: CALL :: call :: D :: v36 = v34.doubleValue()::JM,51914
51904 :: CALL :: call :: Ljava/lang/Object :: v38 = v5.get(v45)::JM,51909
51909 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::JM,51914
51910 :: CALL :: call :: D :: v41 = v39.doubleValue()::JM,51914
51914 :: EXPR :: assign :: Z :: v42 = v36 > v41::DD,51915
51915 :: PRED :: IF :: Z :: if (v42 >= #(0)) goto 139::CF,51944
51916 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v46 + #(1)::DD,51946:CF,51945
51917 :: PRED :: IF :: Z :: if (v46 < v4) goto 108::CD,51894:CD,51899:CD,51900:CD,51904:CD,51909:CD,51910:CD,51914:CD,51915:CD,51916:CD,51944:CD,51945:CD,51946
51920 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v48 = new java.lang.StringBuilder::
51925 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v48.append(v45)::
51930 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::
51938 :: NORM :: compound :: I :: return v45::DD,51845
51939 :: EXPR :: assign :: null :: PHI v20 = v23, v19::DD,51941:CF,51876
51940 :: EXPR :: assign :: null :: PHI v31 = v30, v31::CF,51941:DD,51858:JM,51892:JM,51877:JM,51864:JM,51917:DD,51887:DD,51940
51941 :: EXPR :: assign :: null :: PHI v23 = #(0.0 d), v20::CF,51942:DD,51875:JM,51878:DD,51939
51942 :: EXPR :: assign :: null :: PHI v24 = #(0), v22::DD,51858:JM,51870:DD,51876:DD,51877
51943 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,51892:DD,51940:JM,51877:JM,51864:JM,51917
51944 :: EXPR :: assign :: null :: PHI v43 = v45, v46::DD,51945:CF,51916
51945 :: EXPR :: assign :: null :: PHI v45 = #(0), v43::CF,51946:JM,51909:DD,51938:DD,51944
51946 :: EXPR :: assign :: null :: PHI v46 = #(1), v44::JM,51899:DD,51916:DD,51917:DD,51944
51993 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcMain.combineReferenceAlignments(java.util.List,java.util.List,int,boolean)::CD,52000:CD,52004:CD,52026:CD,52030:CD,52076:CD,52229:JM,74870:JM,74876:CD,52238:JM,64513:JM,64519:JM,64580:JM,64574:CD,52252:CD,52253:CD,52446:CD,52449:CD,52454:CD,52458:CD,52463:CD,52468:CD,52477:CD,52480:CD,52489:CD,52502:JM,52128:JM,52134:JM,52359:JM,52010:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52444:JM,52189:JM,52222
52000 :: CALL :: call :: I :: v7 = p2 $atomArrays .size()::JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52004 :: PRED :: IF :: Z :: if (p3 $ref  != #(0)) goto 35::CD,52005:CD,52010:CD,52011:CD,52016:CD,52021:CD,52022:CD,52477:JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52005 :: CALL :: call :: Ljava/lang/Object :: v16 = p1 $afpList .get(#(1))::JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52010 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,52011:JM,52477
52011 :: CALL :: call :: I :: v19 = v17.getCa1Length()::JM,52011:JM,52477
52016 :: CALL :: call :: Ljava/lang/Object :: v10 = p1 $afpList .get(#(0))::JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52021 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::JM,52022:JM,52477
52022 :: CALL :: call :: I :: v13 = v11.getCa2Length()::JM,52022:JM,52477
52026 :: NORM :: declaration :: Ljava/util/TreeSet :: v21 = new java.util.TreeSet::
52030 :: NORM :: declaration :: Ljava/util/ArrayList :: v23 = new java.util.ArrayList::JM,52051:JM,52067:JM,52178:JM,52308:JM,52321:JM,52343:JM,52431
52035 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::
52039 :: CALL :: call :: Z :: v28 = v23.add(v25)::
52045 :: PRED :: IF :: Z :: if (v46 != p3 $ref ) goto 129::CD,52046:CD,52051:CD,52052:CD,52056:CD,52062:CD,52067:CD,52068
52046 :: CALL :: call :: Ljava/lang/Object :: v30 = v23.get(v46)::JM,52051
52051 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::
52052 :: CALL :: call :: Ljava/lang/Integer :: v33 = valueOf(v43)::
52056 :: CALL :: call :: Z :: v35 = v31.add(v33)::
52062 :: CALL :: call :: Ljava/lang/Object :: v37 = v23.get(v46)::JM,52067
52067 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::
52068 :: CALL :: call :: Z :: v41 = v38.add(#(null))::
52073 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,52479:CF,52478
52074 :: PRED :: IF :: Z :: if (v43 < v20) goto 96::CD,52045:CD,52073:CD,52478:CD,52479:CF,52075
52075 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v46 + #(1)::DD,52480
52076 :: PRED :: IF :: Z :: if (v45 < v7) goto 74::CD,52035:CD,52039:CD,52074:CD,52075:CD,52478:CD,52479:CD,52480
52078 :: PRED :: IF :: Z :: if (v109 != p3 $ref ) goto 182::CD,52217:CD,52222:CD,52223:CD,52227:CD,52486:CD,52487:CD,52488
52082 :: PRED :: IF :: Z :: if (v111 <= p3 $ref ) goto 257::CD,52083:CD,52088:CD,52089:CD,52105:CD,52110:CD,52111:CD,52128:CD,52481:CD,52482:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52206:JM,52082:JM,52021:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52083 :: CALL :: call :: Ljava/lang/Object :: v59 = p1 $afpList .get(v111)::JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52088 :: EXPR :: assign :: Ljava/lang/Object :: v60 = CHECKCAST v59::JM,52089
52089 :: CALL :: call :: [[[I :: v62 = v60.getOptAln()::JM,52089
52093 :: EXPR :: reference :: Ljava/lang/Object :: v63 = v62[v107]::
52097 :: EXPR :: reference :: Ljava/lang/Object :: v64 = v63[#(0)]::
52101 :: EXPR :: reference :: I :: v65 = v64[v104]::DD,52481
52105 :: CALL :: call :: Ljava/lang/Object :: v67 = p1 $afpList .get(v111)::JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52110 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::JM,52111
52111 :: CALL :: call :: [[[I :: v70 = v68.getOptAln()::JM,52111
52115 :: EXPR :: reference :: Ljava/lang/Object :: v71 = v70[v107]::
52119 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v71[#(1)]::
52123 :: EXPR :: reference :: I :: v73 = v72[v104]::DD,52482
52128 :: PRED :: IF :: Z :: if (v111 >= p3 $ref ) goto 312::CF,52481:CD,52129:CD,52134:CD,52135:CD,52151:CD,52156:CD,52157:CD,52482:JM,52128:JM,52004:JM,52229:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52252:JM,52444:JM,52189:JM,52222
52129 :: CALL :: call :: Ljava/lang/Object :: v75 = p1 $afpList .get(v111)::JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52134 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::JM,52135
52135 :: CALL :: call :: [[[I :: v78 = v76.getOptAln()::JM,52135
52139 :: EXPR :: reference :: Ljava/lang/Object :: v79 = v78[v107]::
52143 :: EXPR :: reference :: Ljava/lang/Object :: v80 = v79[#(1)]::
52147 :: EXPR :: reference :: I :: v81 = v80[v104]::DD,52481
52151 :: CALL :: call :: Ljava/lang/Object :: v83 = p1 $afpList .get(v111)::JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52156 :: EXPR :: assign :: Ljava/lang/Object :: v84 = CHECKCAST v83::JM,52157
52157 :: CALL :: call :: [[[I :: v86 = v84.getOptAln()::JM,52157
52161 :: EXPR :: reference :: Ljava/lang/Object :: v87 = v86[v107]::
52165 :: EXPR :: reference :: Ljava/lang/Object :: v88 = v87[#(0)]::
52169 :: EXPR :: reference :: I :: v89 = v88[v104]::DD,52482
52173 :: CALL :: call :: Ljava/lang/Object :: v93 = v23.get(v111)::JM,52178
52178 :: EXPR :: assign :: Ljava/lang/Object :: v94 = CHECKCAST v93::
52179 :: CALL :: call :: Ljava/lang/Integer :: v96 = valueOf(v91)::
52183 :: CALL :: call :: Ljava/lang/Object :: v98 = v94.set(v90, v96)::
52189 :: PRED :: IF :: Z :: if (p4 $flexible  == #(0)) goto 355::CD,52190:CF,52200
52190 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 355::CD,52191:CD,52195:CF,52200
52191 :: CALL :: call :: Ljava/lang/Integer :: v100 = valueOf(v90)::
52195 :: CALL :: call :: Z :: v102 = v21.add(v100)::
52200 :: EXPR :: assign :: Ljava/lang/Object :: v103 = v104 + #(1)::DD,52485:CF,52483
52201 :: CALL :: call :: Ljava/lang/Object :: v53 = p1 $afpList .get(v111)::JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52206 :: EXPR :: assign :: Ljava/lang/Object :: v54 = CHECKCAST v53::JM,52207
52207 :: CALL :: call :: [I :: v56 = v54.getOptLen()::JM,52207
52211 :: EXPR :: reference :: I :: v57 = v56[v107]::DD,52215
52215 :: PRED :: IF :: Z :: if (v104 < v57) goto 200::CD,52082:CD,52173:CD,52178:CD,52179:CD,52183:CD,52189:CD,52200:CD,52201:CD,52206:CD,52207:CD,52481:CD,52482:CD,52483:CD,52484:CD,52485:CF,52216
52216 :: EXPR :: assign :: Ljava/lang/Object :: v105 = v107 + #(1)::DD,52487:CF,52486
52217 :: CALL :: call :: Ljava/lang/Object :: v48 = p1 $afpList .get(v110)::JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52222 :: EXPR :: assign :: Ljava/lang/Object :: v49 = CHECKCAST v48::JM,52227:JM,52223
52223 :: CALL :: call :: I :: v51 = v49.getBlockNum()::JM,52227:JM,52223
52227 :: PRED :: IF :: Z :: if (v106 < v51) goto 188::CF,52488:CD,52201:CD,52206:CD,52207:CD,52215:CD,52216:CD,52217:CD,52222:CD,52223:CD,52483:CD,52484:CD,52485:CD,52486:CD,52487
52228 :: EXPR :: assign :: Ljava/lang/Object :: v108 = v112 + #(1)::DD,52489
52229 :: PRED :: IF :: Z :: if (v109 < v7) goto 173::CD,52078:CD,52228:CD,52488:CD,52489
52238 :: CALL :: call :: V :: v116.setAtomArrays(p2 $atomArrays )::CL,45509
52252 :: NORM :: declaration :: [I :: v122 = new []::
52253 :: CALL :: call :: V :: fill(v122, #(-1))::
52258 :: CALL :: call :: Ljava/lang/Integer :: v126 = valueOf(v214)::
52262 :: CALL :: call :: Z :: v128 = v21.contains(v126)::JM,52267
52267 :: PRED :: IF :: Z :: if (v128 == #(0)) goto 548::CD,52268:CD,52272:CD,52276:CD,52280:CD,52281:CD,52287:CD,52291
52268 :: CALL :: call :: Ljava/util/List :: v130 = v213.getBlocks()::CL,47053
52272 :: CALL :: call :: Ljava/util/List :: v132 = v213.getBlocks()::JM,52280:CL,47053
52276 :: CALL :: call :: I :: v134 = v132.size()::JM,52280
52280 :: EXPR :: assign :: Ljava/lang/Object :: v135 = v134 - #(1)::
52281 :: CALL :: call :: Ljava/lang/Object :: v137 = v130.get(v135)::
52287 :: CALL :: call :: Ljava/util/List :: v140 = v138.getAlignRes()::JM,52291:CL,47077
52291 :: PRED :: IF :: Z :: if (v140 == #(null)) goto 548::JM,64513:JM,64519:JM,64580:JM,64574
52303 :: CALL :: call :: Ljava/lang/Object :: v147 = v23.get(v169)::JM,52308
52308 :: EXPR :: assign :: Ljava/lang/Object :: v148 = CHECKCAST v147::JM,52314
52309 :: CALL :: call :: Ljava/lang/Object :: v150 = v148.get(v215)::JM,52314
52314 :: PRED :: IF :: Z :: if (v150 != #(null)) goto 580::CD,52316:CD,52321:CD,52322:CD,52327:CD,52328:CD,52336:CD,52358:CD,52359:CD,52491:CD,52492:CD,52493
52316 :: CALL :: call :: Ljava/lang/Object :: v152 = v23.get(v169)::JM,52321
52321 :: EXPR :: assign :: Ljava/lang/Object :: v153 = CHECKCAST v152::JM,52327
52322 :: CALL :: call :: Ljava/lang/Object :: v155 = v153.get(v215)::JM,52327
52327 :: EXPR :: assign :: Ljava/lang/Object :: v156 = CHECKCAST v155::JM,52336
52328 :: CALL :: call :: I :: v158 = v156.intValue()::JM,52336
52332 :: EXPR :: reference :: I :: v159 = v122[v169]::DD,52336
52336 :: PRED :: IF :: Z :: if (v158 >= v159) goto 623::CD,52338:CD,52343:CD,52344:CD,52349:CD,52350:CD,52358:CD,52359:CD,52491:CD,52492:CD,52493
52338 :: CALL :: call :: Ljava/lang/Object :: v161 = v23.get(v169)::JM,52343
52343 :: EXPR :: assign :: Ljava/lang/Object :: v162 = CHECKCAST v161::JM,52349
52344 :: CALL :: call :: Ljava/lang/Object :: v164 = v162.get(v215)::JM,52349
52349 :: EXPR :: assign :: Ljava/lang/Object :: v165 = CHECKCAST v164::JM,52354
52350 :: CALL :: call :: I :: v167 = v165.intValue()::JM,52354
52354 :: EXPR :: modify :: I :: v122[v169] = v167::
52358 :: EXPR :: assign :: Ljava/lang/Object :: v168 = v169 + #(1)::DD,52492:CF,52491
52359 :: PRED :: IF :: Z :: if (v169 < v7) goto 555::CF,52493:CD,52303:CD,52308:CD,52309:CD,52314
52360 :: PRED :: IF :: Z :: if (v170 == #(0)) goto 677::JM,64580:JM,64574:CD,52366
52366 :: CALL :: call :: V :: fill(v122, #(-1))::
52371 :: CALL :: call :: Ljava/util/List :: v175 = v145.getBlocks()::CL,47053
52375 :: CALL :: call :: Ljava/util/List :: v177 = v145.getBlocks()::JM,52383:CL,47053
52379 :: CALL :: call :: I :: v179 = v177.size()::JM,52383
52383 :: EXPR :: assign :: Ljava/lang/Object :: v180 = v179 - #(1)::
52384 :: CALL :: call :: Ljava/lang/Object :: v182 = v175.get(v180)::
52390 :: CALL :: call :: Ljava/util/List :: v185 = v183.getAlignRes()::JM,52394:CL,47077
52394 :: PRED :: IF :: Z :: if (v185 != #(null)) goto 774::CF,52497:CF,52395:CD,52411:CD,52412:CD,52494:CD,52495:CD,52496
52395 :: NORM :: declaration :: Ljava/util/ArrayList :: v186 = new java.util.ArrayList::
52401 :: NORM :: declaration :: Ljava/util/ArrayList :: v188 = new java.util.ArrayList::
52405 :: CALL :: call :: Z :: v191 = v186.add(v188)::
52410 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v193 + #(1)::DD,52496:CF,52494
52411 :: PRED :: IF :: Z :: if (v193 < v7) goto 740::CD,52401:CD,52405:CD,52410:CD,52494:CD,52495:CD,52496
52412 :: CALL :: call :: V :: v183.setAlignRes(v186)::CL,64617
52416 :: CALL :: call :: Ljava/util/List :: v196 = v183.getAlignRes()::JM,52425:CL,47077
52420 :: CALL :: call :: Ljava/lang/Object :: v198 = v196.get(v211)::JM,52425
52425 :: EXPR :: assign :: Ljava/lang/Object :: v199 = CHECKCAST v198::JM,52431
52426 :: CALL :: call :: Ljava/lang/Object :: v201 = v23.get(v211)::JM,52431
52431 :: EXPR :: assign :: Ljava/lang/Object :: v202 = CHECKCAST v201::JM,52437
52432 :: CALL :: call :: Ljava/lang/Object :: v204 = v202.get(v218)::JM,52437
52437 :: EXPR :: assign :: Ljava/lang/Object :: v205 = CHECKCAST v204::
52438 :: CALL :: call :: Z :: v207 = v199.add(v205)::
52443 :: EXPR :: assign :: Ljava/lang/Object :: v208 = v211 + #(1)::DD,52500:CF,52499
52444 :: PRED :: IF :: Z :: if (v209 < v7) goto 682::CD,52371:CD,52375:CD,52379:CD,52383:CD,52384:CD,52390:CD,52394:CD,52416:CD,52420:CD,52425:CD,52426:CD,52431:CD,52432:CD,52437:CD,52438:CD,52443:CD,52497:CD,52498:CD,52499:CD,52500:CF,52445
52445 :: EXPR :: assign :: Ljava/lang/Object :: v212 = v216 + #(1)::DD,52502
52446 :: PRED :: IF :: Z :: if (v214 < v20) goto 475::CD,52258:CD,52262:CD,52267:CD,52359:CD,52360:CD,52444:CD,52445:CD,52491:CD,52492:CD,52493:CD,52499:CD,52500:CD,52502
52449 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v220 = new java.lang.StringBuilder::
52454 :: CALL :: call :: Ljava/util/List :: v224 = v113.getBlocks()::CL,46889
52458 :: CALL :: call :: Ljava/lang/StringBuilder :: v226 = v220.append(v224)::
52463 :: CALL :: call :: Ljava/lang/StringBuilder :: v229 = v226.append(#( Blocks.))::
52468 :: CALL :: call :: Ljava/lang/String :: v231 = v229.toString()::
52477 :: EXPR :: assign :: null :: PHI v20 = v19, v13::CF,52026:DD,52074:DD,52446
52478 :: EXPR :: assign :: null :: PHI v46 = v45, v46::CF,52479:DD,52045:JM,52051:JM,52067:DD,52075:DD,52478
52479 :: EXPR :: assign :: null :: PHI v43 = #(0), v42::DD,52073:DD,52074
52480 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,52076:DD,52478
52481 :: EXPR :: assign :: null :: PHI v90 = v65, #(0), v81::CF,52482
52482 :: EXPR :: assign :: null :: PHI v91 = v73, #(0), v89::JM,52178
52483 :: EXPR :: assign :: null :: PHI v111 = v110, v111::CF,52484:DD,52082:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222:DD,52128:JM,52178:DD,52483:DD,52486
52484 :: EXPR :: assign :: null :: PHI v107 = v106, v107::CF,52485:DD,52216:DD,52484
52485 :: EXPR :: assign :: null :: PHI v104 = #(0), v103::DD,52190:DD,52200:DD,52215:JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52486 :: EXPR :: assign :: null :: PHI v110 = v109, v111::CF,52487:JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222:DD,52483:DD,52488
52487 :: EXPR :: assign :: null :: PHI v106 = #(0), v105::DD,52227:DD,52484:JM,52128:JM,52004:JM,52229:JM,52134:JM,52359:JM,52010:JM,52076:JM,52045:JM,52078:JM,52110:JM,52206:JM,52082:JM,52021:JM,52088:JM,52411:JM,52156:JM,52252:JM,52444:JM,52189:JM,52222
52488 :: EXPR :: assign :: null :: PHI v112 = v109, v110::DD,52228
52489 :: EXPR :: assign :: null :: PHI v109 = #(0), v108::DD,52078:DD,52229:DD,52486:DD,52488
52491 :: EXPR :: assign :: null :: PHI v215 = v214, v215::CF,52492:JM,52314:JM,52327:JM,52349:DD,52491:DD,52499
52492 :: EXPR :: assign :: null :: PHI v169 = #(0), v168::JM,52308:JM,52321:JM,52343:DD,52358:DD,52359
52493 :: EXPR :: assign :: null :: PHI v170 = #(1), #(0)::DD,52360
52494 :: EXPR :: assign :: null :: PHI v217 = v216, v217::CF,52495:DD,52494:DD,52497
52495 :: EXPR :: assign :: null :: PHI v210 = v209, v210::CF,52496:DD,52495:DD,52498
52496 :: EXPR :: assign :: null :: PHI v193 = #(0), v192::DD,52410:DD,52411
52497 :: EXPR :: assign :: null :: PHI v218 = v216, v217::CF,52498:JM,52437:DD,52499
52498 :: EXPR :: assign :: null :: PHI v211 = v209, v210::JM,52425:JM,52431:DD,52443
52499 :: EXPR :: assign :: null :: PHI v216 = v215, v218::CF,52500:DD,52445:DD,52494:DD,52497
52500 :: EXPR :: assign :: null :: PHI v209 = #(0), v208::DD,52444:DD,52495:DD,52498
52502 :: EXPR :: assign :: null :: PHI v214 = #(0), v212::DD,52446:DD,52491
52702 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.clone()::CD,52706
52706 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentEnsembleImpl :: v4 = p0 $null .clone()::CL,64628
52712 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getMultipleAlignment(int)::CE,52713:CD,52720:CD,52725:CD,52726
52713 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getMultipleAlignment(int)::JM,45887
52717 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .multipleAlignments::JM,52725
52720 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $index )::JM,52725
52725 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,52726
52726 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: return v7::DD,52713
52729 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters.getRandomSeed()::CE,52730:CD,52736
52730 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters.getRandomSeed()::JM,45912
52733 :: EXPR :: reference :: I :: v3 = p0 $this .randomSeed::DD,52736
52736 :: NORM :: compound :: I :: return v3::CF,52730
52774 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v6 = new java.lang.IllegalArgumentException::
52775 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
52780 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $reference )::
52785 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
52803 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters.getConvergenceSteps()::CE,52804:CD,52810
52804 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters.getConvergenceSteps()::JM,45953:JM,46004
52807 :: EXPR :: reference :: I :: v3 = p0 $this .convergenceSteps::DD,52810
52810 :: NORM :: compound :: I :: return v3::CF,52804
52865 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters.getMinBlockLen()::CE,52866:CD,52872
52866 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcParameters.getMinBlockLen()::JM,46057
52869 :: EXPR :: reference :: I :: v3 = p0 $this .minBlockLen::DD,52872
52872 :: NORM :: compound :: I :: return v3::CF,52866
52874 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockImpl.getCoreLength()::CE,52875:CD,52881:CD,52888
52875 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.BlockImpl.getCoreLength()::JM,46092:JM,53262:JM,55538:JM,55795:JM,77712
52878 :: EXPR :: reference :: I :: v3 = p0 $this .coreLength::DD,52881
52881 :: PRED :: IF :: Z :: if (v3 != #(-1)) goto 13::CD,52882
52882 :: CALL :: call :: V :: p0 $this .updateCoreLength()::CL,64682
52885 :: EXPR :: reference :: I :: v6 = p0 $this .coreLength::DD,52888
52888 :: NORM :: compound :: I :: return v6::DD,52875
52893 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.initialize()::CD,52897:CD,52904:CD,53004:CD,53057:CD,53058:CD,53065:CD,53074:CD,53090:CD,53105:CD,53108
52897 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,52901
52901 :: EXPR :: modify :: Ljava/util/List :: p0 $this .freePool = v3::
52904 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,53012
52909 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::
52916 :: CALL :: call :: Ljava/util/List :: v13 = v11.getBlockSets()::JM,52982:CL,38841
52920 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,52982
52925 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,52982
52930 :: CALL :: call :: Ljava/util/List :: v22 = v20.getBlocks()::JM,52977:CL,47053
52934 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,52977
52939 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,52977
52945 :: CALL :: call :: Ljava/util/List :: v33 = v29.getAlignRes()::JM,52954:CL,47077
52949 :: CALL :: call :: Ljava/lang/Object :: v35 = v33.get(v57)::JM,52954
52954 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::JM,52960
52955 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v45)::JM,52960
52960 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::DD,52961
52961 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 140::CD,52962:CF,52967
52962 :: CALL :: call :: Z :: v42 = v9.add(v39)::
52967 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v45 + #(1)::DD,53102:CF,53101
52968 :: CALL :: call :: I :: v31 = v29.length()::JM,52972:CL,47111
52972 :: PRED :: IF :: Z :: if (v45 < v31) goto 100::CF,53103:CD,52945:CD,52949:CD,52954:CD,52955:CD,52960:CD,52961:CD,52967:CD,52968:CD,53101:CD,53102
52973 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,52977
52977 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 82::CF,53104:CD,52939:CD,52968:CD,52972:CD,52973:CD,53101:CD,53102:CD,53103:JM,52977
52978 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,52982
52982 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 53::CD,52925:CD,52930:CD,52934:CD,52973:CD,52977:CD,52978:CD,53103:CD,53104:JM,52982
52983 :: CALL :: call :: Z :: v47 = v5.add(v9)::
52988 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .freePool::
52991 :: NORM :: declaration :: Ljava/util/TreeSet :: v49 = new java.util.TreeSet::
52995 :: CALL :: call :: Z :: v52 = v48.add(v49)::
53000 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v55 + #(1)::DD,53105
53001 :: EXPR :: reference :: I :: v8 = p0 $this .size::DD,53004
53004 :: PRED :: IF :: Z :: if (v54 < v8) goto 24::CF,52909:CD,52916:CD,52920:CD,52978:CD,52982:CD,52983:CD,52991:CD,52995:CD,53000:CD,53104:CD,53105
53007 :: CALL :: call :: Ljava/lang/Object :: v65 = v5.get(v83)::JM,53012
53012 :: EXPR :: assign :: Ljava/lang/Object :: v66 = CHECKCAST v65::JM,53022
53013 :: CALL :: call :: Ljava/lang/Integer :: v68 = valueOf(v80)::JM,53022
53017 :: CALL :: call :: Z :: v70 = v66.contains(v68)::JM,53022
53022 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 266::CD,53026:CD,53032:CD,53036:CF,53041
53023 :: EXPR :: reference :: Ljava/util/List :: v71 = p0 $this .freePool::
53026 :: CALL :: call :: Ljava/lang/Object :: v73 = v71.get(v83)::
53032 :: CALL :: call :: Ljava/lang/Integer :: v76 = valueOf(v80)::
53036 :: CALL :: call :: Z :: v78 = v74.add(v76)::
53041 :: EXPR :: assign :: Ljava/lang/Object :: v79 = v80 + #(1)::DD,53107:CF,53106
53042 :: EXPR :: reference :: Ljava/util/List :: v59 = p0 $this .atomArrays::JM,53050
53045 :: CALL :: call :: Ljava/lang/Object :: v61 = v59.get(v83)::JM,53050
53050 :: EXPR :: assign :: Ljava/lang/Object :: v62 = CHECKCAST v61::CF,53051
53051 :: EXPR :: assign :: I :: v63 = v62.length::CF,53052
53052 :: PRED :: IF :: Z :: if (v80 < v63) goto 223::CD,53007:CD,53012:CD,53013:CD,53017:CD,53022:CD,53041:CD,53045:CD,53050:CD,53051:CD,53106:CD,53107:CF,53053
53053 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v83 + #(1)::DD,53108
53054 :: EXPR :: reference :: I :: v58 = p0 $this .size::DD,53057
53057 :: PRED :: IF :: Z :: if (v82 < v58) goto 218::CD,53045:CD,53050:CD,53051:CD,53052:CD,53053:CD,53106:CD,53107:CD,53108
53058 :: CALL :: call :: Z :: v85 = p0 $this .checkGaps()::CL,64700
53065 :: CALL :: call :: V :: v86.clear()::CL,55957
53071 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v89 = p0 $this .msa::
53074 :: CALL :: call :: V :: v88.superimpose(v89)::CL,56010
53078 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v91 = p0 $this .msa::
53090 :: CALL :: call :: D :: v96 = getMCScore(v91, v92, v93, v94)::JM,53097:CL,56482
53097 :: EXPR :: modify :: D :: p0 $this .mcScore = v96::
53101 :: EXPR :: assign :: null :: PHI v57 = v56, v57::CF,53102:JM,52954:DD,53101:DD,53103
53102 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::JM,52960:DD,52967:DD,52972
53103 :: EXPR :: assign :: null :: PHI v56 = v55, v57::JM,52977:DD,53101:DD,53104
53104 :: EXPR :: assign :: null :: PHI v55 = v54, v56::JM,52982:DD,53000:DD,53103
53105 :: EXPR :: assign :: null :: PHI v54 = #(0), v53::DD,53004:DD,53104
53106 :: EXPR :: assign :: null :: PHI v83 = v82, v83::CF,53107:JM,53012:JM,53050:DD,53053:DD,53106
53107 :: EXPR :: assign :: null :: PHI v80 = #(0), v79::JM,53022:DD,53041:DD,53052
53108 :: EXPR :: assign :: null :: PHI v82 = #(0), v81::DD,53057:DD,53106
53183 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.clone()::CE,53184:CD,53187:CD,53191
53184 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.clone()::JM,46536
53187 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentImpl :: v4 = p0 $null .clone()::JM,53191:CL,64997
53191 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: return v4::DD,53184
53193 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.shiftRow()::CE,53194:CD,53203:CD,53211:CD,53222:CD,53233:CD,53238:CD,53242:CD,53250:CD,53255:CD,53262
53194 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.shiftRow()::JM,46647
53197 :: EXPR :: reference :: Ljava/util/Random :: v3 = p0 $this .rnd::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53200 :: EXPR :: reference :: I :: v4 = p0 $this .size::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53203 :: CALL :: call :: I :: v6 = v3.nextInt(v4)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53208 :: EXPR :: reference :: Ljava/util/Random :: v7 = p0 $this .rnd::JM,53691
53211 :: CALL :: call :: I :: v10 = v7.nextInt(#(2))::JM,53691
53216 :: EXPR :: reference :: Ljava/util/Random :: v11 = p0 $this .rnd::
53219 :: EXPR :: reference :: I :: v12 = p0 $this .blockNr::
53222 :: CALL :: call :: I :: v14 = v11.nextInt(v12)::
53227 :: EXPR :: reference :: Ljava/util/Random :: v15 = p0 $this .rnd::JM,54257:JM,54260:JM,54262:JM,53961:JM,54027:JM,53692:JM,54252:JM,54253:JM,53758:JM,54255:JM,53279
53233 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/Block :: v18 = v16.getBlock(v14)::CL,65009
53238 :: CALL :: call :: I :: v20 = v18.length()::JM,54257:JM,54260:JM,54262:JM,53961:JM,54027:JM,53692:JM,54252:JM,54253:JM,53758:JM,54255:JM,53279:CL,47111
53242 :: CALL :: call :: I :: v22 = v15.nextInt(v20)::JM,54257:JM,54260:JM,54262:JM,53961:JM,54027:JM,53692:JM,54252:JM,54253:JM,53758:JM,54255:JM,53279
53250 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/Block :: v25 = v23.getBlock(v14)::CL,65009
53255 :: CALL :: call :: I :: v27 = v25.getCoreLength()::JM,53262:CL,52874
53259 :: EXPR :: reference :: I :: v28 = p0 $this .Lmin::DD,53262
53262 :: PRED :: IF :: Z :: if (v27 > v28) goto 87::CD,53263:CD,53264:CD,53268:CD,53273:CD,53274:CD,53279
53263 :: NORM :: compound :: Z :: return #(0)::DD,53194
53264 :: CALL :: call :: Ljava/util/List :: v30 = v25.getAlignRes()::JM,53273:CL,47077
53268 :: CALL :: call :: Ljava/lang/Object :: v32 = v30.get(v6)::JM,53273:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53273 :: EXPR :: assign :: Ljava/lang/Object :: v33 = CHECKCAST v32::JM,53279
53274 :: CALL :: call :: Ljava/lang/Object :: v35 = v33.get(v22)::JM,53279:JM,54257:JM,54260:JM,54262:JM,53961:JM,54027:JM,53692:JM,54252:JM,54253:JM,53758:JM,54255
53279 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 764::CD,53282:CD,53286:CD,53291:CD,53292:CD,53297:CD,53306:CD,53310:CD,53315:CD,53316:CD,53321:CD,53323:CD,53327:CD,53332:CD,53333:CD,53338:CD,53691:CD,54247:CD,54251:CD,54252:CD,54253
53281 :: EXPR :: assign :: Ljava/lang/Object :: v315 = v316 + #(1)::DD,54252
53282 :: CALL :: call :: Ljava/util/List :: v306 = v25.getAlignRes()::JM,53291:CL,47077
53286 :: CALL :: call :: Ljava/lang/Object :: v308 = v306.get(v6)::JM,53291:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53291 :: EXPR :: assign :: Ljava/lang/Object :: v309 = CHECKCAST v308::JM,53297
53292 :: CALL :: call :: Ljava/lang/Object :: v311 = v309.get(v316)::JM,53297
53297 :: PRED :: IF :: Z :: if (v311 != #(null)) goto 173::CF,54253:CD,53298:CD,53302:CD,53303
53298 :: CALL :: call :: I :: v313 = v25.length()::JM,53302:CL,47111
53302 :: EXPR :: assign :: Ljava/lang/Object :: v314 = v313 - #(1)::CF,53303
53303 :: PRED :: IF :: Z :: if (v316 < v314) goto 122::CD,53281:CD,53282:CD,53286:CD,53291:CD,53292:CD,53297:CD,54252:CD,54253
53305 :: EXPR :: assign :: Ljava/lang/Object :: v324 = v325 + #(-1)::DD,54253
53306 :: CALL :: call :: Ljava/util/List :: v318 = v25.getAlignRes()::JM,53315:CL,47077
53310 :: CALL :: call :: Ljava/lang/Object :: v320 = v318.get(v6)::JM,53315:JM,54081:JM,53954:JM,54210:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53315 :: EXPR :: assign :: Ljava/lang/Object :: v321 = CHECKCAST v320::JM,53321
53316 :: CALL :: call :: Ljava/lang/Object :: v323 = v321.get(v325)::JM,53321
53321 :: PRED :: IF :: Z :: if (v323 != #(null)) goto 204::CD,53322
53322 :: PRED :: IF :: Z :: if (v325 > #(0)) goto 168::CD,53305:CD,53306:CD,53310:CD,53315:CD,53316:CD,53321:CD,54253
53323 :: CALL :: call :: Ljava/util/List :: v327 = v25.getAlignRes()::JM,53332:CL,47077
53327 :: CALL :: call :: Ljava/lang/Object :: v329 = v327.get(v6)::JM,53332:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53332 :: EXPR :: assign :: Ljava/lang/Object :: v330 = CHECKCAST v329::JM,53338
53333 :: CALL :: call :: Ljava/lang/Object :: v332 = v330.get(v325)::JM,53338
53338 :: PRED :: IF :: Z :: if (v332 != #(null)) goto 258::CD,53339:CD,53343:CD,53348:CD,53349:CD,53354:CD,53356:CD,53360:CD,53365:CD,53366:CD,53371
53339 :: CALL :: call :: Ljava/util/List :: v334 = v25.getAlignRes()::JM,53348:CL,47077
53343 :: CALL :: call :: Ljava/lang/Object :: v336 = v334.get(v6)::JM,53348:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53348 :: EXPR :: assign :: Ljava/lang/Object :: v337 = CHECKCAST v336::JM,53354
53349 :: CALL :: call :: Ljava/lang/Object :: v339 = v337.get(v316)::JM,53354
53354 :: PRED :: IF :: Z :: if (v339 != #(null)) goto 258::CD,53355:CD,53356:CD,53360:CD,53365:CD,53366:CD,53371
53355 :: NORM :: compound :: Z :: return #(0)::DD,53194
53356 :: CALL :: call :: Ljava/util/List :: v341 = v25.getAlignRes()::JM,53365:CL,47077
53360 :: CALL :: call :: Ljava/lang/Object :: v343 = v341.get(v6)::JM,53365:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,54010:JM,53628:JM,53503
53365 :: EXPR :: assign :: Ljava/lang/Object :: v344 = CHECKCAST v343::JM,53371
53366 :: CALL :: call :: Ljava/lang/Object :: v346 = v344.get(v325)::JM,53371
53371 :: PRED :: IF :: Z :: if (v346 != #(null)) goto 395::CD,53372:CD,53376:CD,53381:CD,53382:CD,53387:CD,53388:CD,53392:CD,53393:CD,53400:CD,53406:CD,53411:CD,53444:CD,53448:CD,53453:CD,53454:CD,53459
53372 :: CALL :: call :: Ljava/util/List :: v463 = v25.getAlignRes()::JM,53381:CL,47077
53376 :: CALL :: call :: Ljava/lang/Object :: v465 = v463.get(v6)::JM,53381:JM,54081:JM,53954:JM,54210:JM,53315:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53381 :: EXPR :: assign :: Ljava/lang/Object :: v466 = CHECKCAST v465::JM,53387
53382 :: CALL :: call :: Ljava/lang/Object :: v468 = v466.get(v316)::JM,53387
53387 :: EXPR :: assign :: Ljava/lang/Object :: v469 = CHECKCAST v468::JM,53392
53388 :: CALL :: call :: I :: v471 = v469.intValue()::JM,53392
53392 :: EXPR :: assign :: Ljava/lang/Object :: v472 = v471 - #(1)::
53393 :: CALL :: call :: Ljava/lang/Integer :: v474 = valueOf(v472)::
53397 :: EXPR :: reference :: Ljava/util/List :: v475 = p0 $this .freePool::
53400 :: CALL :: call :: Ljava/lang/Object :: v477 = v475.get(v6)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53406 :: CALL :: call :: Z :: v480 = v478.contains(v474)::JM,53411
53411 :: PRED :: IF :: Z :: if (v480 == #(0)) goto 392::CD,53412:CD,53416:CD,53421:CD,53422:CD,53431:CD,53437:CD,53443:CD,53690
53412 :: CALL :: call :: Ljava/util/List :: v482 = v25.getAlignRes()::JM,53421:CL,47077
53416 :: CALL :: call :: Ljava/lang/Object :: v484 = v482.get(v6)::JM,53421:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53421 :: EXPR :: assign :: Ljava/lang/Object :: v485 = CHECKCAST v484::
53422 :: CALL :: call :: Ljava/lang/Object :: v487 = v485.set(v22, v474)::JM,54257:JM,54260:JM,54262:JM,53961:JM,54027:JM,53692:JM,54252:JM,54253:JM,53758:JM,54255:JM,53279
53428 :: EXPR :: reference :: Ljava/util/List :: v488 = p0 $this .freePool::
53431 :: CALL :: call :: Ljava/lang/Object :: v490 = v488.get(v6)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53437 :: CALL :: call :: Z :: v493 = v491.remove(v474)::
53443 :: NORM :: compound :: Z :: return #(0)::DD,53194
53444 :: CALL :: call :: Ljava/util/List :: v348 = v25.getAlignRes()::JM,53453:CL,47077
53448 :: CALL :: call :: Ljava/lang/Object :: v350 = v348.get(v6)::JM,53453:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53453 :: EXPR :: assign :: Ljava/lang/Object :: v351 = CHECKCAST v350::JM,53459
53454 :: CALL :: call :: Ljava/lang/Object :: v353 = v351.get(v316)::JM,53459
53459 :: PRED :: IF :: Z :: if (v353 != #(null)) goto 523::CD,53460:CD,53464:CD,53469:CD,53470:CD,53475:CD,53476:CD,53480:CD,53481:CD,53488:CD,53493:CD,53526:CD,53530:CD,53535:CD,53536:CD,53541:CD,53542:CD,53546:CD,53550:CD,53555:CD,53556:CD,53561:CD,53562:CD,53566:CD,53567
53460 :: CALL :: call :: Ljava/util/List :: v434 = v25.getAlignRes()::JM,53469:CL,47077
53464 :: CALL :: call :: Ljava/lang/Object :: v436 = v434.get(v6)::JM,53469:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53469 :: EXPR :: assign :: Ljava/lang/Object :: v437 = CHECKCAST v436::JM,53475
53470 :: CALL :: call :: Ljava/lang/Object :: v439 = v437.get(v325)::JM,53475
53475 :: EXPR :: assign :: Ljava/lang/Object :: v440 = CHECKCAST v439::JM,53480
53476 :: CALL :: call :: I :: v442 = v440.intValue()::JM,53480
53480 :: EXPR :: assign :: Ljava/lang/Object :: v443 = v442 + #(1)::JM,53493
53481 :: CALL :: call :: Ljava/lang/Integer :: v445 = valueOf(v443)::JM,53493
53485 :: EXPR :: reference :: Ljava/util/List :: v446 = p0 $this .freePool::JM,53493
53488 :: CALL :: call :: Z :: v448 = v446.contains(v445)::JM,53493
53493 :: PRED :: IF :: Z :: if (v448 == #(0)) goto 520::CD,53494:CD,53498:CD,53503:CD,53504:CD,53513:CD,53519:CD,53525:CD,53690
53494 :: CALL :: call :: Ljava/util/List :: v450 = v25.getAlignRes()::JM,53503:CL,47077
53498 :: CALL :: call :: Ljava/lang/Object :: v452 = v450.get(v6)::JM,53503:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628
53503 :: EXPR :: assign :: Ljava/lang/Object :: v453 = CHECKCAST v452::
53504 :: CALL :: call :: Ljava/lang/Object :: v455 = v453.set(v22, v445)::JM,54257:JM,54260:JM,54262:JM,53961:JM,54027:JM,53692:JM,54252:JM,54253:JM,53758:JM,54255:JM,53279:JM,53493
53510 :: EXPR :: reference :: Ljava/util/List :: v456 = p0 $this .freePool::
53513 :: CALL :: call :: Ljava/lang/Object :: v458 = v456.get(v6)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53519 :: CALL :: call :: Z :: v461 = v459.remove(v445)::
53525 :: NORM :: compound :: Z :: return #(0)::DD,53194
53526 :: CALL :: call :: Ljava/util/List :: v355 = v25.getAlignRes()::JM,53535:CL,47077
53530 :: CALL :: call :: Ljava/lang/Object :: v357 = v355.get(v6)::JM,53535:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53535 :: EXPR :: assign :: Ljava/lang/Object :: v358 = CHECKCAST v357::JM,53541
53536 :: CALL :: call :: Ljava/lang/Object :: v360 = v358.get(v316)::JM,53541
53541 :: EXPR :: assign :: Ljava/lang/Object :: v361 = CHECKCAST v360::JM,53567
53542 :: CALL :: call :: I :: v363 = v361.intValue()::JM,53567
53546 :: CALL :: call :: Ljava/util/List :: v365 = v25.getAlignRes()::JM,53555:CL,47077
53550 :: CALL :: call :: Ljava/lang/Object :: v367 = v365.get(v6)::JM,53555:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53555 :: EXPR :: assign :: Ljava/lang/Object :: v368 = CHECKCAST v367::JM,53561
53556 :: CALL :: call :: Ljava/lang/Object :: v370 = v368.get(v325)::JM,53561
53561 :: EXPR :: assign :: Ljava/lang/Object :: v371 = CHECKCAST v370::JM,53566
53562 :: CALL :: call :: I :: v373 = v371.intValue()::JM,53566
53566 :: EXPR :: assign :: Ljava/lang/Object :: v374 = v373 + #(1)::CF,53567
53567 :: PRED :: IF :: Z :: if (v363 != v374) goto 587::CD,53568:CD,53572:CD,53576:CD,53581:CD,53582:CD,53587:CD,53588:CD,53592:CD,53596:CD,53601:CD,53602:CD,53607:CD,53608:CD,53612:CD,53613:CD,53614:CD,53619:CD,53623:CD,53628:CD,53629:CD,53634:CD,53635:CD,53639:CD,53640:CD,53641:CD,53648:CD,53654:CD,53659:CD,53690
53568 :: NORM :: compound :: Z :: return #(0)::DD,53194
53569 :: EXPR :: reference :: Ljava/util/Random :: v375 = p0 $this .rnd::JM,53639
53572 :: CALL :: call :: Ljava/util/List :: v377 = v25.getAlignRes()::JM,53581:CL,47077
53576 :: CALL :: call :: Ljava/lang/Object :: v379 = v377.get(v6)::JM,53581:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53581 :: EXPR :: assign :: Ljava/lang/Object :: v380 = CHECKCAST v379::JM,53587
53582 :: CALL :: call :: Ljava/lang/Object :: v382 = v380.get(v316)::JM,53587
53587 :: EXPR :: assign :: Ljava/lang/Object :: v383 = CHECKCAST v382::JM,53612
53588 :: CALL :: call :: I :: v385 = v383.intValue()::JM,53612
53592 :: CALL :: call :: Ljava/util/List :: v387 = v25.getAlignRes()::JM,53601:CL,47077
53596 :: CALL :: call :: Ljava/lang/Object :: v389 = v387.get(v6)::JM,53601:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53601 :: EXPR :: assign :: Ljava/lang/Object :: v390 = CHECKCAST v389::JM,53607
53602 :: CALL :: call :: Ljava/lang/Object :: v392 = v390.get(v325)::JM,53607
53607 :: EXPR :: assign :: Ljava/lang/Object :: v393 = CHECKCAST v392::JM,53612
53608 :: CALL :: call :: I :: v395 = v393.intValue()::JM,53612
53612 :: EXPR :: assign :: Ljava/lang/Object :: v396 = v385 - v395::DD,53613
53613 :: EXPR :: assign :: Ljava/lang/Object :: v397 = v396 - #(1)::JM,53639
53614 :: CALL :: call :: I :: v399 = v375.nextInt(v397)::JM,53639
53619 :: CALL :: call :: Ljava/util/List :: v401 = v25.getAlignRes()::JM,53628:CL,47077
53623 :: CALL :: call :: Ljava/lang/Object :: v403 = v401.get(v6)::JM,53628:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53503
53628 :: EXPR :: assign :: Ljava/lang/Object :: v404 = CHECKCAST v403::JM,53634
53629 :: CALL :: call :: Ljava/lang/Object :: v406 = v404.get(v325)::JM,53634
53634 :: EXPR :: assign :: Ljava/lang/Object :: v407 = CHECKCAST v406::JM,53639
53635 :: CALL :: call :: I :: v409 = v407.intValue()::JM,53639
53639 :: EXPR :: assign :: Ljava/lang/Object :: v410 = v399 + v409::DD,53640
53640 :: EXPR :: assign :: Ljava/lang/Object :: v411 = v410 + #(1)::
53641 :: CALL :: call :: Ljava/lang/Integer :: v413 = valueOf(v411)::
53645 :: EXPR :: reference :: Ljava/util/List :: v414 = p0 $this .freePool::
53648 :: CALL :: call :: Ljava/lang/Object :: v416 = v414.get(v6)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53654 :: CALL :: call :: Z :: v419 = v417.contains(v413)::JM,53659
53659 :: PRED :: IF :: Z :: if (v419 == #(0)) goto 762::CD,53660:CD,53664:CD,53669:CD,53670:CD,53679:CD,53685:CF,53690
53660 :: CALL :: call :: Ljava/util/List :: v421 = v25.getAlignRes()::JM,53669:CL,47077
53664 :: CALL :: call :: Ljava/lang/Object :: v423 = v421.get(v6)::JM,53669:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53669 :: EXPR :: assign :: Ljava/lang/Object :: v424 = CHECKCAST v423::
53670 :: CALL :: call :: Ljava/lang/Object :: v426 = v424.set(v22, v413)::JM,54257:JM,54260:JM,54262:JM,53961:JM,54027:JM,53692:JM,54252:JM,54253:JM,53758:JM,54255:JM,53279
53676 :: EXPR :: reference :: Ljava/util/List :: v427 = p0 $this .freePool::
53679 :: CALL :: call :: Ljava/lang/Object :: v429 = v427.get(v6)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53685 :: CALL :: call :: Z :: v432 = v430.remove(v413)::
53690 :: NORM :: compound :: Z :: return #(1)::DD,53194
53691 :: PRED :: IF :: null :: switch v10::CD,53692:CD,53693:CD,53757:CD,53758:CD,53759:CD,53763:CD,53827:CD,53828:CD,53832:CD,53837:CD,53838:CD,53843:CD,53844:CD,53848:CD,53853:CD,53854:CD,53859:CD,53860:CD,53864:CD,53869:CD,53870:CD,53875:CD,53890:CD,53903:CD,53909:CD,53914:CD,53961:CD,53962:CD,54026:CD,54027:CD,54028:CD,54032:CD,54096:CD,54097:CD,54101:CD,54106:CD,54107:CD,54112:CD,54113:CD,54117:CD,54122:CD,54123:CD,54128:CD,54129:CD,54142:CD,54147:CD,54217:CD,54221:CD,54226:CD,54227:CD,54232:CD,54254:CD,54255:CD,54256:CD,54257:CD,54258:CD,54259:CD,54260:CD,54261:CD,54262:CD,54263
53692 :: EXPR :: assign :: Ljava/lang/Object :: v176 = v22 - #(1)::DD,54254
53693 :: PRED :: IF :: Z :: if (v206 >= #(0)) goto 808::CD,53695:CD,53699:CD,53704:CD,53705:CD,53710
53695 :: CALL :: call :: Ljava/util/List :: v178 = v25.getAlignRes()::JM,53704:CL,47077
53699 :: CALL :: call :: Ljava/lang/Object :: v180 = v178.get(v6)::JM,53704:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53704 :: EXPR :: assign :: Ljava/lang/Object :: v181 = CHECKCAST v180::JM,53710
53705 :: CALL :: call :: Ljava/lang/Object :: v183 = v181.get(v206)::JM,53710
53710 :: PRED :: IF :: Z :: if (v183 != #(null)) goto 837::CD,53712:CD,53716:CD,53721:CD,53722:CD,53727:CD,53728:CD,53732:CD,53736:CD,53741:CD,53742:CD,53747:CD,53748:CD,53752:CD,53753
53712 :: CALL :: call :: Ljava/util/List :: v185 = v25.getAlignRes()::JM,53721:CL,47077
53716 :: CALL :: call :: Ljava/lang/Object :: v187 = v185.get(v6)::JM,53721:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53721 :: EXPR :: assign :: Ljava/lang/Object :: v188 = CHECKCAST v187::JM,53727
53722 :: CALL :: call :: Ljava/lang/Object :: v190 = v188.get(v207)::JM,53727
53727 :: EXPR :: assign :: Ljava/lang/Object :: v191 = CHECKCAST v190::JM,53753
53728 :: CALL :: call :: I :: v193 = v191.intValue()::JM,53753
53732 :: CALL :: call :: Ljava/util/List :: v195 = v25.getAlignRes()::JM,53741:CL,47077
53736 :: CALL :: call :: Ljava/lang/Object :: v197 = v195.get(v6)::JM,53741:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53741 :: EXPR :: assign :: Ljava/lang/Object :: v198 = CHECKCAST v197::JM,53747
53742 :: CALL :: call :: Ljava/lang/Object :: v200 = v198.get(v206)::JM,53747
53747 :: EXPR :: assign :: Ljava/lang/Object :: v201 = CHECKCAST v200::JM,53752
53748 :: CALL :: call :: I :: v203 = v201.intValue()::JM,53752
53752 :: EXPR :: assign :: Ljava/lang/Object :: v204 = v203 + #(1)::CF,53753
53753 :: PRED :: IF :: Z :: if (v193 <= v204) goto 905::CD,53693:CD,53755:CD,54254:CD,54255
53755 :: EXPR :: assign :: Ljava/lang/Object :: v205 = v206 + #(-1)::DD,54254
53757 :: EXPR :: assign :: Ljava/lang/Object :: v208 = v206 + #(1)::JM,53859:CF,53758
53758 :: EXPR :: assign :: Ljava/lang/Object :: v209 = v22 + #(1)::DD,54256
53759 :: CALL :: call :: I :: v211 = v25.length()::JM,53763:CL,47111
53763 :: PRED :: IF :: Z :: if (v241 != v211) goto 941::CD,53765:CD,53769:CD,53774:CD,53775:CD,53780
53765 :: CALL :: call :: Ljava/util/List :: v213 = v25.getAlignRes()::JM,53774:CL,47077
53769 :: CALL :: call :: Ljava/lang/Object :: v215 = v213.get(v6)::JM,53774:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53774 :: EXPR :: assign :: Ljava/lang/Object :: v216 = CHECKCAST v215::JM,53780
53775 :: CALL :: call :: Ljava/lang/Object :: v218 = v216.get(v241)::JM,53780
53780 :: PRED :: IF :: Z :: if (v218 != #(null)) goto 970::CD,53782:CD,53786:CD,53791:CD,53792:CD,53797:CD,53798:CD,53802:CD,53803:CD,53807:CD,53812:CD,53813:CD,53818:CD,53819:CD,53823
53782 :: CALL :: call :: Ljava/util/List :: v220 = v25.getAlignRes()::JM,53791:CL,47077
53786 :: CALL :: call :: Ljava/lang/Object :: v222 = v220.get(v6)::JM,53791:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53791 :: EXPR :: assign :: Ljava/lang/Object :: v223 = CHECKCAST v222::JM,53797
53792 :: CALL :: call :: Ljava/lang/Object :: v225 = v223.get(v242)::JM,53797
53797 :: EXPR :: assign :: Ljava/lang/Object :: v226 = CHECKCAST v225::JM,53802
53798 :: CALL :: call :: I :: v228 = v226.intValue()::JM,53802
53802 :: EXPR :: assign :: Ljava/lang/Object :: v229 = v228 + #(1)::DD,53823
53803 :: CALL :: call :: Ljava/util/List :: v231 = v25.getAlignRes()::JM,53812:CL,47077
53807 :: CALL :: call :: Ljava/lang/Object :: v233 = v231.get(v6)::JM,53812:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53365:JM,54010:JM,53628:JM,53503
53812 :: EXPR :: assign :: Ljava/lang/Object :: v234 = CHECKCAST v233::JM,53818
53813 :: CALL :: call :: Ljava/lang/Object :: v236 = v234.get(v241)::JM,53818
53818 :: EXPR :: assign :: Ljava/lang/Object :: v237 = CHECKCAST v236::JM,53823
53819 :: CALL :: call :: I :: v239 = v237.intValue()::JM,53823
53823 :: PRED :: IF :: Z :: if (v229 >= v239) goto 1038::CD,53759:CD,53763:CD,53825:CD,54256:CD,54257
53825 :: EXPR :: assign :: Ljava/lang/Object :: v240 = v241 + #(1)::DD,54256
53827 :: EXPR :: assign :: Ljava/lang/Object :: v243 = v241 + #(-1)::JM,53843
53828 :: CALL :: call :: Ljava/util/List :: v245 = v25.getAlignRes()::JM,53837:CL,47077
53832 :: CALL :: call :: Ljava/lang/Object :: v247 = v245.get(v6)::JM,53837:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53837 :: EXPR :: assign :: Ljava/lang/Object :: v248 = CHECKCAST v247::JM,53843
53838 :: CALL :: call :: Ljava/lang/Object :: v250 = v248.get(v243)::JM,53843
53843 :: EXPR :: assign :: Ljava/lang/Object :: v251 = CHECKCAST v250::DD,53875
53844 :: CALL :: call :: Ljava/util/List :: v253 = v25.getAlignRes()::JM,53853:CL,47077
53848 :: CALL :: call :: Ljava/lang/Object :: v255 = v253.get(v6)::JM,53853:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53853 :: EXPR :: assign :: Ljava/lang/Object :: v256 = CHECKCAST v255::JM,53859
53854 :: CALL :: call :: Ljava/lang/Object :: v258 = v256.get(v208)::JM,53859
53859 :: EXPR :: assign :: Ljava/lang/Object :: v259 = CHECKCAST v258::DD,53890:JM,53895:DD,54258
53860 :: CALL :: call :: Ljava/util/List :: v261 = v25.getAlignRes()::JM,53869:CL,47077
53864 :: CALL :: call :: Ljava/lang/Object :: v263 = v261.get(v6)::JM,53869:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53869 :: EXPR :: assign :: Ljava/lang/Object :: v264 = CHECKCAST v263::
53870 :: CALL :: call :: Ljava/lang/Object :: v266 = v264.remove(v243)::
53875 :: PRED :: IF :: Z :: if (v251 == #(null)) goto 1155::CD,53879:CD,53885:CF,53890
53876 :: EXPR :: reference :: Ljava/util/List :: v267 = p0 $this .freePool::
53879 :: CALL :: call :: Ljava/lang/Object :: v269 = v267.get(v6)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53885 :: CALL :: call :: Z :: v272 = v270.add(v251)::
53890 :: PRED :: IF :: Z :: if (v259 == #(null)) goto 1171::CF,54258:CD,53891:CD,53895:CD,53896
53891 :: CALL :: call :: I :: v274 = v259.intValue()::JM,53895
53895 :: EXPR :: assign :: Ljava/lang/Object :: v275 = v274 - #(1)::JM,54258
53896 :: CALL :: call :: Ljava/lang/Integer :: v277 = valueOf(v275)::JM,54258
53900 :: EXPR :: reference :: Ljava/util/List :: v279 = p0 $this .freePool::
53903 :: CALL :: call :: Ljava/lang/Object :: v281 = v279.get(v6)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53909 :: CALL :: call :: Z :: v284 = v282.contains(v278)::JM,53914
53914 :: PRED :: IF :: Z :: if (v284 == #(0)) goto 1244::CD,53915:CD,53919:CD,53924:CD,53925:CD,53933:CD,53939:CD,53945:CD,53949:CD,53954:CD,53955
53915 :: CALL :: call :: Ljava/util/List :: v292 = v25.getAlignRes()::JM,53924:CL,47077
53919 :: CALL :: call :: Ljava/lang/Object :: v294 = v292.get(v6)::JM,53924:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53924 :: EXPR :: assign :: Ljava/lang/Object :: v295 = CHECKCAST v294::
53925 :: CALL :: call :: V :: v295.add(v208, v278)::
53930 :: EXPR :: reference :: Ljava/util/List :: v297 = p0 $this .freePool::
53933 :: CALL :: call :: Ljava/lang/Object :: v299 = v297.get(v6)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53939 :: CALL :: call :: Z :: v302 = v300.remove(v278)::
53945 :: CALL :: call :: Ljava/util/List :: v286 = v25.getAlignRes()::JM,53954:CL,47077
53949 :: CALL :: call :: Ljava/lang/Object :: v288 = v286.get(v6)::JM,53954:JM,54081:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53954 :: EXPR :: assign :: Ljava/lang/Object :: v289 = CHECKCAST v288::
53955 :: CALL :: call :: V :: v289.add(v208, #(null))::
53961 :: EXPR :: assign :: Ljava/lang/Object :: v38 = v22 - #(1)::DD,54259
53962 :: PRED :: IF :: Z :: if (v70 >= #(0)) goto 1289::CD,53964:CD,53968:CD,53973:CD,53974:CD,53979
53964 :: CALL :: call :: Ljava/util/List :: v41 = v25.getAlignRes()::JM,53973:CL,47077
53968 :: CALL :: call :: Ljava/lang/Object :: v43 = v41.get(v6)::JM,53973:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53973 :: EXPR :: assign :: Ljava/lang/Object :: v44 = CHECKCAST v43::JM,53979
53974 :: CALL :: call :: Ljava/lang/Object :: v46 = v44.get(v70)::JM,53979
53979 :: PRED :: IF :: Z :: if (v46 != #(null)) goto 1318::CD,53981:CD,53985:CD,53990:CD,53991:CD,53996:CD,53997:CD,54001:CD,54005:CD,54010:CD,54011:CD,54016:CD,54017:CD,54021:CD,54022
53981 :: CALL :: call :: Ljava/util/List :: v48 = v25.getAlignRes()::JM,53990:CL,47077
53985 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.get(v6)::JM,53990:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
53990 :: EXPR :: assign :: Ljava/lang/Object :: v51 = CHECKCAST v50::JM,53996
53991 :: CALL :: call :: Ljava/lang/Object :: v53 = v51.get(v71)::JM,53996
53996 :: EXPR :: assign :: Ljava/lang/Object :: v54 = CHECKCAST v53::JM,54022
53997 :: CALL :: call :: I :: v56 = v54.intValue()::JM,54022
54001 :: CALL :: call :: Ljava/util/List :: v58 = v25.getAlignRes()::JM,54010:CL,47077
54005 :: CALL :: call :: Ljava/lang/Object :: v60 = v58.get(v6)::JM,54010:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,53628:JM,53503
54010 :: EXPR :: assign :: Ljava/lang/Object :: v61 = CHECKCAST v60::JM,54016
54011 :: CALL :: call :: Ljava/lang/Object :: v63 = v61.get(v70)::JM,54016
54016 :: EXPR :: assign :: Ljava/lang/Object :: v64 = CHECKCAST v63::JM,54021
54017 :: CALL :: call :: I :: v66 = v64.intValue()::JM,54021
54021 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v66 + #(1)::CF,54022
54022 :: PRED :: IF :: Z :: if (v56 <= v67) goto 1386::CD,53962:CD,54024:CD,54259:CD,54260
54024 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v70 + #(-1)::DD,54259
54026 :: EXPR :: assign :: Ljava/lang/Object :: v72 = v70 + #(1)::JM,54128:CF,54027
54027 :: EXPR :: assign :: Ljava/lang/Object :: v73 = v22 + #(1)::DD,54261
54028 :: CALL :: call :: I :: v75 = v25.length()::JM,54032:CL,47111
54032 :: PRED :: IF :: Z :: if (v105 != v75) goto 1422::CD,54034:CD,54038:CD,54043:CD,54044:CD,54049
54034 :: CALL :: call :: Ljava/util/List :: v77 = v25.getAlignRes()::JM,54043:CL,47077
54038 :: CALL :: call :: Ljava/lang/Object :: v79 = v77.get(v6)::JM,54043:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
54043 :: EXPR :: assign :: Ljava/lang/Object :: v80 = CHECKCAST v79::JM,54049
54044 :: CALL :: call :: Ljava/lang/Object :: v82 = v80.get(v105)::JM,54049
54049 :: PRED :: IF :: Z :: if (v82 != #(null)) goto 1451::CD,54051:CD,54055:CD,54060:CD,54061:CD,54066:CD,54067:CD,54071:CD,54072:CD,54076:CD,54081:CD,54082:CD,54087:CD,54088:CD,54092
54051 :: CALL :: call :: Ljava/util/List :: v84 = v25.getAlignRes()::JM,54060:CL,47077
54055 :: CALL :: call :: Ljava/lang/Object :: v86 = v84.get(v6)::JM,54060:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
54060 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,54066
54061 :: CALL :: call :: Ljava/lang/Object :: v89 = v87.get(v106)::JM,54066
54066 :: EXPR :: assign :: Ljava/lang/Object :: v90 = CHECKCAST v89::JM,54071
54067 :: CALL :: call :: I :: v92 = v90.intValue()::JM,54071
54071 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v92 + #(1)::DD,54092
54072 :: CALL :: call :: Ljava/util/List :: v95 = v25.getAlignRes()::JM,54081:CL,47077
54076 :: CALL :: call :: Ljava/lang/Object :: v97 = v95.get(v6)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
54081 :: EXPR :: assign :: Ljava/lang/Object :: v98 = CHECKCAST v97::JM,54087
54082 :: CALL :: call :: Ljava/lang/Object :: v100 = v98.get(v105)::JM,54087
54087 :: EXPR :: assign :: Ljava/lang/Object :: v101 = CHECKCAST v100::JM,54092
54088 :: CALL :: call :: I :: v103 = v101.intValue()::JM,54092
54092 :: PRED :: IF :: Z :: if (v93 >= v103) goto 1519::CD,54028:CD,54032:CD,54094:CD,54261:CD,54262
54094 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v105 + #(1)::DD,54261
54096 :: EXPR :: assign :: Ljava/lang/Object :: v107 = v105 + #(-1)::JM,54112:DD,54153:DD,54180:DD,54211
54097 :: CALL :: call :: Ljava/util/List :: v109 = v25.getAlignRes()::JM,54106:CL,47077
54101 :: CALL :: call :: Ljava/lang/Object :: v111 = v109.get(v6)::JM,54106:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
54106 :: EXPR :: assign :: Ljava/lang/Object :: v112 = CHECKCAST v111::JM,54112
54107 :: CALL :: call :: Ljava/lang/Object :: v114 = v112.get(v107)::JM,54112
54112 :: EXPR :: assign :: Ljava/lang/Object :: v115 = CHECKCAST v114::DD,54129:JM,54134:DD,54263
54113 :: CALL :: call :: Ljava/util/List :: v117 = v25.getAlignRes()::JM,54122:CL,47077
54117 :: CALL :: call :: Ljava/lang/Object :: v119 = v117.get(v6)::JM,54122:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
54122 :: EXPR :: assign :: Ljava/lang/Object :: v120 = CHECKCAST v119::JM,54128
54123 :: CALL :: call :: Ljava/lang/Object :: v122 = v120.get(v72)::JM,54128
54128 :: EXPR :: assign :: Ljava/lang/Object :: v123 = CHECKCAST v122::DD,54232:CF,54129
54129 :: PRED :: IF :: Z :: if (v115 == #(null)) goto 1602::CF,54263:CD,54130:CD,54134:CD,54135
54130 :: CALL :: call :: I :: v125 = v115.intValue()::JM,54134
54134 :: EXPR :: assign :: Ljava/lang/Object :: v126 = v125 + #(1)::JM,54263
54135 :: CALL :: call :: Ljava/lang/Integer :: v128 = valueOf(v126)::JM,54263
54139 :: EXPR :: reference :: Ljava/util/List :: v130 = p0 $this .freePool::JM,54147
54142 :: CALL :: call :: Z :: v132 = v130.contains(v129)::JM,54147
54147 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 1709::CD,54148:CD,54152:CD,54153:CD,54189:CD,54195:CD,54201:CD,54205:CD,54210:CD,54211:CD,54212
54148 :: CALL :: call :: I :: v141 = v25.length()::JM,54152:CL,47111
54152 :: EXPR :: assign :: Ljava/lang/Object :: v142 = v141 - #(1)::CF,54153
54153 :: PRED :: IF :: Z :: if (v107 != v142) goto 1658::CD,54154:CD,54158:CD,54163:CD,54164:CD,54170:CD,54174:CD,54179:CD,54180:CD,54181
54154 :: CALL :: call :: Ljava/util/List :: v151 = v25.getAlignRes()::JM,54163:CL,47077
54158 :: CALL :: call :: Ljava/lang/Object :: v153 = v151.get(v6)::JM,54163:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
54163 :: EXPR :: assign :: Ljava/lang/Object :: v154 = CHECKCAST v153::
54164 :: CALL :: call :: Z :: v156 = v154.add(v129)::
54170 :: CALL :: call :: Ljava/util/List :: v144 = v25.getAlignRes()::JM,54179:CL,47077
54174 :: CALL :: call :: Ljava/lang/Object :: v146 = v144.get(v6)::JM,54179:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
54179 :: EXPR :: assign :: Ljava/lang/Object :: v147 = CHECKCAST v146::CF,54180
54180 :: EXPR :: assign :: Ljava/lang/Object :: v148 = v107 + #(1)::
54181 :: CALL :: call :: V :: v147.add(v148, v129)::
54186 :: EXPR :: reference :: Ljava/util/List :: v157 = p0 $this .freePool::
54189 :: CALL :: call :: Ljava/lang/Object :: v159 = v157.get(v6)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
54195 :: CALL :: call :: Z :: v162 = v160.remove(v129)::
54201 :: CALL :: call :: Ljava/util/List :: v134 = v25.getAlignRes()::JM,54210:CL,47077
54205 :: CALL :: call :: Ljava/lang/Object :: v136 = v134.get(v6)::JM,54210:JM,54081:JM,53954:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
54210 :: EXPR :: assign :: Ljava/lang/Object :: v137 = CHECKCAST v136::CF,54211
54211 :: EXPR :: assign :: Ljava/lang/Object :: v138 = v107 + #(1)::
54212 :: CALL :: call :: V :: v137.add(v138, #(null))::
54217 :: CALL :: call :: Ljava/util/List :: v164 = v25.getAlignRes()::JM,54226:CL,47077
54221 :: CALL :: call :: Ljava/lang/Object :: v166 = v164.get(v6)::JM,54226:JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
54226 :: EXPR :: assign :: Ljava/lang/Object :: v167 = CHECKCAST v166::
54227 :: CALL :: call :: Ljava/lang/Object :: v169 = v167.remove(v72)::
54232 :: PRED :: IF :: Z :: if (v123 == #(null)) goto 1784::CD,54236:CD,54242
54233 :: EXPR :: reference :: Ljava/util/List :: v170 = p0 $this .freePool::
54236 :: CALL :: call :: Ljava/lang/Object :: v172 = v170.get(v6)::JM,54081:JM,53954:JM,54210:JM,53315:JM,53381:JM,53704:JM,53453:JM,53581:JM,53837:JM,53774:JM,54226:JM,54163:JM,53332:JM,53973:JM,53273:JM,53721:JM,54106:JM,54043:JM,53469:JM,53853:JM,53535:JM,53791:JM,53601:JM,54179:JM,53348:JM,53924:JM,53669:JM,53990:JM,54122:JM,53291:JM,54060:JM,53421:JM,53741:JM,53869:JM,53555:JM,53812:JM,53365:JM,54010:JM,53628:JM,53503
54242 :: CALL :: call :: Z :: v175 = v173.add(v123)::
54247 :: CALL :: call :: Z :: v304 = p0 $this .checkGaps()::CL,64700
54251 :: NORM :: compound :: Z :: return #(1)::DD,53194
54252 :: EXPR :: assign :: null :: PHI v316 = v22, v315::DD,53281:JM,53297:DD,53303:JM,53354:JM,53387:JM,53459:JM,53541:JM,53587
54253 :: EXPR :: assign :: null :: PHI v325 = v22, v22, v324::DD,53305:JM,53321:DD,53322:JM,53338:JM,53371:JM,53475:JM,53561:JM,53607:JM,53634
54254 :: EXPR :: assign :: null :: PHI v206 = v205, v176::CF,54255:DD,53693:JM,53710:JM,53747:DD,53755:DD,53757
54255 :: EXPR :: assign :: null :: PHI v207 = v206, v22::JM,53727:CF,53693
54256 :: EXPR :: assign :: null :: PHI v241 = v240, v209::CF,54257:DD,53763:JM,53780:JM,53818:DD,53825:DD,53827
54257 :: EXPR :: assign :: null :: PHI v242 = v241, v22::JM,53797
54258 :: EXPR :: assign :: null :: PHI v278 = v259, v277::
54259 :: EXPR :: assign :: null :: PHI v70 = v69, v38::CF,54260:DD,53962:JM,53979:JM,54016:DD,54024:DD,54026
54260 :: EXPR :: assign :: null :: PHI v71 = v70, v22::JM,53996:CF,53962
54261 :: EXPR :: assign :: null :: PHI v105 = v104, v73::CF,54262:DD,54032:JM,54049:JM,54087:DD,54094:DD,54096
54262 :: EXPR :: assign :: null :: PHI v106 = v105, v22::JM,54066
54263 :: EXPR :: assign :: null :: PHI v129 = v115, v128::JM,54147
54585 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.expandBlock()::CE,54586:CD,54592:CD,54603:CD,54614:CD,54619:CD,54623:CD,54631:CD,54636:CD,55157:CD,55161:CD,55189
54586 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.expandBlock()::JM,46647
54589 :: EXPR :: reference :: Ljava/util/Random :: v3 = p0 $this .rnd::JM,54636
54592 :: CALL :: call :: I :: v6 = v3.nextInt(#(2))::JM,54636
54597 :: EXPR :: reference :: Ljava/util/Random :: v7 = p0 $this .rnd::
54600 :: EXPR :: reference :: I :: v8 = p0 $this .blockNr::
54603 :: CALL :: call :: I :: v10 = v7.nextInt(v8)::
54608 :: EXPR :: reference :: Ljava/util/Random :: v11 = p0 $this .rnd::JM,55184:JM,55173
54614 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/Block :: v14 = v12.getBlock(v10)::CL,65009
54619 :: CALL :: call :: I :: v16 = v14.length()::JM,55184:JM,55173:CL,47111
54623 :: CALL :: call :: I :: v18 = v11.nextInt(v16)::JM,55184:JM,55173
54631 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/Block :: v21 = v19.getBlock(v10)::CL,65009
54636 :: PRED :: IF :: null :: switch v6::CF,55189:CD,54640:CD,54650:CD,54737:CD,54741:CD,54742:CD,54743:CD,54932:CD,54937:CD,54947:CD,55034:CD,55153:CD,55168:CD,55173:CD,55174:CD,55175:CD,55177:CD,55178:CD,55179:CD,55184:CD,55185:CD,55187:CD,55188
54637 :: EXPR :: reference :: I :: v130 = p0 $this .size::DD,54640
54640 :: NORM :: declaration :: [I :: v131 = new []::
54642 :: EXPR :: modify :: I :: v131[v134] = #(-1)::
54646 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v134 + #(1)::DD,55168
54647 :: EXPR :: reference :: I :: v132 = p0 $this .size::DD,54650
54650 :: PRED :: IF :: Z :: if (v134 < v132) goto 106::CD,54646:CD,55168
54653 :: CALL :: call :: Ljava/util/List :: v140 = v21.getAlignRes()::JM,54662:CL,47077
54657 :: CALL :: call :: Ljava/lang/Object :: v142 = v140.get(v173)::JM,54662
54662 :: EXPR :: assign :: Ljava/lang/Object :: v143 = CHECKCAST v142::JM,54668
54663 :: CALL :: call :: Ljava/lang/Object :: v145 = v143.get(v178)::JM,54668
54668 :: PRED :: IF :: Z :: if (v145 != #(null)) goto 165::CD,54674:CD,55169
54670 :: EXPR :: reference :: I :: v146 = v131[v173]::DD,54674
54674 :: PRED :: IF :: Z :: if (v146 != #(-1)) goto 210::CD,54675:CD,54679:CD,54684:CD,54685:CD,54690:CD,54691:CD,54700:CD,54704:CD,54709:CD,54710:CD,54715:CD,54716:CD,54724:CD,54725:CD,55169
54675 :: CALL :: call :: Ljava/util/List :: v160 = v21.getAlignRes()::JM,54684:CL,47077
54679 :: CALL :: call :: Ljava/lang/Object :: v162 = v160.get(v173)::JM,54684
54684 :: EXPR :: assign :: Ljava/lang/Object :: v163 = CHECKCAST v162::JM,54690
54685 :: CALL :: call :: Ljava/lang/Object :: v165 = v163.get(v178)::JM,54690
54690 :: EXPR :: assign :: Ljava/lang/Object :: v166 = CHECKCAST v165::JM,54695
54691 :: CALL :: call :: I :: v168 = v166.intValue()::JM,54695
54695 :: EXPR :: modify :: I :: v131[v173] = v168::
54700 :: CALL :: call :: Ljava/util/List :: v148 = v21.getAlignRes()::JM,54709:CL,47077
54704 :: CALL :: call :: Ljava/lang/Object :: v150 = v148.get(v173)::JM,54709
54709 :: EXPR :: assign :: Ljava/lang/Object :: v151 = CHECKCAST v150::JM,54715
54710 :: CALL :: call :: Ljava/lang/Object :: v153 = v151.get(v178)::JM,54715
54715 :: EXPR :: assign :: Ljava/lang/Object :: v154 = CHECKCAST v153::JM,54725
54716 :: CALL :: call :: I :: v156 = v154.intValue()::JM,54725
54720 :: EXPR :: reference :: I :: v157 = v131[v173]::DD,54724
54724 :: EXPR :: assign :: Ljava/lang/Object :: v158 = v157 + #(1)::CF,54725
54725 :: PRED :: IF :: Z :: if (v156 <= v158) goto 251::CF,55169:CD,54726
54726 :: EXPR :: assign :: Ljava/lang/Object :: v169 = v172 + #(1)::DD,55169
54727 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v173 + #(1)::DD,55172:CF,55170
54728 :: EXPR :: reference :: I :: v138 = p0 $this .size::DD,54731
54731 :: PRED :: IF :: Z :: if (v173 < v138) goto 133::CD,54653:CD,54657:CD,54662:CD,54663:CD,54668:CD,54727:CD,55169:CD,55170:CD,55171:CD,55172
54732 :: EXPR :: reference :: I :: v174 = p0 $this .Rmin::DD,54735
54735 :: PRED :: IF :: Z :: if (v172 >= v174) goto 291::CF,55174:CD,54736:CD,54737:CD,54741:CD,54742:CD,55173
54736 :: EXPR :: assign :: Ljava/lang/Object :: v175 = v178 + #(1)::DD,55173
54737 :: CALL :: call :: I :: v136 = v21.length()::JM,54741:CL,47111
54741 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v136 - #(1)::DD,54742
54742 :: PRED :: IF :: Z :: if (v137 > v176) goto 128::CF,55174:CD,54731:CD,54735:CD,55170:CD,55171:CD,55172
54743 :: PRED :: IF :: Z :: if (v179 <= #(0)) goto 300::CF,55175:CD,54744
54744 :: EXPR :: assign :: Ljava/lang/Object :: v181 = v179 + #(-1)::DD,55175
54746 :: CALL :: call :: Ljava/util/List :: v185 = v21.getAlignRes()::JM,54755:CL,47077
54750 :: CALL :: call :: Ljava/lang/Object :: v187 = v185.get(v270)::JM,54755
54755 :: EXPR :: assign :: Ljava/lang/Object :: v188 = CHECKCAST v187::JM,54761
54756 :: CALL :: call :: Ljava/lang/Object :: v190 = v188.get(v182)::JM,54761
54761 :: EXPR :: assign :: Ljava/lang/Object :: v191 = CHECKCAST v190::DD,54762:JM,54816:JM,54831
54762 :: PRED :: IF :: Z :: if (v191 != #(null)) goto 412::CD,54763:CD,54767:CD,54768:CD,54801:CD,54806:CD,54812:CD,54816:CD,54817:CD,54821:CD,54826:CD,55176
54763 :: CALL :: call :: I :: v193 = v21.length()::JM,54767:CL,47111
54767 :: EXPR :: assign :: Ljava/lang/Object :: v194 = v193 - #(1)::CF,54768
54768 :: PRED :: IF :: Z :: if (v182 != v194) goto 380::CD,54769:CD,54773:CD,54778:CD,54779:CD,54785:CD,54789:CD,54794:CD,54795:CD,54796
54769 :: CALL :: call :: Ljava/util/List :: v196 = v21.getAlignRes()::JM,54778:CL,47077
54773 :: CALL :: call :: Ljava/lang/Object :: v198 = v196.get(v270)::JM,54778
54778 :: EXPR :: assign :: Ljava/lang/Object :: v199 = CHECKCAST v198::
54779 :: CALL :: call :: Z :: v201 = v199.add(#(null))::
54785 :: CALL :: call :: Ljava/util/List :: v203 = v21.getAlignRes()::JM,54794:CL,47077
54789 :: CALL :: call :: Ljava/lang/Object :: v205 = v203.get(v270)::JM,54794
54794 :: EXPR :: assign :: Ljava/lang/Object :: v206 = CHECKCAST v205::CF,54795
54795 :: EXPR :: assign :: Ljava/lang/Object :: v207 = v182 + #(1)::
54796 :: CALL :: call :: V :: v206.add(v207, #(null))::
54801 :: EXPR :: assign :: Ljava/lang/Object :: v209 = v269 + #(1)::DD,55176
54803 :: EXPR :: reference :: Ljava/util/List :: v210 = p0 $this .freePool::
54806 :: CALL :: call :: Ljava/lang/Object :: v212 = v210.get(v270)::
54812 :: CALL :: call :: I :: v215 = v191.intValue()::JM,54816
54816 :: EXPR :: assign :: Ljava/lang/Object :: v216 = v215 + #(1)::
54817 :: CALL :: call :: Ljava/lang/Integer :: v218 = valueOf(v216)::
54821 :: CALL :: call :: Z :: v220 = v213.contains(v218)::JM,54826
54826 :: PRED :: IF :: Z :: if (v220 == #(0)) goto 554::CD,54827:CD,54831:CD,54832:CD,54836:CD,54840:CD,54841:CD,54877:CD,54883:CD,54889:CD,54893:CD,54894:CD,54927:CD,55176
54827 :: CALL :: call :: I :: v222 = v191.intValue()::JM,54831
54831 :: EXPR :: assign :: Ljava/lang/Object :: v223 = v222 + #(1)::
54832 :: CALL :: call :: Ljava/lang/Integer :: v225 = valueOf(v223)::
54836 :: CALL :: call :: I :: v227 = v21.length()::JM,54840:CL,47111
54840 :: EXPR :: assign :: Ljava/lang/Object :: v228 = v227 - #(1)::CF,54841
54841 :: PRED :: IF :: Z :: if (v182 != v228) goto 499::CD,54842:CD,54846:CD,54851:CD,54852:CD,54858:CD,54862:CD,54867:CD,54868:CD,54869
54842 :: CALL :: call :: Ljava/util/List :: v230 = v21.getAlignRes()::JM,54851:CL,47077
54846 :: CALL :: call :: Ljava/lang/Object :: v232 = v230.get(v270)::JM,54851
54851 :: EXPR :: assign :: Ljava/lang/Object :: v233 = CHECKCAST v232::
54852 :: CALL :: call :: Z :: v235 = v233.add(v225)::
54858 :: CALL :: call :: Ljava/util/List :: v237 = v21.getAlignRes()::JM,54867:CL,47077
54862 :: CALL :: call :: Ljava/lang/Object :: v239 = v237.get(v270)::JM,54867
54867 :: EXPR :: assign :: Ljava/lang/Object :: v240 = CHECKCAST v239::CF,54868
54868 :: EXPR :: assign :: Ljava/lang/Object :: v241 = v182 + #(1)::
54869 :: CALL :: call :: V :: v240.add(v241, v225)::
54874 :: EXPR :: reference :: Ljava/util/List :: v243 = p0 $this .freePool::
54877 :: CALL :: call :: Ljava/lang/Object :: v245 = v243.get(v270)::
54883 :: CALL :: call :: Z :: v248 = v246.remove(v225)::
54889 :: CALL :: call :: I :: v250 = v21.length()::JM,54893:CL,47111
54893 :: EXPR :: assign :: Ljava/lang/Object :: v251 = v250 - #(1)::CF,54894
54894 :: PRED :: IF :: Z :: if (v182 != v251) goto 593::CD,54895:CD,54899:CD,54904:CD,54905:CD,54911:CD,54915:CD,54920:CD,54921:CD,54922
54895 :: CALL :: call :: Ljava/util/List :: v253 = v21.getAlignRes()::JM,54904:CL,47077
54899 :: CALL :: call :: Ljava/lang/Object :: v255 = v253.get(v270)::JM,54904
54904 :: EXPR :: assign :: Ljava/lang/Object :: v256 = CHECKCAST v255::
54905 :: CALL :: call :: Z :: v258 = v256.add(#(null))::
54911 :: CALL :: call :: Ljava/util/List :: v260 = v21.getAlignRes()::JM,54920:CL,47077
54915 :: CALL :: call :: Ljava/lang/Object :: v262 = v260.get(v270)::JM,54920
54920 :: EXPR :: assign :: Ljava/lang/Object :: v263 = CHECKCAST v262::CF,54921
54921 :: EXPR :: assign :: Ljava/lang/Object :: v264 = v182 + #(1)::
54922 :: CALL :: call :: V :: v263.add(v264, #(null))::
54927 :: EXPR :: assign :: Ljava/lang/Object :: v266 = v269 + #(1)::DD,55176
54928 :: EXPR :: assign :: Ljava/lang/Object :: v268 = v270 + #(1)::DD,55178:CF,55177
54929 :: EXPR :: reference :: I :: v183 = p0 $this .size::DD,54932
54932 :: PRED :: IF :: Z :: if (v270 < v183) goto 305::CD,54746:CD,54750:CD,54755:CD,54756:CD,54761:CD,54762:CD,54928:CD,55176:CD,55177:CD,55178
54934 :: EXPR :: reference :: I :: v23 = p0 $this .size::DD,54937
54937 :: NORM :: declaration :: [I :: v24 = new []::
54939 :: EXPR :: modify :: I :: v24[v29] = #(-1)::
54943 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,55179
54944 :: EXPR :: reference :: I :: v25 = p0 $this .size::DD,54947
54947 :: PRED :: IF :: Z :: if (v29 < v25) goto 658::CD,54943:CD,55179
54950 :: CALL :: call :: Ljava/util/List :: v32 = v21.getAlignRes()::JM,54959:CL,47077
54954 :: CALL :: call :: Ljava/lang/Object :: v34 = v32.get(v66)::JM,54959
54959 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,54965
54960 :: CALL :: call :: Ljava/lang/Object :: v37 = v35.get(v71)::JM,54965
54965 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 717::CD,54971:CD,55180
54967 :: EXPR :: reference :: I :: v39 = v24[v66]::DD,54971
54971 :: PRED :: IF :: Z :: if (v39 != #(-1)) goto 762::CD,54972:CD,54976:CD,54981:CD,54982:CD,54987:CD,54988:CD,54997:CD,55001:CD,55006:CD,55007:CD,55012:CD,55013:CD,55021:CD,55022:CD,55180
54972 :: CALL :: call :: Ljava/util/List :: v53 = v21.getAlignRes()::JM,54981:CL,47077
54976 :: CALL :: call :: Ljava/lang/Object :: v55 = v53.get(v66)::JM,54981
54981 :: EXPR :: assign :: Ljava/lang/Object :: v56 = CHECKCAST v55::JM,54987
54982 :: CALL :: call :: Ljava/lang/Object :: v58 = v56.get(v71)::JM,54987
54987 :: EXPR :: assign :: Ljava/lang/Object :: v59 = CHECKCAST v58::JM,54992
54988 :: CALL :: call :: I :: v61 = v59.intValue()::JM,54992
54992 :: EXPR :: modify :: I :: v24[v66] = v61::
54997 :: CALL :: call :: Ljava/util/List :: v41 = v21.getAlignRes()::JM,55006:CL,47077
55001 :: CALL :: call :: Ljava/lang/Object :: v43 = v41.get(v66)::JM,55006
55006 :: EXPR :: assign :: Ljava/lang/Object :: v44 = CHECKCAST v43::JM,55012
55007 :: CALL :: call :: Ljava/lang/Object :: v46 = v44.get(v71)::JM,55012
55012 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::JM,55022
55013 :: CALL :: call :: I :: v49 = v47.intValue()::JM,55022
55017 :: EXPR :: reference :: I :: v50 = v24[v66]::DD,55021
55021 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v50 - #(1)::CF,55022
55022 :: PRED :: IF :: Z :: if (v49 >= v51) goto 803::CF,55180:CD,55023
55023 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v65 + #(1)::DD,55180
55024 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v66 + #(1)::DD,55183:CF,55181
55025 :: EXPR :: reference :: I :: v30 = p0 $this .size::DD,55028
55028 :: PRED :: IF :: Z :: if (v66 < v30) goto 685::CD,54950:CD,54954:CD,54959:CD,54960:CD,54965:CD,55024:CD,55180:CD,55181:CD,55182:CD,55183
55029 :: EXPR :: reference :: I :: v67 = p0 $this .Rmin::DD,55032
55032 :: PRED :: IF :: Z :: if (v65 >= v67) goto 835::CF,55185:CD,55033:CD,55034:CD,55184
55033 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v71 + #(-1)::DD,55184
55034 :: PRED :: IF :: Z :: if (v69 > #(0)) goto 680::CF,55185:CD,55028:CD,55032:CD,55181:CD,55182:CD,55183
55036 :: CALL :: call :: Ljava/util/List :: v76 = v21.getAlignRes()::JM,55045:CL,47077
55040 :: CALL :: call :: Ljava/lang/Object :: v78 = v76.get(v128)::JM,55045
55045 :: EXPR :: assign :: Ljava/lang/Object :: v79 = CHECKCAST v78::JM,55051
55046 :: CALL :: call :: Ljava/lang/Object :: v81 = v79.get(v72)::JM,55051
55051 :: EXPR :: assign :: Ljava/lang/Object :: v82 = CHECKCAST v81::DD,55052:JM,55083:JM,55098
55052 :: PRED :: IF :: Z :: if (v82 != #(null)) goto 904::CD,55053:CD,55057:CD,55062:CD,55063:CD,55068:CD,55073:CD,55079:CD,55083:CD,55084:CD,55088:CD,55093:CD,55186
55053 :: CALL :: call :: Ljava/util/List :: v84 = v21.getAlignRes()::JM,55062:CL,47077
55057 :: CALL :: call :: Ljava/lang/Object :: v86 = v84.get(v128)::JM,55062
55062 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::
55063 :: CALL :: call :: V :: v87.add(v72, #(null))::
55068 :: EXPR :: assign :: Ljava/lang/Object :: v89 = v127 + #(1)::DD,55186
55070 :: EXPR :: reference :: Ljava/util/List :: v90 = p0 $this .freePool::
55073 :: CALL :: call :: Ljava/lang/Object :: v92 = v90.get(v128)::
55079 :: CALL :: call :: I :: v95 = v82.intValue()::JM,55083
55083 :: EXPR :: assign :: Ljava/lang/Object :: v96 = v95 - #(1)::
55084 :: CALL :: call :: Ljava/lang/Integer :: v98 = valueOf(v96)::
55088 :: CALL :: call :: Z :: v100 = v93.contains(v98)::JM,55093
55093 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 1000::CD,55094:CD,55098:CD,55099:CD,55103:CD,55107:CD,55112:CD,55113:CD,55121:CD,55127:CD,55133:CD,55137:CD,55142:CD,55143:CD,55148:CD,55186
55094 :: CALL :: call :: I :: v102 = v82.intValue()::JM,55098
55098 :: EXPR :: assign :: Ljava/lang/Object :: v103 = v102 - #(1)::
55099 :: CALL :: call :: Ljava/lang/Integer :: v105 = valueOf(v103)::
55103 :: CALL :: call :: Ljava/util/List :: v107 = v21.getAlignRes()::JM,55112:CL,47077
55107 :: CALL :: call :: Ljava/lang/Object :: v109 = v107.get(v128)::JM,55112
55112 :: EXPR :: assign :: Ljava/lang/Object :: v110 = CHECKCAST v109::
55113 :: CALL :: call :: V :: v110.add(v72, v105)::
55118 :: EXPR :: reference :: Ljava/util/List :: v112 = p0 $this .freePool::
55121 :: CALL :: call :: Ljava/lang/Object :: v114 = v112.get(v128)::
55127 :: CALL :: call :: Z :: v117 = v115.remove(v105)::
55133 :: CALL :: call :: Ljava/util/List :: v119 = v21.getAlignRes()::JM,55142:CL,47077
55137 :: CALL :: call :: Ljava/lang/Object :: v121 = v119.get(v128)::JM,55142
55142 :: EXPR :: assign :: Ljava/lang/Object :: v122 = CHECKCAST v121::
55143 :: CALL :: call :: V :: v122.add(v72, #(null))::
55148 :: EXPR :: assign :: Ljava/lang/Object :: v124 = v127 + #(1)::DD,55186
55149 :: EXPR :: assign :: Ljava/lang/Object :: v126 = v128 + #(1)::DD,55188:CF,55187
55150 :: EXPR :: reference :: I :: v74 = p0 $this .size::DD,55153
55153 :: PRED :: IF :: Z :: if (v128 < v74) goto 840::CF,55189:CD,55036:CD,55040:CD,55045:CD,55046:CD,55051:CD,55052:CD,55149:CD,55186:CD,55187:CD,55188
55154 :: EXPR :: reference :: I :: v273 = p0 $this .size::DD,55157
55157 :: EXPR :: assign :: Ljava/lang/Object :: v274 = v273 - v272::DD,55161
55158 :: EXPR :: reference :: I :: v275 = p0 $this .Rmin::DD,55161
55161 :: PRED :: IF :: Z :: if (v274 < v275) goto 1055::CD,55162:CD,55163:CD,55167
55162 :: NORM :: compound :: Z :: return #(1)::DD,54586
55163 :: CALL :: call :: Z :: v277 = p0 $this .checkGaps()::CL,64700
55167 :: NORM :: compound :: Z :: return #(0)::DD,54586
55168 :: EXPR :: assign :: null :: PHI v134 = #(0), v133::DD,54646:DD,54650
55169 :: EXPR :: assign :: null :: PHI v170 = v172, v172, v172, v169::DD,55171:CF,54727
55170 :: EXPR :: assign :: null :: PHI v178 = v176, v178::CF,55171:JM,54668:JM,54690:JM,54715:DD,54736:DD,55170:DD,55174
55171 :: EXPR :: assign :: null :: PHI v172 = #(0), v170::CF,55172:DD,54726:DD,54735:DD,55169
55172 :: EXPR :: assign :: null :: PHI v173 = #(0), v171::JM,54662:JM,54684:JM,54709:DD,54727:DD,54731
55173 :: EXPR :: assign :: null :: PHI v176 = v18, v175::DD,54742:DD,55170:DD,55174
55174 :: EXPR :: assign :: null :: PHI v179 = v178, v176::DD,54743:DD,54744:DD,55175
55175 :: EXPR :: assign :: null :: PHI v182 = v179, v181::JM,54761:DD,54768:DD,54795:DD,54841:DD,54868:DD,54894:DD,54921
55176 :: EXPR :: assign :: null :: PHI v267 = v209, v269, v266::DD,55177:CF,54928
55177 :: EXPR :: assign :: null :: PHI v269 = #(0), v267::CF,55178:DD,54801:DD,54927:DD,55176:DD,55189
55178 :: EXPR :: assign :: null :: PHI v270 = #(0), v268::JM,54755:JM,54778:JM,54794:JM,54851:JM,54867:JM,54904:JM,54920:DD,54928:DD,54932
55179 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,54943:DD,54947
55180 :: EXPR :: assign :: null :: PHI v63 = v65, v65, v65, v62::DD,55182:CF,55024
55181 :: EXPR :: assign :: null :: PHI v71 = v69, v71::CF,55182:JM,54965:JM,54987:JM,55012:DD,55033:DD,55181:DD,55185
55182 :: EXPR :: assign :: null :: PHI v65 = #(0), v63::CF,55183:DD,55023:DD,55032:DD,55180
55183 :: EXPR :: assign :: null :: PHI v66 = #(0), v64::JM,54959:JM,54981:JM,55006:DD,55024:DD,55028
55184 :: EXPR :: assign :: null :: PHI v69 = v18, v68::DD,55034:DD,55181:DD,55185
55185 :: EXPR :: assign :: null :: PHI v72 = v71, v69::JM,55051
55186 :: EXPR :: assign :: null :: PHI v125 = v89, v127, v124::DD,55187:CF,55149
55187 :: EXPR :: assign :: null :: PHI v127 = #(0), v125::CF,55188:DD,55068:DD,55148:DD,55186:DD,55189
55188 :: EXPR :: assign :: null :: PHI v128 = #(0), v126::JM,55045:JM,55062:JM,55112:JM,55142:DD,55149:DD,55153
55189 :: EXPR :: assign :: null :: PHI v272 = #(0), v269, v127::DD,55157
55415 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.shrinkBlock()::CE,55416:CD,55422:CD,55429:CD,55433:CD,55514:CD,55518:CD,55522:CD,55526:CD,55531:CD,55538:CD,55611:CD,55612:CD,55614:CD,55615:JM,52897
55416 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.shrinkBlock()::JM,46647
55419 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v3 = p0 $this .msa::
55422 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v5 = getAverageResidueDistances(v3)::CL,65052
55429 :: CALL :: call :: I :: v8 = v6.length()::JM,55433:CL,46938
55433 :: NORM :: declaration :: [D :: v9 = new []::
55437 :: CALL :: call :: D :: v24 = v5.get(v36, v55)::JM,55443:CL,65068
55443 :: EXPR :: assign :: Z :: v26 = v24 < #(-1.0 d)::DD,55444
55444 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 87::CF,55593:CD,55449:CD,55455:CD,55460
55445 :: EXPR :: reference :: D :: v27 = v9[v55]::DD,55455
55449 :: CALL :: call :: D :: v29 = v5.get(v36, v55)::JM,55455:CL,65068
55455 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v27 + v29::DD,55456
55456 :: EXPR :: modify :: D :: v9[v55] = v30::
55460 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v35 + #(1)::DD,55593
55461 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v36 + #(1)::DD,55601:CF,55594
55462 :: EXPR :: reference :: I :: v22 = p0 $this .size::DD,55465
55465 :: PRED :: IF :: Z :: if (v36 < v22) goto 59::CD,55437:CD,55443:CD,55444:CD,55461:CD,55593:CD,55594:CD,55595:CD,55597:CD,55598:CD,55599:CD,55600:CD,55601
55466 :: EXPR :: reference :: D :: v37 = v9[v55]::DD,55471
55470 :: EXPR :: assign :: D :: v38 = CONVERT I to D v35::CF,55471
55471 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v37 / v38::DD,55472
55472 :: EXPR :: modify :: D :: v9[v55] = v39::
55476 :: EXPR :: reference :: D :: v40 = v9[v55]::DD,55480
55480 :: EXPR :: assign :: Z :: v41 = v40 < v54::DD,55481
55481 :: PRED :: IF :: Z :: if (v41 <= #(0)) goto 145::CF,55602:CD,55485:CD,55489:CD,55490:CD,55603
55482 :: EXPR :: reference :: Ljava/util/Random :: v42 = p0 $this .rnd::JM,55489
55485 :: CALL :: call :: D :: v44 = v42.nextDouble()::JM,55489
55489 :: EXPR :: assign :: Z :: v46 = v44 < #(0.5 d)::DD,55490
55490 :: PRED :: IF :: Z :: if (v46 <= #(0)) goto 145::CF,55602:CD,55603
55491 :: EXPR :: reference :: D :: v47 = v9[v55]::DD,55602
55495 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v55 + #(1)::DD,55608:CF,55496
55496 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v56 + #(1)::DD,55610:CF,55605
55500 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/Block :: v19 = v17.getBlock(v65)::CL,65009
55505 :: CALL :: call :: I :: v21 = v19.length()::JM,55509:CL,47111
55509 :: PRED :: IF :: Z :: if (v53 < v21) goto 51::CD,55465:CD,55470:CD,55471:CD,55480:CD,55481:CD,55495:CD,55496:CD,55500:CD,55505:CD,55594:CD,55595:CD,55597:CD,55598:CD,55599:CD,55600:CD,55601:CD,55602:CD,55603:CD,55605:CD,55606:CD,55608:CD,55609:CD,55610:CF,55510
55510 :: EXPR :: assign :: Ljava/lang/Object :: v60 = v65 + #(1)::DD,55615:CF,55611
55514 :: CALL :: call :: Ljava/util/List :: v14 = v12.getBlocks()::JM,55522:CL,46889
55518 :: CALL :: call :: I :: v16 = v14.size()::JM,55522
55522 :: PRED :: IF :: Z :: if (v64 < v16) goto 42::CD,55500:CD,55505:CD,55509:CD,55510:CD,55514:CD,55518:CD,55605:CD,55606:CD,55608:CD,55609:CD,55610:CD,55611:CD,55612:CD,55614:CD,55615
55526 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/Block :: v73 = v71.getBlock(v70)::CL,65009
55531 :: CALL :: call :: I :: v75 = v73.getCoreLength()::JM,55538:CL,52874
55535 :: EXPR :: reference :: I :: v76 = p0 $this .Lmin::DD,55538
55538 :: PRED :: IF :: Z :: if (v75 > v76) goto 226::CD,55539:CD,55591:CD,55592:CD,55616
55539 :: NORM :: compound :: Z :: return #(0)::DD,55416
55541 :: CALL :: call :: Ljava/util/List :: v79 = v73.getAlignRes()::JM,55550:CL,47077
55545 :: CALL :: call :: Ljava/lang/Object :: v81 = v79.get(v101)::JM,55550
55550 :: EXPR :: assign :: Ljava/lang/Object :: v82 = CHECKCAST v81::JM,55556
55551 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(v62)::JM,55556
55556 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,55572
55557 :: CALL :: call :: Ljava/util/List :: v87 = v73.getAlignRes()::JM,55566:CL,47077
55561 :: CALL :: call :: Ljava/lang/Object :: v89 = v87.get(v101)::JM,55566
55566 :: EXPR :: assign :: Ljava/lang/Object :: v90 = CHECKCAST v89::
55567 :: CALL :: call :: Ljava/lang/Object :: v92 = v90.remove(v62)::
55572 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 310::CD,55576:CD,55582:CF,55587
55573 :: EXPR :: reference :: Ljava/util/List :: v94 = p0 $this .freePool::
55576 :: CALL :: call :: Ljava/lang/Object :: v96 = v94.get(v101)::
55582 :: CALL :: call :: Z :: v99 = v97.add(v85)::
55587 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v101 + #(1)::DD,55616
55588 :: EXPR :: reference :: I :: v77 = p0 $this .size::DD,55591
55591 :: PRED :: IF :: Z :: if (v101 < v77) goto 231::CD,55541:CD,55545:CD,55550:CD,55551:CD,55556:CD,55557:CD,55561:CD,55566:CD,55567:CD,55572:CD,55587:CD,55616:CF,55592
55592 :: NORM :: compound :: Z :: return #(1)::DD,55416
55593 :: EXPR :: assign :: null :: PHI v33 = v35, v32::DD,55600:CF,55461
55594 :: EXPR :: assign :: null :: PHI v54 = v51, v54::CF,55595:DD,55480:DD,55594:DD,55602
55595 :: EXPR :: assign :: null :: PHI v59 = v58, v59::DD,55595:DD,55603
55597 :: EXPR :: assign :: null :: PHI v55 = v52, v55::CF,55598:DD,55495:DD,55597
55598 :: EXPR :: assign :: null :: PHI v66 = v65, v66::CF,55599:DD,55598:DD,55609
55599 :: EXPR :: assign :: null :: PHI v56 = v53, v56::CF,55600:DD,55496:DD,55599:DD,55603
55600 :: EXPR :: assign :: null :: PHI v35 = #(0), v33::CF,55601:DD,55460:DD,55470:DD,55593
55601 :: EXPR :: assign :: null :: PHI v36 = #(0), v34::DD,55461:DD,55465
55602 :: EXPR :: assign :: null :: PHI v48 = v54, v54, v47::CF,55603:DD,55605
55603 :: EXPR :: assign :: null :: PHI v57 = v59, v59, v56::DD,55606
55605 :: EXPR :: assign :: null :: PHI v51 = v61, v48::CF,55606:DD,55594:DD,55611
55606 :: EXPR :: assign :: null :: PHI v58 = v62, v57::DD,55595:DD,55612
55608 :: EXPR :: assign :: null :: PHI v52 = v63, v49::CF,55609:DD,55597:DD,55614
55609 :: EXPR :: assign :: null :: PHI v65 = v64, v66::CF,55610:DD,55510:DD,55598
55610 :: EXPR :: assign :: null :: PHI v53 = #(0), v50::DD,55509:DD,55599
55611 :: EXPR :: assign :: null :: PHI v61 = #(4.9E-324 d), v51::CF,55612:DD,55605
55612 :: EXPR :: assign :: null :: PHI v62 = #(0), v58::JM,55556:DD,55606
55614 :: EXPR :: assign :: null :: PHI v63 = #(0), v52::CF,55615:DD,55608
55615 :: EXPR :: assign :: null :: PHI v64 = #(0), v60::DD,55522:DD,55609
55616 :: EXPR :: assign :: null :: PHI v101 = #(0), v100::JM,55550:JM,55566:DD,55587:DD,55591
55710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.insertGap()::CE,55711:CD,55717:CD,55779:CD,55783:CD,55788:CD,55795:CD,55870:CD,55871:CD,55873:CD,55875:JM,52897
55711 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.insertGap()::JM,46647
55714 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v3 = p0 $this .msa::
55717 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v5 = getAverageResidueDistances(v3)::CL,65052
55724 :: CALL :: call :: D :: v16 = v5.get(v33, v42)::JM,55730:CL,65068
55730 :: EXPR :: assign :: Z :: v18 = v16 < #(-1.0 d)::DD,55731
55731 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 105::CF,55851:CD,55732:CD,55738:CD,55739:CD,55852:CD,55854
55732 :: CALL :: call :: D :: v20 = v5.get(v33, v42)::JM,55738:CL,65068
55738 :: EXPR :: assign :: Z :: v21 = v20 < v32::DD,55739
55739 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 105::CF,55851:CD,55743:CD,55747:CD,55748:CD,55852:CD,55854
55740 :: EXPR :: reference :: Ljava/util/Random :: v22 = p0 $this .rnd::JM,55747
55743 :: CALL :: call :: D :: v24 = v22.nextDouble()::JM,55747
55747 :: EXPR :: assign :: Z :: v26 = v24 < #(0.5 d)::DD,55748
55748 :: PRED :: IF :: Z :: if (v26 <= #(0)) goto 105::CF,55851:CD,55749:CD,55852:CD,55854
55749 :: CALL :: call :: D :: v28 = v5.get(v33, v42)::JM,55851:CL,65068
55755 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v33 + #(1)::DD,55862:CF,55855
55756 :: EXPR :: reference :: I :: v14 = p0 $this .size::DD,55759
55759 :: PRED :: IF :: Z :: if (v33 < v14) goto 47::CD,55724:CD,55730:CD,55731:CD,55755:CD,55851:CD,55852:CD,55854:CD,55855:CD,55856:CD,55858:CD,55860:CD,55861:CD,55862
55761 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v43 + #(1)::DD,55869:CF,55863
55765 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/Block :: v11 = v9.getBlock(v53)::CL,65009
55770 :: CALL :: call :: I :: v13 = v11.length()::JM,55774:CL,47111
55774 :: PRED :: IF :: Z :: if (v41 < v13) goto 39::CD,55759:CD,55761:CD,55765:CD,55770:CD,55855:CD,55856:CD,55858:CD,55860:CD,55861:CD,55862:CD,55863:CD,55864:CD,55866:CD,55868:CD,55869:CF,55775
55775 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v53 + #(1)::DD,55875:CF,55870
55776 :: EXPR :: reference :: I :: v8 = p0 $this .blockNr::DD,55779
55779 :: PRED :: IF :: Z :: if (v52 < v8) goto 33::CD,55765:CD,55770:CD,55774:CD,55775:CD,55863:CD,55864:CD,55866:CD,55868:CD,55869:CD,55870:CD,55871:CD,55873:CD,55875
55783 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/Block :: v61 = v59.getBlock(v58)::CL,65009
55788 :: CALL :: call :: I :: v63 = v61.getCoreLength()::JM,55795:CL,52874
55792 :: EXPR :: reference :: I :: v64 = p0 $this .Lmin::DD,55795
55795 :: PRED :: IF :: Z :: if (v63 > v64) goto 187::CD,55796:CD,55797:CD,55801:CD,55806:CD,55807:CD,55812:CD,55813
55796 :: NORM :: compound :: Z :: return #(0)::DD,55711
55797 :: CALL :: call :: Ljava/util/List :: v66 = v61.getAlignRes()::JM,55806:CL,47077
55801 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.get(v49)::JM,55806
55806 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::JM,55812
55807 :: CALL :: call :: Ljava/lang/Object :: v71 = v69.get(v50)::JM,55812
55812 :: EXPR :: assign :: Ljava/lang/Object :: v72 = CHECKCAST v71::DD,55813
55813 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 245::CD,55817:CD,55823:CD,55829:CD,55830:CD,55834:CD,55839:CD,55840:CD,55846:CD,55850
55814 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .freePool::
55817 :: CALL :: call :: Ljava/lang/Object :: v76 = v74.get(v49)::
55823 :: CALL :: call :: Z :: v79 = v77.add(v72)::
55829 :: NORM :: compound :: Z :: return #(0)::DD,55711
55830 :: CALL :: call :: Ljava/util/List :: v81 = v61.getAlignRes()::JM,55839:CL,47077
55834 :: CALL :: call :: Ljava/lang/Object :: v83 = v81.get(v49)::JM,55839
55839 :: EXPR :: assign :: Ljava/lang/Object :: v84 = CHECKCAST v83::
55840 :: CALL :: call :: Ljava/lang/Object :: v86 = v84.set(v50, #(null))::
55846 :: CALL :: call :: Z :: v88 = p0 $this .checkGaps()::CL,64700
55850 :: NORM :: compound :: Z :: return #(1)::DD,55711
55851 :: EXPR :: assign :: null :: PHI v29 = v32, v32, v32, v28::CF,55852:DD,55855
55852 :: EXPR :: assign :: null :: PHI v34 = v35, v35, v35, v33::DD,55856
55854 :: EXPR :: assign :: null :: PHI v44 = v45, v45, v45, v43::DD,55858:CF,55755
55855 :: EXPR :: assign :: null :: PHI v32 = v38, v29::CF,55856:DD,55738:DD,55851:DD,55863
55856 :: EXPR :: assign :: null :: PHI v35 = v39, v34::DD,55852:DD,55864
55858 :: EXPR :: assign :: null :: PHI v45 = v46, v44::DD,55854:DD,55866
55860 :: EXPR :: assign :: null :: PHI v54 = v53, v54::CF,55861:DD,55860:DD,55868
55861 :: EXPR :: assign :: null :: PHI v43 = v41, v43::CF,55862:DD,55761:DD,55854:DD,55861
55862 :: EXPR :: assign :: null :: PHI v33 = #(0), v31::DD,55755:DD,55759:DD,55852
55863 :: EXPR :: assign :: null :: PHI v38 = v48, v32::CF,55864:DD,55855:DD,55870
55864 :: EXPR :: assign :: null :: PHI v39 = v49, v35::DD,55856:DD,55871
55866 :: EXPR :: assign :: null :: PHI v46 = v50, v45::DD,55858:DD,55873
55868 :: EXPR :: assign :: null :: PHI v53 = v52, v54::CF,55869:DD,55775:DD,55860
55869 :: EXPR :: assign :: null :: PHI v41 = #(0), v37::DD,55774:DD,55861
55870 :: EXPR :: assign :: null :: PHI v48 = #(4.9E-324 d), v38::CF,55871:DD,55863
55871 :: EXPR :: assign :: null :: PHI v49 = #(0), v39::JM,55806:JM,55839:DD,55864
55873 :: EXPR :: assign :: null :: PHI v50 = #(0), v46::JM,55812:DD,55866
55875 :: EXPR :: assign :: null :: PHI v52 = #(0), v47::DD,55779:DD,55868
55957 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.clear()::CD,55961:CD,55973:CD,55977:CD,55990:CD,55994
55961 :: CALL :: call :: V :: p0 $this .clear()::CL,65089
55964 :: EXPR :: modify :: I :: p0 $this .length = #(-1)::
55967 :: EXPR :: modify :: I :: p0 $this .coreLength = #(-1)::
55970 :: EXPR :: modify :: Ljava/util/List :: p0 $this .alignResCounts = #(null)::
55973 :: CALL :: call :: Ljava/util/List :: v7 = p0 $this .getBlockSets()::JM,55994:CL,38841
55977 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,55994
55982 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,55994
55987 :: CALL :: call :: V :: v15.clear()::CL,65099
55990 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,55994
55994 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 33::CD,55982:CD,55987:CD,55990:JM,55994
56010 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.CoreSuperimposer.superimpose(org.biojava.nbio.structure.align.multiple.MultipleAlignment)::CD,56020:CD,56026:CD,56031:CD,56037:CD,56042:CD,56048:CD,56060:CD,56085:CD,56095:CD,56098:CD,56102:CD,56185:CD,56211:CD,56371:CD,56375
56020 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v165 = new java.lang.NullPointerException::
56026 :: CALL :: call :: I :: v8 = p1 $alignment .size()::CL,38720
56031 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v162 = new java.lang.IndexOutOfBoundsException::
56037 :: CALL :: call :: I :: v11 = p1 $alignment .getCoreLength()::CL,46957
56042 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v159 = new java.lang.IndexOutOfBoundsException::
56048 :: CALL :: call :: Ljava/util/List :: v13 = p1 $alignment .getAtomArrays()::JM,56147:JM,56153:JM,56366:CL,47040
56060 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v146 = new java.lang.IndexOutOfBoundsException::
56085 :: CALL :: call :: Ljava/lang/String :: v157 = format(#(Invalid reference str...), v148)::
56095 :: CALL :: call :: V :: p1 $alignment .clear()::CL,55957
56098 :: CALL :: call :: Ljava/util/List :: v19 = p1 $alignment .getBlockSets()::JM,56375:CL,38841
56102 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,56375
56107 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,56375
56112 :: NORM :: declaration :: Ljava/util/ArrayList :: v28 = new java.util.ArrayList::JM,56147:JM,56153:JM,56366
56113 :: CALL :: call :: I :: v30 = v13.size()::JM,56147:JM,56153:JM,56366
56122 :: EXPR :: reference :: I :: v34 = p0 $this .reference::DD,56125
56125 :: PRED :: IF :: Z :: if (v126 != v34) goto 210::CF,56126:CD,56133:CD,56142:CD,56147:CD,56148:CD,56153:CD,56154:CD,56158:CD,56162:CD,56166:CD,56307:CD,56311:CD,56312:CD,56316:CD,56317:CD,56323:CD,56327:CD,56328:CD,56334:JM,65442:JM,65447:JM,65448:JM,65485:JM,76716:JM,65486:JM,65456:JM,65522:JM,65494:JM,65527:JM,65464:JM,65564:JM,65438:JM,65502:CD,56348:CD,56352:CD,56356:CD,56379:CD,56380
56126 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v35 = new javax.vecmath.Matrix4d::
56133 :: CALL :: call :: Z :: v39 = v28.add(v35)::
56139 :: EXPR :: reference :: I :: v40 = p0 $this .reference::JM,56147:JM,56153:JM,56366
56142 :: CALL :: call :: Ljava/lang/Object :: v42 = v13.get(v40)::JM,56147:JM,56153:JM,56366
56147 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::JM,56147:JM,56153:JM,56366
56148 :: CALL :: call :: Ljava/lang/Object :: v45 = v13.get(v126)::JM,56147:JM,56153:JM,56366
56153 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::CF,56154
56154 :: NORM :: declaration :: Ljava/util/ArrayList :: v47 = new java.util.ArrayList::JM,56316
56158 :: NORM :: declaration :: Ljava/util/ArrayList :: v49 = new java.util.ArrayList::JM,56327
56162 :: CALL :: call :: Ljava/util/List :: v52 = v27.getBlocks()::JM,56311:CL,47053
56166 :: CALL :: call :: Ljava/util/Iterator :: v54 = v52.iterator()::JM,56311
56171 :: CALL :: call :: Ljava/lang/Object :: v58 = v54.next()::JM,56311
56185 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v131 = new java.lang.IllegalStateException::
56211 :: CALL :: call :: Ljava/lang/String :: v144 = format(#(Mismatched block leng...), v134)::
56221 :: CALL :: call :: Ljava/util/List :: v65 = getCorePositions(v59)::JM,56235:CL,65170
56226 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v100)::JM,56235
56230 :: CALL :: call :: Z :: v71 = v65.contains(v69)::JM,56235
56235 :: PRED :: IF :: Z :: if (v71 != #(0)) goto 373::CD,56237:CD,56244:CD,56249:CD,56250:CD,56255:CD,56256:CD,56260:CD,56265:CD,56266:CD,56271:CD,56272
56237 :: CALL :: call :: Ljava/util/List :: v73 = v59.getAlignRes()::JM,56249:CL,47077
56241 :: EXPR :: reference :: I :: v74 = p0 $this .reference::JM,56249
56244 :: CALL :: call :: Ljava/lang/Object :: v76 = v73.get(v74)::JM,56249
56249 :: EXPR :: assign :: Ljava/lang/Object :: v77 = CHECKCAST v76::JM,56255
56250 :: CALL :: call :: Ljava/lang/Object :: v79 = v77.get(v100)::JM,56255
56255 :: EXPR :: assign :: Ljava/lang/Object :: v80 = CHECKCAST v79::DD,56272
56256 :: CALL :: call :: Ljava/util/List :: v82 = v59.getAlignRes()::JM,56265:CL,47077
56260 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(v128)::JM,56265
56265 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::JM,56271
56266 :: CALL :: call :: Ljava/lang/Object :: v87 = v85.get(v100)::JM,56271
56271 :: EXPR :: assign :: Ljava/lang/Object :: v88 = CHECKCAST v87::DD,56273:CF,56272
56272 :: PRED :: IF :: Z :: if (v80 == #(null)) goto 476::CD,56273:CF,56301
56273 :: PRED :: IF :: Z :: if (v88 != #(null)) goto 450::CD,56275:CD,56283:CD,56288:CD,56296
56275 :: CALL :: call :: I :: v90 = v80.intValue()::
56279 :: EXPR :: reference :: Ljava/lang/Object :: v91 = v43[v90]::
56283 :: CALL :: call :: Z :: v93 = v47.add(v91)::
56288 :: CALL :: call :: I :: v95 = v88.intValue()::
56292 :: EXPR :: reference :: Ljava/lang/Object :: v96 = v46[v95]::
56296 :: CALL :: call :: Z :: v98 = v49.add(v96)::
56301 :: EXPR :: assign :: Ljava/lang/Object :: v99 = v100 + #(1)::DD,56378:CF,56377
56302 :: CALL :: call :: I :: v67 = v59.length()::JM,56306:CL,47111
56306 :: PRED :: IF :: Z :: if (v100 < v67) goto 357::CF,56379:CD,56226:CD,56230:CD,56235:CD,56301:CD,56302:CD,56377:CD,56378
56307 :: CALL :: call :: Z :: v56 = v54.hasNext()::JM,56311
56311 :: PRED :: IF :: Z :: if (v56 != #(0)) goto 272::CD,56171:CD,56221:CD,56302:CD,56306:CD,56307:CD,56377:CD,56378:CD,56379:JM,56311:JM,56316
56312 :: CALL :: call :: I :: v102 = v47.size()::JM,56316
56316 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v103 = new org.biojava.nbio.structure.Atom[]::
56317 :: CALL :: call :: [Ljava/lang/Object :: v105 = v47.toArray(v103)::
56323 :: CALL :: call :: I :: v108 = v49.size()::JM,56327
56327 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v109 = new org.biojava.nbio.structure.Atom[]::
56328 :: CALL :: call :: [Ljava/lang/Object :: v111 = v49.toArray(v109)::
56334 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v114 = cloneAtomArray(v112)::CL,65251
56348 :: CALL :: call :: V :: transform(v114, v118)::CL,65659
56352 :: CALL :: call :: Ljavax/vecmath/Matrix4d :: v121 = v115.getTransformation()::CL,65641
56356 :: CALL :: call :: Z :: v123 = v28.add(v121)::
56361 :: EXPR :: assign :: Ljava/lang/Object :: v125 = v129 + #(1)::DD,56381
56362 :: CALL :: call :: I :: v33 = v13.size()::JM,56147:JM,56153:JM,56366
56366 :: PRED :: IF :: Z :: if (v126 < v33) goto 175::CD,56125:CD,56361:CD,56362:CD,56380:CD,56381
56367 :: CALL :: call :: V :: v27.setTransformations(v28)::CL,65693
56371 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,56375
56375 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 142::CD,56107:CD,56112:CD,56113:CD,56362:CD,56366:CD,56367:CD,56371:CD,56381:JM,56375
56377 :: EXPR :: assign :: null :: PHI v128 = v127, v128::CF,56378:JM,56265:DD,56377:DD,56379
56378 :: EXPR :: assign :: null :: PHI v100 = #(0), v99::JM,56235:JM,56255:JM,56271:DD,56301:DD,56306
56379 :: EXPR :: assign :: null :: PHI v127 = v126, v128::JM,56311:DD,56377:DD,56380
56380 :: EXPR :: assign :: null :: PHI v129 = v126, v127::DD,56361
56381 :: EXPR :: assign :: null :: PHI v126 = #(0), v125::DD,56125:JM,56147:JM,56153:DD,56366:DD,56379:DD,56380
56482 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentScorer.getMCScore(org.biojava.nbio.structure.align.multiple.MultipleAlignment,double,double,double)::CE,56483:CD,56489:CD,56493:CD,56497:CD,56510:CD,56514:CD,56528:CD,56536
56483 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentScorer.getMCScore(org.biojava.nbio.structure.align.multiple.MultipleAlignment,double,double,double)::JM,46511:JM,53097
56489 :: CALL :: call :: Ljava/util/List :: v7 = transformAtoms(p1 $alignment )::CL,65721
56493 :: CALL :: call :: Ljava/util/List :: v10 = p1 $alignment .getAtomArrays()::JM,56514:CL,47040
56497 :: CALL :: call :: Ljava/util/Iterator :: v12 = v10.iterator()::JM,56514
56502 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.next()::JM,56514
56510 :: CALL :: call :: Z :: v14 = v12.hasNext()::JM,56514
56514 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 28::CD,56502:CD,56510:JM,56514
56528 :: CALL :: call :: D :: v39 = getMCScore(v7, v30, p2 $gapOpen , p3 $null , v37)::JM,56536:CL,66062
56536 :: NORM :: compound :: D :: return v39::DD,56483
56568 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.probabilityFunction(double,int,int)::CE,56569:CD,56578:CD,56579:CD,56583:CD,56584:CD,56585:CD,56586:CD,56587:CD,56588:CD,56589:CD,56590:CD,56591:CD,56596:CD,56601
56569 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.probabilityFunction(double,int,int)::JM,46534:JM,46649
56575 :: EXPR :: reference :: D :: v6 = p0 $this .C::DD,56578
56578 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v6 + p1 $AS ::DD,56584:CF,56579
56579 :: EXPR :: assign :: D :: v8 = CONVERT I to D p2 $null ::DD,56583
56580 :: EXPR :: reference :: D :: v9 = p0 $this .C::DD,56583
56583 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 * v9::CF,56584
56584 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v7 / v10::DD,56590:CF,56585
56585 :: EXPR :: assign :: D :: v13 = CONVERT I to D p2 $null ::DD,56586
56586 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v13 * #(1.0 d)::DD,56588:CF,56587
56587 :: EXPR :: assign :: D :: v15 = CONVERT I to D p3 $m ::CF,56588
56588 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v14 / v15::CF,56589
56589 :: EXPR :: assign :: Ljava/lang/Object :: v17 = #(1.0 d) - v16::DD,56590
56590 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v11 * v17::JM,56596:JM,56601:JM,56591
56591 :: CALL :: call :: D :: v21 = max(v18, #(0.0 d))::JM,56596:JM,56601:JM,56591
56596 :: CALL :: call :: D :: v23 = min(v21, #(1.0 d))::JM,56596:JM,56601
56601 :: NORM :: compound :: D :: return v23::CF,56569
56616 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentScorer.calculateScores(org.biojava.nbio.structure.align.multiple.MultipleAlignment)::CD,56620:CD,56624:CD,56628:CD,56632:CD,56637:CD,56638:CD,56646:CD,56650:CD,56670:CD,56674:CD,56675:CD,56684
56620 :: CALL :: call :: Ljava/util/List :: v4 = transformAtoms(p1 $alignment )::CL,65721
56624 :: CALL :: call :: D :: v7 = getRMSD(v4)::JM,56628:CL,66474
56628 :: CALL :: call :: Ljava/lang/Double :: v9 = valueOf(v7)::JM,56628
56632 :: CALL :: call :: V :: p1 $alignment .putScore(#(RMSD), v9)::CL,56711
56637 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::
56638 :: CALL :: call :: I :: v13 = p1 $alignment .size()::CL,38720
56646 :: CALL :: call :: Ljava/util/List :: v16 = p1 $alignment .getAtomArrays()::JM,56674:JM,56659:CL,47040
56650 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,56674:JM,56659
56655 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.next()::JM,56674:JM,56659
56659 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,56660
56660 :: EXPR :: assign :: I :: v25 = v24.length::
56661 :: CALL :: call :: Ljava/lang/Integer :: v27 = valueOf(v25)::
56665 :: CALL :: call :: Z :: v29 = v11.add(v27)::
56670 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,56674:JM,56659
56674 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 52::CD,56655:CD,56659:CD,56660:CD,56661:CD,56665:CD,56670:JM,56674
56675 :: CALL :: call :: D :: v32 = getAvgTMScore(v4, v11)::CL,66621
56684 :: CALL :: call :: V :: p1 $alignment .putScore(#(AvgTM-score), v34)::CL,56711
56711 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.AbstractScoresCache.putScore(java.lang.String,java.lang.Double)::CD,56720:CD,56731
56717 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .scores::DD,56720
56720 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 19::CD,56721
56721 :: NORM :: declaration :: Ljava/util/TreeMap :: v7 = new java.util.TreeMap::DD,56725
56725 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .scores = v7::
56731 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.put(p1 $property , p2 $score )::
56746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::CE,56747:CD,56753
56747 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::JM,46840:JM,60322:JM,81523:JM,81519:JM,81518
56750 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainId::DD,56753
56753 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,56747
56755 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::CE,56756:CD,56762
56756 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::JM,46850:JM,71207
56759 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .scopId::DD,56762
56762 :: NORM :: compound :: Ljava/lang/String :: return v3::DD,56756
56764 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getCATH()::CE,56765:CD,56768:CD,56769:CD,56773:CD,56777:CD,56781:CD,56789:CD,56794:CD,56798:CD,56802:CD,56806:CD,56811:CD,56816:CD,56820:CD,56824:CD,56828:CD,56833:CD,56838:CD,56842:CD,56846:CD,56850:CD,56855:CD,56859
56765 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getCATH()::JM,46869
56768 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,56859
56769 :: CALL :: call :: Ljava/lang/Integer :: v5 = p0 $this .getClassId()::CL,66854
56773 :: CALL :: call :: I :: v7 = v5.intValue()::
56777 :: CALL :: call :: Ljava/lang/String :: v9 = toString(v7)::
56781 :: CALL :: call :: Ljava/lang/String :: v11 = valueOf(v9)::
56789 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v3.append(#(.))::JM,56859
56794 :: CALL :: call :: Ljava/lang/Integer :: v17 = p0 $this .getArchitectureId()::JM,56859:CL,66863
56798 :: CALL :: call :: I :: v19 = v17.intValue()::JM,56859
56802 :: CALL :: call :: Ljava/lang/String :: v21 = toString(v19)::JM,56859
56806 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v15.append(v21)::JM,56859
56811 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v23.append(#(.))::JM,56859
56816 :: CALL :: call :: Ljava/lang/Integer :: v27 = p0 $this .getTopologyId()::JM,56859:CL,66872
56820 :: CALL :: call :: I :: v29 = v27.intValue()::JM,56859
56824 :: CALL :: call :: Ljava/lang/String :: v31 = toString(v29)::JM,56859
56828 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v25.append(v31)::JM,56859
56833 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v33.append(#(.))::JM,56859
56838 :: CALL :: call :: Ljava/lang/Integer :: v37 = p0 $this .getHomologyId()::JM,56859:CL,66881
56842 :: CALL :: call :: I :: v39 = v37.intValue()::JM,56859
56846 :: CALL :: call :: Ljava/lang/String :: v41 = toString(v39)::JM,56859
56850 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v35.append(v41)::JM,56859
56855 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::JM,56859
56859 :: NORM :: compound :: Ljava/lang/String :: return v45::DD,56765
56868 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.updateLength()::CD,56872:CD,56881:CD,56893:CD,56914:CD,56918
56872 :: CALL :: call :: Ljava/util/List :: v4 = p0 $this .getBlockSets()::CL,38841
56881 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v20 = new java.lang.IndexOutOfBoundsException::
56887 :: EXPR :: modify :: I :: p0 $this .length = #(0)::
56890 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .blockSets::JM,56918
56893 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,56918
56898 :: CALL :: call :: Ljava/lang/Object :: v14 = v10.next()::JM,56918
56903 :: EXPR :: reference :: I :: v16 = p0 $this .length::DD,56910
56906 :: CALL :: call :: I :: v18 = v15.length()::JM,56910:CL,66890
56910 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v16 + v18::DD,56911
56911 :: EXPR :: modify :: I :: p0 $this .length = v19::
56914 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,56918
56918 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 41::CD,56898:CD,56906:CD,56910:CD,56914:JM,56918
56933 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.updateCoreLength()::CD,56937:CD,56946:CD,56958:CD,56979:CD,56983
56937 :: CALL :: call :: Ljava/util/List :: v4 = p0 $this .getBlockSets()::CL,38841
56946 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v20 = new java.lang.IndexOutOfBoundsException::
56952 :: EXPR :: modify :: I :: p0 $this .coreLength = #(0)::
56955 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .blockSets::JM,56983
56958 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,56983
56963 :: CALL :: call :: Ljava/lang/Object :: v14 = v10.next()::JM,56983
56968 :: EXPR :: reference :: I :: v16 = p0 $this .coreLength::DD,56975
56971 :: CALL :: call :: I :: v18 = v15.getCoreLength()::JM,56975:CL,66909
56975 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v16 + v18::DD,56976
56976 :: EXPR :: modify :: I :: p0 $this .coreLength = v19::
56979 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,56983
56983 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 41::CD,56963:CD,56971:CD,56975:CD,56979:JM,56983
57040 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getAtomArrays()::CE,57041:CD,57047:CD,57052:CD,57053:CD,57062:CD,57063:CD,57075:CD,57077
57041 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.getAtomArrays()::JM,47051
57044 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atomArrays::DD,57047
57047 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 41::CD,57048
57048 :: CALL :: call :: V :: p0 $this .updateAtomArrays()::CL,66978
57052 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v12 = new java.lang.NullPointerException::
57053 :: CALL :: call :: Ljava/lang/String :: v14 = v11.getMessage()::
57062 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v7 = new java.lang.NullPointerException::
57063 :: CALL :: call :: Ljava/lang/String :: v9 = v6.getMessage()::
57072 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .atomArrays::DD,57075
57075 :: NORM :: compound :: Ljava/util/List :: return v16::DD,57041
57077 :: EXPR :: assign :: Ljava/lang/Exception :: v6 = catch <exc>::
57228 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::CE,57229:CD,57234:CD,57239:CD,57240
57229 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::JM,47216:JM,47177:JM,97654:JM,100094
57234 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $groupCode3 )::JM,57239
57239 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,57240
57240 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,57229
57243 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::CE,57244:CD,57247:CD,57253:CD,57258
57244 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::JM,47186:JM,100124:JM,115269:JM,115311:JM,129967
57247 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $groupCode3 .trim()::
57253 :: CALL :: call :: Z :: v7 = v5.containsKey(v4)::JM,57258
57258 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 32::CD,57261:CD,57266:CD,57268
57261 :: CALL :: call :: Z :: v11 = v9.containsKey(v4)::JM,57266
57266 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 32::CD,57267:CD,57268
57267 :: NORM :: compound :: Z :: return #(0)::DD,57244
57268 :: NORM :: compound :: Z :: return #(1)::DD,57244
58979 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getServerName()::CD,58982:CD,58986
58982 :: CALL :: call :: Ljava/lang/String :: v4 = getProperty(#(PDB.FILE.SERVER))::JM,59009:JM,58995:JM,58982:JM,59015:JM,58986:JM,58991
58986 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 23::CD,58987:CD,58991:CD,58995:JM,59009:JM,59015
58987 :: CALL :: call :: Ljava/lang/String :: v7 = v4.trim()::JM,59009:JM,58995:JM,59015:JM,58991
58991 :: CALL :: call :: Z :: v9 = v7.isEmpty()::JM,59009:JM,58995:JM,59015:JM,58991
58995 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 42::CD,59004:CD,59009:JM,58995:JM,59015:JM,58991
59004 :: CALL :: call :: Z :: v13 = v4.startsWith(#(http://))::JM,59009:JM,58995:JM,59015:JM,58991
59009 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 90::CD,59010:CD,59015:JM,59009:JM,58995:JM,58991
59010 :: CALL :: call :: Z :: v16 = v4.startsWith(#(ftp://))::JM,59009:JM,58995:JM,59015:JM,58991
59015 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 90::CD,59024:CD,59029:CD,59034
59024 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
59029 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(v4)::JM,59009:JM,58995:JM,59015:JM,58991
59034 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::JM,58995:JM,58991
59076 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.initPaths()::CD,59080:CD,59084:CD,59088:CD,59109:CD,59110:CD,59111:CD,59132:CD,59133:CD,59134:CD,59141:CD,59172:CD,59173:CD,59198:CD,59199:CD,59201:CD,59202:CD,59203:CD,59204
59080 :: CALL :: call :: [Ljava/lang/String :: v4 = p0 $this .getSplitDirPath()::JM,59172:JM,59109:CL,69275:CL,69283
59084 :: CALL :: call :: [Ljava/lang/String :: v6 = p0 $this .getObsoleteDirPath()::JM,59132:JM,59198:CL,69291:CL,69299
59088 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
59094 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(/))::
59099 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v4[v20]::
59103 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v7.append(v15)::
59108 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,59201
59109 :: EXPR :: assign :: I :: v11 = v4.length::CF,59110
59110 :: PRED :: IF :: Z :: if (v20 < v11) goto 31::CF,59111:CD,59094:CD,59103:CD,59108:CD,59109:CD,59201
59111 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
59117 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(#(/))::
59122 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v6[v30]::
59126 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v21.append(v26)::
59131 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,59202
59132 :: EXPR :: assign :: I :: v23 = v6.length::CF,59133
59133 :: PRED :: IF :: Z :: if (v30 < v23) goto 77::CD,59117:CD,59126:CD,59131:CD,59132:CD,59202
59134 :: CALL :: call :: Ljava/lang/String :: v32 = v7.toString()::
59141 :: CALL :: call :: Ljava/lang/String :: v34 = v21.toString()::
59148 :: EXPR :: reference :: Ljava/io/File :: v35 = p0 $this .path::DD,59151
59151 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v35::
59155 :: NORM :: declaration :: Ljava/io/File :: v37 = new java.io.File::DD,59168
59156 :: EXPR :: reference :: Ljava/io/File :: v38 = p0 $this .splitDirPath::
59159 :: EXPR :: reference :: Ljava/lang/Object :: v39 = v4[v42]::
59168 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v37::
59171 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,59203
59172 :: EXPR :: assign :: I :: v36 = v4.length::CF,59173
59173 :: PRED :: IF :: Z :: if (v42 < v36) goto 133::CD,59155:CD,59171:CD,59172:CD,59203
59174 :: EXPR :: reference :: Ljava/io/File :: v43 = p0 $this .path::DD,59177
59177 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v43::
59181 :: NORM :: declaration :: Ljava/io/File :: v45 = new java.io.File::DD,59194
59182 :: EXPR :: reference :: Ljava/io/File :: v46 = p0 $this .obsoleteDirPath::
59185 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v6[v50]::
59194 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v45::
59197 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,59204
59198 :: EXPR :: assign :: I :: v44 = v6.length::CF,59199
59199 :: PRED :: IF :: Z :: if (v50 < v44) goto 176::CD,59181:CD,59197:CD,59198:CD,59204
59201 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,59108:DD,59110:CF,59109
59202 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,59131:DD,59133:CF,59132
59203 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,59171:DD,59173:CF,59172
59204 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::DD,59197:DD,59199:CF,59198
59527 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.setDefault()::
59531 :: EXPR :: modify :: Z :: p0 $this .parseSecStruc = #(0)::
59534 :: EXPR :: modify :: Z :: p0 $this .alignSeqRes = #(1)::
59537 :: EXPR :: modify :: Z :: p0 $this .parseCAOnly = #(0)::
59540 :: EXPR :: modify :: Z :: p0 $this .headerOnly = #(0)::
59543 :: EXPR :: modify :: Z :: p0 $this .updateRemediatedFiles = #(0)::
59546 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .fullAtomNames = #(null)::
59549 :: EXPR :: modify :: I :: p0 $this .maxAtoms = #(2147483647)::
59552 :: EXPR :: modify :: I :: p0 $this .atomCaThreshold = #(500000)::
59555 :: EXPR :: modify :: Z :: p0 $this .parseBioAssembly = #(0)::
59558 :: EXPR :: modify :: Z :: p0 $this .createAtomBonds = #(0)::
59561 :: EXPR :: modify :: Z :: p0 $this .createAtomCharges = #(1)::
59564 :: EXPR :: modify :: Z :: p0 $this .useInternalChainId = #(0)::
59838 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::CE,59839:CD,59842:CD,59846:CD,59851:CD,59857:CD,59862:CD,59874:CD,59879:CD,59880:CD,59885:CD,59901:CD,59902:CD,59903:CD,59905
59839 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::JM,49960
59842 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $s .trim()::JM,59851:JM,59903
59846 :: CALL :: call :: Z :: v7 = v4.startsWith(#(())::JM,59851:JM,59903
59851 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 23::CF,59903:CD,59852:JM,59851
59852 :: CALL :: call :: Ljava/lang/String :: v11 = v4.substring(#(1))::JM,59851:JM,59903
59857 :: CALL :: call :: Z :: v15 = v12.endsWith(#()))::JM,59862
59862 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 44::CD,59863:CD,59867:CD,59868
59863 :: CALL :: call :: I :: v17 = v12.length()::JM,59867
59867 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v17 - #(1)::
59868 :: CALL :: call :: Ljava/lang/String :: v20 = v12.substring(#(0), v18)::
59874 :: CALL :: call :: [Ljava/lang/String :: v24 = v21.split(#(,))::JM,59880:JM,59885
59879 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,59902:CF,59880
59880 :: EXPR :: assign :: I :: v26 = v24.length::
59885 :: EXPR :: assign :: I :: v28 = v24.length::DD,59901
59891 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v31 = parse(v29)::CL,69480
59895 :: CALL :: call :: Z :: v33 = v25.add(v31)::
59900 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v35 + #(1)::DD,59905
59901 :: PRED :: IF :: Z :: if (v35 < v28) goto 75::CD,59891:CD,59895:CD,59900:CD,59905:CF,59902
59902 :: NORM :: compound :: Ljava/util/List :: return v25::DD,59839
59903 :: EXPR :: assign :: null :: PHI v12 = v4, v11::JM,59862:JM,59867
59905 :: EXPR :: assign :: null :: PHI v35 = #(0), v34::DD,59900:DD,59901
59943 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::CE,59944:CD,59950
59944 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::JM,50049:JM,51157:JM,51405
59947 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .ranges::DD,59950
59950 :: NORM :: compound :: Ljava/util/List :: return v3::CF,59944
59952 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getChainId()::CE,59953:CD,59959
59953 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueRange.getChainId()::JM,50039:JM,51224
59956 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chain::DD,59959
59959 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,59953
60013 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.checkLoading(java.lang.String)::CE,60014:CD,60021:CD,60026
60014 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.util.AtomCache.checkLoading(java.lang.String)::JM,50227
60021 :: CALL :: call :: Z :: v6 = v4.contains(p1 $name )::JM,60026
60026 :: NORM :: compound :: Z :: return v6::DD,60014
60029 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.loadStructureFromCifByPdbId(java.lang.String)::CD,60034:JM,49312:JM,42995:JM,49268:JM,49332:JM,49701:JM,49254:JM,49318:JM,42999:JM,49304:JM,43003:JM,42991:CD,60067:CD,60071:CD,60077:CD,60082
60034 :: CALL :: call :: V :: p0 $this .flagLoading(p1 $pdbId )::CL,70351
60067 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $pdbId .toLowerCase()::
60071 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v17 = v5.getStructureById(v15)::CL,70384
60077 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,70405
60082 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,70405
60105 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.loadStructureFromPdbByPdbId(java.lang.String)::CD,60110:JM,49312:JM,42947:JM,49701:JM,49254:JM,49318:JM,42951:JM,42955:JM,42959:JM,42963:JM,49268:JM,49332:JM,49304:JM,42943:CD,60143:CD,60147:CD,60153:CD,60158
60110 :: CALL :: call :: V :: p0 $this .flagLoading(p1 $pdbId )::CL,70351
60143 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $pdbId .toLowerCase()::
60147 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v17 = v5.getStructureById(v15)::CL,70384
60153 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,70405
60158 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,70405
60181 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.getCathDatabase()::CD,60184:CD,60186
60184 :: EXPR :: reference :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v2 = org.biojava.nbio.structure.cath.CathFactory.cath::DD,60186
60186 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 16::JM,90882:JM,90852:JM,35975:JM,90889:JM,90860:JM,35982:JM,90896:JM,90834:JM,90868:JM,90838:JM,90841:JM,90906:JM,90844
60200 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDescriptionByCathId(java.lang.String)::CE,60201:CD,60208:CD,60219:CD,60224:CD,60225
60201 :: EXIT :: exit :: Lorg/biojava/nbio/structure/cath/CathDomain :: org.biojava.nbio.structure.cath.CathInstallation.getDescriptionByCathId(java.lang.String)::JM,50299
60205 :: EXPR :: reference :: Z :: v4 = p0 $this .useCathDomainDescriptionFile::DD,60208
60208 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 15::CD,60209:CD,60213
60209 :: CALL :: call :: V :: p0 $this .ensureDomainDescriptionInstalled()::CL,70441
60213 :: CALL :: call :: V :: p0 $this .ensureDomallInstalled()::CL,70524
60219 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $cathId )::JM,60224
60224 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,60225
60225 :: NORM :: compound :: Lorg/biojava/nbio/structure/cath/CathDomain :: return v11::DD,60201
60232 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase()::CD,60237
60237 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v4 = getEcodDatabase(v2)::CL,70631
60243 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsById(java.lang.String)::CE,60244:CD,60248:JM,60322:JM,60249:JM,60253
60244 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsById(java.lang.String)::JM,50314
60248 :: PRED :: IF :: Z :: if (p1 $ecodId  == #(null)) goto 12::CD,60249:CD,60253:CD,60254:JM,60322
60249 :: CALL :: call :: Z :: v6 = p1 $ecodId .isEmpty()::JM,60322:JM,60249:JM,60253
60253 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 13::CD,60254:CD,60257:CD,60262:CD,60266:CD,60272:CD,60277
60254 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return #(null)::DD,60244
60257 :: CALL :: call :: Ljava/util/regex/Matcher :: v10 = v8.matcher(p1 $ecodId )::JM,60266
60262 :: CALL :: call :: Z :: v12 = v10.matches()::JM,60266
60266 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 38::CD,60267:JM,60266
60267 :: CALL :: call :: Ljava/lang/String :: v15 = v10.group(#(1))::JM,60266
60272 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getDomainsForPdb(v16)::JM,60277:JM,60312:JM,60328:CL,70859
60277 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 62::CD,60286:CD,60289:CD,60293:CD,60303:CD,60324:CD,60328
60286 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return #(null)::DD,60244
60289 :: CALL :: call :: I :: v22 = v18.size()::JM,60312:JM,60328
60293 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,60312:JM,60328
60303 :: CALL :: call :: Ljava/util/Iterator :: v27 = v18.iterator()::JM,60312:JM,60328
60308 :: CALL :: call :: Ljava/lang/Object :: v31 = v27.next()::JM,60312:JM,60328
60312 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::DD,60323
60313 :: CALL :: call :: Ljava/lang/String :: v34 = v32.getDomainId()::JM,60322:CL,56746
60317 :: CALL :: call :: Z :: v36 = p1 $ecodId .equals(v34)::JM,60322:JM,60249:JM,60253
60322 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 125::CD,60323:CD,60324:CD,60328:JM,60312
60323 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return v32::DD,60244
60324 :: CALL :: call :: Z :: v29 = v27.hasNext()::JM,60312:JM,60328
60328 :: PRED :: IF :: Z :: if (v29 != #(0)) goto 98::CD,60308:CD,60312:CD,60313:CD,60317:CD,60322:CD,60329:JM,60328
60329 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return #(null)::DD,60244
60384 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP()::CD,60389
60389 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v4 = getSCOP(v2)::CL,71061
60395 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::CE,60396:CD,60400:CD,60404:CD,60409
60396 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::JM,50354
60400 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,60672:JM,60580:JM,60629:JM,60585
60404 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v7 = p2 $scopDB .getDomainByScopID(p1 $name )::JM,60409:JM,60410:CL,71135:CL,71073
60409 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 22::CD,60410:CD,60413:CD,60418:CD,60423:CD,60433:CD,60438:CD,60442:CD,60572:CD,60576:CD,60580
60410 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v7::DD,60396
60413 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
60418 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v10.append(p1 $name )::
60423 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
60433 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v18.matcher(p1 $name )::JM,60544:JM,60499:JM,60550:JM,60505:JM,60442:JM,60511
60438 :: CALL :: call :: Z :: v22 = v20.matches()::JM,60544:JM,60499:JM,60550:JM,60505:JM,60442:JM,60511
60442 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 265::CD,60443:CD,60448:CD,60453:CD,60458:CD,60463:CD,60567:CD,60571:JM,60544:JM,60499:JM,60550:JM,60505:JM,60442:JM,60511:JM,60672:JM,60580:JM,60629:JM,60585
60443 :: CALL :: call :: Ljava/lang/String :: v26 = v20.group(#(1))::JM,60544:JM,60499:JM,60550:JM,60505:JM,60442:JM,60511
60448 :: CALL :: call :: Ljava/lang/String :: v29 = v20.group(#(2))::JM,60544:JM,60499:JM,60550:JM,60505:JM,60442:JM,60511
60453 :: CALL :: call :: Ljava/lang/String :: v32 = v20.group(#(3))::JM,60544:JM,60499:JM,60550:JM,60505:JM,60442:JM,60511
60458 :: CALL :: call :: Ljava/util/List :: v34 = p2 $scopDB .getDomainsForPDB(v26)::JM,60472:JM,60571:CL,71240:CL,71350
60463 :: CALL :: call :: Ljava/util/Iterator :: v36 = v34.iterator()::JM,60472:JM,60571
60468 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,60472:JM,60571
60472 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
60475 :: CALL :: call :: Ljava/lang/String :: v44 = v41.getScopId()::CL,56755
60479 :: CALL :: call :: Ljava/util/regex/Matcher :: v46 = v42.matcher(v44)::JM,60544:JM,60561:JM,60499:JM,60533:JM,60488:JM,60522
60484 :: CALL :: call :: Z :: v48 = v46.matches()::JM,60544:JM,60561:JM,60499:JM,60533:JM,60488:JM,60522
60488 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 256::CD,60489:CD,60494:CD,60499:JM,60544:JM,60561:JM,60533:JM,60488:JM,60522:JM,60472:JM,60571
60489 :: CALL :: call :: Ljava/lang/String :: v50 = v46.group(#(2))::JM,60544:JM,60561:JM,60499:JM,60533:JM,60488:JM,60522
60494 :: CALL :: call :: Z :: v52 = v29.equals(v50)::JM,60544:JM,60499:JM,60550:JM,60505:JM,60511:JM,60561:JM,60533:JM,60522
60499 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 210::CD,60500:CD,60505:CD,60534:CD,60539:CD,60544:JM,60499:JM,60550:JM,60511:JM,60561:JM,60533:JM,60488:JM,60522
60500 :: CALL :: call :: Z :: v55 = v29.equals(#(_))::JM,60544:JM,60499:JM,60550:JM,60505:JM,60511
60505 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 210::CD,60506:CD,60511:CD,60534:CD,60539:CD,60544:JM,60499:JM,60550:JM,60505:JM,60561:JM,60533:JM,60488:JM,60522
60506 :: CALL :: call :: Z :: v58 = v29.equals(#(.))::JM,60544:JM,60499:JM,60550:JM,60505:JM,60511
60511 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 210::CD,60512:CD,60517:CD,60522:CD,60534:CD,60539:CD,60544:JM,60561:JM,60499:JM,60533:JM,60488
60512 :: CALL :: call :: Ljava/lang/String :: v60 = v46.group(#(2))::JM,60544:JM,60561:JM,60499:JM,60533:JM,60488:JM,60522
60517 :: CALL :: call :: Z :: v62 = v60.equals(#(_))::JM,60544:JM,60561:JM,60499:JM,60533:JM,60522
60522 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 210::CD,60523:CD,60528:CD,60533:CD,60534:CD,60539:CD,60544:JM,60561:JM,60499:JM,60488:JM,60522
60523 :: CALL :: call :: Ljava/lang/String :: v64 = v46.group(#(2))::JM,60544:JM,60561:JM,60499:JM,60533:JM,60488:JM,60522
60528 :: CALL :: call :: Z :: v66 = v64.equals(#(.))::JM,60544:JM,60561:JM,60499:JM,60533:JM,60522
60533 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 256::CD,60534:CD,60539:CD,60544:JM,60561:JM,60499:JM,60533:JM,60488:JM,60522:JM,60472:JM,60571
60534 :: CALL :: call :: Ljava/lang/String :: v68 = v46.group(#(3))::JM,60544:JM,60561:JM,60499:JM,60533:JM,60488:JM,60522
60539 :: CALL :: call :: Z :: v70 = v32.equals(v68)::JM,60544:JM,60499:JM,60550:JM,60505:JM,60511:JM,60561:JM,60533:JM,60522
60544 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 248::CD,60545:CD,60550:CD,60562:JM,60544:JM,60499:JM,60505:JM,60511
60545 :: CALL :: call :: Z :: v72 = v32.equals(#(_))::JM,60544:JM,60499:JM,60550:JM,60505:JM,60511
60550 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 248::CD,60551:CD,60556:CD,60561:CD,60562:JM,60544:JM,60499:JM,60533:JM,60488:JM,60522
60551 :: CALL :: call :: Ljava/lang/String :: v74 = v46.group(#(3))::JM,60544:JM,60561:JM,60499:JM,60533:JM,60488:JM,60522
60556 :: CALL :: call :: Z :: v76 = v74.equals(#(_))::JM,60544:JM,60561:JM,60499:JM,60533:JM,60522
60561 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 256::CD,60562:JM,60472:JM,60571
60562 :: CALL :: call :: Z :: v78 = v4.add(v41)::
60567 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,60472:JM,60571
60571 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 108::CD,60468:CD,60472:CD,60475:CD,60479:CD,60484:CD,60488:CD,60567:JM,60571:JM,60672:JM,60580:JM,60629:JM,60585
60572 :: CALL :: call :: Ljava/util/Iterator :: v80 = v4.iterator()::JM,60672:JM,60580:JM,60629:JM,60585
60576 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,60672:JM,60580:JM,60629:JM,60585
60580 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 446::CD,60581:CD,60585:CD,60586:CD,60588:CD,60592:CD,60692:CD,60693:JM,60672:JM,60580:JM,60629
60581 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,60672:JM,60580:JM,60629:JM,60585
60585 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,60692
60586 :: EXPR :: reference :: Lorg/slf4j/Logger :: v86 = org.biojava.nbio.structure.align.client.StructureName.logger::JM,60592:JM,60588
60588 :: CALL :: call :: Z :: v88 = v86.isWarnEnabled()::JM,60592:JM,60588
60592 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 444::CF,60593:CD,60597:CD,60602:CD,60606:CD,60611:CD,60616:CD,60620:CD,60625:CD,60629:CD,60673:CD,60677:CD,60684:CF,60692
60593 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v89 = new java.lang.StringBuilder::
60597 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
60602 :: CALL :: call :: Ljava/lang/String :: v95 = v85.getScopId()::CL,56755
60606 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v91.append(v95)::
60611 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v97.append(#(.))::
60616 :: CALL :: call :: Ljava/lang/String :: v101 = v99.toString()::
60620 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v89.append(v101)::
60625 :: CALL :: call :: Z :: v105 = v80.hasNext()::JM,60672:JM,60580:JM,60629:JM,60585
60629 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 422::CD,60630:CD,60668:CD,60672:JM,60673
60630 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v89.append(#( Other possibilities: ))::
60636 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::JM,60672:JM,60580:JM,60629:JM,60585
60637 :: CALL :: call :: Ljava/lang/Object :: v113 = v80.next()::JM,60672:JM,60580:JM,60629:JM,60585
60642 :: CALL :: call :: Ljava/lang/String :: v116 = v114.getScopId()::CL,56755
60646 :: CALL :: call :: Ljava/lang/String :: v118 = valueOf(v116)::
60654 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v111.append(#( ))::
60659 :: CALL :: call :: Ljava/lang/String :: v124 = v122.toString()::
60663 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v89.append(v124)::
60668 :: CALL :: call :: Z :: v110 = v80.hasNext()::JM,60672:JM,60580:JM,60629:JM,60585
60672 :: PRED :: IF :: Z :: if (v110 != #(0)) goto 371::CD,60636:CD,60637:CD,60642:CD,60646:CD,60654:CD,60659:CD,60663:CD,60668:JM,60673
60673 :: CALL :: call :: Ljava/lang/String :: v129 = getProperty(#(line.separator))::JM,60673
60677 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v89.append(v129)::
60684 :: CALL :: call :: Ljava/lang/String :: v134 = v89.toString()::
60692 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v85::DD,60396
60693 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,60396
60806 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v7 = new java.lang.NullPointerException::JM,60806:JM,60812:JM,60815
60812 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
60815 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p2 $ranges ::
60910 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
60917 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .toString()::
60938 :: EXPR :: modify :: Ljava/net/URL :: p0 $this .url = p1 $url ::
60977 :: PRED :: IF :: Z :: if (p1 $useCache  != #(0)) goto 25::CD,60982
60982 :: CALL :: call :: V :: p0 $this .loadRepresentativeDomains()::CL,71617
60994 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.getPDPDomain(java.lang.String)::CE,60995:CD,61002:CD,61021:CD,61026:CD,61086:CD,61091:CD,61096:CD,61105:CD,61106:CD,61111:CD,61116:CD,61126:CD,61130:CD,61161:CD,61176:CD,61180:CD,61181:JM,72144:JM,72162:JM,60806:JM,72152:JM,72168:JM,72157:JM,72173:JM,60812:JM,60815:CD,61187:CD,61188:CD,61189:CD,61190
60995 :: EXIT :: exit :: Lorg/biojava/nbio/structure/domain/PDPDomain :: org.biojava.nbio.structure.domain.RemotePDPProvider.getPDPDomain(java.lang.String)::JM,50534
60999 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .serializedCache::DD,61002
61002 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 38::CF,61189:CD,61006:CD,61011
61006 :: CALL :: call :: Z :: v8 = v6.containsKey(p1 $pdpDomainName )::JM,61011
61011 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 38::CF,61189:CD,61015:CD,61020
61015 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p1 $pdpDomainName )::JM,61020
61020 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,61189
61021 :: CALL :: call :: Z :: v16 = p0 $this .checkDomainRanges(v14)::JM,61026:CL,71847
61026 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 186::CF,61190:CD,61028:CD,61032:CD,61040:CD,61045:CD,61050:CD,61065:CD,61069:CD,61073:CD,61077
61028 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
61032 :: CALL :: call :: Ljava/lang/String :: v21 = valueOf(v19)::
61040 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v18.append(#(getPDPDomain?pdpId=))::
61045 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(p1 $pdpDomainName )::
61050 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
61065 :: CALL :: call :: Ljava/io/InputStream :: v35 = getInputStream(v17)::CL,71899
61069 :: CALL :: call :: Ljava/lang/String :: v56 = convertStreamToString(v35)::CL,71913
61073 :: CALL :: call :: Ljava/util/SortedSet :: v58 = getDomainRangesFromXML(v56)::JM,61077:JM,61190:CL,72021
61077 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 186::CF,61190:CD,61078
61078 :: CALL :: call :: V :: p0 $this .cache(p1 $pdpDomainName , v58)::CL,72073
61086 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
61091 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v38.append(p1 $pdpDomainName )::
61096 :: CALL :: call :: Ljava/lang/String :: v44 = v42.toString()::
61105 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v46 = new java.lang.IllegalArgumentException::
61106 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
61111 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v47.append(p1 $pdpDomainName )::
61116 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::
61126 :: NORM :: declaration :: Ljava/util/ArrayList :: v61 = new java.util.ArrayList::
61130 :: CALL :: call :: Ljava/util/Iterator :: v64 = v60.iterator()::JM,61180
61135 :: CALL :: call :: Ljava/lang/Object :: v68 = v64.next()::JM,61180
61161 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v86 = new java.lang.RuntimeException::
61167 :: CALL :: call :: Ljava/util/List :: v80 = v70.getResidueRanges()::CL,59943
61171 :: CALL :: call :: Z :: v82 = v61.addAll(v80)::
61176 :: CALL :: call :: Z :: v66 = v64.hasNext()::JM,61180
61180 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 208::CF,61181:CD,61135:JM,49889:JM,49907:JM,49877:JM,49862:JM,49946:JM,49947:JM,49871:JM,49903:CD,61167:CD,61171:CD,61176:JM,61180
61181 :: NORM :: declaration :: Lorg/biojava/nbio/structure/domain/PDPDomain :: v84 = new org.biojava.nbio.structure.domain.PDPDomain::DD,61187
61187 :: NORM :: compound :: Lorg/biojava/nbio/structure/domain/PDPDomain :: return v84::DD,60995
61188 :: EXPR :: assign :: Ljava/lang/Exception :: v36 = catch <exc>::
61189 :: EXPR :: assign :: null :: PHI v14 = #(null), #(null), v13::DD,61190
61190 :: EXPR :: assign :: null :: PHI v60 = v14, v58, v58::JM,61180:CF,61126
61260 :: CALL :: call :: Ljava/util/regex/Matcher :: v7 = v5.matcher(p1 $name )::JM,61281:JM,61299:JM,61289
61265 :: CALL :: call :: Z :: v9 = v7.matches()::JM,61281:JM,61299:JM,61289
61270 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v22 = new java.lang.IllegalArgumentException::
61276 :: CALL :: call :: Ljava/lang/String :: v13 = v7.group(#(1))::JM,61281:JM,61299:JM,61289
61281 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbCode = v13::
61284 :: CALL :: call :: Ljava/lang/String :: v16 = v7.group(#(2))::JM,61281:JM,61299:JM,61289
61289 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 63::CD,61290:CD,61295:JM,61281:JM,61299:JM,61289
61290 :: CALL :: call :: Ljava/lang/String :: v19 = v7.group(#(2))::JM,61281:JM,61299:JM,61289
61295 :: CALL :: call :: I :: v21 = parseInt(v19)::JM,61299
61299 :: EXPR :: modify :: I :: p0 $this .biolNr = v21::
61303 :: EXPR :: modify :: I :: p0 $this .biolNr = #(1)::
61324 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.parseQuery(java.net.URL)::CD,61328:CD,61332:CD,61336:JM,61347:JM,61352:JM,61337:JM,61341
61328 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v3 = new java.util.LinkedHashMap::
61332 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $url .getQuery()::JM,61347:JM,61336:JM,61352:JM,61337:JM,61341
61336 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 25::CD,61337:CD,61341:JM,61347:JM,61352
61337 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,61347:JM,61352:JM,61337:JM,61341
61341 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 27::CD,61343:CD,61347:CD,61352:CD,61404:CD,61408:JM,61336:JM,61337:JM,61341
61343 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $url .getQuery()::JM,61347:JM,61336:JM,61352:JM,61337:JM,61341
61347 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#(&))::JM,61347:JM,61352:JM,61337:JM,61341
61352 :: EXPR :: assign :: I :: v16 = v15.length::DD,61404
61397 :: CALL :: call :: Ljava/lang/Object :: v40 = v3.put(v38, v36)::
61403 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,61408
61404 :: PRED :: IF :: Z :: if (v42 < v16) goto 54::CD,61397:CD,61403:CD,61408
61408 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,61403:DD,61404
61491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.guessFiletype(java.lang.String)::CE,61492:CD,61495:CD,61499:CD,61502:CD,61539:CD,61544
61492 :: EXIT :: exit :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO.guessFiletype(java.lang.String)::JM,50886:JM,50887
61495 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $filename .toLowerCase()::JM,61531
61499 :: CALL :: call :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v6 = values()::JM,61502:CL,72198
61502 :: EXPR :: assign :: I :: v7 = v6.length::DD,61539
61504 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v6[v25]::JM,61521:JM,61537:JM,61508:JM,61512:JM,61517:JM,61533:DD,61532
61508 :: CALL :: call :: Ljava/util/List :: v11 = v9.getExtensions()::JM,61521:JM,61537:JM,61508:JM,61512:JM,61517:JM,61533
61512 :: CALL :: call :: Ljava/util/Iterator :: v13 = v11.iterator()::JM,61521:JM,61537:JM,61512:JM,61517:JM,61533
61517 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.next()::JM,61521:JM,61537:JM,61517:JM,61533
61521 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,61522:JM,61531
61522 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toLowerCase()::JM,61522:JM,61531
61526 :: CALL :: call :: Z :: v22 = v4.endsWith(v20)::JM,61531
61531 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 66::CF,61543:CD,61532:CD,61533:CD,61537
61532 :: NORM :: compound :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v9::DD,61492
61533 :: CALL :: call :: Z :: v15 = v13.hasNext()::JM,61521:JM,61537:JM,61517:JM,61533
61537 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 40::CD,61517:CD,61521:CD,61522:CD,61526:CD,61531:CD,61538:CD,61539:CD,61544:CD,61543:JM,61537:JM,61533
61538 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v26 + #(1)::DD,61544
61539 :: PRED :: IF :: Z :: if (v25 < v7) goto 22::CD,61508:CD,61512:CD,61533:CD,61537:CD,61540:CD,61542:CD,61543
61540 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::CF,61542
61542 :: NORM :: compound :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v27::DD,61492
61543 :: EXPR :: assign :: null :: PHI v26 = v25, v26::JM,61521:JM,61537:JM,61517:JM,61533:DD,61538:DD,61543
61544 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,61539:DD,61543
61569 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::CE,61570:CD,61572:CD,61574
61570 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::
61572 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype::DD,61574:DD,61575
61574 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,61575:CD,61576:CD,61579:CD,61580:CD,61581:CD,61583:CD,61592:CD,61594:CD,61603:CD,61605:CD,61616
61575 :: NORM :: compound :: [I :: return v2::DD,61570
61576 :: CALL :: call :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v5 = values()::JM,61579:CL,72198
61579 :: EXPR :: assign :: I :: v6 = v5.length::CF,61580
61580 :: NORM :: declaration :: [I :: v7 = new []::DD,61616
61581 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v8 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::
61583 :: CALL :: call :: I :: v10 = v8.ordinal()::
61587 :: EXPR :: modify :: I :: v7[v10] = #(2)::
61592 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v14 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::
61594 :: CALL :: call :: I :: v16 = v14.ordinal()::
61598 :: EXPR :: modify :: I :: v7[v16] = #(1)::
61603 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v20 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::
61605 :: CALL :: call :: I :: v22 = v20.ordinal()::
61609 :: EXPR :: modify :: I :: v7[v22] = #(3)::
61616 :: NORM :: compound :: [I :: return v7::DD,61570
61644 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
61667 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: v4 = new org.biojava.nbio.structure.io.FileParsingParameters::DD,61671
61671 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: p0 $this .params = v4::
61674 :: CALL :: call :: V :: p0 $this .documentStart()::CL,72225
61691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setFileParsingParameters(org.biojava.nbio.structure.io.FileParsingParameters)::JM,61696
61696 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: p0 $this .params = p1 $params ::
61702 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.addMMcifConsumer(org.biojava.nbio.structure.io.mmcif.MMcifConsumer)::CD,61710
61707 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::
61710 :: CALL :: call :: Z :: v6 = v4.add(p1 $consumer )::
61719 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.parse(java.io.BufferedReader)::CD,61724:CD,61727:CD,61734:CD,61738:CD,61742:CD,61746:CD,61750:JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61724 :: CALL :: call :: V :: p0 $this .triggerDocumentStart()::CL,72425
61727 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v5 = new org.biojava.nbio.structure.io.mmcif.model.Struct::DD,61731
61731 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v5::
61734 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,62081:JM,62316
61738 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,62349
61742 :: NORM :: declaration :: Ljava/util/HashSet :: v13 = new java.util.HashSet::
61746 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $buf .readLine()::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61750:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61750 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 70::CD,61751:CD,61756:CD,61759:CD,61764:CD,61769:CD,61774:CD,61782:CD,62347:CD,62348:CD,62349:CD,62350:JM,61796:JM,61863:JM,61991:JM,61832:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,62301:JM,61790
61751 :: CALL :: call :: Z :: v19 = v16.startsWith(#(data_))::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61756 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 988::CF,62347:CD,61759:CD,61764:CD,61769:CD,61774:CD,61782:CD,62297:CD,62301:CD,62348:CD,62349:CD,62350
61759 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v238 = new java.lang.StringBuilder::
61764 :: CALL :: call :: Ljava/lang/StringBuilder :: v242 = v238.append(v16)::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61769 :: CALL :: call :: Ljava/lang/StringBuilder :: v244 = v242.append(#('))::JM,61906:JM,61796:JM,62196:JM,61846:JM,62134:JM,61863:JM,61991:JM,61832:JM,61790:JM,62350
61774 :: CALL :: call :: Ljava/lang/String :: v246 = v244.toString()::JM,61991
61782 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,72467
61786 :: CALL :: call :: Z :: v23 = v21.isEmpty()::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61790 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 988::CF,62347:CD,61791:CD,61796:CD,62297:CD,62301:CD,62348:CD,62349:CD,62350:JM,61863:JM,61991:JM,61832:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,61790
61791 :: CALL :: call :: Z :: v27 = v21.startsWith(#(#))::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61796 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 123::CD,61800:CD,61801:CD,61809:CD,61814:CD,61819:CD,61827:CD,61832:CD,61840:CD,62297:CD,62301:CD,62345:CD,62346:CD,62347:CD,62348:CD,62349:CD,62350
61800 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::JM,61801
61801 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(v75)::JM,61801
61809 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#( ))::
61814 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(v21)::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61819 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,61906:JM,62196:JM,61846:JM,62134:JM,61863:JM,61991:JM,61832:JM,62350
61827 :: CALL :: call :: Z :: v42 = v21.startsWith(#(data_))::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61832 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 187::CF,62345:CD,61833:CD,62346
61833 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 187::CF,62345:CD,61834:CD,61837
61834 :: CALL :: call :: V :: v154.clear()::
61837 :: CALL :: call :: V :: v9.clear()::
61840 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 692::CD,61841:CD,61846:CD,62129:CD,62134:JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61786:JM,61756:JM,62301:JM,61790
61841 :: CALL :: call :: Z :: v47 = v21.startsWith(#(loop_))::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61846 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 217::CD,61847:CD,61851:CD,61856:CD,62297:CD,62301:CD,62347:CD,62348:CD,62349:CD,62350
61847 :: CALL :: call :: V :: v9.clear()::
61851 :: CALL :: call :: Z :: v50 = v21.matches(#(\s*_\w+.*))::JM,61856
61856 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 555::CD,61857:CD,62040:CD,62049:CD,62053:CD,62064:CD,62073:CD,62077:CD,62081:CD,62118:CD,62125:CD,62297:CD,62301:CD,62347:CD,62348:CD,62349:CD,62350
61857 :: PRED :: IF :: Z :: if (v155 == #(0)) goto 445::CD,61858:CD,61863:CD,61982:CD,61986:CD,61991:CD,62297:CD,62301:CD,62347:CD,62348:CD,62349:CD,62350:JM,61796:JM,61832:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,61790
61858 :: CALL :: call :: Z :: v53 = v21.startsWith(#(_))::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61863 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 445::CD,61870:CD,61873:CD,61880:CD,61884:CD,61982:CD,61986:CD,61991:CD,62297:CD,62301:CD,62347:CD,62348:CD,62349:CD,62350:JM,61796:JM,61863:JM,61832:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,61790
61870 :: CALL :: call :: V :: v9.clear()::
61873 :: CALL :: call :: Ljava/util/List :: v82 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,61894:JM,61884:JM,61951:CL,72500
61880 :: CALL :: call :: I :: v84 = v82.size()::JM,61894:JM,61884:JM,61951
61884 :: PRED :: IF :: Z :: if (v84 >= #(1)) goto 292::CD,61885:CD,61889:CD,61894:CD,61895:CD,61900:CD,62297:CD,62301:CD,62347:CD,62348:CD,62349:CD,62350:JM,61884:JM,61951
61885 :: CALL :: call :: V :: v154.clear()::
61889 :: CALL :: call :: Ljava/lang/Object :: v87 = v82.get(#(0))::JM,61894:JM,61884:JM,61951
61894 :: EXPR :: assign :: Ljava/lang/Object :: v88 = CHECKCAST v87::JM,61952:JM,61900:JM,62350
61895 :: CALL :: call :: I :: v91 = v88.indexOf(#(.))::JM,61952:JM,61900:JM,62350
61900 :: PRED :: IF :: Z :: if (v91 >= #(0)) goto 377::CD,61901:CD,61906:CD,61940:CD,61946:CD,61951:CD,61952:CD,61953:CD,61957:CD,61963:CD,61968:CD,62297:CD,62301:CD,62347:CD,62348:CD,62349:CD,62350:JM,61796:JM,61863:JM,61991:JM,61832:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,61790
61901 :: CALL :: call :: Z :: v93 = v21.startsWith(#(data_))::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61906 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 364::CD,61909:CD,61914:CD,61919:CD,61924:CD,61932:CD,61936:CD,62297:CD,62301:CD,62347:CD,62348:CD,62349:CD,62350
61909 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v227 = new java.lang.StringBuilder::
61914 :: CALL :: call :: Ljava/lang/StringBuilder :: v230 = v227.append(v21)::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61919 :: CALL :: call :: Ljava/lang/StringBuilder :: v232 = v230.append(#('))::JM,62196:JM,62134:JM,61991:JM,62350
61924 :: CALL :: call :: Ljava/lang/String :: v234 = v232.toString()::JM,61991
61932 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,72467
61936 :: CALL :: call :: V :: v154.clear()::
61940 :: CALL :: call :: Ljava/lang/String :: v96 = v88.substring(#(0), v91)::JM,62350:JM,61952
61946 :: CALL :: call :: Ljava/lang/Object :: v98 = v82.get(#(1))::JM,61894:JM,61884:JM,61951
61951 :: EXPR :: assign :: Ljava/lang/Object :: v99 = CHECKCAST v98::CF,61952
61952 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v91 + #(1)::
61953 :: CALL :: call :: I :: v102 = v88.length()::
61957 :: CALL :: call :: Ljava/lang/String :: v104 = v88.substring(v100, v102)::
61963 :: CALL :: call :: Z :: v106 = v9.add(v104)::
61968 :: CALL :: call :: Z :: v108 = v154.add(v99)::
61982 :: CALL :: call :: Ljava/lang/String :: v55 = v21.trim()::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
61986 :: CALL :: call :: I :: v58 = v55.indexOf(#(46))::JM,62196:JM,62134:JM,61991:JM,62350
61991 :: PRED :: IF :: Z :: if (v58 <= #(-1)) goto 534::CD,61992:CD,62005:CD,62018:CD,62019:CD,62347:CD,62348:CD,62349:CD,62350
61992 :: CALL :: call :: [Ljava/lang/String :: v62 = v55.split(#(\.))::JM,62018
61997 :: EXPR :: reference :: Ljava/lang/Object :: v63 = v62[#(0)]::DD,62350
62001 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v62[#(1)]::
62005 :: CALL :: call :: Z :: v67 = v9.add(v65)::
62018 :: EXPR :: assign :: I :: v71 = v62.length::DD,62019
62019 :: PRED :: IF :: Z :: if (v71 <= #(2)) goto 988::CF,62347:CD,62348:CD,62349:CD,62350
62040 :: CALL :: call :: Ljava/util/List :: v121 = p0 $this .processLine(v21, p1 $buf , v119)::JM,62081:JM,62349:CL,72500
62049 :: CALL :: call :: I :: v125 = v121.size()::JM,62081:JM,62349
62053 :: CALL :: call :: Ljava/lang/Integer :: v127 = valueOf(v125)::JM,62081
62064 :: CALL :: call :: Ljava/lang/String :: v132 = v121.toString()::
62073 :: CALL :: call :: I :: v135 = v121.size()::JM,62081:JM,62349
62077 :: CALL :: call :: I :: v137 = v9.size()::JM,62081
62081 :: PRED :: IF :: Z :: if (v135 == v137) goto 673::CD,62085:CD,62089:CD,62097:CD,62101
62085 :: CALL :: call :: I :: v143 = v9.size()::
62089 :: CALL :: call :: Ljava/lang/Integer :: v145 = valueOf(v143)::
62097 :: CALL :: call :: I :: v147 = v121.size()::JM,62081:JM,62349
62101 :: CALL :: call :: Ljava/lang/Integer :: v149 = valueOf(v147)::
62118 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v121, v13)::CL,72816
62125 :: CALL :: call :: V :: v121.clear()::JM,62081:JM,62349
62129 :: CALL :: call :: Z :: v157 = v21.startsWith(#(loop_))::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
62134 :: PRED :: IF :: Z :: if (v157 == #(0)) goto 749::CD,62135:CD,62143:CD,62163:CD,62170:CD,62174:CD,62297:CD,62301:CD,62347:CD,62348:CD,62349:CD,62350
62135 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 722::CD,62136
62136 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,72816
62143 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,74237
62163 :: CALL :: call :: Ljava/util/List :: v167 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,62184:JM,62267:JM,62174:CL,72500
62170 :: CALL :: call :: I :: v169 = v167.size()::JM,62184:JM,62267:JM,62174
62174 :: PRED :: IF :: Z :: if (v169 >= #(1)) goto 795::CD,62175:CD,62179:CD,62184:CD,62185:CD,62190:CD,62297:CD,62301:CD,62347:CD,62348:CD,62349:CD,62350:JM,62267:JM,62174
62175 :: CALL :: call :: V :: v154.clear()::
62179 :: CALL :: call :: Ljava/lang/Object :: v172 = v167.get(#(0))::JM,62184:JM,62267:JM,62174
62184 :: EXPR :: assign :: Ljava/lang/Object :: v173 = CHECKCAST v172::JM,62242:JM,62268:JM,62190:JM,62350
62185 :: CALL :: call :: I :: v175 = v173.indexOf(#(.))::JM,62242:JM,62268:JM,62190:JM,62350
62190 :: PRED :: IF :: Z :: if (v175 >= #(0)) goto 877::CD,62191:CD,62196:CD,62230:CD,62256:CD,62262:CD,62267:CD,62268:CD,62269:CD,62273:CD,62279:CD,62284:CD,62297:CD,62301:CD,62347:CD,62348:CD,62349:CD,62350:JM,61796:JM,61863:JM,61991:JM,61832:JM,61906:JM,61846:JM,62134:JM,61786:JM,61756:JM,61790
62191 :: CALL :: call :: Z :: v177 = v21.startsWith(#(data_))::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
62196 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 867::CD,62199:CD,62204:CD,62209:CD,62214:CD,62222:CD,62226:CD,62297:CD,62301:CD,62347:CD,62348:CD,62349:CD,62350
62199 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v214 = new java.lang.StringBuilder::
62204 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v214.append(v21)::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
62209 :: CALL :: call :: Ljava/lang/StringBuilder :: v221 = v218.append(#('))::JM,61991
62214 :: CALL :: call :: Ljava/lang/String :: v223 = v221.toString()::
62222 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,72467
62226 :: CALL :: call :: V :: v154.clear()::
62230 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 923::CD,62231:CD,62237:CD,62242:JM,62350
62231 :: CALL :: call :: Ljava/lang/String :: v180 = v173.substring(#(0), v175)::JM,62242:JM,62268:JM,62350
62237 :: CALL :: call :: Z :: v182 = v180.equals(v73)::JM,62242:JM,62350
62242 :: PRED :: IF :: Z :: if (v182 != #(0)) goto 923::CD,62243:CD,62250:JM,62350
62243 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,72816
62250 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,74237
62256 :: CALL :: call :: Ljava/lang/String :: v186 = v173.substring(#(0), v175)::JM,62350:JM,62242:JM,62268
62262 :: CALL :: call :: Ljava/lang/Object :: v188 = v167.get(#(1))::JM,62184:JM,62267:JM,62174
62267 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::CF,62268
62268 :: EXPR :: assign :: Ljava/lang/Object :: v190 = v175 + #(1)::
62269 :: CALL :: call :: I :: v192 = v173.length()::
62273 :: CALL :: call :: Ljava/lang/String :: v194 = v173.substring(v190, v192)::
62279 :: CALL :: call :: Z :: v196 = v9.add(v194)::
62284 :: CALL :: call :: Z :: v198 = v154.add(v189)::
62297 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $buf .readLine()::JM,61796:JM,61863:JM,61991:JM,61832:JM,62350:JM,61906:JM,62196:JM,61750:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790
62301 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 105::CD,61786:CD,61790:CD,62302:CD,62333:CD,62341:CD,62347:CD,62348:CD,62349:CD,62350:JM,61796:JM,61863:JM,61991:JM,61832:JM,61906:JM,62196:JM,61846:JM,62134:JM,61756:JM,62301
62302 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 1051::CD,62303:CD,62307
62303 :: CALL :: call :: I :: v202 = v154.size()::JM,62307
62307 :: PRED :: IF :: Z :: if (v202 <= #(0)) goto 1051::CD,62308:CD,62312:CD,62316
62308 :: CALL :: call :: I :: v204 = v154.size()::JM,62316
62312 :: CALL :: call :: I :: v206 = v9.size()::JM,62316
62316 :: PRED :: IF :: Z :: if (v204 != v206) goto 1051::CD,62317:CD,62324
62317 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,72816
62324 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,74237
62330 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v209 = p0 $this .struct::DD,62333
62333 :: PRED :: IF :: Z :: if (v209 == #(null)) goto 1066::CD,62337
62337 :: CALL :: call :: V :: p0 $this .triggerStructData(v210)::CL,74257
62341 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,72467
62345 :: EXPR :: assign :: null :: PHI v76 = v75, v75, #(0)::CF,62346:DD,61840:DD,62347
62346 :: EXPR :: assign :: null :: PHI v155 = v153, v153, #(0)::DD,61857:DD,62348:CF,61840
62347 :: EXPR :: assign :: null :: PHI v75 = #(0), v75, v75, #(1), #(0), #(0), #(0), v76, v76, v76, v76, #(1), #(0), #(0), #(0)::CF,62348:JM,61801:DD,61833:DD,62345:DD,62347
62348 :: EXPR :: assign :: null :: PHI v153 = #(0), v153, v153, #(0), #(0), #(0), #(0), v155, v155, v155, #(1), #(0), v155, v155, v155::CF,62349:DD,62346:DD,62348
62349 :: EXPR :: assign :: null :: PHI v154 = v11, v154, v154, v154, v154, v154, v154, v154, v154, v154, v121, v154, v154, v154, v154::CF,62350:JM,62307:JM,62316:DD,62349
62350 :: EXPR :: assign :: null :: PHI v73 = #(null), v73, v73, v73, v73, #(null), v96, v63, v63, v55, v73, #(null), v73, #(null), v186::JM,61796:JM,61863:JM,61991:JM,61832:JM,61906:JM,62196:JM,61750:JM,61846:JM,62134:JM,61786:JM,61756:JM,62301:JM,61790:DD,62135:DD,62230:JM,62242:DD,62302:DD,62350
62707 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructure(java.net.URL)::CD,62721
62721 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p0 $this .getStructure(v7)::CL,74293
62734 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getBiologicalAssembly(java.lang.String,int)::CD,62740
62740 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getBiologicalAssembly(p1 $pdbId , p2 $bioAssemblyId , #(1))::CL,74324
62754 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::CE,62755:CD,62761
62755 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::JM,81513
62758 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,62761
62761 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,62755
62779 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,74432:JM,74407:JM,74439:JM,74399:JM,74415:DD,62783
62783 :: EXPR :: modify :: Ljava/util/List :: p0 $this .models = v4::
62786 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #()::
62789 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,74432:JM,74407:JM,74439:JM,74399:JM,74415:DD,62793
62793 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = v7::
62796 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,74432:JM,74407:JM,74439:JM,74399:JM,74415:DD,62800
62800 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v9::
62803 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::JM,74432:JM,74407:JM,74439:JM,74399:JM,74415:DD,62807
62807 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = v11::
62810 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBHeader :: v13 = new org.biojava.nbio.structure.PDBHeader::DD,62814
62814 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = v13::
62817 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::JM,74432:JM,74407:JM,74439:JM,74399:JM,74415:DD,62821
62821 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = v15::
62824 :: NORM :: declaration :: Ljava/util/ArrayList :: v17 = new java.util.ArrayList::JM,74432:JM,74407:JM,74439:JM,74399:JM,74415:DD,62828
62828 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = v17::
62831 :: NORM :: declaration :: Ljava/util/ArrayList :: v19 = new java.util.ArrayList::JM,74432:JM,74407:JM,74439:JM,74399:JM,74415:DD,62835
62835 :: EXPR :: modify :: Ljava/util/List :: p0 $this .hetAtoms = v19::
62858 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBCode()::CE,62859:CD,62865
62859 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.StructureImpl.getPDBCode()::
62862 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_id::DD,62865
62865 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,62859
62867 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBCode(java.lang.String)::JM,62872
62872 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_id = p1 $pdb_id_ ::
62878 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::CE,62879:CD,62885
62879 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBHeader :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::JM,86403:JM,98456:JM,98607:JM,100527
62882 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBHeader :: v3 = p0 $this .pdbHeader::DD,62885
62885 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBHeader :: return v3::CF,62879
62887 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBHeader(org.biojava.nbio.structure.PDBHeader)::JM,62892
62892 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = p1 $pdbHeader ::
62898 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.toString()::CD,62902
62902 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getIdentifier()::CL,74466
62919 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::CE,62920:CD,62926
62920 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::JM,99644:JM,99676
62923 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .dbrefs::DD,62926
62926 :: NORM :: compound :: Ljava/util/List :: return v3::CF,62920
62928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setDBRefs(java.util.List)::CD,62934:CD,62940:CD,62954:CD,62958:JM,62959
62934 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
62940 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $dbrefs .iterator()::JM,62958:JM,62959
62945 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,62958
62950 :: CALL :: call :: V :: v12.setParent(p0 $this )::CL,74523
62954 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,62958
62958 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,62945:CD,62950:CD,62954:JM,62958
62959 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = p1 $dbrefs ::
62995 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getDescription()::CE,62996:CD,63002
62996 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getDescription()::
62999 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .description::DD,63002
63002 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,62996
63004 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDescription(java.lang.String)::JM,63009
63009 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
63015 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompounds()::CE,63016:CD,63022:CD,63087
63016 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getCompounds()::JM,96004
63019 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .compounds::DD,63022
63022 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 19::CD,63026:CD,63030:CD,63036:CD,63046:CD,63079:CD,63083
63023 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .compounds::JM,63030
63026 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,63030
63030 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 113::CD,63036:CD,63046:CD,63079:CD,63083
63036 :: CALL :: call :: Ljava/util/List :: v12 = v9.findCompounds()::JM,63040:CL,74549
63040 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v12::
63043 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .compounds::JM,63083
63046 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,63083
63051 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,63083
63056 :: CALL :: call :: Ljava/util/List :: v22 = v20.getChains()::JM,63078:CL,74573
63060 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,63078
63065 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,63078
63070 :: CALL :: call :: V :: v29.setCompound(v20)::CL,74582
63074 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,63078
63078 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 75::CD,63065:CD,63070:CD,63074:JM,63078:JM,63083
63079 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,63083
63083 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 50::CD,63051:CD,63056:CD,63060:CD,63074:CD,63078:CD,63079:JM,63083
63084 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .compounds::DD,63087
63087 :: NORM :: compound :: Ljava/util/List :: return v31::DD,63016
63112 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCompounds(java.util.List)::JM,63117
63117 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = p1 $molList ::
63132 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSSBonds(java.util.List)::JM,63137
63137 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = p1 $ssbonds ::
63143 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getSites()::CE,63144:CD,63150
63144 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getSites()::JM,96095:JM,96383:JM,99907:JM,99838
63147 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .sites::DD,63150
63150 :: NORM :: compound :: Ljava/util/List :: return v3::CF,63144
63152 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSites(java.util.List)::JM,63157
63157 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = p1 $sites ::
63163 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addModel(java.util.List)::CD,63168:CD,63182:CD,63186:CD,63190
63168 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $model .iterator()::JM,63186
63173 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,63186
63178 :: CALL :: call :: V :: v11.setStructure(p0 $this )::CL,74593
63182 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,63186
63186 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,63173:CD,63178:CD,63182:JM,63186
63187 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .models::
63190 :: CALL :: call :: Z :: v15 = v13.add(p1 $model )::JM,63186
63207 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setModel(int,java.util.List)::CD,63214:CD,63220:CD,63234:CD,63238:CD,63242:CD,63246
63214 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v24 = new java.lang.IllegalArgumentException::
63220 :: CALL :: call :: Ljava/util/Iterator :: v7 = p2 $model .iterator()::JM,63238
63225 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,63238
63230 :: CALL :: call :: V :: v13.setStructure(p0 $this )::CL,74593
63234 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,63238
63238 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 28::CD,63225:CD,63230:CD,63234:JM,63238
63239 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .models::JM,63246
63242 :: CALL :: call :: Z :: v17 = v15.isEmpty()::JM,63246
63246 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 81::CD,63250:CD,63259
63247 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .models::
63250 :: CALL :: call :: Z :: v23 = v21.add(p2 $model )::JM,63238
63256 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .models::
63259 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.set(p1 $position , p2 $model )::JM,63238
63285 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getStart()::CE,63286:CD,63292
63286 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueRange.getStart()::JM,51298:JM,51231
63289 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .start::DD,63292
63292 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,63286
63294 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getEnd()::CE,63295:CD,63301
63295 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueRange.getEnd()::JM,51299:JM,51240
63298 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .end::DD,63301
63301 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,63295
63303 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::CE,63304:CD,63312:CD,63317:CD,63318:CD,63323:CD,63324
63304 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::JM,102377
63309 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .models::JM,63317
63312 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.get(p1 $modelnr )::JM,63317:JM,63323
63317 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::JM,63323
63318 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p2 $number )::JM,63323:JM,63317
63323 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,63324
63324 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,63304
63330 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getChainID()::CE,63331:CD,63337
63331 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ChainImpl.getChainID()::JM,51325:JM,51423:JM,63414:JM,65299:JM,83161:JM,83380:JM,94352:JM,94412:JM,97795:JM,97800:JM,97836:JM,112811:JM,117059:JM,117096:JM,129906:JM,134794:JM,134854:JM,148120
63334 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainID::DD,63337
63337 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,63331
63339 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setChainId(java.lang.String)::JM,63344
63344 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
63350 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.size()::CD,63357:CD,63361
63354 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,63361
63357 :: CALL :: call :: Z :: v6 = v4.isEmpty()::JM,63361
63361 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 34::CD,63365
63362 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .models::
63365 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(#(0))::
63384 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::CE,63385:CD,63390:CD,63395:CD,63400:CD,63404:CD,63405:CD,63409:CD,63414:CD,63415:CD,63416:CD,63422:CD,63427:CD,63432:CD,63437:CD,63445:CD,63450
63385 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::JM,51419:JM,97227
63390 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,63404:CL,74604
63395 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,63404
63400 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,63404
63404 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,63415
63405 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,63414:CL,63330
63409 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,63414
63414 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,63400:CD,63404:CD,63405:CD,63409:CD,63416:CF,63415
63415 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,63385
63416 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,63404
63422 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
63427 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,63414
63432 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#('))::
63437 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#( for PDB id ))::
63442 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdb_id::
63445 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(v31)::
63450 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
63472 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupsByPDB(org.biojava.nbio.structure.ResidueNumber,org.biojava.nbio.structure.ResidueNumber)::CE,63473:CD,63478:CD,63482:CD,63486:CD,63493:CD,63539:CD,63544:CD,63549:CD,63557:CD,63562:CD,63572:CD,63576:CD,63579:CD,63584:CD,63589:CD,63597:CD,63602:CD,63613:CD,63618:CD,63623:CD,63631:CD,63636:CD,63645:CD,63649:CD,63650:CD,63655:CD,63656:CD,63659
63473 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupsByPDB(org.biojava.nbio.structure.ResidueNumber,org.biojava.nbio.structure.ResidueNumber)::JM,51418:JM,51311
63478 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $start .toString()::JM,63516:CL,74617
63482 :: CALL :: call :: Ljava/lang/String :: v8 = p2 $end .toString()::JM,63536:CL,74617
63486 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,63649:JM,63655
63490 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .groups::JM,63576:JM,63502
63493 :: CALL :: call :: Ljava/util/Iterator :: v13 = v11.iterator()::JM,63576:JM,63502
63498 :: CALL :: call :: Ljava/lang/Object :: v18 = v13.next()::JM,63576:JM,63502
63502 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::
63507 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,63516:CL,74617
63511 :: CALL :: call :: Z :: v25 = v23.equals(v6)::JM,63516
63516 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 77::CF,63657
63517 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,63518
63518 :: CALL :: call :: Z :: v30 = v9.add(v19)::
63527 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,63536:CL,74617
63531 :: CALL :: call :: Z :: v36 = v34.equals(v8)::JM,63536
63536 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 159::CF,63659:CD,63572:CD,63576
63539 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v77 = new java.lang.StringBuilder::
63544 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(v6)::JM,63516
63549 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v80.append(#( in chain ))::
63554 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .chainID::
63557 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v82.append(v83)::
63562 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::
63572 :: CALL :: call :: Z :: v16 = v13.hasNext()::JM,63576:JM,63502
63576 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 42::CD,63498:CD,63502:CD,63507:CD,63511:CD,63516:CD,63517:CD,63527:CD,63531:CD,63536:CD,63657:CD,63659:JM,63576
63579 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
63584 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v63.append(v6)::JM,63516
63589 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v67.append(#( in chain ))::
63594 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .chainID::
63597 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(v70)::
63602 :: CALL :: call :: Ljava/lang/String :: v74 = v72.toString()::
63613 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v48 = new java.lang.StringBuilder::
63618 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v48.append(v8)::JM,63536
63623 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( in chain ))::
63628 :: EXPR :: reference :: Ljava/lang/String :: v56 = p0 $this .chainID::
63631 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(v56)::
63636 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
63645 :: CALL :: call :: I :: v42 = v9.size()::JM,63649
63649 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Group :: v43 = new org.biojava.nbio.structure.Group[]::JM,63655
63650 :: CALL :: call :: [Ljava/lang/Object :: v45 = v9.toArray(v43)::JM,63655
63655 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::CF,63656
63656 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Group :: return v46::DD,63473
63657 :: EXPR :: assign :: null :: PHI v27 = v37, #(1)::DD,63517:DD,63659
63659 :: EXPR :: assign :: null :: PHI v37 = #(0), v27::DD,63657
63708 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = #(null)::
63711 :: EXPR :: reference :: Ljava/lang/String :: v5 = org.biojava.nbio.structure.ChainImpl.DEFAULT_CHAIN_ID::DD,63713
63713 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = v5::
63716 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,63720
63720 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v6::
63723 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,63727
63727 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = v8::
63730 :: NORM :: declaration :: Ljava/util/HashMap :: v10 = new java.util.HashMap::DD,63734
63734 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbResnumMap = v10::
63737 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = #(null)::
63754 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setChainID(java.lang.String)::JM,63759
63759 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = p1 $nam ::
63765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addChain(org.biojava.nbio.structure.Chain,int)::CD,63778:CD,63782:JM,63809
63775 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .models::JM,63782
63778 :: CALL :: call :: Z :: v8 = v6.isEmpty()::JM,63782
63782 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 50::CF,63783:CD,63787:CD,63795:CD,63804:CD,63809:CD,63810
63783 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::
63787 :: CALL :: call :: Z :: v19 = v16.add(p1 $chain )::JM,63809
63792 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .models::
63795 :: CALL :: call :: Z :: v22 = v20.add(v16)::
63801 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .models::JM,63809
63804 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p2 $modelnr )::JM,63809
63809 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::
63810 :: CALL :: call :: Z :: v15 = v13.add(p1 $chain )::JM,63809
63834 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::CE,63835:CD,63841
63835 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::JM,83266:JM,128114:JM,128171:JM,128106:JM,128259:JM,128324:JM,128267
63838 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .seqResGroups::DD,63841
63841 :: NORM :: compound :: Ljava/util/List :: return v3::CF,63835
63843 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqResGroups(java.util.List)::CD,63848:CD,63862:CD,63866:JM,63867
63848 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,63866:JM,63867
63853 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,63866
63858 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,74688
63862 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,63866
63866 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,63853:CD,63858:CD,63862:JM,63866
63867 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = p1 $groups ::
63890 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqMisMatches(java.util.List)::JM,63895
63895 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = p1 $seqMisMatches ::
63901 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.addGroup(org.biojava.nbio.structure.Group)::CD,63906:CD,63910:CD,63914:CD,63928:CD,63932:CD,63936:CD,63941:CD,63945:CD,63950:CD,64082:JM,64060
63906 :: CALL :: call :: V :: p1 $group .setChain(p0 $this )::CL,74688
63910 :: CALL :: call :: Ljava/util/List :: v6 = p1 $group .getAltLocs()::JM,63932:CL,74718
63914 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,63932
63919 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,63932
63924 :: CALL :: call :: V :: v14.setChain(p0 $this )::CL,74688
63928 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,63932
63932 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,63919:CD,63924:CD,63928:JM,63932
63933 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .groups::
63936 :: CALL :: call :: Z :: v18 = v16.add(p1 $group )::JM,64060
63941 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v21 = p1 $group .getResidueNumber()::JM,63945:CL,74679
63945 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 78::CF,64082:CD,63946
63946 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,64082:CL,74617
63950 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 252::CD,63954:CD,63958:CD,63959:CD,63966:CD,63971
63951 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .groups::JM,63958
63954 :: CALL :: call :: I :: v27 = v25.size()::JM,63958
63958 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 - #(1)::
63959 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
63966 :: CALL :: call :: Z :: v34 = v32.containsKey(v24)::JM,63971
63971 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 240::CD,64001:CD,64006:CD,64007:CD,64011:CD,64031:CD,64036:CD,64037:CD,64041:CD,64060:CD,64061:CD,64075
63995 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .groups::
64001 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v24)::JM,64006
64006 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::
64007 :: CALL :: call :: I :: v54 = v52.intValue()::
64011 :: CALL :: call :: Ljava/lang/Object :: v56 = v48.get(v54)::
64025 :: EXPR :: reference :: Ljava/util/List :: v61 = p0 $this .groups::
64031 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v24)::JM,64036
64036 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::
64037 :: CALL :: call :: I :: v67 = v65.intValue()::
64041 :: CALL :: call :: Ljava/lang/Object :: v69 = v61.get(v67)::
64060 :: EXPR :: assign :: Z :: v74=p1 $group  INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,64061
64061 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 252::CD,64065
64065 :: CALL :: call :: Ljava/lang/Object :: v77 = v75.put(v24, v31)::
64075 :: CALL :: call :: Ljava/lang/Object :: v37 = v35.put(v24, v31)::
64082 :: EXPR :: assign :: null :: PHI v24 = #(null), v23::DD,63950
64143 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.nrModels()::CE,64144:CD,64150:CD,64154
64144 :: EXIT :: exit :: I :: org.biojava.nbio.structure.StructureImpl.nrModels()::JM,51411:JM,83333:JM,83413:JM,95469:JM,95647:JM,95951:JM,113961:JM,130394:JM,143813
64147 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .models::JM,64154
64150 :: CALL :: call :: I :: v5 = v3.size()::JM,64154
64154 :: NORM :: compound :: I :: return v5::CF,64144
64156 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getPdbId()::
64165 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getRanges()::
64174 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.util.List)::CD,64178:CD,64179:CD,64187:CD,64207:CD,64211
64178 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,64211
64179 :: CALL :: call :: I :: v5 = p1 $ranges .size()::JM,64211
64187 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $ranges .iterator()::JM,64211
64192 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,64211
64197 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v16 = parse(v14)::JM,64201:CL,69480
64201 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 55::CD,64202:JM,64211
64202 :: CALL :: call :: Z :: v19 = v3.add(v16)::
64207 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,64211
64211 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,64192:CD,64197:CD,64201:CD,64207:JM,64211
64230 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::CE,64231:CD,64237
64231 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::JM,51600
64234 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::DD,64237
64237 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,64231
64239 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::CE,64240:CD,64246
64240 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::JM,51648
64243 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .segments::DD,64246
64246 :: NORM :: compound :: Ljava/util/List :: return v3::DD,64240
64276 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chain = p1 $chain ::
64279 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v8 = fromString(p2 $start )::JM,64283:CL,74739
64283 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .start = v8::
64289 :: CALL :: call :: V :: v9.setChainId(p1 $chain )::CL,63339
64293 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v12 = fromString(p3 $end )::JM,64297:CL,74739
64297 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .end = v12::
64303 :: CALL :: call :: V :: v13.setChainId(p1 $chain )::CL,63339
64319 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.toCanonical()::CD,64329:CD,64333:CD,64338:CD,64345:CD,64350:CD,64393:CD,64401:CD,64406:CD,64415:JM,60806:JM,60812:JM,60815:CD,64446:CD,64447
64329 :: CALL :: call :: Ljava/util/Map :: v8 = parseQuery(v6)::CL,61324
64333 :: CALL :: call :: Z :: v22 = v8.containsKey(#(pdbid))::JM,64338
64338 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 40::CF,64446:CD,64339:CD,64344
64339 :: CALL :: call :: Ljava/lang/Object :: v25 = v8.get(#(pdbid))::JM,64344
64344 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::DD,64446
64345 :: CALL :: call :: Z :: v30 = v8.containsKey(#(residues))::JM,64350
64350 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 69::CD,64351:CD,64357:CD,64362:CD,64367:CD,64447
64351 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.get(#(residues))::
64357 :: CALL :: call :: Ljava/util/List :: v47 = parseMultiple(v45)::CL,59838
64362 :: CALL :: call :: Z :: v33 = v8.containsKey(#(chainid))::JM,64367
64367 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 141::CF,64447:CD,64368:CD,64369:CD,64370:JM,74848:JM,74851:JM,74845:CD,64386
64368 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ResidueRange :: v35 = new org.biojava.nbio.structure.ResidueRange[]::JM,64386:CF,64369
64369 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v36 = new org.biojava.nbio.structure.ResidueRange::DD,64382
64370 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.get(#(chainid))::
64382 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
64386 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,64386
64393 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
64401 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
64406 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
64415 :: PRED :: IF :: Z :: if (v49 != #(null)) goto 168::CD,64434
64434 :: CALL :: call :: Ljava/lang/String :: v62 = guessPDBID(v60)::CL,50083
64446 :: EXPR :: assign :: null :: PHI v27 = #(null), v26::DD,64447
64447 :: EXPR :: assign :: null :: PHI v49 = v27, v27, v27, #(null)::DD,64415
64513 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: p0 $this .parent = p1 $alignment ::
64516 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v5 = p0 $this .parent::DD,64519
64519 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 34::CD,64523:CD,64527
64523 :: CALL :: call :: Ljava/util/List :: v9 = v7.getBlockSets()::CL,38841
64527 :: CALL :: call :: Z :: v11 = v9.add(p0 $this )::JM,64513
64532 :: EXPR :: modify :: Ljava/util/List :: p0 $this .blocks = #(null)::
64535 :: EXPR :: modify :: Ljava/util/List :: p0 $this .pose = #(null)::
64538 :: EXPR :: modify :: I :: p0 $this .length = #(-1)::
64541 :: EXPR :: modify :: I :: p0 $this .coreLength = #(-1)::
64574 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/multiple/BlockSet :: p0 $this .parent = p1 $blockSet ::
64577 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/BlockSet :: v5 = p0 $this .parent::DD,64580
64580 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 34::CD,64584:CD,64588
64584 :: CALL :: call :: Ljava/util/List :: v9 = v7.getBlocks()::CL,47053
64588 :: CALL :: call :: Z :: v11 = v9.add(p0 $this )::JM,64574
64593 :: EXPR :: modify :: Ljava/util/List :: p0 $this .alignRes = #(null)::
64596 :: EXPR :: modify :: I :: p0 $this .coreLength = #(-1)::
64617 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockImpl.setAlignRes(java.util.List)::JM,64622
64622 :: EXPR :: modify :: Ljava/util/List :: p0 $this .alignRes = p1 $alignRes ::
64628 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.clone()::JM,74962:JM,75067:JM,75052:JM,75007
64640 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.compareTo(java.lang.Object)::CE,64641:CD,64646:CD,64651
64641 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.client.StructureName.compareTo(java.lang.Object)::
64646 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,64651:CL,75134
64651 :: NORM :: compound :: I :: return v6::DD,64641
64654 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::CE,64655:CD,64660:CD,64665
64655 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::
64660 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,64665:CL,75218
64665 :: NORM :: compound :: I :: return v6::CF,64655
64668 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::CE,64669:CD,64674:CD,64679
64669 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::
64674 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,64679:CL,75432
64679 :: NORM :: compound :: I :: return v6::DD,64669
64682 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockImpl.updateCoreLength()::CD,64686:CD,64690
64686 :: CALL :: call :: Ljava/util/List :: v4 = getCorePositions(p0 $this )::JM,64694:CL,65170
64690 :: CALL :: call :: I :: v6 = v4.size()::JM,64694
64694 :: EXPR :: modify :: I :: p0 $this .coreLength = v6::
64700 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.mc.MultipleMcOptimizer.checkGaps()::CD,64704:CD,64711:CD,64715:CD,64781:CD,64785:CD,64897:CD,64911
64704 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,64792:JM,64823:JM,64855
64711 :: CALL :: call :: Ljava/util/List :: v8 = v6.getBlocks()::JM,64785:CL,46889
64715 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,64785
64720 :: CALL :: call :: Ljava/lang/Object :: v14 = v10.next()::JM,64785
64725 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::
64731 :: CALL :: call :: Ljava/util/List :: v22 = v15.getAlignRes()::JM,64740:CL,47077
64735 :: CALL :: call :: Ljava/lang/Object :: v24 = v22.get(v34)::JM,64740
64740 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,64746
64741 :: CALL :: call :: Ljava/lang/Object :: v27 = v25.get(v44)::JM,64746
64746 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 93::CF,64899:CD,64747
64747 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v33 + #(1)::DD,64899
64748 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v34 + #(1)::DD,64902:CF,64900
64749 :: EXPR :: reference :: I :: v20 = p0 $this .size::DD,64752
64752 :: PRED :: IF :: Z :: if (v34 < v20) goto 65::CD,64731:CD,64735:CD,64740:CD,64741:CD,64746:CD,64748:CD,64899:CD,64900:CD,64901:CD,64902
64753 :: EXPR :: reference :: I :: v35 = p0 $this .size::DD,64756
64756 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v35 - v33::DD,64760
64757 :: EXPR :: reference :: I :: v37 = p0 $this .Rmin::DD,64760
64760 :: PRED :: IF :: Z :: if (v36 >= v37) goto 132::CD,64761:CD,64765:CF,64770
64761 :: CALL :: call :: Ljava/lang/Integer :: v39 = valueOf(v44)::
64765 :: CALL :: call :: Z :: v41 = v16.add(v39)::
64770 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v44 + #(1)::DD,64903
64771 :: CALL :: call :: I :: v19 = v15.length()::JM,64775:CL,47111
64775 :: PRED :: IF :: Z :: if (v43 < v19) goto 61::CD,64752:CD,64756:CD,64760:CD,64770:CD,64771:CD,64900:CD,64901:CD,64902:CD,64903
64776 :: CALL :: call :: Z :: v46 = v4.add(v16)::
64781 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,64785
64785 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 31::CD,64720:CD,64725:CD,64771:CD,64775:CD,64776:CD,64781:CD,64903:JM,64785
64787 :: CALL :: call :: Ljava/lang/Object :: v49 = v4.get(v105)::JM,64792
64792 :: EXPR :: assign :: Ljava/lang/Object :: v50 = CHECKCAST v49::JM,64797
64793 :: CALL :: call :: I :: v52 = v50.size()::JM,64797
64797 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v52 - #(1)::DD,64909
64803 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/Block :: v57 = v55.getBlock(v108)::CL,65009
64808 :: CALL :: call :: Ljava/util/List :: v59 = v57.getAlignRes()::JM,64817:CL,47077
64812 :: CALL :: call :: Ljava/lang/Object :: v61 = v59.get(v96)::JM,64817
64817 :: EXPR :: assign :: Ljava/lang/Object :: v62 = CHECKCAST v61::JM,64839:JM,64823
64818 :: CALL :: call :: Ljava/lang/Object :: v64 = v4.get(v108)::JM,64823
64823 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::JM,64829
64824 :: CALL :: call :: Ljava/lang/Object :: v67 = v65.get(v102)::JM,64829
64829 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::JM,64839
64830 :: CALL :: call :: I :: v70 = v68.intValue()::JM,64839
64834 :: CALL :: call :: Ljava/lang/Object :: v72 = v62.get(v70)::JM,64839
64839 :: EXPR :: assign :: Ljava/lang/Object :: v73 = CHECKCAST v72::DD,64871
64840 :: CALL :: call :: Ljava/util/List :: v75 = v57.getAlignRes()::JM,64849:CL,47077
64844 :: CALL :: call :: Ljava/lang/Object :: v77 = v75.get(v96)::JM,64849
64849 :: EXPR :: assign :: Ljava/lang/Object :: v78 = CHECKCAST v77::JM,64855
64850 :: CALL :: call :: Ljava/lang/Object :: v80 = v4.get(v108)::JM,64855
64855 :: EXPR :: assign :: Ljava/lang/Object :: v81 = CHECKCAST v80::JM,64861
64856 :: CALL :: call :: Ljava/lang/Object :: v83 = v81.get(v102)::JM,64861
64861 :: EXPR :: assign :: Ljava/lang/Object :: v84 = CHECKCAST v83::
64862 :: CALL :: call :: I :: v86 = v84.intValue()::
64866 :: CALL :: call :: Ljava/lang/Object :: v88 = v78.remove(v86)::
64871 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 333::CD,64875:CD,64881:CF,64886
64872 :: EXPR :: reference :: Ljava/util/List :: v89 = p0 $this .freePool::
64875 :: CALL :: call :: Ljava/lang/Object :: v91 = v89.get(v96)::
64881 :: CALL :: call :: Z :: v94 = v92.add(v73)::
64886 :: EXPR :: assign :: Ljava/lang/Object :: v95 = v96 + #(1)::DD,64906:CF,64904
64887 :: EXPR :: reference :: I :: v54 = p0 $this .size::DD,64890
64890 :: PRED :: IF :: Z :: if (v96 < v54) goto 199::CD,64803:CD,64808:CD,64812:CD,64817:CD,64818:CD,64823:CD,64824:CD,64829:CD,64830:CD,64834:CD,64839:CD,64840:CD,64844:CD,64849:CD,64850:CD,64855:CD,64856:CD,64861:CD,64862:CD,64866:CD,64871:CD,64886:CD,64904:CD,64905:CD,64906:CF,64891
64891 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v102 + #(-1)::DD,64909
64892 :: PRED :: IF :: Z :: if (v100 >= #(0)) goto 195::CD,64890:CD,64891:CD,64904:CD,64905:CD,64906:CD,64908:CD,64909:CF,64893
64893 :: EXPR :: assign :: Ljava/lang/Object :: v103 = v107 + #(1)::DD,64911
64894 :: EXPR :: reference :: I :: v47 = p0 $this .blockNr::DD,64897
64897 :: PRED :: IF :: Z :: if (v105 < v47) goto 172::CD,64787:CD,64792:CD,64793:CD,64797:CD,64892:CD,64893:CD,64908:CD,64909:CD,64911
64899 :: EXPR :: assign :: null :: PHI v31 = v33, v30::DD,64901:CF,64748
64900 :: EXPR :: assign :: null :: PHI v44 = v43, v44::CF,64901:JM,64746:DD,64770:DD,64900
64901 :: EXPR :: assign :: null :: PHI v33 = #(0), v31::CF,64902:DD,64747:DD,64756:DD,64899
64902 :: EXPR :: assign :: null :: PHI v34 = #(0), v32::JM,64740:DD,64748:DD,64752
64903 :: EXPR :: assign :: null :: PHI v43 = #(0), v42::DD,64775:DD,64900
64904 :: EXPR :: assign :: null :: PHI v108 = v107, v108::CF,64905:JM,64823:JM,64855:DD,64904:DD,64908
64905 :: EXPR :: assign :: null :: PHI v102 = v100, v102::CF,64906:JM,64829:JM,64861:DD,64891:DD,64905
64906 :: EXPR :: assign :: null :: PHI v96 = #(0), v95::JM,64817:JM,64849:DD,64886:DD,64890
64908 :: EXPR :: assign :: null :: PHI v107 = v105, v108::CF,64909:DD,64893:DD,64904
64909 :: EXPR :: assign :: null :: PHI v100 = v53, v98::DD,64892:DD,64905
64911 :: EXPR :: assign :: null :: PHI v105 = #(0), v103::JM,64792:DD,64897:DD,64908
64997 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.clone()::CE,64998:CD,65001:JM,75486:CD,65006
64998 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentImpl :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.clone()::JM,53191
65001 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentImpl :: v3 = new org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl::DD,65006
65006 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentImpl :: return v3::DD,64998
65009 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentImpl.getBlock(int)::CD,65014:CD,65018
65014 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getBlocks()::CL,46889
65018 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.get(p1 $index )::
65052 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentTools.getAverageResidueDistances(org.biojava.nbio.structure.align.multiple.MultipleAlignment)::CD,65056:CD,65060
65056 :: CALL :: call :: Ljava/util/List :: v4 = transformAtoms(p1 $msa )::CL,65721
65060 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v6 = getAverageResidueDistances(v4)::CL,75587
65068 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.get(int,int)::CE,65069:CD,65085
65069 :: EXIT :: exit :: D :: org.biojava.nbio.structure.jama.Matrix.get(int,int)::JM,55443:JM,55455:JM,55730:JM,55738:JM,55851:JM,66243:JM,66252
65074 :: EXPR :: reference :: [[D :: v5 = p0 $this .A::
65077 :: EXPR :: reference :: Ljava/lang/Object :: v6 = v5[p1 $i ]::
65081 :: EXPR :: reference :: D :: v7 = v6[p2 $j ]::DD,65085
65085 :: NORM :: compound :: D :: return v7::CF,65069
65089 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.AbstractScoresCache.clear()::
65093 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .scores = #(null)::
65099 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.clear()::CD,65103:CD,65118:CD,65122:CD,65135:CD,65139
65103 :: CALL :: call :: V :: p0 $this .clear()::CL,65089
65106 :: EXPR :: modify :: I :: p0 $this .length = #(-1)::
65109 :: EXPR :: modify :: I :: p0 $this .coreLength = #(-1)::
65115 :: EXPR :: modify :: Ljava/util/List :: p0 $this .pose = #(null)::
65118 :: CALL :: call :: Ljava/util/List :: v7 = p0 $this .getBlocks()::JM,65139:CL,47053
65122 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,65139
65127 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,65139
65132 :: CALL :: call :: V :: v15.clear()::CL,75886
65135 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,65139
65139 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 38::CD,65127:CD,65132:CD,65135:JM,65139
65157 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockImpl.size()::CE,65158:CD,65164:CD,65168
65158 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.BlockImpl.size()::JM,65202:JM,144082
65161 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .alignRes::JM,65168
65164 :: CALL :: call :: I :: v5 = v3.size()::JM,65168
65168 :: NORM :: compound :: I :: return v5::CF,65158
65170 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentTools.getCorePositions(org.biojava.nbio.structure.align.multiple.Block)::CE,65171:CD,65174:CD,65214:CD,65218:CD,65219:CD,65223
65171 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentTools.getCorePositions(org.biojava.nbio.structure.align.multiple.Block)::JM,56235:JM,64694
65174 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,65219
65180 :: CALL :: call :: Ljava/util/List :: v12 = p1 $block .getAlignRes()::JM,65189:CL,47077
65184 :: CALL :: call :: Ljava/lang/Object :: v14 = v12.get(v20)::JM,65189
65189 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,65195
65190 :: CALL :: call :: Ljava/lang/Object :: v17 = v15.get(v28)::JM,65195
65195 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 51::CD,65197:CD,65198:CD,65202:CD,65220:CD,65221:CD,65222
65197 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,65221:CF,65220
65198 :: CALL :: call :: I :: v10 = p1 $block .size()::JM,65202:CL,65157
65202 :: PRED :: IF :: Z :: if (v20 < v10) goto 22::CF,65222:CD,65180:CD,65184:CD,65189:CD,65190:CD,65195
65203 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 80::CD,65204:CD,65208:CF,65213
65204 :: CALL :: call :: Ljava/lang/Integer :: v23 = valueOf(v28)::
65208 :: CALL :: call :: Z :: v25 = v3.add(v23)::
65213 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v28 + #(1)::DD,65223
65214 :: CALL :: call :: I :: v7 = p1 $block .length()::JM,65218:CL,47111
65218 :: PRED :: IF :: Z :: if (v27 < v7) goto 18::CD,65198:CD,65202:CD,65203:CD,65213:CD,65214:CD,65220:CD,65221:CD,65222:CD,65223:CF,65219
65219 :: NORM :: compound :: Ljava/util/List :: return v3::DD,65171
65220 :: EXPR :: assign :: null :: PHI v28 = v27, v28::CF,65221:JM,65195:DD,65213:DD,65220
65221 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::JM,65189:DD,65197:DD,65202
65222 :: EXPR :: assign :: null :: PHI v21 = #(0), #(1)::DD,65203
65223 :: EXPR :: assign :: null :: PHI v27 = #(0), v26::DD,65218:DD,65220
65251 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.cloneAtomArray(org.biojava.nbio.structure.Atom[])::CD,65255:CD,65256:CD,65257:CD,65261:CD,65352:CD,65357:CD,65363:CD,65364
65255 :: EXPR :: assign :: I :: v3 = p1 $ca .length::CF,65256
65256 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v4 = new org.biojava.nbio.structure.Atom[]::CF,65257
65257 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,65285:JM,65305
65261 :: EXPR :: assign :: I :: v8 = p1 $ca .length::DD,65357
65267 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v57 + #(1)::DD,65363
65276 :: CALL :: call :: Ljava/util/Iterator :: v19 = v5.iterator()::JM,65285:JM,65305
65281 :: CALL :: call :: Ljava/lang/Object :: v23 = v19.next()::JM,65285:JM,65305
65285 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,65361
65286 :: CALL :: call :: Ljava/lang/String :: v26 = v24.getChainID()::JM,65299:CL,63330
65290 :: CALL :: call :: Ljava/lang/String :: v28 = v16.getChainID()::JM,65299:CL,63330
65294 :: CALL :: call :: Z :: v30 = v26.equals(v28)::JM,65299
65299 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 112::CF,65360:CD,65301:CD,65305:CD,65361
65301 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,65285:JM,65305
65305 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 73::CF,65361:CD,65281:CD,65285:CD,65286:CD,65290:CD,65294:CD,65299:CD,65360:JM,65305
65306 :: PRED :: IF :: Z :: if (v31 != #(null)) goto 159::CF,65307:JM,63730:JM,63716:JM,63723:JM,63711:CD,65315:CD,65319
65307 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v32 = new org.biojava.nbio.structure.ChainImpl::
65315 :: CALL :: call :: V :: v32.setChainID(v35)::CL,63754
65319 :: CALL :: call :: Z :: v38 = v5.add(v32)::
65324 :: CALL :: call :: Ljava/lang/Object :: v41 = v14.clone()::CL,75914:CL,76231:CL,76056
65333 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v46 = v42.getAtom(v44)::JM,65338:CL,45210
65338 :: EXPR :: modify :: Ljava/lang/Object :: v4[v12] = v46::
65346 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v50 = v39.getGroupByPDB(v48)::CL,76387
65352 :: CALL :: call :: V :: v39.addGroup(v42)::CL,63901
65356 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v60 + #(1)::DD,65364:CF,65363
65357 :: PRED :: IF :: Z :: if (v58 < v8) goto 33::CD,65267:CD,65276:CD,65301:CD,65305:CD,65306:CD,65324:CD,65333:CD,65346:CD,65356:CD,65360:CD,65361:CD,65363:CD,65364
65360 :: EXPR :: assign :: null :: PHI v60 = v58, v60::JM,65285:JM,65305:DD,65356:DD,65360
65361 :: EXPR :: assign :: null :: PHI v31 = v24, #(null)::DD,65306
65363 :: EXPR :: assign :: null :: PHI v57 = #(-1), v12::CF,65364:DD,65267
65364 :: EXPR :: assign :: null :: PHI v58 = #(0), v55::DD,65357:DD,65360
65438 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v9 = getCentroid(p1 $atomSet1 )::CL,76471
65442 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v11 = getCentroid(p2 $atomSet2 )::CL,76471
65447 :: NORM :: declaration :: [D :: v16 = new []::
65448 :: CALL :: call :: D :: v18 = v9.getX()::JM,65452:CL,76644
65452 :: EXPR :: modify :: D :: v16[#(0)] = v18::
65456 :: CALL :: call :: D :: v20 = v9.getY()::JM,65460:CL,76658
65460 :: EXPR :: modify :: D :: v16[#(1)] = v20::
65464 :: CALL :: call :: D :: v23 = v9.getZ()::JM,65468:CL,76672
65468 :: EXPR :: modify :: D :: v16[#(2)] = v23::
65485 :: NORM :: declaration :: [D :: v27 = new []::
65486 :: CALL :: call :: D :: v29 = v11.getX()::JM,65490:CL,76644
65490 :: EXPR :: modify :: D :: v27[#(0)] = v29::
65494 :: CALL :: call :: D :: v31 = v11.getY()::JM,65498:CL,76658
65498 :: EXPR :: modify :: D :: v27[#(1)] = v31::
65502 :: CALL :: call :: D :: v33 = v11.getZ()::JM,65506:CL,76672
65506 :: EXPR :: modify :: D :: v27[#(2)] = v33::
65522 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v37 = centerAtoms(p1 $atomSet1 , v9)::CL,76749
65527 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v39 = centerAtoms(p2 $atomSet2 , v11)::CL,76749
65564 :: CALL :: call :: V :: p0 $this .calculate(v41, v43)::CL,76810
65641 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SVDSuperimposer.getTransformation()::CE,65642:CD,65651:CD,65656
65642 :: EXIT :: exit :: Ljavax/vecmath/Matrix4d :: org.biojava.nbio.structure.SVDSuperimposer.getTransformation()::
65651 :: CALL :: call :: Ljavax/vecmath/Matrix4d :: v6 = getTransformation(v3, v4)::JM,65656:CL,77026
65656 :: NORM :: compound :: Ljavax/vecmath/Matrix4d :: return v6::CF,65642
65659 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.transform(org.biojava.nbio.structure.Atom[],javax.vecmath.Matrix4d)::CD,65664:CD,65675:CD,65677
65664 :: EXPR :: assign :: I :: v4 = p1 $ca .length::DD,65675
65670 :: CALL :: call :: V :: transform(v6, p2 $t )::CL,77063
65675 :: PRED :: IF :: Z :: if (v10 < v4) goto 15::CD,65670:CD,65674:CD,65677
65674 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v10 + #(1)::DD,65677
65677 :: EXPR :: assign :: null :: PHI v10 = #(0), v9::DD,65674:DD,65675
65693 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.setTransformations(java.util.List)::CD,65698:CD,65707:JM,65713
65698 :: CALL :: call :: I :: v5 = p0 $this .size()::CL,77120
65707 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
65713 :: EXPR :: modify :: Ljava/util/List :: p0 $this .pose = p1 $transformations ::
65721 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentTools.transformAtoms(org.biojava.nbio.structure.align.multiple.MultipleAlignment)::CD,65730:CD,65736:CD,65740:CD,65741:CD,65803:CD,65829:CD,65944:CD,65948:CD,65964
65730 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v116 = new java.lang.NullPointerException::
65736 :: CALL :: call :: Ljava/util/List :: v7 = p1 $alignment .getAtomArrays()::JM,65948:CL,47040
65741 :: CALL :: call :: I :: v10 = v7.size()::JM,65948
65740 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::JM,65948
65750 :: CALL :: call :: Ljava/lang/Object :: v16 = v7.get(v94)::JM,65948
65756 :: CALL :: call :: I :: v19 = p1 $alignment .length()::JM,65760:CL,46938
65761 :: CALL :: call :: Ljava/util/List :: v22 = p1 $alignment .getBlockSets()::JM,65924:CL,38841
65760 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v20 = new org.biojava.nbio.structure.Atom[]::
65765 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,65924
65770 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,65924
65775 :: CALL :: call :: I :: v31 = v29.length()::JM,65779:CL,66890
65779 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v32 = new org.biojava.nbio.structure.Atom[]::DD,65902
65780 :: CALL :: call :: Ljava/util/List :: v34 = v29.getBlocks()::JM,65885:CL,47053
65784 :: CALL :: call :: Ljava/util/Iterator :: v36 = v34.iterator()::JM,65885
65789 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,65885
65803 :: NORM :: declaration :: Ljava/lang/IllegalStateException :: v101 = new java.lang.IllegalStateException::
65829 :: CALL :: call :: Ljava/lang/String :: v114 = format(#(Mismatched block size...), v104)::
65840 :: CALL :: call :: Ljava/util/List :: v49 = v41.getAlignRes()::JM,65849:CL,47077
65844 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v97)::JM,65849
65849 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::JM,65855
65850 :: CALL :: call :: Ljava/lang/Object :: v54 = v52.get(v66)::JM,65855
65855 :: EXPR :: assign :: Ljava/lang/Object :: v55 = CHECKCAST v54::DD,65856
65856 :: PRED :: IF :: Z :: if (v55 == #(null)) goto 266::CD,65865:CD,65869:CF,65874
65865 :: CALL :: call :: Ljava/lang/Object :: v60 = v58.clone()::JM,65869:CL,77172
65869 :: EXPR :: assign :: Ljava/lang/Object :: v61 = CHECKCAST v60::DD,65870
65870 :: EXPR :: modify :: Ljava/lang/Object :: v32[v65] = v61::
65875 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v66 + #(1)::DD,65953:CF,65950
65874 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v65 + #(1)::DD,65952:CF,65875
65876 :: CALL :: call :: I :: v47 = v41.length()::JM,65880:CL,47111
65881 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,65885
65880 :: PRED :: IF :: Z :: if (v66 < v47) goto 214::CF,65954:CD,65840:CD,65844:CD,65849:CD,65850:CD,65855:CD,65856:CD,65874:CD,65875:CD,65876:CD,65950:CD,65951:CD,65952:CD,65953
65885 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 137::CD,65789:CD,65876:CD,65880:CD,65881:CD,65950:CD,65951:CD,65952:CD,65953:CD,65954:CD,65955:CD,65956:JM,65885
65886 :: CALL :: call :: Ljava/util/List :: v69 = v29.getTransformations()::JM,65890:CL,38832
65891 :: CALL :: call :: Ljava/util/List :: v71 = v29.getTransformations()::CL,38832
65890 :: PRED :: IF :: Z :: if (v69 == #(null)) goto 327::CD,65891:CD,65895
65895 :: CALL :: call :: Ljava/lang/Object :: v73 = v71.get(v96)::
65902 :: EXPR :: assign :: I :: v77 = v32.length::DD,65919
65904 :: EXPR :: reference :: Ljava/lang/Object :: v78 = v32[v84]::DD,65908:DD,65913
65909 :: CALL :: call :: V :: transform(v78, v76)::CL,77063
65908 :: PRED :: IF :: Z :: if (v78 == #(null)) goto 373::CD,65909
65913 :: EXPR :: modify :: Ljava/lang/Object :: v20[v82] = v78::
65917 :: EXPR :: assign :: Ljava/lang/Object :: v80 = v82 + #(1)::DD,65960:CF,65918
65919 :: PRED :: IF :: Z :: if (v84 < v77) goto 352::CF,65962:CD,65908:CD,65917:CD,65918:CD,65959:CD,65960:CD,65961
65918 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v84 + #(1)::DD,65961:CF,65959
65920 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,65924
65925 :: EXPR :: reference :: Z :: v88 = org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentTools.$assertionsDisabled::DD,65927
65924 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,65770:CD,65775:CD,65779:CD,65780:CD,65784:CD,65881:CD,65885:CD,65886:CD,65890:CD,65902:CD,65919:CD,65920:CD,65954:CD,65955:CD,65956:CD,65959:CD,65960:CD,65961:CD,65962:CD,65963:JM,65924
65927 :: PRED :: IF :: Z :: if (v88 != #(0)) goto 425::CD,65928
65928 :: CALL :: call :: I :: v90 = p1 $alignment .length()::CL,46938
65938 :: CALL :: call :: Z :: v92 = v8.add(v20)::
65943 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v95 + #(1)::DD,65964
65944 :: CALL :: call :: I :: v14 = v7.size()::JM,65948
65948 :: PRED :: IF :: Z :: if (v94 < v14) goto 51::CD,65750:CD,65756:CD,65760:CD,65761:CD,65765:CD,65920:CD,65924:CD,65925:CD,65927:CD,65938:CD,65943:CD,65944:CD,65962:CD,65963:CD,65964:JM,65948
65951 :: EXPR :: assign :: null :: PHI v87 = v86, v87::CF,65952:DD,65951:DD,65955
65950 :: EXPR :: assign :: null :: PHI v97 = v96, v97::CF,65951:JM,65849:DD,65950:DD,65954
65953 :: EXPR :: assign :: null :: PHI v66 = #(0), v64::JM,65855:DD,65875:DD,65880
65952 :: EXPR :: assign :: null :: PHI v65 = v67, v63::CF,65953:DD,65874:DD,65956
65955 :: EXPR :: assign :: null :: PHI v86 = v85, v87::CF,65956:DD,65951:DD,65960
65954 :: EXPR :: assign :: null :: PHI v96 = v95, v97::CF,65955:DD,65950:DD,65959
65956 :: EXPR :: assign :: null :: PHI v67 = #(0), v65::JM,65885:DD,65952
65959 :: EXPR :: assign :: null :: PHI v98 = v96, v98::CF,65960:DD,65959:DD,65962
65961 :: EXPR :: assign :: null :: PHI v84 = #(0), v81::DD,65918:DD,65919
65960 :: EXPR :: assign :: null :: PHI v82 = v86, v80::CF,65961:DD,65917:DD,65963
65963 :: EXPR :: assign :: null :: PHI v85 = #(0), v82::JM,65924:DD,65955
65962 :: EXPR :: assign :: null :: PHI v95 = v94, v98::CF,65963:DD,65943:DD,65954
65964 :: EXPR :: assign :: null :: PHI v94 = #(0), v93::DD,65948:DD,65962
66063 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentScorer.getMCScore(java.util.List,double,double,double,double)::JM,56536
66062 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentScorer.getMCScore(java.util.List,double,double,double,double)::CE,66063:CD,66070:CD,66074:CD,66079:CD,66080:CD,66194:CD,66262:CD,66263:CD,66264:CD,66265:CD,66266:CD,66267:CD,66268:CD,66269:CD,66285:CD,66286:CD,66287:CD,66299:CD,66300:JM,66257:JM,66183:JM,66253:JM,66095:JM,66190
66070 :: CALL :: call :: I :: v8 = p1 $trans .size()::JM,66257:JM,66194:JM,66183:JM,66262:JM,66264:JM,66266:JM,66253:JM,66079:JM,66095:JM,66190
66074 :: CALL :: call :: Ljava/lang/Object :: v11 = p1 $trans .get(#(0))::JM,66257:JM,66194:JM,66183:JM,66262:JM,66264:JM,66266:JM,66253:JM,66079:JM,66095:JM,66190
66079 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::CF,66080
66080 :: EXPR :: assign :: I :: v13 = v12.length::DD,66260
66090 :: CALL :: call :: Ljava/lang/Object :: v23 = p1 $trans .get(v74)::JM,66257:JM,66194:JM,66183:JM,66262:JM,66264:JM,66266:JM,66253:JM,66079:JM,66095:JM,66190
66095 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::
66096 :: EXPR :: reference :: Ljava/lang/Object :: v25 = v24[v65]::DD,66100
66101 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 96::CD,66102:CD,66104:CD,66275:CD,66276:CD,66277:CD,66278:CD,66279
66100 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 108::CD,66101:CD,66106:CD,66183:CD,66270:CD,66271:CD,66272:CD,66273:CD,66274:CD,66275:CD,66276:CD,66277:CD,66278:CD,66279
66102 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v63 + #(1)::DD,66276
66104 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v62 + #(1)::DD,66275
66106 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v74 + #(1)::DD,66274
66108 :: CALL :: call :: Ljava/lang/Object :: v30 = p1 $trans .get(v55)::JM,66257:JM,66194:JM,66183:JM,66262:JM,66264:JM,66266:JM,66253:JM,66079:JM,66095:JM,66190
66183 :: PRED :: IF :: Z :: if (v55 < v8) goto 117::CF,66275:CD,66108:CD,66182:CD,66270:CD,66271:CD,66272:CD,66273:CD,66274:JM,66257:JM,66194:JM,66183:JM,66262:JM,66264:JM,66266:JM,66253:JM,66079:JM,66095:JM,66190
66182 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v55 + #(1)::DD,66274:CF,66270
66185 :: CALL :: call :: Ljava/lang/Object :: v19 = p1 $trans .get(v74)::JM,66257:JM,66194:JM,66183:JM,66262:JM,66264:JM,66266:JM,66253:JM,66079:JM,66095:JM,66190
66184 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v69 + #(1)::DD,66284:CF,66280
66191 :: EXPR :: assign :: I :: v21 = v20.length::CF,66192
66190 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::CF,66191
66193 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v74 + #(1)::DD,66287:CF,66285
66192 :: PRED :: IF :: Z :: if (v65 < v21) goto 64::CD,66090:CD,66095:CD,66100:CD,66184:CD,66185:CD,66190:CD,66191:CD,66275:CD,66276:CD,66277:CD,66278:CD,66279:CD,66280:CD,66281:CD,66282:CD,66283:CD,66284:JM,66257:JM,66194:JM,66183:JM,66262:JM,66264:JM,66266:JM,66253:JM,66079:CF,66193
66194 :: PRED :: IF :: Z :: if (v73 < v8) goto 58::CD,66185:CD,66190:CD,66191:CD,66192:CD,66193:CD,66280:CD,66281:CD,66282:CD,66283:CD,66284:CD,66285:CD,66286:CD,66287
66237 :: CALL :: call :: D :: v100 = v14.get(v119, v115)::JM,66243:CL,65068
66243 :: EXPR :: assign :: Z :: v101 = v100 < #(-1.0 d)::DD,66244
66244 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 435::CD,66246:CD,66252:CD,66253:CD,66254:CD,66255:CD,66256:CD,66257:CD,66258:CD,66295
66246 :: CALL :: call :: D :: v103 = v14.get(v119, v115)::JM,66252:CL,65068
66253 :: EXPR :: assign :: Ljava/lang/Object :: v106 = p2 $d0  * p2 $d0 ::CF,66254
66252 :: EXPR :: assign :: Ljava/lang/Object :: v105 = v103 * v103::DD,66254:CF,66253
66255 :: EXPR :: assign :: Ljava/lang/Object :: v108 = #(1.0 d) + v107::CF,66256
66254 :: EXPR :: assign :: Ljava/lang/Object :: v107 = v105 / v106::CF,66255
66257 :: EXPR :: assign :: Ljava/lang/Object :: v110 = v109 - p5 $null ::CF,66258
66256 :: EXPR :: assign :: Ljava/lang/Object :: v109 = #(20.0 d) / v108::DD,66257
66259 :: EXPR :: assign :: Ljava/lang/Object :: v113 = v115 + #(1)::DD,66298:CF,66296
66258 :: EXPR :: assign :: Ljava/lang/Object :: v111 = v114 + v110::DD,66295
66261 :: EXPR :: assign :: Ljava/lang/Object :: v116 = v119 + #(1)::DD,66300:CF,66299
66260 :: PRED :: IF :: Z :: if (v115 < v13) goto 416::CD,66237:CD,66243:CD,66244:CD,66259:CD,66295:CD,66296:CD,66297:CD,66298:CF,66261
66263 :: EXPR :: assign :: D :: v120 = CONVERT I to D v71::DD,66264
66262 :: PRED :: IF :: Z :: if (v118 < v8) goto 407::CD,66260:CD,66261:CD,66296:CD,66297:CD,66298:CD,66299:CD,66300:CF,66263
66265 :: EXPR :: assign :: D :: v122 = CONVERT I to D v72::DD,66266
66264 :: EXPR :: assign :: Ljava/lang/Object :: v121 = v120 * p3 $null ::DD,66267:CF,66265
66267 :: EXPR :: assign :: Ljava/lang/Object :: v124 = v121 + v123::CF,66268
66266 :: EXPR :: assign :: Ljava/lang/Object :: v123 = v122 * p4 $gapOpen ::CF,66267
66269 :: NORM :: compound :: D :: return v125::DD,66063
66268 :: EXPR :: assign :: Ljava/lang/Object :: v125 = v117 - v124::CF,66269
66271 :: EXPR :: assign :: null :: PHI v67 = v63, v67::CF,66272:DD,66271:DD,66276
66270 :: EXPR :: assign :: null :: PHI v66 = v62, v66::CF,66271:DD,66270:DD,66275
66273 :: EXPR :: assign :: null :: PHI v68 = v65, v68::CF,66274:DD,66273:DD,66279
66272 :: EXPR :: assign :: null :: PHI v75 = v74, v75::CF,66273:DD,66272:DD,66277
66275 :: EXPR :: assign :: null :: PHI v58 = v62, v57, v66::CF,66276:DD,66280
66274 :: EXPR :: assign :: null :: PHI v55 = v28, v54::JM,66257:JM,66194:JM,66262:JM,66264:JM,66266:JM,66079:JM,66095:JM,66190:DD,66182:DD,66183
66277 :: EXPR :: assign :: null :: PHI v76 = v74, v74, v75::CF,66278:DD,66282
66276 :: EXPR :: assign :: null :: PHI v59 = v56, v63, v67::CF,66277:DD,66281
66279 :: EXPR :: assign :: null :: PHI v69 = v65, v65, v68::DD,66184
66278 :: EXPR :: assign :: null :: PHI v60 = v64, #(1), #(0)::CF,66279:DD,66283
66281 :: EXPR :: assign :: null :: PHI v63 = v72, v59::CF,66282:DD,66102:DD,66271:DD,66276:DD,66286
66280 :: EXPR :: assign :: null :: PHI v62 = v71, v58::CF,66281:DD,66104:DD,66270:DD,66275:DD,66285
66283 :: EXPR :: assign :: null :: PHI v64 = #(0), v60::CF,66284:DD,66101:DD,66278
66282 :: EXPR :: assign :: null :: PHI v74 = v73, v76::CF,66283:JM,66257:JM,66194:JM,66183:JM,66262:JM,66264:JM,66266:JM,66079:JM,66095:JM,66190:DD,66106:DD,66193:DD,66272:DD,66277
66285 :: EXPR :: assign :: null :: PHI v71 = #(0), v62::CF,66286:DD,66263:DD,66280
66284 :: EXPR :: assign :: null :: PHI v65 = #(0), v61::DD,66192:DD,66273:DD,66279:JM,66257:JM,66194:JM,66183:JM,66262:JM,66264:JM,66266:JM,66253:JM,66079:JM,66095:JM,66190
66287 :: EXPR :: assign :: null :: PHI v73 = #(0), v70::DD,66194:DD,66282
66286 :: EXPR :: assign :: null :: PHI v72 = #(0), v63::CF,66287:DD,66265:DD,66281
66295 :: EXPR :: assign :: null :: PHI v112 = v114, v111::DD,66296:CF,66259
66297 :: EXPR :: assign :: null :: PHI v119 = v118, v119::CF,66298:DD,66261:DD,66297
66296 :: EXPR :: assign :: null :: PHI v114 = v117, v112::CF,66297:DD,66258:DD,66295:DD,66299
66299 :: EXPR :: assign :: null :: PHI v117 = #(0.0 d), v114::CF,66300:DD,66268:DD,66296
66298 :: EXPR :: assign :: null :: PHI v115 = #(0), v113::DD,66259:DD,66260
66300 :: EXPR :: assign :: null :: PHI v118 = #(0), v116::DD,66262:DD,66297
66475 :: EXIT :: exit :: D :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentScorer.getRMSD(java.util.List)::JM,56628
66474 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentScorer.getRMSD(java.util.List)::CE,66475:CD,66533:CD,66537:CD,66538:CD,66539:CD,66540:CD,66544:CD,66562:CD,66563:CD,66564:JM,66529:JM,66499:JM,66485:JM,66517
66480 :: CALL :: call :: Ljava/lang/Object :: v12 = p1 $transformed .get(v52)::JM,66529:JM,66499:JM,66485:JM,66517:JM,66537
66485 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::
66486 :: EXPR :: reference :: Ljava/lang/Object :: v14 = v13[v43]::DD,66490
66490 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 49::CD,66492:CD,66513:CD,66517:CD,66518:CD,66547:CD,66548:CD,66549:CD,66550:CD,66551:CD,66552:CD,66553:CD,66554:CD,66555:CD,66556:CD,66557
66492 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v52 + #(1)::DD,66553
66494 :: CALL :: call :: Ljava/lang/Object :: v21 = p1 $transformed .get(v33)::JM,66529:JM,66499:JM,66485:JM,66517:JM,66537
66499 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::
66500 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v22[v46]::DD,66504
66505 :: CALL :: call :: D :: v25 = getDistanceFast(v14, v23)::JM,66510:CL,77438
66504 :: PRED :: IF :: Z :: if (v23 == #(null)) goto 91::CF,66545:CD,66505:CD,66510:CD,66511:CD,66546
66511 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v32 + #(1)::DD,66546:CF,66545
66510 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v31 + v25::DD,66545:CF,66511
66513 :: CALL :: call :: I :: v19 = p1 $transformed .size()::JM,66529:JM,66499:JM,66485:JM,66517:JM,66537
66512 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v33 + #(1)::DD,66553:CF,66547
66517 :: PRED :: IF :: Z :: if (v33 < v19) goto 58::CD,66494:CD,66499:CD,66504:CD,66512:CD,66513:CD,66545:CD,66546:CD,66547:CD,66548:CD,66549:CD,66550:CD,66551:CD,66552:CD,66553:JM,66529:JM,66485:JM,66517:JM,66537:CF,66518
66519 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v45 + #(1)::DD,66555:CF,66520
66518 :: PRED :: IF :: Z :: if (v32 <= #(0)) goto 122::CF,66554:CD,66519:CD,66520:CD,66521:CD,66522:CD,66555:CD,66556:CD,66557
66521 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v31 / v35::CF,66522
66520 :: EXPR :: assign :: D :: v35 = CONVERT I to D v32::CF,66521
66523 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v47 + #(1)::DD,66561:CF,66558
66522 :: EXPR :: assign :: Ljava/lang/Object :: v37 = v44 + v36::DD,66554
66524 :: CALL :: call :: Ljava/lang/Object :: v8 = p1 $transformed .get(v52)::JM,66529:JM,66499:JM,66485:JM,66517:JM,66537
66529 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::CF,66530
66531 :: PRED :: IF :: Z :: if (v43 < v10) goto 19::CD,66480:CD,66485:CD,66490:CD,66523:CD,66524:CD,66529:CD,66530:CD,66554:CD,66555:CD,66556:CD,66557:CD,66558:CD,66559:CD,66560:CD,66561:JM,66499:JM,66517:JM,66537:CF,66532
66530 :: EXPR :: assign :: I :: v10 = v9.length::CF,66531
66533 :: CALL :: call :: I :: v6 = p1 $transformed .size()::JM,66529:JM,66499:JM,66485:JM,66517:JM,66537
66532 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v52 + #(1)::DD,66564:CF,66562
66537 :: PRED :: IF :: Z :: if (v51 < v6) goto 13::CD,66524:CD,66529:CD,66530:CD,66531:CD,66532:CD,66533:CD,66558:CD,66559:CD,66560:CD,66561:CD,66562:CD,66563:CD,66564:CF,66538
66539 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v49 / v55::JM,66544:JM,66540
66538 :: EXPR :: assign :: D :: v55 = CONVERT I to D v50::CF,66539
66540 :: CALL :: call :: D :: v58 = sqrt(v56)::JM,66544:JM,66540
66545 :: EXPR :: assign :: null :: PHI v28 = v31, v26::CF,66546:DD,66551
66544 :: NORM :: compound :: D :: return v58::DD,66475
66547 :: EXPR :: assign :: null :: PHI v44 = v41, v44::CF,66548:DD,66522:DD,66547:DD,66554
66546 :: EXPR :: assign :: null :: PHI v29 = v32, v27::DD,66552:CF,66512
66549 :: EXPR :: assign :: null :: PHI v53 = v52, v53::CF,66550:DD,66549:DD,66556
66548 :: EXPR :: assign :: null :: PHI v45 = v42, v45::CF,66549:DD,66519:DD,66548:DD,66555
66551 :: EXPR :: assign :: null :: PHI v31 = #(0.0 d), v28::CF,66552:DD,66510:DD,66521:DD,66545
66550 :: EXPR :: assign :: null :: PHI v46 = v43, v46::CF,66551:DD,66550:DD,66557
66553 :: EXPR :: assign :: null :: PHI v33 = v17, v30::JM,66529:JM,66499:JM,66485:JM,66537:DD,66512:DD,66517
66552 :: EXPR :: assign :: null :: PHI v32 = #(0), v29::CF,66553:DD,66511:DD,66518:DD,66520:DD,66546
66555 :: EXPR :: assign :: null :: PHI v39 = v42, v45, v34::CF,66556:DD,66559
66554 :: EXPR :: assign :: null :: PHI v38 = v41, v44, v37::CF,66555:DD,66558
66557 :: EXPR :: assign :: null :: PHI v47 = v43, v46, v46::DD,66523
66556 :: EXPR :: assign :: null :: PHI v54 = v52, v53, v53::CF,66557:DD,66560
66559 :: EXPR :: assign :: null :: PHI v42 = v50, v39::CF,66560:DD,66548:DD,66555:DD,66563
66558 :: EXPR :: assign :: null :: PHI v41 = v49, v38::CF,66559:DD,66547:DD,66554:DD,66562
66561 :: EXPR :: assign :: null :: PHI v43 = #(0), v40::DD,66531:DD,66550:DD,66557:JM,66529:JM,66499:JM,66485:JM,66517:JM,66537
66560 :: EXPR :: assign :: null :: PHI v52 = v51, v54::CF,66561:JM,66529:JM,66499:JM,66485:JM,66517:JM,66537:DD,66492:DD,66532:DD,66549:DD,66556
66563 :: EXPR :: assign :: null :: PHI v50 = #(0), v42::CF,66564:DD,66538:DD,66559
66562 :: EXPR :: assign :: null :: PHI v49 = #(0.0 d), v41::CF,66563:DD,66539:DD,66558
66564 :: EXPR :: assign :: null :: PHI v51 = #(0), v48::DD,66537:DD,66560:JM,66529:JM,66499:JM,66485:JM,66517
66621 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentScorer.getAvgTMScore(java.util.List,java.util.List)::CD,66635:CD,66756:CD,66760:CD,66779:JM,66659:JM,66754:JM,66649:JM,66670
66635 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v81 = new java.lang.IllegalArgumentException::
66642 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v76 + #(1)::DD,66776
66644 :: CALL :: call :: Ljava/lang/Object :: v17 = p1 $transformed .get(v77)::JM,66659:JM,66754:JM,66649:JM,66760:JM,66670
66649 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::CF,66650
66650 :: EXPR :: assign :: I :: v19 = v18.length::DD,66706
66654 :: CALL :: call :: Ljava/lang/Object :: v23 = p1 $transformed .get(v78)::JM,66659:JM,66754:JM,66649:JM,66760:JM,66670
66659 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::
66660 :: EXPR :: reference :: Ljava/lang/Object :: v25 = v24[v43]::DD,66664
66665 :: CALL :: call :: Ljava/lang/Object :: v28 = p1 $transformed .get(v72)::JM,66659:JM,66754:JM,66649:JM,66760:JM,66670
66664 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 157::CD,66665:CD,66670:CD,66675:JM,66659:JM,66754:JM,66649:JM,66760
66671 :: EXPR :: reference :: Ljava/lang/Object :: v30 = v29[v43]::DD,66675
66670 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::
66675 :: PRED :: IF :: Z :: if (v30 == #(null)) goto 157::CD,66676:CD,66690:JM,66659:JM,66754:JM,66649:JM,66760:JM,66670
66676 :: CALL :: call :: Ljava/lang/Object :: v32 = p1 $transformed .get(v78)::JM,66659:JM,66754:JM,66649:JM,66760:JM,66670
66690 :: CALL :: call :: Ljava/lang/Object :: v36 = p1 $transformed .get(v72)::JM,66659:JM,66754:JM,66649:JM,66760:JM,66670
66705 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v43 + #(1)::DD,66770
66706 :: PRED :: IF :: Z :: if (v43 < v19) goto 85::CD,66654:CD,66659:CD,66664:CD,66705:CD,66767:CD,66768:CD,66770:JM,66754:JM,66649:JM,66760:JM,66670
66720 :: CALL :: call :: Ljava/lang/Object :: v53 = p2 $lengths .get(v78)::JM,66659:JM,66754:JM,66649:JM,66760:JM,66670
66730 :: CALL :: call :: Ljava/lang/Object :: v58 = p2 $lengths .get(v72)::JM,66659:JM,66754:JM,66649:JM,66760:JM,66670
66740 :: CALL :: call :: D :: v63 = getTMScore(v50, v51, v56, v61)::CL,77491
66749 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v72 + #(1)::DD,66776
66750 :: CALL :: call :: I :: v15 = p1 $transformed .size()::JM,66659:JM,66754:JM,66649:JM,66760:JM,66670
66755 :: EXPR :: assign :: Ljava/lang/Object :: v73 = v77 + #(1)::DD,66779
66754 :: PRED :: IF :: Z :: if (v69 < v15) goto 48::CD,66644:CD,66649:CD,66650:CD,66706:CD,66720:CD,66730:CD,66740:CD,66749:CD,66750:CD,66767:CD,66768:CD,66770:CD,66775:CD,66776:JM,66659:JM,66754:JM,66760:JM,66670:CF,66755
66756 :: CALL :: call :: I :: v11 = p1 $transformed .size()::JM,66659:JM,66754:JM,66649:JM,66760:JM,66670
66760 :: PRED :: IF :: Z :: if (v76 < v11) goto 39::CD,66642:CD,66750:CD,66754:CD,66755:CD,66756:CD,66775:CD,66776:CD,66779
66767 :: EXPR :: assign :: null :: PHI v78 = v77, v78::CF,66768:JM,66659:JM,66754:JM,66649:JM,66760:JM,66670:DD,66767:DD,66775
66768 :: EXPR :: assign :: null :: PHI v72 = v69, v72::JM,66659:JM,66754:JM,66649:JM,66760:JM,66670:DD,66749:DD,66768
66770 :: EXPR :: assign :: null :: PHI v43 = #(0), v41::DD,66705:DD,66706
66775 :: EXPR :: assign :: null :: PHI v77 = v76, v78::CF,66776:JM,66659:JM,66754:JM,66649:JM,66760:JM,66670:DD,66755:DD,66767
66776 :: EXPR :: assign :: null :: PHI v69 = v13, v66::DD,66754:DD,66768:JM,66659:JM,66649:JM,66760:JM,66670
66779 :: EXPR :: assign :: null :: PHI v76 = #(0), v73::DD,66642:DD,66760:DD,66775:JM,66659:JM,66754:JM,66649:JM,66670
66855 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.cath.CathDomain.getClassId()::
66854 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getClassId()::CE,66855:CD,66861
66858 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .classId::DD,66861
66861 :: NORM :: compound :: Ljava/lang/Integer :: return v3::DD,66855
66863 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getArchitectureId()::CE,66864:CD,66870
66864 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.cath.CathDomain.getArchitectureId()::JM,56859
66867 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .architectureId::DD,66870
66870 :: NORM :: compound :: Ljava/lang/Integer :: return v3::CF,66864
66873 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.cath.CathDomain.getTopologyId()::JM,56859
66872 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getTopologyId()::CE,66873:CD,66879
66876 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .topologyId::DD,66879
66879 :: NORM :: compound :: Ljava/lang/Integer :: return v3::DD,66873
66881 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getHomologyId()::CE,66882:CD,66888
66882 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.cath.CathDomain.getHomologyId()::JM,56859
66885 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .homologyId::DD,66888
66888 :: NORM :: compound :: Ljava/lang/Integer :: return v3::DD,66882
66891 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.length()::JM,56910:JM,65779
66890 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.length()::CE,66891:CD,66897:CD,66904
66894 :: EXPR :: reference :: I :: v3 = p0 $this .length::DD,66897
66897 :: PRED :: IF :: Z :: if (v3 != #(-1)) goto 13::CD,66898
66898 :: CALL :: call :: V :: p0 $this .updateLength()::CL,77605
66901 :: EXPR :: reference :: I :: v6 = p0 $this .length::DD,66904
66904 :: NORM :: compound :: I :: return v6::DD,66891
66909 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.getCoreLength()::CE,66910:CD,66916:CD,66923
66910 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.getCoreLength()::JM,56975
66913 :: EXPR :: reference :: I :: v3 = p0 $this .coreLength::DD,66916
66917 :: CALL :: call :: V :: p0 $this .updateCoreLength()::CL,77670
66916 :: PRED :: IF :: Z :: if (v3 != #(-1)) goto 13::CD,66917
66920 :: EXPR :: reference :: I :: v6 = p0 $this .coreLength::DD,66923
66923 :: NORM :: compound :: I :: return v6::DD,66910
66978 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.MultipleAlignmentEnsembleImpl.updateAtomArrays()::JM,44113:JM,44098:JM,44146:JM,44115:JM,44166:JM,35975:JM,44120:JM,44141:JM,35982:JM,44094:CD,66986:CD,66993:CD,66997:CD,67020:CD,67024
66986 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,66990
66990 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atomArrays = v5::
66993 :: CALL :: call :: Ljava/util/List :: v8 = p0 $this .getStructureIdentifiers()::JM,67024:CL,46823
66997 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,67024
67002 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.next()::JM,67024
67007 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v18 = v3.getRepresentativeAtoms(v16)::CL,77735
67012 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .atomArrays::
67015 :: CALL :: call :: Z :: v21 = v19.add(v18)::
67020 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,67024
67024 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 33::CD,67002:CD,67007:CD,67015:CD,67020:JM,67024
69275 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::CF,69276:CD,69279:CD,69281
69276 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::JM,59172:JM,59109
69279 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_SPLIT_DIR::CF,69281
69281 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,69276
69283 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::CF,69284:CD,69287:CD,69289
69284 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::JM,59172:JM,59109
69287 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_SPLIT_DIR::CF,69289
69289 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,69284
69291 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::CF,69292:CD,69295:CD,69297
69292 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::JM,59132:JM,59198
69295 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_OBSOLETE_DIR::CF,69297
69297 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,69292
69299 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::CF,69300:CD,69303:CD,69305
69300 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::JM,59132:JM,59198
69303 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_OBSOLETE_DIR::CF,69305
69305 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,69300
69481 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueRange :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::JM,64201
69480 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::CE,69481:CD,69486:CD,69491:CD,69495:CD,69548:CD,69549:CD,69554:CD,69559:CD,69564:CD,69594:CD,69595:CD,69600:CD,69605:CD,69614
69486 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $s )::JM,69506:JM,69525:JM,69495
69491 :: CALL :: call :: Z :: v7 = v5.matches()::JM,69506:JM,69525:JM,69495
69495 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 125::CD,69496:CD,69501:CD,69506:CD,69540:JM,74848:JM,74851:JM,74845:CD,69547:CD,69576:CD,69581:CD,69586:CD,69593:JM,69525:JM,69495
69496 :: CALL :: call :: Ljava/lang/String :: v28 = v5.group(#(1))::JM,69506:JM,69525:JM,69495
69501 :: CALL :: call :: Ljava/lang/String :: v31 = v5.group(#(2))::JM,69506:JM,69525:JM,69495
69507 :: CALL :: call :: Ljava/lang/String :: v33 = v5.group(#(2))::JM,69506:JM,69525:JM,69495
69506 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 80::CD,69507:CD,69512:CD,69516:CD,69520:CD,69525:JM,69506:JM,69495
69512 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = fromString(v33)::CL,74739
69516 :: CALL :: call :: V :: v35.setChainId(v28)::CL,63339
69520 :: CALL :: call :: Ljava/lang/String :: v39 = v5.group(#(3))::JM,69506:JM,69525:JM,69495
69525 :: PRED :: IF :: Z :: if (v39 != #(null)) goto 67::CD,69527:CD,69532:CD,69536:JM,69506:JM,69525:JM,69495
69527 :: CALL :: call :: Ljava/lang/String :: v41 = v5.group(#(3))::JM,69506:JM,69525:JM,69495
69532 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v43 = fromString(v41)::CL,74739
69536 :: CALL :: call :: V :: v43.setChainId(v28)::CL,63339
69540 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v47 = new org.biojava.nbio.structure.ResidueRange::DD,69547
69547 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v47::DD,69481
69549 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
69548 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v53 = new java.lang.IllegalArgumentException::
69554 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v54.append(p1 $s )::
69559 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#( was not valid))::
69564 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
69576 :: CALL :: call :: Ljava/util/regex/Matcher :: v11 = v9.matcher(p1 $s )::
69581 :: CALL :: call :: Z :: v13 = v11.matches()::
69586 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v23 = new org.biojava.nbio.structure.ResidueRange::DD,69593
69593 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v23::DD,69481
69595 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
69594 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
69600 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v15.append(p1 $s )::
69605 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
69614 :: EXPR :: assign :: Ljava/lang/Exception :: v49 = catch <exc>::
69670 :: EXPR :: modify :: I :: p0 $this .port = #(-1)::
69673 :: EXPR :: modify :: I :: p0 $this .hashCode = #(-1)::
69677 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,69680
69676 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,69677:CD,69680:JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69681 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
69680 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,69681:JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69685 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69691 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,69950:CD,69692:CD,69693:CD,69698
69690 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,69949
69693 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69692 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69698 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,69690:CD,69691:CD,69949:CD,69950
69701 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,69702:CD,69707:JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69700 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,69950
69702 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69707 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,69700:CD,69701:CD,69950:JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69708 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69717 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,69951:CD,69718
69719 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69718 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,69951
69723 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,69952:CD,69724:CD,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69724 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69729 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,69952
69731 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,69732:CD,69738:CD,69742:CD,69747:CD,69750:CD,69751:CD,69953:CD,69954:CD,69955:JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69732 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69738 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,69955:JM,69747
69742 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,69729:JM,69731:JM,69762:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758:JM,69955
69747 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,69954:CD,69748:CD,69955
69748 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,69954
69751 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,69954:CD,69752:CD,69955
69750 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,69953
69753 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69752 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,69954:CD,69753:CD,69758:CD,69955:JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949
69759 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .protocol = v52::
69758 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,69954:CD,69731
69763 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,69767:CD,69772:CD,69773:CD,69780:CD,69790:CD,69956:CD,69957:CD,69958:CD,69959
69762 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,69958:CD,69763
69764 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,69772
69767 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,69772
69773 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,69956
69772 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,69958:CD,69773:CD,69780:CD,69790:CD,69956:CD,69957:CD,69959
69774 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,69956
69777 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,69780
69781 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,69784:JM,69789
69780 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,69957:CD,69784:CD,69789
69784 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,69784:JM,69789
69789 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,69957
69791 :: EXPR :: reference :: Ljava/lang/String :: v64 = p1 $context .protocol::DD,69794
69790 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,69958:CD,69959
69794 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .protocol = v64::
69797 :: EXPR :: reference :: Ljava/lang/String :: v65 = p1 $context .authority::DD,69800
69800 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authority = v65::
69803 :: EXPR :: reference :: Ljava/lang/String :: v66 = p1 $context .userInfo::DD,69806
69806 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .userInfo = v66::
69809 :: EXPR :: reference :: Ljava/lang/String :: v67 = p1 $context .host::DD,69812
69812 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .host = v67::
69815 :: EXPR :: reference :: I :: v68 = p1 $context .port::DD,69818
69818 :: EXPR :: modify :: I :: p0 $this .port = v68::
69821 :: EXPR :: reference :: Ljava/lang/String :: v69 = p1 $context .file::DD,69824
69824 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .file = v69::
69827 :: EXPR :: reference :: Ljava/lang/String :: v70 = p1 $context .path::DD,69830
69830 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .path = v70::
69837 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
69838 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
69843 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69848 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,69906:JM,69961:JM,69899:JM,69898
69857 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CF,69960:CD,69861
69861 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::JM,69960
69867 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
69866 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
69872 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
69875 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
69880 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
69889 :: EXPR :: modify :: Ljava/net/URLStreamHandler :: p0 $this .handler = v78::
69892 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69899 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,69729:JM,69731:JM,69698:JM,69961:JM,69707:JM,69899:JM,69898:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758:JM,69956:JM,69958:JM,69773:JM,69676
69898 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CF,69961:CD,69899:CD,69900
69900 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,69729:JM,69731:JM,69698:JM,69956:JM,69958:JM,69961:JM,69707:JM,69899:JM,69898:JM,69773:JM,69676:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758
69906 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = v83::
69909 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 498::CD,69910
69911 :: EXPR :: reference :: Ljava/lang/String :: v85 = p1 $context .query::DD,69914
69910 :: PRED :: IF :: Z :: if (v51 != v84) goto 498::CD,69920
69914 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .query = v85::
69917 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .ref::DD,69920
69921 :: EXPR :: reference :: Ljava/lang/String :: v87 = p1 $context .ref::DD,69924
69920 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 498::
69924 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = v87::
69937 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
69936 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
69949 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,69690:DD,69691:DD,69692:DD,69701:DD,69752:JM,69729:JM,69731:JM,69698:JM,69906:JM,69717:JM,69707:JM,69723:JM,69899:JM,69898:JM,69949:JM,69758:DD,69961
69951 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,69723:JM,69729:JM,69731:JM,69698:JM,69961:JM,69707:JM,69899:JM,69898:JM,69747:JM,69906:JM,69717:JM,69949:JM,69758:DD,69953:DD,69954:JM,69956:JM,69958:JM,69773:JM,69676
69950 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,69700:DD,69701:JM,69729:JM,69731:JM,69698:JM,69961:JM,69707:JM,69899:JM,69898:JM,69747:JM,69906:JM,69717:JM,69723:JM,69949:JM,69758:DD,69718:DD,69951
69953 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,69729:JM,69731:JM,69698:JM,69906:JM,69717:JM,69961:JM,69707:JM,69723:JM,69899:JM,69898:JM,69949:JM,69758:DD,69748:DD,69750:DD,69752:JM,69747:CF,69751
69952 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,69751
69955 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,69759:DD,69763:JM,69772:DD,69957
69954 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,69955:JM,69729:JM,69731:JM,69698:JM,69906:JM,69717:JM,69961:JM,69707:JM,69723:JM,69899:JM,69898:JM,69949:JM,69758:DD,69910
69957 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,69790
69956 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,69958
69959 :: EXPR :: assign :: null :: PHI v73 = #(0), #(0), #(0), #(1)::DD,69909
69958 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::CF,69959:DD,69857:DD,69960
69961 :: EXPR :: assign :: null :: PHI v84 = v21, v80::DD,69910:CF,69909
69960 :: EXPR :: assign :: null :: PHI v78 = v71, v77::DD,69889
70351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.flagLoading(java.lang.String)::CD,70359:CD,70364
70359 :: CALL :: call :: Z :: v6 = v4.contains(p1 $name )::JM,70364
70364 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 24::CD,70368
70368 :: CALL :: call :: Z :: v10 = v8.add(p1 $name )::
70384 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructureById(java.lang.String)::CD,70389:CD,70394
70389 :: CALL :: call :: Ljava/io/InputStream :: v5 = p0 $this .getInputStream(p1 $pdbId )::CL,80796
70394 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getStructure(v5)::CL,74293:CL,80884
70405 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.flagLoadingFinished(java.lang.String)::CD,70413
70413 :: CALL :: call :: Z :: v6 = v4.remove(p1 $name )::
70441 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainDescriptionInstalled()::CD,70448:CD,70452:CD,70465:CD,70477:CD,70488:CD,70500
70445 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainDescription::JM,70452
70448 :: CALL :: call :: Z :: v5 = v3.get()::JM,70452
70452 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,70454:CD,70458:CD,70482:CD,70508
70454 :: CALL :: call :: Z :: v8 = p0 $this .domainDescriptionFileAvailable()::JM,70458:CL,80971
70459 :: CALL :: call :: V :: p0 $this .downloadDomainDescriptionFile()::CL,80995
70458 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,70459
70465 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
70474 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainDescription::
70477 :: CALL :: call :: V :: v16.set(#(0))::
70482 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile()::CL,81038
70488 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
70497 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainDescription::
70500 :: CALL :: call :: V :: v24.set(#(0))::
70505 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainDescription::JM,70508
70508 :: CALL :: call :: V :: v26.set(#(1))::JM,70508
70524 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomallInstalled()::CD,70528:CD,70534:CD,70538:CD,70567:CD,70579:CD,70590:CD,70602
70528 :: CALL :: call :: V :: p0 $this .ensureDomainListInstalled()::CL,81087
70531 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v4 = p0 $this .installedDomainList::JM,70538
70534 :: CALL :: call :: Z :: v6 = v4.get()::JM,70538
70539 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v33 = p0 $this .installedDomall::JM,70542
70538 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 24::CD,70542:CD,70550:CD,70554
70542 :: CALL :: call :: V :: v33.set(#(0))::JM,70542
70547 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedDomall::JM,70554
70550 :: CALL :: call :: Z :: v10 = v8.get()::JM,70554
70554 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 35::CD,70556:CD,70560:CD,70584:CD,70610
70556 :: CALL :: call :: Z :: v12 = p0 $this .domallFileAvailable()::JM,70560:CL,81170
70561 :: CALL :: call :: V :: p0 $this .downloadDomallFile()::CL,81194
70560 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 74::CD,70561
70567 :: CALL :: call :: Ljava/lang/String :: v18 = v14.getMessage()::
70576 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v20 = p0 $this .installedDomall::
70579 :: CALL :: call :: V :: v20.set(#(0))::
70584 :: CALL :: call :: V :: p0 $this .parseCathDomall()::CL,81237
70590 :: CALL :: call :: Ljava/lang/String :: v26 = v23.getMessage()::
70599 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v28 = p0 $this .installedDomall::
70602 :: CALL :: call :: V :: v28.set(#(0))::
70607 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v30 = p0 $this .installedDomall::JM,70610
70610 :: CALL :: call :: V :: v30.set(#(1))::JM,70610
70631 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase(java.lang.String)::CD,70635:CD,70640:CD,70645:CD,70650:CD,70663:CD,70668:CD,70673:CD,70681:CD,70685:CD,70689:CD,70694:CD,70695:CD,70701:CD,70786:CD,70791:CD,70796:CD,70810:CD,70811
70635 :: PRED :: IF :: Z :: if (p1 $version  != #(null)) goto 8::CF,70810:CD,70636
70636 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.ecod.EcodFactory.defaultVersion::DD,70810
70640 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
70645 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(v5)::
70650 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
70663 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
70668 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(v5)::
70673 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
70681 :: CALL :: call :: V :: releaseReferences()::CL,81286
70685 :: CALL :: call :: Ljava/lang/String :: v28 = v5.toLowerCase()::
70689 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,70694
70695 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 96::CF,70811:CD,70696:CD,70700
70694 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,70695:JM,70700
70696 :: CALL :: call :: Ljava/lang/Object :: v33 = v31.get()::JM,70700
70701 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 210::CD,70705:JM,35975:JM,35982:CD,70723:JM,81376:JM,81379:JM,81369:CD,70731:CD,70735:CD,70740:CD,70748:CD,70752:CD,70756:CD,70761
70700 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::DD,70811
70705 :: CALL :: call :: Ljava/lang/String :: v40 = v38.getSimpleName()::
70723 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodInstallation :: v46 = new org.biojava.nbio.structure.ecod.EcodInstallation::
70731 :: CALL :: call :: Ljava/lang/String :: v50 = v5.toLowerCase()::
70735 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v51 = new java.lang.ref.SoftReference::
70740 :: CALL :: call :: Ljava/lang/Object :: v54 = v48.put(v50, v51)::
70748 :: CALL :: call :: Ljava/lang/String :: v57 = v46.getVersion()::CL,81436
70752 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toLowerCase()::
70756 :: CALL :: call :: Z :: v61 = v55.containsKey(v59)::JM,70761
70761 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 210::CD,70764:CD,70768:CD,70772:CD,70777
70764 :: CALL :: call :: Ljava/lang/String :: v65 = v46.getVersion()::CL,81436
70768 :: CALL :: call :: Ljava/lang/String :: v68 = v65.toLowerCase()::
70772 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v69 = new java.lang.ref.SoftReference::
70777 :: CALL :: call :: Ljava/lang/Object :: v72 = v63.put(v68, v69)::
70786 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::
70791 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v76.append(v5)::
70796 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
70811 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,70701
70810 :: EXPR :: assign :: null :: PHI v5 = p1 $version , v4::
70859 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::CE,70860:CD,70919:CD,70920:CD,70928:CD,70933:CD,70934
70860 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::JM,60277:JM,60312:JM,60328
70897 :: CALL :: call :: V :: p0 $this .indexDomains()::CL,81460
70916 :: EXPR :: reference :: Ljava/util/Map :: v11 = p0 $this .domainMap::DD,70919
70919 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 27::CD,70897:CF,70920
70921 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $pdbId .toLowerCase()::
70920 :: PRED :: IF :: Z :: if (p1 $pdbId  == #(null)) goto 96::CD,70921
70928 :: CALL :: call :: Ljava/lang/Object :: v32 = v30.get(v29)::JM,70933
70933 :: EXPR :: assign :: Ljava/lang/Object :: v33 = CHECKCAST v32::DD,70934:JM,70985
70934 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 139::CF,70952:CD,70951:CD,70953:CD,70961:CD,70981:CD,70985:CD,71002
70951 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,70860
70953 :: CALL :: call :: I :: v36 = v33.size()::
70952 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,71002
70961 :: CALL :: call :: Ljava/util/Iterator :: v39 = v33.iterator()::JM,70985
70966 :: CALL :: call :: Ljava/lang/Object :: v44 = v39.next()::JM,70985
70971 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v46 = new org.biojava.nbio.structure.ecod.EcodDomain::
70976 :: CALL :: call :: Z :: v49 = v34.add(v46)::
70981 :: CALL :: call :: Z :: v41 = v39.hasNext()::JM,70985
70985 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 166::CD,70966:CD,70971:JM,81773:CD,70976:CD,70981:JM,70985
71002 :: NORM :: compound :: Ljava/util/List :: return v34::DD,70860
71061 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String)::CD,71065
71065 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v5 = getSCOP(p1 $version , #(0))::CL,81823
71073 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::CE,71074:CD,71078:CD,71083:CD,71084:CD,71085:CD,71093:CD,71098:CD,71103:CD,71108:CD,71113:CD,71117:CD,71122:CD,71132
71074 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::JM,60409:JM,60410
71078 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = p0 $this .requestRemoteDomainByScopID(p1 $scopId )::JM,71083:CL,81943
71083 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v5::DD,71074
71085 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
71084 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v7 = new java.lang.RuntimeException::
71090 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .server::
71093 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(v11)::
71098 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(getDomainByScopID?scopId=))::
71103 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(p1 $scopId )::
71108 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#(&version=))::
71113 :: CALL :: call :: Ljava/lang/String :: v23 = p0 $this .getScopVersion()::CL,82038
71117 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v23)::
71122 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
71132 :: EXPR :: assign :: Ljava/lang/Exception :: v6 = catch <exc>::
71135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::CE,71136:CD,71140:CD,71156:CD,71161:CD,71166:CD,71175:CD,71181:CD,71186:JM,71207
71136 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::JM,60409:JM,60410
71140 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,82148
71156 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
71161 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(p1 $scopId )::JM,71207
71166 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,71207
71175 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $scopId .substring(#(1), #(5))::JM,71207
71181 :: CALL :: call :: Ljava/util/List :: v16 = p0 $this .getDomainsForPDB(v14)::JM,71186:JM,71197:JM,71213:CL,71240
71187 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,71136
71186 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 71::CD,71187:CD,71188:CD,71209:CD,71213:JM,71197
71188 :: CALL :: call :: Ljava/util/Iterator :: v19 = v16.iterator()::JM,71197:JM,71213
71193 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,71197:JM,71213
71197 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,71208
71198 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getScopId()::JM,71207:CL,56755
71202 :: CALL :: call :: Z :: v29 = v27.equalsIgnoreCase(p1 $scopId )::JM,71207
71207 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 110::CD,71208:CD,71209:CD,71213:JM,71197
71209 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,71197:JM,71213
71208 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v25::DD,71136
71213 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,71193:CD,71197:CD,71198:CD,71202:CD,71207:CD,71214:JM,71213
71214 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,71136
71241 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::JM,60472:JM,60571:JM,71186:JM,71197:JM,71213
71240 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::CE,71241:CD,71245:CD,71258:CD,71262:CD,71267:CD,71268:CD,71272:CD,71295:CD,71296:CD,71301:CD,71306:CD,71311:CD,71328
71245 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,82148
71258 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .toLowerCase()::
71262 :: CALL :: call :: Ljava/lang/Object :: v12 = v8.get(v10)::JM,71267
71267 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,71272:JM,71325:CF,71268
71268 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,71273:DD,71326
71273 :: NORM :: compound :: Ljava/util/List :: return v14::DD,71241
71272 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 49::CD,71273:CD,71274:CD,71321:CD,71325:CD,71326
71274 :: CALL :: call :: Ljava/util/Iterator :: v18 = v13.iterator()::JM,71325
71279 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.next()::JM,71325
71284 :: CALL :: call :: Ljava/lang/Object :: v26 = v24.clone()::JM,71288:CL,82212
71289 :: CALL :: call :: Z :: v29 = v14.add(v27)::
71288 :: EXPR :: assign :: Ljava/lang/Object :: v27 = CHECKCAST v26::
71295 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v31 = new java.lang.RuntimeException::
71296 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
71301 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v32.append(v34)::
71306 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( subclass does not su...))::
71311 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
71321 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,71325
71325 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 61::CD,71279:CD,71284:CD,71288:CD,71289:CD,71321:JM,71325:CF,71326
71326 :: NORM :: compound :: Ljava/util/List :: return v14::DD,71241
71328 :: EXPR :: assign :: Ljava/lang/Exception :: v30 = catch <exc>::
71351 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::JM,60472:JM,60571
71350 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::CE,71351:CD,71356:CD,71360:CD,71368:CD,71373:CD,71378:CD,71383:CD,71387:CD,71392:CD,71400:CD,71404:CD,71408:CD,71412:CD,71416:CD,71426:CD,71427:CD,71435:CD,71440:CD,71445:CD,71450:CD,71455:CD,71459:CD,71464:CD,71474:CD,71475:CD,71476
71356 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
71360 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
71368 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getDomainsForPDB?pdbId=))::
71373 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p1 $pdbId )::
71378 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(&version=))::
71383 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getScopVersion()::CL,82038
71387 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
71392 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
71400 :: CALL :: call :: Ljava/io/InputStream :: v27 = getInputStream(v5)::CL,71899
71404 :: CALL :: call :: Ljava/lang/String :: v29 = convertStreamToString(v27)::JM,71412:JM,71416:CL,71913
71408 :: CALL :: call :: Ljava/lang/String :: v31 = v29.trim()::JM,71412:JM,71416
71412 :: CALL :: call :: Z :: v33 = v31.isEmpty()::JM,71412:JM,71416
71417 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: v36 = fromXML(v29)::JM,71476:JM,71421:CL,82350
71416 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 139::CF,71476:CD,71417:CD,71421
71421 :: CALL :: call :: Ljava/util/List :: v38 = v36.getScopDomain()::JM,71476:JM,71421
71427 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
71426 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v40 = new java.lang.RuntimeException::
71432 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .server::
71435 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(v44)::
71440 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v46.append(#(getDomainsForPDB?pdbId=))::
71445 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v48.append(p1 $pdbId )::
71450 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v50.append(#(&version=))::
71455 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .getScopVersion()::CL,82038
71459 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
71464 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::
71475 :: EXPR :: assign :: Ljava/lang/Exception :: v39 = catch <exc>::
71474 :: NORM :: compound :: Ljava/util/List :: return v60::DD,71351
71476 :: EXPR :: assign :: null :: PHI v60 = #(null), v38::CF,71474
71595 :: CALL :: call :: Ljava/util/Map :: v7 = p0 $this .reloadFromFile()::CL,82416
71594 :: PRED :: IF :: Z :: if (p1 $cacheFileName  == #(null)) goto 18::CD,71595
71617 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.loadRepresentativeDomains()::CD,71622:CD,71626:CD,71634:CD,71639:CD,71654:CD,71658:CD,71662:CD,71666:CD,71672:CD,71676:CD,71685:CD,71689:CD,71736:CD,71740:CD,71744:CD,71752:CD,71757:CD,71766:CD,71767:CD,71775:CD,71780:CD,71791
71622 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
71626 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
71634 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v5.append(#(getRepresentativePDPD...))::
71639 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
71654 :: CALL :: call :: Ljava/io/InputStream :: v20 = getInputStream(v4)::CL,71899
71658 :: CALL :: call :: Ljava/lang/String :: v22 = convertStreamToString(v20)::CL,71913
71662 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: v24 = fromXML(v22)::JM,71699:JM,71666:JM,71698:JM,71685:JM,71689:JM,71672:JM,71704:JM,71736:JM,71740:JM,71694:CL,82612
71666 :: CALL :: call :: Ljava/util/Map :: v26 = v24.getAssignments()::JM,71699:JM,71666:JM,71698:JM,71685:JM,71689:JM,71672:JM,71704:JM,71736:JM,71740:JM,71694
71672 :: CALL :: call :: I :: v30 = v26.size()::JM,71699:JM,71698:JM,71685:JM,71689:JM,71672:JM,71704:JM,71736:JM,71740:JM,71694
71676 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,71698:JM,71689:JM,71704:JM,71736:JM,71740:JM,71694
71685 :: CALL :: call :: Ljava/util/Set :: v35 = v26.keySet()::JM,71699:JM,71698:JM,71685:JM,71689:JM,71672:JM,71704:JM,71736:JM,71740:JM,71694
71689 :: CALL :: call :: Ljava/util/Iterator :: v37 = v35.iterator()::JM,71698:JM,71689:JM,71704:JM,71736:JM,71740:JM,71694
71694 :: CALL :: call :: Ljava/lang/Object :: v42 = v37.next()::JM,71698:JM,71736:JM,71740:JM,71694
71699 :: CALL :: call :: Ljava/lang/Object :: v45 = v26.get(v43)::JM,71699:JM,71698:JM,71685:JM,71689:JM,71672:JM,71704:JM,71736:JM,71740:JM,71694
71698 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::JM,71699:JM,71698:JM,71689:JM,71704:JM,71736:JM,71740:JM,71694:JM,71685:JM,71672
71705 :: CALL :: call :: [Ljava/lang/String :: v49 = v46.split(#(,))::JM,71714:JM,71705
71704 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::JM,71714:JM,71705
71710 :: NORM :: declaration :: Ljava/util/TreeSet :: v50 = new java.util.TreeSet::
71714 :: EXPR :: assign :: I :: v52 = v49.length::DD,71726
71720 :: CALL :: call :: Z :: v55 = v50.add(v53)::
71725 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v58 + #(1)::DD,71792
71726 :: PRED :: IF :: Z :: if (v58 < v52) goto 165::CD,71720:CD,71725:CD,71792
71730 :: CALL :: call :: Ljava/lang/Object :: v61 = v59.put(v43, v50)::
71736 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,71698:JM,71736:JM,71740:JM,71694
71740 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 105::CD,71694:CD,71698:CD,71699:CD,71704:CD,71705:CD,71710:CD,71714:CD,71726:CD,71730:CD,71736:CD,71792:JM,71740
71744 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
71749 :: EXPR :: reference :: Ljava/lang/String :: v68 = p0 $this .server::
71752 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(v68)::
71757 :: CALL :: call :: Ljava/lang/String :: v72 = v70.toString()::
71767 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
71766 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v74 = new java.lang.IllegalArgumentException::
71772 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .server::
71775 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v78)::
71780 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
71791 :: EXPR :: assign :: Ljava/lang/Exception :: v62 = catch <exc>::
71792 :: EXPR :: assign :: null :: PHI v58 = #(0), v57::DD,71725:DD,71726
71847 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::CE,71848:CD,71852:JM,71857:JM,71880:JM,71868
71848 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::JM,61026
71853 :: CALL :: call :: I :: v6 = p1 $domainRanges .size()::JM,71857:JM,71880:JM,71852:JM,71868
71852 :: PRED :: IF :: Z :: if (p1 $domainRanges  == #(null)) goto 14::CD,71853:CD,71857:CD,71858:JM,71880:JM,71852:JM,71868
71857 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 16::CD,71858:CD,71859:CD,71876:CD,71880:JM,71857:JM,71852:JM,71868
71859 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $domainRanges .iterator()::JM,71857:JM,71880:JM,71852:JM,71868
71858 :: NORM :: compound :: Z :: return #(1)::DD,71848
71864 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,71880:JM,71868
71869 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 49::CD,71870:CD,71874:CD,71876:CD,71880:JM,71868
71868 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,71869:JM,71874
71870 :: CALL :: call :: I :: v16 = v14.length()::JM,71874
71875 :: NORM :: compound :: Z :: return #(0)::DD,71848
71874 :: PRED :: IF :: Z :: if (v16 <= #(0)) goto 49::CD,71875:CD,71876:CD,71880:JM,71868
71876 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,71880:JM,71868
71881 :: NORM :: compound :: Z :: return #(1)::DD,71848
71880 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 26::CD,71864:CD,71868:CD,71869:CD,71881:JM,71880
71899 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL)::CD,71903
71903 :: CALL :: call :: Ljava/io/InputStream :: v6 = getInputStream(p1 $url , #(1), #(15000))::CL,82654
71913 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::CE,71914:CD,71917:CD,71918:CD,71927:CD,71944:CD,71948:CD,71992:CD,71996
71914 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::JM,71412:JM,71416:JM,82009:JM,82013:JM,82080
71917 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,71948:CF,71918
71918 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
71927 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::JM,71996
71932 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,71948
71937 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.align.client.JFatCatClient.newline::
71939 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
71944 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,71948
71948 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,71932:CD,71937:CD,71939:CD,71944
71992 :: CALL :: call :: Ljava/lang/String :: v33 = v7.toString()::JM,71996
71996 :: NORM :: compound :: Ljava/lang/String :: return v33::DD,71914
72021 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::CE,72022:CD,72025:CD,72027:CD,72031:CD,72032:CD,72040:CD,72045:CD,72046:CD,72051:CD,72058:CD,72059
72022 :: EXIT :: exit :: Ljava/util/SortedSet :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::JM,61077:JM,61190
72025 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextStringSortedSet::JM,72040:JM,72027:JM,72045
72027 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,72040:JM,72027:JM,72045
72031 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,72040:JM,72045
72032 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
72040 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,72040:JM,72045
72045 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,72058:JM,72046
72046 :: CALL :: call :: Ljava/util/TreeSet :: v15 = v13.getData()::JM,72058:JM,72046
72051 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v17 = new java.lang.RuntimeException::
72059 :: EXPR :: assign :: Ljava/lang/Exception :: v16 = catch <exc>::
72058 :: NORM :: compound :: Ljava/util/SortedSet :: return v15::DD,72022
72073 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.cache(java.lang.Object,java.lang.Object)::CD,72079
72079 :: PRED :: IF :: Z :: if (p2 $data  != #(null)) goto 6::CD,72084
72081 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .serializedCache::DD,72084
72084 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 61::CD,72096:CD,72105:CD,72109:CD,72113:CD,72114
72096 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.put(p1 $name , p2 $data )::
72102 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .serializedCache::JM,72113
72105 :: CALL :: call :: Ljava/util/Set :: v15 = v13.keySet()::JM,72113
72109 :: CALL :: call :: I :: v17 = v15.size()::JM,72113
72113 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 % #(1000)::DD,72114
72115 :: CALL :: call :: V :: p0 $this .flushCache()::CL,82721
72114 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 61::CD,72115
72144 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .identifier = p1 $pdpDomainName ::
72152 :: CALL :: call :: Ljava/util/regex/Matcher :: v9 = v6.matcher(v7)::
72157 :: CALL :: call :: Z :: v11 = v9.matches()::
72162 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v18 = new java.lang.IllegalArgumentException::JM,72144:JM,60806:JM,60812:JM,60815
72168 :: CALL :: call :: Ljava/lang/String :: v15 = v9.group(#(1))::
72173 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v16 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,72179
72179 :: EXPR :: modify :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: p0 $this .canonical = v16::
72199 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO.StructureFiletype.values()::JM,61502:JM,61579
72198 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.values()::CF,72199:CD,72201:CD,72203:CD,72204:CD,72212
72201 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = org.biojava.nbio.structure.StructureIO$StructureFiletype.ENUM$VALUES::DD,72203
72203 :: EXPR :: assign :: I :: v4 = v2.length::DD,72204
72204 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v5 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::DD,72212
72212 :: NORM :: compound :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v5::CF,72199
72225 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentStart()::CD,72229:JM,62817:JM,74432:JM,62789:JM,74407:JM,74439:JM,62824:JM,62796:JM,74415:JM,62831:JM,62803:JM,62810:JM,62779:JM,74399:CD,72245:CD,72252:CD,72259:CD,72266:CD,72273:CD,72280:CD,72287:CD,72294:CD,72301:CD,72308:CD,72315:CD,72322:CD,72329:CD,72336:CD,72343:CD,72350:CD,72357:CD,72364:CD,72371
72229 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureImpl :: v3 = new org.biojava.nbio.structure.StructureImpl::DD,72233
72233 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .structure = v3::
72236 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
72239 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
72242 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = #(null)::
72245 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,72249
72249 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v6::
72252 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,72256
72256 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entities = v8::
72259 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::DD,72263
72263 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucRefs = v10::
72266 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,72270
72270 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResChains = v12::
72273 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,72277
72277 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entityChains = v14::
72280 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::DD,72284
72284 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structAsyms = v16::
72287 :: NORM :: declaration :: Ljava/util/HashMap :: v18 = new java.util.HashMap::DD,72291
72291 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v18::
72294 :: NORM :: declaration :: Ljava/util/HashMap :: v20 = new java.util.HashMap::DD,72298
72298 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v20::
72301 :: NORM :: declaration :: Ljava/util/HashMap :: v22 = new java.util.HashMap::DD,72305
72305 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2entityId = v22::
72308 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::DD,72312
72312 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structOpers = v24::
72315 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::DD,72319
72319 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblies = v26::
72322 :: NORM :: declaration :: Ljava/util/ArrayList :: v28 = new java.util.ArrayList::DD,72326
72326 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblyGens = v28::
72329 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::DD,72333
72333 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcGens = v30::
72336 :: NORM :: declaration :: Ljava/util/ArrayList :: v32 = new java.util.ArrayList::DD,72340
72340 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcNats = v32::
72343 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,72347
72347 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcSyns = v34::
72350 :: NORM :: declaration :: Ljava/util/ArrayList :: v36 = new java.util.ArrayList::DD,72354
72354 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structConn = v36::
72357 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::DD,72361
72361 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structNcsOper = v38::
72364 :: NORM :: declaration :: Ljava/util/ArrayList :: v40 = new java.util.ArrayList::DD,72368
72368 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sequenceDifs = v40::
72371 :: NORM :: declaration :: Ljava/util/ArrayList :: v42 = new java.util.ArrayList::DD,72375
72375 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structSiteGens = v42::
72425 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentStart()::CD,72432:CD,72445:CD,72449
72429 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,72449
72432 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,72449
72437 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,72449
72442 :: CALL :: call :: V :: v11.documentStart()::CL,72225
72445 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,72449
72449 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,72437:CD,72442:CD,72445:JM,72449
72467 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentEnd()::CD,72474:CD,72487:CD,72491
72471 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,72491
72474 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,72491
72479 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,72491
72484 :: CALL :: call :: V :: v11.documentEnd()::CL,82801
72487 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,72491
72491 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,72479:CD,72484:CD,72487:JM,72491
72501 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::JM,61894:JM,61884:JM,61951:JM,62081:JM,62349:JM,62184:JM,62267:JM,62174
72500 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::CE,72501:CD,72507:CD,72511:CD,72516:CD,72582:CD,72586:CD,72654:CD,72655:CD,72656:CD,72660:CD,72661:CD,72662:JM,72646:JM,72652
72507 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,72586:DD,72641:JM,72646:DD,72647:DD,72653
72511 :: CALL :: call :: Z :: v12 = v48.startsWith(#(;))::JM,72516
72517 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 76::CD,72518:CD,72522:CD,72540:CD,72544:CD,72660:CD,72661:CD,72662
72516 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 96::CD,72517:CD,72550
72518 :: CALL :: call :: I :: v26 = v48.length()::JM,72522
72523 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::DD,72662
72522 :: PRED :: IF :: Z :: if (v26 <= #(1)) goto 57::CF,72534:CF,72523:CD,72524:CD,72660:CD,72661:CD,72662
72524 :: CALL :: call :: Ljava/lang/String :: v29 = v48.substring(#(1))::
72534 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::DD,72662
72540 :: CALL :: call :: Ljava/lang/String :: v35 = v50.toString()::
72544 :: CALL :: call :: Z :: v37 = v6.add(v35)::
72551 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v50.append(v48)::
72550 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 111::CD,72551:CD,72557:CD,72562:CD,72577:CD,72581:CD,72657:CD,72658:CD,72659:CD,72660:CD,72661:CD,72662
72557 :: CALL :: call :: Ljava/util/List :: v14 = p0 $this .processSingleLine(v48)::JM,72581:JM,72571:CL,84154
72562 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,72581:JM,72571
72567 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,72581:JM,72571
72571 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::
72572 :: CALL :: call :: Z :: v23 = v6.add(v21)::
72577 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,72581:JM,72571
72581 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 130::CF,72660:CD,72567:CD,72571:CD,72572:CD,72577:CD,72657:CD,72658:CD,72659:JM,72581
72582 :: CALL :: call :: I :: v43 = v6.size()::JM,72586
72586 :: PRED :: IF :: Z :: if (v43 <= p3 $fieldLength ) goto 238::CD,72589:CD,72594:CD,72598:CD,72603:CD,72608:CD,72613:CD,72618:CD,72623:CD,72628:CD,72633:CD,72641:CD,72642:CD,72646
72589 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
72594 :: CALL :: call :: I :: v60 = v6.size()::
72598 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(v60)::
72603 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(#() should be ())::
72608 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(p3 $fieldLength )::JM,72646:JM,72652:JM,72654
72613 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v67.append(#() at line ))::
72618 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(v54)::
72623 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( got lineData: ))::
72628 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v6)::
72633 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
72641 :: NORM :: compound :: Ljava/util/List :: return v6::DD,72501
72642 :: CALL :: call :: I :: v45 = v6.size()::JM,72646
72647 :: NORM :: compound :: Ljava/util/List :: return v6::DD,72501
72646 :: PRED :: IF :: Z :: if (v45 != p3 $fieldLength ) goto 251::CD,72647:CD,72648:CD,72652:CD,72654:CD,72655:CD,72656:JM,72646:JM,72586
72648 :: CALL :: call :: Ljava/lang/String :: v47 = p2 $buf .readLine()::JM,72646:JM,72586:JM,72652:JM,72654
72653 :: NORM :: compound :: Ljava/util/List :: return v6::DD,72501
72652 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 18::CF,72654:CD,72511:CD,72516:CD,72582:CD,72586:CD,72653:CD,72655:CD,72656:CD,72660:CD,72661:CD,72662
72655 :: EXPR :: assign :: null :: PHI v49 = v40, #(0)::CF,72656:DD,72517:DD,72550:DD,72658:DD,72661
72654 :: EXPR :: assign :: null :: PHI v48 = v47, p1 $line ::CF,72655:JM,72516:JM,72522:DD,72657:DD,72660
72657 :: EXPR :: assign :: null :: PHI v51 = v48, v51::CF,72658:DD,72657:DD,72660
72656 :: EXPR :: assign :: null :: PHI v50 = v41, #(null)::DD,72659:DD,72662:JM,72516
72659 :: EXPR :: assign :: null :: PHI v53 = v50, v53::JM,72581:JM,72571:DD,72659:DD,72662
72658 :: EXPR :: assign :: null :: PHI v52 = v49, v52::CF,72659:DD,72658:DD,72661
72661 :: EXPR :: assign :: null :: PHI v40 = #(1), #(1), #(0), v49, v52::CF,72662:DD,72655
72660 :: EXPR :: assign :: null :: PHI v54 = v48, v48, v48, v48, v51::CF,72661
72662 :: EXPR :: assign :: null :: PHI v41 = v27, v31, #(null), v50, v53::JM,72586:DD,72656
72816 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.endLineChecks(java.lang.String,java.util.List,java.util.List,java.util.Set)::CD,72826:CD,72851:CD,72852:CD,72857:CD,72861:CD,72866:CD,72871:CD,72875:CD,72880:CD,72885:CD,72890:CD,72895:CD,72900:CD,72905:CD,72910:CD,72919:CD,72924:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72826 :: CALL :: call :: Ljava/lang/String :: v10 = p2 $loopFields .toString()::
72851 :: NORM :: declaration :: Ljava/io/IOException :: v393 = new java.io.IOException::
72852 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v394 = new java.lang.StringBuilder::
72857 :: CALL :: call :: I :: v398 = p3 $lineData .size()::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72861 :: CALL :: call :: Ljava/lang/StringBuilder :: v400 = v394.append(v398)::
72866 :: CALL :: call :: Ljava/lang/StringBuilder :: v403 = v400.append(#() != fields length ())::
72871 :: CALL :: call :: I :: v405 = p2 $loopFields .size()::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72875 :: CALL :: call :: Ljava/lang/StringBuilder :: v407 = v403.append(v405)::
72880 :: CALL :: call :: Ljava/lang/StringBuilder :: v410 = v407.append(#() category: ))::
72885 :: CALL :: call :: Ljava/lang/StringBuilder :: v412 = v410.append(p1 $category )::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72890 :: CALL :: call :: Ljava/lang/StringBuilder :: v415 = v412.append(#( fields: ))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72895 :: CALL :: call :: Ljava/lang/StringBuilder :: v417 = v415.append(p2 $loopFields )::
72900 :: CALL :: call :: Ljava/lang/StringBuilder :: v420 = v417.append(#( DATA: ))::
72905 :: CALL :: call :: Ljava/lang/StringBuilder :: v422 = v420.append(p3 $lineData )::
72910 :: CALL :: call :: Ljava/lang/String :: v424 = v422.toString()::
72919 :: CALL :: call :: Z :: v18 = p1 $category .equals(#(_entity))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72924 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 159::CD,72930:CD,72939:CD,72944:CD,72949:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72930 :: CALL :: call :: Ljava/lang/Object :: v386 = p0 $this .buildObject(v384, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
72939 :: CALL :: call :: V :: p0 $this .triggerNewEntity(v387)::CL,85047
72944 :: CALL :: call :: Z :: v22 = p1 $category .equals(#(_struct))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72949 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 192::CD,72955:CD,72963:CD,72968:CD,72973:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72955 :: CALL :: call :: Ljava/lang/Object :: v380 = p0 $this .buildObject(v378, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::JM,72963:CL,84644
72963 :: EXPR :: assign :: Ljava/lang/Object :: v381 = CHECKCAST v380::DD,72964
72964 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v381::
72968 :: CALL :: call :: Z :: v25 = p1 $category .equals(#(_atom_site))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72973 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 230::CD,72979:CD,72988:CD,72993:CD,72998:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72979 :: CALL :: call :: Ljava/lang/Object :: v373 = p0 $this .buildObject(v371, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
72988 :: CALL :: call :: V :: p0 $this .triggerNewAtomSite(v374)::CL,85083
72993 :: CALL :: call :: Z :: v28 = p1 $category .equals(#(_database_PDB_rev))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
72998 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 268::CD,73004:CD,73013:CD,73018:CD,73023:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73598
73004 :: CALL :: call :: Ljava/lang/Object :: v366 = p0 $this .buildObject(v364, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73013 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrev(v367)::CL,85119
73018 :: CALL :: call :: Z :: v31 = p1 $category .equals(#(_database_PDB_rev_record))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73023 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 306::CD,73029:CD,73038:CD,73043:CD,73048:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73029 :: CALL :: call :: Ljava/lang/Object :: v359 = p0 $this .buildObject(v357, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73038 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrevRecord(v360)::CL,85155
73043 :: CALL :: call :: Z :: v34 = p1 $category .equals(#(_database_PDB_remark))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73048 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 344::CD,73054:CD,73063:CD,73068:CD,73073:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73054 :: CALL :: call :: Ljava/lang/Object :: v352 = p0 $this .buildObject(v350, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73063 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBremark(v353)::CL,85191
73068 :: CALL :: call :: Z :: v37 = p1 $category .equals(#(_exptl))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73073 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 382::CD,73079:CD,73088:CD,73093:CD,73098:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73079 :: CALL :: call :: Ljava/lang/Object :: v345 = p0 $this .buildObject(v343, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73088 :: CALL :: call :: V :: p0 $this .triggerExptl(v346)::CL,85227
73093 :: CALL :: call :: Z :: v40 = p1 $category .equals(#(_cell))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73098 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 420::CD,73104:CD,73113:CD,73118:CD,73123:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73104 :: CALL :: call :: Ljava/lang/Object :: v338 = p0 $this .buildObject(v336, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73113 :: CALL :: call :: V :: p0 $this .triggerNewCell(v339)::CL,85263
73118 :: CALL :: call :: Z :: v43 = p1 $category .equals(#(_symmetry))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73123 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 458::CD,73129:CD,73138:CD,73143:CD,73148:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73023:JM,73598
73129 :: CALL :: call :: Ljava/lang/Object :: v331 = p0 $this .buildObject(v329, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73138 :: CALL :: call :: V :: p0 $this .triggerNewSymmetry(v332)::CL,85299
73143 :: CALL :: call :: Z :: v46 = p1 $category .equals(#(_struct_ncs_oper))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73148 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 496::CD,73154:CD,73163:CD,73168:CD,73173:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73154 :: CALL :: call :: Ljava/lang/Object :: v324 = p0 $this .buildObject(v322, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73163 :: CALL :: call :: V :: p0 $this .triggerNewStructNcsOper(v325)::CL,85335
73168 :: CALL :: call :: Z :: v49 = p1 $category .equals(#(_atom_sites))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73173 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 534::CD,73179:CD,73188:CD,73193:CD,73198:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73179 :: CALL :: call :: Ljava/lang/Object :: v317 = p0 $this .buildObject(v315, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73188 :: CALL :: call :: V :: p0 $this .triggerNewAtomSites(v318)::CL,85371
73193 :: CALL :: call :: Z :: v52 = p1 $category .equals(#(_struct_ref))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73198 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 572::CD,73204:CD,73213:CD,73218:CD,73223:JM,73473:JM,73348:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73204 :: CALL :: call :: Ljava/lang/Object :: v310 = p0 $this .buildObject(v308, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73213 :: CALL :: call :: V :: p0 $this .triggerNewStrucRef(v311)::CL,85407
73218 :: CALL :: call :: Z :: v55 = p1 $category .equals(#(_struct_ref_seq))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73223 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 610::CD,73229:CD,73238:CD,73243:CD,73248:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73229 :: CALL :: call :: Ljava/lang/Object :: v303 = p0 $this .buildObject(v301, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73238 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeq(v304)::CL,85443
73243 :: CALL :: call :: Z :: v58 = p1 $category .equals(#(_struct_ref_seq_dif))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73248 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 648::CD,73254:CD,73263:CD,73268:CD,73273:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73723:JM,73148:JM,73023:JM,73598
73254 :: CALL :: call :: Ljava/lang/Object :: v296 = p0 $this .buildObject(v294, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73263 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeqDif(v297)::CL,85479
73268 :: CALL :: call :: Z :: v61 = p1 $category .equals(#(_struct_site_gen))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73273 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 686::CD,73279:CD,73288:CD,73293:CD,73298:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73279 :: CALL :: call :: Ljava/lang/Object :: v289 = p0 $this .buildObject(v287, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73288 :: CALL :: call :: V :: p0 $this .triggerNewStructSiteGen(v290)::CL,85515
73293 :: CALL :: call :: Z :: v64 = p1 $category .equals(#(_struct_site))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73298 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 724::CD,73304:CD,73313:CD,73318:CD,73323:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73304 :: CALL :: call :: Ljava/lang/Object :: v282 = p0 $this .buildObject(v280, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73313 :: CALL :: call :: V :: p0 $this .triggerNewStructSite(v283)::CL,85551
73318 :: CALL :: call :: Z :: v67 = p1 $category .equals(#(_entity_poly_seq))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73323 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 762::CD,73329:CD,73338:CD,73343:CD,73348:JM,73473:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73329 :: CALL :: call :: Ljava/lang/Object :: v275 = p0 $this .buildObject(v273, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73338 :: CALL :: call :: V :: p0 $this .triggerNewEntityPolySeq(v276)::CL,85587
73343 :: CALL :: call :: Z :: v70 = p1 $category .equals(#(_entity_src_gen))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73348 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 800::CD,73354:CD,73363:CD,73368:CD,73373:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73354 :: CALL :: call :: Ljava/lang/Object :: v268 = p0 $this .buildObject(v266, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73363 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcGen(v269)::CL,85623
73368 :: CALL :: call :: Z :: v73 = p1 $category .equals(#(_entity_src_nat))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73373 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 838::CD,73379:CD,73388:CD,73393:CD,73398:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73379 :: CALL :: call :: Ljava/lang/Object :: v261 = p0 $this .buildObject(v259, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73388 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcNat(v262)::CL,85659
73393 :: CALL :: call :: Z :: v76 = p1 $category .equals(#(_pdbx_entity_src_syn))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73398 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 876::CD,73404:CD,73413:CD,73418:CD,73423:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73404 :: CALL :: call :: Ljava/lang/Object :: v254 = p0 $this .buildObject(v252, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73413 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcSyn(v255)::CL,85695
73418 :: CALL :: call :: Z :: v79 = p1 $category .equals(#(_struct_asym))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73423 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 914::CD,73429:CD,73438:CD,73443:CD,73448:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73429 :: CALL :: call :: Ljava/lang/Object :: v247 = p0 $this .buildObject(v245, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73438 :: CALL :: call :: V :: p0 $this .triggerNewStructAsym(v248)::CL,85731
73443 :: CALL :: call :: Z :: v82 = p1 $category .equals(#(_pdbx_poly_seq_scheme))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73448 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 952::CD,73454:CD,73463:CD,73468:CD,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73454 :: CALL :: call :: Ljava/lang/Object :: v240 = p0 $this .buildObject(v238, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73463 :: CALL :: call :: V :: p0 $this .triggerNewPdbxPolySeqScheme(v241)::CL,85767
73468 :: CALL :: call :: Z :: v85 = p1 $category .equals(#(_pdbx_nonpoly_scheme))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73473 :: PRED :: IF :: Z :: if (v85 == #(0)) goto 990::CD,73479:CD,73488:CD,73493:CD,73498:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73479 :: CALL :: call :: Ljava/lang/Object :: v233 = p0 $this .buildObject(v231, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73488 :: CALL :: call :: V :: p0 $this .triggerNewPdbxNonPolyScheme(v234)::CL,85803
73493 :: CALL :: call :: Z :: v88 = p1 $category .equals(#(_pdbx_entity_nonpoly))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73498 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 1028::CD,73504:CD,73513:CD,73518:CD,73523:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73504 :: CALL :: call :: Ljava/lang/Object :: v226 = p0 $this .buildObject(v224, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73513 :: CALL :: call :: V :: p0 $this .triggerNewPdbxEntityNonPoly(v227)::CL,85839
73518 :: CALL :: call :: Z :: v91 = p1 $category .equals(#(_struct_keywords))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73523 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 1066::CD,73529:CD,73538:CD,73543:CD,73548:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73529 :: CALL :: call :: Ljava/lang/Object :: v219 = p0 $this .buildObject(v217, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73538 :: CALL :: call :: V :: p0 $this .triggerNewStructKeywords(v220)::CL,85875
73543 :: CALL :: call :: Z :: v94 = p1 $category .equals(#(_refine))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73548 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 1104::CD,73554:CD,73563:CD,73568:CD,73573:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73554 :: CALL :: call :: Ljava/lang/Object :: v212 = p0 $this .buildObject(v210, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73563 :: CALL :: call :: V :: p0 $this .triggerNewRefine(v213)::CL,85911
73568 :: CALL :: call :: Z :: v97 = p1 $category .equals(#(_chem_comp))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73573 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 1142::CD,73579:CD,73588:CD,73593:CD,73598:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023
73579 :: CALL :: call :: Ljava/lang/Object :: v205 = p0 $this .buildObject(v203, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73588 :: CALL :: call :: V :: p0 $this .triggerNewChemComp(v206)::CL,85947
73593 :: CALL :: call :: Z :: v100 = p1 $category .equals(#(_audit_author))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73598 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 1180::CD,73604:CD,73613:CD,73618:CD,73623:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73604 :: CALL :: call :: Ljava/lang/Object :: v198 = p0 $this .buildObject(v196, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73613 :: CALL :: call :: V :: p0 $this .triggerNewAuditAuthor(v199)::CL,85983
73618 :: CALL :: call :: Z :: v103 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73623 :: PRED :: IF :: Z :: if (v103 == #(0)) goto 1218::CD,73629:CD,73638:CD,73643:CD,73648:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73629 :: CALL :: call :: Ljava/lang/Object :: v191 = p0 $this .buildObject(v189, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73638 :: CALL :: call :: V :: p0 $this .triggerNewChemCompDescriptor(v192)::CL,86019
73643 :: CALL :: call :: Z :: v106 = p1 $category .equals(#(_pdbx_struct_oper_list))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73648 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 1256::CD,73654:CD,73663:CD,73668:CD,73673:JM,73473:JM,73348:JM,73223:JM,73798:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73654 :: CALL :: call :: Ljava/lang/Object :: v184 = p0 $this .buildObject(v182, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73663 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructOper(v185)::CL,86055
73668 :: CALL :: call :: Z :: v109 = p1 $category .equals(#(_pdbx_struct_assembly))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73673 :: PRED :: IF :: Z :: if (v109 == #(0)) goto 1294::CD,73679:CD,73688:CD,73693:CD,73698:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73679 :: CALL :: call :: Ljava/lang/Object :: v177 = p0 $this .buildObject(v175, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73688 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssembly(v178)::CL,86091
73693 :: CALL :: call :: Z :: v112 = p1 $category .equals(#(_pdbx_struct_assembly_gen))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73698 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 1332::CD,73704:CD,73713:CD,73718:CD,73723:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73148:JM,73023:JM,73598
73704 :: CALL :: call :: Ljava/lang/Object :: v170 = p0 $this .buildObject(v168, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73713 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssemblyGen(v171)::CL,86127
73718 :: CALL :: call :: Z :: v115 = p1 $category .equals(#(_chem_comp_atom))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73723 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 1370::CD,73729:CD,73738:CD,73743:CD,73748:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73729 :: CALL :: call :: Ljava/lang/Object :: v163 = p0 $this .buildObject(v161, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73738 :: CALL :: call :: V :: p0 $this .triggerNewChemCompAtom(v164)::CL,86163
73743 :: CALL :: call :: Z :: v118 = p1 $category .equals(#(_chem_comp_bond))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73748 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 1408::CD,73754:CD,73763:CD,73768:CD,73773:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73754 :: CALL :: call :: Ljava/lang/Object :: v156 = p0 $this .buildObject(v154, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73763 :: CALL :: call :: V :: p0 $this .triggerNewChemCompBond(v157)::CL,86199
73768 :: CALL :: call :: Z :: v121 = p1 $category .equals(#(_pdbx_chem_comp_ident...))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73773 :: PRED :: IF :: Z :: if (v121 == #(0)) goto 1446::CD,73779:CD,73788:CD,73793:CD,73798:JM,73473:JM,73348:JM,73223:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73779 :: CALL :: call :: Ljava/lang/Object :: v149 = p0 $this .buildObject(v147, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73788 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompIdentifier(v150)::CL,86235
73793 :: CALL :: call :: Z :: v123 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73798 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 1484::CD,73804:CD,73813:CD,73818:CD,73823:JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73804 :: CALL :: call :: Ljava/lang/Object :: v142 = p0 $this .buildObject(v140, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73813 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompDescriptor(v143)::CL,86271
73818 :: CALL :: call :: Z :: v126 = p1 $category .equals(#(_struct_conn))::JM,73473:JM,73348:JM,73223:JM,73798:JM,73673:JM,73098:JM,72973:JM,73548:JM,73423:JM,73298:JM,73173:JM,73748:JM,73623:JM,73048:JM,73498:JM,73373:JM,72924:JM,73823:JM,73248:JM,73123:JM,73698:JM,73573:JM,72998:JM,73448:JM,73323:JM,73773:JM,73198:JM,73073:JM,73648:JM,73523:JM,72949:JM,73398:JM,73273:JM,73723:JM,73148:JM,73023:JM,73598
73823 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 1518::CD,73829:CD,73838:CD,73850
73829 :: CALL :: call :: Ljava/lang/Object :: v135 = p0 $this .buildObject(v133, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,84644
73838 :: CALL :: call :: V :: p0 $this .triggerNewStructConn(v136)::CL,86307
73850 :: CALL :: call :: V :: p0 $this .triggerGeneric(p1 $category , p2 $loopFields , p3 $lineData )::CL,86343
74237 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.resetBuffers(java.util.List,java.util.List,java.util.Set)::CD,74244:CD,74247:CD,74250
74244 :: CALL :: call :: V :: p1 $loopFields .clear()::
74247 :: CALL :: call :: V :: p2 $lineData .clear()::
74250 :: CALL :: call :: V :: p3 $loopWarnings .clear()::
74257 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerStructData(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,74265:CD,74279:CD,74283
74262 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,74283
74265 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,74283
74270 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,74283
74275 :: CALL :: call :: V :: v12.setStruct(p1 $struct )::CL,86391
74279 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,74283
74283 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,74270:CD,74275:CD,74279:JM,74283
74293 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getStructure(java.io.InputStream)::JM,86497:JM,86656:JM,74432:JM,86596:JM,49701:JM,74407:JM,74439:JM,86504:JM,86476:JM,86511:JM,86575:JM,74415:JM,86606:JM,86483:JM,86548:JM,86518:JM,86582:JM,86490:JM,86525:JM,86589:JM,74399:CD,74310
74310 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v10 = v4.parsePDBFile(p1 $inStream )::CL,86775
74324 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getBiologicalAssembly(java.lang.String,int,boolean)::CD,74333:CD,74338:CD,74343:CD,74348:CD,74353:CD,74362:CD,74368:JM,74369
74333 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
74338 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(p1 $pdbId )::JM,74369
74343 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( bioAssemblyId ))::
74348 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(p2 $bioAssemblyId )::JM,74369
74353 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
74362 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v8 = getBiologicalAssembly(p1 $pdbId , p2 $bioAssemblyId , p0 $this )::JM,74368:CL,86796
74369 :: PRED :: IF :: Z :: if (p3 $bioAssemblyFallback  == #(0)) goto 63::CD,74370
74368 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 63::CD,74369
74370 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v11 = getBiologicalAssembly(p1 $pdbId , #(0), p0 $this )::CL,86796
74399 :: NORM :: declaration :: Ljava/util/Date :: v4 = new java.util.Date::DD,74404
74404 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = v4::
74407 :: NORM :: declaration :: Ljava/util/Date :: v7 = new java.util.Date::DD,74412
74412 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = v7::
74415 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v9 = new java.text.SimpleDateFormat::DD,74423
74423 :: EXPR :: modify :: Ljava/text/DateFormat :: p0 $this .dateFormat = v9::
74426 :: EXPR :: modify :: F :: p0 $this .resolution = #(99.0 f)::
74429 :: EXPR :: modify :: F :: p0 $this .rFree = #(1.0 f)::
74432 :: NORM :: declaration :: Ljava/util/HashMap :: v15 = new java.util.HashMap::DD,74436
74436 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = v15::
74439 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: v17 = new org.biojava.nbio.structure.PDBCrystallographicInfo::DD,74443
74443 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = v17::
74466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getIdentifier()::CD,74473:CD,74477
74470 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .ranges::JM,74477
74473 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,74477
74477 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 17::CF,74482:CD,74486:CD,74494:CD,74502:CD,74506:CD,74511
74482 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
74486 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
74494 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(.))::
74502 :: CALL :: call :: Ljava/lang/String :: v17 = toString(v15)::CL,86868
74506 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v14.append(v17)::
74511 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
74523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setParent(org.biojava.nbio.structure.Structure)::JM,74528
74528 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $s ::
74549 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::CE,74550:CD,74553:CD,74557:CD,74561:CD,74565
74550 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::JM,63040
74553 :: CALL :: call :: Ljava/util/TreeMap :: v4 = p0 $this .findCompoundsFromAlignment()::CL,86929
74557 :: CALL :: call :: Ljava/util/List :: v6 = findUniqueCompounds(v4)::JM,74565:CL,87976
74561 :: CALL :: call :: V :: p0 $this .createPurelyNonPolyCompounds(v6)::CL,88053
74565 :: NORM :: compound :: Ljava/util/List :: return v6::DD,74550
74573 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getChains()::CE,74574:CD,74580
74574 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Compound.getChains()::JM,63078
74577 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .chains::DD,74580
74580 :: NORM :: compound :: Ljava/util/List :: return v3::CF,74574
74582 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setCompound(org.biojava.nbio.structure.Compound)::JM,74587
74587 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .mol = p1 $mol ::
74593 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setStructure(org.biojava.nbio.structure.Structure)::JM,74598
74598 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $parent ::
74605 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains(int)::JM,63404:JM,113955:JM,133823:JM,148110
74604 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains(int)::CE,74605:CD,74609:CD,74614
74609 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(p1 $modelnr )::JM,74614:CL,51721
74614 :: NORM :: compound :: Ljava/util/List :: return v5::DD,74605
74617 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toString()::CE,74618:CD,74621:CD,74628:CD,74632:CD,74640:CD,74661:CD,74665
74618 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.toString()::JM,63516:JM,63536:JM,64082:JM,134826:JM,134886:JM,148272
74621 :: NORM :: declaration :: Ljava/io/StringWriter :: v3 = new java.io.StringWriter::JM,74665
74628 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
74632 :: CALL :: call :: Ljava/io/StringWriter :: v9 = v3.append(v7)::
74637 :: EXPR :: reference :: Ljava/lang/Character :: v10 = p0 $this .insCode::DD,74640
74641 :: EXPR :: reference :: Ljava/lang/Character :: v12 = p0 $this .insCode::JM,74648
74640 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 52::CD,74644:CD,74648:JM,74665
74644 :: CALL :: call :: C :: v14 = v12.charValue()::JM,74648
74649 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::
74648 :: PRED :: IF :: Z :: if (v14 == #(32)) goto 52::CD,74652:CD,74656:JM,74665
74652 :: CALL :: call :: C :: v18 = v16.charValue()::
74656 :: CALL :: call :: Ljava/io/StringWriter :: v20 = v3.append(v18)::
74661 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,74665
74665 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,74618
74679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::CE,74680:CD,74686
74680 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::JM,63945:JM,83229:JM,83257:JM,128134:JM,128139:JM,128287:JM,128292:JM,128420
74683 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .residueNumber::DD,74686
74686 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,74680
74688 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChain(org.biojava.nbio.structure.Chain)::CD,74699:JM,74693
74693 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = p1 $chain ::
74696 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v4 = p0 $this .residueNumber::DD,74699
74699 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 25::CD,74707
74707 :: CALL :: call :: V :: v6.setChainId(v8)::CL,63339
74719 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::JM,63932:JM,76138:JM,76147:JM,76175:JM,76298:JM,76307:JM,76335:JM,103991:JM,104025:JM,113940:JM,115158:JM,115520:JM,115480:JM,128454:JM,128444:JM,130198:JM,130158
74718 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::CE,74719:CD,74725
74722 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,74725
74725 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 16::CF,74726:CD,74730:CD,74734
74726 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,74730
74731 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::DD,74734
74730 :: NORM :: compound :: Ljava/util/List :: return v6::DD,74719
74734 :: NORM :: compound :: Ljava/util/List :: return v5::DD,74719
74739 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.fromString(java.lang.String)::CE,74740:CD,74743:CD,74758:CD,74769
74740 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueNumber.fromString(java.lang.String)::JM,64283:JM,64297
74743 :: PRED :: IF :: Z :: if (p1 $pdb_code  != #(null)) goto 6::CF,74745:CD,74744:CD,74749:CD,74753:CD,74781:CD,74785:CD,74809:CD,74812
74745 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v4 = new org.biojava.nbio.structure.ResidueNumber::DD,74809
74744 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return #(null)::DD,74740
74749 :: CALL :: call :: I :: v7 = parseInt(p1 $pdb_code )::JM,74743
74753 :: CALL :: call :: Ljava/lang/Integer :: v9 = valueOf(v7)::
74758 :: CALL :: call :: [Ljava/lang/String :: v13 = p1 $pdb_code .split(#((?<=\d)(?=\D)|(?<=\D)...))::
74765 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v13[#(0)]::
74769 :: CALL :: call :: I :: v19 = parseInt(v17)::
74777 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v13[#(1)]::DD,74812
74781 :: CALL :: call :: V :: v4.setSeqNum(v25)::CL,88238
74785 :: PRED :: IF :: Z :: if (v26 != #(null)) goto 80::CD,74786:CD,74791:CD,74795
74786 :: CALL :: call :: V :: v4.setInsCode(#(null))::CL,88249
74791 :: CALL :: call :: I :: v29 = v26.length()::JM,74795
74795 :: PRED :: IF :: Z :: if (v29 <= #(0)) goto 99::CD,74796:CD,74805:CF,74809
74796 :: CALL :: call :: C :: v31 = v26.charAt(#(0))::
74805 :: CALL :: call :: V :: v4.setInsCode(v33)::CL,88249
74809 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v4::DD,74740
74812 :: EXPR :: assign :: null :: PHI v26 = #(null), #(null), v23::DD,74785:JM,74795
74845 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chain = p1 $chain ::
74848 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .start = p2 $start ::
74851 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .end = p3 $end ::
74870 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentEnsemble :: p0 $this .parent = p1 $ensemble ::
74873 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentEnsemble :: v5 = p0 $this .parent::DD,74876
74876 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 34::CD,74880:CD,74884
74880 :: CALL :: call :: Ljava/util/List :: v9 = v7.getMultipleAlignments()::CL,47621
74884 :: CALL :: call :: Z :: v11 = v9.add(p0 $this )::JM,74870
74889 :: EXPR :: modify :: Ljava/util/List :: p0 $this .blockSets = #(null)::
74892 :: EXPR :: modify :: I :: p0 $this .length = #(-1)::
74895 :: EXPR :: modify :: I :: p0 $this .coreLength = #(-1)::
74932 :: EXPR :: reference :: Ljava/lang/String :: v5 = p1 $e .algorithmName::DD,74935
74935 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .algorithmName = v5::
74938 :: EXPR :: reference :: Ljava/lang/String :: v6 = p1 $e .version::DD,74941
74941 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v6::
74944 :: EXPR :: reference :: Ljava/lang/Long :: v7 = p1 $e .ioTime::DD,74947
74947 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .ioTime = v7::
74950 :: EXPR :: reference :: Ljava/lang/Long :: v8 = p1 $e .calculationTime::DD,74953
74953 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .calculationTime = v8::
74956 :: EXPR :: modify :: Ljava/util/List :: p0 $this .distanceMatrix = #(null)::
74959 :: EXPR :: reference :: Ljava/util/List :: v10 = p1 $e .distanceMatrix::DD,74962
74963 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,74967
74962 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 111::CD,74963:CD,74973:CD,74996:CD,75000
74967 :: EXPR :: modify :: Ljava/util/List :: p0 $this .distanceMatrix = v11::
74970 :: EXPR :: reference :: Ljava/util/List :: v13 = p1 $e .distanceMatrix::JM,74982:JM,75000
74973 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,74982:JM,75000
74978 :: CALL :: call :: Ljava/lang/Object :: v20 = v15.next()::JM,74982:JM,75000
74983 :: EXPR :: reference :: Ljava/util/List :: v22 = p0 $this .distanceMatrix::
74982 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::JM,74986:JM,74990
74986 :: CALL :: call :: Ljava/lang/Object :: v24 = v21.clone()::JM,74986:JM,74990
74991 :: CALL :: call :: Z :: v27 = v22.add(v25)::
74990 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::
74996 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,74982:JM,75000
75001 :: EXPR :: modify :: Ljava/util/List :: p0 $this .multipleAlignments = #(null)::
75000 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 74::CD,74978:CD,74982:CD,74986:CD,74990:CD,74991:CD,74996:JM,75000
75004 :: EXPR :: reference :: Ljava/util/List :: v28 = p1 $e .multipleAlignments::DD,75007
75007 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 193::CD,75008:CD,75018:CD,75044:CD,75048
75008 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::DD,75012
75012 :: EXPR :: modify :: Ljava/util/List :: p0 $this .multipleAlignments = v29::
75015 :: EXPR :: reference :: Ljava/util/List :: v31 = p1 $e .multipleAlignments::JM,75048
75018 :: CALL :: call :: Ljava/util/Iterator :: v33 = v31.iterator()::JM,75048
75023 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,75048
75028 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v40 = v38.clone()::CL,53183
75032 :: CALL :: call :: V :: v40.setEnsemble(p0 $this )::CL,46774
75036 :: EXPR :: reference :: Ljava/util/List :: v42 = p0 $this .multipleAlignments::
75039 :: CALL :: call :: Z :: v44 = v42.add(v40)::
75044 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,75048
75049 :: EXPR :: reference :: Ljava/util/List :: v45 = p1 $e .atomArrays::DD,75052
75048 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 146::CD,75023:CD,75028:CD,75032:CD,75039:CD,75044:JM,75048
75053 :: NORM :: declaration :: Ljava/util/ArrayList :: v46 = new java.util.ArrayList::DD,75061
75052 :: PRED :: IF :: Z :: if (v45 == #(null)) goto 215::CD,75053
75054 :: EXPR :: reference :: Ljava/util/List :: v47 = p1 $e .atomArrays::
75061 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atomArrays = v46::
75064 :: EXPR :: reference :: Ljava/util/List :: v49 = p1 $e .structureIdentifiers::DD,75067
75067 :: PRED :: IF :: Z :: if (v49 == #(null)) goto 236::CD,75068
75069 :: EXPR :: reference :: Ljava/util/List :: v51 = p1 $e .structureIdentifiers::
75068 :: NORM :: declaration :: Ljava/util/ArrayList :: v50 = new java.util.ArrayList::DD,75076
75076 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structureIdentifiers = v50::
75135 :: EXIT :: exit :: I :: org.biojava.nbio.structure.align.client.StructureName.compareTo(org.biojava.nbio.structure.align.client.StructureName)::JM,64651
75134 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.compareTo(org.biojava.nbio.structure.align.client.StructureName)::CE,75135:CD,75139:CD,75144
75139 :: CALL :: call :: Z :: v5 = p0 $this .equals(p1 $o )::JM,75144:CL,41215
75145 :: NORM :: compound :: I :: return #(0)::DD,75135
75144 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 15::CD,75145:CD,75146:CD,75151:CD,75156:CD,75184:CD,75185
75146 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getPdbId()::JM,75184:CL,88283
75151 :: CALL :: call :: Ljava/lang/String :: v14 = p0 $this .getPdbId()::JM,75185:CL,88283
75157 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 62::CF,75186:CD,75158:CD,75166
75156 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 48::CD,75157:CD,75159:CD,75186
75159 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 55::CD,75160:CD,75161:CD,75166:CD,75186
75158 :: NORM :: compound :: I :: return #(1)::DD,75135
75161 :: CALL :: call :: I :: v19 = v12.compareTo(v17)::JM,75186
75160 :: NORM :: compound :: I :: return #(-1)::DD,75135
75167 :: NORM :: compound :: I :: return v21::DD,75135
75166 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 69::CD,75167:CD,75168:CD,75172:CD,75176:CD,75181
75168 :: CALL :: call :: Ljava/lang/String :: v23 = p0 $this .getIdentifier()::JM,75181:CL,46852
75172 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $o .getIdentifier()::JM,75181:CL,46852
75176 :: CALL :: call :: I :: v27 = v23.compareTo(v25)::JM,75181
75181 :: NORM :: compound :: I :: return v27::DD,75135
75185 :: EXPR :: assign :: null :: PHI v17 = v14, #(null)::DD,75157:DD,75159:JM,75186:CF,75156
75184 :: EXPR :: assign :: null :: PHI v12 = v9, #(null)::DD,75156:JM,75186
75186 :: EXPR :: assign :: null :: PHI v21 = #(0), v19::DD,75166:DD,75167
75219 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::JM,64665
75218 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::CE,75219:CD,75226
75223 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .chainId::DD,75226
75227 :: EXPR :: reference :: Ljava/lang/String :: v6 = p1 $other .chainId::DD,75230
75226 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 41::CD,75230:CD,75258
75231 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .chainId::JM,75242
75230 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 41::CD,75237:CD,75242:CD,75258
75234 :: EXPR :: reference :: Ljava/lang/String :: v8 = p1 $other .chainId::JM,75242
75237 :: CALL :: call :: Z :: v10 = v7.equals(v8)::JM,75242
75243 :: EXPR :: reference :: Ljava/lang/String :: v46 = p0 $this .chainId::JM,75254
75242 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 41::CD,75249:CD,75254:CD,75258
75246 :: EXPR :: reference :: Ljava/lang/String :: v47 = p1 $other .chainId::JM,75254
75249 :: CALL :: call :: I :: v49 = v46.compareTo(v47)::JM,75254
75255 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .chainId::DD,75258
75254 :: NORM :: compound :: I :: return v49::CF,75219
75259 :: EXPR :: reference :: Ljava/lang/String :: v13 = p1 $other .chainId::DD,75262
75258 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 57::CD,75262:CD,75267
75263 :: NORM :: compound :: I :: return #(1)::CF,75219
75262 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 57::CD,75263:CD,75267
75264 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .chainId::DD,75267
75267 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 73::CD,75271:CD,75276
75268 :: EXPR :: reference :: Ljava/lang/String :: v15 = p1 $other .chainId::DD,75271
75271 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 73::CD,75272:CD,75276
75273 :: EXPR :: reference :: Ljava/lang/Integer :: v16 = p0 $this .seqNum::DD,75276
75272 :: NORM :: compound :: I :: return #(-1)::CF,75219
75277 :: EXPR :: reference :: Ljava/lang/Integer :: v17 = p1 $other .seqNum::DD,75280
75276 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 113::CD,75280:CD,75308
75281 :: EXPR :: reference :: Ljava/lang/Integer :: v18 = p0 $this .seqNum::JM,75292
75280 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 113::CD,75287:CD,75292:CD,75308
75284 :: EXPR :: reference :: Ljava/lang/Integer :: v19 = p1 $other .seqNum::JM,75292
75287 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,75292
75293 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .seqNum::JM,75304
75292 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 113::CD,75299:CD,75304:CD,75308
75296 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p1 $other .seqNum::JM,75304
75299 :: CALL :: call :: I :: v45 = v42.compareTo(v43)::JM,75304
75305 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,75308
75304 :: NORM :: compound :: I :: return v45::CF,75219
75309 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p1 $other .seqNum::DD,75312
75308 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 129::CD,75312:CD,75317
75313 :: NORM :: compound :: I :: return #(1)::CF,75219
75312 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 129::CD,75313:CD,75317
75314 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::DD,75317
75317 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 145::CD,75321:CD,75326
75318 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = p1 $other .seqNum::DD,75321
75321 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 145::CD,75322:CD,75326
75323 :: EXPR :: reference :: Ljava/lang/Character :: v26 = p0 $this .insCode::DD,75326
75322 :: NORM :: compound :: I :: return #(-1)::CF,75219
75327 :: EXPR :: reference :: Ljava/lang/Character :: v27 = p1 $other .insCode::DD,75330
75326 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 185::CD,75330:CD,75358
75331 :: EXPR :: reference :: Ljava/lang/Character :: v28 = p0 $this .insCode::JM,75342
75330 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 185::CD,75337:CD,75342:CD,75358
75334 :: EXPR :: reference :: Ljava/lang/Character :: v29 = p1 $other .insCode::JM,75342
75337 :: CALL :: call :: Z :: v31 = v28.equals(v29)::JM,75342
75343 :: EXPR :: reference :: Ljava/lang/Character :: v38 = p0 $this .insCode::JM,75354
75342 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 185::CD,75349:CD,75354:CD,75358
75346 :: EXPR :: reference :: Ljava/lang/Character :: v39 = p1 $other .insCode::JM,75354
75349 :: CALL :: call :: I :: v41 = v38.compareTo(v39)::JM,75354
75355 :: EXPR :: reference :: Ljava/lang/Character :: v32 = p0 $this .insCode::DD,75358
75354 :: NORM :: compound :: I :: return v41::CF,75219
75359 :: EXPR :: reference :: Ljava/lang/Character :: v33 = p1 $other .insCode::DD,75362
75358 :: PRED :: IF :: Z :: if (v32 == #(null)) goto 201::CD,75362:CD,75367
75363 :: NORM :: compound :: I :: return #(1)::CF,75219
75362 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 201::CD,75363:CD,75367
75364 :: EXPR :: reference :: Ljava/lang/Character :: v34 = p0 $this .insCode::DD,75367
75367 :: PRED :: IF :: Z :: if (v34 != #(null)) goto 217::CD,75371:CD,75373
75368 :: EXPR :: reference :: Ljava/lang/Character :: v35 = p1 $other .insCode::DD,75371
75371 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 217::CD,75372:CD,75373
75373 :: NORM :: compound :: I :: return #(0)::CF,75219
75372 :: NORM :: compound :: I :: return #(-1)::CF,75219
75433 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::JM,64679
75432 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::CE,75433:CD,75437:CD,75441:CD,75445:CD,75450
75437 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .toString()::JM,75450:CL,88311
75441 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $other .toString()::JM,75450:CL,88311
75445 :: CALL :: call :: I :: v9 = v5.compareTo(v7)::JM,75450
75450 :: NORM :: compound :: I :: return v9::DD,75433
75462 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentEnsemble :: v5 = p1 $ma .parent::DD,75465
75465 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignmentEnsemble :: p0 $this .parent = v5::
75468 :: EXPR :: reference :: I :: v6 = p1 $ma .length::DD,75471
75471 :: EXPR :: modify :: I :: p0 $this .length = v6::
75474 :: EXPR :: reference :: I :: v7 = p1 $ma .coreLength::DD,75477
75477 :: EXPR :: modify :: I :: p0 $this .coreLength = v7::
75480 :: EXPR :: modify :: Ljava/util/List :: p0 $this .blockSets = #(null)::
75483 :: EXPR :: reference :: Ljava/util/List :: v9 = p1 $ma .blockSets::DD,75486
75487 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::DD,75491
75486 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 112::CD,75487:CD,75497:CD,75523:CD,75527
75491 :: EXPR :: modify :: Ljava/util/List :: p0 $this .blockSets = v10::
75494 :: EXPR :: reference :: Ljava/util/List :: v12 = p1 $ma .blockSets::JM,75527
75497 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,75527
75502 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,75527
75507 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/BlockSet :: v22 = v20.clone()::CL,88442
75515 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .blockSets::
75518 :: CALL :: call :: Z :: v26 = v24.add(v22)::
75523 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,75527
75527 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 66::CD,75502:CD,75507:CD,75518:CD,75523:JM,75527
75587 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.util.MultipleAlignmentTools.getAverageResidueDistances(java.util.List)::CD,75591:CD,75595:CD,75711:CD,75760:JM,75616:JM,75700:JM,75707
75591 :: CALL :: call :: I :: v4 = p1 $transformed .size()::JM,75616:JM,75700:JM,75707:JM,75711
75595 :: CALL :: call :: Ljava/lang/Object :: v7 = p1 $transformed .get(#(0))::JM,75616:JM,75700:JM,75707:JM,75711
75611 :: CALL :: call :: Ljava/lang/Object :: v18 = p1 $transformed .get(v57)::JM,75616:JM,75700:JM,75707:JM,75711
75617 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v19[v52]::DD,75621
75616 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::
75621 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 71::CD,75623:CD,75700:CD,75753:CD,75754:CD,75755:CD,75756:CD,75757
75623 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v57 + #(1)::DD,75755
75625 :: CALL :: call :: Ljava/lang/Object :: v25 = p1 $transformed .get(v50)::JM,75616:JM,75700:JM,75707:JM,75711
75699 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,75755:CF,75753
75701 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v54 + #(1)::DD,75759:CF,75758
75700 :: PRED :: IF :: Z :: if (v50 < v4) goto 80::CF,75756:CD,75625:CD,75699:CD,75753:CD,75754:CD,75755:JM,75616:JM,75700:JM,75707:JM,75711
75702 :: CALL :: call :: Ljava/lang/Object :: v14 = p1 $transformed .get(v57)::JM,75616:JM,75700:JM,75707:JM,75711
75707 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::CF,75708
75709 :: PRED :: IF :: Z :: if (v52 < v16) goto 47::CD,75611:CD,75616:CD,75621:CD,75701:CD,75702:CD,75707:CD,75708:CD,75756:CD,75757:CD,75758:CD,75759:JM,75700:JM,75711:CF,75710
75708 :: EXPR :: assign :: I :: v16 = v15.length::CF,75709
75711 :: PRED :: IF :: Z :: if (v56 < v4) goto 41::CD,75702:CD,75707:CD,75708:CD,75709:CD,75710:CD,75758:CD,75759:CD,75760
75710 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v57 + #(1)::DD,75760
75753 :: EXPR :: assign :: null :: PHI v58 = v57, v58::CF,75754:DD,75753:DD,75756
75755 :: EXPR :: assign :: null :: PHI v50 = v23, v49::JM,75616:JM,75707:JM,75711:DD,75699:DD,75700
75754 :: EXPR :: assign :: null :: PHI v53 = v52, v53::CF,75755:DD,75754:DD,75757
75757 :: EXPR :: assign :: null :: PHI v54 = v52, v53::DD,75701
75756 :: EXPR :: assign :: null :: PHI v59 = v57, v58::CF,75757:DD,75758
75759 :: EXPR :: assign :: null :: PHI v52 = #(0), v51::DD,75709:DD,75754:DD,75757:JM,75616:JM,75700:JM,75707:JM,75711
75758 :: EXPR :: assign :: null :: PHI v57 = v56, v59::CF,75759:JM,75616:JM,75700:JM,75707:JM,75711:DD,75623:DD,75710:DD,75753:DD,75756
75760 :: EXPR :: assign :: null :: PHI v56 = #(0), v55::DD,75711:DD,75758
75886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockImpl.clear()::CD,75890
75890 :: CALL :: call :: V :: p0 $this .clear()::CL,65089
75893 :: EXPR :: modify :: I :: p0 $this .coreLength = #(-1)::
75905 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChain()::CE,75906:CD,75912
75906 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.HetatomImpl.getChain()::JM,98116:JM,117434
75909 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .parent::DD,75912
75912 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::CF,75906
75915 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.clone()::JM,94563:JM,95374:JM,115557:JM,130235
75914 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.clone()::CE,75915:CD,75918:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,75926:CD,75933:CD,75941:CD,75948:CD,75971:CD,75975:CD,75979:CD,76010:CD,76018
75918 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v3 = new org.biojava.nbio.structure.HetatomImpl::DD,76018
75926 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,88551
75933 :: CALL :: call :: V :: v3.setResidueNumber(v8)::CL,88562
75941 :: CALL :: call :: V :: v3.setPDBName(v11)::CL,88573
75945 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .atoms::JM,75975
75948 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,75975
75953 :: CALL :: call :: Ljava/lang/Object :: v20 = v15.next()::JM,75975
75958 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.clone()::CL,77172
75963 :: CALL :: call :: V :: v3.addAtom(v24)::CL,88604
75967 :: CALL :: call :: V :: v24.setGroup(v3)::CL,88785
75971 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,75975
75975 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CD,75953:CD,75958:CD,75963:CD,75967:CD,75971:JM,75975
75976 :: EXPR :: reference :: Ljava/util/List :: v27 = p0 $this .altLocs::DD,75979
75979 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 146::CD,75983:CD,76002:CD,76006
75980 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .altLocs::JM,76006
75983 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,76006
75988 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,76006
75993 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.clone()::CL,75914:CL,76231:CL,76056
75998 :: CALL :: call :: V :: v3.addAltLoc(v39)::CL,88796
76002 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,76006
76007 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = p0 $this .chemComp::DD,76010
76006 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 110::CD,75988:CD,75993:CD,75998:CD,76002:JM,76006
76010 :: PRED :: IF :: Z :: if (v44 == #(null)) goto 161::CD,76014:CF,76018
76014 :: CALL :: call :: V :: v3.setChemComp(v45)::CL,88828
76018 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,75915
76057 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.AminoAcidImpl.clone()::JM,94563:JM,95374:JM,115557:JM,130235
76056 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.clone()::CE,76057:CD,76060:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,76068:CD,76076:CD,76084:CD,76092:CD,76099:CD,76106:CD,76129:CD,76133:CD,76134:CD,76138:CD,76179:CD,76187
76060 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v3 = new org.biojava.nbio.structure.AminoAcidImpl::DD,76187
76068 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,88551
76076 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,88562
76084 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,88858
76092 :: CALL :: call :: V :: v3.setAminoType(v15)::CL,88878
76099 :: CALL :: call :: V :: v3.setRecordType(v17)::CL,88889
76103 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .atoms::JM,76133
76106 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,76133
76111 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,76133
76116 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.clone()::CL,77172
76121 :: CALL :: call :: V :: v3.addAtom(v30)::CL,88604
76125 :: CALL :: call :: V :: v30.setGroup(v3)::CL,88785
76129 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,76133
76133 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 62::CD,76111:CD,76116:CD,76121:CD,76125:CD,76129:JM,76133
76134 :: CALL :: call :: Ljava/util/List :: v34 = p0 $this .getAltLocs()::JM,76138:CL,74718
76139 :: CALL :: call :: Ljava/util/List :: v37 = p0 $this .getAltLocs()::JM,76147:CL,74718
76138 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 174::CD,76139:CD,76143:CD,76147
76143 :: CALL :: call :: Z :: v39 = v37.isEmpty()::JM,76147
76147 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 174::CD,76148:CD,76152:CD,76171:CD,76175
76148 :: CALL :: call :: Ljava/util/List :: v41 = p0 $this .getAltLocs()::JM,76175:CL,74718
76152 :: CALL :: call :: Ljava/util/Iterator :: v43 = v41.iterator()::JM,76175
76157 :: CALL :: call :: Ljava/lang/Object :: v47 = v43.next()::JM,76175
76162 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.clone()::CL,75914:CL,76231:CL,76056
76167 :: CALL :: call :: V :: v3.addAltLoc(v51)::CL,88796
76171 :: CALL :: call :: Z :: v45 = v43.hasNext()::JM,76175
76175 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 138::CD,76157:CD,76162:CD,76167:CD,76171:JM,76175
76176 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v56 = p0 $this .chemComp::DD,76179
76179 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 189::CD,76183:CF,76187
76183 :: CALL :: call :: V :: v3.setChemComp(v57)::CL,88828
76187 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,76057
76231 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.clone()::CE,76232:CD,76235:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,76243:CD,76251:CD,76259:CD,76266:CD,76289:CD,76293:CD,76294:CD,76298:CD,76339:CD,76347
76232 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.NucleotideImpl.clone()::JM,94563:JM,95374:JM,115557:JM,130235
76235 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v3 = new org.biojava.nbio.structure.NucleotideImpl::DD,76347
76243 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,88551
76251 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,88562
76259 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,88573
76263 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .atoms::JM,76293
76266 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,76293
76271 :: CALL :: call :: Ljava/lang/Object :: v21 = v16.next()::JM,76293
76276 :: CALL :: call :: Ljava/lang/Object :: v24 = v22.clone()::CL,77172
76281 :: CALL :: call :: V :: v3.addAtom(v25)::CL,88604
76285 :: CALL :: call :: V :: v25.setGroup(v3)::CL,88785
76289 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,76293
76293 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 46::CD,76271:CD,76276:CD,76281:CD,76285:CD,76289:JM,76293
76294 :: CALL :: call :: Ljava/util/List :: v29 = p0 $this .getAltLocs()::JM,76298:CL,74718
76299 :: CALL :: call :: Ljava/util/List :: v32 = p0 $this .getAltLocs()::JM,76307:CL,74718
76298 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 158::CD,76299:CD,76303:CD,76307
76303 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,76307
76307 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 158::CD,76308:CD,76312:CD,76331:CD,76335
76308 :: CALL :: call :: Ljava/util/List :: v36 = p0 $this .getAltLocs()::JM,76335:CL,74718
76312 :: CALL :: call :: Ljava/util/Iterator :: v38 = v36.iterator()::JM,76335
76317 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,76335
76322 :: CALL :: call :: Ljava/lang/Object :: v45 = v43.clone()::CL,75914:CL,76231:CL,76056
76327 :: CALL :: call :: V :: v3.addAltLoc(v46)::CL,88796
76331 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,76335
76335 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 122::CD,76317:CD,76322:CD,76327:CD,76331:JM,76335
76336 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = p0 $this .chemComp::DD,76339
76339 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 173::CD,76343:CF,76347
76343 :: CALL :: call :: V :: v3.setChemComp(v52)::CL,88828
76347 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,76232
76387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::CE,76388:CD,76392:CD,76399:CD,76408:CD,76413:CD,76417:CD,76421:CD,76426:CD,76427:CD,76429:CD,76434:CD,76439:CD,76447:CD,76452
76388 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::JM,96388
76392 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $resNum .toString()::CL,74617
76399 :: CALL :: call :: Z :: v8 = v6.containsKey(v5)::
76408 :: CALL :: call :: Ljava/lang/Object :: v27 = v25.get(v5)::JM,76413
76413 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::JM,76426
76414 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .groups::JM,76426
76417 :: CALL :: call :: I :: v31 = v28.intValue()::JM,76426
76421 :: CALL :: call :: Ljava/lang/Object :: v33 = v29.get(v31)::JM,76426
76427 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v34::DD,76388
76426 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::CF,76427
76429 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
76434 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v5)::
76439 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#( in chain ))::
76444 :: EXPR :: reference :: Ljava/lang/String :: v19 = p0 $this .chainID::
76447 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(v19)::
76452 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
76471 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getCentroid(org.biojava.nbio.structure.Atom[])::CD,76477:CD,76483:CD,76496:CD,76542:CD,76543:CD,76548:CD,76549:CD,76558:CD,76559:CD,76568:CD,76569:JM,88919:JM,88924:CD,76578:CD,76583
76477 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v39 = new java.lang.IllegalArgumentException::
76483 :: NORM :: declaration :: [D :: v6 = new []::
76484 :: EXPR :: modify :: D :: v6[#(0)] = #(0.0 d)::
76488 :: EXPR :: modify :: D :: v6[#(1)] = #(0.0 d)::
76492 :: EXPR :: modify :: D :: v6[#(2)] = #(0.0 d)::
76496 :: EXPR :: assign :: I :: v10 = p1 $atomSet .length::DD,76542
76502 :: EXPR :: reference :: D :: v12 = v6[#(0)]::DD,76510
76506 :: CALL :: call :: D :: v14 = v11.getX()::JM,76510:CL,76644
76511 :: EXPR :: modify :: D :: v6[#(0)] = v15::
76510 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v12 + v14::DD,76511
76515 :: EXPR :: reference :: D :: v16 = v6[#(1)]::DD,76523
76519 :: CALL :: call :: D :: v18 = v11.getY()::JM,76523:CL,76658
76523 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v16 + v18::DD,76524
76524 :: EXPR :: modify :: D :: v6[#(1)] = v19::
76528 :: EXPR :: reference :: D :: v20 = v6[#(2)]::DD,76536
76532 :: CALL :: call :: D :: v22 = v11.getZ()::JM,76536:CL,76672
76537 :: EXPR :: modify :: D :: v6[#(2)] = v23::
76536 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v20 + v22::DD,76537
76541 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,76583
76543 :: EXPR :: assign :: I :: v26 = p1 $atomSet .length::DD,76548:DD,76558:DD,76568
76542 :: PRED :: IF :: Z :: if (v25 < v10) goto 47::CD,76506:CD,76510:CD,76519:CD,76523:CD,76532:CD,76536:CD,76541:CD,76583:CF,76543
76544 :: EXPR :: reference :: D :: v27 = v6[#(0)]::DD,76549
76549 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 / v28::DD,76550
76548 :: EXPR :: assign :: D :: v28 = CONVERT I to D v26::CF,76549
76550 :: EXPR :: modify :: D :: v6[#(0)] = v29::
76554 :: EXPR :: reference :: D :: v30 = v6[#(1)]::DD,76559
76559 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v30 / v31::DD,76560
76558 :: EXPR :: assign :: D :: v31 = CONVERT I to D v26::CF,76559
76560 :: EXPR :: modify :: D :: v6[#(1)] = v32::
76564 :: EXPR :: reference :: D :: v33 = v6[#(2)]::DD,76569
76569 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v33 / v34::DD,76570
76568 :: EXPR :: assign :: D :: v34 = CONVERT I to D v26::CF,76569
76570 :: EXPR :: modify :: D :: v6[#(2)] = v35::
76578 :: CALL :: call :: V :: v36.setCoords(v6)::CL,88966
76583 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,76541:DD,76542
76645 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getX()::JM,65452:JM,65490:JM,76510:JM,77369:JM,77451:JM,88987
76644 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getX()::CE,76645:CD,76655
76648 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
76651 :: EXPR :: reference :: D :: v5 = v3[#(0)]::DD,76655
76655 :: NORM :: compound :: D :: return v5::CF,76645
76659 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getY()::JM,65460:JM,65498:JM,76523:JM,77378:JM,77460:JM,88996
76658 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getY()::CE,76659:CD,76669
76662 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
76665 :: EXPR :: reference :: D :: v5 = v3[#(1)]::DD,76669
76669 :: NORM :: compound :: D :: return v5::CF,76659
76673 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getZ()::JM,65468:JM,65506:JM,76536:JM,77387:JM,77469:JM,89005
76672 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getZ()::CE,76673:CD,76683
76676 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
76679 :: EXPR :: reference :: D :: v5 = v3[#(2)]::DD,76683
76683 :: NORM :: compound :: D :: return v5::CF,76673
76716 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v16 = new java.lang.IllegalArgumentException::
76749 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.centerAtoms(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom)::CD,76754:CD,76776:CD,76777:CD,76779
76754 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = getCenterVector(p1 $atomSet , p2 $centroid )::CL,88977
76766 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v12 = add(v10, v5)::CL,89038
76775 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,76779
76777 :: PRED :: IF :: Z :: if (v15 < v9) goto 21::CD,76766:CD,76775:CD,76776:CD,76779
76776 :: EXPR :: assign :: I :: v9 = p1 $atomSet .length::CF,76777
76779 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,76775:DD,76777:CF,76776
76801 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getCoords()::CE,76802:CD,76808
76802 :: EXIT :: exit :: [D :: org.biojava.nbio.structure.AtomImpl.getCoords()::JM,88625
76805 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::DD,76808
76808 :: NORM :: compound :: [D :: return v3::CF,76802
76810 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SVDSuperimposer.calculate([][],[][])::JM,76716:CD,76826:CD,76830:CD,76835:CD,76839:CD,76843:CD,76847:CD,76852:CD,76856:CD,76861:CD,76871:CD,76875:CD,76876:CD,76942:CD,76950
76826 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v10 = v7.transpose()::CL,89099
76830 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v12 = v10.times(v5)::CL,89179
76835 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/SingularValueDecomposition :: v14 = v12.svd()::CL,89346
76839 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v16 = v14.getU()::CL,89358
76843 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v18 = v14.getV()::CL,89394
76847 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.clone()::CL,89419
76852 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v23 = v16.transpose()::CL,89099
76856 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v25 = v18.times(v23)::CL,89179
76861 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v27 = v25.transpose()::CL,89099
76871 :: CALL :: call :: D :: v30 = v28.det()::JM,76875:CL,89429
76875 :: EXPR :: assign :: Z :: v32 = v30 > #(0.0 d)::DD,76876
76877 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v35 = v21.transpose()::CL,89099
76876 :: PRED :: IF :: Z :: if (v32 >= #(0)) goto 187::CD,76877:CD,76888:CD,76901:CD,76914:CD,76920:CD,76924:CD,76929
76888 :: CALL :: call :: V :: v35.set(#(2), #(0), v39)::CL,77415
76901 :: CALL :: call :: V :: v35.set(#(2), #(1), v44)::CL,77415
76914 :: CALL :: call :: V :: v35.set(#(2), #(2), v48)::CL,77415
76920 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v51 = v35.transpose()::CL,89099
76924 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v53 = v51.times(v23)::CL,89179
76929 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v55 = v53.transpose()::CL,89099
76942 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v61 = v58.times(v59)::CL,89179
76950 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v64 = v62.minus(v61)::CL,89445
77027 :: EXIT :: exit :: Ljavax/vecmath/Matrix4d :: org.biojava.nbio.structure.Calc.getTransformation(org.biojava.nbio.structure.jama.Matrix,org.biojava.nbio.structure.jama.Matrix)::JM,65656
77026 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getTransformation(org.biojava.nbio.structure.jama.Matrix,org.biojava.nbio.structure.jama.Matrix)::CE,77027:CD,77031:CD,77056
77031 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,77056
77056 :: NORM :: compound :: Ljavax/vecmath/Matrix4d :: return v4::CF,77027
77063 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.transform(org.biojava.nbio.structure.Atom,javax.vecmath.Matrix4d)::CD,77092:CD,77097:CD,77102
77092 :: CALL :: call :: V :: p1 $atom .setX(v13)::CL,89618
77097 :: CALL :: call :: V :: p1 $atom .setY(v15)::CL,89634
77102 :: CALL :: call :: V :: p1 $atom .setZ(v17)::CL,89650
77120 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.size()::CD,77127:CD,77145
77124 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/multiple/MultipleAlignment :: v3 = p0 $this .parent::DD,77127
77127 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 18::CD,77131:CD,77136:CD,77154
77131 :: CALL :: call :: I :: v21 = v19.size()::CL,38720
77136 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getBlocks()::CL,47053
77145 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v16 = new java.lang.IndexOutOfBoundsException::
77151 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .blocks::
77154 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(#(0))::
77173 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.AtomImpl.clone()::JM,65869
77172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.clone()::CE,77173:CD,77176:JM,88919:JM,88924:CD,77184:CD,77192:CD,77206:CD,77218:CD,77226:CD,77234:CD,77242:CD,77250:CD,77258:CD,77262
77176 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AtomImpl :: v3 = new org.biojava.nbio.structure.AtomImpl::DD,77262
77184 :: CALL :: call :: V :: v3.setOccupancy(v6)::CL,89675
77192 :: CALL :: call :: V :: v3.setTempFactor(v9)::CL,89695
77196 :: EXPR :: reference :: C :: v11 = p0 $this .altLoc::DD,77199
77199 :: EXPR :: modify :: C :: v3.altLoc = v11::
77206 :: CALL :: call :: V :: v3.setCharge(v13)::CL,89715
77218 :: CALL :: call :: V :: v3.setX(v18)::CL,89618
77226 :: CALL :: call :: V :: v3.setY(v21)::CL,89634
77234 :: CALL :: call :: V :: v3.setZ(v24)::CL,89650
77242 :: CALL :: call :: V :: v3.setPDBserial(v27)::CL,89735
77250 :: CALL :: call :: V :: v3.setName(v30)::CL,89746
77258 :: CALL :: call :: V :: v3.setElement(v33)::CL,89757
77262 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,77173
77357 :: EXIT :: exit :: D :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,128157:JM,128310
77356 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::CE,77357:CD,77361:CD,77365:CD,77369:CD,77370:CD,77374:CD,77378:CD,77379:CD,77383:CD,77387:CD,77388:CD,77389:CD,77390:CD,77391:CD,77392:CD,77393:CD,77397
77361 :: CALL :: call :: D :: v5 = p1 $a .getX()::JM,77369:CL,76644
77365 :: CALL :: call :: D :: v7 = p2 $b .getX()::JM,77369:CL,76644
77369 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 - v7::DD,77388
77370 :: CALL :: call :: D :: v10 = p1 $a .getY()::JM,77378:CL,76658
77374 :: CALL :: call :: D :: v12 = p2 $b .getY()::JM,77378:CL,76658
77379 :: CALL :: call :: D :: v15 = p1 $a .getZ()::JM,77387:CL,76672
77378 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v10 - v12::DD,77389
77383 :: CALL :: call :: D :: v17 = p2 $b .getZ()::JM,77387:CL,76672
77387 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 - v17::DD,77391:CF,77388
77389 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v13 * v13::CF,77390
77388 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v8 * v8::DD,77390:CF,77389
77391 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v18 * v18::CF,77392
77390 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 + v20::DD,77392:CF,77391
77393 :: CALL :: call :: D :: v25 = sqrt(v23)::JM,77393:JM,77397
77392 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 + v22::JM,77393:JM,77397
77397 :: NORM :: compound :: D :: return v25::CF,77357
77415 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.set(int,int,double)::JM,77429
77422 :: EXPR :: reference :: [[D :: v6 = p0 $this .A::
77425 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[p1 $i ]::
77429 :: EXPR :: modify :: D :: v7[p2 $j ] = p3 $s ::
77439 :: EXIT :: exit :: D :: org.biojava.nbio.structure.Calc.getDistanceFast(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,66510
77438 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getDistanceFast(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::CE,77439:CD,77443:CD,77447:CD,77451:CD,77452:CD,77456:CD,77460:CD,77461:CD,77465:CD,77469:CD,77470:CD,77471:CD,77472:CD,77473:CD,77474:CD,77475
77443 :: CALL :: call :: D :: v5 = p1 $a .getX()::JM,77451:CL,76644
77447 :: CALL :: call :: D :: v7 = p2 $b .getX()::JM,77451:CL,76644
77451 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 - v7::DD,77470
77452 :: CALL :: call :: D :: v10 = p1 $a .getY()::JM,77460:CL,76658
77456 :: CALL :: call :: D :: v12 = p2 $b .getY()::JM,77460:CL,76658
77461 :: CALL :: call :: D :: v15 = p1 $a .getZ()::JM,77469:CL,76672
77460 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v10 - v12::DD,77471
77465 :: CALL :: call :: D :: v17 = p2 $b .getZ()::JM,77469:CL,76672
77469 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 - v17::DD,77473:CF,77470
77471 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v13 * v13::CF,77472
77470 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v8 * v8::DD,77472:CF,77471
77473 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v18 * v18::CF,77474
77472 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 + v20::DD,77474:CF,77473
77475 :: NORM :: compound :: D :: return v23::CF,77439
77474 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 + v22::CF,77475
77491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SVDSuperimposer.getTMScore(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom[],int,int)::
77605 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.updateLength()::CD,77609:CD,77618:CD,77630:CD,77651:CD,77655
77609 :: CALL :: call :: Ljava/util/List :: v4 = p0 $this .getBlocks()::CL,47053
77618 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v20 = new java.lang.IndexOutOfBoundsException::
77624 :: EXPR :: modify :: I :: p0 $this .length = #(0)::
77627 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .blocks::JM,77655
77630 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,77655
77635 :: CALL :: call :: Ljava/lang/Object :: v14 = v10.next()::JM,77655
77640 :: EXPR :: reference :: I :: v16 = p0 $this .length::DD,77647
77643 :: CALL :: call :: I :: v18 = v15.length()::JM,77647:CL,47111
77647 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v16 + v18::DD,77648
77648 :: EXPR :: modify :: I :: p0 $this .length = v19::
77651 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,77655
77655 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 41::CD,77635:CD,77643:CD,77647:CD,77651:JM,77655
77670 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.updateCoreLength()::CD,77674:CD,77683:CD,77695:CD,77716:CD,77720
77674 :: CALL :: call :: Ljava/util/List :: v4 = p0 $this .getBlocks()::CL,47053
77683 :: NORM :: declaration :: Ljava/lang/IndexOutOfBoundsException :: v20 = new java.lang.IndexOutOfBoundsException::
77689 :: EXPR :: modify :: I :: p0 $this .coreLength = #(0)::
77692 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .blocks::JM,77720
77695 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,77720
77700 :: CALL :: call :: Ljava/lang/Object :: v14 = v10.next()::JM,77720
77705 :: EXPR :: reference :: I :: v16 = p0 $this .coreLength::DD,77712
77708 :: CALL :: call :: I :: v18 = v15.getCoreLength()::JM,77712:CL,52874
77713 :: EXPR :: modify :: I :: p0 $this .coreLength = v19::
77712 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v16 + v18::DD,77713
77716 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,77720
77720 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 41::CD,77700:CD,77708:CD,77712:CD,77716:JM,77720
77735 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getRepresentativeAtoms(org.biojava.nbio.structure.StructureIdentifier)::CE,77736:CD,77740:CD,77745:CD,77749
77736 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.align.util.AtomCache.getRepresentativeAtoms(org.biojava.nbio.structure.StructureIdentifier)::
77740 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p0 $this .getStructure(p1 $name )::CL,36611
77745 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v8 = getRepresentativeAtomArray(v6)::JM,77749:CL,89768
77749 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Atom :: return v8::DD,77736
80446 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
80453 :: EXIT :: exit :: Ljava/net/URLStreamHandler :: java.net.URL.getURLStreamHandler(java.lang.String)::JM,69960
80456 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,80463
80458 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,80463:JM,80640:JM,80643:JM,80567:JM,80470:JM,80614:JM,80637:JM,80604
80463 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,80464:DD,80637:DD,80645
80465 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,80467
80464 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CF,80645:CD,80465:CD,80467:CD,80475:CD,80597:CD,80599:CD,80604:CD,80605:CD,80633:CD,80637:CD,80638:CD,80642
80467 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,80637:CD,80468:CD,80470:CD,80638
80468 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,80470:JM,80637
80470 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,80470:JM,80637:JM,80640:JM,80643:JM,80567:JM,80614:JM,80604:JM,80463
80475 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CF,80642:CD,80482:CD,80486:CD,80487:CD,80506:CD,80507:CD,80515:CD,80520:CD,80524:CD,80588:CD,80641
80482 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,80486
80487 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,80488:CD,80489:CD,80497:CD,80502
80486 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,80487
80489 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
80488 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
80497 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
80502 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
80507 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
80506 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
80515 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
80520 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
80524 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,80593
80531 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
80535 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
80539 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,80640:JM,80567
80540 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
80548 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,80640:JM,80567
80553 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,80640:JM,80567:JM,80643:JM,80470:JM,80614:JM,80637:JM,80604:JM,80463
80558 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,80640:JM,80643:JM,80567:JM,80604
80563 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,80640:JM,80567
80567 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,80640:JM,80567
80572 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,80640
80576 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,80640:JM,80567
80581 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,80641:CD,80582:CD,80586
80582 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,80582:JM,80586
80586 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,80641
80589 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,80593
80588 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CF,80642:CD,80589:CD,80593
80593 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CF,80642:CD,80531:CD,80535:CD,80539:CD,80540:CD,80548:CD,80553:CD,80558:CD,80563:CD,80567:CD,80581:CD,80588:CD,80640:CD,80641
80597 :: EXPR :: reference :: Ljava/util/Hashtable :: v82 = java.net.URL.handlers::JM,80604
80599 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(p1 $protocol )::JM,80604:JM,80640:JM,80643:JM,80567:JM,80470:JM,80614:JM,80637:JM,80463
80605 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 265::CD,80607:CD,80608:CD,80619:CD,80620:CD,80633:CD,80643:CD,80644:CD,80645
80604 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,80605:DD,80607:DD,80643
80607 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v85::DD,80453
80609 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v86 = java.net.URL.factory::DD,80611
80608 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 287::CF,80643:CD,80609:CD,80611
80611 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 287::CF,80643:CD,80612:CD,80614
80612 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v87 = java.net.URL.factory::JM,80643:JM,80614
80614 :: CALL :: call :: Ljava/net/URLStreamHandler :: v89 = v87.createURLStreamHandler(p1 $protocol )::JM,80643:JM,80614:JM,80640:JM,80567:JM,80470:JM,80637:JM,80604:JM,80463
80619 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 294::CF,80644
80621 :: EXPR :: reference :: Ljava/util/Hashtable :: v92 = java.net.URL.handlers::
80620 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 307::CD,80621:CD,80623
80623 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.put(p1 $protocol , v91)::JM,80640:JM,80643:JM,80567:JM,80470:JM,80614:JM,80637:JM,80604:JM,80463
80633 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v96::DD,80453
80637 :: EXPR :: assign :: null :: PHI v14 = v6, v12::CF,80638:DD,80475:DD,80641:DD,80642
80638 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::DD,80608:CF,80475
80641 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,80588:DD,80641:DD,80642
80640 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,80581:JM,80582:JM,80586
80643 :: EXPR :: assign :: null :: PHI v90 = v85, v85, v89::DD,80619:DD,80644
80642 :: EXPR :: assign :: null :: PHI v80 = v14, v77, v77::DD,80644
80645 :: EXPR :: assign :: null :: PHI v96 = v6, v91::CF,80633
80644 :: EXPR :: assign :: null :: PHI v91 = v80, v90::DD,80620:JM,80640:JM,80643:JM,80567:JM,80637:JM,80604:JM,80463:DD,80645
80796 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getInputStream(java.lang.String)::CD,80806:CD,80807:CD,80812:CD,80817:CD,80826:CD,80831:CD,80836:CD,80837:CD,80842:CD,80847:CD,80852
80807 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
80806 :: NORM :: declaration :: Ljava/io/IOException :: v28 = new java.io.IOException::
80812 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v29.append(p1 $pdbId )::
80817 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
80826 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .downloadStructure(p1 $pdbId )::CL,90569
80831 :: CALL :: call :: Z :: v10 = v8.exists()::
80837 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
80836 :: NORM :: declaration :: Ljava/io/IOException :: v16 = new java.io.IOException::
80842 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $pdbId )::
80847 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( not found and unable...))::
80852 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
80884 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getStructure(java.io.InputStream)::JM,61644:JM,61667:JM,49701:JM,61674:CD,80907:CD,80914:CD,80918:CD,80919:CD,80928
80907 :: CALL :: call :: V :: v8.setFileParsingParameters(v10)::CL,61691
80914 :: CALL :: call :: V :: v4.addMMcifConsumer(v12)::CL,61702
80919 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v15 = new java.io.InputStreamReader::
80918 :: NORM :: declaration :: Ljava/io/BufferedReader :: v14 = new java.io.BufferedReader::CF,80919
80928 :: CALL :: call :: V :: v4.parse(v14)::CL,61719
80971 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::CE,80972:CD,80975:CD,80984:CD,80988
80972 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::JM,70458
80975 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainDescriptionFileName()::CL,90948
80984 :: CALL :: call :: Z :: v8 = v5.exists()::JM,80988
80988 :: NORM :: compound :: Z :: return v8::DD,80972
80995 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainDescriptionFile()::CD,81000:CD,81009:CD,81018
81000 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-descripti...))::CL,90983
81009 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainDescriptionFileName()::CL,90948
81018 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,91062
81038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile()::CD,81043:CD,81055:CD,81056:CD,81070
81043 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainDescriptionFileName()::CL,90948
81055 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,81056
81056 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
81070 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile(v9)::CL,91279
81087 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainListInstalled()::CD,81094:CD,81098:CD,81111:CD,81123:CD,81134:CD,81146
81091 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainList::JM,81098
81094 :: CALL :: call :: Z :: v5 = v3.get()::JM,81098
81098 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,81100:CD,81104:CD,81128:CD,81154
81100 :: CALL :: call :: Z :: v8 = p0 $this .domainListFileAvailable()::JM,81104:CL,92007
81105 :: CALL :: call :: V :: p0 $this .downloadDomainListFile()::CL,92031
81104 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,81105
81111 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
81120 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainList::
81123 :: CALL :: call :: V :: v16.set(#(0))::
81128 :: CALL :: call :: V :: p0 $this .parseCathDomainList()::CL,92074
81134 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
81143 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainList::
81146 :: CALL :: call :: V :: v24.set(#(0))::
81151 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainList::JM,81154
81154 :: CALL :: call :: V :: v26.set(#(1))::JM,81154
81171 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::JM,70560
81170 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::CE,81171:CD,81174:CD,81183:CD,81187
81174 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomallFileName()::CL,92123
81183 :: CALL :: call :: Z :: v8 = v5.exists()::JM,81187
81187 :: NORM :: compound :: Z :: return v8::DD,81171
81194 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomallFile()::CD,81199:CD,81208:CD,81217
81199 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-boundarie...))::CL,90983
81208 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomallFileName()::CL,92123
81217 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,91062
81237 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall()::CD,81242:CD,81254:CD,81255:CD,81269
81242 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomallFileName()::CL,92123
81255 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
81254 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,81255
81269 :: CALL :: call :: V :: p0 $this .parseCathDomall(v9)::CL,92158
81286 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.releaseReferences()::CD,81292:CD,81294:CD,81298:CD,81332:CD,81336
81292 :: EXPR :: reference :: Ljava/util/Map :: v3 = org.biojava.nbio.structure.ecod.EcodFactory.versionedEcodDBs::JM,81336:JM,81307
81294 :: CALL :: call :: Ljava/util/Set :: v5 = v3.entrySet()::JM,81336:JM,81307
81298 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,81336:JM,81307
81303 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,81336:JM,81307
81307 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,81312
81308 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.getValue()::JM,81312
81313 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.get()::JM,81317
81312 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,81317
81317 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 73::CD,81329:JM,81336:JM,81307
81329 :: CALL :: call :: V :: v7.remove()::
81332 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,81336:JM,81307
81336 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 24::CD,81303:CD,81307:CD,81308:CD,81312:CD,81313:CD,81317:CD,81332:JM,81336
81369 :: NORM :: declaration :: Ljava/util/concurrent/locks/ReentrantReadWriteLock :: v6 = new java.util.concurrent.locks.ReentrantReadWriteLock::DD,81373
81373 :: EXPR :: modify :: Ljava/util/concurrent/locks/ReadWriteLock :: p0 $this .domainsFileLock = v6::
81376 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheLocation = p1 $cacheLocation ::
81379 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .requestedVersion = p2 $version ::
81382 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .url = #(http://prodata.swmed.edu)::
81385 :: EXPR :: modify :: Ljava/util/List :: p0 $this .allDomains = #(null)::
81388 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = #(null)::
81436 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getVersion()::CD,81440
81440 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,93058
81460 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.indexDomains()::CD,81483:CD,81487:CD,81499:CD,81573:CD,81577
81480 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,81483
81483 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::CD,81484:CF,81487
81484 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,93058
81487 :: NORM :: declaration :: Ljava/util/HashMap :: v13 = new java.util.HashMap::DD,81493
81493 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v13::
81496 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .allDomains::JM,81508:JM,81577
81499 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,81508:JM,81577
81504 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,81508:JM,81577
81509 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getPdbId()::JM,81513:CL,62754
81508 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::
81513 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 122::CD,81514:CD,81518
81514 :: CALL :: call :: Ljava/lang/String :: v29 = v25.getDomainId()::JM,81523:JM,81519:JM,81518:CL,56746
81519 :: CALL :: call :: Z :: v31 = v29.isEmpty()::JM,81523:JM,81519
81518 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 122::CD,81519:CD,81523
81523 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 122::CD,81526:CD,81531
81526 :: CALL :: call :: Ljava/util/regex/Matcher :: v34 = v32.matcher(v29)::
81531 :: CALL :: call :: Ljava/lang/String :: v37 = v34.group(#(1))::
81539 :: CALL :: call :: Z :: v41 = v39.containsKey(v38)::JM,81544
81544 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 152::CF,81555:CD,81548:CD,81553:CD,81562:CD,81615
81548 :: CALL :: call :: Ljava/lang/Object :: v44 = v42.get(v38)::JM,81553
81553 :: EXPR :: assign :: Ljava/lang/Object :: v45 = CHECKCAST v44::DD,81615
81555 :: NORM :: declaration :: Ljava/util/LinkedList :: v46 = new java.util.LinkedList::DD,81615
81562 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.put(v38, v46)::
81568 :: CALL :: call :: Z :: v53 = v51.add(v25)::
81573 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,81508:JM,81577
81577 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 67::CD,81504:CD,81508:CD,81509:CD,81513:CD,81539:CD,81544:CD,81568:CD,81573:CD,81615:JM,81577
81615 :: EXPR :: assign :: null :: PHI v51 = v45, v46::
81671 :: EXPR :: reference :: Ljava/lang/Long :: v5 = p1 $o .uid::DD,81674
81674 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .uid = v5::
81677 :: EXPR :: reference :: Ljava/lang/String :: v6 = p1 $o .domainId::DD,81680
81680 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .domainId = v6::
81683 :: EXPR :: reference :: Ljava/lang/Boolean :: v7 = p1 $o .manual::DD,81686
81686 :: EXPR :: modify :: Ljava/lang/Boolean :: p0 $this .manual = v7::
81689 :: EXPR :: reference :: Ljava/lang/Integer :: v8 = p1 $o .xGroup::DD,81692
81692 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .xGroup = v8::
81695 :: EXPR :: reference :: Ljava/lang/Integer :: v9 = p1 $o .hGroup::DD,81698
81698 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .hGroup = v9::
81701 :: EXPR :: reference :: Ljava/lang/Integer :: v10 = p1 $o .tGroup::DD,81704
81704 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .tGroup = v10::
81707 :: EXPR :: reference :: Ljava/lang/Integer :: v11 = p1 $o .fGroup::DD,81710
81710 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .fGroup = v11::
81713 :: EXPR :: reference :: Ljava/lang/String :: v12 = p1 $o .pdbId::DD,81716
81716 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v12::
81719 :: EXPR :: reference :: Ljava/lang/String :: v13 = p1 $o .chainId::DD,81722
81722 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v13::
81725 :: EXPR :: reference :: Ljava/lang/String :: v14 = p1 $o .range::DD,81728
81728 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .range = v14::
81731 :: EXPR :: reference :: Ljava/lang/String :: v15 = p1 $o .seqIdRange::DD,81734
81734 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .seqIdRange = v15::
81737 :: EXPR :: reference :: Ljava/lang/String :: v16 = p1 $o .architectureName::DD,81740
81740 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .architectureName = v16::
81743 :: EXPR :: reference :: Ljava/lang/String :: v17 = p1 $o .xGroupName::DD,81746
81746 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .xGroupName = v17::
81749 :: EXPR :: reference :: Ljava/lang/String :: v18 = p1 $o .hGroupName::DD,81752
81752 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .hGroupName = v18::
81755 :: EXPR :: reference :: Ljava/lang/String :: v19 = p1 $o .tGroupName::DD,81758
81758 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tGroupName = v19::
81761 :: EXPR :: reference :: Ljava/lang/String :: v20 = p1 $o .fGroupName::DD,81764
81764 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fGroupName = v20::
81767 :: EXPR :: reference :: Ljava/lang/Long :: v21 = p1 $o .assemblyId::DD,81770
81770 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .assemblyId = v21::
81773 :: NORM :: declaration :: Ljava/util/HashSet :: v22 = new java.util.HashSet::DD,81781
81781 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .ligands = v22::
81823 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String,boolean)::CD,81833:CD,81838:CD,81839
81833 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,81838
81839 :: PRED :: IF :: Z :: if (p2 $forceLocalData  == #(0)) goto 81::CD,81840:CD,81874
81838 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,81840:DD,81841:DD,81874:CF,81839
81841 :: EXPR :: assign :: Z :: v25=v10 INSTANCEOF org.biojava.nbio.structure.scop.LocalScopDatabase::DD,81842
81840 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 36::CD,81841:CD,81842:CD,81846:JM,93249:JM,126529:JM,126659:JM,126597:JM,126596:JM,35975:JM,126472:JM,126664:JM,126605:JM,126476:JM,110927:JM,35982:JM,126675:JM,126610:JM,126615:JM,126486:JM,126614:JM,126490:JM,137503:JM,126623:JM,137506:JM,126500:JM,126628:JM,137509:JM,126633:JM,126632:JM,126507:JM,137512:JM,93229:JM,126444:JM,126641:JM,126448:JM,126515:JM,126646:JM,93241:JM,126651:JM,126458:JM,126522:JM,126650:JM,126462:CD,81860:CD,81866
81842 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 79::CD,81846:JM,93249:JM,126529:JM,126659:JM,126597:JM,126596:JM,35975:JM,126472:JM,126664:JM,126605:JM,126476:JM,110927:JM,35982:JM,126675:JM,126610:JM,126615:JM,126486:JM,126614:JM,126490:JM,137503:JM,126623:JM,137506:JM,126500:JM,126628:JM,137509:JM,126633:JM,126632:JM,126507:JM,137512:JM,93229:JM,126444:JM,126641:JM,126448:JM,126515:JM,126646:JM,93241:JM,126651:JM,126458:JM,126522:JM,126650:JM,126462:CD,81860:CD,81866
81846 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getSimpleName()::
81860 :: CALL :: call :: V :: v31.setScopVersion(v6)::CL,93266
81866 :: CALL :: call :: Ljava/lang/Object :: v36 = v34.put(v6, v31)::
81874 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 127::CD,81878:CD,81892:CD,81898
81878 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getSimpleName()::
81892 :: CALL :: call :: V :: v18.setScopVersion(v6)::CL,93354
81898 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.put(v6, v18)::
81943 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::CE,81944:CD,81948:CD,81953:CD,81957:CD,81965:CD,81970:CD,81975:CD,81980:CD,81984:CD,81989:CD,81997:CD,82001:CD,82005:CD,82009:CD,82013
81944 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::JM,71083
81948 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $scopId .trim()::
81953 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
81957 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
81965 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(getDomainByScopID?scopId=))::
81970 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(v5)::
81975 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#(&version=))::
81980 :: CALL :: call :: Ljava/lang/String :: v21 = p0 $this .getScopVersion()::CL,82038
81984 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v19.append(v21)::
81989 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
81997 :: CALL :: call :: Ljava/io/InputStream :: v28 = getInputStream(v6)::CL,71899
82001 :: CALL :: call :: Ljava/lang/String :: v30 = convertStreamToString(v28)::JM,82009:JM,82013:CL,71913
82005 :: CALL :: call :: Ljava/lang/String :: v32 = v30.trim()::JM,82009:JM,82013
82009 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,82009:JM,82013
82013 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 80::CD,82014:CD,82018:CD,82019
82014 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v38 = getScopDomainFromXML(v30)::JM,82018:CL,93365
82019 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,81944
82018 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v38::DD,81944
82039 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::
82038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::CE,82039:CD,82045:CD,82098:CD,82099:CD,82107:CD,82112:CD,82117:CD,82130:CD,82131
82042 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .version::DD,82045
82045 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 106::CD,82047:CD,82051:CD,82059:CD,82064:CD,82072:CD,82076:CD,82086
82047 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
82051 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
82059 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getScopVersion))::
82064 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
82072 :: CALL :: call :: Ljava/io/InputStream :: v18 = getInputStream(v5)::CL,71899
82076 :: CALL :: call :: Ljava/lang/String :: v20 = convertStreamToString(v18)::JM,82080:CL,71913
82080 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v20::
82083 :: EXPR :: reference :: Ljava/lang/String :: v21 = p0 $this .version::DD,82086
82087 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .version::JM,82094
82086 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 106::CD,82090
82090 :: CALL :: call :: Ljava/lang/String :: v24 = v22.trim()::JM,82094
82094 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v24::
82099 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
82098 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v26 = new java.lang.RuntimeException::
82104 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .server::
82107 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v27.append(v30)::
82112 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v32.append(#(getScopVersion))::
82117 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
82127 :: EXPR :: reference :: Ljava/lang/String :: v38 = p0 $this .version::DD,82130
82131 :: EXPR :: assign :: Ljava/lang/Exception :: v25 = catch <exc>::
82130 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,82039
82148 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.ensureClaInstalled()::CD,82155:CD,82159
82152 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedCla::JM,82159
82155 :: CALL :: call :: Z :: v5 = v3.get()::JM,82159
82159 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,82161:CD,82165:CD,82169:CD,82175
82161 :: CALL :: call :: Z :: v8 = p0 $this .claFileAvailable()::JM,82165:CL,93411
82165 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 23::CD,82166
82166 :: CALL :: call :: V :: p0 $this .downloadClaFile()::CL,93449
82169 :: CALL :: call :: V :: p0 $this .parseClassification()::CL,93541
82172 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedCla::JM,82175
82175 :: CALL :: call :: V :: v11.set(#(1))::JM,82175
82213 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.scop.ScopDomain.clone()::JM,71288
82212 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.clone()::CE,82213:CD,82216:CD,82220:CD,82224:CD,82228:CD,82232:CD,82236:CD,82240:CD,82244:CD,82248:CD,82252:CD,82256:CD,82260:CD,82264:CD,82268:CD,82272:CD,82276:CD,82280:CD,82284:CD,82288:CD,82292:CD,82296:CD,82300:CD,82304:CD,82308:CD,82312:CD,82316:CD,82320
82216 :: CALL :: call :: Ljava/lang/Object :: v4 = p0 $this .clone()::
82220 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = new org.biojava.nbio.structure.scop.ScopDomain::DD,82320
82224 :: CALL :: call :: I :: v8 = p0 $this .getClassId()::CL,93599
82228 :: CALL :: call :: V :: v5.setClassId(v8)::CL,93608
82232 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getClassificationId()::CL,93619
82236 :: CALL :: call :: V :: v5.setClassificationId(v11)::CL,93628
82240 :: CALL :: call :: I :: v14 = p0 $this .getDomainId()::CL,93639
82244 :: CALL :: call :: V :: v5.setDomainId(v14)::CL,93648
82248 :: CALL :: call :: I :: v17 = p0 $this .getFamilyId()::CL,93659
82252 :: CALL :: call :: V :: v5.setFamilyId(v17)::CL,93668
82256 :: CALL :: call :: I :: v20 = p0 $this .getFoldId()::CL,93679
82260 :: CALL :: call :: V :: v5.setFoldId(v20)::CL,93688
82264 :: CALL :: call :: Ljava/lang/String :: v23 = p0 $this .getPdbId()::CL,64156
82268 :: CALL :: call :: V :: v5.setPdbId(v23)::CL,93699
82272 :: CALL :: call :: I :: v26 = p0 $this .getPx()::CL,93710
82276 :: CALL :: call :: V :: v5.setPx(v26)::CL,93719
82280 :: CALL :: call :: Ljava/util/List :: v29 = p0 $this .getRanges()::CL,64165
82284 :: CALL :: call :: V :: v5.setRanges(v29)::CL,93730
82288 :: CALL :: call :: Ljava/lang/String :: v32 = p0 $this .getScopId()::CL,56755
82292 :: CALL :: call :: V :: v5.setScopId(v32)::CL,93741
82296 :: CALL :: call :: I :: v35 = p0 $this .getSpeciesId()::CL,93752
82300 :: CALL :: call :: V :: v5.setSpeciesId(v35)::CL,93761
82304 :: CALL :: call :: Ljava/lang/Integer :: v38 = p0 $this .getSunid()::CL,93772
82308 :: CALL :: call :: V :: v5.setSunid(v38)::CL,93781
82312 :: CALL :: call :: I :: v41 = p0 $this .getSuperfamilyId()::CL,93792
82316 :: CALL :: call :: V :: v5.setSuperfamilyId(v41)::CL,93801
82320 :: NORM :: compound :: Ljava/lang/Object :: return v5::DD,82213
82351 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::JM,71476:JM,71421
82350 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::CE,82351:CD,82354:CD,82356:CD,82360:CD,82361:CD,82369:CD,82374:CD,82376:CD,82377:CD,82383:CD,82388:CD,82393:CD,82403:CD,82404
82354 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.ScopDomains.jaxbContext::JM,82369:JM,82356:JM,82374
82356 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,82369:JM,82356:JM,82374
82361 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
82360 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,82369:JM,82374
82369 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,82369:JM,82374
82374 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,82403
82377 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
82376 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
82383 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(v19)::
82388 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( from XML))::
82393 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
82403 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: return v13::DD,82351
82404 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
82416 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.reloadFromFile()::CD,82420:CD,82424:CD,82431:CD,82435
82420 :: CALL :: call :: Ljava/io/File :: v4 = p0 $this .getCacheFile()::JM,82471:JM,82443:CL,93812
82424 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
82431 :: CALL :: call :: Z :: v8 = v4.exists()::JM,82435
82435 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 55::CD,82438:CD,82443:CD,82447:CD,82452:CD,82466:CD,82471:CD,82475:CD,82480:CD,82493:CD,82498:CD,82502:CD,82506:CD,82528:CD,82533:CD,82537:CD,82542:CD,82550:CD,82554:CD,82558:CD,82563:CD,82568
82438 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
82443 :: CALL :: call :: Ljava/lang/String :: v67 = v4.getAbsolutePath()::JM,82471:JM,82443
82447 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
82452 :: CALL :: call :: Ljava/lang/String :: v71 = v69.toString()::
82466 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
82471 :: CALL :: call :: Ljava/lang/String :: v15 = v4.getAbsolutePath()::JM,82471:JM,82443
82475 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v11.append(v15)::
82480 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
82493 :: NORM :: declaration :: Ljava/io/ObjectInputStream :: v23 = new java.io.ObjectInputStream::
82498 :: CALL :: call :: Ljava/lang/Object :: v26 = v23.readObject()::JM,82502
82503 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .serializedCache = v32::
82502 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v26::DD,82503
82506 :: CALL :: call :: V :: v23.close()::
82528 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
82533 :: CALL :: call :: Ljava/lang/String :: v42 = v4.getName()::JM,82471:JM,82443
82537 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
82542 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( size: ))::
82547 :: EXPR :: reference :: Ljava/util/Map :: v48 = p0 $this .serializedCache::
82550 :: CALL :: call :: Ljava/util/Set :: v50 = v48.keySet()::
82554 :: CALL :: call :: I :: v52 = v50.size()::
82558 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v47.append(v52)::
82563 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#( cached records.))::
82568 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
82613 :: EXIT :: exit :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::JM,71699:JM,71666:JM,71698:JM,71685:JM,71689:JM,71672:JM,71704:JM,71736:JM,71740:JM,71694
82612 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::CE,82613:CD,82616:CD,82618:CD,82622:CD,82623:CD,82631:CD,82636:CD,82638:CD,82641:CD,82643
82616 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.domain.AssignmentXMLSerializer.jaxbContext::JM,82631:JM,82618:JM,82636
82618 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,82631:JM,82618:JM,82636
82623 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
82622 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,82631:JM,82636
82631 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,82631:JM,82636
82636 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,82643
82638 :: CALL :: call :: V :: v14.printStackTrace()::
82641 :: NORM :: compound :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: return v17::DD,82613
82643 :: EXPR :: assign :: null :: PHI v17 = v13, #(null)::CF,82641
82654 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL,boolean,int)::CD,82660
82660 :: CALL :: call :: Ljava/net/HttpURLConnection :: v7 = openHttpURLConnection(p1 $url , p3 $timeout )::CL,94075
82721 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.flushCache()::CD,82728
82725 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .serializedCache::DD,82728
82728 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 9::CD,82734:CD,82743:CD,82751:CD,82755
82734 :: CALL :: call :: Ljava/io/File :: v7 = p0 $this .getCacheFile()::CL,93812
82743 :: NORM :: declaration :: Ljava/io/ObjectOutputStream :: v10 = new java.io.ObjectOutputStream::
82748 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .serializedCache::
82751 :: CALL :: call :: V :: v10.writeObject(v12)::
82755 :: CALL :: call :: V :: v10.close()::
82801 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentEnd()::CD,82808:CD,82867:CD,82874:CD,82995:CD,82999:CD,83017:CD,83021:CD,83067:CD,83071:CD,83087:CD,83091:CD,83107:CD,83111:CD,83417:CD,83421:CD,83444:CD,83450:CD,83454:CD,83461:CD,83465:CD,83645:CD,83648:CD,83651:CD,83658:CD,83765:CD,83769:CD,83770:CD,83774:CD,83805:CD,83810:CD,83815:CD,83823:CD,83827
82805 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .current_chain::DD,82808
82808 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 57::CD,82815:CD,82829:CD,82834
82815 :: CALL :: call :: V :: v12.addGroup(v13)::CL,63901
82829 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = isKnownChain(v17, v18)::JM,82834:CL,94331
82835 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .current_model::
82834 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 78::CD,82841
82838 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v22 = p0 $this .current_chain::
82841 :: CALL :: call :: Z :: v24 = v21.add(v22)::
82867 :: CALL :: call :: V :: v25.addModel(v26)::CL,63163
82871 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .structAsyms::JM,82883:JM,82999
82874 :: CALL :: call :: Ljava/util/Iterator :: v30 = v28.iterator()::JM,82883:JM,82999
82879 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,82883:JM,82999
82883 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,82959
82911 :: CALL :: call :: Ljava/lang/Object :: v49 = v43.put(v45, v47)::
82921 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v53 = p0 $this .getEntityChain(v51)::CL,94385
82926 :: CALL :: call :: Ljava/lang/Object :: v55 = v53.clone()::CL,94454
82931 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .removeSeqResHeterogeneity(v56)::CL,94635
82940 :: CALL :: call :: V :: v58.setChainID(v60)::CL,63754
82944 :: EXPR :: reference :: Ljava/util/List :: v62 = p0 $this .seqResChains::
82947 :: CALL :: call :: Z :: v64 = v62.add(v58)::
82954 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
82959 :: CALL :: call :: Ljava/lang/String :: v70 = v35.getId()::JM,82959
82963 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
82968 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( ))::
82973 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v58)::
82978 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(#(<))::
82983 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
82991 :: CALL :: call :: V :: p0 $this .addCompounds(v35)::CL,94756
82995 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,82883:JM,82999
82999 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 104::CD,82879:CD,82883:CD,82911:CD,82921:CD,82926:CD,82931:CD,82940:CD,82947:CD,82954:CD,82959:CD,82963:CD,82968:CD,82973:CD,82978:CD,82983:CD,82991:CD,82995:JM,82999
83017 :: CALL :: call :: Z :: v93 = v91.isAlignSeqRes()::JM,83021:CL,95296
83021 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 321::CD,83025:CD,83029:CD,83059
83025 :: CALL :: call :: Z :: v96 = v94.isHeaderOnly()::JM,83029:CL,94376
83029 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 321::CD,83036:CD,83059
83036 :: CALL :: call :: V :: p0 $this .alignSeqRes()::CL,95305
83059 :: CALL :: call :: V :: storeUnAlignedSeqRes(v100, v101, v104)::CL,95547
83064 :: EXPR :: reference :: Ljava/util/Map :: v110 = p0 $this .asymStrandId::JM,83071
83067 :: CALL :: call :: Z :: v112 = v110.isEmpty()::JM,83071
83071 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 382::
83078 :: EXPR :: reference :: Ljava/util/Map :: v116 = p0 $this .asymId2StrandIdFromAtomSites::DD,83081
83081 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v116::
83084 :: EXPR :: reference :: Ljava/util/Map :: v117 = p0 $this .asymId2StrandIdFromAtomSites::JM,83091
83087 :: CALL :: call :: Z :: v119 = v117.isEmpty()::JM,83091
83091 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 413::
83098 :: EXPR :: reference :: Ljava/util/Map :: v123 = p0 $this .asymStrandId::DD,83101
83101 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v123::
83107 :: CALL :: call :: Z :: v126 = v124.isUseInternalChainId()::JM,83111:CL,95690
83111 :: PRED :: IF :: Z :: if (v126 != #(0)) goto 845::CD,83329:CD,83333:CD,83409:CD,83413:CD,83837:CD,83840
83116 :: CALL :: call :: Ljava/util/List :: v170 = v168.getModel(v257)::JM,83316:JM,83134:CL,51721
83121 :: NORM :: declaration :: Ljava/util/ArrayList :: v171 = new java.util.ArrayList::
83125 :: CALL :: call :: Ljava/util/Iterator :: v174 = v170.iterator()::JM,83316:JM,83134
83130 :: CALL :: call :: Ljava/lang/Object :: v178 = v174.next()::JM,83316:JM,83134
83135 :: EXPR :: reference :: Ljava/util/Map :: v180 = p0 $this .asymId2StrandIdFromAtomSites::JM,83151:JM,83311
83134 :: EXPR :: assign :: Ljava/lang/Object :: v179 = CHECKCAST v178::
83138 :: CALL :: call :: Ljava/util/Set :: v182 = v180.keySet()::JM,83151:JM,83311
83142 :: CALL :: call :: Ljava/util/Iterator :: v184 = v182.iterator()::JM,83151:JM,83311
83147 :: CALL :: call :: Ljava/lang/Object :: v188 = v184.next()::JM,83151:JM,83311
83151 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::JM,83161
83152 :: CALL :: call :: Ljava/lang/String :: v191 = v179.getChainID()::JM,83161:CL,63330
83156 :: CALL :: call :: Z :: v193 = v191.equals(v189)::JM,83161
83161 :: PRED :: IF :: Z :: if (v193 == #(0)) goto 795::CF,83835:CD,83165:CD,83178:CD,83182:CD,83186:CD,83203:CD,83207:CD,83211:CD,83215:CD,83234:CD,83238:CD,83239:CD,83243:CD,83262:CD,83266:CD,83271:CD,83276:CD,83307:CD,83311:CD,83832:CD,83833:CD,83836
83165 :: CALL :: call :: Ljava/lang/Object :: v196 = v194.get(v189)::
83178 :: CALL :: call :: Ljava/util/List :: v203 = v179.getAtomGroups()::CL,45126
83182 :: CALL :: call :: I :: v205 = v203.size()::
83186 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
83203 :: CALL :: call :: V :: v179.setChainID(v197)::CL,63754
83207 :: CALL :: call :: V :: v179.setInternalChainID(v189)::CL,95699
83211 :: CALL :: call :: Ljava/util/List :: v213 = v179.getAtomGroups()::JM,83238:CL,45126
83215 :: CALL :: call :: Ljava/util/Iterator :: v215 = v213.iterator()::JM,83238
83220 :: CALL :: call :: Ljava/lang/Object :: v219 = v215.next()::JM,83238
83225 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v222 = v220.getResidueNumber()::JM,83229:CL,74679
83229 :: PRED :: IF :: Z :: if (v222 == #(null)) goto 644::CF,83832:CD,83230
83230 :: CALL :: call :: V :: v222.setChainId(v197)::CL,63339
83234 :: CALL :: call :: Z :: v217 = v215.hasNext()::JM,83238
83239 :: CALL :: call :: Ljava/util/List :: v225 = v179.getSeqResGroups()::JM,83266:CL,63834
83238 :: PRED :: IF :: Z :: if (v217 != #(0)) goto 611::CD,83220:CD,83225:CD,83229:CD,83234:CD,83832:JM,83238
83243 :: CALL :: call :: Ljava/util/Iterator :: v227 = v225.iterator()::JM,83266
83248 :: CALL :: call :: Ljava/lang/Object :: v231 = v227.next()::JM,83266
83253 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v234 = v232.getResidueNumber()::JM,83257:CL,74679
83257 :: PRED :: IF :: Z :: if (v234 == #(null)) goto 704::CF,83833:CD,83258
83258 :: CALL :: call :: V :: v234.setChainId(v197)::CL,63339
83262 :: CALL :: call :: Z :: v229 = v227.hasNext()::JM,83266
83266 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 671::CD,83248:CD,83253:CD,83257:CD,83262:CD,83833:JM,83266
83271 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v240 = isKnownChain(v238, v171)::JM,83276:CL,94331
83277 :: CALL :: call :: Z :: v242 = v171.add(v179)::
83276 :: PRED :: IF :: Z :: if (v240 != #(null)) goto 744::CD,83277:CD,83283:CD,83287:CD,83301:CD,83305:CD,83834:CD,83836
83283 :: CALL :: call :: Ljava/util/List :: v244 = v179.getAtomGroups()::JM,83305:CL,45126
83287 :: CALL :: call :: Ljava/util/Iterator :: v246 = v244.iterator()::JM,83305
83292 :: CALL :: call :: Ljava/lang/Object :: v250 = v246.next()::JM,83305
83297 :: CALL :: call :: V :: v240.addGroup(v251)::CL,63901
83301 :: CALL :: call :: Z :: v248 = v246.hasNext()::JM,83305
83305 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 761::CD,83292:CD,83297:CD,83301:CD,83834:JM,83305
83307 :: CALL :: call :: Z :: v186 = v184.hasNext()::JM,83151:JM,83311
83311 :: PRED :: IF :: Z :: if (v186 != #(0)) goto 490::CF,83836:CD,83147:CD,83151:CD,83152:CD,83156:CD,83161:CD,83835:JM,83311
83312 :: CALL :: call :: Z :: v176 = v174.hasNext()::JM,83316:JM,83134
83316 :: PRED :: IF :: Z :: if (v176 != #(0)) goto 459::CD,83130:CD,83134:CD,83138:CD,83142:CD,83307:CD,83311:CD,83312:CD,83835:CD,83836:JM,83316
83320 :: CALL :: call :: V :: v254.setModel(v259, v171)::CL,63207
83325 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v259 + #(1)::DD,83837
83329 :: CALL :: call :: I :: v167 = v165.nrModels()::JM,83333:CL,64143
83333 :: PRED :: IF :: Z :: if (v257 < v167) goto 428::CD,83116:CD,83121:CD,83125:CD,83312:CD,83316:CD,83320:CD,83325:CD,83329:CD,83836:CD,83837
83339 :: CALL :: call :: Ljava/util/List :: v132 = v130.getModel(v161)::JM,83404:CL,51721
83344 :: CALL :: call :: Ljava/util/Iterator :: v134 = v132.iterator()::JM,83404
83349 :: CALL :: call :: Ljava/lang/Object :: v138 = v134.next()::JM,83404
83354 :: EXPR :: reference :: Ljava/util/Map :: v140 = p0 $this .asymId2StrandIdFromAtomSites::JM,83399:JM,83370
83357 :: CALL :: call :: Ljava/util/Set :: v142 = v140.keySet()::JM,83399:JM,83370
83361 :: CALL :: call :: Ljava/util/Iterator :: v144 = v142.iterator()::JM,83399:JM,83370
83366 :: CALL :: call :: Ljava/lang/Object :: v148 = v144.next()::JM,83399:JM,83370
83371 :: CALL :: call :: Ljava/lang/String :: v151 = v139.getChainID()::JM,83380:CL,63330
83370 :: EXPR :: assign :: Ljava/lang/Object :: v149 = CHECKCAST v148::JM,83380
83375 :: CALL :: call :: Z :: v153 = v151.equals(v149)::JM,83380
83380 :: PRED :: IF :: Z :: if (v153 == #(0)) goto 955::CF,83838:CD,83384:CD,83390:CD,83395:CD,83399:CD,83839
83384 :: CALL :: call :: Ljava/lang/Object :: v156 = v154.get(v149)::
83390 :: CALL :: call :: V :: v139.setInternalChainID(v157)::CL,95699
83395 :: CALL :: call :: Z :: v146 = v144.hasNext()::JM,83399:JM,83370
83399 :: PRED :: IF :: Z :: if (v146 != #(0)) goto 902::CF,83839:CD,83366:CD,83370:CD,83371:CD,83375:CD,83380:CD,83838:JM,83399
83400 :: CALL :: call :: Z :: v136 = v134.hasNext()::JM,83404
83405 :: EXPR :: assign :: Ljava/lang/Object :: v160 = v163 + #(1)::DD,83840
83404 :: PRED :: IF :: Z :: if (v136 != #(0)) goto 872::CD,83349:CD,83357:CD,83361:CD,83395:CD,83399:CD,83400:CD,83838:CD,83839:JM,83404:CF,83405
83409 :: CALL :: call :: I :: v129 = v127.nrModels()::JM,83413:CL,64143
83413 :: PRED :: IF :: Z :: if (v161 < v129) goto 849::CD,83339:CD,83344:CD,83400:CD,83404:CD,83405:CD,83409:CD,83839:CD,83840
83417 :: CALL :: call :: Z :: v268 = v266.isHeaderOnly()::JM,83421:CL,94376
83421 :: PRED :: IF :: Z :: if (v268 != #(0)) goto 1028::CD,83425:CD,83429:CD,83436:CD,83440
83425 :: CALL :: call :: Z :: v271 = v269.shouldCreateAtomBonds()::JM,83429:CL,95710
83429 :: PRED :: IF :: Z :: if (v271 == #(0)) goto 1014::CD,83430
83430 :: CALL :: call :: V :: p0 $this .addBonds()::CL,95719
83436 :: CALL :: call :: Z :: v275 = v273.shouldCreateAtomCharges()::JM,83440:CL,95753
83441 :: CALL :: call :: V :: p0 $this .addCharges()::CL,95762
83440 :: PRED :: IF :: Z :: if (v275 == #(0)) goto 1028::CD,83441
83444 :: CALL :: call :: V :: p0 $this .linkCompounds()::CL,95774
83450 :: CALL :: call :: Z :: v280 = v278.isHeaderOnly()::JM,83454:CL,94376
83455 :: CALL :: call :: V :: p0 $this .addSites()::CL,96084
83454 :: PRED :: IF :: Z :: if (v280 != #(0)) goto 1046::CD,83455
83461 :: CALL :: call :: Z :: v284 = v282.isParseBioAssembly()::JM,83465:CL,96495
83465 :: PRED :: IF :: Z :: if (v284 == #(0)) goto 1349::CF,83466:CD,83473:CD,83629:CD,83633:CD,83641
83466 :: NORM :: declaration :: Ljava/util/HashMap :: v285 = new java.util.HashMap::
83470 :: EXPR :: reference :: Ljava/util/List :: v287 = p0 $this .strucAssemblies::JM,83633:JM,83482
83473 :: CALL :: call :: Ljava/util/Iterator :: v289 = v287.iterator()::JM,83633:JM,83482
83478 :: CALL :: call :: Ljava/lang/Object :: v293 = v289.next()::JM,83633:JM,83482
83483 :: NORM :: declaration :: Ljava/util/ArrayList :: v295 = new java.util.ArrayList::
83482 :: EXPR :: assign :: Ljava/lang/Object :: v294 = CHECKCAST v293::JM,83505:JM,83509:JM,83514:JM,83841:JM,83539:JM,83559:CF,83483
83488 :: EXPR :: reference :: Ljava/util/List :: v297 = p0 $this .strucAssemblyGens::JM,83524:JM,83500
83491 :: CALL :: call :: Ljava/util/Iterator :: v299 = v297.iterator()::JM,83524:JM,83500
83496 :: CALL :: call :: Ljava/lang/Object :: v303 = v299.next()::JM,83524:JM,83500
83501 :: CALL :: call :: Ljava/lang/String :: v306 = v304.getAssembly_id()::JM,83509:JM,83514:JM,83501
83500 :: EXPR :: assign :: Ljava/lang/Object :: v304 = CHECKCAST v303::JM,83509:JM,83514:JM,83501
83505 :: CALL :: call :: Ljava/lang/String :: v308 = v294.getId()::JM,83505:JM,83509:JM,83514
83509 :: CALL :: call :: Z :: v310 = v306.equals(v308)::JM,83509:JM,83514
83515 :: CALL :: call :: Z :: v312 = v295.add(v304)::
83514 :: PRED :: IF :: Z :: if (v310 == #(0)) goto 1149::CD,83515:JM,83524:JM,83500
83520 :: CALL :: call :: Z :: v301 = v299.hasNext()::JM,83524:JM,83500
83524 :: PRED :: IF :: Z :: if (v301 != #(0)) goto 1112::CD,83496:CD,83500:CD,83501:CD,83505:CD,83509:CD,83514:CD,83520:JM,83524
83532 :: CALL :: call :: Ljava/util/ArrayList :: v317 = v313.getBioUnitTransformationList(v294, v295, v315)::CL,96526
83539 :: CALL :: call :: Ljava/lang/String :: v320 = v294.getId()::JM,83841:JM,83539
83543 :: CALL :: call :: I :: v322 = parseInt(v320)::JM,83841
83559 :: CALL :: call :: Ljava/lang/String :: v332 = v294.getOligomeric_count()::JM,83559
83563 :: CALL :: call :: I :: v334 = parseInt(v332)::
83602 :: PRED :: IF :: Z :: if (v330 == #(-1)) goto 1327::CD,83607:CD,83611:CD,83615:CD,83619:CD,83623:JM,83633:JM,83482
83607 :: CALL :: call :: V :: v354.setId(v330)::CL,96659
83611 :: CALL :: call :: V :: v354.setMacromolecularSize(v350)::CL,96670
83615 :: CALL :: call :: V :: v354.setTransforms(v317)::CL,96681
83619 :: CALL :: call :: Ljava/lang/Integer :: v360 = valueOf(v330)::
83623 :: CALL :: call :: Ljava/lang/Object :: v362 = v285.put(v360, v354)::
83629 :: CALL :: call :: Z :: v291 = v289.hasNext()::JM,83633:JM,83482
83633 :: PRED :: IF :: Z :: if (v291 != #(0)) goto 1077::CD,83478:CD,83482:CD,83483:CD,83491:CD,83520:CD,83524:JM,96518:JM,96511:CD,83532:CD,83539:CD,83543:CD,83559:CD,83563:CD,83602:CD,83629:CD,83841:JM,83633
83641 :: CALL :: call :: V :: v365.setBioAssemblies(v285)::CL,96692
83645 :: CALL :: call :: V :: p0 $this .setStructNcsOps()::CL,96703
83648 :: CALL :: call :: V :: p0 $this .setCrystallographicInfoMetadata()::CL,97077
83651 :: NORM :: declaration :: Ljava/util/HashMap :: v372 = new java.util.HashMap::JM,83827:JM,83783
83655 :: EXPR :: reference :: Ljava/util/List :: v374 = p0 $this .sequenceDifs::JM,83769
83658 :: CALL :: call :: Ljava/util/Iterator :: v376 = v374.iterator()::JM,83769
83663 :: CALL :: call :: Ljava/lang/Object :: v380 = v376.next()::JM,83769
83668 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SeqMisMatchImpl :: v382 = new org.biojava.nbio.structure.SeqMisMatchImpl::
83676 :: CALL :: call :: V :: v382.setDetails(v385)::CL,97139
83691 :: CALL :: call :: V :: v382.setInsCode(v392)::CL,97150
83699 :: CALL :: call :: V :: v382.setOrigGroup(v395)::CL,97161
83707 :: CALL :: call :: V :: v382.setPdbGroup(v398)::CL,97172
83715 :: CALL :: call :: V :: v382.setPdbResNum(v401)::CL,97183
83723 :: CALL :: call :: V :: v382.setUniProtId(v404)::CL,97194
83731 :: CALL :: call :: V :: v382.setSeqNum(v407)::CL,97205
83739 :: CALL :: call :: Ljava/lang/Object :: v412 = v372.get(v410)::JM,83744
83745 :: PRED :: IF :: Z :: if (v413 != #(null)) goto 1542::CF,83844:CF,83746:CD,83754
83744 :: EXPR :: assign :: Ljava/lang/Object :: v413 = CHECKCAST v412::DD,83745:DD,83844
83746 :: NORM :: declaration :: Ljava/util/ArrayList :: v414 = new java.util.ArrayList::DD,83844
83754 :: CALL :: call :: Ljava/lang/Object :: v419 = v372.put(v417, v414)::
83760 :: CALL :: call :: Z :: v422 = v420.add(v382)::
83765 :: CALL :: call :: Z :: v378 = v376.hasNext()::JM,83769
83769 :: PRED :: IF :: Z :: if (v378 != #(0)) goto 1378::CD,83663:CD,83668:CD,83676:CD,83691:CD,83699:CD,83707:CD,83715:CD,83723:CD,83731:CD,83739:CD,83744:CD,83745:CD,83760:CD,83765:CD,83844:JM,83769:JM,83827:JM,83783
83770 :: CALL :: call :: Ljava/util/Set :: v425 = v372.keySet()::JM,83827:JM,83783
83774 :: CALL :: call :: Ljava/util/Iterator :: v427 = v425.iterator()::JM,83827:JM,83783
83779 :: CALL :: call :: Ljava/lang/Object :: v431 = v427.next()::JM,83827:JM,83783
83783 :: EXPR :: assign :: Ljava/lang/Object :: v432 = CHECKCAST v431::
83787 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v435 = v433.getChainByPDB(v432)::CL,97216
83792 :: CALL :: call :: Ljava/lang/Object :: v437 = v372.get(v432)::
83798 :: CALL :: call :: V :: v435.setSeqMisMatches(v438)::CL,63890
83805 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v443 = new java.lang.StringBuilder::
83810 :: CALL :: call :: Ljava/lang/StringBuilder :: v447 = v443.append(v432)::
83815 :: CALL :: call :: Ljava/lang/String :: v449 = v447.toString()::
83823 :: CALL :: call :: Z :: v429 = v427.hasNext()::JM,83827:JM,83783
83827 :: PRED :: IF :: Z :: if (v429 != #(0)) goto 1573::CD,83779:CD,83783:CD,83787:CD,83792:CD,83798:CD,83823:JM,83827
83833 :: EXPR :: assign :: null :: PHI v262 = v261, v262, v262::JM,83266:DD,83833:DD,83834:DD,83836
83832 :: EXPR :: assign :: null :: PHI v261 = v260, v261, v261::JM,83238:DD,83832:DD,83833
83835 :: EXPR :: assign :: null :: PHI v260 = v259, v260::JM,83151:JM,83311:DD,83832:DD,83835:DD,83836
83834 :: EXPR :: assign :: null :: PHI v263 = v262, v263::JM,83305:DD,83834:DD,83836
83837 :: EXPR :: assign :: null :: PHI v257 = #(0), v256::DD,83333:DD,83836
83836 :: EXPR :: assign :: null :: PHI v259 = v257, v262, v263, v260::JM,83316:JM,83134:DD,83325:DD,83835
83839 :: EXPR :: assign :: null :: PHI v163 = v161, v164, v164::JM,83404:DD,83405:DD,83838
83838 :: EXPR :: assign :: null :: PHI v164 = v163, v164::JM,83399:JM,83370:DD,83838:DD,83839
83841 :: EXPR :: assign :: null :: PHI v330 = v322, #(-1)::JM,83559:DD,83602
83840 :: EXPR :: assign :: null :: PHI v161 = #(0), v160::DD,83413:DD,83839
83844 :: EXPR :: assign :: null :: PHI v420 = v413, v414::
84155 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::JM,72581:JM,72571
84154 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::CE,84155:CD,84159:CD,84163:CD,84167:CD,84171:JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84271:JM,84351
84159 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,84172:DD,84188:DD,84466
84163 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .trim()::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84167 :: CALL :: call :: I :: v9 = v7.length()::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84171 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,84172:CD,84173:CD,84177:CD,84181:JM,84467:JM,84450:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84173 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .trim()::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84172 :: NORM :: compound :: Ljava/util/List :: return v4::DD,84155
84177 :: CALL :: call :: I :: v14 = v12.length()::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84181 :: PRED :: IF :: Z :: if (v14 != #(1)) goto 58::CD,84182:CD,84187:CD,84446:CD,84450:CD,84451:CD,84455:CD,84460:CD,84466:CD,84478:CD,84479:CD,84480:CD,84481:CD,84482:JM,84467:JM,84181:JM,84468:JM,84230:JM,84203:JM,84171:JM,84271:JM,84351
84182 :: CALL :: call :: Z :: v18 = p1 $line .startsWith(#(;))::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84187 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 58::CD,84188:CD,84446:CD,84450:CD,84451:CD,84455:CD,84460:CD,84466:CD,84478:CD,84479:CD,84480:CD,84481:CD,84482
84188 :: NORM :: compound :: Ljava/util/List :: return v4::DD,84155
84190 :: CALL :: call :: C :: v23 = p1 $line .charAt(v145)::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84195 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(v23)::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84203:JM,84171:JM,84271:JM,84351
84199 :: CALL :: call :: I :: v28 = p1 $line .length()::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84203 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 - #(1)::CF,84204
84205 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v145 + #(1)::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84204 :: PRED :: IF :: Z :: if (v145 >= v29) goto 104::CF,84467:CD,84205:CD,84206:CD,84211
84206 :: CALL :: call :: C :: v32 = p1 $line .charAt(v30)::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84211 :: CALL :: call :: Ljava/lang/Character :: v34 = valueOf(v32)::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84171:JM,84271:JM,84351
84215 :: PRED :: IF :: Z :: if (v145 <= #(0)) goto 122::CF,84468:CD,84216:CD,84217:CD,84222
84217 :: CALL :: call :: C :: v38 = p1 $line .charAt(v36)::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84216 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v145 - #(1)::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84222 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(v38)::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84171:JM,84271:JM,84351
84226 :: CALL :: call :: C :: v43 = v25.charValue()::JM,84467:JM,84468:JM,84230:JM,84271:JM,84351
84231 :: PRED :: IF :: Z :: if (v141 != #(0)) goto 165::CF,84248:CD,84232:CD,84237:CD,84249:CD,84257:CD,84262:CD,84473:CD,84474:CD,84475:CD,84476:CD,84477
84230 :: PRED :: IF :: Z :: if (v43 != #(32)) goto 192::CD,84231:CD,84267:CD,84271:JM,84467:JM,84468:JM,84230:JM,84351
84232 :: CALL :: call :: Z :: v46 = v144.equals(#())::JM,84237
84237 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 162::CD,84238:CD,84242
84238 :: CALL :: call :: Ljava/lang/String :: v48 = v144.trim()::
84242 :: CALL :: call :: Z :: v50 = v4.add(v48)::
84249 :: CALL :: call :: Ljava/lang/String :: v53 = valueOf(v144)::
84248 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
84257 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v51.append(v25)::JM,84476
84262 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::JM,84476
84267 :: CALL :: call :: C :: v60 = v25.charValue()::JM,84467:JM,84468:JM,84230:JM,84271:JM,84351
84271 :: PRED :: IF :: Z :: if (v60 != #(39)) goto 350::CD,84272:CD,84347:CD,84351:JM,84467:JM,84468:JM,84230:JM,84271
84273 :: PRED :: IF :: Z :: if (v143 != #(0)) goto 236::CF,84469:CD,84274
84272 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 302::CD,84273:CD,84285:CD,84321:CD,84469:CD,84470
84275 :: CALL :: call :: C :: v63 = v35.charValue()::JM,84283
84274 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 228::CD,84275:CD,84279:CD,84283:CD,84284:CD,84469:CD,84470
84279 :: CALL :: call :: Z :: v65 = isWhitespace(v63)::JM,84283
84283 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 236::CF,84469:CD,84284:CD,84470
84285 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 275::CF,84302:CD,84286:CD,84291:CD,84303:CD,84311:CD,84316:CD,84473:CD,84474:CD,84475:CD,84476:CD,84477
84284 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v145 + #(1)::DD,84469
84286 :: CALL :: call :: Z :: v70 = v144.equals(#())::JM,84291
84291 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 272::CD,84292:CD,84296
84292 :: CALL :: call :: Ljava/lang/String :: v72 = v144.trim()::
84296 :: CALL :: call :: Z :: v74 = v4.add(v72)::
84303 :: CALL :: call :: Ljava/lang/String :: v77 = valueOf(v144)::
84302 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
84311 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v25)::JM,84476
84316 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::JM,84476
84321 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 320::CD,84322:CD,84326:CD,84473:CD,84474:CD,84475:CD,84476:CD,84477
84322 :: CALL :: call :: C :: v84 = v41.charValue()::JM,84326
84326 :: PRED :: IF :: Z :: if (v84 != #(32)) goto 323::CF,84328:CD,84329:CD,84337:CD,84342:CD,84473:CD,84474:CD,84475:CD,84476:CD,84477
84329 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v144)::
84328 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
84337 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v25)::JM,84476
84342 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,84476
84347 :: CALL :: call :: C :: v94 = v25.charValue()::JM,84467:JM,84468:JM,84230:JM,84271:JM,84351
84351 :: PRED :: IF :: Z :: if (v94 != #(34)) goto 506::CF,84427:CD,84352:CD,84428:CD,84436:CD,84441:CD,84473:CD,84474:CD,84475:CD,84476:CD,84477
84353 :: PRED :: IF :: Z :: if (v142 != #(0)) goto 394::CF,84471:CD,84354
84352 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 460::CD,84353:CD,84365:CD,84401:CD,84471:CD,84472
84355 :: CALL :: call :: C :: v97 = v35.charValue()::JM,84363
84354 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 386::CD,84355:CD,84359:CD,84363:CD,84364:CD,84471:CD,84472
84359 :: CALL :: call :: Z :: v99 = isWhitespace(v97)::JM,84363
84363 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 394::CF,84471:CD,84364:CD,84472
84365 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 433::CF,84382:CD,84366:CD,84371:CD,84383:CD,84391:CD,84396:CD,84473:CD,84474:CD,84475:CD,84476:CD,84477
84364 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v145 + #(1)::DD,84471
84366 :: CALL :: call :: Z :: v104 = v144.equals(#())::JM,84371
84371 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 430::CD,84372:CD,84376
84372 :: CALL :: call :: Ljava/lang/String :: v106 = v144.trim()::
84376 :: CALL :: call :: Z :: v108 = v4.add(v106)::
84383 :: CALL :: call :: Ljava/lang/String :: v111 = valueOf(v144)::
84382 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v109 = new java.lang.StringBuilder::
84391 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v109.append(v25)::JM,84476
84396 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::JM,84476
84401 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 478::CD,84402:CD,84406:CD,84473:CD,84474:CD,84475:CD,84476:CD,84477
84402 :: CALL :: call :: C :: v118 = v41.charValue()::JM,84406
84406 :: PRED :: IF :: Z :: if (v118 != #(32)) goto 481::CF,84408:CD,84409:CD,84417:CD,84422:CD,84473:CD,84474:CD,84475:CD,84476:CD,84477
84409 :: CALL :: call :: Ljava/lang/String :: v121 = valueOf(v144)::
84408 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
84417 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v119.append(v25)::JM,84476
84422 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::JM,84476
84427 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v127 = new java.lang.StringBuilder::
84428 :: CALL :: call :: Ljava/lang/String :: v129 = valueOf(v144)::
84436 :: CALL :: call :: Ljava/lang/StringBuilder :: v132 = v127.append(v25)::JM,84476
84441 :: CALL :: call :: Ljava/lang/String :: v134 = v132.toString()::JM,84476
84445 :: EXPR :: assign :: Ljava/lang/Object :: v140 = v139 + #(1)::DD,84482:CF,84478
84446 :: CALL :: call :: I :: v21 = p1 $line .length()::JM,84467:JM,84450:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351
84451 :: CALL :: call :: Ljava/lang/String :: v147 = v144.trim()::JM,84460
84450 :: PRED :: IF :: Z :: if (v145 < v21) goto 64::CD,84190:CD,84195:CD,84199:CD,84203:CD,84204:CD,84215:CD,84226:CD,84230:CD,84445:CD,84446:CD,84467:CD,84468:CD,84473:CD,84474:CD,84475:CD,84476:CD,84477:CD,84478:CD,84479:CD,84480:CD,84481:CD,84482:JM,84450:JM,84181:JM,84187:JM,84171:JM,84271:JM,84351:JM,84460
84455 :: CALL :: call :: Z :: v149 = v147.equals(#())::JM,84460
84461 :: CALL :: call :: Z :: v151 = v4.add(v144)::
84460 :: PRED :: IF :: Z :: if (v149 != #(0)) goto 564::CD,84461:CF,84466
84467 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,84274:JM,84283:DD,84354:JM,84363:CF,84215
84466 :: NORM :: compound :: Ljava/util/List :: return v4::DD,84155
84469 :: EXPR :: assign :: null :: PHI v67 = v145, v145, v66::CF,84470:DD,84477
84468 :: EXPR :: assign :: null :: PHI v41 = #(null), v40::JM,84467:JM,84468:JM,84230:JM,84271:JM,84351:DD,84321:JM,84326:DD,84401:JM,84406
84471 :: EXPR :: assign :: null :: PHI v101 = v145, v145, v100::CF,84472:DD,84477
84470 :: EXPR :: assign :: null :: PHI v68 = #(0), #(0), #(1)::DD,84285
84473 :: EXPR :: assign :: null :: PHI v135 = v141, v141, #(0), v141, #(1), v141, #(0), v141, #(1), v141, v141::CF,84474:DD,84478
84472 :: EXPR :: assign :: null :: PHI v102 = #(0), #(0), #(1)::DD,84365
84475 :: EXPR :: assign :: null :: PHI v137 = v143, v143, v143, v143, v143, v143, #(0), v143, #(1), v143, v143::CF,84476:DD,84480
84474 :: EXPR :: assign :: null :: PHI v136 = v142, v142, #(0), v142, #(1), v142, v142, v142, v142, v142, v142::CF,84475:DD,84479
84477 :: EXPR :: assign :: null :: PHI v139 = v145, v145, v67, v67, v145, v145, v101, v101, v145, v145, v145::DD,84445
84476 :: EXPR :: assign :: null :: PHI v138 = #(), v58, #(), v82, v144, v92, #(), v116, v144, v126, v134::CF,84477:DD,84481
84479 :: EXPR :: assign :: null :: PHI v142 = #(0), v136::CF,84480:DD,84353:DD,84474
84478 :: EXPR :: assign :: null :: PHI v141 = #(0), v135::CF,84479:DD,84231:DD,84272:DD,84352:DD,84473
84481 :: EXPR :: assign :: null :: PHI v144 = #(), v138::CF,84482:JM,84237:JM,84291:JM,84371:JM,84460:DD,84476
84480 :: EXPR :: assign :: null :: PHI v143 = #(0), v137::CF,84481:DD,84273:DD,84475
84482 :: EXPR :: assign :: null :: PHI v145 = #(0), v140::JM,84467:JM,84181:JM,84468:JM,84230:JM,84187:JM,84203:JM,84171:JM,84271:JM,84351:DD,84204:DD,84205:DD,84215:DD,84216:DD,84284:DD,84364:DD,84450:DD,84469:DD,84471:DD,84477
84645 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::JM,72963
84644 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::CE,84645:CD,84652:CD,84656:CD,84673:CD,84674:CD,84682:CD,84686:CD,84690:CD,84707:CD,84708:CD,84728:CD,84729:CD,84730:CD,84916:CD,84920:CD,84921:CD,84924:CD,84925:CD,84926:JM,84746
84652 :: CALL :: call :: Ljava/lang/Class :: v9 = forName(p1 $className )::JM,84656:JM,84921:JM,84920:JM,84746:JM,84652
84656 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.newInstance()::JM,84656:JM,84921:JM,84920:JM,84746
84673 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,84645
84674 :: CALL :: call :: [Ljava/lang/reflect/Field :: v20 = getFields(v9)::JM,84728:CL,97231
84682 :: CALL :: call :: [Ljava/lang/reflect/Method :: v24 = v9.getMethods()::JM,84690
84686 :: NORM :: declaration :: Ljava/util/HashMap :: v25 = new java.util.HashMap::
84690 :: EXPR :: assign :: I :: v27 = v24.length::DD,84707
84700 :: CALL :: call :: Ljava/lang/Object :: v33 = v25.put(v31, v29)::
84707 :: PRED :: IF :: Z :: if (v36 < v27) goto 91::CF,84708:CD,84700:CD,84706:CD,84924
84706 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v36 + #(1)::DD,84924
84708 :: NORM :: declaration :: Ljava/util/HashMap :: v37 = new java.util.HashMap::
84721 :: CALL :: call :: Ljava/lang/Object :: v43 = v37.put(v40, v41)::
84727 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v45 + #(1)::DD,84925
84729 :: PRED :: IF :: Z :: if (v45 < v39) goto 140::CD,84721:CD,84727:CD,84728:CD,84925:JM,84656:JM,84921:JM,84920:JM,84746:JM,84652
84728 :: EXPR :: assign :: I :: v39 = v20.length::CF,84729
84730 :: CALL :: call :: Ljava/util/Iterator :: v48 = p2 $loopFields .iterator()::JM,84656:JM,84921:JM,84920:JM,84746:JM,84652
84735 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.next()::JM,84656:JM,84921:JM,84920:JM,84746
84741 :: CALL :: call :: Ljava/lang/Object :: v56 = p3 $lineData .get(v54)::JM,84656:JM,84921:JM,84920:JM,84746
84740 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v97 + #(1)::JM,84656:JM,84921:JM,84920:JM,84746:DD,84926
84747 :: CALL :: call :: Ljava/lang/Object :: v59 = v37.get(v53)::JM,84752
84746 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::DD,84851:JM,84857:JM,84863
84753 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 239::CF,84762:CD,84754:CD,84767:CD,84771:CD,84777:CD,84781:CD,84786:CD,84790:CD,84794:CD,84798:CD,84804:CD,84809:CD,84813:CD,84818:CD,84819:CD,84926
84752 :: EXPR :: assign :: Ljava/lang/Object :: v60 = CHECKCAST v59::DD,84753:JM,84771:JM,84777:JM,84767:JM,84786:JM,84798:JM,84790:JM,84794
84754 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,97408
84762 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
84767 :: CALL :: call :: Ljava/lang/String :: v65 = v60.getName()::JM,84771:JM,84777:JM,84767
84771 :: CALL :: call :: Ljava/lang/String :: v67 = v65.substring(#(0), #(1))::JM,84771:JM,84777
84777 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,84777
84781 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v61.append(v69)::
84786 :: CALL :: call :: Ljava/lang/String :: v73 = v60.getName()::JM,84786:JM,84798
84790 :: CALL :: call :: Ljava/lang/String :: v75 = v60.getName()::JM,84790:JM,84794:JM,84798
84794 :: CALL :: call :: I :: v77 = v75.length()::JM,84794:JM,84798
84798 :: CALL :: call :: Ljava/lang/String :: v79 = v73.substring(#(1), v77)::JM,84798
84804 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v71.append(v79)::
84809 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
84813 :: CALL :: call :: Ljava/lang/Object :: v85 = v25.get(v83)::JM,84818
84819 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 326::CD,84820:CD,84828:CD,84836:CD,84840:CD,84841:CD,84845:CD,84850:CD,84926
84818 :: EXPR :: assign :: Ljava/lang/Object :: v86 = CHECKCAST v85::DD,84819:JM,84828
84820 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,97408
84828 :: CALL :: call :: [Ljava/lang/Class :: v88 = v86.getParameterTypes()::JM,84828
84832 :: EXPR :: reference :: Ljava/lang/Object :: v89 = v88[#(0)]::JM,84850:JM,84836:JM,84845
84836 :: CALL :: call :: Ljava/lang/String :: v91 = v89.getName()::JM,84850:JM,84836:JM,84845
84841 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getName()::JM,84850:JM,84841:JM,84845
84840 :: EXPR :: assign :: Ljava/lang/Class :: v92 = metadata <Application,Ljava/lang/Integer>-><Primordial,Ljava/lang/Class>::JM,84850:JM,84841:JM,84845
84845 :: CALL :: call :: Z :: v96 = v91.equals(v94)::JM,84850:JM,84845
84851 :: PRED :: IF :: Z :: if (v57 == #(null)) goto 459::CF,84926:CD,84852:CD,84857
84850 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 411::CD,84851:CD,84926
84852 :: CALL :: call :: Z :: v101 = v57.equals(#(?))::JM,84857
84857 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 459::CF,84926:CD,84858:CD,84863
84858 :: CALL :: call :: Z :: v104 = v57.equals(#(.))::JM,84863
84863 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 459::CF,84926:CD,84864:CD,84868
84864 :: CALL :: call :: I :: v108 = parseInt(v57)::
84868 :: CALL :: call :: Ljava/lang/Integer :: v110 = valueOf(v108)::
84916 :: CALL :: call :: Z :: v50 = v48.hasNext()::JM,84656:JM,84921:JM,84920:JM,84746
84921 :: NORM :: compound :: Ljava/lang/Object :: return v11::DD,84645
84920 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 179::CD,84735:CD,84740:CD,84741:CD,84746:CD,84747:CD,84752:CD,84753:CD,84916:CD,84926:JM,84656:JM,84920:CF,84921
84925 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,84727:DD,84729:CF,84728
84924 :: EXPR :: assign :: null :: PHI v36 = #(0), v35::DD,84706:DD,84707
84926 :: EXPR :: assign :: null :: PHI v97 = #(-1), v54, v54, v54, v54, v54, v54, v54, v54::JM,84656:JM,84921:JM,84920:JM,84746:DD,84740
85047 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,85055:CD,85069:CD,85073
85052 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85073
85055 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85073
85060 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85073
85065 :: CALL :: call :: V :: v12.newEntity(p1 $entity )::CL,97558
85069 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85073
85073 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85060:CD,85065:CD,85069:JM,85073
85083 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,85091:CD,85105:CD,85109
85088 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85109
85091 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85109
85096 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85109
85101 :: CALL :: call :: V :: v12.newAtomSite(p1 $atom )::CL,97601
85105 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85109
85109 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85096:CD,85101:CD,85105:JM,85109
85119 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,85127:CD,85141:CD,85145
85124 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85145
85127 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85145
85132 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85145
85137 :: CALL :: call :: V :: v12.newDatabasePDBrev(p1 $dbrev )::CL,98436
85141 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85145
85145 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85132:CD,85137:CD,85141:JM,85145
85155 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,85163:CD,85177:CD,85181
85160 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85181
85163 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85181
85168 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85181
85173 :: CALL :: call :: V :: v12.newDatabasePDBrevRecord(p1 $dbrev )::CL,98595
85177 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85181
85181 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85168:CD,85173:CD,85177:JM,85181
85191 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,85199:CD,85213:CD,85217
85196 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85217
85199 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85217
85204 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85217
85209 :: CALL :: call :: V :: v12.newDatabasePDBremark(p1 $remark )::CL,98669
85213 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85217
85217 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85204:CD,85209:CD,85213:JM,85217
85227 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,85235:CD,85249:CD,85253
85232 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85253
85235 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85253
85240 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85253
85245 :: CALL :: call :: V :: v12.newExptl(p1 $exptl )::CL,98770
85249 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85253
85253 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85240:CD,85245:CD,85249:JM,85253
85263 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,85271:CD,85285:CD,85289
85268 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85289
85271 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85289
85276 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85289
85281 :: CALL :: call :: V :: v12.newCell(p1 $cell )::CL,98811
85285 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85289
85289 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85276:CD,85281:CD,85285:JM,85289
85299 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,85307:CD,85321:CD,85325
85304 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85325
85307 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85325
85312 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85325
85317 :: CALL :: call :: V :: v12.newSymmetry(p1 $symmetry )::CL,99010
85321 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85325
85325 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85312:CD,85317:CD,85321:JM,85325
85335 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,85343:CD,85357:CD,85361
85340 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85361
85343 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85361
85348 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85361
85353 :: CALL :: call :: V :: v12.newStructNcsOper(p1 $sNcsOper )::CL,99119
85357 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85361
85361 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85348:CD,85353:CD,85357:JM,85361
85371 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,85379:CD,85393:CD,85397
85376 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85397
85379 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85397
85384 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85397
85389 :: CALL :: call :: V :: v12.newAtomSites(p1 $atomSites )::CL,99142
85393 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85397
85397 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85384:CD,85389:CD,85393:JM,85397
85407 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,85415:CD,85429:CD,85433
85412 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85433
85415 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85433
85420 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85433
85425 :: CALL :: call :: V :: v12.newStructRef(p1 $sref )::CL,99322
85429 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85433
85433 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85420:CD,85425:CD,85429:JM,85433
85443 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,85451:CD,85465:CD,85469
85448 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85469
85451 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85469
85456 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85469
85461 :: CALL :: call :: V :: v12.newStructRefSeq(p1 $sref )::CL,99363
85465 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85469
85469 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85456:CD,85461:CD,85465:JM,85469
85479 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,85487:CD,85501:CD,85505
85484 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85505
85487 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85505
85492 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85505
85497 :: CALL :: call :: V :: v12.newStructRefSeqDif(p1 $sref )::CL,99765
85501 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85505
85505 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85492:CD,85497:CD,85501:JM,85505
85515 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,85523:CD,85537:CD,85541
85520 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85541
85523 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85541
85528 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85541
85533 :: CALL :: call :: V :: v12.newStructSiteGen(p1 $id )::CL,99794
85537 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85541
85541 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85528:CD,85533:CD,85537:JM,85541
85551 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,85559:CD,85573:CD,85577
85556 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85577
85559 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85577
85564 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85577
85569 :: CALL :: call :: V :: v12.newStructSite(p1 $id )::CL,99817
85573 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85577
85577 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85564:CD,85569:CD,85573:JM,85577
85587 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,85595:CD,85609:CD,85613
85592 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85613
85595 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85613
85600 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85613
85605 :: CALL :: call :: V :: v12.newEntityPolySeq(p1 $epolseq )::CL,99948
85609 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85613
85613 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85600:CD,85605:CD,85609:JM,85613
85623 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,85631:CD,85645:CD,85649
85628 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85649
85631 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85649
85636 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85649
85641 :: CALL :: call :: V :: v12.newEntitySrcGen(p1 $entitySrcGen )::CL,100253
85645 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85649
85649 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85636:CD,85641:CD,85645:JM,85649
85659 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,85667:CD,85681:CD,85685
85664 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85685
85667 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85685
85672 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85685
85677 :: CALL :: call :: V :: v12.newEntitySrcNat(p1 $entitySrcNat )::CL,100270
85681 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85685
85685 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85672:CD,85677:CD,85681:JM,85685
85695 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,85703:CD,85717:CD,85721
85700 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85721
85703 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85721
85708 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85721
85713 :: CALL :: call :: V :: v12.newEntitySrcSyn(p1 $entitySrcSyn )::CL,100299
85717 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85721
85721 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85708:CD,85713:CD,85717:JM,85721
85731 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,85739:CD,85753:CD,85757
85736 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85757
85739 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85757
85744 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85757
85749 :: CALL :: call :: V :: v12.newStructAsym(p1 $sasym )::CL,100322
85753 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85757
85757 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85744:CD,85749:CD,85753:JM,85757
85767 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,85775:CD,85789:CD,85793
85772 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85793
85775 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85793
85780 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85793
85785 :: CALL :: call :: V :: v12.newPdbxPolySeqScheme(p1 $ppss )::CL,100345
85789 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85793
85793 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85780:CD,85785:CD,85789:JM,85793
85803 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,85811:CD,85825:CD,85829
85808 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85829
85811 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85829
85816 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85829
85821 :: CALL :: call :: V :: v12.newPdbxNonPolyScheme(p1 $ppss )::CL,100418
85825 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85829
85829 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85816:CD,85821:CD,85825:JM,85829
85839 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxEntityNonPoly(org.biojava.nbio.structure.io.mmcif.model.PdbxEntityNonPoly)::CD,85847:CD,85861:CD,85865
85844 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85865
85847 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85865
85852 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85865
85861 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85865
85865 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85852:CD,85861:JM,85865
85875 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,85883:CD,85897:CD,85901
85880 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85901
85883 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85901
85888 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85901
85893 :: CALL :: call :: V :: v12.newStructKeywords(p1 $kw )::CL,100515
85897 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85901
85901 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85888:CD,85893:CD,85897:JM,85901
85911 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,85919:CD,85933:CD,85937
85916 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85937
85919 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85937
85924 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85937
85929 :: CALL :: call :: V :: v12.newRefine(p1 $r )::CL,100559
85933 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85937
85937 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85924:CD,85929:CD,85933:JM,85937
85947 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,85955:CD,85969:CD,85973
85952 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,85973
85955 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85973
85960 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85973
85965 :: CALL :: call :: V :: v12.newChemComp(p1 $cc )::CL,100769
85969 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85973
85973 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85960:CD,85965:CD,85969:JM,85973
85983 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,85991:CD,86005:CD,86009
85988 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,86009
85991 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,86009
85996 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,86009
86001 :: CALL :: call :: V :: v12.newAuditAuthor(p1 $aa )::CL,100860
86005 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,86009
86009 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85996:CD,86001:CD,86005:JM,86009
86019 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,86027:CD,86041:CD,86045
86024 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,86045
86027 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,86045
86032 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,86045
86037 :: CALL :: call :: V :: v12.newChemCompDescriptor(p1 $ccd )::CL,101038
86041 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,86045
86045 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,86032:CD,86037:CD,86041:JM,86045
86055 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructOper(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,86063:CD,86077:CD,86081
86060 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,86081
86063 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,86081
86068 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,86081
86073 :: CALL :: call :: V :: v12.newPdbxStructOperList(p1 $structOper )::CL,101076
86077 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,86081
86081 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,86068:CD,86073:CD,86077:JM,86081
86091 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,86099:CD,86113:CD,86117
86096 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,86117
86099 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,86117
86104 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,86117
86109 :: CALL :: call :: V :: v12.newPdbxStrucAssembly(p1 $sa )::CL,101105
86113 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,86117
86117 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,86104:CD,86109:CD,86113:JM,86117
86127 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,86135:CD,86149:CD,86153
86132 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,86153
86135 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,86153
86140 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,86153
86145 :: CALL :: call :: V :: v12.newPdbxStrucAssemblyGen(p1 $sa )::CL,101122
86149 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,86153
86153 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,86140:CD,86145:CD,86149:JM,86153
86163 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,86171:CD,86185:CD,86189
86168 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,86189
86171 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,86189
86176 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,86189
86181 :: CALL :: call :: V :: v12.newChemCompAtom(p1 $atom )::CL,101151
86185 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,86189
86189 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,86176:CD,86181:CD,86185:JM,86189
86199 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,86207:CD,86221:CD,86225
86204 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,86225
86207 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,86225
86212 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,86225
86217 :: CALL :: call :: V :: v12.newChemCompBond(p1 $bond )::CL,101187
86221 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,86225
86225 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,86212:CD,86217:CD,86221:JM,86225
86235 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompIdentifier(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompIdentifier)::CD,86243:CD,86257:CD,86261
86240 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,86261
86243 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,86261
86248 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,86261
86257 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,86261
86261 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,86248:CD,86257:JM,86261
86271 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompDescriptor)::CD,86279:CD,86293:CD,86297
86276 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,86297
86279 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,86297
86284 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,86297
86293 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,86297
86297 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,86284:CD,86293:JM,86297
86307 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,86315:CD,86329:CD,86333
86312 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,86333
86315 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,86333
86320 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,86333
86325 :: CALL :: call :: V :: v12.newStructConn(p1 $id )::CL,101247
86329 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,86333
86333 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,86320:CD,86325:CD,86329:JM,86333
86343 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerGeneric(java.lang.String,java.util.List,java.util.List)::CD,86353:CD,86369:CD,86373
86350 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .consumers::JM,86373
86353 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,86373
86358 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,86373
86369 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,86373
86373 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 16::CD,86358:CD,86369:JM,86373
86391 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStruct(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,86399:CD,86403:CD,86412:CD,86420:CD,86427:CD,86438
86399 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,86403:CL,62878
86403 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,74432:JM,74407:JM,74439:JM,74399:JM,74415
86412 :: CALL :: call :: V :: v10.setTitle(v12)::CL,101289
86420 :: CALL :: call :: V :: v10.setIdCode(v15)::CL,101309
86427 :: CALL :: call :: V :: v17.setPDBHeader(v10)::CL,62887
86438 :: CALL :: call :: V :: v19.setPDBCode(v21)::CL,62867
86476 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86483 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86490 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86497 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86504 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86511 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86518 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v18 = new java.util.LinkedHashMap::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86525 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86548 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86575 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86582 :: NORM :: declaration :: Ljava/util/ArrayList :: v33 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86589 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86596 :: NORM :: declaration :: Ljava/util/ArrayList :: v37 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86606 :: NORM :: declaration :: Ljava/util/ArrayList :: v39 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86656 :: NORM :: declaration :: Ljava/util/ArrayList :: v51 = new java.util.ArrayList::JM,74432:JM,49701:JM,74407:JM,74439:JM,74399:JM,74415
86775 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.InputStream)::CD,86780:CD,86785
86780 :: CALL :: call :: Ljava/io/BufferedReader :: v5 = p0 $this .getBufferedReader(p1 $inStream )::CL,101338
86785 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .parsePDBFile(v5)::CL,101368
86797 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache)::JM,74368
86796 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache)::CE,86797:CD,86812:CD,86828
86812 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v12 = getBiologicalAssembly(p1 $pdbId , p2 $biolAssemblyNr , p3 $cache , v10)::JM,86828:CL,102178
86828 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v12::DD,86797
86869 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueRange.toString(java.util.List)::
86868 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.toString(java.util.List)::CE,86869:CD,86872:CD,86899:CD,86903:CD,86904:CD,86908:CD,86909:JM,86891
86872 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,86908
86877 :: CALL :: call :: Ljava/lang/Object :: v9 = p1 $ranges .get(v20)::JM,86903:JM,86891
86882 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v3.append(v9)::
86887 :: CALL :: call :: I :: v13 = p1 $ranges .size()::JM,86903:JM,86891
86891 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 - #(1)::CF,86892
86893 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v3.append(#(,))::
86892 :: PRED :: IF :: Z :: if (v20 >= v15) goto 44::CD,86893:CF,86898
86899 :: CALL :: call :: I :: v7 = p1 $ranges .size()::JM,86903:JM,86891
86898 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,86909
86903 :: PRED :: IF :: Z :: if (v20 < v7) goto 16::CD,86877:CD,86882:CD,86887:CD,86891:CD,86892:CD,86898:CD,86899:CD,86909:JM,86903:JM,86908
86904 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,86908
86909 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::JM,86891:DD,86892:DD,86898:DD,86903
86908 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,86869
86929 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompoundsFromAlignment()::CD,86933:CD,86937:CD,86982:CD,86986:CD,86990:CD,86991:CD,86995:CD,87598:CD,87602:CD,87603:CD,87669:CD,87673:CD,87675
86933 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::JM,87602:JM,87004:JM,87018:JM,87597:JM,87591:JM,87673
86937 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
86945 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v15 = v13.getChain(v29)::CL,102366
86950 :: CALL :: call :: Z :: v17 = isChainPureNonPolymer(v15)::JM,86954:CL,102383
86954 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 59::CD,86958:CD,86963:CD,86969:CD,86973
86958 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = v18.getChain(v29)::CL,102366
86963 :: CALL :: call :: Z :: v22 = v5.add(v20)::
86969 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v29)::
86973 :: CALL :: call :: Z :: v26 = v3.add(v24)::
86978 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,87675
86982 :: CALL :: call :: Ljava/util/List :: v10 = v8.getChains()::JM,86990:CL,45114
86986 :: CALL :: call :: I :: v12 = v10.size()::JM,86990
86991 :: NORM :: declaration :: Ljava/util/TreeMap :: v30 = new java.util.TreeMap::JM,87591
86990 :: PRED :: IF :: Z :: if (v29 < v12) goto 22::CF,86991:CD,86945:CD,86950:CD,86954:CD,86978:CD,86982:CD,86986:CD,87675
86995 :: CALL :: call :: Ljava/util/Iterator :: v33 = v3.iterator()::JM,87602:JM,87004
87000 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,87602:JM,87004
87005 :: CALL :: call :: I :: v40 = v38.intValue()::JM,87023
87004 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,87023
87009 :: CALL :: call :: Ljava/util/Iterator :: v42 = v3.iterator()::JM,87018:JM,87597
87014 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,87018:JM,87597
87019 :: CALL :: call :: I :: v49 = v47.intValue()::JM,87023
87018 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::JM,87023
87023 :: PRED :: IF :: Z :: if (v49 > v40) goto 163::CD,87028:CD,87036:CD,87041:CD,87045:CD,87053:CD,87063:CD,87069:CD,87074:CD,87593:CD,87597
87028 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v52 = v50.getChain(v40)::CL,102366
87036 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v55 = v53.getChain(v49)::CL,102366
87041 :: NORM :: declaration :: Ljava/util/HashMap :: v56 = new java.util.HashMap::
87045 :: NORM :: declaration :: Ljava/util/HashMap :: v58 = new java.util.HashMap::
87053 :: CALL :: call :: Ljava/lang/String :: v63 = getFullAtomSequence(v61, v56, #(0))::CL,102434
87063 :: CALL :: call :: Ljava/lang/String :: v67 = getFullAtomSequence(v65, v58, #(0))::CL,102434
87069 :: CALL :: call :: Z :: v70 = p0 $this .isProteinSequence(v63)::JM,87074:CL,102765
87075 :: CALL :: call :: Z :: v72 = p0 $this .isProteinSequence(v67)::JM,87080:CL,102765
87074 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 309::CD,87075:CD,87080:CD,87106:CD,87111
87081 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v74 = p0 $this .getProteinSequence(v63)::JM,87091:JM,87676:CL,102781
87080 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 309::CD,87081:CD,87086:CD,87091:CD,87095:CD,87099:CD,87106:CD,87111:CD,87187:CD,87191:CD,87195:CD,87199:CD,87203:CD,87204:CD,87208:CD,87209:CD,87210:CD,87211:CD,87212:CD,87213:CD,87214:CD,87215:CD,87216:CD,87237:CD,87245:CD,87255:CD,87263:CD,87273:CD,87281:CD,87297:CD,87302:CD,87307:CD,87312:CD,87320:CD,87321:CD,87504:CD,87505:CD,87583:CD,87587:CD,87591:CD,87676:CD,87677:CD,87678
87086 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v76 = p0 $this .getProteinSequence(v67)::JM,87095:JM,87677:CL,102781
87091 :: CALL :: call :: I :: v78 = v74.getLength()::JM,87091:JM,87676
87095 :: CALL :: call :: I :: v80 = v76.getLength()::JM,87095:JM,87677
87099 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v82 = p0 $this .alignProtein(v74, v76)::JM,87678:CL,102806
87106 :: CALL :: call :: Z :: v84 = p0 $this .isDNASequence(v63)::JM,87111:CL,102846
87111 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 370::CD,87112:CD,87117:CD,87143:CD,87148
87112 :: CALL :: call :: Z :: v86 = p0 $this .isDNASequence(v67)::JM,87117:CL,102846
87117 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 370::CD,87118:CD,87123:CD,87128:CD,87132:CD,87136:CD,87143:CD,87148:CD,87187:CD,87191:CD,87195:CD,87199:CD,87203:CD,87204:CD,87208:CD,87209:CD,87210:CD,87211:CD,87212:CD,87213:CD,87214:CD,87215:CD,87216:CD,87237:CD,87245:CD,87255:CD,87263:CD,87273:CD,87281:CD,87297:CD,87302:CD,87307:CD,87312:CD,87320:CD,87321:CD,87504:CD,87505:CD,87583:CD,87587:CD,87591:CD,87676:CD,87677:CD,87678
87118 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v88 = p0 $this .getDNASequence(v63)::JM,87128:JM,87676:CL,102862
87123 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v90 = p0 $this .getDNASequence(v67)::JM,87677:JM,87132:CL,102862
87128 :: CALL :: call :: I :: v92 = v88.getLength()::JM,87128:JM,87676
87132 :: CALL :: call :: I :: v94 = v90.getLength()::JM,87677:JM,87132
87136 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v96 = p0 $this .alignDNA(v88, v90)::JM,87678:CL,102887
87143 :: CALL :: call :: Z :: v98 = p0 $this .isRNASequence(v63)::JM,87148:CL,102927
87149 :: CALL :: call :: Z :: v100 = p0 $this .isRNASequence(v67)::JM,87154:CL,102927
87148 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 428::CD,87149:CD,87154:CD,87593:CD,87597
87155 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v102 = p0 $this .getRNASequence(v63)::JM,87165:JM,87676:CL,102943
87154 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 428::CD,87155:CD,87160:CD,87165:CD,87169:CD,87173:CD,87187:CD,87191:CD,87195:CD,87199:CD,87203:CD,87204:CD,87208:CD,87209:CD,87210:CD,87211:CD,87212:CD,87213:CD,87214:CD,87215:CD,87216:CD,87237:CD,87245:CD,87255:CD,87263:CD,87273:CD,87281:CD,87297:CD,87302:CD,87307:CD,87312:CD,87320:CD,87321:CD,87504:CD,87505:CD,87583:CD,87587:CD,87591:CD,87593:CD,87597:CD,87676:CD,87677:CD,87678
87160 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v104 = p0 $this .getRNASequence(v67)::JM,87169:JM,87677:CL,102943
87165 :: CALL :: call :: I :: v106 = v102.getLength()::JM,87165:JM,87676
87169 :: CALL :: call :: I :: v108 = v104.getLength()::JM,87169:JM,87677
87173 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v110 = p0 $this .alignRNA(v102, v104)::JM,87678:CL,102968
87187 :: CALL :: call :: I :: v117 = getNumGaps(v113)::JM,87203:CL,103008
87191 :: CALL :: call :: I :: v119 = getNumGapsQuery(v113)::JM,87211:CL,103044
87195 :: CALL :: call :: I :: v121 = getNumGapsTarget(v113)::JM,87214:CL,103091
87199 :: CALL :: call :: I :: v123 = v113.getLength()::JM,87203:JM,87199
87203 :: EXPR :: assign :: Ljava/lang/Object :: v124 = v123 - v117::DD,87209:JM,87204:JM,87208
87204 :: CALL :: call :: I :: v126 = v113.getNumIdenticals()::JM,87204:JM,87208
87209 :: EXPR :: assign :: D :: v128 = CONVERT I to D v124::CF,87210
87208 :: EXPR :: assign :: D :: v127 = CONVERT I to D v126::DD,87210:CF,87209
87211 :: EXPR :: assign :: D :: v130 = CONVERT I to D v119::DD,87213:CF,87212
87210 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v127 / v128::JM,87237:DD,87320:DD,87504:JM,87545:CF,87211
87213 :: EXPR :: assign :: Ljava/lang/Object :: v132 = v130 / v131::JM,87255:DD,87322:CF,87214
87212 :: EXPR :: assign :: D :: v131 = CONVERT I to D v111::CF,87213
87215 :: EXPR :: assign :: D :: v134 = CONVERT I to D v112::CF,87216
87214 :: EXPR :: assign :: D :: v133 = CONVERT I to D v121::DD,87216:CF,87215
87216 :: EXPR :: assign :: Ljava/lang/Object :: v135 = v133 / v134::JM,87273:DD,87324
87237 :: CALL :: call :: Ljava/lang/Double :: v148 = valueOf(v129)::JM,87237
87245 :: CALL :: call :: Ljava/lang/String :: v150 = format(#(%4.2f), v146)::
87255 :: CALL :: call :: Ljava/lang/Double :: v154 = valueOf(v132)::JM,87255
87263 :: CALL :: call :: Ljava/lang/String :: v156 = format(#(%4.2f), v152)::
87273 :: CALL :: call :: Ljava/lang/Double :: v160 = valueOf(v135)::JM,87273
87281 :: CALL :: call :: Ljava/lang/String :: v162 = format(#(%4.2f), v158)::
87297 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
87302 :: CALL :: call :: Ljava/lang/String :: v170 = v113.toString(#(100))::JM,87302
87307 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v165.append(v170)::
87312 :: CALL :: call :: Ljava/lang/String :: v174 = v172.toString()::
87321 :: PRED :: IF :: Z :: if (v177 <= #(0)) goto 952::CD,87322:CD,87323
87320 :: EXPR :: assign :: Z :: v177 = v129 < #(0.99999 d)::DD,87321
87323 :: PRED :: IF :: Z :: if (v179 >= #(0)) goto 952::CD,87324:CD,87325
87322 :: EXPR :: assign :: Z :: v179 = v132 > #(0.3 d)::DD,87323
87325 :: PRED :: IF :: Z :: if (v180 >= #(0)) goto 952::CD,87330:CD,87335:CD,87482
87324 :: EXPR :: assign :: Z :: v180 = v135 > #(0.3 d)::DD,87325
87330 :: CALL :: call :: Z :: v184 = v30.containsKey(v182)::JM,87335
87335 :: PRED :: IF :: Z :: if (v184 != #(0)) goto 785::CD,87340:CD,87345:CD,87404:CD,87409:CD,87410
87340 :: CALL :: call :: Z :: v188 = v30.containsKey(v186)::JM,87345
87345 :: PRED :: IF :: Z :: if (v188 != #(0)) goto 785::JM,103281:JM,103274:CD,87366:CD,87370:CD,87375:CD,87383:CD,87393:CD,87404:CD,87409:CD,87410
87366 :: CALL :: call :: V :: v196.addChain(v52)::CL,103385
87370 :: CALL :: call :: V :: v196.addChain(v55)::CL,103385
87375 :: CALL :: call :: V :: v196.setMolId(v290)::CL,103402
87383 :: CALL :: call :: Ljava/lang/Object :: v205 = v30.put(v203, v196)::
87393 :: CALL :: call :: Ljava/lang/Object :: v209 = v30.put(v207, v196)::
87404 :: CALL :: call :: Ljava/lang/Object :: v213 = v30.get(v211)::JM,87409
87409 :: EXPR :: assign :: Ljava/lang/Object :: v214 = CHECKCAST v213::DD,87410
87410 :: PRED :: IF :: Z :: if (v214 != #(null)) goto 868::CD,87431:CD,87437:CD,87445:CD,87468:CD,87476
87431 :: CALL :: call :: Ljava/lang/Object :: v225 = v30.get(v223)::
87437 :: CALL :: call :: V :: v226.addChain(v52)::CL,103385
87445 :: CALL :: call :: Ljava/lang/Object :: v231 = v30.put(v229, v226)::
87468 :: CALL :: call :: V :: v214.addChain(v55)::CL,103385
87476 :: CALL :: call :: Ljava/lang/Object :: v242 = v30.put(v240, v214)::
87482 :: CALL :: call :: Z :: v246 = areResNumbersAligned(v52, v55)::CL,103413
87505 :: PRED :: IF :: Z :: if (v256 <= #(0)) goto 1054::CD,87525:CD,87529:CD,87537:CD,87545:CD,87560:CD,87565:CD,87570:CD,87575:JM,87591
87504 :: EXPR :: assign :: Z :: v256 = v129 < #(1.0 d)::DD,87505
87525 :: CALL :: call :: I :: v265 = v113.getNumIdenticals()::JM,87525
87529 :: CALL :: call :: Ljava/lang/Integer :: v267 = valueOf(v265)::
87537 :: CALL :: call :: Ljava/lang/Integer :: v269 = valueOf(v124)::
87545 :: CALL :: call :: Ljava/lang/Double :: v271 = valueOf(v129)::JM,87545
87560 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v274 = new java.lang.StringBuilder::
87565 :: CALL :: call :: Ljava/lang/String :: v277 = v113.toString(#(100))::JM,87565
87570 :: CALL :: call :: Ljava/lang/StringBuilder :: v279 = v274.append(v277)::
87575 :: CALL :: call :: Ljava/lang/String :: v281 = v279.toString()::
87583 :: CALL :: call :: I :: v284 = v30.size()::JM,87591
87587 :: CALL :: call :: I :: v286 = v3.size()::JM,87591
87591 :: PRED :: IF :: Z :: if (v284 != v286) goto 1071::CD,87593:CD,87597
87593 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,87018:JM,87597
87597 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 139::CD,87014:CD,87018:CD,87019:CD,87023:CD,87598:CD,87602:JM,87597
87598 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,87602:JM,87004
87603 :: CALL :: call :: Ljava/util/Iterator :: v294 = v3.iterator()::JM,87673
87602 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 113::CD,87000:CD,87004:CD,87005:CD,87009:CD,87593:CD,87597:JM,87602
87608 :: CALL :: call :: Ljava/lang/Object :: v298 = v294.next()::JM,87673
87620 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v304 = v302.getChain(v301)::CL,102366
87629 :: CALL :: call :: Z :: v308 = v30.containsKey(v306)::JM,87634
87634 :: PRED :: IF :: Z :: if (v308 != #(0)) goto 1202::JM,103281:JM,103274:CD,87650:CD,87655:CD,87663
87650 :: CALL :: call :: V :: v316.addChain(v304)::CL,103385
87655 :: CALL :: call :: V :: v316.setMolId(v325)::CL,103402
87663 :: CALL :: call :: Ljava/lang/Object :: v324 = v30.put(v322, v316)::
87669 :: CALL :: call :: Z :: v296 = v294.hasNext()::JM,87673
87673 :: PRED :: IF :: Z :: if (v296 != #(0)) goto 1102::CD,87608:CD,87620:CD,87629:CD,87634:CD,87669:JM,87673
87675 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,86978:DD,86990
87677 :: EXPR :: assign :: null :: PHI v112 = v80, v94, v108::CF,87678:DD,87215
87676 :: EXPR :: assign :: null :: PHI v111 = v78, v92, v106::CF,87677:DD,87212
87678 :: EXPR :: assign :: null :: PHI v113 = v82, v96, v110::JM,87203:JM,87199:JM,87204:JM,87208:JM,87302:JM,87525:JM,87565
87977 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::JM,74565
87976 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::CE,87977:CD,87980:CD,87984:CD,87988:CD,88021:CD,88025:CD,88026:JM,87997
87980 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,88007:JM,88014:DD,88026
87984 :: CALL :: call :: Ljava/util/Collection :: v6 = p1 $chainIds2entities .values()::JM,88025:JM,87997
87988 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,88025:JM,87997
87993 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,88025:JM,87997
87997 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,88008:JM,88007:JM,88014
87998 :: CALL :: call :: Ljava/util/Iterator :: v16 = v3.iterator()::JM,88007:JM,88014
88003 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,88007:JM,88014
88007 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,88008
88008 :: PRED :: IF :: Z :: if (v21 != v14) goto 71::CD,88010:CD,88014:CD,88027:JM,88007
88010 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,88007:JM,88014
88015 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 93::CD,88016:JM,88025:JM,87997
88014 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,88027:CD,88003:CD,88007:CD,88008:JM,88014
88016 :: CALL :: call :: Z :: v25 = v3.add(v14)::
88021 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,88025:JM,87997
88025 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,87993:CD,87997:CD,87998:CD,88010:CD,88014:CD,88015:CD,88021:CD,88027:JM,88025:CF,88026
88027 :: EXPR :: assign :: null :: PHI v23 = #(1), #(0)::DD,88015
88026 :: NORM :: compound :: Ljava/util/List :: return v3::DD,87977
88053 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.createPurelyNonPolyCompounds(java.util.List)::CD,88058:CD,88093:CD,88097:CD,88101:CD,88102:CD,88106:CD,88178:JM,88111
88058 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,88106:JM,88176
88066 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = v12.getChain(v24)::CL,102366
88071 :: CALL :: call :: Z :: v16 = isChainPureNonPolymer(v14)::JM,88075:CL,102383
88075 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 46::CD,88079:CD,88084:CF,88089
88079 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v19 = v17.getChain(v24)::CL,102366
88084 :: CALL :: call :: Z :: v21 = v4.add(v19)::
88089 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,88178
88093 :: CALL :: call :: Ljava/util/List :: v9 = v7.getChains()::JM,88101:CL,45114
88097 :: CALL :: call :: I :: v11 = v9.size()::JM,88101
88101 :: PRED :: IF :: Z :: if (v24 < v11) goto 14::CD,88066:CD,88071:CD,88075:CD,88089:CD,88093:CD,88097:CD,88178:JM,88106
88102 :: CALL :: call :: Z :: v26 = v4.isEmpty()::JM,88106
88107 :: CALL :: call :: Z :: v28 = p1 $compounds .isEmpty()::JM,88111
88106 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 201::CD,88107:CD,88111:CD,88127:CD,88128:CD,88172:CD,88176:CD,88179
88111 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 108::CD,88117:CF,88127
88117 :: CALL :: call :: Ljava/lang/Object :: v32 = max(p1 $compounds , v29)::
88127 :: EXPR :: assign :: Ljava/lang/Object :: v36 = #(0) + #(1)::DD,88179:JM,88176
88128 :: CALL :: call :: Ljava/util/Iterator :: v38 = v4.iterator()::JM,88176
88133 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,88176
88138 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v44 = new org.biojava.nbio.structure.Compound::JM,88111
88142 :: CALL :: call :: V :: v44.addChain(v43)::CL,103385
88146 :: CALL :: call :: V :: v44.setMolId(v58)::CL,103402
88156 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v58)::
88167 :: CALL :: call :: Z :: v57 = p1 $compounds .add(v44)::JM,88111
88166 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v58 + #(1)::DD,88179:JM,88111
88172 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,88176
88176 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 124::CD,88133:CD,88138:JM,103281:JM,103274:CD,88142:CD,88146:CD,88156:CD,88166:CD,88167:CD,88172:CD,88179:JM,88176
88179 :: EXPR :: assign :: null :: PHI v58 = v36, v55::JM,88176:DD,88166
88178 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::DD,88089:DD,88101
88238 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setSeqNum(java.lang.Integer)::JM,88243
88243 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
88249 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setInsCode(java.lang.Character)::JM,88254
88254 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p1 $insCode ::
88268 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .scores = #(null)::
88271 :: EXPR :: reference :: Ljava/util/Map :: v6 = p1 $cache .scores::DD,88274
88274 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .scores = v6::
88283 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getPdbId()::CE,88284:CD,88290:CD,88305
88284 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.client.StructureName.getPdbId()::JM,75184:JM,75185
88287 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,88290
88291 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v6 = p0 $this .toCanonical()::CL,103748
88290 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 19::CD,88291:CD,88295
88295 :: CALL :: call :: Ljava/lang/String :: v8 = v6.getPdbId()::JM,88299:CL,50004
88299 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v8::
88302 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .pdbId::DD,88305
88305 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,88284
88311 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.toString()::CE,88312:CD,88315:CD,88323:CD,88328:CD,88336:CD,88340:CD,88345:CD,88353:CD,88394:CD,88398:CD,88399:CD,88401:CD,88406:CD,88410
88312 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.toString()::JM,75450
88315 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,88410
88320 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::
88323 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
88328 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
88333 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .groups::
88336 :: CALL :: call :: I :: v14 = v12.size()::
88340 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
88345 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(#( ))::
88350 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::JM,88398
88353 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,88398
88358 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,88398
88376 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toPDB()::CL,103762
88384 :: CALL :: call :: Ljava/lang/String :: v39 = format(#(%s %s), v30)::
88389 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v3.append(v39)::
88394 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,88398
88399 :: EXPR :: reference :: Ljava/lang/String :: v42 = org.biojava.nbio.structure.Site.lineEnd::
88398 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 55::CD,88358:CD,88376:CD,88384:CD,88389:CD,88394:JM,88398
88401 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v3.append(v42)::
88406 :: CALL :: call :: Ljava/lang/String :: v46 = v3.toString()::JM,88410
88410 :: NORM :: compound :: Ljava/lang/String :: return v46::DD,88312
88443 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/multiple/BlockSet :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.clone()::
88442 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.clone()::CE,88443:CD,88446:CD,88450
88446 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/BlockSetImpl :: v4 = p0 $null .clone()::JM,88450:CL,103830
88450 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/multiple/BlockSet :: return v4::DD,88443
88470 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(0)::
88473 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = #(null)::
88476 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = #(null)::
88479 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,88483
88483 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v6::
88486 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,88490
88490 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v8::
88493 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = #(null)::
88496 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = #(null)::
88499 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = #(null)::
88502 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v10 = org.biojava.nbio.structure.HetatomImpl.performanceBehavior::DD,88506
88504 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::CF,88506
88507 :: NORM :: declaration :: Ljava/util/HashMap :: v12 = new java.util.HashMap::DD,88511
88506 :: PRED :: IF :: Z :: if (v10 != v11) goto 81::CD,88507
88511 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v12::
88515 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = #(null)::
88551 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBFlag(boolean)::JM,88556
88556 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = p1 $flag ::
88562 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setResidueNumber(org.biojava.nbio.structure.ResidueNumber)::JM,88567
88567 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = p1 $residueNumber ::
88573 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBName(java.lang.String)::JM,88591
88591 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
88604 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAtom(org.biojava.nbio.structure.Atom)::CD,88609:CD,88616:CD,88621:CD,88625:CD,88633
88609 :: CALL :: call :: V :: p1 $atom .setGroup(p0 $this )::CL,88785
88613 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::
88616 :: CALL :: call :: Z :: v7 = v5.add(p1 $atom )::
88621 :: CALL :: call :: [D :: v9 = p1 $atom .getCoords()::JM,88625:CL,76801
88625 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 33::CD,88626
88626 :: CALL :: call :: V :: p0 $this .setPDBFlag(#(1))::CL,88551
88630 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .atomNameLookup::DD,88633
88633 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 176::CD,88641:CD,88647:CD,88648
88641 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.put(v16, p1 $atom )::JM,88647
88647 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,88648
88649 :: CALL :: call :: Ljava/lang/Character :: v22 = p1 $atom .getAltLoc()::JM,88657:JM,88745:CL,103842
88648 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 176::CD,88649:CD,88653:CD,88657:CD,88679:CD,88684:CD,88688:CD,88693:CD,88698:CD,88703:CD,88708:CD,88712:CD,88717:CD,88722:CD,88726:CD,88731:CD,88736:CD,88745
88653 :: CALL :: call :: C :: v24 = v22.charValue()::JM,88657:JM,88745
88657 :: PRED :: IF :: Z :: if (v24 == #(32)) goto 107::CF,88745:CF,88658:CD,88663:CD,88668:CD,88673
88658 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::JM,88745
88663 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v24)::JM,88745
88668 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(#(')))::JM,88745
88673 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::JM,88745
88679 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
88684 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $atom .getName()::CL,51738
88688 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
88693 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( ))::
88698 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v36)::
88703 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v49.append(#( is already present i...))::
88708 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .toString()::CL,103863:CL,104151:CL,104053
88712 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
88717 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v56.append(#(. The atom with serial ))::
88722 :: CALL :: call :: I :: v61 = p1 $atom .getPDBserial()::CL,89726
88726 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v61)::
88731 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#( will be ignored in l...))::
88736 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
88745 :: EXPR :: assign :: null :: PHI v36 = #(), v35::
88785 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setGroup(org.biojava.nbio.structure.Group)::JM,88790
88790 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = p1 $parent ::
88796 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAltLoc(org.biojava.nbio.structure.Group)::CD,88804:CD,88815
88801 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .altLocs::DD,88804
88805 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,88809
88804 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 19::CD,88805
88809 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = v6::
88812 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .altLocs::
88815 :: CALL :: call :: Z :: v10 = v8.add(p1 $group )::
88828 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,88833
88833 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = p1 $cc ::
88846 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = #(null)::
88849 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = #(ATOM)::
88858 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setPDBName(java.lang.String)::JM,88863
88863 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
88869 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::CE,88870:CD,88876
88870 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::JM,102661:JM,102462
88873 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .amino_char::DD,88876
88876 :: NORM :: compound :: Ljava/lang/Character :: return v3::CF,88870
88878 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setAminoType(java.lang.Character)::JM,88883
88883 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = p1 $aa ::
88889 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setRecordType(java.lang.String)::JM,88894
88894 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = p1 $recordName ::
88916 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #(null)::
88919 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v5 = org.biojava.nbio.structure.Element.R::DD,88921
88921 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = v5::
88925 :: EXPR :: modify :: [D :: p0 $this .coords = v7::
88924 :: NORM :: declaration :: [D :: v7 = new []::DD,88925
88928 :: EXPR :: modify :: F :: p0 $this .occupancy = #(0.0 f)::
88931 :: EXPR :: modify :: F :: p0 $this .tempfactor = #(0.0 f)::
88934 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
88937 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = #(null)::
88940 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = #(null)::
88943 :: EXPR :: modify :: S :: p0 $this .charge = #(0)::
88966 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCoords([])::JM,88971
88971 :: EXPR :: modify :: [D :: p0 $this .coords = p1 $c ::
88977 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getCenterVector(org.biojava.nbio.structure.Atom[],org.biojava.nbio.structure.Atom)::CD,88982:CD,88983:CD,88987:CD,88992:CD,88996:CD,89001:CD,89005:JM,88919:JM,88924:CD,89014
88983 :: CALL :: call :: D :: v9 = p2 $centroid .getX()::JM,88987:CL,76644
88982 :: NORM :: declaration :: [D :: v5 = new []::
88987 :: EXPR :: assign :: Ljava/lang/Object :: v10 = #(0.0 d) - v9::DD,88988
88988 :: EXPR :: modify :: D :: v5[#(0)] = v10::
88992 :: CALL :: call :: D :: v13 = p2 $centroid .getY()::JM,88996:CL,76658
88997 :: EXPR :: modify :: D :: v5[#(1)] = v14::
88996 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(0.0 d) - v13::DD,88997
89001 :: CALL :: call :: D :: v17 = p2 $centroid .getZ()::JM,89005:CL,76672
89005 :: EXPR :: assign :: Ljava/lang/Object :: v18 = #(0.0 d) - v17::DD,89006
89006 :: EXPR :: modify :: D :: v5[#(2)] = v18::
89014 :: CALL :: call :: V :: v19.setCoords(v5)::CL,88966
89038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.add(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,88919:JM,88924:CD,89056:CD,89069:CD,89082
89056 :: CALL :: call :: V :: v4.setX(v10)::CL,89618
89069 :: CALL :: call :: V :: v4.setY(v16)::CL,89634
89082 :: CALL :: call :: V :: v4.setZ(v22)::CL,89650
89099 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.transpose()::JM,104305:JM,104299:JM,104302:CD,89115:CD,89149:CD,89153
89115 :: CALL :: call :: [[D :: v8 = v3.getArray()::CL,104318
89121 :: EXPR :: reference :: Ljava/lang/Object :: v12 = v8[v18]::
89125 :: EXPR :: reference :: [[D :: v13 = p0 $this .A::
89128 :: EXPR :: reference :: Ljava/lang/Object :: v14 = v13[v21]::
89132 :: EXPR :: reference :: D :: v15 = v14[v18]::DD,89136
89136 :: EXPR :: modify :: D :: v12[v21] = v15::
89141 :: EXPR :: reference :: I :: v11 = p0 $this .n::DD,89144
89140 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v18 + #(1)::DD,89152:CF,89151
89145 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,89153
89144 :: PRED :: IF :: Z :: if (v18 < v11) goto 35::CD,89140:CD,89151:CD,89152:CF,89145
89146 :: EXPR :: reference :: I :: v10 = p0 $this .m::DD,89149
89149 :: PRED :: IF :: Z :: if (v20 < v10) goto 29::CD,89144:CD,89145:CD,89151:CD,89152:CD,89153
89151 :: EXPR :: assign :: null :: PHI v21 = v20, v21::CF,89152:DD,89145:DD,89151
89153 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,89149:DD,89151
89152 :: EXPR :: assign :: null :: PHI v18 = #(0), v17::DD,89140:DD,89144
89179 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.times(org.biojava.nbio.structure.jama.Matrix)::CD,89191:JM,104305:JM,104299:JM,104302:CD,89209:CD,89216:CD,89280:CD,89290
89191 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v44 = new java.lang.IllegalArgumentException::
89209 :: CALL :: call :: [[D :: v11 = v6.getArray()::CL,104318
89213 :: EXPR :: reference :: I :: v12 = p0 $this .n::DD,89216
89216 :: NORM :: declaration :: [D :: v13 = new []::
89219 :: EXPR :: reference :: [[D :: v17 = p1 $B .A::
89222 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v17[v22]::
89226 :: EXPR :: reference :: D :: v19 = v18[v41]::DD,89230
89230 :: EXPR :: modify :: D :: v13[v22] = v19::
89235 :: EXPR :: reference :: I :: v16 = p0 $this .n::DD,89238
89234 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v22 + #(1)::DD,89283:CF,89282
89238 :: PRED :: IF :: Z :: if (v22 < v16) goto 67::CD,89234:CD,89282:CD,89283
89240 :: EXPR :: reference :: [[D :: v24 = p0 $this .A::
89243 :: EXPR :: reference :: Ljava/lang/Object :: v25 = v24[v37]::
89248 :: EXPR :: reference :: D :: v28 = v25[v34]::DD,89256
89252 :: EXPR :: reference :: D :: v29 = v13[v34]::DD,89256
89257 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v33 + v30::DD,89286:CF,89258
89256 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v28 * v29::CF,89257
89259 :: EXPR :: reference :: I :: v27 = p0 $this .n::DD,89262
89258 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v34 + #(1)::DD,89287:CF,89284
89263 :: EXPR :: reference :: Ljava/lang/Object :: v35 = v11[v38]::
89262 :: PRED :: IF :: Z :: if (v34 < v27) goto 119::CD,89256:CD,89257:CD,89258:CD,89284:CD,89285:CD,89286:CD,89287
89267 :: EXPR :: modify :: D :: v35[v43] = v33::
89271 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v38 + #(1)::DD,89289:CF,89288
89272 :: EXPR :: reference :: I :: v23 = p0 $this .m::DD,89275
89275 :: PRED :: IF :: Z :: if (v37 < v23) goto 96::CD,89262:CD,89271:CD,89284:CD,89285:CD,89286:CD,89287:CD,89288:CD,89289:CF,89276
89277 :: EXPR :: reference :: I :: v15 = p1 $B .n::DD,89280
89276 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v42 + #(1)::DD,89290
89280 :: PRED :: IF :: Z :: if (v40 < v15) goto 59::CD,89238:CD,89275:CD,89276:CD,89282:CD,89283:CD,89288:CD,89289:CD,89290
89283 :: EXPR :: assign :: null :: PHI v22 = #(0), v21::DD,89234:DD,89238
89282 :: EXPR :: assign :: null :: PHI v41 = v40, v41::CF,89283:DD,89282:DD,89288
89285 :: EXPR :: assign :: null :: PHI v38 = v37, v38::CF,89286:DD,89271:DD,89285
89284 :: EXPR :: assign :: null :: PHI v43 = v42, v43::CF,89285:DD,89284:DD,89288
89287 :: EXPR :: assign :: null :: PHI v34 = #(0), v32::DD,89258:DD,89262
89286 :: EXPR :: assign :: null :: PHI v33 = #(0.0 d), v31::CF,89287:DD,89257:DD,89267
89289 :: EXPR :: assign :: null :: PHI v37 = #(0), v36::DD,89275:DD,89285
89288 :: EXPR :: assign :: null :: PHI v42 = v41, v43::CF,89289:DD,89276:DD,89284
89290 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::DD,89280:DD,89282
89346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.svd()::JM,104393:JM,104907:JM,104971:JM,104335:JM,104400:JM,104912:JM,104976:JM,104339:JM,104404:JM,104919:JM,104408:JM,104920:JM,104346:JM,106586:JM,104412:JM,104928:JM,104420:JM,104359:JM,104424:JM,104429:JM,106477:JM,104367:JM,105198:JM,105329:JM,104371:JM,104947:JM,105330:JM,105335:JM,104376:JM,104957:JM,106429:JM,104956:JM,104383
89358 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.SingularValueDecomposition.getU()::
89394 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.SingularValueDecomposition.getV()::
89419 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.clone()::CD,89423
89423 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v4 = p0 $this .copy()::CL,107729
89429 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.det()::CE,89430:CD,89438:CD,89442
89430 :: EXIT :: exit :: D :: org.biojava.nbio.structure.jama.Matrix.det()::JM,76875
89438 :: CALL :: call :: D :: v6 = v3.det()::JM,89442:CL,108269
89442 :: NORM :: compound :: D :: return v6::DD,89430
89445 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.minus(org.biojava.nbio.structure.jama.Matrix)::CD,89450:JM,104305:JM,104299:JM,104302:CD,89466:CD,89512:CD,89516
89450 :: CALL :: call :: V :: p0 $this .checkMatrixDimensions(p1 $B )::CL,108327
89466 :: CALL :: call :: [[D :: v10 = v5.getArray()::CL,104318
89472 :: EXPR :: reference :: Ljava/lang/Object :: v14 = v10[v27]::
89476 :: EXPR :: reference :: [[D :: v15 = p0 $this .A::
89479 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v15[v27]::
89483 :: EXPR :: reference :: D :: v17 = v16[v24]::DD,89498
89487 :: EXPR :: reference :: [[D :: v18 = p1 $B .A::
89490 :: EXPR :: reference :: Ljava/lang/Object :: v19 = v18[v27]::
89494 :: EXPR :: reference :: D :: v20 = v19[v24]::DD,89498
89499 :: EXPR :: modify :: D :: v14[v24] = v21::
89498 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v17 - v20::DD,89499
89503 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,89515:CF,89514
89504 :: EXPR :: reference :: I :: v13 = p0 $this .n::DD,89507
89507 :: PRED :: IF :: Z :: if (v24 < v13) goto 41::CD,89498:CD,89503:CD,89514:CD,89515:CF,89508
89509 :: EXPR :: reference :: I :: v12 = p0 $this .m::DD,89512
89508 :: EXPR :: assign :: Ljava/lang/Object :: v25 = v27 + #(1)::DD,89516
89512 :: PRED :: IF :: Z :: if (v26 < v12) goto 35::CD,89507:CD,89508:CD,89514:CD,89515:CD,89516
89515 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::DD,89503:DD,89507
89514 :: EXPR :: assign :: null :: PHI v27 = v26, v27::CF,89515:DD,89508:DD,89514
89516 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::DD,89512:DD,89514
89618 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setX(double)::JM,89626
89623 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
89626 :: EXPR :: modify :: D :: v4[#(0)] = p1 $x ::
89634 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setY(double)::JM,89642
89639 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
89642 :: EXPR :: modify :: D :: v4[#(1)] = p1 $y ::
89650 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setZ(double)::JM,89658
89655 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
89658 :: EXPR :: modify :: D :: v4[#(2)] = p1 $z ::
89675 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setOccupancy(float)::JM,89680
89680 :: EXPR :: modify :: F :: p0 $this .occupancy = p1 $occu ::
89695 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setTempFactor(float)::JM,89700
89700 :: EXPR :: modify :: F :: p0 $this .tempfactor = p1 $temp ::
89715 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCharge(short)::JM,89720
89720 :: EXPR :: modify :: S :: p0 $this .charge = p1 $inputCharge ::
89727 :: EXIT :: exit :: I :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::
89726 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::CE,89727:CD,89733
89730 :: EXPR :: reference :: I :: v3 = p0 $this .pdbserial::DD,89733
89733 :: NORM :: compound :: I :: return v3::CF,89727
89735 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setPDBserial(int)::JM,89740
89740 :: EXPR :: modify :: I :: p0 $this .pdbserial = p1 $i ::
89746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setName(java.lang.String)::JM,89751
89751 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $s ::
89757 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setElement(org.biojava.nbio.structure.Element)::JM,89762
89762 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = p1 $e ::
89769 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.StructureTools.getRepresentativeAtomArray(org.biojava.nbio.structure.Structure)::JM,77749
89768 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getRepresentativeAtomArray(org.biojava.nbio.structure.Structure)::CE,89769:CD,89772:CD,89776:CD,89780:CD,89807:CD,89811:CD,89812:CD,89816:CD,89817:CD,89822:CD,89823
89772 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,89816:JM,89822
89776 :: CALL :: call :: Ljava/util/List :: v6 = p1 $s .getChains()::JM,89811:CL,45114
89780 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,89811
89785 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,89811
89790 :: CALL :: call :: [Lorg/biojava/nbio/structure/Atom :: v16 = getRepresentativeAtomArray(v14)::JM,89794:CL,108357
89794 :: EXPR :: assign :: I :: v17 = v16.length::DD,89806
89796 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v16[v23]::
89800 :: CALL :: call :: Z :: v20 = v3.add(v18)::
89805 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,89824
89807 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,89811
89806 :: PRED :: IF :: Z :: if (v23 < v17) goto 57::CD,89800:CD,89805:CD,89824:JM,89811
89811 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,89785:CD,89790:CD,89794:CD,89806:CD,89807:CD,89824:JM,89811:JM,89816
89812 :: CALL :: call :: I :: v25 = v3.size()::JM,89816
89817 :: CALL :: call :: [Ljava/lang/Object :: v28 = v3.toArray(v26)::JM,89822
89816 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v26 = new org.biojava.nbio.structure.Atom[]::JM,89822
89823 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Atom :: return v29::DD,89769
89822 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::CF,89823
89824 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,89805:DD,89806
90569 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String)::CD,90579:CD,90580:CD,90585:CD,90590:CD,90599:CD,90604:CD,90610:CD,90618:CD,90620:CD,90634
90579 :: NORM :: declaration :: Ljava/io/IOException :: v68 = new java.io.IOException::
90580 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
90585 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v69.append(p1 $pdbId )::
90590 :: CALL :: call :: Ljava/lang/String :: v75 = v73.toString()::
90599 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getLocalFile(p1 $pdbId )::JM,90645:JM,90680:CL,108991
90604 :: CALL :: call :: [I :: v10 = $SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CL,109203
90607 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v11 = p0 $this .fetchBehavior::
90610 :: CALL :: call :: I :: v13 = v11.ordinal()::
90614 :: EXPR :: reference :: I :: v14 = v10[v13]::DD,90618
90618 :: PRED :: IF :: null :: switch v14::CD,90645:CD,90680:CD,90702:CD,90704
90620 :: NORM :: declaration :: Ljava/io/IOException :: v59 = new java.io.IOException::
90634 :: CALL :: call :: Ljava/lang/String :: v66 = format(#(Structure %s not foun...), v62)::
90645 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,90650:CD,90654:CD,90702:CD,90704
90650 :: CALL :: call :: Z :: v28 = v26.isUpdateRemediatedFiles()::JM,90654:CL,109314
90655 :: CALL :: call :: J :: v30 = v8.lastModified()::JM,90661
90654 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 175::CD,90655:CD,90659:CD,90661:CD,90662
90659 :: EXPR :: reference :: J :: v31 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,90661
90661 :: EXPR :: assign :: Z :: v32 = v30 == v31::DD,90662
90662 :: PRED :: IF :: Z :: if (v32 >= #(0)) goto 175::CD,90702:CD,90704
90681 :: CALL :: call :: J :: v17 = v8.lastModified()::JM,90687
90680 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,90681:CD,90685:CD,90687:CD,90688:CD,90702:CD,90704
90685 :: EXPR :: reference :: J :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,90687
90687 :: EXPR :: assign :: Z :: v19 = v17 == v18::DD,90688
90688 :: PRED :: IF :: Z :: if (v19 >= #(0)) goto 216::CD,90702:CD,90704
90699 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v39 = p0 $this .obsoleteBehavior::DD,90704
90702 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v40 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::CF,90704
90705 :: CALL :: call :: Ljava/lang/String :: v54 = getCurrent(p1 $pdbId )::CL,109353
90704 :: PRED :: IF :: Z :: if (v39 != v40) goto 253::CD,90705:CD,90713:CD,90725:CD,90727
90713 :: CALL :: call :: Ljava/io/File :: v58 = p0 $this .downloadStructure(v55, v56, #(0), v38)::CL,109388
90722 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v41 = p0 $this .obsoleteBehavior::DD,90727
90725 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v42 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,90727
90727 :: PRED :: IF :: Z :: if (v41 != v42) goto 287::CD,90728:CD,90732:CD,90734:CD,90750
90728 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = getStatus(p1 $pdbId )::JM,90734:CL,109599
90732 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v45 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::CF,90734
90734 :: PRED :: IF :: Z :: if (v44 != v45) goto 287::CD,90738:CD,90750
90738 :: CALL :: call :: Ljava/io/File :: v52 = p0 $this .downloadStructure(p1 $pdbId , v49, #(1), v38)::CL,109388
90750 :: CALL :: call :: Ljava/io/File :: v48 = p0 $this .downloadStructure(p1 $pdbId , v46, #(0), v38)::CL,109388
90834 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,109643
90838 :: EXPR :: modify :: Z :: p0 $this .useCathDomainDescriptionFile = p2 $usingCDDF ::
90841 :: EXPR :: modify :: Z :: p0 $this .parseCathFragments = p3 $parseCF ::
90844 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::JM,90838:JM,90841:DD,90849
90849 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainDescription = v8::
90852 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,90838:JM,90841:DD,90857
90857 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainList = v11::
90860 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = new java.util.concurrent.atomic.AtomicBoolean::JM,90838:JM,90841:DD,90865
90865 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedNodeList = v13::
90868 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,90838:JM,90841:DD,90873
90873 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomall = v15::
90876 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathVersion = #(4_1_0)::
90879 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathDownloadUrl = #(http://download.cathd...)::
90882 :: NORM :: declaration :: Ljava/util/HashMap :: v19 = new java.util.HashMap::JM,90838:JM,90841:DD,90886
90886 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbMap = v19::
90889 :: NORM :: declaration :: Ljava/util/HashMap :: v21 = new java.util.HashMap::JM,90838:JM,90841:DD,90893
90893 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v21::
90896 :: NORM :: declaration :: Ljava/util/HashMap :: v23 = new java.util.HashMap::JM,90838:JM,90841:DD,90900
90900 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .cathTree = v23::
90903 :: EXPR :: reference :: Z :: v25 = p0 $this .parseCathFragments::DD,90906
90907 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,90911
90906 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 130::CD,90907
90911 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .fragmentMap = v26::
90948 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainDescriptionFileName()::CD,90952:CD,90956:CD,90964:CD,90969:CD,90974
90952 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
90956 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
90964 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-descripti...))::CL,109688
90969 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::
90974 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
90983 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildUrl(java.lang.String)::CD,90988:CD,90993:CD,90997:CD,91005:CD,91010:CD,91018:CD,91023:CD,91028:CD,91033:CD,91038:CD,91043
90988 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .buildFileName(p1 $remoteFileName )::CL,109688
90993 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
90997 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
91005 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(#(all-releases))::
91010 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(/v))::
91015 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cathVersion::
91018 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
91023 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(#(/))::
91028 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#(cath-classification-data))::
91033 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#(/))::
91038 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v27.append(v5)::
91043 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
91062 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,91068:CD,91075:CD,91080:CD,91084:CD,91089:CD,91093:CD,91127:CD,91131:CD,91135:CD,91139:CD,91140:CD,91141:CD,91142:CD,91144:CD,91154:CD,91156:CD,91164:CD,91169:CD,91177:CD,91182:CD,91194:CD,91195:CD,91196:CD,91210:CD,91211
91068 :: CALL :: call :: J :: v6 = currentTimeMillis()::JM,91194
91075 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
91080 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $localFile )::CL,109744
91084 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
91089 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
91093 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
91127 :: CALL :: call :: V :: copy(v19, p2 $localFile )::CL,109797
91131 :: CALL :: call :: Z :: v35 = v19.delete()::
91135 :: CALL :: call :: J :: v37 = p2 $localFile .length()::JM,91139
91139 :: EXPR :: assign :: D :: v38 = CONVERT J to D v37::DD,91140
91141 :: EXPR :: assign :: Z :: v42 = v40 < #(1024.0 d)::DD,91142
91140 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 / #(1024.0 d)::DD,91141:DD,91143:DD,91210
91143 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v40 / #(1024.0 d)::DD,91210
91142 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CF,91210:CD,91143:CD,91211
91144 :: CALL :: call :: J :: v48 = currentTimeMillis()::JM,91194
91154 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
91156 :: CALL :: call :: Ljava/lang/Double :: v58 = valueOf(v45)::JM,91156
91164 :: CALL :: call :: Ljava/lang/String :: v60 = format(#(%.1f), v56)::
91169 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v60)::
91177 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v54.append(v46)::
91182 :: CALL :: call :: Ljava/lang/String :: v67 = v65.toString()::
91195 :: EXPR :: assign :: Ljava/lang/Object :: v72 = v70 / #(1000 l)::
91194 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v48 - v6::DD,91195
91196 :: CALL :: call :: Ljava/lang/Long :: v74 = valueOf(v72)::
91211 :: EXPR :: assign :: null :: PHI v46 = #( kB), #( MB)::CF,91144
91210 :: EXPR :: assign :: null :: PHI v45 = v40, v44::CF,91211:JM,91156
91279 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile(java.io.BufferedReader)::CD,91782:CD,91786:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91290 :: CALL :: call :: Z :: v12 = v9.startsWith(#(#))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91295 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 58::CD,91297:CD,91302:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91297 :: CALL :: call :: Z :: v16 = v9.startsWith(#(FORMAT))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91303 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v68 = new org.biojava.nbio.structure.cath.CathDomain::DD,91790
91302 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 127::CF,91303:CD,91307:CD,91312:CD,91316:CD,91320:CD,91324:CD,91328:CD,91333:CD,91338:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91307 :: CALL :: call :: Ljava/lang/String :: v72 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91312 :: CALL :: call :: V :: v68.setFormat(v72)::CL,109943
91316 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::DD,91791
91320 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::DD,91792
91324 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::DD,91793
91328 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::DD,91794
91333 :: CALL :: call :: Z :: v19 = v9.startsWith(#(DOMAIN))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91339 :: CALL :: call :: Ljava/lang/String :: v88 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91338 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 151::CD,91339:CD,91344:CD,91349:CD,91354:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91344 :: CALL :: call :: V :: v82.setDomainName(v88)::CL,109954
91349 :: CALL :: call :: Z :: v22 = v9.startsWith(#(VERSION))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91355 :: CALL :: call :: Ljava/lang/String :: v91 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91354 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 175::CD,91355:CD,91360:CD,91365:CD,91370:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91360 :: CALL :: call :: V :: v82.setVersion(v91)::CL,109965
91365 :: CALL :: call :: Z :: v25 = v9.startsWith(#(VERDATE))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91371 :: CALL :: call :: Ljava/lang/String :: v94 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91370 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 223::CD,91371:CD,91381:CD,91398:CD,91403:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91381 :: CALL :: call :: V :: v82.setDate(v96)::CL,109976
91398 :: CALL :: call :: Z :: v28 = v9.startsWith(#(NAME))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91403 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 248::CD,91404:CD,91409:CD,91415:CD,91420:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91548:JM,91295
91404 :: CALL :: call :: Ljava/lang/String :: v104 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91409 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v83.append(v104)::JM,91587:JM,91522:JM,91685:JM,91494:JM,91561:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91453:JM,91645:JM,91420:JM,91548
91415 :: CALL :: call :: Z :: v31 = v9.startsWith(#(SOURCE))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91421 :: CALL :: call :: Ljava/lang/String :: v108 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91420 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 273::CD,91421:CD,91426:CD,91432:CD,91437:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91426 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v84.append(v108)::JM,91587:JM,91522:JM,91685:JM,91494:JM,91561:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91453:JM,91645:JM,91548
91432 :: CALL :: call :: Z :: v34 = v9.startsWith(#(CATHCODE))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91437 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 297::CD,91438:CD,91443:CD,91448:CD,91453:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91645:JM,91420:JM,91548:JM,91295
91438 :: CALL :: call :: Ljava/lang/String :: v112 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91443 :: CALL :: call :: V :: v82.setCATH(v112)::CL,109987
91448 :: CALL :: call :: Z :: v37 = v9.startsWith(#(DLENGTH))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91453 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 327::CD,91454:CD,91459:CD,91463:CD,91467:CD,91472:CD,91477:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91454 :: CALL :: call :: Ljava/lang/String :: v115 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91459 :: CALL :: call :: I :: v117 = parseInt(v115)::JM,91587:JM,91522:JM,91685:JM,91494:JM,91561:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91645:JM,91548
91463 :: CALL :: call :: Ljava/lang/Integer :: v119 = valueOf(v117)::JM,91794
91467 :: CALL :: call :: V :: v82.setLength(v119)::CL,110077
91472 :: CALL :: call :: Z :: v40 = v9.startsWith(#(DSEQH))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91477 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 352::CD,91478:CD,91483:CD,91489:CD,91494:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91478 :: CALL :: call :: Ljava/lang/String :: v122 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91483 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v85.append(v122)::JM,91587:JM,91522:JM,91794:JM,91541:JM,91685:JM,91511:JM,91494:JM,91561:JM,91611:JM,91645:JM,91548:JM,91628
91489 :: CALL :: call :: Z :: v43 = v9.startsWith(#(DSEQS))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91495 :: CALL :: call :: Ljava/lang/String :: v126 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91494 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 378::CD,91495:CD,91500:CD,91506:CD,91511:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91500 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v86.append(v126)::JM,91794:JM,91587:JM,91522:JM,91541:JM,91685:JM,91511:JM,91561:JM,91611:JM,91645:JM,91548:JM,91628
91506 :: CALL :: call :: Z :: v46 = v9.startsWith(#(NSEGMENTS))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91511 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 400::CF,91512:CD,91517:CD,91522:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91512 :: NORM :: declaration :: Ljava/util/ArrayList :: v129 = new java.util.ArrayList::DD,91795
91517 :: CALL :: call :: Z :: v49 = v9.startsWith(#(SEGMENT))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91523 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v132 = new org.biojava.nbio.structure.cath.CathSegment::DD,91796
91522 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 440::CF,91523:CD,91527:CD,91531:CD,91536:CD,91541:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91527 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v134 = new java.lang.StringBuilder::DD,91797
91531 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::DD,91798
91536 :: CALL :: call :: Z :: v52 = v9.startsWith(#(SRANGE))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91541 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 514::CD,91542:CD,91548:CD,91549:CD,91555:CD,91561:CD,91562:CD,91568:CD,91572:CD,91577:CD,91582:CD,91587:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91522:JM,91685:JM,91302:JM,91494:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91295
91542 :: CALL :: call :: I :: v143 = v9.indexOf(#(=), #(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91549 :: CALL :: call :: I :: v148 = v9.indexOf(#( ), #(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91548 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v143 + #(1)::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295:JM,91786
91555 :: CALL :: call :: I :: v150 = v9.indexOf(#(=), v148)::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91561 :: EXPR :: assign :: Ljava/lang/Object :: v151 = v150 + #(1)::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295:JM,91786
91562 :: CALL :: call :: Ljava/lang/String :: v153 = v9.substring(v145, v148)::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91568 :: CALL :: call :: V :: v138.setStart(v153)::CL,110097
91572 :: CALL :: call :: Ljava/lang/String :: v156 = v9.substring(v151)::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91577 :: CALL :: call :: V :: v138.setStop(v156)::CL,110108
91582 :: CALL :: call :: Z :: v55 = v9.startsWith(#(SLENGTH))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91587 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 544::CD,91588:CD,91593:CD,91597:CD,91601:CD,91606:CD,91611:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91588 :: CALL :: call :: Ljava/lang/String :: v159 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91593 :: CALL :: call :: I :: v161 = parseInt(v159)::JM,91794:JM,91685:JM,91611:JM,91645:JM,91628
91597 :: CALL :: call :: Ljava/lang/Integer :: v163 = valueOf(v161)::
91601 :: CALL :: call :: V :: v138.setLength(v163)::CL,110119
91606 :: CALL :: call :: Z :: v58 = v9.startsWith(#(SSEQH))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91611 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 569::CD,91612:CD,91617:CD,91623:CD,91628:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91612 :: CALL :: call :: Ljava/lang/String :: v166 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91617 :: CALL :: call :: Ljava/lang/StringBuilder :: v168 = v139.append(v166)::JM,91794:JM,91685:JM,91645:JM,91628
91623 :: CALL :: call :: Z :: v61 = v9.startsWith(#(SSEQS))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91629 :: CALL :: call :: Ljava/lang/String :: v170 = v9.substring(#(10))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91628 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 594::CD,91629:CD,91634:CD,91640:CD,91645:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91420:JM,91548:JM,91295
91634 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v140.append(v170)::JM,91794:JM,91685:JM,91645
91640 :: CALL :: call :: Z :: v64 = v9.startsWith(#(ENDSEG))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91645 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 652::CD,91646:CD,91651:CD,91655:CD,91659:CD,91663:CD,91667:CD,91671:CD,91675:CD,91680:CD,91685:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91646 :: CALL :: call :: Z :: v174 = v131.add(v138)::
91651 :: CALL :: call :: I :: v176 = v131.size()::
91655 :: CALL :: call :: Ljava/lang/Integer :: v178 = valueOf(v176)::
91659 :: CALL :: call :: V :: v138.setSegmentId(v178)::CL,110130
91663 :: CALL :: call :: Ljava/lang/String :: v181 = v139.toString()::
91667 :: CALL :: call :: V :: v138.setSequenceHeader(v181)::CL,110141
91671 :: CALL :: call :: Ljava/lang/String :: v184 = v140.toString()::
91675 :: CALL :: call :: V :: v138.setSequence(v184)::CL,110152
91680 :: CALL :: call :: Z :: v67 = v9.startsWith(#(//))::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91685 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 801::CF,91790:CD,91686:CD,91690:CD,91694:CD,91698:CD,91702:CD,91706:CD,91710:CD,91714:CD,91718:CD,91722:CD,91726:CD,91735:CD,91740:CD,91764:CD,91776:CD,91789:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798
91686 :: CALL :: call :: Ljava/lang/String :: v187 = v83.toString()::
91690 :: CALL :: call :: V :: v82.setName(v187)::CL,110163
91694 :: CALL :: call :: Ljava/lang/String :: v190 = v84.toString()::
91698 :: CALL :: call :: V :: v82.setSource(v190)::CL,110174
91702 :: CALL :: call :: Ljava/lang/String :: v193 = v85.toString()::
91706 :: CALL :: call :: V :: v82.setSequenceHeader(v193)::CL,110185
91710 :: CALL :: call :: Ljava/lang/String :: v196 = v86.toString()::
91714 :: CALL :: call :: V :: v82.setSequence(v196)::CL,110196
91718 :: CALL :: call :: V :: v82.setSegments(v131)::CL,110207
91722 :: CALL :: call :: Ljava/lang/String :: v200 = v82.getPdbIdAndChain()::CL,110218
91726 :: CALL :: call :: Ljava/lang/String :: v203 = v200.substring(#(0), #(4))::
91735 :: CALL :: call :: Z :: v206 = v204.containsKey(v203)::JM,91740
91740 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 750::CF,91751:CD,91744:CD,91749:CD,91758:CD,91789
91744 :: CALL :: call :: Ljava/lang/Object :: v209 = v207.get(v203)::JM,91749
91749 :: EXPR :: assign :: Ljava/lang/Object :: v210 = CHECKCAST v209::DD,91789
91751 :: NORM :: declaration :: Ljava/util/ArrayList :: v211 = new java.util.ArrayList::DD,91789
91758 :: CALL :: call :: Ljava/lang/Object :: v215 = v213.put(v203, v211)::
91764 :: CALL :: call :: Z :: v218 = v216.add(v82)::
91776 :: CALL :: call :: Ljava/lang/Object :: v223 = v219.put(v221, v82)::
91782 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $bufferedReader .readLine()::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295
91786 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 45::CD,91290:CD,91295:CD,91782:CD,91790:CD,91791:CD,91792:CD,91793:CD,91794:CD,91795:CD,91796:CD,91797:CD,91798:JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548
91789 :: EXPR :: assign :: null :: PHI v216 = v210, v211::
91791 :: EXPR :: assign :: null :: PHI v83 = #(null), v83, v74, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83::CF,91792:DD,91791
91790 :: EXPR :: assign :: null :: PHI v82 = #(null), v82, v68, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82::CF,91791:DD,91790
91793 :: EXPR :: assign :: null :: PHI v85 = #(null), v85, v78, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85::CF,91794:DD,91793
91792 :: EXPR :: assign :: null :: PHI v84 = #(null), v84, v76, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84::CF,91793:DD,91792
91795 :: EXPR :: assign :: null :: PHI v131 = #(null), v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v129, v131, v131, v131, v131, v131, v131, v131, v131::CF,91796:DD,91795
91794 :: EXPR :: assign :: null :: PHI v86 = #(null), v86, v80, v86, v86, v86, v86, v86, v86, v86, v86, v86, v128, v86, v86, v86, v86, v86, v86, v86, v86, v86::CF,91795:DD,91794
91797 :: EXPR :: assign :: null :: PHI v139 = #(null), v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v134, v139, v139, v139, v139, v139, v139, v139::CF,91798:DD,91797
91796 :: EXPR :: assign :: null :: PHI v138 = #(null), v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v132, v138, v138, v138, v138, v138, v138, v138::CF,91797:DD,91796
91798 :: EXPR :: assign :: null :: PHI v140 = #(null), v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v136, v140, v140, v140, v140, v140, v140, v140::JM,91587:JM,91522:JM,91685:JM,91302:JM,91494:JM,91561:JM,91403:JM,91786:JM,91338:JM,91370:JM,91437:JM,91628:JM,91794:JM,91477:JM,91541:JM,91511:JM,91611:JM,91354:JM,91453:JM,91645:JM,91420:JM,91548:JM,91295:DD,91798
92007 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::CE,92008:CD,92011:CD,92020:CD,92024
92008 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::JM,81104
92011 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainListFileName()::CL,110305
92020 :: CALL :: call :: Z :: v8 = v5.exists()::JM,92024
92024 :: NORM :: compound :: Z :: return v8::DD,92008
92031 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainListFile()::CD,92036:CD,92045:CD,92054
92036 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-list-v%s.txt))::CL,90983
92045 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainListFileName()::CL,110305
92054 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,91062
92074 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList()::CD,92079:CD,92091:CD,92092:CD,92106
92079 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainListFileName()::CL,110305
92091 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,92092
92092 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
92106 :: CALL :: call :: V :: p0 $this .parseCathDomainList(v9)::CL,110340
92123 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomallFileName()::CD,92127:CD,92131:CD,92139:CD,92144:CD,92149
92127 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
92131 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
92139 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-boundarie...))::CL,109688
92144 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::
92149 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
92158 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall(java.io.BufferedReader)::CD,92694:CD,92698:JM,92169:JM,92175
92164 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,92169:JM,92698:JM,92175
92169 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 17::CD,92171:CD,92175:JM,92169:JM,92698
92171 :: CALL :: call :: I :: v12 = v5.length()::JM,92169:JM,92698:JM,92175
92175 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 30::CD,92177:CD,92190:CD,92195:CD,92199:CD,92207:CD,92212:CD,92216:CD,92525:CD,92529:CD,92533:CD,92709:CD,92710
92177 :: CALL :: call :: [Ljava/lang/String :: v15 = v5.split(#(\s+))::
92186 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v15[#(1)]::JM,92529:JM,92230
92190 :: CALL :: call :: Ljava/lang/String :: v20 = v18.substring(#(1))::JM,92529:JM,92230
92195 :: CALL :: call :: I :: v22 = parseInt(v20)::JM,92529:JM,92230
92199 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,92529:JM,92230
92203 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v15[#(2)]::JM,92684
92207 :: CALL :: call :: Ljava/lang/String :: v28 = v26.substring(#(1))::JM,92684
92212 :: CALL :: call :: I :: v30 = parseInt(v28)::JM,92684
92216 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,92684
92221 :: NORM :: declaration :: Ljava/text/DecimalFormat :: v36 = new java.text.DecimalFormat::JM,92297
92226 :: CALL :: call :: I :: v40 = v24.intValue()::JM,92529:JM,92230
92231 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
92230 :: PRED :: IF :: Z :: if (v40 != #(1)) goto 185::CF,92287:CF,92231:CD,92232:CD,92240:CD,92245:CD,92252:CD,92257:CD,92258:CD,92288:CD,92296:CD,92297:CD,92302:CD,92307:CD,92314:CD,92319:CD,92700
92232 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v16)::
92240 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(#(00))::
92245 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
92252 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v48)::JM,92257
92257 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::DD,92258:DD,92700
92259 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
92258 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 232::CF,92700:CF,92259:CD,92260:CD,92268:CD,92273:CD,92280:CD,92285
92260 :: CALL :: call :: Ljava/lang/String :: v55 = valueOf(v16)::
92268 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(#(01))::
92273 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
92280 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::JM,92285
92285 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::DD,92700
92287 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
92288 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v16)::
92297 :: CALL :: call :: Ljava/lang/String :: v72 = v36.format(v70)::JM,92297
92296 :: EXPR :: assign :: J :: v70 = CONVERT I to J v186::JM,92297
92302 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v66.append(v72)::
92307 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::
92314 :: CALL :: call :: Ljava/lang/Object :: v79 = v77.get(v76)::JM,92319
92319 :: EXPR :: assign :: Ljava/lang/Object :: v80 = CHECKCAST v79::DD,92700
92320 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v15[v185]::JM,92337:JM,92512:JM,92521
92324 :: CALL :: call :: I :: v85 = parseInt(v83)::JM,92337:JM,92512:JM,92521
92328 :: CALL :: call :: Ljava/lang/Integer :: v87 = valueOf(v85)::JM,92337:JM,92512:JM,92521
92333 :: CALL :: call :: I :: v90 = v87.intValue()::JM,92337:JM,92512:JM,92521
92332 :: PRED :: IF :: Z :: if (v82 != #(null)) goto 264::CF,92341:CD,92333:CD,92337:CD,92338:CD,92339:CD,92342:CD,92508:CD,92512:CD,92513:CD,92517:CD,92521:CD,92522:CD,92523:CD,92703:CD,92704:CD,92705:CD,92706:CD,92707:CD,92708
92337 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(6) * v90::DD,92338
92339 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v185 + v92::DD,92707
92338 :: EXPR :: assign :: Ljava/lang/Object :: v92 = v91 + #(1)::CF,92339
92341 :: NORM :: declaration :: Ljava/util/ArrayList :: v94 = new java.util.ArrayList::JM,92337:JM,92512:JM,92521
92342 :: CALL :: call :: I :: v96 = v87.intValue()::JM,92337:JM,92512:JM,92521
92351 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v100 = new org.biojava.nbio.structure.cath.CathSegment::
92355 :: CALL :: call :: Ljava/lang/Integer :: v103 = valueOf(v176)::
92359 :: CALL :: call :: V :: v100.setSegmentId(v103)::CL,110130
92363 :: EXPR :: assign :: Ljava/lang/Object :: v105 = v187 + v175::DD,92364
92365 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v15[v106]::JM,92492
92364 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v105 + #(1)::
92369 :: CALL :: call :: I :: v109 = parseInt(v107)::JM,92492
92373 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v109)::JM,92492
92377 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v187 + v175::DD,92378
92379 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v15[v113]::JM,92388:DD,92701
92378 :: EXPR :: assign :: Ljava/lang/Object :: v113 = v112 + #(2)::
92383 :: CALL :: call :: Z :: v117 = v114.equals(#(-))::JM,92388
92388 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 357::CD,92701
92390 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
92394 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(v111)::
92399 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v119)::
92404 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
92408 :: CALL :: call :: V :: v100.setStart(v127)::CL,110097
92413 :: EXPR :: assign :: Ljava/lang/Object :: v131 = v129 + #(4)::
92412 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v187 + v175::DD,92413
92414 :: EXPR :: reference :: Ljava/lang/Object :: v132 = v15[v131]::JM,92487
92418 :: CALL :: call :: I :: v134 = parseInt(v132)::JM,92487
92422 :: CALL :: call :: Ljava/lang/Integer :: v136 = valueOf(v134)::JM,92487
92427 :: EXPR :: assign :: Ljava/lang/Object :: v139 = v137 + #(5)::
92426 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v187 + v175::DD,92427
92428 :: EXPR :: reference :: Ljava/lang/Object :: v140 = v15[v139]::JM,92437:DD,92702
92432 :: CALL :: call :: Z :: v142 = v140.equals(#(-))::JM,92437
92437 :: PRED :: IF :: Z :: if (v142 == #(0)) goto 431::CD,92702
92439 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v144 = new java.lang.StringBuilder::
92443 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v144.append(v111)::
92448 :: CALL :: call :: Ljava/lang/StringBuilder :: v149 = v147.append(v119)::
92453 :: CALL :: call :: Ljava/lang/String :: v151 = v149.toString()::
92457 :: CALL :: call :: V :: v100.setStart(v151)::CL,110097
92461 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::
92465 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v153.append(v136)::
92470 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v156.append(v143)::
92475 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::
92479 :: CALL :: call :: V :: v100.setStop(v160)::CL,110108
92483 :: CALL :: call :: I :: v163 = v136.intValue()::JM,92487
92487 :: EXPR :: assign :: Ljava/lang/Object :: v164 = #(1) + v163::DD,92492
92488 :: CALL :: call :: I :: v166 = v111.intValue()::JM,92492
92493 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v167)::
92492 :: EXPR :: assign :: Ljava/lang/Object :: v167 = v164 - v166::
92497 :: CALL :: call :: V :: v100.setLength(v169)::CL,110119
92501 :: CALL :: call :: Z :: v172 = v94.add(v100)::
92507 :: EXPR :: assign :: Ljava/lang/Object :: v174 = v176 + #(1)::DD,92706:CF,92703
92506 :: EXPR :: assign :: Ljava/lang/Object :: v173 = v175 + #(6)::DD,92704:CF,92507
92508 :: CALL :: call :: I :: v99 = v87.intValue()::JM,92337:JM,92512:JM,92521
92513 :: CALL :: call :: V :: v82.setSegments(v94)::CL,110207
92512 :: PRED :: IF :: Z :: if (v176 <= v99) goto 287::CF,92351:CD,92355:CD,92359:CD,92363:CD,92364:CD,92369:CD,92373:CD,92377:CD,92378:CD,92383:CD,92388:CD,92390:CD,92394:CD,92399:CD,92404:CD,92408:CD,92412:CD,92413:CD,92418:CD,92422:CD,92426:CD,92427:CD,92432:CD,92437:CD,92439:CD,92443:CD,92448:CD,92453:CD,92457:CD,92461:CD,92465:CD,92470:CD,92475:CD,92479:CD,92483:CD,92487:CD,92488:CD,92492:CD,92493:CD,92497:CD,92501:CD,92506:CD,92507:CD,92508:CD,92701:CD,92702:CD,92703:CD,92704:CD,92705:CD,92706
92517 :: CALL :: call :: I :: v179 = v87.intValue()::JM,92337:JM,92512:JM,92521
92521 :: EXPR :: assign :: Ljava/lang/Object :: v180 = #(6) * v179::DD,92522
92523 :: EXPR :: assign :: Ljava/lang/Object :: v182 = v187 + v181::DD,92707
92522 :: EXPR :: assign :: Ljava/lang/Object :: v181 = v180 + #(1)::CF,92523
92525 :: CALL :: call :: I :: v35 = v24.intValue()::JM,92529:JM,92230
92524 :: EXPR :: assign :: Ljava/lang/Object :: v184 = v189 + #(1)::DD,92710:CF,92709
92529 :: PRED :: IF :: Z :: if (v186 <= v35) goto 78::CF,92221:CD,92226:CD,92230:CD,92324:CD,92328:CD,92332:CD,92524:CD,92525:CD,92700:CD,92707:CD,92708:CD,92709:CD,92710
92530 :: EXPR :: reference :: Z :: v190 = p0 $this .parseCathFragments::DD,92533
92533 :: PRED :: IF :: Z :: if (v190 == #(0)) goto 815::CF,92534:CD,92535:CD,92680:CD,92684:CD,92688:CD,92713:CD,92714:JM,92169:JM,92698:JM,92175
92535 :: CALL :: call :: I :: v193 = v32.intValue()::JM,92684
92534 :: NORM :: declaration :: Ljava/util/ArrayList :: v191 = new java.util.ArrayList::JM,92684
92544 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathFragment :: v197 = new org.biojava.nbio.structure.cath.CathFragment::
92548 :: CALL :: call :: Ljava/lang/Integer :: v200 = valueOf(v258)::
92552 :: CALL :: call :: V :: v197.setFragmentId(v200)::CL,110466
92557 :: EXPR :: reference :: Ljava/lang/Object :: v203 = v15[v202]::
92556 :: EXPR :: assign :: Ljava/lang/Object :: v202 = v257 + #(1)::
92561 :: CALL :: call :: I :: v205 = parseInt(v203)::
92565 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
92569 :: EXPR :: assign :: Ljava/lang/Object :: v208 = v257 + #(2)::
92570 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v15[v208]::JM,92579:DD,92711
92574 :: CALL :: call :: Z :: v211 = v209.equals(#(-))::JM,92579
92579 :: PRED :: IF :: Z :: if (v211 == #(0)) goto 652::CD,92711
92581 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v213 = new java.lang.StringBuilder::
92585 :: CALL :: call :: Ljava/lang/StringBuilder :: v216 = v213.append(v207)::
92590 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v216.append(v212)::
92595 :: CALL :: call :: Ljava/lang/String :: v220 = v218.toString()::
92599 :: CALL :: call :: V :: v197.setStart(v220)::CL,110477
92603 :: EXPR :: assign :: Ljava/lang/Object :: v222 = v257 + #(4)::
92604 :: EXPR :: reference :: Ljava/lang/Object :: v223 = v15[v222]::
92608 :: CALL :: call :: I :: v225 = parseInt(v223)::
92612 :: CALL :: call :: Ljava/lang/Integer :: v227 = valueOf(v225)::
92617 :: EXPR :: reference :: Ljava/lang/Object :: v229 = v15[v228]::JM,92626:DD,92712
92616 :: EXPR :: assign :: Ljava/lang/Object :: v228 = v257 + #(5)::
92621 :: CALL :: call :: Z :: v231 = v229.equals(#(-))::JM,92626
92626 :: PRED :: IF :: Z :: if (v231 == #(0)) goto 720::CD,92712
92628 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v233 = new java.lang.StringBuilder::
92632 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v233.append(v227)::
92637 :: CALL :: call :: Ljava/lang/StringBuilder :: v238 = v236.append(v232)::
92642 :: CALL :: call :: Ljava/lang/String :: v240 = v238.toString()::
92646 :: CALL :: call :: V :: v197.setStop(v240)::CL,110488
92655 :: CALL :: call :: Ljava/lang/String :: v246 = v243.replaceAll(#([^0-9]), #())::
92661 :: CALL :: call :: I :: v248 = parseInt(v246)::
92665 :: CALL :: call :: Ljava/lang/Integer :: v250 = valueOf(v248)::
92669 :: CALL :: call :: V :: v197.setLength(v250)::CL,110505
92673 :: CALL :: call :: Z :: v253 = v191.add(v197)::
92679 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v258 + #(1)::DD,92714:CF,92713
92678 :: EXPR :: assign :: Ljava/lang/Object :: v255 = v257 + #(7)::DD,92713:CF,92679
92680 :: CALL :: call :: I :: v196 = v32.intValue()::JM,92684
92684 :: PRED :: IF :: Z :: if (v258 <= v196) goto 588::CF,92544:CD,92548:CD,92552:CD,92556:CD,92561:CD,92565:CD,92569:CD,92574:CD,92579:CD,92581:CD,92585:CD,92590:CD,92595:CD,92599:CD,92603:CD,92608:CD,92612:CD,92616:CD,92621:CD,92626:CD,92628:CD,92632:CD,92637:CD,92642:CD,92646:CD,92655:CD,92661:CD,92665:CD,92669:CD,92673:CD,92678:CD,92679:CD,92680:CD,92711:CD,92712:CD,92713:CD,92714
92688 :: CALL :: call :: Ljava/lang/Object :: v261 = v259.put(v16, v191)::
92694 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,92169:JM,92698:JM,92175
92698 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,92164:CD,92169:CD,92694:JM,92698:JM,92175
92701 :: EXPR :: assign :: null :: PHI v119 = #(), v114::CF,92390
92700 :: EXPR :: assign :: null :: PHI v82 = v52, v65, v80::DD,92332
92703 :: EXPR :: assign :: null :: PHI v187 = v185, v187::CF,92704:DD,92363:DD,92377:DD,92412:DD,92426:DD,92523:DD,92703
92702 :: EXPR :: assign :: null :: PHI v143 = #(), v140::CF,92439
92705 :: EXPR :: assign :: null :: PHI v188 = v186, v188::CF,92706:DD,92705:DD,92708
92704 :: EXPR :: assign :: null :: PHI v175 = #(1), v173::CF,92705:DD,92363:DD,92377:DD,92412:DD,92426:DD,92506
92707 :: EXPR :: assign :: null :: PHI v183 = v93, v182::CF,92708:DD,92709
92706 :: EXPR :: assign :: null :: PHI v176 = #(1), v174::DD,92507:DD,92512:JM,92337:JM,92521
92709 :: EXPR :: assign :: null :: PHI v185 = #(3), v183::CF,92710:DD,92339:DD,92703:DD,92713
92708 :: EXPR :: assign :: null :: PHI v189 = v186, v188::DD,92524
92711 :: EXPR :: assign :: null :: PHI v212 = #(), v209::CF,92581
92710 :: EXPR :: assign :: null :: PHI v186 = #(1), v184::DD,92296:DD,92529:DD,92705:DD,92708:JM,92230
92713 :: EXPR :: assign :: null :: PHI v257 = v185, v255::CF,92714:DD,92556:DD,92569:DD,92603:DD,92616:DD,92678
92712 :: EXPR :: assign :: null :: PHI v232 = #(), v229::CF,92628
92714 :: EXPR :: assign :: null :: PHI v258 = #(1), v256::DD,92679:DD,92684
93058 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.ensureDomainsFileInstalled()::CD,93081
93078 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,93081
93081 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 83::CD,93148:CD,93152:CD,93156
93148 :: CALL :: call :: Z :: v34 = p0 $this .domainsAvailable()::JM,93152:CL,110540
93153 :: CALL :: call :: V :: p0 $this .downloadDomains()::CL,110627
93152 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 144::CD,93153
93156 :: CALL :: call :: V :: p0 $this .parseDomains()::CL,110808
93220 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .defaultBerkeleyDownloadURL = #(http://scop.berkeley....)::
93223 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .defaultBerkeleyScopVersion = #(2.05)::
93229 :: CALL :: call :: V :: p0 $this .setScopVersion(v6)::CL,93266
93241 :: CALL :: call :: V :: p0 $this .addMirror(v8)::CL,110935
93249 :: CALL :: call :: V :: p0 $this .addMirror(v12)::CL,110935
93266 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setScopVersion(java.lang.String)::CD,93272:CD,93281:CD,93286:JM,93288
93272 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v17 = new java.lang.NullPointerException::
93278 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .scopVersion::JM,93286
93281 :: CALL :: call :: Z :: v7 = v5.equals(p1 $scopVersion )::JM,93286:JM,93288
93286 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 29::CD,93294:CD,93301:CD,93308:CD,93315
93288 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .scopVersion = p1 $scopVersion ::
93291 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v9 = p0 $this .installedCla::JM,93294
93294 :: CALL :: call :: V :: v9.set(#(0))::JM,93294
93298 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedDes::JM,93301
93301 :: CALL :: call :: V :: v11.set(#(0))::JM,93301
93305 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedHie::JM,93308
93308 :: CALL :: call :: V :: v13.set(#(0))::JM,93308
93312 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = p0 $this .installedCom::JM,93315
93315 :: CALL :: call :: V :: v15.set(#(0))::JM,93315
93342 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .server = #(http://source.rcsb.or...)::
93345 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = #(null)::
93354 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.setScopVersion(java.lang.String)::JM,93359
93359 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = p1 $version ::
93365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::CE,93366:CD,93369:CD,93371:CD,93375:CD,93376:CD,93384:CD,93389:CD,93391:CD,93398:CD,93399
93366 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::JM,82018
93369 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextScopDomain::JM,93384:JM,93371:JM,93389
93371 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,93384:JM,93371:JM,93389
93375 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,93384:JM,93389
93376 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
93384 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,93384:JM,93389
93389 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,93398
93391 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
93399 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
93398 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v13::DD,93366
93411 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::CE,93412:CD,93415:CD,93424:CD,93428
93412 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::JM,82165
93415 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getClaFilename()::CL,110963
93424 :: CALL :: call :: Z :: v8 = v5.exists()::JM,93428
93429 :: CALL :: call :: J :: v11 = v5.length()::JM,93433
93428 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 33::CD,93429:CD,93433:CD,93434:CD,93436
93433 :: EXPR :: assign :: Z :: v13 = v11 == #(0 l)::DD,93434
93435 :: NORM :: compound :: Z :: return #(1)::DD,93412
93434 :: PRED :: IF :: Z :: if (v13 <= #(0)) goto 33::CD,93435:CD,93436
93436 :: NORM :: compound :: Z :: return #(0)::DD,93412
93449 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadClaFile()::CD,93456:CD,93460:CD,93467:CD,93472:CD,93481:CD,93490:CD,93499:CD,93505:CD,93510:CD,93517:CD,93518
93453 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,93460
93456 :: CALL :: call :: I :: v5 = v3.size()::JM,93460
93461 :: CALL :: call :: V :: p0 $this .initScopURLs()::CL,111001
93460 :: PRED :: IF :: Z :: if (v5 >= #(1)) goto 20::CD,93461
93464 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .mirrors::
93467 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::
93472 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::
93481 :: CALL :: call :: Ljava/lang/String :: v21 = v17.getClaURL(v19)::CL,111061:CL,111085
93490 :: CALL :: call :: Ljava/lang/String :: v24 = p0 $this .getClaFilename()::CL,110963
93499 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v18, v25)::CL,111123
93505 :: CALL :: call :: Z :: v13 = v11.hasNext()::
93510 :: NORM :: declaration :: Ljava/io/IOException :: v31 = new java.io.IOException::
93517 :: EXPR :: assign :: Ljava/lang/Exception :: v28 = catch <exc>::DD,93518
93518 :: EXPR :: assign :: null :: PHI v30 = #(null), v28::
93541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification()::CD,93546:CD,93558:CD,93559:CD,93573
93546 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getClaFilename()::CL,110963
93559 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
93558 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,93559
93573 :: CALL :: call :: V :: p0 $this .parseClassification(v9)::CL,111172
93599 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getClassId()::
93608 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassId(int)::JM,93613
93613 :: EXPR :: modify :: I :: p0 $this .classId = p1 $classId ::
93619 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getClassificationId()::
93628 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassificationId(java.lang.String)::JM,93633
93633 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classificationId = p1 $classificationId ::
93639 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getDomainId()::
93648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setDomainId(int)::JM,93653
93653 :: EXPR :: modify :: I :: p0 $this .domainId = p1 $domainId ::
93659 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getFamilyId()::
93668 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFamilyId(int)::JM,93673
93673 :: EXPR :: modify :: I :: p0 $this .familyId = p1 $familyId ::
93679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getFoldId()::
93688 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFoldId(int)::JM,93693
93693 :: EXPR :: modify :: I :: p0 $this .foldId = p1 $foldId ::
93699 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPdbId(java.lang.String)::JM,93704
93704 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
93710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getPx()::
93719 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPx(int)::JM,93724
93724 :: EXPR :: modify :: I :: p0 $this .px = p1 $px ::
93730 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setRanges(java.util.List)::JM,93735
93735 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p1 $ranges ::
93741 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setScopId(java.lang.String)::JM,93746
93746 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .scopId = p1 $scopId ::
93752 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getSpeciesId()::
93761 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSpeciesId(int)::JM,93766
93766 :: EXPR :: modify :: I :: p0 $this .speciesId = p1 $speciesId ::
93772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getSunid()::
93781 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSunid(java.lang.Integer)::JM,93786
93786 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .sunid = p1 $sunid ::
93792 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getSuperfamilyId()::
93801 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSuperfamilyId(int)::JM,93806
93806 :: EXPR :: modify :: I :: p0 $this .superfamilyId = p1 $superfamilyId ::
93813 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::JM,82471:JM,82443
93812 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::CE,93813:JM,44113:JM,44098:JM,44146:JM,44115:JM,44166:JM,35975:JM,44120:JM,44141:JM,35982:JM,44094:CD,93824:CD,93825:CD,93826:CD,93834:CD,93838:CD,93846:CD,93851:CD,93869
93825 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
93824 :: NORM :: declaration :: Ljava/io/File :: v7 = new java.io.File::DD,93869:CF,93825
93826 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v6)::
93834 :: CALL :: call :: Ljava/lang/String :: v14 = getProperty(#(file.separator))::JM,93834
93838 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v8.append(v14)::
93843 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cacheFileName::
93846 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
93851 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
93869 :: NORM :: compound :: Ljava/io/File :: return v7::DD,93813
94075 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL,int)::CD,94080:CD,94084:CD,94090:CD,94094:CD,94099:CD,94103:CD,94108:CD,94112:CD,94117:CD,94121:CD,94137:CD,94143:CD,94153:CD,94166:CD,94172:CD,94182:CD,94189
94080 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,94084
94084 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
94090 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
94094 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(p2 $timeout )::JM,94084
94099 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
94103 :: CALL :: call :: Ljava/lang/String :: v19 = setProperty(#(sun.net.client.defaul...), v17)::
94108 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
94112 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(p2 $timeout )::JM,94084
94117 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
94121 :: CALL :: call :: Ljava/lang/String :: v28 = setProperty(#(sun.net.client.defaul...), v26)::
94137 :: CALL :: call :: Ljava/lang/reflect/Method :: v38 = v31.getMethod(#(setConnectTimeout), v34)::
94143 :: NORM :: declaration :: [Ljava/lang/Object :: v39 = new java.lang.Object[]::
94153 :: CALL :: call :: Ljava/lang/Object :: v43 = v38.invoke(v7, v39)::
94166 :: CALL :: call :: Ljava/lang/reflect/Method :: v48 = v31.getMethod(#(setReadTimeout), v45)::
94172 :: NORM :: declaration :: [Ljava/lang/Object :: v49 = new java.lang.Object[]::
94182 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.invoke(v7, v49)::
94189 :: CALL :: call :: V :: v54.printStackTrace()::
94331 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::CE,94332:CD,94355:CD,94359:CD,94361:JM,94352:JM,94342
94332 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::JM,82834:JM,83276:JM,97826:JM,98214
94337 :: CALL :: call :: Ljava/lang/Object :: v8 = p2 $chains .get(v16)::JM,94352:JM,94359:JM,94342
94343 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getChainID()::JM,94352:CL,63330
94342 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,94353
94347 :: CALL :: call :: Z :: v13 = p1 $chainID .equals(v11)::JM,94352:JM,94359:JM,94342
94353 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v9::DD,94332
94352 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 31::CD,94353:CD,94354:CD,94355:CD,94359:CD,94361
94355 :: CALL :: call :: I :: v6 = p2 $chains .size()::JM,94352:JM,94359:JM,94342
94354 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,94361
94359 :: PRED :: IF :: Z :: if (v16 < v6) goto 7::CD,94337:CD,94342:CD,94343:CD,94347:CD,94352:CD,94360:JM,94359
94361 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::JM,94352:JM,94342:DD,94354:DD,94359
94360 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,94332
94377 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::JM,83029:JM,83421:JM,83454:JM,97613:JM,99829:JM,101924:JM,117010:JM,118473:JM,120268:JM,121046:JM,121650:JM,121950:JM,122215:JM,122441:JM,122667:JM,123187:JM,123258:JM,130457
94376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::CE,94377:CD,94383
94380 :: EXPR :: reference :: Z :: v3 = p0 $this .headerOnly::DD,94383
94383 :: NORM :: compound :: Z :: return v3::CF,94377
94385 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntityChain(java.lang.String)::CD,94393:CD,94414:CD,94418:JM,94412
94390 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entityChains::JM,94418
94393 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,94418
94398 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,94418
94403 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getChainID()::JM,94412:CL,63330
94407 :: CALL :: call :: Z :: v16 = v14.equals(p1 $entity_id )::JM,94412
94412 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 39::CD,94414:CD,94418
94414 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,94418
94419 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v17 = new org.biojava.nbio.structure.ChainImpl::
94418 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CF,94419:CD,94398:CD,94403:CD,94407:CD,94412:JM,63730:JM,63716:JM,63723:JM,63711:CD,94423:CD,94430:JM,94418
94423 :: CALL :: call :: V :: v17.setChainID(p1 $entity_id )::CL,63754
94427 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .entityChains::
94430 :: CALL :: call :: Z :: v22 = v20.add(v17)::
94454 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.clone()::JM,63730:JM,63716:JM,63723:JM,63711:CD,94466:CD,94474:CD,94481:CD,94488:CD,94495:CD,94518:CD,94522:CD,94526
94466 :: CALL :: call :: V :: v3.setChainID(v6)::CL,63754
94474 :: CALL :: call :: V :: v3.setSwissprotId(v9)::CL,112315
94481 :: CALL :: call :: V :: v3.setCompound(v11)::CL,74582
94488 :: CALL :: call :: V :: v3.setInternalChainID(v13)::CL,95699
94492 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::JM,94522
94495 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,94522
94500 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,94522
94505 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.clone()::CL,75914:CL,76231:CL,76056
94510 :: CALL :: call :: V :: v3.addGroup(v26)::CL,63901
94514 :: CALL :: call :: V :: v26.setChain(v3)::CL,74688
94518 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,94522
94523 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .seqResGroups::DD,94526
94522 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 54::CD,94500:CD,94505:CD,94510:CD,94514:CD,94518:JM,94522
94527 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::
94526 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 211::CF,94527:CD,94534:CD,94573:CD,94577:CD,94578
94531 :: EXPR :: reference :: Ljava/util/List :: v33 = p0 $this .seqResGroups::JM,94577
94534 :: CALL :: call :: Ljava/util/Iterator :: v35 = v33.iterator()::JM,94577
94539 :: CALL :: call :: Ljava/lang/Object :: v39 = v35.next()::JM,94577
94547 :: CALL :: call :: I :: v43 = findMathingGroupIndex(v41, v40)::JM,94552:CL,112326
94553 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v46 = v3.getAtomGroup(v43)::JM,94583:CL,112365
94552 :: PRED :: IF :: Z :: if (v43 == #(-1)) goto 168::CD,94553:CD,94559:CD,94563:CD,94583
94559 :: CALL :: call :: Ljava/lang/Object :: v48 = v40.clone()::JM,94563:CL,75914:CL,76231:CL,76056
94563 :: EXPR :: assign :: Ljava/lang/Object :: v49 = CHECKCAST v48::DD,94583
94564 :: CALL :: call :: V :: v50.setChain(v3)::CL,74688
94568 :: CALL :: call :: Z :: v53 = v31.add(v50)::
94573 :: CALL :: call :: Z :: v37 = v35.hasNext()::JM,94577
94577 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 128::CD,94539:CD,94547:CD,94552:CD,94564:CD,94568:CD,94573:CD,94583:JM,94577
94578 :: CALL :: call :: V :: v3.setSeqResGroups(v31)::CL,63843
94583 :: EXPR :: assign :: null :: PHI v50 = v46, v49::
94635 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::CE,94636:CD,94640:JM,63730:JM,63716:JM,63723:JM,63711:CD,94644:CD,94648:CD,94721:CD,94725:CD,94726:CD,94727
94636 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::
94640 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v4 = new org.biojava.nbio.structure.ChainImpl::DD,94726
94644 :: CALL :: call :: Ljava/util/List :: v8 = p1 $c .getAtomGroups()::JM,94725:CL,45126
94648 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,94725
94653 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.next()::JM,94725
94658 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = new org.biojava.nbio.structure.ResidueNumber::DD,94727
94689 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 93::CD,94690:CD,94695:CD,94696
94690 :: CALL :: call :: Z :: v32 = v43.equals(v17)::JM,94695:CL,41466
94695 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 101::CD,94696:CD,94703:CD,94708:CD,94713
94696 :: CALL :: call :: V :: v4.addGroup(v16)::CL,63901
94703 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
94708 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v16)::
94713 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
94721 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,94725
94725 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,94653:CD,94658:JM,112419:JM,112422:JM,112425:CD,94689:CD,94721:CD,94727:JM,94725:CF,94726
94727 :: EXPR :: assign :: null :: PHI v43 = #(null), v17::JM,94725:DD,94689
94726 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v4::DD,94636
94756 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCompounds(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,94761:CD,94765:CD,94781:CD,94789:CD,94921:CD,94925:CD,94929:CD,95011:CD,95015:CD,95019:CD,95101:CD,95105:CD,95109:CD,95114:CD,95167:JM,94803:JM,94947:JM,95042:JM,94807:JM,95033:JM,94952:JM,95037:JM,94812:JM,94943
94761 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $asym .getEntity_id()::JM,94803:JM,94947:JM,95042:JM,94807:JM,94761:JM,95033:JM,94952:JM,95037:JM,94812:JM,94943:JM,95167
94765 :: CALL :: call :: I :: v8 = parseInt(v6)::JM,94947:JM,95042:JM,94807:JM,94952:JM,95037:JM,94812:JM,95167
94781 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v18 = p0 $this .getEntity(v16)::JM,94881:JM,94882:JM,94823:JM,94886:JM,94824:JM,94891:JM,95053:JM,94828:JM,95054:JM,94833:JM,94963:JM,95123:JM,95058:JM,94964:JM,95124:JM,95063:JM,94872:JM,94968:JM,95128:JM,94973:JM,95133:JM,94876:CL,112436
94786 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .entitySrcGens::JM,94925:JM,94798
94789 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,94925:JM,94798
94794 :: CALL :: call :: Ljava/lang/Object :: v25 = v21.next()::JM,94925:JM,94798
94799 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getEntity_id()::JM,94807:JM,94812:JM,94799
94798 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::JM,94807:JM,94812:JM,94799:JM,94899
94803 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $asym .getEntity_id()::JM,94803:JM,94947:JM,95042:JM,94807:JM,94761:JM,95033:JM,94952:JM,95037:JM,94812:JM,94943:JM,95167
94807 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,94807:JM,94812:JM,94947:JM,95042:JM,94952:JM,95037:JM,95167
94812 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 80::CD,94817:CD,94822
94817 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v35 = v33.getCompoundById(v16)::JM,94822:CL,112496
94823 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 228::CD,94824:CD,94828:CD,94833:JM,94881:JM,94882:JM,94886:JM,94891:JM,95053:JM,95054:JM,94963:JM,95123:JM,95058:JM,94964:JM,95124:JM,95063:JM,94872:JM,94968:JM,95128:JM,94973:JM,95133:JM,94876:JM,94925:JM,94798
94822 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 228::CD,94823:JM,94925:JM,94798
94824 :: CALL :: call :: Ljava/lang/String :: v38 = v18.getType()::JM,94881:JM,94882:JM,94886:JM,94824:JM,94891:JM,95053:JM,94828:JM,95054:JM,94833:JM,94963:JM,95123:JM,95058:JM,94964:JM,95124:JM,95063:JM,94872:JM,94968:JM,95128:JM,94973:JM,95133:JM,94876
94828 :: CALL :: call :: Z :: v41 = v38.equals(#(polymer))::JM,94833:JM,94881:JM,95058:JM,95063:JM,94886:JM,94968:JM,95128:JM,94891:JM,94973:JM,95133:JM,94828:JM,94876
94833 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 166::CD,94834:CD,94844:CD,94851:CD,94857:CD,94872:CD,94876:CD,94881:JM,94882:JM,94886:JM,94824:JM,94891:JM,95053:JM,94828:JM,95054:JM,94833:JM,94963:JM,95123:JM,95058:JM,94964:JM,95124:JM,95063:JM,94968:JM,95128:JM,94973:JM,95133
94834 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v53 = p0 $this .createNewCompoundFromESG(v26, v16)::CL,112536
94844 :: CALL :: call :: V :: v53.setMolName(v55)::CL,112626
94851 :: CALL :: call :: V :: v57.addCompound(v53)::CL,112637
94857 :: CALL :: call :: Ljava/lang/Integer :: v62 = valueOf(v16)::
94872 :: CALL :: call :: Ljava/lang/String :: v43 = v18.getType()::JM,94881:JM,94882:JM,94886:JM,94824:JM,94891:JM,95053:JM,94828:JM,95054:JM,94833:JM,94963:JM,95123:JM,95058:JM,94964:JM,95124:JM,95063:JM,94872:JM,94968:JM,95128:JM,94973:JM,95133:JM,94876
94876 :: CALL :: call :: Z :: v46 = v43.equals(#(non-solvent))::JM,94833:JM,94881:JM,95058:JM,95063:JM,94886:JM,94968:JM,95128:JM,94891:JM,94973:JM,95133:JM,94828:JM,94876
94881 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 228::CD,94882:CD,94886:CD,94891:JM,94881:JM,94824:JM,95053:JM,94828:JM,95054:JM,94833:JM,94963:JM,95123:JM,95058:JM,94964:JM,95124:JM,95063:JM,94872:JM,94968:JM,95128:JM,94973:JM,95133:JM,94876:JM,94925:JM,94798
94882 :: CALL :: call :: Ljava/lang/String :: v48 = v18.getType()::JM,94881:JM,94882:JM,94886:JM,94824:JM,94891:JM,95053:JM,94828:JM,95054:JM,94833:JM,94963:JM,95123:JM,95058:JM,94964:JM,95124:JM,95063:JM,94872:JM,94968:JM,95128:JM,94973:JM,95133:JM,94876
94886 :: CALL :: call :: Z :: v51 = v48.equals(#(water))::JM,94833:JM,94881:JM,95058:JM,95063:JM,94886:JM,94968:JM,95128:JM,94891:JM,94973:JM,95133:JM,94828:JM,94876
94891 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 228::CD,94894:CD,94899:CD,94903:CD,94908:CD,94913:JM,94925:JM,94798
94894 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v67 = new java.lang.StringBuilder::
94899 :: CALL :: call :: Ljava/lang/String :: v71 = v26.getEntity_id()::JM,94899
94903 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v67.append(v71)::
94908 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v73.append(#( that has unknown _en...))::
94913 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
94921 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,94925:JM,94798
94925 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 51::CD,94794:CD,94798:CD,94799:CD,94803:CD,94807:CD,94812:CD,94921:JM,94925
94926 :: EXPR :: reference :: Ljava/util/List :: v80 = p0 $this .entitySrcNats::JM,95015:JM,94938
94929 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,95015:JM,94938
94934 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,95015:JM,94938
94939 :: CALL :: call :: Ljava/lang/String :: v89 = v87.getEntity_id()::JM,94947:JM,94952:JM,94939
94938 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,94947:JM,94952:JM,94939
94943 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $asym .getEntity_id()::JM,94803:JM,94947:JM,95042:JM,94807:JM,94761:JM,95033:JM,94952:JM,95037:JM,94812:JM,94943:JM,95167
94947 :: CALL :: call :: Z :: v93 = v89.equals(v91)::JM,94947:JM,94952:JM,95042:JM,94807:JM,95037:JM,94812:JM,95167
94952 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 281::CD,94957:CD,94962
94957 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v96 = v94.getCompoundById(v16)::JM,94962:CL,112496
94963 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 365::CD,94964:CD,94968:CD,94973:JM,94881:JM,94882:JM,94886:JM,94824:JM,94891:JM,95053:JM,94828:JM,95054:JM,94833:JM,95123:JM,95058:JM,95124:JM,95063:JM,94872:JM,95128:JM,95133:JM,94876:JM,95015:JM,94938
94962 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 365::CD,94963:JM,95015:JM,94938
94964 :: CALL :: call :: Ljava/lang/String :: v99 = v18.getType()::JM,94881:JM,94882:JM,94886:JM,94824:JM,94891:JM,95053:JM,94828:JM,95054:JM,94833:JM,95123:JM,95058:JM,94964:JM,95124:JM,95063:JM,94872:JM,94968:JM,95128:JM,94973:JM,95133:JM,94876
94968 :: CALL :: call :: Z :: v101 = v99.equals(#(polymer))::JM,94833:JM,94881:JM,95058:JM,95063:JM,94886:JM,94968:JM,95128:JM,94891:JM,94973:JM,95133:JM,94828:JM,94876
94973 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 365::CD,94974:CD,94984:CD,94991:CD,94997:JM,95015:JM,94938
94974 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v103 = p0 $this .createNewCompoundFromESN(v87, v16)::CL,112663
94984 :: CALL :: call :: V :: v103.setMolName(v105)::CL,112626
94991 :: CALL :: call :: V :: v107.addCompound(v103)::CL,112637
94997 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v16)::
95011 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,95015:JM,94938
95015 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 252::CD,94934:CD,94938:CD,94939:CD,94943:CD,94947:CD,94952:CD,95011:JM,95015
95016 :: EXPR :: reference :: Ljava/util/List :: v115 = p0 $this .entitySrcSyns::JM,95105:JM,95028
95019 :: CALL :: call :: Ljava/util/Iterator :: v117 = v115.iterator()::JM,95105:JM,95028
95024 :: CALL :: call :: Ljava/lang/Object :: v121 = v117.next()::JM,95105:JM,95028
95029 :: CALL :: call :: Ljava/lang/String :: v124 = v122.getEntity_id()::JM,95042:JM,95029:JM,95037
95028 :: EXPR :: assign :: Ljava/lang/Object :: v122 = CHECKCAST v121::JM,95042:JM,95029:JM,95037
95033 :: CALL :: call :: Ljava/lang/String :: v126 = p1 $asym .getEntity_id()::JM,94803:JM,94947:JM,95042:JM,94807:JM,94761:JM,95033:JM,94952:JM,95037:JM,94812:JM,94943:JM,95167
95037 :: CALL :: call :: Z :: v128 = v124.equals(v126)::JM,95042:JM,95037:JM,94947:JM,94807:JM,94952:JM,94812:JM,95167
95042 :: PRED :: IF :: Z :: if (v128 != #(0)) goto 418::CD,95047:CD,95052
95047 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v131 = v129.getCompoundById(v16)::JM,95052:CL,112496
95053 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 502::CD,95054:CD,95058:CD,95063:JM,94881:JM,94882:JM,94886:JM,94824:JM,94891:JM,94828:JM,94833:JM,95123:JM,94964:JM,95124:JM,94872:JM,94968:JM,95128:JM,94973:JM,95133:JM,94876:JM,95105:JM,95028
95052 :: PRED :: IF :: Z :: if (v131 != #(null)) goto 502::CD,95053:JM,95105:JM,95028
95054 :: CALL :: call :: Ljava/lang/String :: v134 = v18.getType()::JM,94881:JM,94882:JM,94886:JM,94824:JM,94891:JM,94828:JM,95054:JM,94833:JM,95123:JM,95058:JM,94964:JM,95124:JM,95063:JM,94872:JM,94968:JM,95128:JM,94973:JM,95133:JM,94876
95058 :: CALL :: call :: Z :: v136 = v134.equals(#(polymer))::JM,94833:JM,94881:JM,95058:JM,95063:JM,94886:JM,94968:JM,95128:JM,94891:JM,94973:JM,95133:JM,94828:JM,94876
95063 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 502::CD,95064:CD,95074:CD,95081:CD,95087:JM,95105:JM,95028
95064 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v138 = p0 $this .createNewCompoundFromESS(v122, v16)::CL,112733
95074 :: CALL :: call :: V :: v138.setMolName(v140)::CL,112626
95081 :: CALL :: call :: V :: v142.addCompound(v138)::CL,112637
95087 :: CALL :: call :: Ljava/lang/Integer :: v146 = valueOf(v16)::
95101 :: CALL :: call :: Z :: v119 = v117.hasNext()::JM,95105:JM,95028
95105 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 389::CD,95024:CD,95028:CD,95029:CD,95033:CD,95037:CD,95042:CD,95101:JM,95105
95109 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v152 = v150.getCompoundById(v16)::JM,95114:CL,112496
95114 :: PRED :: IF :: Z :: if (v152 != #(null)) goto 599::JM,103281:JM,103274:CD,95119:CD,95123
95119 :: CALL :: call :: V :: v153.setMolId(v16)::CL,103402
95123 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 599::CD,95124:CD,95128:CD,95133:JM,94881:JM,94882:JM,94886:JM,94824:JM,94891:JM,94828:JM,95054:JM,94833:JM,95058:JM,94964:JM,95063:JM,94872:JM,94968:JM,94973:JM,94876
95124 :: CALL :: call :: Ljava/lang/String :: v157 = v18.getType()::JM,94881:JM,94882:JM,94886:JM,94824:JM,94891:JM,94828:JM,95054:JM,94833:JM,95058:JM,94964:JM,95124:JM,95063:JM,94872:JM,94968:JM,95128:JM,94973:JM,95133:JM,94876
95128 :: CALL :: call :: Z :: v159 = v157.equals(#(polymer))::JM,94833:JM,94881:JM,95058:JM,95063:JM,94886:JM,94968:JM,95128:JM,94891:JM,94973:JM,95133:JM,94828:JM,94876
95133 :: PRED :: IF :: Z :: if (v159 == #(0)) goto 599::CD,95138:CD,95145
95138 :: CALL :: call :: V :: v153.setMolName(v161)::CL,112626
95145 :: CALL :: call :: V :: v163.addCompound(v153)::CL,112637
95167 :: EXPR :: assign :: null :: PHI v16 = v8, #(0)::
95297 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::JM,83021:JM,123179
95296 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::CE,95297:CD,95303
95300 :: EXPR :: reference :: Z :: v3 = p0 $this .alignSeqRes::DD,95303
95303 :: NORM :: compound :: Z :: return v3::CF,95297
95305 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.alignSeqRes()::CD,95465:CD,95469:CD,95479
95319 :: CALL :: call :: Ljava/util/List :: v12 = v10.getModel(v79)::CL,51721
95324 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .seqResChains::JM,95460
95327 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,95460
95332 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,95460
95337 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getMatchingAtomRes(v20, v12)::JM,95342:CL,112783
95342 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 84::CF,95355:CD,95381:CD,95385:CD,95389:CD,95447:CD,95451:CD,95452:CD,95471:CD,95472:CD,95476:CD,95477:CD,95478
95355 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::JM,95451
95360 :: CALL :: call :: Ljava/util/List :: v36 = v20.getAtomGroups()::CL,45126
95364 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v47)::
95370 :: CALL :: call :: Ljava/lang/Object :: v41 = v39.clone()::JM,95374:CL,75914:CL,76231:CL,76056
95375 :: CALL :: call :: Z :: v44 = v29.add(v42)::
95374 :: EXPR :: assign :: Ljava/lang/Object :: v42 = CHECKCAST v41::
95381 :: CALL :: call :: Ljava/util/List :: v32 = v20.getAtomGroups()::JM,95389:CL,45126
95380 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v47 + #(1)::DD,95472:CF,95471
95385 :: CALL :: call :: I :: v34 = v32.size()::JM,95389
95389 :: PRED :: IF :: Z :: if (v47 < v34) goto 102::CD,95360:CD,95364:CD,95370:CD,95374:CD,95375:CD,95380:CD,95381:CD,95385:CD,95471:CD,95472
95391 :: CALL :: call :: Ljava/lang/Object :: v51 = v29.get(v75)::
95397 :: CALL :: call :: Ljava/util/List :: v54 = v22.getAtomGroups()::JM,95440:JM,95410:CL,45126
95401 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,95440:JM,95410
95406 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,95440:JM,95410
95411 :: CALL :: call :: I :: v63 = p0 $this .getInternalNr(v61)::JM,95428:CL,112874
95410 :: EXPR :: assign :: Ljava/lang/Object :: v61 = CHECKCAST v60::
95420 :: CALL :: call :: Ljava/lang/Integer :: v67 = v65.getSeqNum()::JM,95428:CL,112391
95424 :: CALL :: call :: I :: v69 = v67.intValue()::JM,95428
95429 :: CALL :: call :: Ljava/lang/Object :: v71 = v29.set(v76, v61)::
95428 :: PRED :: IF :: Z :: if (v69 != v63) goto 248::CF,95473:CD,95429:CD,95436:CD,95440:CD,95474:CD,95475
95436 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,95440:JM,95410
95441 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 269::CD,95442:CF,95446
95440 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 192::CF,95475:CD,95406:CD,95410:CD,95411:CD,95420:CD,95424:CD,95428:CD,95473:CD,95474:JM,95440
95442 :: CALL :: call :: V :: v52.setResidueNumber(#(null))::CL,88562
95447 :: CALL :: call :: I :: v49 = v29.size()::JM,95451
95446 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v76 + #(1)::DD,95477:CF,95476
95451 :: PRED :: IF :: Z :: if (v75 < v49) goto 160::CD,95391:CD,95397:CD,95401:CD,95436:CD,95440:CD,95441:CD,95446:CD,95447:CD,95473:CD,95474:CD,95475:CD,95476:CD,95477
95452 :: CALL :: call :: V :: v22.setSeqResGroups(v29)::CL,63843
95456 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,95460
95461 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v80 + #(1)::DD,95479
95460 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 43::CD,95332:CD,95337:CD,95342:CD,95456:CD,95478:JM,95460:CF,95461
95465 :: CALL :: call :: I :: v9 = v7.nrModels()::JM,95469:CL,64143
95469 :: PRED :: IF :: Z :: if (v79 < v9) goto 17::CD,95319:CD,95327:CD,95456:CD,95460:CD,95461:CD,95465:CD,95478:CD,95479
95471 :: EXPR :: assign :: null :: PHI v81 = v80, v81::CF,95472:DD,95471:DD,95476
95473 :: EXPR :: assign :: null :: PHI v83 = v82, v83::CF,95474:DD,95473:DD,95476
95472 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::DD,95380:DD,95389
95475 :: EXPR :: assign :: null :: PHI v72 = #(1), #(0)::DD,95441
95474 :: EXPR :: assign :: null :: PHI v76 = v75, v76::JM,95440:JM,95410:DD,95446:DD,95474
95477 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::DD,95451:DD,95474
95476 :: EXPR :: assign :: null :: PHI v82 = v81, v83::CF,95477:DD,95473:DD,95478
95479 :: EXPR :: assign :: null :: PHI v79 = #(0), v78::DD,95469:DD,95478
95478 :: EXPR :: assign :: null :: PHI v80 = v79, v80, v82::JM,95460:DD,95461:DD,95471:DD,95478
95547 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.storeUnAlignedSeqRes(org.biojava.nbio.structure.Structure,java.util.List,boolean)::CD,95643:CD,95647:CD,95650:JM,95569:JM,95568:JM,95635:JM,95636
95554 :: CALL :: call :: Ljava/util/List :: v9 = p1 $structure .getModel(v45)::CL,51721
95559 :: CALL :: call :: Ljava/util/Iterator :: v11 = p2 $seqResChains .iterator()::JM,95569:JM,95568:JM,95635:JM,95636
95564 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,95568:JM,95635
95569 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 86::CD,95574:CD,95578:CD,95582:CD,95586:CD,95592:CD,95597:CD,95649
95568 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::CF,95569
95574 :: CALL :: call :: V :: v16.setSeqResGroups(v18)::CL,63843
95578 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::
95582 :: CALL :: call :: V :: v16.setAtomGroups(v20)::CL,112966
95586 :: CALL :: call :: Z :: v24 = v9.add(v16)::
95592 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v26 = getMatchingAtomRes(v16, v9)::JM,95597:CL,112783
95597 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 113::CD,95602:CD,95609:CD,95614:CD,95618:CD,95623:CD,95649
95602 :: CALL :: call :: V :: v26.setSeqResGroups(v29)::CL,63843
95609 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
95614 :: CALL :: call :: Ljava/lang/String :: v36 = v16.getChainID()::CL,63330
95618 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v32.append(v36)::
95623 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
95631 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,95568:JM,95635
95635 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 27::CD,95564:CD,95568:CD,95569:CD,95631:CD,95649:JM,95635:CF,95636
95637 :: CALL :: call :: V :: p1 $structure .setChains(v46, v9)::CL,113004
95636 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 167::CD,95637:CF,95642
95643 :: CALL :: call :: I :: v7 = p1 $structure .nrModels()::JM,95647:CL,64143
95642 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v46 + #(1)::DD,95650
95647 :: PRED :: IF :: Z :: if (v45 < v7) goto 7::CD,95554:CD,95559:CD,95631:CD,95635:CD,95636:CD,95642:CD,95643:CD,95649:CD,95650
95649 :: EXPR :: assign :: null :: PHI v46 = v45, v46, v46, v46::JM,95568:JM,95635:DD,95642:DD,95649
95650 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,95647:DD,95649
95691 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::JM,83111:JM,95804:JM,96129
95690 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::CE,95691:CD,95697
95694 :: EXPR :: reference :: Z :: v3 = p0 $this .useInternalChainId::DD,95697
95697 :: NORM :: compound :: Z :: return v3::CF,95691
95699 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setInternalChainID(java.lang.String)::JM,95704
95704 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = p1 $internalChainID ::
95711 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::JM,83429:JM,101894
95710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::CE,95711:CD,95717
95714 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomBonds::DD,95717
95717 :: NORM :: compound :: Z :: return v3::CF,95711
95719 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addBonds()::CD,95735:CD,95741
95735 :: CALL :: call :: V :: v3.makeBonds()::CL,113081
95741 :: CALL :: call :: V :: v3.formBondsFromStructConn(v8)::CL,113102
95753 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::CE,95754:CD,95760
95754 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::JM,83440:JM,101905
95757 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomCharges::DD,95760
95760 :: NORM :: compound :: Z :: return v3::CF,95754
95762 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCharges()::CD,95769
95769 :: CALL :: call :: V :: addCharges(v3)::CL,113719
95774 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.linkCompounds()::CD,95947:CD,95951:CD,95955:CD,95959:CD,96000:CD,96004:CD,96008
95782 :: CALL :: call :: Ljava/util/List :: v9 = v7.getModel(v74)::JM,95942:CL,51721
95787 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,95942
95792 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,95942
95800 :: CALL :: call :: Z :: v19 = v17.isUseInternalChainId()::JM,95804:CL,95690
95804 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 68::CD,95812:CD,95817:CD,95826:CD,95831:CD,96006
95812 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,95817
95817 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,96006
95826 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,95831
95831 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,96006
95832 :: PRED :: IF :: Z :: if (v32 != #(null)) goto 114::CD,95845:CD,95852:CD,95857:CD,96007
95845 :: CALL :: call :: I :: v40 = parseInt(v32)::
95852 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v43 = v41.getCompoundById(v40)::JM,95857:CL,112496
95857 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 203::CD,95860:JM,103281:JM,103274:CD,95878:CD,95882:CD,95886:CD,95893:CD,95917:CD,95930:CD,95934:CD,96007
95860 :: CALL :: call :: Ljava/lang/Integer :: v47 = valueOf(v40)::
95878 :: CALL :: call :: V :: v51.setMolId(v40)::CL,103402
95882 :: CALL :: call :: V :: v51.addChain(v16)::CL,103385
95886 :: CALL :: call :: V :: v16.setCompound(v51)::CL,74582
95893 :: CALL :: call :: V :: v56.addCompound(v51)::CL,112637
95917 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v40)::
95930 :: CALL :: call :: V :: v43.addChain(v16)::CL,103385
95934 :: CALL :: call :: V :: v16.setCompound(v43)::CL,74582
95938 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,95942
95943 :: EXPR :: assign :: Ljava/lang/Object :: v73 = v75 + #(1)::DD,96008
95942 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 25::CD,95792:CD,95800:CD,95804:CD,95832:CD,95938:CD,96006:CD,96007:JM,95942:CF,95943
95947 :: CALL :: call :: I :: v6 = v4.nrModels()::JM,95951:CL,64143
95951 :: PRED :: IF :: Z :: if (v74 < v6) goto 6::CD,95782:CD,95787:CD,95938:CD,95942:CD,95943:CD,95947:CD,96007:CD,96008
95955 :: CALL :: call :: Ljava/util/List :: v78 = v76.getCompounds()::JM,96004:CL,63015
95959 :: CALL :: call :: Ljava/util/Iterator :: v80 = v78.iterator()::JM,96004
95964 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,96004
96000 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,96004
96004 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 304::CD,95964:CD,96000:JM,96004
96007 :: EXPR :: assign :: null :: PHI v75 = v74, v75, v75, v75::JM,95942:DD,95943:DD,96007
96006 :: EXPR :: assign :: null :: PHI v32 = v25, v31::DD,95832
96008 :: EXPR :: assign :: null :: PHI v74 = #(0), v73::DD,95951:DD,96007
96084 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addSites()::CD,96091:CD,96095:CD,96103:CD,96201:CD,96206:CD,96211:CD,96216:CD,96227:CD,96232:CD,96236:CD,96241:CD,96246:CD,96250:CD,96255:CD,96368:CD,96372:CD,96376:CD,96382:CD,96383
96091 :: CALL :: call :: Ljava/util/List :: v5 = v3.getSites()::JM,96095:JM,96383:CL,63143
96095 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 23::CF,96383:CF,96096
96096 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,96383
96100 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .structSiteGens::JM,96112:JM,96372
96103 :: CALL :: call :: Ljava/util/Iterator :: v12 = v10.iterator()::JM,96112:JM,96372
96108 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.next()::JM,96112:JM,96372
96113 :: CALL :: call :: Ljava/lang/String :: v20 = v18.getSite_id()::JM,96113:JM,96384:JM,96117
96112 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,96113:JM,96384:JM,96117:JM,96321:JM,96118:JM,96316:JM,96385:JM,96130:JM,96135:JM,96139:JM,96147:JM,96386:JM,96148:JM,96153:JM,96143
96117 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 62::CF,96384
96118 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getLabel_comp_id()::JM,96321:JM,96118:JM,96316
96125 :: CALL :: call :: Z :: v27 = v25.isUseInternalChainId()::JM,96129:CL,95690
96129 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 87::CD,96130:CD,96135:CD,96385
96130 :: CALL :: call :: Ljava/lang/String :: v29 = v18.getLabel_asym_id()::JM,96385:JM,96130
96135 :: CALL :: call :: Ljava/lang/String :: v31 = v18.getAuth_asym_id()::JM,96385:JM,96135
96139 :: CALL :: call :: Ljava/lang/String :: v34 = v18.getAuth_seq_id()::JM,96139
96143 :: CALL :: call :: Ljava/lang/String :: v36 = v18.getPdbx_auth_ins_code()::JM,96147:JM,96386:JM,96148:JM,96153:JM,96143
96147 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 127::CF,96386:CD,96148:CD,96153
96148 :: CALL :: call :: Z :: v39 = v36.equals(#(?))::JM,96386:JM,96148:JM,96153
96153 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 127::CF,96386
96157 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v43 = v41.getChainByPDB(v32)::JM,96162:CL,97216
96163 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,96164:CD,96168
96162 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 289::CF,96388:CD,96163:CD,96179:CD,96183:JM,112419:JM,112422:JM,112425:CD,96193
96164 :: CALL :: call :: I :: v45 = v40.length()::JM,96164:JM,96168
96169 :: CALL :: call :: C :: v47 = v40.charAt(#(0))::JM,96169
96168 :: PRED :: IF :: Z :: if (v45 <= #(0)) goto 173::CD,96169:CD,96174
96174 :: CALL :: call :: Ljava/lang/Character :: v49 = valueOf(v47)::
96179 :: CALL :: call :: I :: v53 = parseInt(v34)::
96183 :: CALL :: call :: Ljava/lang/Integer :: v55 = valueOf(v53)::
96193 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v58 = v43.getGroupByPDB(v51)::JM,96388:CL,76387
96201 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v62 = new java.lang.StringBuilder::
96206 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v62.append(v32)::
96211 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v66.append(v34)::
96216 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
96227 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::
96232 :: CALL :: call :: Ljava/lang/String :: v78 = v18.getSite_id()::
96236 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v74.append(v78)::
96241 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v80.append(#( - ))::
96246 :: CALL :: call :: Ljava/lang/String :: v85 = v72.getMessage()::
96250 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v83.append(v85)::
96255 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
96269 :: CALL :: call :: Ljava/util/Iterator :: v98 = v9.iterator()::JM,96293:JM,96278
96268 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 480::CD,96269:CD,96289:CD,96293:CD,96294:CD,96303:CD,96307:CD,96312:CD,96316:CD,96321:CD,96362:CD,96389:CD,96390:CD,96391:CD,96392:JM,96278:JM,96112:JM,96372
96274 :: CALL :: call :: Ljava/lang/Object :: v102 = v98.next()::JM,96293:JM,96278
96279 :: CALL :: call :: Ljava/lang/String :: v105 = v103.getSiteID()::JM,96288:CL,114054
96278 :: EXPR :: assign :: Ljava/lang/Object :: v103 = CHECKCAST v102::DD,96389
96283 :: CALL :: call :: Z :: v107 = v22.equals(v105)::JM,96288
96289 :: CALL :: call :: Z :: v100 = v98.hasNext()::JM,96293:JM,96278
96288 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 337::CF,96389
96293 :: PRED :: IF :: Z :: if (v100 != #(0)) goto 308::CD,96274:CD,96278:CD,96279:CD,96283:CD,96288:CD,96289:CD,96389:JM,96293:CF,96294
96295 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v110 = new org.biojava.nbio.structure.Site::DD,96390
96294 :: PRED :: IF :: Z :: if (v108 != #(null)) goto 374::CF,96390:CD,96295:JM,114073:CD,96299
96299 :: CALL :: call :: V :: v110.setSiteID(v22)::CL,114096
96303 :: CALL :: call :: Ljava/util/List :: v116 = v113.getGroups()::JM,96307:JM,96392:CL,114107
96307 :: PRED :: IF :: Z :: if (v116 != #(null)) goto 397::CF,96392:CF,96308
96308 :: NORM :: declaration :: Ljava/util/ArrayList :: v117 = new java.util.ArrayList::DD,96392
96312 :: CALL :: call :: Ljava/lang/String :: v121 = v94.getPDBName()::JM,96321:JM,96316:CL,47160
96316 :: CALL :: call :: Z :: v123 = v24.equals(v121)::JM,96321:JM,96316
96321 :: PRED :: IF :: Z :: if (v123 != #(0)) goto 452::CD,96324:CD,96329:CD,96334:CD,96339:CD,96344:CD,96353:CD,96358
96324 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v125 = new java.lang.StringBuilder::
96329 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v125.append(v32)::
96334 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(v34)::
96339 :: CALL :: call :: Ljava/lang/StringBuilder :: v134 = v131.append(#( - skipping))::
96344 :: CALL :: call :: Ljava/lang/String :: v136 = v134.toString()::
96353 :: CALL :: call :: Z :: v139 = v119.add(v94)::
96358 :: CALL :: call :: V :: v113.setGroups(v119)::CL,114116
96363 :: CALL :: call :: Z :: v142 = v9.add(v113)::
96362 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 480::CD,96363:JM,96112:JM,96372
96368 :: CALL :: call :: Z :: v14 = v12.hasNext()::JM,96112:JM,96372
96372 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 36::CD,96108:CD,96112:CD,96113:CD,96117:CD,96118:CD,96125:CD,96129:CD,96139:CD,96143:CD,96147:CD,96157:CD,96162:CD,96268:CD,96368:CD,96384:CD,96385:CD,96386:CD,96388:JM,96372
96376 :: CALL :: call :: V :: v143.setSites(v9)::CL,63152
96383 :: EXPR :: assign :: null :: PHI v9 = v5, v7::JM,96293:JM,96278
96382 :: EXPR :: assign :: Ljava/lang/Exception :: v72 = catch <exc>::
96385 :: EXPR :: assign :: null :: PHI v32 = v29, v31::JM,96139
96384 :: EXPR :: assign :: null :: PHI v22 = v20, #()::JM,96321:JM,96118:JM,96316:JM,96288
96386 :: EXPR :: assign :: null :: PHI v40 = v36, v36, #(null)::DD,96163:JM,96164:JM,96168:JM,96169
96389 :: EXPR :: assign :: null :: PHI v108 = #(null), v108, v103::JM,96293:JM,96278:DD,96294:DD,96389:DD,96390
96388 :: EXPR :: assign :: null :: PHI v94 = #(null), v58, #(null), #(null)::DD,96268
96391 :: EXPR :: assign :: null :: PHI v114 = #(0), #(1)::DD,96362
96390 :: EXPR :: assign :: null :: PHI v113 = v108, v110::CF,96391
96392 :: EXPR :: assign :: null :: PHI v119 = v116, v117::
96495 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::CE,96496:CD,96502
96496 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::JM,83465:JM,119962
96499 :: EXPR :: reference :: Z :: v3 = p0 $this .parseBioAssembly::DD,96502
96502 :: NORM :: compound :: Z :: return v3::CF,96496
96511 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
96518 :: CALL :: call :: V :: p0 $this .init()::CL,114127
96526 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly,java.util.List,java.util.List)::CD,96533:CD,96539:CD,96589:CD,96593:CD,96598:CD,96607:CD,96612:CD,96617
96533 :: CALL :: call :: V :: p0 $this .init()::CL,114127
96539 :: CALL :: call :: Ljava/util/Iterator :: v8 = p3 $operators .iterator()::JM,96593
96544 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,96593
96549 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v15 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
96557 :: CALL :: call :: V :: v15.setId(v18)::CL,114202
96581 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .modelTransformations::
96584 :: CALL :: call :: Z :: v30 = v28.add(v15)::
96589 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,96593
96593 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,96544:CD,96549:JM,114159:CD,96557:CD,96584:CD,96589:JM,96593
96598 :: CALL :: call :: Ljava/util/ArrayList :: v34 = p0 $this .getBioUnitTransformationsListUnaryOperators(v32)::CL,114297
96607 :: CALL :: call :: Ljava/util/ArrayList :: v38 = p0 $this .getBioUnitTransformationsListBinaryOperators(v36)::CL,114463
96612 :: CALL :: call :: Z :: v40 = v34.addAll(v38)::
96617 :: CALL :: call :: V :: v34.trimToSize()::
96659 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setId(int)::JM,96664
96664 :: EXPR :: modify :: I :: p0 $this .id = p1 $id ::
96670 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setMacromolecularSize(int)::JM,96675
96675 :: EXPR :: modify :: I :: p0 $this .macromolecularSize = p1 $macromolecularSize ::
96681 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setTransforms(java.util.List)::JM,96686
96686 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transforms = p1 $transforms ::
96692 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setBioAssemblies(java.util.Map)::JM,96697
96697 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = p1 $bioAssemblies ::
96703 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStructNcsOps()::CD,96707:CD,96714:CD,96942:CD,96947:CD,96948:CD,96957:CD,96961:CD,96962:CD,96966
96707 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,96966:JM,96978
96711 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .structNcsOper::JM,96961:JM,96723
96714 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,96961:JM,96723
96719 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,96961:JM,96723
96723 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,96724:JM,96728:JM,96733:JM,96947
96724 :: CALL :: call :: Ljava/lang/String :: v15 = v13.getCode()::JM,96724:JM,96728:JM,96733
96728 :: CALL :: call :: Z :: v18 = v15.equals(#(generate))::JM,96728:JM,96733
96733 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,96735:CD,96931
96735 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v19 = new javax.vecmath.Matrix4d::
96931 :: CALL :: call :: Z :: v91 = v3.add(v19)::
96939 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .structNcsOper::JM,96947
96942 :: CALL :: call :: I :: v97 = v95.indexOf(v13)::JM,96947
96947 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v97 + #(1)::
96948 :: CALL :: call :: Ljava/lang/Integer :: v100 = valueOf(v98)::
96957 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,96961:JM,96723
96961 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 22::CD,96719:CD,96723:CD,96724:CD,96728:CD,96733:CD,96957:JM,96961:JM,96966
96962 :: CALL :: call :: I :: v104 = v3.size()::JM,96966
96966 :: PRED :: IF :: Z :: if (v104 <= #(0)) goto 336::CD,96974:CD,96978:CD,96979:CD,96985
96974 :: CALL :: call :: I :: v109 = v3.size()::JM,96978
96979 :: CALL :: call :: [Ljava/lang/Object :: v112 = v3.toArray(v110)::
96978 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v110 = new javax.vecmath.Matrix4d[]::
96985 :: CALL :: call :: V :: v107.setNcsOperators(v113)::CL,114670
97077 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setCrystallographicInfoMetadata()::CD,97084
97081 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v3 = p0 $this .parsedScaleMatrix::DD,97084
97084 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 47::CD,97092:CD,97096:CD,97110
97092 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v10 = v7.getCrystalCell()::JM,97096:CL,114681
97096 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 44::CD,97104
97104 :: CALL :: call :: Z :: v15 = v12.checkScaleMatrix(v13)::CL,114690
97110 :: CALL :: call :: V :: v7.setNonStandardCoordFrameConvention(v17)::CL,114784
97139 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setDetails(java.lang.String)::JM,97144
97144 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
97150 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setInsCode(java.lang.String)::JM,97155
97155 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode = p1 $insCode ::
97161 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setOrigGroup(java.lang.String)::JM,97166
97166 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .origGroup = p1 $origGroup ::
97172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbGroup(java.lang.String)::JM,97177
97177 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbGroup = p1 $pdbGroup ::
97183 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbResNum(java.lang.String)::JM,97188
97188 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbResNum = p1 $pdbResNum ::
97194 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setUniProtId(java.lang.String)::JM,97199
97199 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .uniProtId = p1 $uniProtId ::
97205 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setSeqNum(java.lang.Integer)::JM,97210
97210 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
97217 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::JM,96162
97216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::CE,97217:CD,97221:CD,97227
97221 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChainByPDB(p1 $chainId , #(0))::JM,97227:CL,63384
97227 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,97217
97231 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::CE,97232:CD,97235:CD,97239:CD,97240:CD,97241:CD,97265:CD,97266:CD,97271:CD,97272:CD,97274:CD,97275
97232 :: EXIT :: exit :: [Ljava/lang/reflect/Field :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::JM,84728
97235 :: CALL :: call :: [Ljava/lang/reflect/Field :: v4 = p1 $c .getDeclaredFields()::JM,97239:JM,97241
97239 :: EXPR :: assign :: I :: v5 = v4.length::CF,97240
97241 :: EXPR :: assign :: I :: v8 = v4.length::DD,97265
97240 :: NORM :: declaration :: [Ljava/lang/reflect/Field :: v6 = new java.lang.reflect.Field[]::JM,97266:JM,97271:CF,97241
97243 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v4[v21]::JM,97252:JM,97257
97251 :: EXPR :: assign :: Ljava/lang/Class :: v12 = metadata <Application,Lorg/biojava/nbio/structure/io/mmcif/model/IgnoreField>-><Primordial,Ljava/lang/Class>::JM,97252:JM,97257
97252 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v14 = v9.getAnnotation(v12)::JM,97252:JM,97257
97257 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,97258
97258 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 64::CF,97273:CD,97263
97263 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v20 + #(1)::DD,97273
97265 :: PRED :: IF :: Z :: if (v21 < v8) goto 30::CD,97251:CD,97252:CD,97257:CD,97258:CD,97264:CD,97273:CD,97274:CD,97275:JM,97266:JM,97271
97264 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,97275:CF,97274
97266 :: CALL :: call :: [Ljava/lang/Object :: v23 = copyOf(v6, v20)::JM,97266:JM,97271
97271 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::CF,97272
97273 :: EXPR :: assign :: null :: PHI v18 = v20, v17::DD,97274:CF,97264
97272 :: NORM :: compound :: [Ljava/lang/reflect/Field :: return v24::DD,97232
97275 :: EXPR :: assign :: null :: PHI v21 = #(0), v19::DD,97264:DD,97265
97274 :: EXPR :: assign :: null :: PHI v20 = #(0), v18::CF,97275:DD,97263:JM,97266:JM,97271:DD,97273
97408 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.produceWarning(java.lang.String,java.lang.String,java.lang.Class,java.util.Set)::CD,97416:CD,97421:CD,97426:CD,97431:CD,97435:CD,97440:CD,97445:CD,97450:CD,97455:CD,97459:CD,97460:CD,97468:CD,97473:CD,97477:CD,97482:CD,97486:CD,97491:CD,97518:JM,97497:JM,97498
97416 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
97421 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $key )::JM,97473:JM,97491:JM,97431:JM,97497:JM,97498:JM,97518
97426 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(#( in ))::JM,97491:JM,97497
97431 :: CALL :: call :: Ljava/lang/String :: v16 = p3 $c .getName()::JM,97473:JM,97491:JM,97431:JM,97497:JM,97498:JM,97518
97435 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v14.append(v16)::
97440 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#( found in file, but n...))::
97445 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v21.append(p2 $val )::JM,97473:JM,97491:JM,97431:JM,97497:JM,97498:JM,97518
97450 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(#()))::JM,97491:JM,97497
97455 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
97459 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
97460 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(p1 $key )::
97468 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#(-))::
97473 :: CALL :: call :: Ljava/lang/String :: v37 = p3 $c .getName()::JM,97473:JM,97491:JM,97431:JM,97497:JM,97498:JM,97518
97477 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v37)::
97482 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
97486 :: CALL :: call :: Z :: v44 = p2 $val .equals(#(?))::JM,97473:JM,97491:JM,97431:JM,97497:JM,97498:JM,97518
97491 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 113::CD,97492:CD,97497:JM,97473:JM,97491:JM,97431:JM,97498:JM,97518
97492 :: CALL :: call :: Z :: v48 = p2 $val .equals(#(.))::JM,97473:JM,97491:JM,97431:JM,97497:JM,97498:JM,97518
97497 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 113::CD,97498
97499 :: CALL :: call :: Z :: v51 = p4 $warnings .contains(v41)::
97498 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 126::CD,97499
97519 :: CALL :: call :: Z :: v57 = p4 $warnings .add(v41)::
97518 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 151::CD,97519
97558 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,97577
97574 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .entities::
97577 :: CALL :: call :: Z :: v11 = v9.add(p1 $entity )::
97601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,97609:CD,97613:JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
97609 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,97613:CL,94376
97613 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,97615:CD,97619:CD,97623:CD,97627:CD,97631:CD,97639:CD,97644:CD,97665:CD,97669:CD,97674:CD,97684:CD,97688:CD,97693:CD,97700:CD,97707:CD,97712:CD,97762:CD,97791:CD,97795:CD,97800:JM,112419:JM,112422:JM,112425:CD,97897:CD,97923:CD,97949:CD,97953:CD,97957:CD,97961:CD,97992:CD,97997:CD,98127:CD,98131:CD,98213:CD,98215:CD,98216:CD,98217:JM,97675:JM,98132:JM,98136:JM,98141:JM,98142:JM,98146:JM,97701:JM,98151:JM,97962:JM,97836:JM,97713:JM,97980
97615 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $atom .getLabel_asym_id()::JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
97619 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $atom .getGroup_PDB()::JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
97623 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $atom .getAuth_seq_id()::JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
97627 :: CALL :: call :: I :: v15 = parseInt(v13)::JM,97795:JM,98146:JM,97701:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97675:JM,97962:JM,97674:JM,97836:JM,97644:JM,97713:JM,97712:JM,98136:JM,98141:JM,97980
97631 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::JM,97712:JM,98151:JM,97961:JM,98216:JM,97674:JM,98141:JM,97980
97639 :: CALL :: call :: Z :: v23 = v11.equals(#(ATOM))::JM,97795:JM,98146:JM,97701:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97675:JM,97962:JM,97674:JM,97836:JM,97644:JM,97713:JM,97712:JM,98136:JM,98141:JM,97980
97645 :: CALL :: call :: Ljava/lang/Character :: v32 = get1LetterCodeAmino(v19)::CL,57228
97644 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 71::CD,97645:CD,97650:CD,97654
97650 :: CALL :: call :: Ljava/lang/Character :: v25 = get1LetterCodeAmino(v19)::JM,97654:CL,57228
97655 :: CALL :: call :: Ljava/lang/Character :: v28 = valueOf(#(88))::
97654 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 98::CD,97655
97665 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $atom .getPdbx_PDB_ins_code()::JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
97669 :: CALL :: call :: Z :: v38 = v35.equals(#(?))::JM,97795:JM,98146:JM,97701:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97675:JM,97962:JM,97674:JM,97836:JM,97644:JM,97713:JM,97712:JM,98136:JM,98141:JM,97980
97675 :: CALL :: call :: C :: v40 = v35.charAt(#(0))::JM,97795:JM,98146:JM,97701:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97675:JM,97962:JM,97674:JM,97836:JM,97644:JM,97713:JM,97712:JM,98136:JM,98141:JM,97980
97674 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 134::CD,97675:CD,97680:JM,97795:JM,98146:JM,97701:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97962:JM,97674:JM,97836:JM,97644:JM,97713:JM,97712:JM,98136:JM,98141:JM,97980
97680 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(v40)::JM,97712:JM,98151:JM,97961:JM,98216:JM,98141:JM,97980
97684 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $atom .getLabel_seq_id()::JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
97688 :: CALL :: call :: J :: v48 = parseLong(v46)::JM,97795:JM,98146:JM,97701:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97675:JM,97962:JM,97674:JM,97836:JM,97644:JM,97713:JM,97712:JM,98136:JM,98141:JM,97980
97693 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $atom .getPdbx_PDB_model_num()::JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
97697 :: EXPR :: reference :: Ljava/lang/String :: v54 = p0 $this .current_nmr_model::DD,97700
97701 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
97700 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 167::
97704 :: EXPR :: reference :: Ljava/lang/String :: v55 = p0 $this .current_nmr_model::JM,97712:JM,97707
97707 :: CALL :: call :: Z :: v57 = v55.equals(v53)::JM,97712:JM,97707:JM,97795:JM,98146:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97675:JM,97962:JM,97674:JM,97836:JM,97644:JM,97713:JM,98136:JM,98141:JM,97980
97713 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
97712 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 248::CD,97719:CD,97742:CD,97746
97716 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .current_chain::DD,97719
97719 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 214::CD,97726:CD,97733
97726 :: CALL :: call :: V :: v59.addGroup(v60)::CL,63901
97733 :: CALL :: call :: V :: v62.trimToSize()::CL,115104
97742 :: CALL :: call :: V :: v64.addModel(v65)::CL,63163
97746 :: NORM :: declaration :: Ljava/util/ArrayList :: v67 = new java.util.ArrayList::DD,97750
97750 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v67::
97753 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
97756 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
97759 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v69 = p0 $this .current_chain::DD,97762
97763 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v70 = new org.biojava.nbio.structure.ChainImpl::DD,97767
97762 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 293::CF,98213:CD,97763:JM,63730:JM,63716:JM,63723:JM,63711:CD,97773:CD,97783
97767 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v70::
97773 :: CALL :: call :: V :: v72.setChainID(v9)::CL,63754
97777 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .current_model::
97780 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v75 = p0 $this .current_chain::
97783 :: CALL :: call :: Z :: v77 = v74.add(v75)::
97791 :: CALL :: call :: Ljava/lang/String :: v82 = v80.getChainID()::JM,97795:JM,97800:CL,63330
97795 :: CALL :: call :: Z :: v84 = v9.equals(v82)::JM,97795:JM,98146:JM,97701:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97675:JM,97962:JM,97674:JM,97836:JM,97644:JM,97713:JM,97712:JM,98136:JM,98141:JM,97980
97800 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 434::CF,98215:CD,97807:CD,97821:CD,97826:CD,97845:CD,97870:CD,97875:CD,98214
97807 :: CALL :: call :: V :: v85.addGroup(v86)::CL,63901
97821 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v93 = isKnownChain(v90, v91)::JM,97826:JM,98214:CL,94331
97827 :: CALL :: call :: Ljava/lang/String :: v95 = v93.getChainID()::JM,97836:CL,63330
97826 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 361::CD,97827:CD,97831:CD,97836:CD,97840:CD,98214
97831 :: CALL :: call :: Z :: v97 = v95.equals(v9)::JM,97836:JM,97795:JM,98146:JM,97701:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97675:JM,97962:JM,97674:JM,97644:JM,97713:JM,97712:JM,98136:JM,98141:JM,97980
97836 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 371::CF,98214:CD,97840
97840 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v100 = isKnownChain(v9, v98)::JM,98214:CL,94331
97845 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 401::CD,97846:JM,63730:JM,63716:JM,63723:JM,63711:CD,97856
97846 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v102 = new org.biojava.nbio.structure.ChainImpl::DD,97850
97850 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v102::
97856 :: CALL :: call :: V :: v104.setChainID(v9)::CL,63754
97861 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v101::
97864 :: EXPR :: reference :: Ljava/util/List :: v106 = p0 $this .current_model::JM,97875
97867 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v107 = p0 $this .current_chain::JM,97875
97870 :: CALL :: call :: Z :: v109 = v106.contains(v107)::JM,97875
97875 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 434::CF,98215:CD,97882
97876 :: EXPR :: reference :: Ljava/util/List :: v110 = p0 $this .current_model::
97879 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v111 = p0 $this .current_chain::
97882 :: CALL :: call :: Z :: v113 = v110.add(v111)::
97894 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v117 = p0 $this .current_group::DD,97897
97897 :: PRED :: IF :: Z :: if (v117 != #(null)) goto 494::CD,97898:CD,97912:CD,97919:CF,97923
97898 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v119 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,97906:CL,115213
97906 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v119::
97912 :: CALL :: call :: V :: v120.setResidueNumber(v115)::CL,88562
97919 :: CALL :: call :: V :: v122.setPDBName(v19)::CL,88573:CL,88858
97923 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 539::CD,97924:CD,97938:CD,97945:JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
97924 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v125 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,97932:CL,115213
97932 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v125::
97938 :: CALL :: call :: V :: v126.setResidueNumber(v115)::CL,88562
97945 :: CALL :: call :: V :: v128.setPDBName(v19)::CL,88573:CL,88858
97949 :: CALL :: call :: Ljava/lang/String :: v131 = p1 $atom .getLabel_alt_id()::JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
97953 :: CALL :: call :: Ljava/lang/Character :: v134 = valueOf(#(32))::JM,98216
97957 :: CALL :: call :: I :: v136 = v131.length()::JM,97795:JM,98146:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97675:JM,97962:JM,97674:JM,97836:JM,97644:JM,97712:JM,98136:JM,98141:JM,97980
97961 :: PRED :: IF :: Z :: if (v136 <= #(0)) goto 593::CF,98216:CD,97962:CD,97967:CD,97971:CD,97975:CD,97980:JM,97795:JM,98146:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,97707:JM,97675:JM,97674:JM,97836:JM,97644:JM,97712:JM,98136:JM,98141
97962 :: CALL :: call :: C :: v138 = v131.charAt(#(0))::JM,97795:JM,98146:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97675:JM,97962:JM,97674:JM,97836:JM,97644:JM,97712:JM,98136:JM,98141:JM,97980
97967 :: CALL :: call :: Ljava/lang/Character :: v140 = valueOf(v138)::JM,98151:JM,98216:JM,98141:JM,97980
97971 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(46))::JM,97980
97975 :: CALL :: call :: Z :: v145 = v140.equals(v143)::JM,98216:JM,97980
97981 :: CALL :: call :: Ljava/lang/Character :: v147 = valueOf(#(32))::JM,98216
97980 :: PRED :: IF :: Z :: if (v145 == #(0)) goto 593::CF,98216:CD,97981
97992 :: CALL :: call :: Z :: v153 = v115.equals(v151)::JM,97997:CL,41466
97997 :: PRED :: IF :: Z :: if (v153 != #(0)) goto 674::CD,98004:CD,98011:CD,98014:CD,98028:CD,98035:CD,98040:CD,98044:CD,98049:CD,98217
98004 :: CALL :: call :: V :: v187.addGroup(v188)::CL,63901
98011 :: CALL :: call :: V :: v190.trimToSize()::CL,115104
98014 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v193 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,98022:CL,115213
98022 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v193::
98028 :: CALL :: call :: V :: v194.setPDBName(v19)::CL,88573:CL,88858
98035 :: CALL :: call :: V :: v196.setResidueNumber(v115)::CL,88562
98040 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(32))::JM,98049
98044 :: CALL :: call :: Z :: v157 = v148.equals(v155)::JM,98049
98049 :: PRED :: IF :: Z :: if (v157 != #(0)) goto 784::CF,98217:CD,98050:CD,98054:CD,98059
98050 :: CALL :: call :: Ljava/lang/Character :: v159 = valueOf(#(46))::JM,98059
98054 :: CALL :: call :: Z :: v161 = v148.equals(v159)::JM,98059
98059 :: PRED :: IF :: Z :: if (v161 != #(0)) goto 784::CF,98217:CD,98062:CD,98067:CD,98072:CD,98080:CD,98085:CD,98090:CD,98095:CD,98103:CD,98112:CD,98116
98062 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v163 = new java.lang.StringBuilder::
98067 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v163.append(v148)::
98072 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v167.append(#( ))::
98080 :: CALL :: call :: Ljava/lang/StringBuilder :: v173 = v170.append(v171)::
98085 :: CALL :: call :: Ljava/lang/StringBuilder :: v175 = v173.append(#( ))::
98090 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v175.append(#(null))::
98095 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
98103 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v182 = p0 $this .getCorrectAltLocGroup(v148, v11, v33, v19, v51)::JM,98217:CL,115423
98112 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v184 = v182.getChain()::JM,98116:CL,75905
98116 :: PRED :: IF :: Z :: if (v184 != #(null)) goto 784::CF,98217:CD,98120
98120 :: CALL :: call :: V :: v182.setChain(v185)::CL,74688
98127 :: CALL :: call :: Z :: v201 = v199.isParseCAOnly()::JM,98131:CL,115672
98131 :: PRED :: IF :: Z :: if (v201 == #(0)) goto 821::CD,98132:CD,98136:CD,98141:CD,98164:CD,98170:CD,98175:CD,98195:CD,98200:JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,97623:JM,97693:JM,97949:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
98132 :: CALL :: call :: Ljava/lang/String :: v203 = p1 $atom .getLabel_atom_id()::JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
98136 :: CALL :: call :: Z :: v206 = v203.equals(#(CA))::JM,97795:JM,98146:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97675:JM,97962:JM,97674:JM,97836:JM,97644:JM,97712:JM,98136:JM,98141:JM,97980
98141 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 819::CD,98142:CD,98146:CD,98151:JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,97701:JM,97957:JM,97639:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
98142 :: CALL :: call :: Ljava/lang/String :: v208 = p1 $atom .getType_symbol()::JM,97665:JM,97795:JM,97669:JM,97800:JM,97675:JM,97674:JM,97615:JM,97619:JM,97684:JM,98132:JM,97623:JM,98136:JM,97693:JM,97949:JM,98141:JM,98142:JM,98146:JM,97701:JM,97957:JM,97639:JM,98151:JM,97961:JM,98216:JM,97707:JM,97962:JM,97836:JM,97644:JM,97713:JM,97712:JM,97980
98146 :: CALL :: call :: Z :: v211 = v208.equals(#(C))::JM,97795:JM,98146:JM,97957:JM,97669:JM,97639:JM,98151:JM,97961:JM,97800:JM,98216:JM,97707:JM,97675:JM,97962:JM,97674:JM,97836:JM,97644:JM,97712:JM,98136:JM,98141:JM,97980
98151 :: PRED :: IF :: Z :: if (v211 != #(0)) goto 821::CD,98164:CD,98170:CD,98175:CD,98195:CD,98200
98164 :: CALL :: call :: Ljava/lang/Object :: v218 = v212.put(v214, v216)::
98170 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v220 = p0 $this .convertAtom(p1 $atom )::CL,115681
98175 :: PRED :: IF :: Z :: if (v198 == #(null)) goto 866::CD,98176:CD,98184
98176 :: CALL :: call :: V :: v198.addAtom(v220)::CL,88604
98184 :: CALL :: call :: V :: v221.addAtom(v220)::CL,88604
98195 :: CALL :: call :: Z :: v229 = v225.hasAtom(v227)::JM,98200:CL,45135
98200 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 906::CD,98204
98204 :: CALL :: call :: V :: v230.addAtom(v220)::CL,88604
98213 :: EXPR :: assign :: null :: PHI v79 = #(0), #(1)::DD,98215
98215 :: EXPR :: assign :: null :: PHI v114 = v79, #(1), #(1)::DD,97923
98214 :: EXPR :: assign :: null :: PHI v101 = v93, v100::DD,97845:DD,97861
98217 :: EXPR :: assign :: null :: PHI v198 = #(null), #(null), #(null), v182, v182::DD,98175
98216 :: EXPR :: assign :: null :: PHI v148 = v134, v140, v147::JM,98049:JM,98059
98436 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,98452:CD,98456:CD,98461:CD,98465:CD,98470:CD,98550
98452 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v10 = v8.getPDBHeader()::JM,98456:CL,62878
98456 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::JM,74432:JM,74407:JM,74439:JM,74399:JM,74415
98461 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $dbrev .getNum()::JM,98465:JM,98470:JM,98461
98465 :: CALL :: call :: Z :: v19 = v16.equals(#(1))::JM,98465:JM,98470
98470 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 126::CD,98480:CD,98505:CD,98531
98480 :: CALL :: call :: V :: v14.setDepDate(v35)::CL,115895
98505 :: CALL :: call :: V :: v14.setModDate(v48)::CL,115906
98531 :: CALL :: call :: V :: v14.setModDate(v24)::CL,115906
98550 :: CALL :: call :: V :: v58.setPDBHeader(v14)::CL,62887
98595 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,98603:CD,98607:CD,98619:CD,98623:CD,98632:CD,98639
98603 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,98607:CL,62878
98607 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 33::JM,74432:JM,74407:JM,74439:JM,74399:JM,74415:CD,98615
98615 :: CALL :: call :: V :: v10.setPDBHeader(v8)::CL,62887
98619 :: CALL :: call :: Ljava/util/List :: v14 = v12.getRevisionRecords()::JM,98623:JM,98639:CL,115917
98623 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 56::CF,98639:CF,98624:CD,98628
98624 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::DD,98639
98628 :: CALL :: call :: V :: v12.setRevisionRecords(v15)::CL,115926
98632 :: CALL :: call :: Z :: v20 = v18.add(p1 $record )::
98639 :: EXPR :: assign :: null :: PHI v18 = v14, v15::
98669 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,98674:CD,98678:CD,98683:CD,98712:CD,98717:CD,98722:JM,98688:JM,98693:JM,98684
98674 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $remark .getId()::JM,98688:JM,98674:JM,98693:JM,98678:JM,98683:JM,98684
98678 :: CALL :: call :: Z :: v8 = v5.equals(#(2))::JM,98688:JM,98693:JM,98678:JM,98683
98683 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 111::CD,98684:CD,98688:CD,98693:JM,98674:JM,98678:JM,98683
98684 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $remark .getText()::JM,98688:JM,98674:JM,98693:JM,98678:JM,98683:JM,98684
98688 :: CALL :: call :: I :: v14 = v11.indexOf(#(ANGSTROM))::JM,98688:JM,98693:JM,98678:JM,98683
98693 :: PRED :: IF :: Z :: if (v14 <= #(5)) goto 111::CD,98738
98712 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
98717 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v11)::JM,98688:JM,98693:JM,98678:JM,98683
98722 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
98738 :: CALL :: call :: V :: v36.setResolution(v23)::CL,115937
98770 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,98786
98786 :: CALL :: call :: Z :: v10 = v6.setExperimentalTechnique(v8)::CL,115948
98811 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,98869:CD,98874:CD,98879:CD,98884:CD,98889:CD,98894:CD,98898:CD,98902:CD,98942:CD,98948:CD,98953:CD,98957:CD,98962:CD,98967:CD,98976
98869 :: CALL :: call :: V :: v28.setA(v30)::CL,116001
98874 :: CALL :: call :: V :: v28.setB(v32)::CL,116012
98879 :: CALL :: call :: V :: v28.setC(v34)::CL,116023
98884 :: CALL :: call :: V :: v28.setAlpha(v36)::CL,116034
98889 :: CALL :: call :: V :: v28.setBeta(v38)::CL,116054
98894 :: CALL :: call :: V :: v28.setGamma(v40)::CL,116074
98898 :: CALL :: call :: Z :: v43 = v28.isCellReasonable()::JM,98902:CL,116094
98902 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 134::CD,98905:CD,98926
98905 :: CALL :: call :: Ljava/lang/Double :: v55 = valueOf(#(10.0 d))::JM,98905
98926 :: CALL :: call :: V :: v49.setCrystalCell(v28)::CL,116138
98942 :: CALL :: call :: V :: v62.setCrystalCell(#(null))::CL,116138
98948 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
98953 :: CALL :: call :: Ljava/lang/String :: v70 = v57.getMessage()::
98957 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
98962 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#(), ignoring _cell ))::
98967 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
98976 :: EXPR :: assign :: Ljava/lang/Exception :: v57 = catch <exc>::
99010 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,99015:CD,99019:CD,99023
99015 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $symmetry .getSpace_group_name_H_M()::JM,99015
99019 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v7 = getSpaceGroup(v5)::JM,99023:CL,116149
99023 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 65::CD,99026:CD,99031:CD,99036:CD,99041:CD,99060:CD,99076:CD,99091
99026 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
99031 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v5)::
99036 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(' not recognised as a...))::
99041 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
99060 :: CALL :: call :: V :: v38.setNonStandardSg(#(1))::CL,116228
99076 :: CALL :: call :: V :: v13.setSpaceGroup(v7)::CL,116239
99091 :: CALL :: call :: V :: v19.setNonStandardSg(#(0))::CL,116228
99119 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,99127
99124 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structNcsOper::
99127 :: CALL :: call :: Z :: v6 = v4.add(p1 $sNcsOper )::
99142 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,99147:CD,99289
99147 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,99263
99263 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .parsedScaleMatrix = v4::
99289 :: CALL :: call :: V :: v66.setNonStandardCoordFrameConvention(#(0))::CL,114784
99322 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,99340
99337 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .strucRefs::
99340 :: CALL :: call :: Z :: v10 = v8.add(p1 $sref )::
99363 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,99368:CD,99376:CD,99384:CD,99392:CD,99400:CD,99408:CD,99413:CD,99465:CD,99469:CD,99473:CD,99477:CD,99481:CD,99482:CD,99486:CD,99495:CD,99496:CD,99500:CD,99509:CD,99513:CD,99518:CD,99522:CD,99527:CD,99535:CD,99539:CD,99547:CD,99551:CD,99555:CD,99559:CD,99563:CD,99567:CD,99568:CD,99572:CD,99581:CD,99582:CD,99586:CD,99595:CD,99599:CD,99604:CD,99608:CD,99613:CD,99621:CD,99625:CD,99633:CD,99640:CD,99644:CD,99649:CD,99656:CD,99667:CD,99676:JM,99421
99368 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v4 = new org.biojava.nbio.structure.DBRef::
99376 :: CALL :: call :: V :: v4.setIdCode(v7)::CL,116279
99384 :: CALL :: call :: V :: v4.setDbAccession(v10)::CL,116290
99392 :: CALL :: call :: V :: v4.setDbIdCode(v13)::CL,116301
99400 :: CALL :: call :: V :: v4.setChainId(v16)::CL,116312
99408 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: v21 = p0 $this .getStructRef(v19)::JM,99413:CL,116323
99413 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 96::CD,99416:CD,99421:CD,99425:CD,99430:CD,99435:CD,99440:CD,99453:CD,99461
99416 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
99421 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $sref .getRef_id()::JM,99586:JM,99559:JM,99495:JM,99465:JM,99496:JM,99500:JM,99567:JM,99473:JM,99568:JM,99572:JM,99481:JM,99482:JM,99421:JM,99581:JM,99551:JM,99582:JM,99486
99425 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v30.append(v34)::JM,99586:JM,99572:JM,99495:JM,99481:JM,99581:JM,99500:JM,99567:JM,99486
99430 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( for StructRefSeq ))::JM,99495:JM,99481:JM,99581:JM,99567
99435 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(p1 $sref )::
99440 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
99453 :: CALL :: call :: V :: v4.setDatabase(v24)::CL,116369
99461 :: CALL :: call :: V :: v4.setDbIdCode(v27)::CL,116301
99465 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $sref .getPdbx_auth_seq_align_beg()::JM,99586:JM,99559:JM,99495:JM,99465:JM,99496:JM,99500:JM,99567:JM,99473:JM,99568:JM,99572:JM,99481:JM,99482:JM,99421:JM,99581:JM,99551:JM,99582:JM,99486
99469 :: CALL :: call :: I :: v48 = parseInt(v46)::JM,99586:JM,99572:JM,99495:JM,99481:JM,99581:JM,99500:JM,99567:JM,99486
99473 :: CALL :: call :: Ljava/lang/String :: v50 = p1 $sref .getPdbx_auth_seq_align_end()::JM,99586:JM,99559:JM,99495:JM,99465:JM,99496:JM,99500:JM,99567:JM,99473:JM,99568:JM,99572:JM,99481:JM,99482:JM,99421:JM,99581:JM,99551:JM,99582:JM,99486
99477 :: CALL :: call :: I :: v52 = parseInt(v50)::JM,99586:JM,99572:JM,99495:JM,99481:JM,99581:JM,99500:JM,99567:JM,99486
99481 :: NORM :: declaration :: Ljava/lang/Character :: v53 = new java.lang.Character::JM,99495:JM,99481:JM,99581:JM,99567:JM,99513:JM,99586:JM,99559:JM,99465:JM,99496:JM,99500:JM,99473:JM,99568:JM,99572:JM,99482:JM,99421:JM,99551:JM,99582:JM,99486
99482 :: CALL :: call :: Ljava/lang/String :: v55 = p1 $sref .getPdbx_seq_align_beg_ins_code()::JM,99586:JM,99559:JM,99495:JM,99465:JM,99496:JM,99500:JM,99567:JM,99473:JM,99568:JM,99572:JM,99481:JM,99482:JM,99421:JM,99581:JM,99551:JM,99582:JM,99486
99486 :: CALL :: call :: C :: v58 = v55.charAt(#(0))::JM,99586:JM,99572:JM,99495:JM,99481:JM,99581:JM,99500:JM,99567:JM,99486
99495 :: NORM :: declaration :: Ljava/lang/Character :: v60 = new java.lang.Character::JM,99495:JM,99481:JM,99581:JM,99567:JM,99522:JM,99586:JM,99559:JM,99465:JM,99496:JM,99500:JM,99473:JM,99568:JM,99572:JM,99482:JM,99421:JM,99551:JM,99582:JM,99486
99496 :: CALL :: call :: Ljava/lang/String :: v62 = p1 $sref .getPdbx_seq_align_end_ins_code()::JM,99586:JM,99559:JM,99495:JM,99465:JM,99496:JM,99500:JM,99567:JM,99473:JM,99568:JM,99572:JM,99481:JM,99482:JM,99421:JM,99581:JM,99551:JM,99582:JM,99486
99500 :: CALL :: call :: C :: v64 = v62.charAt(#(0))::JM,99586:JM,99572:JM,99495:JM,99481:JM,99581:JM,99500:JM,99567:JM,99486
99509 :: CALL :: call :: C :: v67 = v53.charValue()::JM,99513
99513 :: PRED :: IF :: Z :: if (v67 != #(63)) goto 181::CD,99514
99514 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(32))::
99518 :: CALL :: call :: C :: v74 = v60.charValue()::JM,99522
99523 :: CALL :: call :: Ljava/lang/Character :: v76 = valueOf(#(32))::
99522 :: PRED :: IF :: Z :: if (v74 != #(63)) goto 199::CD,99523
99527 :: CALL :: call :: V :: v4.setSeqBegin(v48)::CL,116380
99535 :: CALL :: call :: V :: v4.setInsertBegin(v80)::CL,116391
99539 :: CALL :: call :: V :: v4.setSeqEnd(v52)::CL,116402
99547 :: CALL :: call :: V :: v4.setInsertEnd(v84)::CL,116413
99551 :: CALL :: call :: Ljava/lang/String :: v87 = p1 $sref .getDb_align_beg()::JM,99586:JM,99559:JM,99495:JM,99465:JM,99496:JM,99500:JM,99567:JM,99473:JM,99568:JM,99572:JM,99481:JM,99482:JM,99421:JM,99581:JM,99551:JM,99582:JM,99486
99555 :: CALL :: call :: I :: v89 = parseInt(v87)::JM,99586:JM,99572:JM,99495:JM,99481:JM,99581:JM,99500:JM,99567:JM,99486
99559 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $sref .getDb_align_end()::JM,99586:JM,99559:JM,99495:JM,99465:JM,99496:JM,99500:JM,99567:JM,99473:JM,99568:JM,99572:JM,99481:JM,99482:JM,99421:JM,99581:JM,99551:JM,99582:JM,99486
99563 :: CALL :: call :: I :: v93 = parseInt(v91)::JM,99586:JM,99572:JM,99495:JM,99481:JM,99581:JM,99500:JM,99567:JM,99486
99567 :: NORM :: declaration :: Ljava/lang/Character :: v94 = new java.lang.Character::JM,99495:JM,99481:JM,99581:JM,99567:JM,99599:JM,99586:JM,99559:JM,99465:JM,99496:JM,99500:JM,99473:JM,99568:JM,99572:JM,99482:JM,99421:JM,99551:JM,99582:JM,99486
99568 :: CALL :: call :: Ljava/lang/String :: v96 = p1 $sref .getPdbx_db_align_beg_ins_code()::JM,99586:JM,99559:JM,99495:JM,99465:JM,99496:JM,99500:JM,99567:JM,99473:JM,99568:JM,99572:JM,99481:JM,99482:JM,99421:JM,99581:JM,99551:JM,99582:JM,99486
99572 :: CALL :: call :: C :: v98 = v96.charAt(#(0))::JM,99586:JM,99572:JM,99495:JM,99481:JM,99581:JM,99500:JM,99567:JM,99486
99581 :: NORM :: declaration :: Ljava/lang/Character :: v100 = new java.lang.Character::JM,99495:JM,99481:JM,99581:JM,99567:JM,99608:JM,99586:JM,99559:JM,99465:JM,99496:JM,99500:JM,99473:JM,99568:JM,99572:JM,99482:JM,99421:JM,99551:JM,99582:JM,99486
99582 :: CALL :: call :: Ljava/lang/String :: v102 = p1 $sref .getPdbx_db_align_end_ins_code()::JM,99586:JM,99559:JM,99495:JM,99465:JM,99496:JM,99500:JM,99567:JM,99473:JM,99568:JM,99572:JM,99481:JM,99482:JM,99421:JM,99581:JM,99551:JM,99582:JM,99486
99586 :: CALL :: call :: C :: v104 = v102.charAt(#(0))::JM,99586:JM,99572:JM,99495:JM,99481:JM,99581:JM,99500:JM,99567:JM,99486
99595 :: CALL :: call :: C :: v107 = v94.charValue()::JM,99599
99599 :: PRED :: IF :: Z :: if (v107 != #(63)) goto 297::CD,99600
99600 :: CALL :: call :: Ljava/lang/Character :: v109 = valueOf(#(32))::
99604 :: CALL :: call :: C :: v112 = v100.charValue()::JM,99608
99609 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(32))::
99608 :: PRED :: IF :: Z :: if (v112 != #(63)) goto 315::CD,99609
99613 :: CALL :: call :: V :: v4.setDbSeqBegin(v89)::CL,116424
99621 :: CALL :: call :: V :: v4.setIdbnsBegin(v118)::CL,116435
99625 :: CALL :: call :: V :: v4.setDbSeqEnd(v93)::CL,116446
99633 :: CALL :: call :: V :: v4.setIdbnsEnd(v122)::CL,116457
99640 :: CALL :: call :: Ljava/util/List :: v126 = v124.getDBRefs()::JM,99644:JM,99676:CL,62919
99645 :: NORM :: declaration :: Ljava/util/ArrayList :: v127 = new java.util.ArrayList::DD,99676
99644 :: PRED :: IF :: Z :: if (v126 != #(null)) goto 370::CF,99676:CF,99645
99649 :: CALL :: call :: Z :: v131 = v129.add(v4)::
99656 :: CALL :: call :: Ljava/lang/String :: v134 = v4.toPDB()::CL,116468
99667 :: CALL :: call :: V :: v136.setDBRefs(v129)::CL,62928
99676 :: EXPR :: assign :: null :: PHI v129 = v126, v127::
99765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,99773
99770 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .sequenceDifs::
99773 :: CALL :: call :: Z :: v6 = v4.add(p1 $sref )::
99794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,99802
99799 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structSiteGens::
99802 :: CALL :: call :: Z :: v6 = v4.add(p1 $siteGen )::
99817 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,99825:CD,99829:JM,99857:JM,99866
99825 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,99829:CL,94376
99829 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,99834:CD,99838:CD,99843:CD,99867:CD,99871:CD,99872:CD,99881:CD,99889:CD,99893:CD,99902:CD,99907:CD,99908:CD,99909:CD,99910
99834 :: CALL :: call :: Ljava/util/List :: v10 = v8.getSites()::JM,99907:JM,99838:CL,63143
99839 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,99907
99838 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 36::CF,99907:CF,99839
99843 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,99852:JM,99871
99848 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,99852:JM,99871
99853 :: CALL :: call :: Ljava/lang/String :: v23 = v21.getSiteID()::JM,99866:CL,114054
99852 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,99908
99857 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $structSite .getId()::JM,99857:JM,99866
99861 :: CALL :: call :: Z :: v27 = v23.equals(v25)::JM,99866
99867 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,99852:JM,99871
99866 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 78::CF,99908
99871 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 48::CD,99848:CD,99852:CD,99853:CD,99857:CD,99861:CD,99866:CD,99867:CD,99908:JM,99871:CF,99872
99873 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v29 = new org.biojava.nbio.structure.Site::DD,99909
99872 :: PRED :: IF :: Z :: if (v28 != #(null)) goto 106::CF,99909:CF,99873:JM,114073:CD,99910
99881 :: CALL :: call :: V :: v32.setSiteID(v35)::CL,114096
99889 :: CALL :: call :: V :: v32.setDescription(v38)::CL,116490
99893 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 134::CD,99894
99894 :: CALL :: call :: Z :: v41 = v14.add(v32)::
99902 :: CALL :: call :: V :: v42.setSites(v14)::CL,63152
99907 :: EXPR :: assign :: null :: PHI v14 = v10, v12::JM,99852:JM,99871
99909 :: EXPR :: assign :: null :: PHI v32 = v28, v29::CF,99910
99908 :: EXPR :: assign :: null :: PHI v28 = #(null), v28, v21::JM,99852:JM,99871:DD,99872:DD,99908:DD,99909
99910 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::DD,99893
99948 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,99955:CD,99960:CD,99965:CD,99973:CD,99977:CD,99984:CD,99989:CD,99993:CD,99998:CD,100006:CD,100011:CD,100175:JM,100081:JM,100019:JM,100085:JM,100077
99955 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
99960 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $epolseq )::
99965 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
99973 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $epolseq .getEntity_id()::JM,100081:JM,100019:JM,99973:JM,100085:JM,100077
99977 :: CALL :: call :: I :: v17 = parseInt(v15)::JM,100081:JM,100085
99984 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
99989 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
99993 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
99998 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
100006 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v33 = p0 $this .getEntity(v31)::JM,100011:CL,112436
100011 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 114::CD,100014:CD,100019:CD,100023:CD,100028:CD,100033:CD,100046:CD,100055:CD,100059:CD,100154:CD,100158:CD,100166:CD,100170
100014 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v95 = new java.lang.StringBuilder::
100019 :: CALL :: call :: Ljava/lang/String :: v99 = p1 $epolseq .getEntity_id()::JM,100081:JM,100019:JM,99973:JM,100085:JM,100077
100023 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v95.append(v99)::JM,100081:JM,100085
100028 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(. Can not match seque...))::JM,100085
100033 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
100046 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v38 = p0 $this .getEntityChain(v36)::CL,94385
100055 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v42 = getGroupFromChemCompDictionary(v40)::JM,100069:JM,100059:CL,116501
100059 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 176::CD,100060:CD,100064:CD,100068:CD,100077:CD,100081:CD,100085:JM,100019:JM,99973
100060 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v42.getChemComp()::CL,116734
100064 :: CALL :: call :: Z :: v46 = v44.isEmpty()::JM,100068:CL,116794
100069 :: EXPR :: assign :: Z :: v81=v42 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,100070
100068 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 176::CD,100069:CD,100070:CD,100077:CD,100081:CD,100085:JM,100019:JM,99973
100070 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 297::CD,100072
100072 :: CALL :: call :: V :: v82.setRecordType(#(SEQRES))::CL,88889
100077 :: CALL :: call :: Ljava/lang/String :: v49 = p1 $epolseq .getMon_id()::JM,100081:JM,100019:JM,99973:JM,100085:JM,100077
100081 :: CALL :: call :: I :: v51 = v49.length()::JM,100081:JM,100085
100085 :: PRED :: IF :: Z :: if (v51 != #(3)) goto 237::CD,100090:CD,100094:CD,100120:CD,100124
100090 :: CALL :: call :: Ljava/lang/Character :: v56 = get1LetterCodeAmino(v54)::JM,100094:CL,57228
100094 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 237::JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,100099:CD,100107:CD,100111:CD,100120:CD,100124
100099 :: CALL :: call :: V :: v72.setRecordType(#(SEQRES))::CL,88889
100107 :: CALL :: call :: Ljava/lang/Character :: v79 = get1LetterCodeAmino(v77)::CL,57228
100111 :: CALL :: call :: V :: v72.setAminoType(v79)::CL,88878
100120 :: CALL :: call :: Z :: v60 = isNucleotide(v58)::JM,100124:CL,57243
100124 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 262::JM,88486:JM,88502:JM,88504:JM,88506:JM,88479
100154 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v88 = fromString(v86)::CL,74739
100158 :: CALL :: call :: V :: v84.setResidueNumber(v88)::CL,88562
100166 :: CALL :: call :: V :: v84.setPDBName(v91)::CL,88573:CL,88858
100170 :: CALL :: call :: V :: v38.addGroup(v84)::CL,63901
100175 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
100253 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,100261
100258 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcGens::
100261 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcGen )::
100270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,100278
100275 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcNats::
100278 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcNat )::
100299 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,100307
100304 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcSyns::
100307 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcSyn )::
100322 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,100330
100327 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structAsyms::
100330 :: CALL :: call :: Z :: v6 = v4.add(p1 $sasym )::
100345 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,100357:CD,100362:JM,100368:JM,100364
100357 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,100362
100362 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,100364:CD,100368
100364 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,100368:JM,100364
100368 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,100380:CD,100398
100380 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
100398 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
100418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,100430:CD,100435:JM,100437:JM,100441
100430 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,100435
100435 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,100437:CD,100441
100437 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,100437:JM,100441
100441 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,100453:CD,100471
100453 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
100471 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
100515 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,100523:CD,100527:CD,100536:CD,100544
100523 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,100527:CL,62878
100527 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,74432:JM,74407:JM,74439:JM,74399:JM,74415
100536 :: CALL :: call :: V :: v10.setDescription(v12)::CL,63004
100544 :: CALL :: call :: V :: v10.setClassification(v15)::CL,116828
100559 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,100571:CD,100575:CD,100576:CD,100615:CD,100622:CD,100627:CD,100631:CD,100636:CD,100641:CD,100645:CD,100650:CD,100658:CD,100662:CD,100663:CD,100694:CD,100698:CD,100731
100571 :: CALL :: call :: F :: v8 = v6.getResolution()::JM,100575:CL,116839
100575 :: EXPR :: assign :: Z :: v10 = v8 < #(99.0 f)::DD,100576
100576 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 58::CD,100584:CD,100588:CD,100596
100584 :: CALL :: call :: F :: v20 = v6.getResolution()::JM,100588:CL,116839
100588 :: CALL :: call :: Ljava/lang/Float :: v22 = valueOf(v20)::JM,100588
100596 :: CALL :: call :: Ljava/lang/String :: v24 = format(#(%4.2f), v18)::
100615 :: CALL :: call :: V :: v6.setResolution(v29)::CL,115937
100622 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
100627 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $r .getLs_d_res_high()::JM,100694:JM,100698
100631 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::JM,100698
100636 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v39.append(#( ))::
100641 :: CALL :: call :: Ljava/lang/String :: v44 = v31.getMessage()::
100645 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(v44)::
100650 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
100658 :: CALL :: call :: F :: v52 = v6.getRfree()::JM,100662:CL,116848
100663 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 157::CD,100671:CD,100675:CD,100683:JM,100694:JM,100698
100662 :: EXPR :: assign :: Z :: v54 = v52 < #(1.0 f)::DD,100663
100671 :: CALL :: call :: F :: v61 = v6.getRfree()::JM,100675:CL,116848
100675 :: CALL :: call :: Ljava/lang/Float :: v63 = valueOf(v61)::JM,100675
100683 :: CALL :: call :: Ljava/lang/String :: v65 = format(#(%4.2f), v59)::
100694 :: CALL :: call :: Ljava/lang/String :: v68 = p1 $r .getLs_R_factor_R_free()::JM,100694:JM,100698
100698 :: PRED :: IF :: Z :: if (v68 != #(null)) goto 179::CD,100714
100714 :: CALL :: call :: V :: v6.setRfree(v73)::CL,116857
100731 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
100769 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,100774:CD,100778:CD,100799:CD,100809:JM,100803
100774 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $c .getId()::JM,100803:JM,100774:JM,100778:JM,100799
100778 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 33::CD,100781:CD,100786:CD,100791:JM,100803:JM,100774:JM,100778:JM,100799
100781 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
100786 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p1 $c )::
100791 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
100799 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $c .getId()::JM,100803:JM,100774:JM,100778:JM,100799
100803 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .latestChemCompId = v17::
100809 :: CALL :: call :: V :: v18.addChemComp(p1 $c )::CL,116868
100860 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,100865:CD,100869:CD,100873:CD,100877:CD,100881:CD,100904:CD,100905:CD,100909:CD,100914:CD,100926:CD,100930:CD,100973:CD,100974
100865 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $aa .getName()::JM,100865:JM,100881:JM,100877
100869 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v6 = new java.lang.StringBuffer::
100873 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
100877 :: CALL :: call :: [C :: v12 = v5.toCharArray()::JM,100881:JM,100877
100881 :: EXPR :: assign :: I :: v13 = v12.length::DD,100904
100883 :: EXPR :: reference :: C :: v14 = v12[v25]::DD,100887:DD,100889
100887 :: PRED :: IF :: Z :: if (v14 != #(32)) goto 62::CD,100889:CD,100972
100889 :: PRED :: IF :: Z :: if (v14 != #(44)) goto 73::CD,100891:CD,100972
100891 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 90::CD,100892:CD,100898:CD,100972
100892 :: CALL :: call :: Ljava/lang/StringBuffer :: v19 = v8.append(v14)::
100898 :: CALL :: call :: Ljava/lang/StringBuffer :: v21 = v6.append(v14)::
100903 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v25 + #(1)::DD,100974:CF,100973
100905 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v26 = new java.lang.StringBuffer::
100904 :: PRED :: IF :: Z :: if (v25 < v13) goto 45::CF,100905:CD,100887:CD,100903:CD,100972:CD,100973:CD,100974
100909 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v26.append(v8)::
100914 :: CALL :: call :: Ljava/lang/StringBuffer :: v31 = v26.append(v6)::
100926 :: CALL :: call :: Ljava/lang/String :: v36 = v34.getAuthors()::JM,100930:CL,116961
100931 :: CALL :: call :: Ljava/lang/String :: v53 = v26.toString()::
100930 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 164::CF,100940:CD,100931:CD,100935:CD,100941:CD,100949:CD,100954:CD,100958:CD,100963:CD,100967
100935 :: CALL :: call :: V :: v34.setAuthors(v53)::CL,116970
100941 :: CALL :: call :: Ljava/lang/String :: v40 = valueOf(v36)::
100940 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
100949 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(#(,))::
100954 :: CALL :: call :: Ljava/lang/String :: v46 = v26.toString()::
100958 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v46)::
100963 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
100967 :: CALL :: call :: V :: v34.setAuthors(v50)::CL,116970
100973 :: EXPR :: assign :: null :: PHI v24 = #(0), v22::CF,100974:DD,100891:DD,100972
100972 :: EXPR :: assign :: null :: PHI v22 = v24, #(1), v24, v24::DD,100973:CF,100903
100974 :: EXPR :: assign :: null :: PHI v25 = #(0), v23::DD,100903:DD,100904
101038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,101049
101049 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,116981
101076 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStructOperList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,101084
101081 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structOpers::
101084 :: CALL :: call :: Z :: v6 = v4.add(p1 $structOper )::
101105 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,101113
101110 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblies::
101113 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
101122 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,101130
101127 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblyGens::
101130 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
101151 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,101162
101162 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,116981
101187 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,101198
101198 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,116981
101247 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,101255
101252 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structConn::
101255 :: CALL :: call :: Z :: v6 = v4.add(p1 $structConn )::
101289 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setTitle(java.lang.String)::JM,101294
101294 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
101309 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setIdCode(java.lang.String)::JM,101314
101314 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
101338 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getBufferedReader(java.io.InputStream)::CD,101344:CD,101350:CD,101351
101344 :: NORM :: declaration :: Ljava/io/IOException :: v9 = new java.io.IOException::
101351 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v6 = new java.io.InputStreamReader::
101350 :: NORM :: declaration :: Ljava/io/BufferedReader :: v5 = new java.io.BufferedReader::CF,101351
101368 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.BufferedReader)::JM,62817:JM,74432:JM,62789:JM,74407:JM,74439:JM,62824:JM,62796:JM,74415:JM,62831:JM,62803:JM,62810:JM,62779:JM,74399:CD,101400:CD,101407:CD,101414:CD,101434:CD,101456:CD,101462:CD,101477:CD,101483:CD,101489:CD,101495:CD,101507:CD,101517:CD,101868:CD,101872:CD,101879:CD,101884:CD,101890:CD,101894:CD,101901:CD,101905:CD,101912:CD,101916:JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101400 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::
101407 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::
101414 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::
101434 :: NORM :: declaration :: Ljava/util/ArrayList :: v21 = new java.util.ArrayList::
101453 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .sourceLines::
101456 :: CALL :: call :: V :: v24.clear()::
101459 :: EXPR :: reference :: Ljava/util/List :: v26 = p0 $this .compndLines::
101462 :: CALL :: call :: V :: v26.clear()::
101474 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .compounds::
101477 :: CALL :: call :: V :: v30.clear()::
101480 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .helixList::
101483 :: CALL :: call :: V :: v32.clear()::
101486 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .strandList::
101489 :: CALL :: call :: V :: v34.clear()::
101492 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .turnList::
101495 :: CALL :: call :: V :: v36.clear()::
101507 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::
101514 :: EXPR :: reference :: Ljava/util/Map :: v40 = p0 $this .siteToResidueMap::
101517 :: CALL :: call :: V :: v40.clear()::
101531 :: CALL :: call :: Z :: v48 = v46.equals(#())::JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101537 :: EXPR :: reference :: Ljava/lang/String :: v50 = org.biojava.nbio.structure.io.PDBFileParser.NEWLINE::JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101536 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 778::CD,101537:CD,101539:CD,101544:JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101539 :: CALL :: call :: Z :: v52 = v46.equals(v50)::JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101544 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 271::CD,101546:CD,101551:JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101546 :: CALL :: call :: Z :: v55 = v46.startsWith(#(TER))::JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101551 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 778::CD,101552:CD,101557:JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101563:JM,101627:JM,101756:JM,101822
101552 :: CALL :: call :: Z :: v58 = v46.startsWith(#(END))::JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101557 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 291::CD,101559:CD,101563:JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101627:JM,101756:JM,101822
101559 :: CALL :: call :: I :: v60 = v46.length()::JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101563 :: PRED :: IF :: Z :: if (v60 >= #(6)) goto 337::CD,101566:CD,101571:CD,101576:CD,101581:CD,101590:CD,101596:CD,101600:CD,101605:JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101566 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
101571 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v139.append(v46)::JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101576 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v143.append(#(<))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101581 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101590 :: CALL :: call :: Ljava/lang/String :: v63 = v46.substring(#(0), #(6))::JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101596 :: CALL :: call :: Ljava/lang/String :: v65 = v63.trim()::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101600 :: CALL :: call :: Z :: v68 = v65.equals(#(ATOM))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101605 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 366::CD,101606:CD,101611:CD,101616:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101606 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,116998
101611 :: CALL :: call :: Z :: v71 = v65.equals(#(SEQRES))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101617 :: CALL :: call :: V :: p0 $this .pdb_SEQRES_Handler(v46)::CL,118197
101616 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 384::CD,101617:CD,101622:CD,101627:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101622 :: CALL :: call :: Z :: v74 = v65.equals(#(HETATM))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101627 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 402::CD,101628:CD,101633:CD,101638:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101628 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,116998
101633 :: CALL :: call :: Z :: v77 = v65.equals(#(MODEL))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101639 :: CALL :: call :: V :: p0 $this .pdb_MODEL_Handler(v46)::CL,118461
101638 :: PRED :: IF :: Z :: if (v77 == #(0)) goto 420::CD,101639:CD,101644:CD,101649:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101644 :: CALL :: call :: Z :: v80 = v65.equals(#(HEADER))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101649 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 438::CD,101650:CD,101655:CD,101660:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101756:JM,101852:JM,101822
101650 :: CALL :: call :: V :: p0 $this .pdb_HEADER_Handler(v46)::CL,118577
101655 :: CALL :: call :: Z :: v83 = v65.equals(#(AUTHOR))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101661 :: CALL :: call :: V :: p0 $this .pdb_AUTHOR_Handler(v46)::CL,118833
101660 :: PRED :: IF :: Z :: if (v83 == #(0)) goto 456::CD,101661:CD,101666:CD,101671:JM,101697:JM,101605:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101666 :: CALL :: call :: Z :: v86 = v65.equals(#(TITLE))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101671 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 474::CD,101672:CD,101677:CD,101682:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101672 :: CALL :: call :: V :: p0 $this .pdb_TITLE_Handler(v46)::CL,118904
101677 :: CALL :: call :: Z :: v89 = v65.equals(#(SOURCE))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101683 :: EXPR :: reference :: Ljava/util/List :: v157 = p0 $this .sourceLines::
101682 :: PRED :: IF :: Z :: if (v89 == #(0)) goto 498::CD,101686:CD,101692:CD,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101686 :: CALL :: call :: Z :: v159 = v157.add(v46)::JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101692 :: CALL :: call :: Z :: v92 = v65.equals(#(COMPND))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101697 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 522::CD,101701:CD,101707:CD,101712:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101698 :: EXPR :: reference :: Ljava/util/List :: v160 = p0 $this .compndLines::
101701 :: CALL :: call :: Z :: v162 = v160.add(v46)::JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101707 :: CALL :: call :: Z :: v95 = v65.equals(#(JRNL))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101713 :: CALL :: call :: V :: p0 $this .pdb_JRNL_Handler(v46)::CL,119054
101712 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 540::CD,101713:CD,101718:CD,101723:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101718 :: CALL :: call :: Z :: v98 = v65.equals(#(EXPDTA))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101723 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 558::CD,101724:CD,101729:CD,101734:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101724 :: CALL :: call :: V :: p0 $this .pdb_EXPDTA_Handler(v46)::CL,119139
101729 :: CALL :: call :: Z :: v101 = v65.equals(#(CRYST1))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101735 :: CALL :: call :: V :: p0 $this .pdb_CRYST1_Handler(v46)::CL,119218
101734 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 576::CD,101735:CD,101740:CD,101745:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101740 :: CALL :: call :: Z :: v104 = v65.startsWith(#(MTRIX))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101745 :: PRED :: IF :: Z :: if (v104 == #(0)) goto 594::CD,101746:CD,101751:CD,101756:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101852:JM,101822
101746 :: CALL :: call :: V :: p0 $this .pdb_MTRIXn_Handler(v46)::CL,119572
101751 :: CALL :: call :: Z :: v107 = v65.equals(#(REMARK))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101757 :: CALL :: call :: V :: p0 $this .pdb_REMARK_Handler(v46)::CL,119926
101756 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 612::CD,101757:CD,101762:CD,101767:JM,101697:JM,101605:JM,101671:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101762 :: CALL :: call :: Z :: v110 = v65.equals(#(CONECT))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101767 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 630::CD,101768:CD,101773:CD,101778:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101768 :: CALL :: call :: V :: p0 $this .pdb_CONECT_Handler(v46)::CL,120251
101773 :: CALL :: call :: Z :: v113 = v65.equals(#(REVDAT))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101779 :: CALL :: call :: V :: p0 $this .pdb_REVDAT_Handler(v46)::CL,120614
101778 :: PRED :: IF :: Z :: if (v113 == #(0)) goto 648::CD,101779:CD,101784:CD,101789:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101660:JM,101756:JM,101852:JM,101822
101784 :: CALL :: call :: Z :: v116 = v65.equals(#(DBREF))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101789 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 666::CD,101790:CD,101795:CD,101800:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101790 :: CALL :: call :: V :: p0 $this .pdb_DBREF_Handler(v46)::CL,120709
101795 :: CALL :: call :: Z :: v119 = v65.equals(#(SITE))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101801 :: CALL :: call :: V :: p0 $this .pdb_SITE_Handler(v46)::CL,121034
101800 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 684::CD,101801:CD,101806:CD,101811:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101806 :: CALL :: call :: Z :: v122 = v65.equals(#(SSBOND))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101811 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 702::CD,101812:CD,101817:CD,101822:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852
101812 :: CALL :: call :: V :: p0 $this .pdb_SSBOND_Handler(v46)::CL,121638
101817 :: CALL :: call :: Z :: v125 = v65.equals(#(LINK))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101823 :: CALL :: call :: V :: p0 $this .pdb_LINK_Handler(v46)::CL,121938
101822 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 717::CD,101823:CD,101831:CD,101835
101831 :: CALL :: call :: Z :: v128 = v126.isParseSecStruc()::JM,101835:CL,122194
101835 :: PRED :: IF :: Z :: if (v128 == #(0)) goto 778::CD,101836:CD,101841:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822:JM,101536:JM,101544:JM,101551:JM,101872:JM,101557:JM,101563
101836 :: CALL :: call :: Z :: v131 = v65.equals(#(HELIX))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101841 :: PRED :: IF :: Z :: if (v131 == #(0)) goto 748::CD,101842:CD,101847:CD,101852:JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101822
101842 :: CALL :: call :: V :: p0 $this .pdb_HELIX_Handler(v46)::CL,122203
101847 :: CALL :: call :: Z :: v134 = v65.equals(#(SHEET))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101853 :: CALL :: call :: V :: p0 $this .pdb_SHEET_Handler(v46)::CL,122429
101852 :: PRED :: IF :: Z :: if (v134 == #(0)) goto 766::CD,101853:CD,101858:CD,101863:JM,101697:JM,101605:JM,101671:JM,101767:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101858 :: CALL :: call :: Z :: v137 = v65.equals(#(TURN))::JM,101697:JM,101605:JM,101671:JM,101767:JM,101863:JM,101638:JM,101734:JM,101800:JM,101649:JM,101745:JM,101841:JM,101616:JM,101712:JM,101811:JM,101682:JM,101778:JM,101627:JM,101723:JM,101789:JM,101660:JM,101756:JM,101852:JM,101822
101863 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 778::CD,101864:JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101864 :: CALL :: call :: V :: p0 $this .pdb_TURN_Handler(v46)::CL,122655
101868 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $buf .readLine()::JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101536:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101872 :: PRED :: IF :: Z :: if (v46 != #(null)) goto 248::CD,101531:CD,101536:CD,101868:JM,101697:JM,101767:JM,101638:JM,101649:JM,101841:JM,101712:JM,101778:JM,101723:JM,101789:JM,101660:JM,101852:JM,101605:JM,101671:JM,101863:JM,101734:JM,101544:JM,101800:JM,101551:JM,101745:JM,101872:JM,101616:JM,101811:JM,101682:JM,101557:JM,101563:JM,101627:JM,101756:JM,101822
101879 :: CALL :: call :: V :: p0 $this .makeCompounds(v177, v178)::CL,122881
101884 :: CALL :: call :: V :: p0 $this .triggerEndFileChecks()::CL,123017
101890 :: CALL :: call :: Z :: v183 = v181.shouldCreateAtomBonds()::JM,101894:CL,95710
101895 :: CALL :: call :: V :: p0 $this .formBonds()::CL,123484
101894 :: PRED :: IF :: Z :: if (v183 == #(0)) goto 817::CD,101895
101901 :: CALL :: call :: Z :: v187 = v185.shouldCreateAtomCharges()::JM,101905:CL,95753
101905 :: PRED :: IF :: Z :: if (v187 == #(0)) goto 831::CD,101906
101906 :: CALL :: call :: V :: p0 $this .addCharges()::CL,123548
101912 :: CALL :: call :: Z :: v191 = v189.isParseSecStruc()::JM,101916:CL,122194
101916 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 855::CD,101920:CD,101924
101920 :: CALL :: call :: Z :: v194 = v192.isHeaderOnly()::JM,101924:CL,94376
101925 :: CALL :: call :: V :: p0 $this .setSecStruc()::CL,123560
101924 :: PRED :: IF :: Z :: if (v194 != #(0)) goto 855::CD,101925
102179 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache,org.biojava.nbio.structure.quaternary.io.BioUnitDataProvider)::JM,86828
102178 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache,org.biojava.nbio.structure.quaternary.io.BioUnitDataProvider)::CE,102179:CD,102185:CD,102189:CD,102194:CD,102240:CD,102245:CD,102250:CD,102255:CD,102260:CD,102298:CD,102303:CD,102308:CD,102313:CD,102318:JM,102220
102185 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $pdbId .toLowerCase()::JM,102189:JM,102220
102189 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p4 $provider .getAsymUnit(v7)::JM,102189:JM,102220
102194 :: PRED :: IF :: Z :: if (p2 $biolAssemblyNr  != #(0)) goto 52::CD,102197:CD,102202:CD,102207:CD,102212:CD,102220:JM,96518:JM,96511:CD,102331:CD,102337
102197 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
102202 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v65.append(v7)::JM,102189:JM,102220
102207 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(#(, returning asymmetri...))::
102212 :: CALL :: call :: Ljava/lang/String :: v74 = v72.toString()::
102220 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v9::DD,102179
102240 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
102245 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(p2 $biolAssemblyNr )::
102250 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(#( of ))::
102255 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v58.append(v7)::JM,102189:JM,102220
102260 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
102298 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
102303 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v38.append(p2 $biolAssemblyNr )::
102308 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#( of ))::
102313 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v45.append(v7)::JM,102189:JM,102220
102318 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::
102331 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v36 = v33.rebuildQuaternaryStructure(v9, v29)::JM,102337:CL,123673
102337 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v36::DD,102179
102367 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int)::
102366 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int)::CE,102367:CD,102371:CD,102377
102371 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChain(#(0), p1 $number )::JM,102377:CL,63303
102377 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,102367
102383 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::CE,102384:CD,102387:CD,102391:CD,102416:CD,102420
102384 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::JM,86954:JM,88075
102387 :: CALL :: call :: Ljava/util/List :: v4 = p1 $c .getAtomGroups()::JM,102420:CL,45126
102391 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,102420
102396 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,102420
102401 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v14 = v12.getType()::JM,102407:CL,123906:CL,123890:CL,123898
102405 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v15 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,102407
102407 :: PRED :: IF :: Z :: if (v14 == v15) goto 50::CD,102408:CD,102412:CD,102414:CD,102415
102408 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v17 = v12.getType()::JM,102414:CL,123906:CL,123890:CL,123898
102412 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v18 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,102414
102415 :: NORM :: compound :: Z :: return #(0)::DD,102384
102414 :: PRED :: IF :: Z :: if (v17 != v18) goto 52::CD,102415:CD,102416:CD,102420
102416 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,102420
102421 :: NORM :: compound :: Z :: return #(1)::DD,102384
102420 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 16::CD,102396:CD,102401:CD,102405:CD,102407:CD,102421:JM,102420
102435 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::JM,151536:JM,151532:JM,151537:JM,151541
102434 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::CE,102435:CD,102440:CD,102651:CD,102655:CD,102656:CD,102660:CD,102668:CD,102669:JM,102450:JM,102575
102440 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v5 = new java.lang.StringBuffer::JM,102660
102445 :: CALL :: call :: Ljava/lang/Object :: v11 = p1 $groups .get(v111)::JM,102450:JM,102655
102451 :: EXPR :: assign :: Z :: v13=v12 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,102452
102450 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,102451
102452 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 100::CD,102454:CD,102458:CD,102462:CD,102463:CD,102467:CD,102471:CD,102477:CD,102482:CD,102484:CD,102488:CD,102661:CD,102666:CD,102667
102454 :: CALL :: call :: Ljava/lang/Character :: v16 = v14.getAminoType()::JM,102661:JM,102462:CL,88869
102458 :: CALL :: call :: C :: v18 = v16.charValue()::JM,102661:JM,102462
102463 :: CALL :: call :: Ljava/lang/Integer :: v23 = valueOf(v110)::
102462 :: PRED :: IF :: Z :: if (v18 != #(63)) goto 71::CF,102661
102467 :: CALL :: call :: Ljava/lang/Integer :: v25 = valueOf(v111)::
102471 :: CALL :: call :: Ljava/lang/Object :: v27 = p2 $positionIndex .put(v23, v25)::
102477 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v5.append(v21)::
102482 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v110 + #(1)::DD,102666
102484 :: CALL :: call :: Z :: v33 = v12.isWater()::JM,102488:CL,123914
102488 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 113::CD,102490:CD,102494:CD,102666:CD,102667
102490 :: CALL :: call :: I :: v35 = v12.size()::JM,102494:CL,123931
102495 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v37 = v12.getAtom(#(0))::JM,102500:CL,123944
102494 :: PRED :: IF :: Z :: if (v35 != #(1)) goto 158::CD,102495:CD,102500:CD,102512:CD,102516
102500 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 142::CD,102506:CD,102510:CD,102666:CD,102667
102506 :: CALL :: call :: Z :: v42 = v40.isMetal()::JM,102510:CL,123976
102510 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 158::CD,102512:CD,102516:CD,102666:CD,102667
102512 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v12.getChemComp()::JM,102516:CL,116734
102516 :: PRED :: IF :: Z :: if (v44 != #(null)) goto 189::CD,102519:CD,102529:CD,102531:CD,102535:CD,102540:CD,102666:CD,102667
102519 :: CALL :: call :: Ljava/lang/String :: v48 = v12.toString()::CL,103863:CL,104151:CL,104053
102529 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::JM,102535:JM,102540
102531 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v52 = v44.getResidueType()::JM,102535:JM,102540:CL,123989
102535 :: CALL :: call :: Z :: v54 = v50.equals(v52)::JM,102535:JM,102540
102540 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 237::CD,102547:CD,102552:CD,102565:CD,102569:CD,102574:CD,102589:CD,102593:CD,102633:CD,102637:CD,102662:CD,102663:CD,102664:CD,102665:CD,102666:CD,102667
102547 :: CALL :: call :: Z :: v59 = v55.contains(v57)::JM,102552
102552 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 237::CD,102559:CD,102564:CD,102565:CD,102569:CD,102574:CD,102589:CD,102593:CD,102633:CD,102637:CD,102662:CD,102663:CD,102664:CD,102665:CD,102666:CD,102667
102559 :: CALL :: call :: Z :: v64 = v60.contains(v62)::JM,102564
102565 :: CALL :: call :: Ljava/lang/String :: v66 = v44.getOne_letter_code()::JM,102662:JM,102574:CL,124007
102564 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 367::CD,102565:CD,102569:CD,102574:CD,102589:CD,102593:CD,102633:CD,102637:CD,102641:CD,102662:CD,102663:CD,102664:CD,102665:CD,102666:CD,102667
102569 :: CALL :: call :: Z :: v69 = v66.equals(#(?))::JM,102662:JM,102574
102575 :: PRED :: IF :: Z :: if (p3 $isNucleotideChain  == #(0)) goto 288::CD,102582:CD,102587:CD,102662
102574 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 288::CF,102662:CD,102575
102582 :: CALL :: call :: Z :: v74 = v70.contains(v72)::JM,102587
102587 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 288::CD,102662
102589 :: CALL :: call :: I :: v79 = v77.length()::JM,102593
102593 :: PRED :: IF :: Z :: if (v79 <= #(1)) goto 316::CD,102596
102596 :: CALL :: call :: Ljava/lang/String :: v83 = v12.toString()::CL,103863:CL,104151:CL,104053
102607 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v99)::
102611 :: CALL :: call :: Ljava/lang/Integer :: v90 = valueOf(v112)::
102615 :: CALL :: call :: Ljava/lang/Object :: v92 = p2 $positionIndex .put(v88, v90)::
102621 :: CALL :: call :: C :: v94 = v77.charAt(v100)::
102626 :: CALL :: call :: Ljava/lang/StringBuffer :: v96 = v5.append(v94)::
102631 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v99 + #(1)::DD,102663:CF,102632
102633 :: CALL :: call :: I :: v86 = v77.length()::JM,102637
102632 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v100 + #(1)::DD,102665:CF,102663
102637 :: PRED :: IF :: Z :: if (v100 < v86) goto 322::CD,102607:CD,102611:CD,102615:CD,102621:CD,102626:CD,102631:CD,102632:CD,102633:CD,102663:CD,102664:CD,102665
102641 :: CALL :: call :: Ljava/lang/String :: v104 = v12.toString()::CL,103863:CL,104151:CL,104053
102651 :: CALL :: call :: I :: v9 = p1 $groups .size()::JM,102450:JM,102655
102650 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v113 + #(1)::DD,102669:CF,102668
102655 :: PRED :: IF :: Z :: if (v111 < v9) goto 20::CD,102445:CD,102450:CD,102451:CD,102452:CD,102650:CD,102651:CD,102666:CD,102667:CD,102668:CD,102669:JM,102655:JM,102660
102656 :: CALL :: call :: Ljava/lang/String :: v115 = v5.toString()::JM,102660
102661 :: EXPR :: assign :: null :: PHI v21 = v18, #(88)::
102660 :: NORM :: compound :: Ljava/lang/String :: return v115::DD,102435
102663 :: EXPR :: assign :: null :: PHI v99 = v110, v97::CF,102664:DD,102631:DD,102666
102662 :: EXPR :: assign :: null :: PHI v77 = v66, #(N), #(X)::JM,102593:JM,102637
102665 :: EXPR :: assign :: null :: PHI v100 = #(0), v98::DD,102632:DD,102637
102664 :: EXPR :: assign :: null :: PHI v112 = v111, v112::CF,102665:DD,102664:DD,102667
102667 :: EXPR :: assign :: null :: PHI v113 = v111, v111, v111, v111, v111, v112, v111::DD,102650
102666 :: EXPR :: assign :: null :: PHI v106 = v31, v110, v110, v110, v110, v99, v110::CF,102667:DD,102668
102669 :: EXPR :: assign :: null :: PHI v111 = #(0), v109::JM,102450:DD,102655:DD,102664:DD,102667
102668 :: EXPR :: assign :: null :: PHI v110 = #(0), v106::CF,102669:DD,102482:DD,102663:DD,102666
102765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::CF,102766:CF,102776:CD,102777
102766 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::JM,87074:JM,87080
102777 :: NORM :: compound :: Z :: return #(1)::CF,102766
102776 :: NORM :: compound :: Z :: return #(0)::CF,102766
102781 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::CF,102782:CF,102799:CD,102786:CD,102791
102782 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::JM,87091:JM,87676:JM,87095:JM,87677
102786 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v4 = new org.biojava.nbio.core.sequence.ProteinSequence::DD,102791
102791 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return v4::CF,102782
102799 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return #(null)::CF,102782
102807 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::JM,87678
102806 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::CF,102807:CD,102812:CD,102815:CD,102821:CD,102822:CD,102830:CD,102834
102812 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getIdentity()::JM,102834:JM,102822:JM,102830
102815 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,102834:JM,102822:JM,102830
102821 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,102834:JM,102822:JM,102830:JM,102812
102822 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,102834:JM,102822:JM,102812:JM,102830
102830 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,102834:JM,102822:JM,102830
102834 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,102807
102847 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::JM,87111:JM,87117
102846 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::CF,102847:CF,102857:CD,102858
102857 :: NORM :: compound :: Z :: return #(0)::CF,102847
102858 :: NORM :: compound :: Z :: return #(1)::CF,102847
102863 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/DNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::JM,87128:JM,87676:JM,87677:JM,87132
102862 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::CF,102863:CF,102880:CD,102867:CD,102872
102867 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v4 = new org.biojava.nbio.core.sequence.DNASequence::DD,102872
102872 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return v4::CF,102863
102880 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return #(null)::CF,102863
102887 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::CF,102888:CD,102893:CD,102896:CD,102902:CD,102903:CD,102911:CD,102915
102888 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::JM,87678
102893 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,102915:JM,102903:JM,102911
102896 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,102915:JM,102903:JM,102911
102903 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,102915:JM,102903:JM,102893:JM,102911
102902 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,102915:JM,102903:JM,102911:JM,102893
102911 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,102915:JM,102903:JM,102911
102915 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,102888
102927 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::CF,102928:CF,102938:CD,102939
102928 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::JM,87148:JM,87154
102939 :: NORM :: compound :: Z :: return #(1)::CF,102928
102938 :: NORM :: compound :: Z :: return #(0)::CF,102928
102943 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::CF,102944:CF,102961:CD,102948:CD,102953
102944 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/RNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::JM,87165:JM,87676:JM,87169:JM,87677
102948 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v4 = new org.biojava.nbio.core.sequence.RNASequence::DD,102953
102953 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return v4::CF,102944
102961 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return #(null)::CF,102944
102969 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::JM,87678
102968 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::CF,102969:CD,102974:CD,102977:CD,102983:CD,102984:CD,102992:CD,102996
102974 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,102992:JM,102996:JM,102984
102977 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,102992:JM,102996:JM,102984
102983 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,102992:JM,102996:JM,102984:JM,102974
102984 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,102992:JM,102996:JM,102984:JM,102974
102992 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,102992:JM,102996:JM,102984
102996 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,102969
103009 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,87203
103008 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,103013:JM,103018:CF,103009:CD,103021:CD,103025:CD,103026:CD,103028:CD,103029
103013 :: CALL :: call :: Z :: v8 = p1 $pair .hasGap(v13)::JM,103025:JM,103013:JM,103018:JM,103021
103019 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v12 + #(1)::DD,103027
103018 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 20::CF,103027:CD,103019
103021 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,103025:JM,103013:JM,103018:JM,103021
103020 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v13 + #(1)::DD,103029:CF,103028
103025 :: PRED :: IF :: Z :: if (v13 <= v6) goto 9::CD,103013:CD,103018:CD,103020:CD,103021:CD,103027:CD,103028:CD,103029:JM,103025:CF,103026
103027 :: EXPR :: assign :: null :: PHI v10 = v12, v9::DD,103028:CF,103020
103026 :: NORM :: compound :: I :: return v12::CF,103009
103029 :: EXPR :: assign :: null :: PHI v13 = #(1), v11::JM,103013:JM,103018:JM,103021:DD,103020:DD,103025
103028 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,103029:DD,103019:DD,103026:DD,103027
103045 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,87211
103044 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,103049:JM,103054:CF,103045:CD,103067:CD,103071:CD,103072:CD,103074:CD,103075
103049 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInQueryAt(v19)::JM,103049:JM,103067:JM,103071:JM,103054
103055 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,103059:JM,103064:JM,103055
103054 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,103059:JM,103064:JM,103055
103059 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,103059:JM,103064
103065 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,103073
103064 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,103073:CD,103065
103067 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,103049:JM,103067:JM,103071:JM,103054
103066 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,103075:CF,103074
103071 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,103049:CD,103054:CD,103055:CD,103059:CD,103064:CD,103066:CD,103067:CD,103073:CD,103074:CD,103075:JM,103071:CF,103072
103073 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,103074:CF,103066
103072 :: NORM :: compound :: I :: return v18::CF,103045
103075 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,103049:JM,103067:JM,103054:DD,103066:DD,103071
103074 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,103075:DD,103065:DD,103072:DD,103073
103091 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,103096:JM,103101:CF,103092:CD,103114:CD,103118:CD,103119:CD,103121:CD,103122
103092 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,87214
103096 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInTargetAt(v19)::JM,103096:JM,103114:JM,103101:JM,103118
103101 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,103106:JM,103111:JM,103102
103102 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,103106:JM,103111:JM,103102
103106 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,103106:JM,103111
103111 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,103120:CD,103112
103113 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,103122:CF,103121
103112 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,103120
103114 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,103096:JM,103114:JM,103101:JM,103118
103119 :: NORM :: compound :: I :: return v18::CF,103092
103118 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,103096:CD,103101:CD,103102:CD,103106:CD,103111:CD,103113:CD,103114:CD,103120:CD,103121:CD,103122:JM,103118:CF,103119
103121 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,103122:DD,103112:DD,103119:DD,103120
103120 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,103121:CF,103113
103122 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,103096:JM,103114:JM,103101:DD,103113:DD,103118
103145 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = #(null)::
103148 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #(null)::
103151 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = #(null)::
103154 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = #(null)::
103157 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = #(null)::
103160 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = #(null)::
103163 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = #(null)::
103166 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = #(null)::
103169 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .numRes = #(null)::
103172 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resNames = #(null)::
103175 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .headerVars = #(null)::
103178 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = #(null)::
103181 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = #(null)::
103184 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = #(null)::
103187 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = #(null)::
103190 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = #(null)::
103193 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = #(null)::
103196 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = #(null)::
103199 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = #(null)::
103202 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = #(null)::
103205 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = #(null)::
103208 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = #(null)::
103211 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = #(null)::
103214 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = #(null)::
103217 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = #(null)::
103220 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = #(null)::
103223 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = #(null)::
103226 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = #(null)::
103229 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = #(null)::
103232 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = #(null)::
103235 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = #(null)::
103238 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = #(null)::
103241 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = #(null)::
103244 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = #(null)::
103247 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = #(null)::
103250 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = #(null)::
103253 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = #(null)::
103256 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = #(null)::
103259 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = #(null)::
103262 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = #(null)::
103265 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = #(null)::
103268 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = #(null)::
103271 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = #(null)::
103274 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,103278
103278 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = v5::
103281 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,103285
103285 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .chains2pdbResNums2ResSerials = v7::
103288 :: EXPR :: modify :: I :: p0 $this .molId = #(-1)::
103385 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.addChain(org.biojava.nbio.structure.Chain)::CD,103393
103390 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .chains::
103393 :: CALL :: call :: Z :: v6 = v4.add(p1 $chain )::
103402 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolId(int)::JM,103407
103407 :: EXPR :: modify :: I :: p0 $this .molId = p1 $molId ::
103413 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.areResNumbersAligned(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,103418:CD,103422:CD,103426
103418 :: CALL :: call :: Z :: v5 = isProtein(p1 $c1 )::JM,103426:JM,103428:CL,124016
103422 :: CALL :: call :: Z :: v7 = isProtein(p2 $c2 )::JM,103426:CL,124016
103426 :: PRED :: IF :: Z :: if (v5 == v7) goto 21::CD,103428:CD,103444:CD,103527:CD,103531:CD,103596
103428 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 39::CD,103431:CD,103439:CD,103596
103431 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c1 .getAtomGroups(v13)::JM,103596:CL,124033
103439 :: CALL :: call :: Ljava/util/List :: v12 = p1 $c1 .getAtomGroups(v10)::JM,103596:CL,124033
103444 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,103531
103449 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,103531
103458 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v27 = p2 $c2 .getGroupByPDB(v25)::CL,76387
103463 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getPDBName()::JM,103476:CL,47160
103467 :: CALL :: call :: Ljava/lang/String :: v31 = v23.getPDBName()::JM,103476:CL,47160
103471 :: CALL :: call :: Z :: v33 = v29.equals(v31)::JM,103476
103476 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 182::CD,103527:CD,103531
103527 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,103531
103531 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 66::CD,103449:CD,103458:CD,103463:CD,103467:CD,103471:CD,103476:JM,103531
103596 :: EXPR :: assign :: null :: PHI v16 = v15, v12::JM,103531
103739 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getMolId()::CE,103740:CD,103746
103740 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Compound.getMolId()::JM,112518:JM,135598:JM,135630
103743 :: EXPR :: reference :: I :: v3 = p0 $this .molId::DD,103746
103746 :: NORM :: compound :: I :: return v3::CF,103740
103748 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.toCanonical()::CD,103752:CD,103756
103752 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v4 = p0 $this .getBaseIdentifier()::CL,50264
103756 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v6 = v4.toCanonical()::CL,50980:CL,124171:CL,51580:CL,51554:CL,124186:CL,64319
103762 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toPDB()::CD,103769:CD,103806
103766 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .insCode::DD,103769
103769 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 34::CF,103770:CD,103777:CD,103782
103770 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
103777 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(v8)::
103782 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
103806 :: CALL :: call :: Ljava/lang/String :: v23 = format(#(%s%4d%-2s), v16)::
103831 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/multiple/BlockSetImpl :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.clone()::JM,88450
103830 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockSetImpl.clone()::CE,103831:CD,103834:JM,124240:JM,124285:CD,103839
103834 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/multiple/BlockSetImpl :: v3 = new org.biojava.nbio.structure.align.multiple.BlockSetImpl::DD,103839
103839 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/multiple/BlockSetImpl :: return v3::DD,103831
103843 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::JM,88657:JM,88745:JM,115459:JM,115509:JM,130137:JM,130187:JM,138415:JM,138469
103842 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::CE,103843:CD,103849
103846 :: EXPR :: reference :: C :: v3 = p0 $this .altLoc::DD,103849
103849 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 10::CD,103850:CD,103854:CD,103858
103851 :: EXPR :: reference :: C :: v5 = p0 $this .altLoc::JM,103858
103850 :: NORM :: compound :: Ljava/lang/Character :: return #(null)::DD,103843
103854 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(v5)::JM,103858
103858 :: NORM :: compound :: Ljava/lang/Character :: return v7::DD,103843
103863 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.toString()::CE,103864:CD,103867:CD,103875:CD,103880:CD,103888:CD,103893:CD,103901:CD,103906:CD,103914:CD,103919:CD,103927:CD,103932:CD,103940:CD,103945:CD,103952:CD,103983:CD,103987:CD,103991:CD,104023:CD,104024:CD,104025
103864 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AminoAcidImpl.toString()::
103867 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
103872 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .recordType::
103875 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
103880 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#(:))::
103885 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::
103888 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::
103893 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#( ))::
103901 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
103906 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(#( ))::
103914 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(v23)::JM,104024
103919 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#( ))::JM,104024
103924 :: EXPR :: reference :: Z :: v28 = p0 $this .pdb_flag::JM,104024
103927 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::JM,104024
103932 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v30.append(#( ))::JM,104024
103937 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .recordType::JM,104024
103940 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(v33)::JM,104024
103945 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,104024
103949 :: EXPR :: reference :: Z :: v38 = p0 $this .pdb_flag::DD,103952
103953 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::JM,104024
103952 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 120::CF,104024:CF,103953:CD,103954:CD,103962:CD,103970:CD,103974:CD,103979
103954 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v37)::
103962 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v40.append(#( atoms: ))::JM,104024
103967 :: EXPR :: reference :: Ljava/util/List :: v47 = p0 $this .atoms::JM,104024
103970 :: CALL :: call :: I :: v49 = v47.size()::JM,104024
103974 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v46.append(v49)::JM,104024
103979 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::JM,104024
103983 :: CALL :: call :: Ljava/util/List :: v56 = p0 $this .getAltLocs()::JM,103991:CL,74718
103987 :: CALL :: call :: Z :: v58 = v56.isEmpty()::JM,103991
103991 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 164::CF,104025:CF,103992:CD,103993:CD,104001:CD,104006:CD,104010:CD,104014:CD,104019
103993 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v54)::
103992 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,104025
104001 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v59.append(#( has altLocs :))::JM,104025
104006 :: CALL :: call :: Ljava/util/List :: v67 = p0 $this .getAltLocs()::JM,104025:CL,74718
104010 :: CALL :: call :: I :: v69 = v67.size()::JM,104025
104014 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::JM,104025
104019 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::JM,104025
104023 :: NORM :: compound :: Ljava/lang/String :: return v74::DD,103864
104025 :: EXPR :: assign :: null :: PHI v74 = v54, v73::CF,104023
104024 :: EXPR :: assign :: null :: PHI v54 = v37, v53::DD,104025
104053 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.toString()::CE,104054:CD,104057:CD,104065:CD,104070:CD,104078:CD,104083:CD,104091:CD,104096:CD,104103:CD,104134:CD,104135
104054 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.NucleotideImpl.toString()::
104057 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
104062 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .pdb_name::
104065 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
104070 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
104078 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,104135
104083 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,104135
104088 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,104135
104091 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,104135
104096 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,104135
104100 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,104103
104103 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 84::CF,104135:CF,104104:CD,104105:CD,104113:CD,104121:CD,104125:CD,104130
104105 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
104104 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,104135
104113 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#(atoms: ))::JM,104135
104118 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,104135
104121 :: CALL :: call :: I :: v33 = v31.size()::JM,104135
104125 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,104135
104130 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,104135
104135 :: EXPR :: assign :: null :: PHI v38 = v21, v37::CF,104134
104134 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,104054
104151 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.toString()::CE,104152:CD,104155:CD,104163:CD,104168:CD,104176:CD,104181:CD,104189:CD,104194:CD,104201:CD,104235:CD,104266:CD,104267:CD,104268
104152 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.toString()::
104155 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
104163 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,104267
104168 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::JM,104267
104173 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::JM,104267
104176 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,104267
104181 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,104267
104186 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,104267
104189 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,104267
104194 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,104267
104198 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,104201
104201 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 86::CF,104267:CF,104202:CD,104203:CD,104211:CD,104219:CD,104223:CD,104228
104203 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
104202 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,104267
104211 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#( atoms: ))::JM,104267
104216 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,104267
104219 :: CALL :: call :: I :: v33 = v31.size()::JM,104267
104223 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,104267
104228 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,104267
104232 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .altLocs::DD,104235
104235 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 126::CF,104268:CF,104236:CD,104237:CD,104245:CD,104253:CD,104257:CD,104262
104237 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v38)::
104236 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::JM,104268
104245 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v41.append(#( has altLocs :))::JM,104268
104250 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .altLocs::JM,104268
104253 :: CALL :: call :: I :: v50 = v48.size()::JM,104268
104257 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v50)::JM,104268
104262 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::JM,104268
104267 :: EXPR :: assign :: null :: PHI v38 = v21, v37::DD,104268
104266 :: NORM :: compound :: Ljava/lang/String :: return v55::DD,104152
104268 :: EXPR :: assign :: null :: PHI v55 = v38, v54::CF,104266
104299 :: EXPR :: modify :: I :: p0 $this .m = p1 $m ::
104302 :: EXPR :: modify :: I :: p0 $this .n = p2 $n ::
104305 :: NORM :: declaration :: [[D :: v6 = new [][]::DD,104306
104306 :: EXPR :: modify :: [[D :: p0 $this .A = v6::
104319 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.jama.Matrix.getArray()::
104318 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getArray()::CE,104319:CD,104325
104322 :: EXPR :: reference :: [[D :: v3 = p0 $this .A::DD,104325
104325 :: NORM :: compound :: [[D :: return v3::CF,104319
104335 :: CALL :: call :: [[D :: v6 = p1 $Arg .getArrayCopy()::CL,124372
104339 :: CALL :: call :: I :: v8 = p1 $Arg .getRowDimension()::JM,104343:CL,124440
104343 :: EXPR :: modify :: I :: p0 $this .m = v8::
104346 :: CALL :: call :: I :: v10 = p1 $Arg .getColumnDimension()::JM,104350:CL,124449
104350 :: EXPR :: modify :: I :: p0 $this .n = v10::
104353 :: EXPR :: reference :: I :: v11 = p0 $this .m::JM,105298:JM,104359:JM,105099:JM,104383:JM,105007
104356 :: EXPR :: reference :: I :: v12 = p0 $this .n::JM,105298:JM,104359:JM,105099:JM,104383:JM,105007
104359 :: CALL :: call :: I :: v14 = min(v11, v12)::JM,105298:JM,104359:JM,105099:JM,104383:JM,105007
104364 :: EXPR :: reference :: I :: v15 = p0 $this .m::DD,104367
104367 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v15 + #(1)::JM,104371:JM,104376
104368 :: EXPR :: reference :: I :: v18 = p0 $this .n::JM,104371:JM,104376
104371 :: CALL :: call :: I :: v20 = min(v17, v18)::JM,104371:JM,104376
104377 :: EXPR :: modify :: [D :: p0 $this .s = v21::
104376 :: NORM :: declaration :: [D :: v21 = new []::DD,104377
104380 :: EXPR :: reference :: I :: v22 = p0 $this .m::DD,104383
104383 :: NORM :: declaration :: [[D :: v23 = new [][]::DD,104384
104384 :: EXPR :: modify :: [[D :: p0 $this .U = v23::
104387 :: EXPR :: reference :: I :: v24 = p0 $this .n::DD,104393
104390 :: EXPR :: reference :: I :: v25 = p0 $this .n::DD,104393
104393 :: NORM :: declaration :: [[D :: v26 = new [][]::DD,104394
104394 :: EXPR :: modify :: [[D :: p0 $this .V = v26::
104397 :: EXPR :: reference :: I :: v27 = p0 $this .n::DD,104400
104401 :: EXPR :: reference :: I :: v29 = p0 $this .m::DD,104404
104400 :: NORM :: declaration :: [D :: v28 = new []::
104405 :: EXPR :: reference :: I :: v31 = p0 $this .m::DD,104408
104404 :: NORM :: declaration :: [D :: v30 = new []::
104409 :: EXPR :: reference :: I :: v33 = p0 $this .n::JM,104928:JM,105008:JM,106480:JM,104912:JM,104435:JM,104659:JM,104566:JM,104907:JM,104412
104408 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v31 - #(1)::JM,104928:JM,105008:JM,106480:JM,104912:JM,104435:JM,104659:JM,104566:JM,104907:JM,104412
104412 :: CALL :: call :: I :: v35 = min(v32, v33)::JM,104928:JM,105008:JM,106480:JM,104912:JM,104435:JM,104659:JM,104566:JM,104907:JM,104412
104417 :: EXPR :: reference :: I :: v37 = p0 $this .n::DD,104420
104421 :: EXPR :: reference :: I :: v40 = p0 $this .m::JM,104688:JM,104912:JM,105204:JM,104424:JM,104907:JM,104429:JM,104956
104420 :: EXPR :: assign :: Ljava/lang/Object :: v39 = v37 - #(2)::JM,104688:JM,104912:JM,105204:JM,104424:JM,104907:JM,104429:JM,104956
104424 :: CALL :: call :: I :: v42 = min(v39, v40)::JM,104688:JM,104912:JM,105204:JM,104424:JM,104907:JM,104429:JM,104956
104429 :: CALL :: call :: I :: v44 = max(#(0), v42)::JM,104688:JM,104912:JM,105204:JM,104907:JM,104429:JM,104956
104435 :: PRED :: IF :: Z :: if (v217 >= v35) goto 309::CF,106436:CD,104475:CD,104483:CD,104484:CD,104559:CD,106431:CD,106432:CD,106435
104436 :: EXPR :: reference :: [D :: v47 = p0 $this .s::
104439 :: EXPR :: modify :: D :: v47[v217] = #(0.0 d)::
104444 :: EXPR :: reference :: [D :: v50 = p0 $this .s::
104462 :: CALL :: call :: D :: v56 = hypot(v52, v54)::JM,104467:CL,124458
104467 :: EXPR :: modify :: D :: v50[v218] = v56::
104471 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v58 + #(1)::DD,106432:CF,106431
104472 :: EXPR :: reference :: I :: v49 = p0 $this .m::DD,104475
104475 :: PRED :: IF :: Z :: if (v58 < v49) goto 170::CD,104462:CD,104471:CD,106431:CD,106432
104476 :: EXPR :: reference :: [D :: v59 = p0 $this .s::
104479 :: EXPR :: reference :: D :: v60 = v59[v218]::DD,104483
104483 :: EXPR :: assign :: Z :: v61 = v60 < #(0.0 d)::DD,104484
104485 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v6[v218]::
104484 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 292::CF,106435:CD,104493:CD,104494:CD,104535:CD,104544:CD,106433:CD,106434
104489 :: EXPR :: reference :: D :: v63 = v62[v218]::DD,104493
104493 :: EXPR :: assign :: Z :: v64 = v63 > #(0.0 d)::DD,104494
104495 :: EXPR :: reference :: [D :: v65 = p0 $this .s::
104494 :: PRED :: IF :: Z :: if (v64 >= #(0)) goto 248::CD,104505
104498 :: EXPR :: reference :: [D :: v66 = p0 $this .s::
104501 :: EXPR :: reference :: D :: v67 = v66[v218]::DD,104505
104505 :: EXPR :: assign :: Ljava/lang/Object :: v68 = -(v67)::DD,104506
104506 :: EXPR :: modify :: D :: v65[v218] = v68::
104511 :: EXPR :: reference :: Ljava/lang/Object :: v70 = v6[v76]::
104515 :: EXPR :: reference :: D :: v71 = v70[v219]::DD,104526
104519 :: EXPR :: reference :: [D :: v72 = p0 $this .s::
104522 :: EXPR :: reference :: D :: v73 = v72[v219]::DD,104526
104527 :: EXPR :: modify :: D :: v70[v219] = v74::
104526 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v71 / v73::DD,104527
104531 :: EXPR :: assign :: Ljava/lang/Object :: v75 = v76 + #(1)::DD,106434:CF,106433
104532 :: EXPR :: reference :: I :: v69 = p0 $this .m::DD,104535
104535 :: PRED :: IF :: Z :: if (v76 < v69) goto 254::CD,104526:CD,104531:CD,106433:CD,106434
104536 :: EXPR :: reference :: Ljava/lang/Object :: v77 = v6[v219]::
104540 :: EXPR :: reference :: D :: v78 = v77[v219]::DD,104544
104545 :: EXPR :: modify :: D :: v77[v219] = v80::
104544 :: EXPR :: assign :: Ljava/lang/Object :: v80 = v78 + #(1.0 d)::DD,104545
104549 :: EXPR :: reference :: [D :: v82 = p0 $this .s::
104552 :: EXPR :: reference :: [D :: v83 = p0 $this .s::
104555 :: EXPR :: reference :: D :: v84 = v83[v220]::DD,104559
104559 :: EXPR :: assign :: Ljava/lang/Object :: v85 = -(v84)::DD,104560
104560 :: EXPR :: modify :: D :: v82[v220] = v85::
104564 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v221 + #(1)::DD,106449
104566 :: PRED :: IF :: Z :: if (v222 >= v35) goto 328::CD,106437
104568 :: EXPR :: reference :: [D :: v89 = p0 $this .s::
104571 :: EXPR :: reference :: D :: v90 = v89[v222]::DD,104575
104575 :: EXPR :: assign :: Z :: v91 = v90 < #(0.0 d)::DD,104576
104576 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 344::CD,106438
104579 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 449::CF,106446:CD,104603:CD,104604:CD,104613:CD,104641:CD,106439:CD,106440:CD,106441:CD,106442:CD,106443:CD,106444:CD,106445:CD,106447
104578 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v88 && v92::DD,104579
104581 :: EXPR :: reference :: Ljava/lang/Object :: v95 = v6[v103]::
104585 :: EXPR :: reference :: D :: v96 = v95[v223]::DD,104597
104589 :: EXPR :: reference :: Ljava/lang/Object :: v97 = v6[v103]::
104593 :: EXPR :: reference :: D :: v98 = v97[v121]::DD,104597
104597 :: EXPR :: assign :: Ljava/lang/Object :: v99 = v96 * v98::CF,104598
104599 :: EXPR :: assign :: Ljava/lang/Object :: v101 = v103 + #(1)::DD,106442:CF,106439
104598 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v102 + v99::DD,106441:CF,104599
104600 :: EXPR :: reference :: I :: v94 = p0 $this .m::DD,104603
104603 :: PRED :: IF :: Z :: if (v103 < v94) goto 363::CD,104597:CD,104598:CD,104599:CD,106439:CD,106440:CD,106441:CD,106442:CF,104604
104605 :: EXPR :: reference :: Ljava/lang/Object :: v105 = v6[v223]::
104604 :: EXPR :: assign :: Ljava/lang/Object :: v104 = -(v102)::DD,104613
104609 :: EXPR :: reference :: D :: v106 = v105[v223]::DD,104613
104613 :: EXPR :: assign :: Ljava/lang/Object :: v107 = v104 / v106::DD,104631
104615 :: EXPR :: reference :: Ljava/lang/Object :: v109 = v6[v116]::
104619 :: EXPR :: reference :: D :: v110 = v109[v122]::DD,104632
104623 :: EXPR :: reference :: Ljava/lang/Object :: v111 = v6[v116]::
104627 :: EXPR :: reference :: D :: v112 = v111[v224]::DD,104631
104631 :: EXPR :: assign :: Ljava/lang/Object :: v113 = v107 * v112::CF,104632
104633 :: EXPR :: modify :: D :: v109[v122] = v114::
104632 :: EXPR :: assign :: Ljava/lang/Object :: v114 = v110 + v113::DD,104633
104637 :: EXPR :: assign :: Ljava/lang/Object :: v115 = v116 + #(1)::DD,106445:CF,106443
104638 :: EXPR :: reference :: I :: v108 = p0 $this .m::DD,104641
104641 :: PRED :: IF :: Z :: if (v116 < v108) goto 413::CF,106446:CD,104631:CD,104632:CD,104637:CD,106443:CD,106444:CD,106445
104642 :: EXPR :: reference :: Ljava/lang/Object :: v117 = v6[v225]::
104646 :: EXPR :: reference :: D :: v118 = v117[v123]::DD,104650
104650 :: EXPR :: modify :: D :: v28[v123] = v118::
104655 :: EXPR :: reference :: I :: v87 = p0 $this .n::DD,104658
104654 :: EXPR :: assign :: Ljava/lang/Object :: v119 = v123 + #(1)::DD,106449:CF,106448
104659 :: PRED :: IF :: Z :: if (v222 >= v35) goto 480::CD,106450
104658 :: PRED :: IF :: Z :: if (v120 < v87) goto 319::CD,104566:CD,104575:CD,104576:CD,104578:CD,104579:CD,104654:CD,106437:CD,106438:CD,106446:CD,106447:CD,106448:CD,106449:CF,104659
104661 :: EXPR :: assign :: Ljava/lang/Object :: v125 = #(1) && v124::DD,104662
104662 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 524::CF,106453:CD,104687:CD,106451:CD,106452
104664 :: EXPR :: reference :: [[D :: v127 = p0 $this .U::
104667 :: EXPR :: reference :: Ljava/lang/Object :: v128 = v127[v132]::
104671 :: EXPR :: reference :: Ljava/lang/Object :: v129 = v6[v132]::
104675 :: EXPR :: reference :: D :: v130 = v129[v226]::DD,104679
104679 :: EXPR :: modify :: D :: v128[v226] = v130::
104683 :: EXPR :: assign :: Ljava/lang/Object :: v131 = v132 + #(1)::DD,106452:CF,106451
104684 :: EXPR :: reference :: I :: v126 = p0 $this .m::DD,104687
104687 :: PRED :: IF :: Z :: if (v132 < v126) goto 492::CF,106453:CD,104683:CD,106451:CD,106452
104689 :: EXPR :: modify :: D :: v28[v227] = #(0.0 d)::
104688 :: PRED :: IF :: Z :: if (v227 >= v44) goto 903::CF,106476:CD,104693:CD,104716:CD,104721:CD,104722:CD,104773:CD,104778:CD,104782:CD,104788:CD,104789:CD,104791:CD,104792:CD,104883:CD,106454:CD,106455:CD,106458:CD,106459:CD,106460:CD,106473
104693 :: EXPR :: assign :: Ljava/lang/Object :: v134 = v227 + #(1)::DD,106455
104703 :: CALL :: call :: D :: v139 = hypot(v136, v137)::JM,104708:CL,124458
104708 :: EXPR :: modify :: D :: v28[v228] = v139::
104713 :: EXPR :: reference :: I :: v135 = p0 $this .n::DD,104716
104712 :: EXPR :: assign :: Ljava/lang/Object :: v140 = v141 + #(1)::DD,106455:CF,106454
104717 :: EXPR :: reference :: D :: v142 = v28[v228]::DD,104721
104716 :: PRED :: IF :: Z :: if (v141 < v135) goto 550::CD,104703:CD,104712:CD,106454:CD,106455
104721 :: EXPR :: assign :: Z :: v143 = v142 < #(0.0 d)::DD,104722
104723 :: EXPR :: assign :: Ljava/lang/Object :: v144 = v228 + #(1)::
104722 :: PRED :: IF :: Z :: if (v143 == #(0)) goto 658::CF,106458:CD,104723:CD,104728:CD,104729:CD,104739:CD,104758:CD,104759:CD,104764:CD,106456:CD,106457
104724 :: EXPR :: reference :: D :: v145 = v28[v144]::DD,104728
104729 :: PRED :: IF :: Z :: if (v146 >= #(0)) goto 608::CD,104734:CF,104739
104728 :: EXPR :: assign :: Z :: v146 = v145 > #(0.0 d)::DD,104729
104730 :: EXPR :: reference :: D :: v147 = v28[v228]::DD,104734
104735 :: EXPR :: modify :: D :: v28[v228] = v148::
104734 :: EXPR :: assign :: Ljava/lang/Object :: v148 = -(v147)::DD,104735
104739 :: EXPR :: assign :: Ljava/lang/Object :: v149 = v228 + #(1)::DD,106457
104741 :: EXPR :: reference :: D :: v151 = v28[v155]::DD,104749
104745 :: EXPR :: reference :: D :: v152 = v28[v229]::DD,104749
104749 :: EXPR :: assign :: Ljava/lang/Object :: v153 = v151 / v152::DD,104750
104750 :: EXPR :: modify :: D :: v28[v155] = v153::
104755 :: EXPR :: reference :: I :: v150 = p0 $this .n::DD,104758
104754 :: EXPR :: assign :: Ljava/lang/Object :: v154 = v155 + #(1)::DD,106457:CF,106456
104759 :: EXPR :: assign :: Ljava/lang/Object :: v156 = v229 + #(1)::
104758 :: PRED :: IF :: Z :: if (v155 < v150) goto 619::CD,104749:CD,104754:CD,106456:CD,106457:CF,104759
104760 :: EXPR :: reference :: D :: v157 = v28[v156]::DD,104764
104765 :: EXPR :: modify :: D :: v28[v156] = v158::
104764 :: EXPR :: assign :: Ljava/lang/Object :: v158 = v157 + #(1.0 d)::DD,104765
104769 :: EXPR :: reference :: D :: v160 = v28[v230]::DD,104773
104773 :: EXPR :: assign :: Ljava/lang/Object :: v161 = -(v160)::DD,104774
104774 :: EXPR :: modify :: D :: v28[v230] = v161::
104779 :: EXPR :: reference :: I :: v163 = p0 $this .m::DD,104782
104778 :: EXPR :: assign :: Ljava/lang/Object :: v162 = v230 + #(1)::DD,104782
104782 :: PRED :: IF :: Z :: if (v162 >= v163) goto 681::CD,106459
104784 :: EXPR :: reference :: D :: v165 = v28[v230]::DD,104788
104789 :: PRED :: IF :: Z :: if (v166 == #(0)) goto 692::CD,106460
104788 :: EXPR :: assign :: Z :: v166 = v165 < #(0.0 d)::DD,104789
104791 :: EXPR :: assign :: Ljava/lang/Object :: v168 = v164 && v167::DD,104792
104793 :: EXPR :: assign :: Ljava/lang/Object :: v169 = v230 + #(1)::DD,106462
104792 :: PRED :: IF :: Z :: if (v168 == #(0)) goto 864::CF,106473:CD,104793:CD,104803:CD,104804:CD,104839:CD,104840:CD,104882:CD,106461:CD,106462:CD,106466:CD,106467:CD,106471:CD,106472
104795 :: EXPR :: modify :: D :: v30[v172] = #(0.0 d)::
104799 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v172 + #(1)::DD,106462:CF,106461
104800 :: EXPR :: reference :: I :: v170 = p0 $this .m::DD,104803
104803 :: PRED :: IF :: Z :: if (v172 < v170) goto 710::CD,104799:CD,106461:CD,106462:CF,104804
104804 :: EXPR :: assign :: Ljava/lang/Object :: v173 = v231 + #(1)::DD,106467
104806 :: EXPR :: assign :: Ljava/lang/Object :: v175 = v232 + #(1)::DD,106465
104808 :: EXPR :: reference :: D :: v177 = v30[v184]::DD,104825
104812 :: EXPR :: reference :: D :: v178 = v28[v187]::DD,104824
104816 :: EXPR :: reference :: Ljava/lang/Object :: v179 = v6[v184]::
104820 :: EXPR :: reference :: D :: v180 = v179[v187]::DD,104824
104825 :: EXPR :: assign :: Ljava/lang/Object :: v182 = v177 + v181::DD,104826
104824 :: EXPR :: assign :: Ljava/lang/Object :: v181 = v178 * v180::CF,104825
104826 :: EXPR :: modify :: D :: v30[v184] = v182::
104831 :: EXPR :: reference :: I :: v176 = p0 $this .m::DD,104834
104830 :: EXPR :: assign :: Ljava/lang/Object :: v183 = v184 + #(1)::DD,106465:CF,106463
104835 :: EXPR :: assign :: Ljava/lang/Object :: v185 = v187 + #(1)::DD,106467:CF,106466
104834 :: PRED :: IF :: Z :: if (v184 < v176) goto 746::CD,104824:CD,104825:CD,104830:CD,106463:CD,106464:CD,106465:CF,104835
104836 :: EXPR :: reference :: I :: v174 = p0 $this .n::DD,104839
104839 :: PRED :: IF :: Z :: if (v186 < v174) goto 735::CD,104806:CD,104834:CD,104835:CD,106463:CD,106464:CD,106465:CD,106466:CD,106467:CF,104840
104840 :: EXPR :: assign :: Ljava/lang/Object :: v188 = v232 + #(1)::DD,106472
104842 :: EXPR :: reference :: D :: v190 = v28[v205]::DD,104846
104847 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v234 + #(1)::
104846 :: EXPR :: assign :: Ljava/lang/Object :: v191 = -(v190)::DD,104852:CF,104847
104848 :: EXPR :: reference :: D :: v193 = v28[v192]::DD,104852
104853 :: EXPR :: assign :: Ljava/lang/Object :: v195 = v234 + #(1)::DD,106470
104852 :: EXPR :: assign :: Ljava/lang/Object :: v194 = v191 / v193::DD,104867:CF,104853
104855 :: EXPR :: reference :: Ljava/lang/Object :: v197 = v6[v203]::
104859 :: EXPR :: reference :: D :: v198 = v197[v206]::DD,104868
104863 :: EXPR :: reference :: D :: v199 = v30[v203]::DD,104867
104867 :: EXPR :: assign :: Ljava/lang/Object :: v200 = v194 * v199::CF,104868
104869 :: EXPR :: modify :: D :: v197[v206] = v201::
104868 :: EXPR :: assign :: Ljava/lang/Object :: v201 = v198 + v200::DD,104869
104873 :: EXPR :: assign :: Ljava/lang/Object :: v202 = v203 + #(1)::DD,106470:CF,106468
104874 :: EXPR :: reference :: I :: v196 = p0 $this .m::DD,104877
104877 :: PRED :: IF :: Z :: if (v203 < v196) goto 823::CD,104867:CD,104868:CD,104873:CD,106468:CD,106469:CD,106470:CF,104878
104879 :: EXPR :: reference :: I :: v189 = p0 $this .n::DD,104882
104878 :: EXPR :: assign :: Ljava/lang/Object :: v204 = v206 + #(1)::DD,106472:CF,106471
104883 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 903::CF,106476:CD,104884:CD,104905:CD,106474:CD,106475
104882 :: PRED :: IF :: Z :: if (v205 < v189) goto 799::CF,106473:CD,104846:CD,104847:CD,104852:CD,104853:CD,104877:CD,104878:CD,106468:CD,106469:CD,106470:CD,106471:CD,106472
104884 :: EXPR :: assign :: Ljava/lang/Object :: v208 = v236 + #(1)::DD,106475
104886 :: EXPR :: reference :: [[D :: v210 = p0 $this .V::
104889 :: EXPR :: reference :: Ljava/lang/Object :: v211 = v210[v214]::
104893 :: EXPR :: reference :: D :: v212 = v28[v214]::DD,104897
104897 :: EXPR :: modify :: D :: v211[v237] = v212::
104901 :: EXPR :: assign :: Ljava/lang/Object :: v213 = v214 + #(1)::DD,106475:CF,106474
104902 :: EXPR :: reference :: I :: v209 = p0 $this .n::DD,104905
104905 :: PRED :: IF :: Z :: if (v214 < v209) goto 877::CF,106476:CD,104901:CD,106474:CD,106475
104907 :: CALL :: call :: I :: v46 = max(v35, v44)::JM,104928:JM,105008:JM,106480:JM,104912:JM,104907:JM,105204:JM,104956
104906 :: EXPR :: assign :: Ljava/lang/Object :: v216 = v238 + #(1)::DD,106477
104913 :: EXPR :: reference :: I :: v239 = p0 $this .n::JM,105329:JM,104947:JM,104962:JM,104951:JM,104920:JM,104971:JM,106586:JM,104957
104912 :: PRED :: IF :: Z :: if (v217 < v46) goto 151::CD,104435:CD,104564:CD,104658:CD,104659:CD,104661:CD,104662:CD,104688:CD,104906:CD,104907:CD,106436:CD,106448:CD,106449:CD,106450:CD,106453:CD,106476:CD,106477
104916 :: EXPR :: reference :: I :: v240 = p0 $this .m::DD,104919
104919 :: EXPR :: assign :: Ljava/lang/Object :: v241 = v240 + #(1)::JM,105329:JM,104947:JM,104962:JM,104951:JM,104920:JM,104971:JM,106586:JM,104957
104920 :: CALL :: call :: I :: v243 = min(v239, v241)::JM,105329:JM,104947:JM,104962:JM,104951:JM,104920:JM,104971:JM,106586:JM,104957
104925 :: EXPR :: reference :: I :: v244 = p0 $this .n::DD,104928
104929 :: EXPR :: reference :: [D :: v245 = p0 $this .s::
104928 :: PRED :: IF :: Z :: if (v35 >= v244) goto 957::
104932 :: EXPR :: reference :: Ljava/lang/Object :: v246 = v6[v35]::
104936 :: EXPR :: reference :: D :: v247 = v246[v35]::DD,104940
104940 :: EXPR :: modify :: D :: v245[v35] = v247::
104944 :: EXPR :: reference :: I :: v248 = p0 $this .m::DD,104947
104947 :: PRED :: IF :: Z :: if (v248 >= v243) goto 978::CD,104951:CF,104956
104948 :: EXPR :: reference :: [D :: v249 = p0 $this .s::
104951 :: EXPR :: assign :: Ljava/lang/Object :: v250 = v243 - #(1)::
104952 :: EXPR :: modify :: D :: v249[v250] = #(0.0 d)::
104957 :: PRED :: IF :: Z :: if (v251 >= v243) goto 1003::CD,104962:CF,104971
104956 :: EXPR :: assign :: Ljava/lang/Object :: v251 = v44 + #(1)::DD,104957
104958 :: EXPR :: reference :: Ljava/lang/Object :: v252 = v6[v44]::
104963 :: EXPR :: reference :: D :: v254 = v252[v253]::DD,104967
104962 :: EXPR :: assign :: Ljava/lang/Object :: v253 = v243 - #(1)::
104967 :: EXPR :: modify :: D :: v28[v44] = v254::
104971 :: EXPR :: assign :: Ljava/lang/Object :: v255 = v243 - #(1)::
104972 :: EXPR :: modify :: D :: v28[v255] = #(0.0 d)::
104976 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 1359::CD,105007:CD,105008:CD,105197:CD,106480:CD,106497:CF,105198
104979 :: EXPR :: reference :: [[D :: v257 = p0 $this .U::
104982 :: EXPR :: reference :: Ljava/lang/Object :: v258 = v257[v260]::
104986 :: EXPR :: modify :: D :: v258[v265] = #(0.0 d)::
104991 :: EXPR :: reference :: I :: v256 = p0 $this .m::DD,104994
104990 :: EXPR :: assign :: Ljava/lang/Object :: v259 = v260 + #(1)::DD,106479:CF,106478
104995 :: EXPR :: reference :: [[D :: v261 = p0 $this .U::
104994 :: PRED :: IF :: Z :: if (v260 < v256) goto 1025::CD,104990:CD,106478:CD,106479
104998 :: EXPR :: reference :: Ljava/lang/Object :: v262 = v261[v265]::
105002 :: EXPR :: modify :: D :: v262[v265] = #(1.0 d)::
105007 :: PRED :: IF :: Z :: if (v264 < v14) goto 1021::CD,104994:CD,105006:CD,106478:CD,106479:CD,106480:CF,105008
105006 :: EXPR :: assign :: Ljava/lang/Object :: v263 = v265 + #(1)::DD,106480
105008 :: EXPR :: assign :: Ljava/lang/Object :: v266 = v35 - #(1)::DD,106497
105010 :: EXPR :: reference :: [D :: v267 = p0 $this .s::
105013 :: EXPR :: reference :: D :: v268 = v267[v333]::DD,105017
105017 :: EXPR :: assign :: Z :: v269 = v268 < #(0.0 d)::DD,105018
105019 :: EXPR :: assign :: Ljava/lang/Object :: v270 = v333 + #(1)::DD,106489
105018 :: PRED :: IF :: Z :: if (v269 == #(0)) goto 1312::CD,105019:CD,105099:CD,105128:CD,105147:CD,105165:CD,105166:CD,105184:CD,106488:CD,106489:CD,106490:CD,106491:CD,106492:CD,106493:CD,106494:CD,106495:CD,106496
105022 :: EXPR :: reference :: [[D :: v272 = p0 $this .U::
105025 :: EXPR :: reference :: Ljava/lang/Object :: v273 = v272[v282]::
105029 :: EXPR :: reference :: D :: v274 = v273[v335]::DD,105044
105033 :: EXPR :: reference :: [[D :: v275 = p0 $this .U::
105036 :: EXPR :: reference :: Ljava/lang/Object :: v276 = v275[v282]::
105040 :: EXPR :: reference :: D :: v277 = v276[v301]::DD,105044
105045 :: EXPR :: assign :: Ljava/lang/Object :: v279 = v281 + v278::DD,106483:CF,105046
105044 :: EXPR :: assign :: Ljava/lang/Object :: v278 = v274 * v277::CF,105045
105047 :: EXPR :: reference :: I :: v271 = p0 $this .m::DD,105050
105046 :: EXPR :: assign :: Ljava/lang/Object :: v280 = v282 + #(1)::DD,106484:CF,106481
105051 :: EXPR :: assign :: Ljava/lang/Object :: v283 = -(v281)::DD,105063
105050 :: PRED :: IF :: Z :: if (v282 < v271) goto 1110::CD,105044:CD,105045:CD,105046:CD,106481:CD,106482:CD,106483:CD,106484:CF,105051
105052 :: EXPR :: reference :: [[D :: v284 = p0 $this .U::
105055 :: EXPR :: reference :: Ljava/lang/Object :: v285 = v284[v335]::
105059 :: EXPR :: reference :: D :: v286 = v285[v335]::DD,105063
105063 :: EXPR :: assign :: Ljava/lang/Object :: v287 = v283 / v286::DD,105087
105065 :: EXPR :: reference :: [[D :: v289 = p0 $this .U::
105068 :: EXPR :: reference :: Ljava/lang/Object :: v290 = v289[v298]::
105072 :: EXPR :: reference :: D :: v291 = v290[v302]::DD,105088
105076 :: EXPR :: reference :: [[D :: v292 = p0 $this .U::
105079 :: EXPR :: reference :: Ljava/lang/Object :: v293 = v292[v298]::
105083 :: EXPR :: reference :: D :: v294 = v293[v336]::DD,105087
105087 :: EXPR :: assign :: Ljava/lang/Object :: v295 = v287 * v294::CF,105088
105089 :: EXPR :: modify :: D :: v290[v302] = v296::
105088 :: EXPR :: assign :: Ljava/lang/Object :: v296 = v291 + v295::DD,105089
105093 :: EXPR :: assign :: Ljava/lang/Object :: v297 = v298 + #(1)::DD,106487:CF,106485
105094 :: EXPR :: reference :: I :: v288 = p0 $this .m::DD,105097
105097 :: PRED :: IF :: Z :: if (v298 < v288) goto 1169::CD,105087:CD,105088:CD,105093:CD,106485:CD,106486:CD,106487:CF,105098
105099 :: PRED :: IF :: Z :: if (v300 < v14) goto 1104::CD,105050:CD,105051:CD,105063:CD,105097:CD,105098:CD,106481:CD,106482:CD,106483:CD,106484:CD,106485:CD,106486:CD,106487:CD,106488:CD,106489
105098 :: EXPR :: assign :: Ljava/lang/Object :: v299 = v302 + #(1)::DD,106489:CF,106488
105101 :: EXPR :: reference :: [[D :: v304 = p0 $this .U::
105104 :: EXPR :: reference :: Ljava/lang/Object :: v305 = v304[v311]::
105108 :: EXPR :: reference :: [[D :: v306 = p0 $this .U::
105111 :: EXPR :: reference :: Ljava/lang/Object :: v307 = v306[v311]::
105115 :: EXPR :: reference :: D :: v308 = v307[v337]::DD,105119
105119 :: EXPR :: assign :: Ljava/lang/Object :: v309 = -(v308)::DD,105120
105120 :: EXPR :: modify :: D :: v305[v337] = v309::
105125 :: EXPR :: reference :: I :: v303 = p0 $this .m::DD,105128
105124 :: EXPR :: assign :: Ljava/lang/Object :: v310 = v311 + #(1)::DD,106491:CF,106490
105129 :: EXPR :: reference :: [[D :: v312 = p0 $this .U::
105128 :: PRED :: IF :: Z :: if (v311 < v303) goto 1223::CD,105119:CD,105124:CD,106490:CD,106491
105132 :: EXPR :: reference :: Ljava/lang/Object :: v313 = v312[v337]::
105136 :: EXPR :: reference :: [[D :: v314 = p0 $this .U::
105139 :: EXPR :: reference :: Ljava/lang/Object :: v315 = v314[v337]::
105143 :: EXPR :: reference :: D :: v316 = v315[v337]::DD,105147
105147 :: EXPR :: assign :: Ljava/lang/Object :: v317 = #(1.0 d) + v316::DD,105148
105148 :: EXPR :: modify :: D :: v313[v337] = v317::
105153 :: EXPR :: reference :: [[D :: v319 = p0 $this .U::
105156 :: EXPR :: reference :: Ljava/lang/Object :: v320 = v319[v322]::
105160 :: EXPR :: modify :: D :: v320[v338] = #(0.0 d)::
105165 :: EXPR :: assign :: Ljava/lang/Object :: v318 = v338 - #(1)::CF,105166
105164 :: EXPR :: assign :: Ljava/lang/Object :: v321 = v322 + #(1)::DD,106493:CF,106492
105166 :: PRED :: IF :: Z :: if (v322 < v318) goto 1284::CD,105164:CD,105165:CD,106492:CD,106493
105169 :: EXPR :: reference :: [[D :: v324 = p0 $this .U::
105172 :: EXPR :: reference :: Ljava/lang/Object :: v325 = v324[v327]::
105176 :: EXPR :: modify :: D :: v325[v339] = #(0.0 d)::
105181 :: EXPR :: reference :: I :: v323 = p0 $this .m::DD,105184
105180 :: EXPR :: assign :: Ljava/lang/Object :: v326 = v327 + #(1)::DD,106495:CF,106494
105185 :: EXPR :: reference :: [[D :: v328 = p0 $this .U::
105184 :: PRED :: IF :: Z :: if (v327 < v323) goto 1316::CD,105180:CD,106494:CD,106495
105188 :: EXPR :: reference :: Ljava/lang/Object :: v329 = v328[v339]::
105192 :: EXPR :: modify :: D :: v329[v339] = #(1.0 d)::
105197 :: PRED :: IF :: Z :: if (v333 >= #(0)) goto 1077::CD,105017:CD,105018:CD,105196:CD,106496:CD,106497:CF,105198
105196 :: EXPR :: assign :: Ljava/lang/Object :: v332 = v340 + #(-1)::DD,106497
105199 :: EXPR :: reference :: I :: v341 = p0 $this .n::DD,105202
105198 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 1588::CD,105202:CD,105328:CD,106512:CF,105329
105202 :: EXPR :: assign :: Ljava/lang/Object :: v342 = v341 - #(1)::DD,106512
105204 :: PRED :: IF :: Z :: if (v392 >= v44) goto 1389::CD,106498
105206 :: EXPR :: reference :: D :: v344 = v28[v392]::DD,105210
105211 :: PRED :: IF :: Z :: if (v345 == #(0)) goto 1400::CD,106499
105210 :: EXPR :: assign :: Z :: v345 = v344 < #(0.0 d)::DD,105211
105213 :: EXPR :: assign :: Ljava/lang/Object :: v347 = v343 && v346::DD,105214
105215 :: EXPR :: assign :: Ljava/lang/Object :: v348 = v392 + #(1)::DD,106508
105214 :: PRED :: IF :: Z :: if (v347 == #(0)) goto 1540::CF,106509:CD,105215:CD,105298:CD,106507:CD,106508
105217 :: EXPR :: assign :: Ljava/lang/Object :: v349 = v393 + #(1)::DD,106503
105219 :: EXPR :: reference :: [[D :: v351 = p0 $this .V::
105222 :: EXPR :: reference :: Ljava/lang/Object :: v352 = v351[v361]::
105226 :: EXPR :: reference :: D :: v353 = v352[v394]::DD,105241
105230 :: EXPR :: reference :: [[D :: v354 = p0 $this .V::
105233 :: EXPR :: reference :: Ljava/lang/Object :: v355 = v354[v361]::
105237 :: EXPR :: reference :: D :: v356 = v355[v382]::DD,105241
105241 :: EXPR :: assign :: Ljava/lang/Object :: v357 = v353 * v356::CF,105242
105243 :: EXPR :: assign :: Ljava/lang/Object :: v359 = v361 + #(1)::DD,106503:CF,106500
105242 :: EXPR :: assign :: Ljava/lang/Object :: v358 = v360 + v357::DD,106502:CF,105243
105244 :: EXPR :: reference :: I :: v350 = p0 $this .n::DD,105247
105247 :: PRED :: IF :: Z :: if (v361 < v350) goto 1428::CD,105241:CD,105242:CD,105243:CD,106500:CD,106501:CD,106502:CD,106503:CF,105248
105249 :: EXPR :: reference :: [[D :: v363 = p0 $this .V::
105248 :: EXPR :: assign :: Ljava/lang/Object :: v362 = -(v360)::DD,105261
105253 :: EXPR :: reference :: Ljava/lang/Object :: v365 = v363[v364]::
105252 :: EXPR :: assign :: Ljava/lang/Object :: v364 = v394 + #(1)::
105257 :: EXPR :: reference :: D :: v366 = v365[v394]::DD,105261
105261 :: EXPR :: assign :: Ljava/lang/Object :: v367 = v362 / v366::DD,105286:CF,105262
105262 :: EXPR :: assign :: Ljava/lang/Object :: v368 = v394 + #(1)::DD,106506
105264 :: EXPR :: reference :: [[D :: v370 = p0 $this .V::
105267 :: EXPR :: reference :: Ljava/lang/Object :: v371 = v370[v379]::
105271 :: EXPR :: reference :: D :: v372 = v371[v383]::DD,105287
105275 :: EXPR :: reference :: [[D :: v373 = p0 $this .V::
105278 :: EXPR :: reference :: Ljava/lang/Object :: v374 = v373[v379]::
105282 :: EXPR :: reference :: D :: v375 = v374[v395]::DD,105286
105287 :: EXPR :: assign :: Ljava/lang/Object :: v377 = v372 + v376::DD,105288
105286 :: EXPR :: assign :: Ljava/lang/Object :: v376 = v367 * v375::CF,105287
105288 :: EXPR :: modify :: D :: v371[v383] = v377::
105293 :: EXPR :: reference :: I :: v369 = p0 $this .n::DD,105296
105292 :: EXPR :: assign :: Ljava/lang/Object :: v378 = v379 + #(1)::DD,106506:CF,106504
105297 :: EXPR :: assign :: Ljava/lang/Object :: v380 = v383 + #(1)::DD,106508:CF,106507
105296 :: PRED :: IF :: Z :: if (v379 < v369) goto 1491::CD,105286:CD,105287:CD,105292:CD,106504:CD,106505:CD,106506:CF,105297
105298 :: PRED :: IF :: Z :: if (v381 < v14) goto 1419::CF,106509:CD,105217:CD,105247:CD,105248:CD,105252:CD,105261:CD,105262:CD,105296:CD,105297:CD,106500:CD,106501:CD,106502:CD,106503:CD,106504:CD,106505:CD,106506:CD,106507:CD,106508
105300 :: EXPR :: reference :: [[D :: v385 = p0 $this .V::
105303 :: EXPR :: reference :: Ljava/lang/Object :: v386 = v385[v388]::
105307 :: EXPR :: modify :: D :: v386[v397] = #(0.0 d)::
105311 :: EXPR :: assign :: Ljava/lang/Object :: v387 = v388 + #(1)::DD,106511:CF,106510
105312 :: EXPR :: reference :: I :: v384 = p0 $this .n::DD,105315
105315 :: PRED :: IF :: Z :: if (v388 < v384) goto 1544::CD,105311:CD,106510:CD,106511
105316 :: EXPR :: reference :: [[D :: v389 = p0 $this .V::
105319 :: EXPR :: reference :: Ljava/lang/Object :: v390 = v389[v397]::
105323 :: EXPR :: modify :: D :: v390[v397] = #(1.0 d)::
105327 :: EXPR :: assign :: Ljava/lang/Object :: v391 = v397 + #(-1)::DD,106512
105329 :: EXPR :: assign :: Ljava/lang/Object :: v398 = v243 - #(1)::DD,106260:DD,106427:JM,105377:JM,105330:JM,105429
105328 :: PRED :: IF :: Z :: if (v392 >= #(0)) goto 1377::CD,105204:CD,105210:CD,105211:CD,105213:CD,105214:CD,105315:CD,105327:CD,106498:CD,106499:CD,106509:CD,106510:CD,106511:CD,106512:CF,105329
105330 :: CALL :: call :: D :: v402 = pow(#(2.0 d), #(-52.0 d))::JM,105377:JM,105330:JM,105429
105335 :: CALL :: call :: D :: v405 = pow(#(2.0 d), #(-966.0 d))::JM,105378:JM,105335:JM,105430
105341 :: EXPR :: assign :: Ljava/lang/Object :: v406 = v863 - #(2)::DD,106515
105343 :: PRED :: IF :: Z :: if (v424 != #(-1)) goto 1641::CD,105349:CD,105360:CD,105367:CD,105372:CD,105376:CD,105377:CD,105378:CD,105379:CD,105380
105345 :: EXPR :: reference :: D :: v407 = v28[v424]::JM,105379:JM,105349
105349 :: CALL :: call :: D :: v409 = abs(v407)::JM,105379:JM,105349
105353 :: EXPR :: reference :: [D :: v410 = p0 $this .s::
105356 :: EXPR :: reference :: D :: v411 = v410[v424]::JM,105360:JM,105376
105360 :: CALL :: call :: D :: v413 = abs(v411)::JM,105360:JM,105376
105364 :: EXPR :: reference :: [D :: v414 = p0 $this .s::
105367 :: EXPR :: assign :: Ljava/lang/Object :: v415 = v424 + #(1)::
105368 :: EXPR :: reference :: D :: v416 = v414[v415]::JM,105376:JM,105372
105372 :: CALL :: call :: D :: v418 = abs(v416)::JM,105376:JM,105372
105377 :: EXPR :: assign :: Ljava/lang/Object :: v420 = v402 * v419::CF,105378
105376 :: EXPR :: assign :: Ljava/lang/Object :: v419 = v413 + v418::CF,105377
105379 :: EXPR :: assign :: Z :: v422 = v409 > v421::DD,105380
105378 :: EXPR :: assign :: Ljava/lang/Object :: v421 = v405 + v420::CF,105379
105381 :: EXPR :: modify :: D :: v28[v424] = #(0.0 d)::
105380 :: PRED :: IF :: Z :: if (v422 > #(0)) goto 1687::CD,105386:CD,105387:CD,106513:CD,106515
105387 :: PRED :: IF :: Z :: if (v424 >= #(-1)) goto 1631::CD,105343:CF,105388
105386 :: EXPR :: assign :: Ljava/lang/Object :: v423 = v424 + #(-1)::DD,106515:CF,106513
105389 :: PRED :: IF :: Z :: if (v424 != v425) goto 1714::CD,105391:CD,105442:CD,105443:CD,106518:CD,106520:CD,106521:CD,106523:CD,106524
105388 :: EXPR :: assign :: Ljava/lang/Object :: v425 = v864 - #(2)::CF,105389
105391 :: EXPR :: assign :: Ljava/lang/Object :: v427 = v864 - #(1)::DD,106520
105393 :: PRED :: IF :: Z :: if (v447 != v424) goto 1734::CD,105395:CD,105405:CD,105406:CD,105417:CD,105425:CD,105429:CD,105430:CD,105431:CD,105432:CD,106516:CD,106517
105395 :: PRED :: IF :: Z :: if (v447 == v865) goto 1754::CD,105400:CD,106516
105396 :: EXPR :: reference :: D :: v428 = v28[v447]::JM,106516:JM,105400
105400 :: CALL :: call :: D :: v430 = abs(v428)::JM,106516:JM,105400
105405 :: EXPR :: assign :: Ljava/lang/Object :: v432 = v424 + #(1)::CF,105406
105407 :: EXPR :: assign :: Ljava/lang/Object :: v433 = v447 - #(1)::
105406 :: PRED :: IF :: Z :: if (v447 == v432) goto 1772::CD,105407:CD,105412:CD,106517
105408 :: EXPR :: reference :: D :: v434 = v28[v433]::JM,106517:JM,105412
105412 :: CALL :: call :: D :: v436 = abs(v434)::JM,106517:JM,105412
105417 :: EXPR :: assign :: Ljava/lang/Object :: v438 = v431 + v437::DD,105429
105418 :: EXPR :: reference :: [D :: v439 = p0 $this .s::
105421 :: EXPR :: reference :: D :: v440 = v439[v447]::JM,105425:JM,105431
105425 :: CALL :: call :: D :: v442 = abs(v440)::JM,105425:JM,105431
105429 :: EXPR :: assign :: Ljava/lang/Object :: v443 = v402 * v438::CF,105430
105431 :: EXPR :: assign :: Z :: v445 = v442 > v444::DD,105432
105430 :: EXPR :: assign :: Ljava/lang/Object :: v444 = v405 + v443::CF,105431
105433 :: EXPR :: reference :: [D :: v448 = p0 $this .s::
105432 :: PRED :: IF :: Z :: if (v445 > #(0)) goto 1808::CD,105441:CD,105442:CD,106518:CD,106520
105436 :: EXPR :: modify :: D :: v448[v447] = #(0.0 d)::
105441 :: EXPR :: assign :: Ljava/lang/Object :: v446 = v447 + #(-1)::DD,106520:CF,106518
105443 :: PRED :: IF :: Z :: if (v447 != v424) goto 1836::CD,105445:CD,105446:CD,106521:CD,106523:CD,106524
105442 :: PRED :: IF :: Z :: if (v447 >= v424) goto 1724::CD,105393:CF,105443
105445 :: EXPR :: assign :: Ljava/lang/Object :: v450 = v865 - #(1)::CF,105446
105446 :: PRED :: IF :: Z :: if (v447 != v450) goto 1853::CD,106521:CD,106523:CD,106524
105449 :: PRED :: IF :: null :: switch v452::CF,106586:CD,105450:CD,105455:CD,105460:CD,105593:CD,105595:CD,105600:CD,105733:CD,105738:CD,105743:CD,105750:CD,105755:CD,105759:CD,105764:CD,105769:CD,105773:CD,105785:CD,105789:CD,105798:CD,105802:CD,105810:CD,105815:CD,105819:CD,105824:CD,105825:CD,105830:CD,105838:CD,105843:CD,105844:CD,105845:CD,105846:CD,105847:CD,105848:CD,105849:CD,105850:CD,105851:CD,105852:CD,105853:CD,105854:CD,105856:CD,105857:CD,105859:CD,105860:CD,105872:CD,105873:CD,105874:CD,105875:CD,105876:CD,106191:CD,106192:CD,106193:CD,106207:CD,106208:CD,106427:CD,106428:CD,106533:CD,106535:CD,106536:CD,106544:CD,106546:CD,106547:CD,106548:CD,106549:CD,106551:CD,106566:CD,106568:CD,106569:CD,106570:CD,106584:CD,106585
105448 :: EXPR :: assign :: Ljava/lang/Object :: v453 = v451 + #(1)::DD,105490:DD,105593:DD,105595:DD,105600:DD,105670:DD,105684:DD,105705:DD,105885:DD,106547:DD,106570:DD,106585:CF,105449
105451 :: EXPR :: reference :: D :: v455 = v28[v454]::DD,106535
105450 :: EXPR :: assign :: Ljava/lang/Object :: v454 = v866 - #(2)::
105455 :: EXPR :: assign :: Ljava/lang/Object :: v456 = v866 - #(2)::
105456 :: EXPR :: modify :: D :: v28[v456] = #(0.0 d)::
105460 :: EXPR :: assign :: Ljava/lang/Object :: v457 = v866 - #(2)::DD,106536
105469 :: CALL :: call :: D :: v461 = hypot(v459, v508)::JM,105481:JM,105482:JM,105486:CL,124458
105474 :: EXPR :: reference :: [D :: v462 = p0 $this .s::
105477 :: EXPR :: reference :: D :: v463 = v462[v509]::DD,105481
105481 :: EXPR :: assign :: Ljava/lang/Object :: v464 = v463 / v461::DD,105504:DD,105522:DD,105570:CF,105482
105483 :: EXPR :: reference :: [D :: v466 = p0 $this .s::
105482 :: EXPR :: assign :: Ljava/lang/Object :: v465 = v508 / v461::DD,105491:DD,105535:DD,105545
105486 :: EXPR :: modify :: D :: v466[v509] = v461::
105491 :: EXPR :: assign :: Ljava/lang/Object :: v467 = -(v465)::DD,105497:CF,105492
105490 :: PRED :: IF :: Z :: if (v509 == v453) goto 1995::CF,106525:CD,105491:CD,105492:CD,105497:CD,105498:CD,105499:CD,105504
105493 :: EXPR :: reference :: D :: v469 = v28[v468]::DD,105497
105492 :: EXPR :: assign :: Ljava/lang/Object :: v468 = v509 - #(1)::
105497 :: EXPR :: assign :: Ljava/lang/Object :: v470 = v467 * v469::DD,106525:CF,105498
105499 :: EXPR :: assign :: Ljava/lang/Object :: v472 = v509 - #(1)::
105498 :: EXPR :: assign :: Ljava/lang/Object :: v471 = v509 - #(1)::CF,105499
105500 :: EXPR :: reference :: D :: v473 = v28[v472]::DD,105504
105505 :: EXPR :: modify :: D :: v28[v471] = v474::
105504 :: EXPR :: assign :: Ljava/lang/Object :: v474 = v464 * v473::DD,105505
105509 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 2101::CF,106530:CD,105591:CD,106526:CD,106528:CD,106529:CD,106532
105511 :: EXPR :: reference :: [[D :: v477 = p0 $this .V::
105514 :: EXPR :: reference :: Ljava/lang/Object :: v478 = v477[v505]::
105518 :: EXPR :: reference :: D :: v479 = v478[v510]::DD,105522
105523 :: EXPR :: reference :: [[D :: v481 = p0 $this .V::
105522 :: EXPR :: assign :: Ljava/lang/Object :: v480 = v464 * v479::DD,105536
105526 :: EXPR :: reference :: Ljava/lang/Object :: v482 = v481[v505]::
105531 :: EXPR :: reference :: D :: v484 = v482[v483]::DD,105535
105530 :: EXPR :: assign :: Ljava/lang/Object :: v483 = v868 - #(1)::
105535 :: EXPR :: assign :: Ljava/lang/Object :: v485 = v465 * v484::CF,105536
105537 :: EXPR :: reference :: [[D :: v487 = p0 $this .V::
105536 :: EXPR :: assign :: Ljava/lang/Object :: v486 = v480 + v485::DD,105583
105540 :: EXPR :: reference :: Ljava/lang/Object :: v488 = v487[v505]::
105545 :: EXPR :: assign :: Ljava/lang/Object :: v490 = -(v465)::DD,105557
105544 :: EXPR :: assign :: Ljava/lang/Object :: v489 = v868 - #(1)::CF,105545
105546 :: EXPR :: reference :: [[D :: v491 = p0 $this .V::
105549 :: EXPR :: reference :: Ljava/lang/Object :: v492 = v491[v505]::
105553 :: EXPR :: reference :: D :: v493 = v492[v510]::DD,105557
105557 :: EXPR :: assign :: Ljava/lang/Object :: v494 = v490 * v493::DD,105571
105558 :: EXPR :: reference :: [[D :: v495 = p0 $this .V::
105561 :: EXPR :: reference :: Ljava/lang/Object :: v496 = v495[v505]::
105565 :: EXPR :: assign :: Ljava/lang/Object :: v497 = v868 - #(1)::
105566 :: EXPR :: reference :: D :: v498 = v496[v497]::DD,105570
105571 :: EXPR :: assign :: Ljava/lang/Object :: v500 = v494 + v499::DD,105572
105570 :: EXPR :: assign :: Ljava/lang/Object :: v499 = v464 * v498::CF,105571
105572 :: EXPR :: modify :: D :: v488[v489] = v500::
105576 :: EXPR :: reference :: [[D :: v501 = p0 $this .V::
105579 :: EXPR :: reference :: Ljava/lang/Object :: v502 = v501[v505]::
105583 :: EXPR :: modify :: D :: v502[v510] = v486::
105587 :: EXPR :: assign :: Ljava/lang/Object :: v503 = v505 + #(1)::DD,106529:CF,106526
105588 :: EXPR :: reference :: I :: v476 = p0 $this .n::DD,105591
105591 :: PRED :: IF :: Z :: if (v505 < v476) goto 2007::CF,106530:CD,105522:CD,105530:CD,105535:CD,105536:CD,105544:CD,105545:CD,105557:CD,105565:CD,105570:CD,105571:CD,105587:CD,106526:CD,106528:CD,106529
105593 :: PRED :: IF :: Z :: if (v509 >= v453) goto 1915::CD,105469:CD,105481:CD,105482:CD,105490:CD,105509:CD,105592:CD,106525:CD,106530:CD,106532:CD,106533:CD,106535:CD,106536
105592 :: EXPR :: assign :: Ljava/lang/Object :: v507 = v511 + #(-1)::DD,106536:CF,106533
105595 :: EXPR :: assign :: Ljava/lang/Object :: v512 = v453 - #(1)::
105596 :: EXPR :: reference :: D :: v513 = v28[v512]::DD,106546
105601 :: EXPR :: modify :: D :: v28[v514] = #(0.0 d)::
105600 :: EXPR :: assign :: Ljava/lang/Object :: v514 = v453 - #(1)::
105613 :: CALL :: call :: D :: v518 = hypot(v516, v561)::JM,105625:JM,105626:JM,105630:CL,124458
105618 :: EXPR :: reference :: [D :: v519 = p0 $this .s::
105621 :: EXPR :: reference :: D :: v520 = v519[v562]::DD,105625
105625 :: EXPR :: assign :: Ljava/lang/Object :: v521 = v520 / v518::DD,105644:DD,105662:DD,105710:CF,105626
105627 :: EXPR :: reference :: [D :: v523 = p0 $this .s::
105626 :: EXPR :: assign :: Ljava/lang/Object :: v522 = v561 / v518::DD,105634:DD,105675:DD,105685
105630 :: EXPR :: modify :: D :: v523[v562] = v518::
105635 :: EXPR :: reference :: D :: v525 = v28[v562]::DD,105639
105634 :: EXPR :: assign :: Ljava/lang/Object :: v524 = -(v522)::DD,105639
105639 :: EXPR :: assign :: Ljava/lang/Object :: v526 = v524 * v525::DD,106546
105640 :: EXPR :: reference :: D :: v527 = v28[v562]::DD,105644
105645 :: EXPR :: modify :: D :: v28[v562] = v528::
105644 :: EXPR :: assign :: Ljava/lang/Object :: v528 = v521 * v527::DD,105645
105649 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 2312::CF,106541:CD,105731:CD,106537:CD,106539:CD,106540:CD,106543
105651 :: EXPR :: reference :: [[D :: v530 = p0 $this .U::
105654 :: EXPR :: reference :: Ljava/lang/Object :: v531 = v530[v558]::
105658 :: EXPR :: reference :: D :: v532 = v531[v563]::DD,105662
105663 :: EXPR :: reference :: [[D :: v534 = p0 $this .U::
105662 :: EXPR :: assign :: Ljava/lang/Object :: v533 = v521 * v532::DD,105676
105666 :: EXPR :: reference :: Ljava/lang/Object :: v535 = v534[v558]::
105671 :: EXPR :: reference :: D :: v537 = v535[v536]::DD,105675
105670 :: EXPR :: assign :: Ljava/lang/Object :: v536 = v453 - #(1)::
105675 :: EXPR :: assign :: Ljava/lang/Object :: v538 = v522 * v537::CF,105676
105677 :: EXPR :: reference :: [[D :: v540 = p0 $this .U::
105676 :: EXPR :: assign :: Ljava/lang/Object :: v539 = v533 + v538::DD,105723
105680 :: EXPR :: reference :: Ljava/lang/Object :: v541 = v540[v558]::
105685 :: EXPR :: assign :: Ljava/lang/Object :: v543 = -(v522)::DD,105697
105684 :: EXPR :: assign :: Ljava/lang/Object :: v542 = v453 - #(1)::CF,105685
105686 :: EXPR :: reference :: [[D :: v544 = p0 $this .U::
105689 :: EXPR :: reference :: Ljava/lang/Object :: v545 = v544[v558]::
105693 :: EXPR :: reference :: D :: v546 = v545[v563]::DD,105697
105697 :: EXPR :: assign :: Ljava/lang/Object :: v547 = v543 * v546::DD,105711
105698 :: EXPR :: reference :: [[D :: v548 = p0 $this .U::
105701 :: EXPR :: reference :: Ljava/lang/Object :: v549 = v548[v558]::
105705 :: EXPR :: assign :: Ljava/lang/Object :: v550 = v453 - #(1)::
105706 :: EXPR :: reference :: D :: v551 = v549[v550]::DD,105710
105711 :: EXPR :: assign :: Ljava/lang/Object :: v553 = v547 + v552::DD,105712
105710 :: EXPR :: assign :: Ljava/lang/Object :: v552 = v521 * v551::CF,105711
105712 :: EXPR :: modify :: D :: v541[v542] = v553::
105716 :: EXPR :: reference :: [[D :: v554 = p0 $this .U::
105719 :: EXPR :: reference :: Ljava/lang/Object :: v555 = v554[v558]::
105723 :: EXPR :: modify :: D :: v555[v563] = v539::
105727 :: EXPR :: assign :: Ljava/lang/Object :: v556 = v558 + #(1)::DD,106540:CF,106537
105728 :: EXPR :: reference :: I :: v529 = p0 $this .m::DD,105731
105731 :: PRED :: IF :: Z :: if (v558 < v529) goto 2218::CF,106541:CD,105662:CD,105670:CD,105675:CD,105676:CD,105684:CD,105685:CD,105697:CD,105705:CD,105710:CD,105711:CD,105727:CD,106537:CD,106539:CD,106540
105733 :: PRED :: IF :: Z :: if (v562 < v870) goto 2139::CD,105613:CD,105625:CD,105626:CD,105634:CD,105639:CD,105644:CD,105649:CD,105732:CD,106541:CD,106543:CD,106544:CD,106546:CD,106547
105732 :: EXPR :: assign :: Ljava/lang/Object :: v560 = v564 + #(1)::DD,106547:CF,106544
105735 :: EXPR :: reference :: [D :: v565 = p0 $this .s::
105739 :: EXPR :: reference :: D :: v567 = v565[v566]::JM,105824:JM,105843:JM,105815:JM,105830:JM,105802:JM,105773:JM,105789:JM,105743:JM,105759:JM,105838
105738 :: EXPR :: assign :: Ljava/lang/Object :: v566 = v866 - #(1)::
105743 :: CALL :: call :: D :: v569 = abs(v567)::JM,105824:JM,105843:JM,105815:JM,105830:JM,105802:JM,105773:JM,105789:JM,105743:JM,105759:JM,105838
105747 :: EXPR :: reference :: [D :: v570 = p0 $this .s::
105751 :: EXPR :: reference :: D :: v572 = v570[v571]::JM,105824:JM,105843:JM,105815:JM,105830:JM,105755:JM,105802:JM,105773:JM,105789:JM,105759:JM,105838
105750 :: EXPR :: assign :: Ljava/lang/Object :: v571 = v866 - #(2)::
105755 :: CALL :: call :: D :: v574 = abs(v572)::JM,105824:JM,105843:JM,105815:JM,105830:JM,105755:JM,105802:JM,105773:JM,105789:JM,105759:JM,105838
105759 :: CALL :: call :: D :: v576 = max(v569, v574)::JM,105824:JM,105843:JM,105815:JM,105830:JM,105802:JM,105773:JM,105789:JM,105759:JM,105838
105765 :: EXPR :: reference :: D :: v578 = v28[v577]::JM,105824:JM,105843:JM,105815:JM,105830:JM,105769:JM,105802:JM,105773:JM,105789:JM,105838
105764 :: EXPR :: assign :: Ljava/lang/Object :: v577 = v866 - #(2)::
105769 :: CALL :: call :: D :: v580 = abs(v578)::JM,105824:JM,105843:JM,105815:JM,105830:JM,105769:JM,105802:JM,105773:JM,105789:JM,105838
105773 :: CALL :: call :: D :: v582 = max(v576, v580)::JM,105824:JM,105843:JM,105815:JM,105830:JM,105802:JM,105773:JM,105789:JM,105838
105778 :: EXPR :: reference :: [D :: v583 = p0 $this .s::
105781 :: EXPR :: reference :: D :: v584 = v583[v453]::JM,105824:JM,105843:JM,105815:JM,105830:JM,105785:JM,105802:JM,105789:JM,105838
105785 :: CALL :: call :: D :: v586 = abs(v584)::JM,105824:JM,105843:JM,105815:JM,105830:JM,105785:JM,105802:JM,105789:JM,105838
105789 :: CALL :: call :: D :: v588 = max(v582, v586)::JM,105824:JM,105843:JM,105815:JM,105830:JM,105802:JM,105789:JM,105838
105794 :: EXPR :: reference :: D :: v589 = v28[v453]::JM,105824:JM,105843:JM,105815:JM,105798:JM,105830:JM,105802:JM,105838
105798 :: CALL :: call :: D :: v591 = abs(v589)::JM,105824:JM,105843:JM,105815:JM,105798:JM,105830:JM,105802:JM,105838
105802 :: CALL :: call :: D :: v593 = max(v588, v591)::JM,105824:JM,105843:JM,105815:JM,105830:JM,105802:JM,105838
105807 :: EXPR :: reference :: [D :: v594 = p0 $this .s::
105811 :: EXPR :: reference :: D :: v596 = v594[v595]::DD,105815
105810 :: EXPR :: assign :: Ljava/lang/Object :: v595 = v866 - #(1)::
105815 :: EXPR :: assign :: Ljava/lang/Object :: v597 = v596 / v593::DD,105844:DD,105845:DD,105850:DD,105851:DD,105872:DD,105873
105816 :: EXPR :: reference :: [D :: v598 = p0 $this .s::
105819 :: EXPR :: assign :: Ljava/lang/Object :: v599 = v866 - #(2)::
105820 :: EXPR :: reference :: D :: v600 = v598[v599]::DD,105824
105825 :: EXPR :: assign :: Ljava/lang/Object :: v602 = v866 - #(2)::
105824 :: EXPR :: assign :: Ljava/lang/Object :: v601 = v600 / v593::DD,105844:DD,105845:CF,105825
105826 :: EXPR :: reference :: D :: v603 = v28[v602]::DD,105830
105831 :: EXPR :: reference :: [D :: v605 = p0 $this .s::
105830 :: EXPR :: assign :: Ljava/lang/Object :: v604 = v603 / v593::DD,105847:DD,105850:DD,105851
105834 :: EXPR :: reference :: D :: v606 = v605[v453]::DD,105838
105839 :: EXPR :: reference :: D :: v608 = v28[v453]::DD,105843
105838 :: EXPR :: assign :: Ljava/lang/Object :: v607 = v606 / v593::DD,105872:DD,105873:DD,105876
105843 :: EXPR :: assign :: Ljava/lang/Object :: v609 = v608 / v593::DD,105876:CF,105844
105845 :: EXPR :: assign :: Ljava/lang/Object :: v611 = v601 - v597::CF,105846
105844 :: EXPR :: assign :: Ljava/lang/Object :: v610 = v601 + v597::DD,105846:CF,105845
105847 :: EXPR :: assign :: Ljava/lang/Object :: v613 = v604 * v604::CF,105848
105846 :: EXPR :: assign :: Ljava/lang/Object :: v612 = v610 * v611::DD,105848:CF,105847
105849 :: EXPR :: assign :: Ljava/lang/Object :: v615 = v614 / #(2.0 d)::DD,105853:DD,105861:DD,105867:DD,105870:CF,105850
105848 :: EXPR :: assign :: Ljava/lang/Object :: v614 = v612 + v613::DD,105849
105851 :: EXPR :: assign :: Ljava/lang/Object :: v617 = v597 * v604::CF,105852
105850 :: EXPR :: assign :: Ljava/lang/Object :: v616 = v597 * v604::DD,105852:CF,105851
105853 :: EXPR :: assign :: Z :: v619 = v615 < #(0.0 d)::DD,105854
105852 :: EXPR :: assign :: Ljava/lang/Object :: v618 = v616 * v617::DD,105856:DD,105862:DD,105871:CF,105853
105854 :: PRED :: IF :: Z :: if (v619 == #(0)) goto 2507::CD,106548
105857 :: PRED :: IF :: Z :: if (v621 == #(0)) goto 2516::CD,106549
105856 :: EXPR :: assign :: Z :: v621 = v618 < #(0.0 d)::DD,105857
105859 :: EXPR :: assign :: Ljava/lang/Object :: v623 = v620 || v622::DD,105860
105861 :: EXPR :: assign :: Ljava/lang/Object :: v624 = v615 * v615::DD,105862
105860 :: PRED :: IF :: Z :: if (v623 == #(0)) goto 2559::CF,106551:CD,105861:CD,105862:CD,105863:CD,105867:CD,105868:CD,105870:CD,105871:CD,106550
105863 :: CALL :: call :: D :: v627 = sqrt(v625)::JM,105863:JM,106550:JM,105869
105862 :: EXPR :: assign :: Ljava/lang/Object :: v625 = v624 + v618::JM,105863:JM,106550:JM,105869
105867 :: EXPR :: assign :: Z :: v628 = v615 > #(0.0 d)::DD,105868
105869 :: EXPR :: assign :: Ljava/lang/Object :: v629 = -(v627)::DD,106550
105868 :: PRED :: IF :: Z :: if (v628 >= #(0)) goto 2551::CF,106550:CD,105869
105871 :: EXPR :: assign :: Ljava/lang/Object :: v632 = v618 / v631::DD,106551
105870 :: EXPR :: assign :: Ljava/lang/Object :: v631 = v615 + v630::CF,105871
105873 :: EXPR :: assign :: Ljava/lang/Object :: v635 = v607 - v597::CF,105874
105872 :: EXPR :: assign :: Ljava/lang/Object :: v634 = v607 + v597::DD,105874:CF,105873
105875 :: EXPR :: assign :: Ljava/lang/Object :: v637 = v636 + v633::DD,106568:CF,105876
105874 :: EXPR :: assign :: Ljava/lang/Object :: v636 = v634 * v635::DD,105875
105876 :: EXPR :: assign :: Ljava/lang/Object :: v638 = v607 * v609::DD,106569
105878 :: CALL :: call :: D :: v641 = hypot(v761, v762)::JM,105883:JM,105884:JM,105887:CL,124458
105883 :: EXPR :: assign :: Ljava/lang/Object :: v642 = v761 / v641::DD,105898:DD,105909:DD,105944:DD,105962:DD,106010:CF,105884
105885 :: PRED :: IF :: Z :: if (v763 == v453) goto 2627::CD,105886
105884 :: EXPR :: assign :: Ljava/lang/Object :: v643 = v762 / v641::DD,105903:DD,105917:DD,105931:DD,105975:DD,105985:CF,105885
105887 :: EXPR :: modify :: D :: v28[v644] = v641::
105886 :: EXPR :: assign :: Ljava/lang/Object :: v644 = v763 - #(1)::
105891 :: EXPR :: reference :: [D :: v645 = p0 $this .s::
105894 :: EXPR :: reference :: D :: v646 = v645[v763]::DD,105898
105899 :: EXPR :: reference :: D :: v648 = v28[v763]::DD,105903
105898 :: EXPR :: assign :: Ljava/lang/Object :: v647 = v642 * v646::DD,105904
105903 :: EXPR :: assign :: Ljava/lang/Object :: v649 = v643 * v648::CF,105904
105905 :: EXPR :: reference :: D :: v651 = v28[v763]::DD,105909
105904 :: EXPR :: assign :: Ljava/lang/Object :: v650 = v647 + v649::DD,106037
105909 :: EXPR :: assign :: Ljava/lang/Object :: v652 = v642 * v651::DD,105918
105910 :: EXPR :: reference :: [D :: v653 = p0 $this .s::
105913 :: EXPR :: reference :: D :: v654 = v653[v763]::DD,105917
105917 :: EXPR :: assign :: Ljava/lang/Object :: v655 = v643 * v654::CF,105918
105919 :: EXPR :: modify :: D :: v28[v763] = v656::
105918 :: EXPR :: assign :: Ljava/lang/Object :: v656 = v652 - v655::DD,105919
105923 :: EXPR :: reference :: [D :: v657 = p0 $this .s::
105927 :: EXPR :: reference :: D :: v659 = v657[v658]::DD,105931
105926 :: EXPR :: assign :: Ljava/lang/Object :: v658 = v763 + #(1)::
105931 :: EXPR :: assign :: Ljava/lang/Object :: v660 = v643 * v659::DD,106038
105932 :: EXPR :: reference :: [D :: v661 = p0 $this .s::
105935 :: EXPR :: assign :: Ljava/lang/Object :: v662 = v763 + #(1)::
105936 :: EXPR :: reference :: [D :: v663 = p0 $this .s::
105939 :: EXPR :: assign :: Ljava/lang/Object :: v664 = v763 + #(1)::
105940 :: EXPR :: reference :: D :: v665 = v663[v664]::DD,105944
105945 :: EXPR :: modify :: D :: v661[v662] = v666::
105944 :: EXPR :: assign :: Ljava/lang/Object :: v666 = v642 * v665::DD,105945
105949 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 2816::CF,106556:CD,106031:CD,106552:CD,106554:CD,106555:CD,106558
105951 :: EXPR :: reference :: [[D :: v668 = p0 $this .V::
105954 :: EXPR :: reference :: Ljava/lang/Object :: v669 = v668[v696]::
105958 :: EXPR :: reference :: D :: v670 = v669[v764]::DD,105962
105963 :: EXPR :: reference :: [[D :: v672 = p0 $this .V::
105962 :: EXPR :: assign :: Ljava/lang/Object :: v671 = v642 * v670::DD,105976
105966 :: EXPR :: reference :: Ljava/lang/Object :: v673 = v672[v696]::
105971 :: EXPR :: reference :: D :: v675 = v673[v674]::DD,105975
105970 :: EXPR :: assign :: Ljava/lang/Object :: v674 = v764 + #(1)::
105975 :: EXPR :: assign :: Ljava/lang/Object :: v676 = v643 * v675::CF,105976
105977 :: EXPR :: reference :: [[D :: v678 = p0 $this .V::
105976 :: EXPR :: assign :: Ljava/lang/Object :: v677 = v671 + v676::DD,106023
105980 :: EXPR :: reference :: Ljava/lang/Object :: v679 = v678[v696]::
105985 :: EXPR :: assign :: Ljava/lang/Object :: v681 = -(v643)::DD,105997
105984 :: EXPR :: assign :: Ljava/lang/Object :: v680 = v764 + #(1)::CF,105985
105986 :: EXPR :: reference :: [[D :: v682 = p0 $this .V::
105989 :: EXPR :: reference :: Ljava/lang/Object :: v683 = v682[v696]::
105993 :: EXPR :: reference :: D :: v684 = v683[v764]::DD,105997
105997 :: EXPR :: assign :: Ljava/lang/Object :: v685 = v681 * v684::DD,106011
105998 :: EXPR :: reference :: [[D :: v686 = p0 $this .V::
106001 :: EXPR :: reference :: Ljava/lang/Object :: v687 = v686[v696]::
106005 :: EXPR :: assign :: Ljava/lang/Object :: v688 = v764 + #(1)::
106006 :: EXPR :: reference :: D :: v689 = v687[v688]::DD,106010
106011 :: EXPR :: assign :: Ljava/lang/Object :: v691 = v685 + v690::DD,106012
106010 :: EXPR :: assign :: Ljava/lang/Object :: v690 = v642 * v689::CF,106011
106012 :: EXPR :: modify :: D :: v679[v680] = v691::
106016 :: EXPR :: reference :: [[D :: v692 = p0 $this .V::
106019 :: EXPR :: reference :: Ljava/lang/Object :: v693 = v692[v696]::
106023 :: EXPR :: modify :: D :: v693[v764] = v677::
106027 :: EXPR :: assign :: Ljava/lang/Object :: v694 = v696 + #(1)::DD,106555:CF,106552
106028 :: EXPR :: reference :: I :: v667 = p0 $this .n::DD,106031
106031 :: PRED :: IF :: Z :: if (v696 < v667) goto 2718::CF,106556:CD,105962:CD,105970:CD,105975:CD,105976:CD,105984:CD,105985:CD,105997:CD,106005:CD,106010:CD,106011:CD,106027:CD,106552:CD,106554:CD,106555
106032 :: CALL :: call :: D :: v699 = hypot(v650, v660)::JM,106037:JM,106038:JM,106042:CL,124458
106037 :: EXPR :: assign :: Ljava/lang/Object :: v700 = v650 / v699::DD,106050:DD,106079:DD,106097:DD,106120:DD,106168:CF,106038
106039 :: EXPR :: reference :: [D :: v702 = p0 $this .s::
106038 :: EXPR :: assign :: Ljava/lang/Object :: v701 = v660 / v699::DD,106059:DD,106065:DD,106090:DD,106133:DD,106143
106042 :: EXPR :: modify :: D :: v702[v765] = v699::
106046 :: EXPR :: reference :: D :: v703 = v28[v765]::DD,106050
106051 :: EXPR :: reference :: [D :: v705 = p0 $this .s::
106050 :: EXPR :: assign :: Ljava/lang/Object :: v704 = v700 * v703::DD,106060
106055 :: EXPR :: reference :: D :: v707 = v705[v706]::DD,106059
106054 :: EXPR :: assign :: Ljava/lang/Object :: v706 = v765 + #(1)::
106059 :: EXPR :: assign :: Ljava/lang/Object :: v708 = v701 * v707::CF,106060
106061 :: EXPR :: reference :: [D :: v710 = p0 $this .s::
106060 :: EXPR :: assign :: Ljava/lang/Object :: v709 = v704 + v708::DD,106568
106065 :: EXPR :: assign :: Ljava/lang/Object :: v712 = -(v701)::DD,106070
106064 :: EXPR :: assign :: Ljava/lang/Object :: v711 = v765 + #(1)::CF,106065
106066 :: EXPR :: reference :: D :: v713 = v28[v765]::DD,106070
106071 :: EXPR :: reference :: [D :: v715 = p0 $this .s::
106070 :: EXPR :: assign :: Ljava/lang/Object :: v714 = v712 * v713::DD,106080
106075 :: EXPR :: reference :: D :: v717 = v715[v716]::DD,106079
106074 :: EXPR :: assign :: Ljava/lang/Object :: v716 = v765 + #(1)::
106079 :: EXPR :: assign :: Ljava/lang/Object :: v718 = v700 * v717::CF,106080
106081 :: EXPR :: modify :: D :: v710[v711] = v719::
106080 :: EXPR :: assign :: Ljava/lang/Object :: v719 = v714 + v718::DD,106081
106085 :: EXPR :: assign :: Ljava/lang/Object :: v720 = v765 + #(1)::
106086 :: EXPR :: reference :: D :: v721 = v28[v720]::DD,106090
106091 :: EXPR :: assign :: Ljava/lang/Object :: v723 = v765 + #(1)::CF,106092
106090 :: EXPR :: assign :: Ljava/lang/Object :: v722 = v701 * v721::DD,106569:CF,106091
106093 :: EXPR :: reference :: D :: v725 = v28[v724]::DD,106097
106092 :: EXPR :: assign :: Ljava/lang/Object :: v724 = v765 + #(1)::
106097 :: EXPR :: assign :: Ljava/lang/Object :: v726 = v700 * v725::DD,106098
106098 :: EXPR :: modify :: D :: v28[v723] = v726::
106103 :: EXPR :: reference :: I :: v727 = p0 $this .m::DD,106106
106102 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 3046::CF,106563:CD,106106:CD,106107:CD,106565
106107 :: PRED :: IF :: Z :: if (v765 >= v728) goto 3046::CF,106563:CD,106189:CD,106559:CD,106561:CD,106562:CD,106565
106106 :: EXPR :: assign :: Ljava/lang/Object :: v728 = v727 - #(1)::CF,106107
106109 :: EXPR :: reference :: [[D :: v730 = p0 $this .U::
106112 :: EXPR :: reference :: Ljava/lang/Object :: v731 = v730[v758]::
106116 :: EXPR :: reference :: D :: v732 = v731[v766]::DD,106120
106121 :: EXPR :: reference :: [[D :: v734 = p0 $this .U::
106120 :: EXPR :: assign :: Ljava/lang/Object :: v733 = v700 * v732::DD,106134
106124 :: EXPR :: reference :: Ljava/lang/Object :: v735 = v734[v758]::
106129 :: EXPR :: reference :: D :: v737 = v735[v736]::DD,106133
106128 :: EXPR :: assign :: Ljava/lang/Object :: v736 = v766 + #(1)::
106133 :: EXPR :: assign :: Ljava/lang/Object :: v738 = v701 * v737::CF,106134
106135 :: EXPR :: reference :: [[D :: v740 = p0 $this .U::
106134 :: EXPR :: assign :: Ljava/lang/Object :: v739 = v733 + v738::DD,106181
106138 :: EXPR :: reference :: Ljava/lang/Object :: v741 = v740[v758]::
106143 :: EXPR :: assign :: Ljava/lang/Object :: v743 = -(v701)::DD,106155
106142 :: EXPR :: assign :: Ljava/lang/Object :: v742 = v766 + #(1)::CF,106143
106144 :: EXPR :: reference :: [[D :: v744 = p0 $this .U::
106147 :: EXPR :: reference :: Ljava/lang/Object :: v745 = v744[v758]::
106151 :: EXPR :: reference :: D :: v746 = v745[v766]::DD,106155
106155 :: EXPR :: assign :: Ljava/lang/Object :: v747 = v743 * v746::DD,106169
106156 :: EXPR :: reference :: [[D :: v748 = p0 $this .U::
106159 :: EXPR :: reference :: Ljava/lang/Object :: v749 = v748[v758]::
106163 :: EXPR :: assign :: Ljava/lang/Object :: v750 = v766 + #(1)::
106164 :: EXPR :: reference :: D :: v751 = v749[v750]::DD,106168
106169 :: EXPR :: assign :: Ljava/lang/Object :: v753 = v747 + v752::DD,106170
106168 :: EXPR :: assign :: Ljava/lang/Object :: v752 = v700 * v751::CF,106169
106170 :: EXPR :: modify :: D :: v741[v742] = v753::
106174 :: EXPR :: reference :: [[D :: v754 = p0 $this .U::
106177 :: EXPR :: reference :: Ljava/lang/Object :: v755 = v754[v758]::
106181 :: EXPR :: modify :: D :: v755[v766] = v739::
106185 :: EXPR :: assign :: Ljava/lang/Object :: v756 = v758 + #(1)::DD,106562:CF,106559
106186 :: EXPR :: reference :: I :: v729 = p0 $this .m::DD,106189
106189 :: PRED :: IF :: Z :: if (v758 < v729) goto 2952::CF,106563:CD,106120:CD,106128:CD,106133:CD,106134:CD,106142:CD,106143:CD,106155:CD,106163:CD,106168:CD,106169:CD,106185:CD,106559:CD,106561:CD,106562
106191 :: EXPR :: assign :: Ljava/lang/Object :: v639 = v873 - #(1)::CF,106192
106190 :: EXPR :: assign :: Ljava/lang/Object :: v760 = v767 + #(1)::DD,106570:CF,106566
106193 :: EXPR :: assign :: Ljava/lang/Object :: v768 = v873 - #(2)::
106192 :: PRED :: IF :: Z :: if (v763 < v639) goto 2589::CD,105878:CD,105883:CD,105884:CD,105885:CD,105898:CD,105903:CD,105904:CD,105909:CD,105917:CD,105918:CD,105926:CD,105931:CD,105935:CD,105939:CD,105944:CD,105949:CD,106032:CD,106037:CD,106038:CD,106050:CD,106054:CD,106059:CD,106060:CD,106064:CD,106065:CD,106070:CD,106074:CD,106079:CD,106080:CD,106085:CD,106090:CD,106091:CD,106092:CD,106097:CD,106102:CD,106190:CD,106191:CD,106556:CD,106558:CD,106563:CD,106565:CD,106566:CD,106568:CD,106569:CD,106570:CF,106193
106194 :: EXPR :: modify :: D :: v28[v768] = v761::
106200 :: EXPR :: reference :: [D :: v785 = p0 $this .s::
106203 :: EXPR :: reference :: D :: v786 = v785[v453]::DD,106207
106207 :: EXPR :: assign :: Z :: v787 = v786 > #(0.0 d)::DD,106208
106209 :: EXPR :: reference :: [D :: v788 = p0 $this .s::
106208 :: PRED :: IF :: Z :: if (v787 > #(0)) goto 3391::CF,106584:CD,106219:CD,106220:CD,106234:CD,106571:CD,106585
106212 :: EXPR :: reference :: [D :: v789 = p0 $this .s::
106215 :: EXPR :: reference :: D :: v790 = v789[v453]::DD,106219
106219 :: EXPR :: assign :: Z :: v791 = v790 > #(0.0 d)::DD,106220
106221 :: EXPR :: reference :: [D :: v792 = p0 $this .s::
106220 :: PRED :: IF :: Z :: if (v791 >= #(0)) goto 3115::CD,106228:CD,106571
106224 :: EXPR :: reference :: D :: v793 = v792[v453]::DD,106228
106228 :: EXPR :: assign :: Ljava/lang/Object :: v794 = -(v793)::DD,106571
106230 :: EXPR :: modify :: D :: v788[v453] = v795::
106234 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 3391::CF,106584:CD,106260:CD,106572:CD,106573:CD,106585
106236 :: EXPR :: reference :: [[D :: v796 = p0 $this .V::
106239 :: EXPR :: reference :: Ljava/lang/Object :: v797 = v796[v803]::
106243 :: EXPR :: reference :: [[D :: v798 = p0 $this .V::
106246 :: EXPR :: reference :: Ljava/lang/Object :: v799 = v798[v803]::
106250 :: EXPR :: reference :: D :: v800 = v799[v453]::DD,106254
106255 :: EXPR :: modify :: D :: v797[v453] = v801::
106254 :: EXPR :: assign :: Ljava/lang/Object :: v801 = -(v800)::DD,106255
106259 :: EXPR :: assign :: Ljava/lang/Object :: v802 = v803 + #(1)::DD,106573:CF,106572
106260 :: PRED :: IF :: Z :: if (v803 <= v398) goto 3128::CD,106254:CD,106259:CD,106572:CD,106573
106262 :: EXPR :: reference :: [D :: v804 = p0 $this .s::
106265 :: EXPR :: reference :: D :: v805 = v804[v857]::DD,106277
106269 :: EXPR :: reference :: [D :: v806 = p0 $this .s::
106273 :: EXPR :: reference :: D :: v808 = v806[v807]::DD,106277
106272 :: EXPR :: assign :: Ljava/lang/Object :: v807 = v857 + #(1)::
106277 :: EXPR :: assign :: Z :: v809 = v805 < v808::DD,106278
106278 :: PRED :: IF :: Z :: if (v809 < #(0)) goto 3185::CD,106293:CD,106305:CD,106310:CD,106368:CD,106426:CD,106427:CD,106577:CD,106578:CD,106582:CD,106583:CD,106584:CD,106585
106280 :: EXPR :: reference :: [D :: v810 = p0 $this .s::
106283 :: EXPR :: reference :: D :: v811 = v810[v857]::DD,106306
106287 :: EXPR :: reference :: [D :: v812 = p0 $this .s::
106290 :: EXPR :: reference :: [D :: v813 = p0 $this .s::
106293 :: EXPR :: assign :: Ljava/lang/Object :: v814 = v857 + #(1)::
106294 :: EXPR :: reference :: D :: v815 = v813[v814]::DD,106298
106298 :: EXPR :: modify :: D :: v812[v857] = v815::
106302 :: EXPR :: reference :: [D :: v816 = p0 $this .s::
106305 :: EXPR :: assign :: Ljava/lang/Object :: v817 = v857 + #(1)::
106306 :: EXPR :: modify :: D :: v816[v817] = v811::
106311 :: EXPR :: reference :: I :: v818 = p0 $this .n::DD,106314
106310 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 3304::CF,106577:CD,106314:CD,106315:CD,106578
106315 :: PRED :: IF :: Z :: if (v857 >= v819) goto 3304::CF,106577:CD,106367:CD,106574:CD,106575:CD,106576:CD,106578
106314 :: EXPR :: assign :: Ljava/lang/Object :: v819 = v818 - #(1)::CF,106315
106317 :: EXPR :: reference :: [[D :: v821 = p0 $this .V::
106320 :: EXPR :: reference :: Ljava/lang/Object :: v822 = v821[v835]::
106325 :: EXPR :: reference :: D :: v824 = v822[v823]::DD,106359
106324 :: EXPR :: assign :: Ljava/lang/Object :: v823 = v858 + #(1)::
106329 :: EXPR :: reference :: [[D :: v825 = p0 $this .V::
106332 :: EXPR :: reference :: Ljava/lang/Object :: v826 = v825[v835]::
106337 :: EXPR :: reference :: [[D :: v828 = p0 $this .V::
106336 :: EXPR :: assign :: Ljava/lang/Object :: v827 = v858 + #(1)::
106340 :: EXPR :: reference :: Ljava/lang/Object :: v829 = v828[v835]::
106344 :: EXPR :: reference :: D :: v830 = v829[v858]::DD,106348
106348 :: EXPR :: modify :: D :: v826[v827] = v830::
106352 :: EXPR :: reference :: [[D :: v831 = p0 $this .V::
106355 :: EXPR :: reference :: Ljava/lang/Object :: v832 = v831[v835]::
106359 :: EXPR :: modify :: D :: v832[v858] = v824::
106363 :: EXPR :: assign :: Ljava/lang/Object :: v833 = v835 + #(1)::DD,106576:CF,106574
106364 :: EXPR :: reference :: I :: v820 = p0 $this .n::DD,106367
106367 :: PRED :: IF :: Z :: if (v835 < v820) goto 3243::CF,106577:CD,106324:CD,106336:CD,106363:CD,106574:CD,106575:CD,106576
106369 :: EXPR :: reference :: I :: v837 = p0 $this .m::DD,106372
106368 :: PRED :: IF :: Z :: if (#(1) == #(0)) goto 3384::CF,106582:CD,106372:CD,106373:CD,106583
106373 :: PRED :: IF :: Z :: if (v859 >= v838) goto 3384::CF,106582:CD,106425:CD,106579:CD,106580:CD,106581:CD,106583
106372 :: EXPR :: assign :: Ljava/lang/Object :: v838 = v837 - #(1)::CF,106373
106375 :: EXPR :: reference :: [[D :: v840 = p0 $this .U::
106378 :: EXPR :: reference :: Ljava/lang/Object :: v841 = v840[v854]::
106383 :: EXPR :: reference :: D :: v843 = v841[v842]::DD,106417
106382 :: EXPR :: assign :: Ljava/lang/Object :: v842 = v860 + #(1)::
106387 :: EXPR :: reference :: [[D :: v844 = p0 $this .U::
106390 :: EXPR :: reference :: Ljava/lang/Object :: v845 = v844[v854]::
106395 :: EXPR :: reference :: [[D :: v847 = p0 $this .U::
106394 :: EXPR :: assign :: Ljava/lang/Object :: v846 = v860 + #(1)::
106398 :: EXPR :: reference :: Ljava/lang/Object :: v848 = v847[v854]::
106402 :: EXPR :: reference :: D :: v849 = v848[v860]::DD,106406
106406 :: EXPR :: modify :: D :: v845[v846] = v849::
106410 :: EXPR :: reference :: [[D :: v850 = p0 $this .U::
106413 :: EXPR :: reference :: Ljava/lang/Object :: v851 = v850[v854]::
106417 :: EXPR :: modify :: D :: v851[v860] = v843::
106421 :: EXPR :: assign :: Ljava/lang/Object :: v852 = v854 + #(1)::DD,106581:CF,106579
106422 :: EXPR :: reference :: I :: v839 = p0 $this .m::DD,106425
106425 :: PRED :: IF :: Z :: if (v854 < v839) goto 3325::CF,106582:CD,106382:CD,106394:CD,106421:CD,106579:CD,106580:CD,106581
106427 :: PRED :: IF :: Z :: if (v857 < v398) goto 3162::CD,106272:CD,106277:CD,106278:CF,106428
106426 :: EXPR :: assign :: Ljava/lang/Object :: v856 = v861 + #(1)::DD,106585:CF,106584
106429 :: PRED :: IF :: Z :: if (v863 > #(0)) goto 1622::CD,105341:CD,105387:CD,105388:CD,105389:CD,105448:CD,105449:CD,106513:CD,106515:CD,106521:CD,106523:CD,106524:CD,106586
106428 :: EXPR :: assign :: Ljava/lang/Object :: v862 = v879 + #(-1)::DD,106586
106431 :: EXPR :: assign :: null :: PHI v218 = v217, v218::CF,106432:DD,106431:DD,106433:DD,106434:DD,106435
106433 :: EXPR :: assign :: null :: PHI v219 = v218, v219::CF,106434:DD,106433:DD,106435
106432 :: EXPR :: assign :: null :: PHI v58 = v217, v57::DD,104471:DD,104475
106435 :: EXPR :: assign :: null :: PHI v220 = v218, v219::DD,106436
106434 :: EXPR :: assign :: null :: PHI v76 = v218, v75::DD,104531:DD,104535
106437 :: EXPR :: assign :: null :: PHI v88 = #(1), #(0)::DD,104578
106436 :: EXPR :: assign :: null :: PHI v221 = v217, v220::DD,104564:DD,106448
106439 :: EXPR :: assign :: null :: PHI v223 = v222, v223::CF,106440:DD,106439:DD,106443:DD,106445
106438 :: EXPR :: assign :: null :: PHI v92 = #(1), #(0)::CF,104578
106441 :: EXPR :: assign :: null :: PHI v102 = #(0.0 d), v100::CF,106442:DD,104598:DD,104604
106440 :: EXPR :: assign :: null :: PHI v121 = v120, v121::CF,106441:DD,106440:DD,106444
106443 :: EXPR :: assign :: null :: PHI v224 = v223, v224::CF,106444:DD,106443:DD,106446
106442 :: EXPR :: assign :: null :: PHI v103 = v222, v101::DD,104599:DD,104603
106445 :: EXPR :: assign :: null :: PHI v116 = v223, v115::DD,104637:DD,104641
106444 :: EXPR :: assign :: null :: PHI v122 = v121, v122::CF,106445:DD,106444:DD,106447
106447 :: EXPR :: assign :: null :: PHI v123 = v120, v122::DD,104654
106446 :: EXPR :: assign :: null :: PHI v225 = v222, v224::CF,106447:DD,106448
106449 :: EXPR :: assign :: null :: PHI v120 = v86, v119::DD,104658:DD,106440:DD,106447
106448 :: EXPR :: assign :: null :: PHI v222 = v221, v225::CF,106449:DD,104566:DD,104659:DD,106439:DD,106442:DD,106446:DD,106451:DD,106452:DD,106453
106451 :: EXPR :: assign :: null :: PHI v226 = v222, v226::CF,106452:DD,106451:DD,106453
106450 :: EXPR :: assign :: null :: PHI v124 = #(1), #(0)::CF,104661
106453 :: EXPR :: assign :: null :: PHI v227 = v222, v226::DD,104688:DD,104693:DD,106454:DD,106476
106452 :: EXPR :: assign :: null :: PHI v132 = v222, v131::DD,104683:DD,104687
106455 :: EXPR :: assign :: null :: PHI v141 = v134, v140::DD,104712:DD,104716
106454 :: EXPR :: assign :: null :: PHI v228 = v227, v228::CF,106455:DD,104723:DD,104739:DD,106454:DD,106456:DD,106458
106457 :: EXPR :: assign :: null :: PHI v155 = v149, v154::DD,104754:DD,104758
106456 :: EXPR :: assign :: null :: PHI v229 = v228, v229::CF,106457:DD,104759:DD,106456:DD,106458
106459 :: EXPR :: assign :: null :: PHI v164 = #(1), #(0)::DD,104791
106458 :: EXPR :: assign :: null :: PHI v230 = v228, v229::DD,104778:DD,104793:DD,106461:DD,106473
106461 :: EXPR :: assign :: null :: PHI v231 = v230, v231::CF,106462:DD,104804:DD,106461:DD,106466
106460 :: EXPR :: assign :: null :: PHI v167 = #(1), #(0)::CF,104791
106463 :: EXPR :: assign :: null :: PHI v233 = v232, v233::CF,106464:DD,106463:DD,106466
106462 :: EXPR :: assign :: null :: PHI v172 = v169, v171::DD,104799:DD,104803
106465 :: EXPR :: assign :: null :: PHI v184 = v175, v183::DD,104830:DD,104834
106464 :: EXPR :: assign :: null :: PHI v187 = v186, v187::CF,106465:DD,104835:DD,106464
106467 :: EXPR :: assign :: null :: PHI v186 = v173, v185::DD,104839:DD,106464
106466 :: EXPR :: assign :: null :: PHI v232 = v231, v233::CF,106467:DD,104806:DD,104840:DD,106463:DD,106471
106469 :: EXPR :: assign :: null :: PHI v206 = v205, v206::CF,106470:DD,104878:DD,106469
106468 :: EXPR :: assign :: null :: PHI v235 = v234, v235::CF,106469:DD,106468:DD,106471
106471 :: EXPR :: assign :: null :: PHI v234 = v232, v235::CF,106472:DD,104847:DD,104853:DD,106468:DD,106473
106470 :: EXPR :: assign :: null :: PHI v203 = v195, v202::DD,104873:DD,104877
106473 :: EXPR :: assign :: null :: PHI v236 = v230, v234::DD,104884:DD,106474:DD,106476:CF,104883
106472 :: EXPR :: assign :: null :: PHI v205 = v188, v204::DD,104882:DD,106469
106475 :: EXPR :: assign :: null :: PHI v214 = v208, v213::DD,104901:DD,104905
106474 :: EXPR :: assign :: null :: PHI v237 = v236, v237::CF,106475:DD,106474:DD,106476
106477 :: EXPR :: assign :: null :: PHI v217 = #(0), v216::DD,104435:DD,104912:DD,106431:DD,106432:DD,106436:JM,104928:JM,105008:JM,106480:JM,104907
106476 :: EXPR :: assign :: null :: PHI v238 = v227, v236, v237::DD,104906
106479 :: EXPR :: assign :: null :: PHI v260 = #(0), v259::DD,104990:DD,104994
106478 :: EXPR :: assign :: null :: PHI v265 = v264, v265::CF,106479:DD,105006:DD,106478
106481 :: EXPR :: assign :: null :: PHI v335 = v334, v335::CF,106482:DD,106481:DD,106485:DD,106487
106480 :: EXPR :: assign :: null :: PHI v264 = v35, v263::DD,105007:DD,106478
106483 :: EXPR :: assign :: null :: PHI v281 = #(0.0 d), v279::CF,106484:DD,105045:DD,105051
106482 :: EXPR :: assign :: null :: PHI v301 = v300, v301::CF,106483:DD,106482:DD,106486
106485 :: EXPR :: assign :: null :: PHI v336 = v335, v336::CF,106486:DD,106485:DD,106488
106484 :: EXPR :: assign :: null :: PHI v282 = v334, v280::DD,105046:DD,105050
106487 :: EXPR :: assign :: null :: PHI v298 = v335, v297::DD,105093:DD,105097
106486 :: EXPR :: assign :: null :: PHI v302 = v301, v302::CF,106487:DD,105098:DD,106486
106489 :: EXPR :: assign :: null :: PHI v300 = v270, v299::DD,105099:DD,106482
106488 :: EXPR :: assign :: null :: PHI v334 = v333, v336::CF,106489:DD,106481:DD,106484:DD,106490:DD,106491
106491 :: EXPR :: assign :: null :: PHI v311 = v334, v310::DD,105124:DD,105128
106490 :: EXPR :: assign :: null :: PHI v337 = v334, v337::CF,106491:DD,106490:DD,106492
106493 :: EXPR :: assign :: null :: PHI v322 = #(0), v321::DD,105164:DD,105166:CF,105165
106492 :: EXPR :: assign :: null :: PHI v338 = v337, v338::CF,106493:DD,105165:DD,106492:DD,106496
106495 :: EXPR :: assign :: null :: PHI v327 = #(0), v326::DD,105180:DD,105184
106494 :: EXPR :: assign :: null :: PHI v339 = v333, v339::CF,106495:DD,106494:DD,106496
106497 :: EXPR :: assign :: null :: PHI v333 = v266, v332::DD,105019:DD,105197:DD,106488:DD,106494
106496 :: EXPR :: assign :: null :: PHI v340 = v338, v339::DD,105196
106499 :: EXPR :: assign :: null :: PHI v346 = #(1), #(0)::CF,105213
106498 :: EXPR :: assign :: null :: PHI v343 = #(1), #(0)::DD,105213
106501 :: EXPR :: assign :: null :: PHI v382 = v381, v382::CF,106502:DD,106501:DD,106505
106500 :: EXPR :: assign :: null :: PHI v394 = v393, v394::CF,106501:DD,105252:DD,105262:DD,106500:DD,106504
106503 :: EXPR :: assign :: null :: PHI v361 = v349, v359::DD,105243:DD,105247
106502 :: EXPR :: assign :: null :: PHI v360 = #(0.0 d), v358::CF,106503:DD,105242:DD,105248
106505 :: EXPR :: assign :: null :: PHI v383 = v382, v383::CF,106506:DD,105297:DD,106505
106504 :: EXPR :: assign :: null :: PHI v395 = v394, v395::CF,106505:DD,106504:DD,106507
106507 :: EXPR :: assign :: null :: PHI v393 = v392, v395::CF,106508:DD,105217:DD,106500:DD,106509
106506 :: EXPR :: assign :: null :: PHI v379 = v368, v378::DD,105292:DD,105296
106509 :: EXPR :: assign :: null :: PHI v396 = v392, v393::DD,106510
106508 :: EXPR :: assign :: null :: PHI v381 = v348, v380::DD,105298:DD,106501
106511 :: EXPR :: assign :: null :: PHI v388 = #(0), v387::DD,105311:DD,105315
106510 :: EXPR :: assign :: null :: PHI v397 = v396, v397::CF,106511:DD,105327:DD,106510
106513 :: EXPR :: assign :: null :: PHI v864 = v863, v864::DD,105388:DD,105391:DD,106513:DD,106518:DD,106521
106512 :: EXPR :: assign :: null :: PHI v392 = v342, v391::DD,105204:DD,105215:DD,105328:DD,106507:DD,106509
106515 :: EXPR :: assign :: null :: PHI v424 = v406, v423::DD,105343:DD,105367:DD,105386:DD,105387:DD,105389:DD,105393:DD,105405:DD,105442:DD,105443:DD,106523
106517 :: EXPR :: assign :: null :: PHI v437 = v436, #(0.0 d)::CF,105417
106516 :: EXPR :: assign :: null :: PHI v431 = v430, #(0.0 d)::DD,105417:CF,105405
106518 :: EXPR :: assign :: null :: PHI v865 = v864, v865::DD,105395:DD,105445:DD,106518:DD,106521
106521 :: EXPR :: assign :: null :: PHI v866 = v864, v865, v865, v865::DD,105450:DD,105455:DD,105460:DD,105738:DD,105750:DD,105764:DD,105810:DD,105819:DD,105825:DD,106533:DD,106544:DD,106566:DD,106572:DD,106584:DD,106586
106520 :: EXPR :: assign :: null :: PHI v447 = v427, v446::DD,105393:DD,105395:DD,105406:DD,105407:DD,105441:DD,105442:DD,105443:DD,105446:DD,106523
106523 :: EXPR :: assign :: null :: PHI v451 = v424, v424, v424, v447::CF,106524:DD,105448
106525 :: EXPR :: assign :: null :: PHI v475 = v508, v470::DD,106535:CF,105509
106524 :: EXPR :: assign :: null :: PHI v452 = #(4), #(3), #(1), #(2)::DD,105449:CF,105448
106526 :: EXPR :: assign :: null :: PHI v868 = v867, v868::DD,105530:DD,105544:DD,105565:DD,106526:DD,106530
106529 :: EXPR :: assign :: null :: PHI v505 = #(0), v503::DD,105587:DD,105591
106528 :: EXPR :: assign :: null :: PHI v510 = v509, v510::CF,106529:DD,106528:DD,106532
106530 :: EXPR :: assign :: null :: PHI v869 = v867, v868::DD,106533
106533 :: EXPR :: assign :: null :: PHI v867 = v866, v869::DD,106526:DD,106530:DD,106586
106532 :: EXPR :: assign :: null :: PHI v511 = v509, v510::DD,105592
106535 :: EXPR :: assign :: null :: PHI v508 = v455, v475::CF,106536:DD,105482:DD,106525
106537 :: EXPR :: assign :: null :: PHI v871 = v870, v871::DD,106537:DD,106541
106536 :: EXPR :: assign :: null :: PHI v509 = v457, v507::DD,105490:DD,105492:DD,105498:DD,105499:DD,105593:DD,106528:DD,106532
106539 :: EXPR :: assign :: null :: PHI v563 = v562, v563::CF,106540:DD,106539:DD,106543
106541 :: EXPR :: assign :: null :: PHI v872 = v870, v871::DD,106544
106540 :: EXPR :: assign :: null :: PHI v558 = #(0), v556::DD,105727:DD,105731
106543 :: EXPR :: assign :: null :: PHI v564 = v562, v563::DD,105732
106544 :: EXPR :: assign :: null :: PHI v870 = v866, v872::DD,105733:DD,106537:DD,106541:DD,106586
106547 :: EXPR :: assign :: null :: PHI v562 = v453, v560::DD,105733:DD,106539:DD,106543
106546 :: EXPR :: assign :: null :: PHI v561 = v513, v526::CF,106547:DD,105626
106549 :: EXPR :: assign :: null :: PHI v622 = #(1), #(0)::CF,105859
106548 :: EXPR :: assign :: null :: PHI v620 = #(1), #(0)::DD,105859:CF,105856
106551 :: EXPR :: assign :: null :: PHI v633 = #(0.0 d), v632::DD,105875:CF,105872
106550 :: EXPR :: assign :: null :: PHI v630 = v627, v629::DD,105870
106552 :: EXPR :: assign :: null :: PHI v874 = v873, v874::DD,106552:DD,106556
106555 :: EXPR :: assign :: null :: PHI v696 = #(0), v694::DD,106027:DD,106031
106554 :: EXPR :: assign :: null :: PHI v764 = v763, v764::CF,106555:DD,105970:DD,105984:DD,106005:DD,106554:DD,106558
106556 :: EXPR :: assign :: null :: PHI v875 = v873, v874::DD,106559:DD,106563
106559 :: EXPR :: assign :: null :: PHI v876 = v875, v876::DD,106559:DD,106563
106558 :: EXPR :: assign :: null :: PHI v765 = v763, v764::DD,106054:DD,106064:DD,106074:DD,106085:DD,106091:DD,106092:DD,106107:DD,106561:DD,106565
106561 :: EXPR :: assign :: null :: PHI v766 = v765, v766::CF,106562:DD,106128:DD,106142:DD,106163:DD,106561:DD,106565
106563 :: EXPR :: assign :: null :: PHI v877 = v875, v875, v876::DD,106566
106562 :: EXPR :: assign :: null :: PHI v758 = #(0), v756::DD,106185:DD,106189
106565 :: EXPR :: assign :: null :: PHI v767 = v765, v765, v766::DD,106190
106566 :: EXPR :: assign :: null :: PHI v873 = v866, v877::DD,106191:DD,106193:DD,106552:DD,106556:DD,106586
106569 :: EXPR :: assign :: null :: PHI v762 = v638, v722::CF,106570:DD,105884
106568 :: EXPR :: assign :: null :: PHI v761 = v637, v709::CF,106569:DD,105883:DD,106194
106571 :: EXPR :: assign :: null :: PHI v795 = v794, #(0.0 d)::DD,106230
106570 :: EXPR :: assign :: null :: PHI v763 = v453, v760::DD,105885:DD,105886:DD,105926:DD,105935:DD,105939:DD,106192:DD,106554:DD,106558:CF,106191
106573 :: EXPR :: assign :: null :: PHI v803 = #(0), v802::DD,106259:DD,106260
106572 :: EXPR :: assign :: null :: PHI v878 = v866, v878::CF,106573:DD,106572:DD,106584
106575 :: EXPR :: assign :: null :: PHI v858 = v857, v858::CF,106576:DD,106324:DD,106336:DD,106575:DD,106578
106574 :: EXPR :: assign :: null :: PHI v880 = v879, v880::CF,106575:DD,106574:DD,106577
106577 :: EXPR :: assign :: null :: PHI v881 = v879, v879, v880::CF,106578:DD,106579:DD,106582
106576 :: EXPR :: assign :: null :: PHI v835 = #(0), v833::DD,106363:DD,106367
106579 :: EXPR :: assign :: null :: PHI v882 = v881, v882::CF,106580:DD,106579:DD,106582
106578 :: EXPR :: assign :: null :: PHI v859 = v857, v857, v858::DD,106373:DD,106580:DD,106583:CF,106368
106581 :: EXPR :: assign :: null :: PHI v854 = #(0), v852::DD,106421:DD,106425
106580 :: EXPR :: assign :: null :: PHI v860 = v859, v860::CF,106581:DD,106382:DD,106394:DD,106580:DD,106583
106583 :: EXPR :: assign :: null :: PHI v861 = v859, v859, v860::DD,106426
106582 :: EXPR :: assign :: null :: PHI v883 = v881, v881, v882::CF,106583:DD,106584
106585 :: EXPR :: assign :: null :: PHI v857 = v453, v453, v453, v856::DD,106272:DD,106293:DD,106305:DD,106315:DD,106427:DD,106575:DD,106578
106584 :: EXPR :: assign :: null :: PHI v879 = v866, v866, v878, v883::CF,106585:DD,106428:DD,106574:DD,106577
106586 :: EXPR :: assign :: null :: PHI v863 = v243, v866, v867, v870, v873, v862::DD,105341:DD,106429:DD,106513
107729 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.copy()::JM,104305:JM,104299:JM,104302:CD,107745:CD,107779:CD,107783
107745 :: CALL :: call :: [[D :: v8 = v3.getArray()::CL,104318
107751 :: EXPR :: reference :: Ljava/lang/Object :: v12 = v8[v21]::
107755 :: EXPR :: reference :: [[D :: v13 = p0 $this .A::
107758 :: EXPR :: reference :: Ljava/lang/Object :: v14 = v13[v21]::
107762 :: EXPR :: reference :: D :: v15 = v14[v18]::DD,107766
107766 :: EXPR :: modify :: D :: v12[v18] = v15::
107771 :: EXPR :: reference :: I :: v11 = p0 $this .n::DD,107774
107770 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v18 + #(1)::DD,107782:CF,107781
107775 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,107783
107774 :: PRED :: IF :: Z :: if (v18 < v11) goto 34::CD,107770:CD,107781:CD,107782:CF,107775
107776 :: EXPR :: reference :: I :: v10 = p0 $this .m::DD,107779
107779 :: PRED :: IF :: Z :: if (v20 < v10) goto 29::CD,107774:CD,107775:CD,107781:CD,107782:CD,107783
107781 :: EXPR :: assign :: null :: PHI v21 = v20, v21::CF,107782:DD,107775:DD,107781
107783 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,107779:DD,107781
107782 :: EXPR :: assign :: null :: PHI v18 = #(0), v17::DD,107770:DD,107774
108269 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.LUDecomposition.det()::CE,108270:CD,108280:CD,108289:CD,108307:CD,108308:CD,108309:CD,108310
108270 :: EXIT :: exit :: D :: org.biojava.nbio.structure.jama.LUDecomposition.det()::JM,89442
108280 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v17 = new java.lang.IllegalArgumentException::
108286 :: EXPR :: reference :: I :: v5 = p0 $this .pivsign::DD,108289
108289 :: EXPR :: assign :: D :: v6 = CONVERT I to D v5::DD,108309
108291 :: EXPR :: reference :: [[D :: v9 = p0 $this .LU::
108294 :: EXPR :: reference :: Ljava/lang/Object :: v10 = v9[v16]::
108298 :: EXPR :: reference :: D :: v11 = v10[v16]::DD,108302
108303 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v16 + #(1)::DD,108310:CF,108309
108302 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v15 * v11::DD,108309:CF,108303
108304 :: EXPR :: reference :: I :: v8 = p0 $this .n::DD,108307
108307 :: PRED :: IF :: Z :: if (v16 < v8) goto 34::CD,108302:CD,108303:CD,108309:CD,108310:CF,108308
108309 :: EXPR :: assign :: null :: PHI v15 = v6, v12::CF,108310:DD,108302:DD,108308
108308 :: NORM :: compound :: D :: return v15::DD,108270
108310 :: EXPR :: assign :: null :: PHI v16 = #(0), v14::DD,108303:DD,108307
108327 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.checkMatrixDimensions(org.biojava.nbio.structure.jama.Matrix)::CD,108346
108346 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
108357 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getRepresentativeAtomArray(org.biojava.nbio.structure.Chain)::CE,108358:CD,108361:CD,108365:CD,108369:CD,108440:CD,108444:CD,108445:CD,108449:CD,108450:CD,108455:CD,108456
108358 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.StructureTools.getRepresentativeAtomArray(org.biojava.nbio.structure.Chain)::JM,89794
108361 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,108449:JM,108455
108365 :: CALL :: call :: Ljava/util/List :: v6 = p1 $c .getAtomGroups()::JM,108444:CL,45126
108369 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,108444
108374 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,108444
108379 :: CALL :: call :: [I :: v16 = $SWITCH_TABLE$org$biojava$nbio$structure$GroupType()::CL,124527
108382 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v18 = v14.getType()::CL,123906:CL,123890:CL,123898
108386 :: CALL :: call :: I :: v20 = v18.ordinal()::
108390 :: EXPR :: reference :: I :: v21 = v16[v20]::DD,108394
108395 :: CALL :: call :: Z :: v24 = v14.hasAtom(#(CA))::JM,108400:CL,45135
108394 :: PRED :: IF :: null :: switch v21::CD,108395:CD,108400:CD,108424:CD,108429:JM,108444
108401 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v26 = v14.getAtom(#(CA))::CL,45210
108400 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 143::CD,108401:CD,108406:CD,108410:CD,108412:JM,108444
108406 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v28 = v26.getElement()::JM,108412:CL,45274
108410 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v29 = org.biojava.nbio.structure.Element.C::CF,108412
108413 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v34 = v14.getAtom(#(CA))::CL,45210
108412 :: PRED :: IF :: Z :: if (v28 != v29) goto 143::CD,108413:CD,108418:JM,108444
108418 :: CALL :: call :: Z :: v36 = v3.add(v34)::
108424 :: CALL :: call :: Z :: v32 = v14.hasAtom(#(P))::JM,108429:CL,45135
108429 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 143::CD,108430:CD,108435:JM,108444
108430 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v38 = v14.getAtom(#(P))::CL,45210
108435 :: CALL :: call :: Z :: v40 = v3.add(v38)::
108440 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,108444
108445 :: CALL :: call :: I :: v42 = v3.size()::JM,108449
108444 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,108374:CD,108379:CD,108382:CD,108386:CD,108394:CD,108440:JM,108444:JM,108449
108449 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Atom :: v43 = new org.biojava.nbio.structure.Atom[]::JM,108455
108450 :: CALL :: call :: [Ljava/lang/Object :: v45 = v3.toArray(v43)::JM,108455
108455 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::CF,108456
108456 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Atom :: return v46::DD,108358
108991 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::CE,108992:CD,108996:CD,109000:CD,109006:CD,109010:CD,109019:CD,109024:CD,109028:CD,109030:CD,109045:CD,109054:CD,109130:CD,109134
108992 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::JM,90645:JM,90680
108996 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,109063:JM,109134
109000 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $pdbId .substring(#(1), #(3))::
109006 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toLowerCase()::
109011 :: EXPR :: reference :: Ljava/io/File :: v13 = p0 $this .splitDirPath::
109010 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
109019 :: CALL :: call :: Z :: v16 = v4.add(v12)::
109024 :: CALL :: call :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = p0 $this .getObsoleteBehavior()::JM,109030:CL,124843
109028 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v19 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,109030
109031 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::
109030 :: PRED :: IF :: Z :: if (v18 != v19) goto 71::CF,109031:CD,109040:CF,109045
109032 :: EXPR :: reference :: Ljava/io/File :: v21 = p0 $this .obsoleteDirPath::
109040 :: CALL :: call :: Z :: v24 = v4.add(v20)::
109045 :: NORM :: declaration :: [Ljava/lang/String :: v26 = new java.lang.String[]::DD,109064
109054 :: CALL :: call :: Ljava/util/Iterator :: v31 = v4.iterator()::JM,109063:JM,109134
109059 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,109063:JM,109134
109063 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::CF,109064
109064 :: EXPR :: assign :: I :: v37 = v26.length::DD,109129
109070 :: CALL :: call :: Ljava/util/List :: v40 = p0 $this .getExtensions()::JM,109127:JM,109083:CL,35288
109074 :: CALL :: call :: Ljava/util/Iterator :: v42 = v40.iterator()::JM,109127:JM,109083
109079 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,109127:JM,109083
109083 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::CF,109084
109085 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
109084 :: NORM :: declaration :: Ljava/io/File :: v48 = new java.io.File::DD,109122:CF,109085
109086 :: CALL :: call :: Ljava/lang/String :: v51 = valueOf(v38)::
109094 :: CALL :: call :: Ljava/lang/String :: v54 = p1 $pdbId .toLowerCase()::
109098 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v49.append(v54)::
109103 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(v47)::
109108 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
109117 :: CALL :: call :: Z :: v63 = v48.exists()::JM,109121
109121 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 207::CF,109136:CD,109122:CD,109123:CD,109127
109123 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,109127:JM,109083
109122 :: NORM :: compound :: Ljava/io/File :: return v48::DD,108992
109127 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 146::CD,109079:CD,109083:CD,109084:CD,109085:CD,109086:CD,109094:CD,109098:CD,109103:CD,109108:CD,109117:CD,109121:CD,109128:CD,109129:CD,109137:CD,109136:JM,109127
109129 :: PRED :: IF :: Z :: if (v65 < v37) goto 127::CD,109070:CD,109074:CD,109123:CD,109127:CD,109130:CD,109134:CD,109136:JM,109063
109128 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v66 + #(1)::DD,109137
109130 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,109063:JM,109134
109135 :: NORM :: compound :: Ljava/io/File :: return #(null)::DD,108992
109134 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 99::CD,109059:CD,109063:CD,109064:CD,109129:CD,109135:CD,109137:JM,109134
109137 :: EXPR :: assign :: null :: PHI v65 = #(0), v64::DD,109129:DD,109136
109136 :: EXPR :: assign :: null :: PHI v66 = v65, v66::JM,109127:JM,109083:DD,109128:DD,109136
109203 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CE,109204:CD,109206:CD,109208
109204 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::
109206 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior::DD,109208:DD,109209
109209 :: NORM :: compound :: [I :: return v2::DD,109204
109208 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,109209:CD,109210:CD,109213:CD,109214:CD,109215:CD,109217:CD,109226:CD,109228:CD,109237:CD,109239:CD,109248:CD,109250:CD,109259:CD,109261:CD,109272
109210 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = values()::JM,109213:CL,124852
109213 :: EXPR :: assign :: I :: v6 = v5.length::CF,109214
109215 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v8 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::
109214 :: NORM :: declaration :: [I :: v7 = new []::DD,109272
109217 :: CALL :: call :: I :: v10 = v8.ordinal()::
109221 :: EXPR :: modify :: I :: v7[v10] = #(2)::
109226 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::
109228 :: CALL :: call :: I :: v16 = v14.ordinal()::
109232 :: EXPR :: modify :: I :: v7[v16] = #(3)::
109237 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v20 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::
109239 :: CALL :: call :: I :: v22 = v20.ordinal()::
109243 :: EXPR :: modify :: I :: v7[v22] = #(4)::
109248 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::
109250 :: CALL :: call :: I :: v28 = v26.ordinal()::
109254 :: EXPR :: modify :: I :: v7[v28] = #(5)::
109259 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v32 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::
109261 :: CALL :: call :: I :: v34 = v32.ordinal()::
109265 :: EXPR :: modify :: I :: v7[v34] = #(1)::
109272 :: NORM :: compound :: [I :: return v7::DD,109204
109315 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::JM,90654
109314 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::CE,109315:CD,109321
109318 :: EXPR :: reference :: Z :: v3 = p0 $this .updateRemediatedFiles::DD,109321
109321 :: NORM :: compound :: Z :: return v3::CF,109315
109353 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getCurrent(java.lang.String)::CD,109357:CD,109363
109357 :: CALL :: call :: Ljava/util/List :: v6 = getReplacement(p1 $oldPdbId , #(1), #(0))::JM,109363:JM,109368:CL,124879
109363 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,109364:CD,109368
109364 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,109368
109369 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.get(#(0))::JM,109368
109368 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 32::CD,109369:JM,109368
109388 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String,java.lang.String,boolean,java.io.File)::CD,109396:CD,109402:CD,109403:CD,109425:CD,109431:CD,109439:CD,109448:CD,109458
109396 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getDir(p1 $pdbId , p3 $obsolete )::CL,125336
109403 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(p1 $pdbId )::CL,125465:CL,125434
109402 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
109425 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $pdbId .substring(#(1), #(3))::
109431 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toLowerCase()::
109439 :: CALL :: call :: Ljava/lang/String :: v26 = p0 $this .getFilename(p1 $pdbId )::CL,125465:CL,125434
109448 :: CALL :: call :: Ljava/lang/String :: v28 = format(#(%s%s/%s/%s), v15)::
109459 :: CALL :: call :: Ljava/util/Date :: v33 = p0 $this .getLastModifiedTime(v29)::JM,109473:JM,109464:JM,109469:CL,125498
109458 :: PRED :: IF :: Z :: if (p4 $existingFile  == #(null)) goto 150::CD,109459:CD,109464:CD,109498:CD,109503:CD,109508:CD,109518:CD,109523:CD,109528:CD,109536
109465 :: CALL :: call :: J :: v38 = p4 $existingFile .lastModified()::JM,109473
109464 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 137::CD,109465:CD,109469:CD,109473:CD,109474:CD,109498:CD,109503:CD,109508:CD,109518:CD,109523:CD,109528:CD,109536
109469 :: CALL :: call :: J :: v40 = v33.getTime()::JM,109473:JM,109469
109473 :: EXPR :: assign :: Z :: v41 = v38 == v40::DD,109474
109474 :: PRED :: IF :: Z :: if (v41 < #(0)) goto 116::CD,109498:CD,109503:CD,109508:CD,109518:CD,109523:CD,109528:CD,109536
109498 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
109503 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v49.append(v28)::
109508 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
109518 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v58 = new java.lang.StringBuilder::
109523 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v58.append(v9)::
109528 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
109536 :: CALL :: call :: V :: downloadFile(v29, v9)::CL,125583
109599 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::CE,109600:CD,109608:CD,109612
109600 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::JM,90734
109608 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v7 = getStatus(v4)::JM,109612:CL,125751
109612 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 41::CD,109627:CD,109628
109623 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(0)]::DD,109627
109627 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v11::DD,109600
109628 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,109600
109643 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.setCacheLocation(java.lang.String)::CD,109648:CD,109650:CD,109655:CD,109680
109648 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,109680:JM,109655
109650 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,109680:JM,109655
109655 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,109680:CF,109656:CD,109657:CD,109665:CD,109667:CD,109672
109657 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
109656 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,109680
109665 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,109680
109667 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::JM,109680
109672 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::JM,109680
109676 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheLocation = v17::
109680 :: EXPR :: assign :: null :: PHI v17 = p1 $cacheLocation , v16::DD,109676
109689 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::
109688 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::CE,109689:CD,109701:CD,109706
109701 :: CALL :: call :: Ljava/lang/String :: v9 = format(p1 $fileNameTemplate , v5)::JM,109706
109706 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,109689
109745 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::
109744 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::CE,109745:CD,109748:CD,109752:CD,109757:CD,109758:CD,109762:CD,109768
109748 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $f .getName()::JM,109762:JM,109752:JM,109768:JM,109757:JM,109758
109752 :: CALL :: call :: I :: v8 = v4.lastIndexOf(#(.))::JM,109762:JM,109752:JM,109768:JM,109757:JM,109758
109757 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 + #(1)::JM,109762:JM,109752:JM,109768:JM,109757:JM,109758
109758 :: CALL :: call :: I :: v12 = v4.length()::JM,109762:JM,109752:JM,109768:JM,109757:JM,109758
109762 :: CALL :: call :: Ljava/lang/String :: v14 = v4.substring(v10, v12)::JM,109762:JM,109752:JM,109768:JM,109757:JM,109758
109768 :: NORM :: compound :: Ljava/lang/String :: return v14::CF,109745
109797 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.copy(java.io.File,java.io.File)::
109943 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setFormat(java.lang.String)::JM,109948
109948 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .format = p1 $format ::
109954 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setDomainName(java.lang.String)::JM,109959
109959 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .domainName = p1 $domainName ::
109965 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setVersion(java.lang.String)::JM,109970
109970 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = p1 $version ::
109976 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setDate(java.util.Date)::JM,109981
109981 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .date = p1 $date ::
109987 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setCATH(java.lang.String)::CD,109992:CD,110001:CD,110005:CD,110009:CD,110017:CD,110021:CD,110025:CD,110033:CD,110037:CD,110041:CD,110049:CD,110057
109992 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $cathCode .split(#([.]))::
109997 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(0)]::
110001 :: CALL :: call :: I :: v10 = parseInt(v8)::
110005 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
110009 :: CALL :: call :: V :: p0 $this .setClassId(v12)::CL,126070
110013 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v6[#(1)]::
110017 :: CALL :: call :: I :: v17 = parseInt(v15)::
110021 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
110025 :: CALL :: call :: V :: p0 $this .setArchitectureId(v19)::CL,126081
110029 :: EXPR :: reference :: Ljava/lang/Object :: v22 = v6[#(2)]::
110033 :: CALL :: call :: I :: v24 = parseInt(v22)::
110037 :: CALL :: call :: Ljava/lang/Integer :: v26 = valueOf(v24)::
110041 :: CALL :: call :: V :: p0 $this .setTopologyId(v26)::CL,126092
110045 :: EXPR :: reference :: Ljava/lang/Object :: v29 = v6[#(3)]::
110049 :: CALL :: call :: I :: v31 = parseInt(v29)::
110057 :: CALL :: call :: V :: p0 $this .setHomologyId(v33)::CL,126103
110077 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setLength(java.lang.Integer)::JM,110082
110082 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .length = p1 $length ::
110097 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setStart(java.lang.String)::JM,110102
110102 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .start = p1 $start ::
110108 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setStop(java.lang.String)::JM,110113
110113 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .stop = p1 $stop ::
110119 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setLength(java.lang.Integer)::JM,110124
110124 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .length = p1 $length ::
110130 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setSegmentId(java.lang.Integer)::JM,110135
110135 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .segmentId = p1 $segmentId ::
110141 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setSequenceHeader(java.lang.String)::JM,110146
110146 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequenceHeader = p1 $sequenceHeader ::
110152 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setSequence(java.lang.String)::JM,110157
110157 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequence = p1 $sequence ::
110163 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setName(java.lang.String)::JM,110168
110168 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $name ::
110174 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSource(java.lang.String)::JM,110179
110179 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .source = p1 $source ::
110185 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSequenceHeader(java.lang.String)::JM,110190
110190 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequenceHeader = p1 $sequenceHeader ::
110196 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSequence(java.lang.String)::JM,110201
110201 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequence = p1 $sequence ::
110207 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSegments(java.util.List)::JM,110212
110212 :: EXPR :: modify :: Ljava/util/List :: p0 $this .segments = p1 $segments ::
110219 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::
110218 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::CE,110219:CD,110222:CD,110226:CD,110232:CD,110243:CD,110249:CD,110254:CD,110279:CD,110284:CD,110288:CD,110289
110223 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .domainName::
110222 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,110288
110226 :: CALL :: call :: Ljava/lang/String :: v8 = v4.substring(#(0), #(4))::
110232 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
110240 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .domainName::JM,110254
110243 :: CALL :: call :: Ljava/lang/String :: v15 = v12.substring(#(4), #(5))::JM,110254
110249 :: CALL :: call :: Z :: v18 = v15.equals(#(0))::JM,110254
110255 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::JM,110289
110254 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 65::CF,110255:CD,110263:CD,110269:CD,110274:CD,110289
110260 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainName::JM,110289
110263 :: CALL :: call :: Ljava/lang/String :: v25 = v23.substring(#(4), #(5))::JM,110289
110269 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::JM,110289
110274 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::JM,110289
110279 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v3.append(v30)::JM,110288
110284 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,110288
110289 :: EXPR :: assign :: null :: PHI v30 = v29, #()::JM,110288
110288 :: NORM :: compound :: Ljava/lang/String :: return v34::DD,110219
110305 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainListFileName()::CD,110309:CD,110313:CD,110321:CD,110326:CD,110331
110309 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
110313 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
110321 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-list-v%s.txt))::CL,109688
110326 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::
110331 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
110340 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList(java.io.BufferedReader)::CD,110418:CD,110422:JM,110351
110346 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,110422:JM,110351
110351 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 18::CD,110353:CD,110358:CD,110362:CD,110371:CD,110376:CD,110400:CD,110412:CD,110424
110353 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v12 = p0 $this .parseCathListFileLine(v5)::CL,126114
110358 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getPdbIdAndChain()::CL,110218
110362 :: CALL :: call :: Ljava/lang/String :: v17 = v14.substring(#(0), #(4))::
110371 :: CALL :: call :: Z :: v20 = v18.containsKey(v17)::JM,110376
110376 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 66::CF,110387:CD,110380:CD,110385:CD,110394:CD,110424
110380 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v17)::JM,110385
110385 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,110424
110387 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,110424
110394 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.put(v17, v25)::
110400 :: CALL :: call :: Z :: v32 = v30.add(v12)::
110412 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.put(v35, v12)::
110418 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,110422:JM,110351
110422 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,110346:CD,110351:CD,110418:JM,110422
110424 :: EXPR :: assign :: null :: PHI v30 = v24, v25::
110466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFragment.setFragmentId(java.lang.Integer)::JM,110471
110471 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .fragmentId = p1 $fragmentId ::
110477 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFragment.setStart(java.lang.String)::JM,110482
110482 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .start = p1 $start ::
110488 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFragment.setStop(java.lang.String)::JM,110493
110493 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .stop = p1 $stop ::
110505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFragment.setLength(java.lang.Integer)::JM,110510
110510 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .length = p1 $length ::
110541 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::JM,93152
110540 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::CE,110541:CD,110560:CD,110564:CD,110568:CD,110592:CD,110611
110560 :: CALL :: call :: Ljava/io/File :: v11 = p0 $this .getDomainFile()::CL,126355
110564 :: CALL :: call :: Z :: v13 = v11.exists()::JM,110568
110569 :: CALL :: call :: J :: v16 = v11.length()::JM,110573
110568 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 51::CD,110569:CD,110573:CD,110574:CD,110611
110573 :: EXPR :: assign :: Z :: v26 = v16 == #(0 l)::DD,110574
110574 :: PRED :: IF :: Z :: if (v26 <= #(0)) goto 51::CD,110611
110592 :: NORM :: compound :: Z :: return v28::DD,110541
110611 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,110592
110627 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.downloadDomains()::CD,110648:CD,110652:CD,110660:CD,110665:CD,110669:CD,110674:CD,110682:CD,110694:CD,110701:CD,110709:CD,110714:CD,110719:CD,110723:CD,110728
110648 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
110652 :: CALL :: call :: Ljava/lang/String :: v14 = valueOf(v12)::
110660 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v11.append(#(/ecod/distributions/))::
110665 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getDomainFilename()::CL,126377
110669 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
110674 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
110682 :: CALL :: call :: Ljava/io/File :: v27 = p0 $this .getDomainFile()::CL,126355
110694 :: CALL :: call :: V :: downloadFile(v10, v27)::CL,125583
110701 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
110706 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .url::
110709 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v34.append(v37)::
110714 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(#(/ecod/distributions/))::
110719 :: CALL :: call :: Ljava/lang/String :: v43 = p0 $this .getDomainFilename()::CL,126377
110723 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
110728 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
110808 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.parseDomains()::CD,110829:JM,137431:JM,144409:CD,110837:CD,110844
110829 :: CALL :: call :: Ljava/io/File :: v12 = p0 $this .getDomainFile()::CL,126355
110837 :: CALL :: call :: Ljava/util/List :: v15 = v10.getDomains()::JM,110841:CL,126418
110841 :: EXPR :: modify :: Ljava/util/List :: p0 $this .allDomains = v15::
110844 :: CALL :: call :: Ljava/lang/String :: v17 = v10.getVersion()::JM,110848:CL,126427
110848 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .parsedVersion = v17::
110927 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .rootURL = p1 $url ::
110935 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.addMirror(org.biojava.nbio.structure.scop.ScopMirror)::CD,110943
110940 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .mirrors::
110943 :: CALL :: call :: Z :: v6 = v4.add(p1 $scopURLs )::
110963 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getClaFilename()::CD,110967:CD,110971:CD,110979:CD,110987:CD,110992
110967 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
110971 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
110979 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v3.append(#(dir.cla.scop.txt_))::
110984 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .scopVersion::
110987 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(v11)::
110992 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
111001 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.initScopURLs()::CD,111008:CD,111012
111005 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,111012
111008 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,111012
111012 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 13::CF,111014:JM,137506:JM,126659:JM,126597:JM,126596:JM,126628:JM,137509:JM,126633:JM,126632:JM,126664:JM,137512:JM,126605:JM,126641:JM,126675:JM,126610:JM,126615:JM,126614:JM,126646:JM,126651:JM,126650:JM,137503:JM,126623:CD,111018:CD,111030:CD,111038
111014 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v7 = new org.biojava.nbio.structure.scop.ScopMirror::
111018 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v9 = new org.biojava.nbio.structure.scop.ScopMirror::
111027 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .mirrors::
111030 :: CALL :: call :: Z :: v18 = v16.add(v7)::
111035 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .mirrors::
111038 :: CALL :: call :: Z :: v21 = v19.add(v9)::
111061 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopMirror.getClaURL(java.lang.String)::CD,111074
111074 :: CALL :: call :: Ljava/lang/String :: v9 = format(v4, v6)::
111085 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getClaURL(java.lang.String)::CD,111090:CD,111094:CD,111102:CD,111108:CD,111113
111090 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
111094 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
111102 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(#(cla), p1 $scopVersion )::CL,126694
111108 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v4.append(v11)::
111113 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
111123 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,111131:CD,111136:CD,111141:CD,111146:CD,111151:CD,111159
111131 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
111136 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(p1 $remoteURL )::
111141 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#( to: ))::
111146 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p2 $localFile )::
111151 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
111159 :: CALL :: call :: V :: downloadFile(p1 $remoteURL , p2 $localFile )::CL,125583
111172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification(java.io.BufferedReader)::CD,111192:CD,111193:CD,111198:CD,111203:CD,111281:CD,111282:CD,111287:CD,111292:CD,111457:CD,111461:JM,111183
111178 :: CALL :: call :: Z :: v10 = v7.startsWith(#(#))::JM,111461:JM,111183
111183 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 24::CD,111185:CD,111233:CD,111237:CD,111245:CD,111249:CD,111253:CD,111257:CD,111262:CD,111266:CD,111270:CD,111274:CD,111305:CD,111310:CD,111318:CD,111323:CD,111331:CD,111336:CD,111344:CD,111349:CD,111357:CD,111362:CD,111370:CD,111375:CD,111383:CD,111388:CD,111392:CD,111396:CD,111400:CD,111404:CD,111408:CD,111412:CD,111416:CD,111423:CD,111428:CD,111452:CD,111474
111185 :: CALL :: call :: [Ljava/lang/String :: v14 = v7.split(#(	))::
111193 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
111192 :: NORM :: declaration :: Ljava/io/IOException :: v119 = new java.io.IOException::
111198 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v120.append(v7)::JM,111461:JM,111183
111203 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::
111229 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v14[#(4)]::
111233 :: CALL :: call :: I :: v28 = parseInt(v26)::
111237 :: CALL :: call :: Ljava/lang/Integer :: v30 = valueOf(v28)::
111245 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v33 = new org.biojava.nbio.structure.scop.ScopDomain::
111249 :: CALL :: call :: V :: v33.setScopId(v19)::CL,93741
111253 :: CALL :: call :: V :: v33.setPdbId(v20)::CL,93699
111257 :: CALL :: call :: Ljava/util/List :: v38 = p0 $this .extractRanges(v22)::CL,126864
111262 :: CALL :: call :: V :: v33.setRanges(v38)::CL,93730
111266 :: CALL :: call :: V :: v33.setClassificationId(v24)::CL,93628
111270 :: CALL :: call :: V :: v33.setSunid(v30)::CL,93781
111274 :: CALL :: call :: [Ljava/lang/String :: v44 = v32.split(#(,))::
111281 :: NORM :: declaration :: Ljava/io/IOException :: v110 = new java.io.IOException::
111282 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
111287 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v7)::JM,111461:JM,111183
111292 :: CALL :: call :: Ljava/lang/String :: v117 = v115.toString()::
111301 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v44[#(0)]::
111305 :: CALL :: call :: Ljava/lang/String :: v49 = v47.substring(#(3))::
111310 :: CALL :: call :: I :: v51 = parseInt(v49)::
111314 :: EXPR :: reference :: Ljava/lang/Object :: v52 = v44[#(1)]::
111318 :: CALL :: call :: Ljava/lang/String :: v54 = v52.substring(#(3))::
111323 :: CALL :: call :: I :: v56 = parseInt(v54)::
111327 :: EXPR :: reference :: Ljava/lang/Object :: v57 = v44[#(2)]::
111331 :: CALL :: call :: Ljava/lang/String :: v59 = v57.substring(#(3))::
111336 :: CALL :: call :: I :: v61 = parseInt(v59)::
111340 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v44[#(3)]::
111344 :: CALL :: call :: Ljava/lang/String :: v64 = v62.substring(#(3))::
111349 :: CALL :: call :: I :: v66 = parseInt(v64)::
111353 :: EXPR :: reference :: Ljava/lang/Object :: v67 = v44[#(4)]::
111357 :: CALL :: call :: Ljava/lang/String :: v69 = v67.substring(#(3))::
111362 :: CALL :: call :: I :: v71 = parseInt(v69)::
111366 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v44[#(5)]::
111370 :: CALL :: call :: Ljava/lang/String :: v74 = v72.substring(#(3))::
111375 :: CALL :: call :: I :: v76 = parseInt(v74)::
111379 :: EXPR :: reference :: Ljava/lang/Object :: v77 = v44[#(6)]::
111383 :: CALL :: call :: Ljava/lang/String :: v79 = v77.substring(#(3))::
111388 :: CALL :: call :: I :: v81 = parseInt(v79)::
111392 :: CALL :: call :: V :: v33.setClassId(v51)::CL,93608
111396 :: CALL :: call :: V :: v33.setFoldId(v56)::CL,93688
111400 :: CALL :: call :: V :: v33.setSuperfamilyId(v61)::CL,93801
111404 :: CALL :: call :: V :: v33.setFamilyId(v66)::CL,93668
111408 :: CALL :: call :: V :: v33.setDomainId(v71)::CL,93648
111412 :: CALL :: call :: V :: v33.setSpeciesId(v76)::CL,93761
111416 :: CALL :: call :: V :: v33.setPx(v81)::CL,93719
111423 :: CALL :: call :: Z :: v91 = v89.containsKey(v20)::JM,111428
111428 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 372::CF,111439:CD,111432:CD,111437:CD,111446:CD,111474
111432 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.get(v20)::JM,111437
111437 :: EXPR :: assign :: Ljava/lang/Object :: v95 = CHECKCAST v94::DD,111474
111439 :: NORM :: declaration :: Ljava/util/ArrayList :: v96 = new java.util.ArrayList::DD,111474
111446 :: CALL :: call :: Ljava/lang/Object :: v100 = v98.put(v20, v96)::
111452 :: CALL :: call :: Z :: v103 = v101.add(v33)::
111457 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $buffer .readLine()::JM,111461:JM,111183
111461 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 11::CD,111178:CD,111183:CD,111457:JM,111461
111474 :: EXPR :: assign :: null :: PHI v101 = v95, v96::
112315 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSwissprotId(java.lang.String)::JM,112320
112320 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .swissprot_id = p1 $sp_id ::
112327 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::JM,94552
112326 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::CE,112327:CD,112331:CD,112344:CD,112348:CD,112350:JM,112341:JM,112340
112331 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $atomGroups .iterator()::JM,112341:JM,112340:JM,112348
112336 :: CALL :: call :: Ljava/lang/Object :: v10 = v6.next()::JM,112340:JM,112348
112341 :: PRED :: IF :: Z :: if (p2 $g  != v11) goto 31::CD,112342:CD,112343:CD,112344:CD,112348:CD,112350
112340 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,112341
112343 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v14 + #(1)::DD,112350
112342 :: NORM :: compound :: I :: return v14::DD,112327
112344 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,112340:JM,112348
112349 :: NORM :: compound :: I :: return #(-1)::DD,112327
112348 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 15::CD,112336:CD,112340:CD,112341:CD,112349:JM,112348
112350 :: EXPR :: assign :: null :: PHI v14 = #(0), v13::JM,112340:JM,112348:DD,112342:DD,112343
112365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::CE,112366:CD,112373:CD,112378:CD,112379
112366 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::JM,94583
112370 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .groups::JM,112378
112373 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $position )::JM,112378
112379 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,112366
112378 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,112379
112383 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.getChainId()::
112382 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getChainId()::CE,112383:CD,112389
112386 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,112389
112389 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,112383
112391 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::CE,112392:CD,112398
112392 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::JM,95428:JM,147329:JM,147316:JM,147369:JM,147630
112395 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .seqNum::DD,112398
112398 :: NORM :: compound :: Ljava/lang/Integer :: return v3::CF,112392
112419 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
112422 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p2 $residueNumber ::
112425 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p3 $insCode ::
112437 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::JM,94881:JM,94882:JM,94823:JM,94886:JM,94824:JM,94891:JM,95053:JM,94828:JM,95054:JM,94833:JM,94963:JM,95123:JM,95058:JM,94964:JM,95124:JM,95063:JM,94872:JM,94968:JM,95128:JM,94973:JM,95133:JM,94876:JM,100011
112436 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::CE,112437:CD,112444:CD,112464:CD,112468:JM,112462
112441 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entities::JM,112453:JM,112468
112444 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,112453:JM,112468
112449 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,112453:JM,112468
112453 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,112454:JM,112462:DD,112463
112454 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,112454:JM,112462
112458 :: CALL :: call :: I :: v16 = parseInt(v14)::JM,112462
112463 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return v12::CF,112437
112462 :: PRED :: IF :: Z :: if (v16 != p1 $entity_id ) goto 41::CD,112463:CD,112464:CD,112468:JM,112453
112464 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,112453:JM,112468
112468 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,112449:CD,112453:CD,112454:CD,112458:CD,112462:CD,112481:JM,112468
112481 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return #(null)::CF,112437
112497 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::JM,94822:JM,94962:JM,95052:JM,95114:JM,95857
112496 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::CE,112497:CD,112504:CD,112520:CD,112524:JM,112518
112501 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,112513:JM,112524
112504 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,112513:JM,112524
112509 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,112513:JM,112524
112513 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,112519
112514 :: CALL :: call :: I :: v14 = v12.getMolId()::JM,112518:CL,103739
112519 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v12::DD,112497
112518 :: PRED :: IF :: Z :: if (v14 != p1 $molId ) goto 34::CD,112519:CD,112520:CD,112524:JM,112513
112520 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,112513:JM,112524
112525 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return #(null)::DD,112497
112524 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,112509:CD,112513:CD,112514:CD,112518:CD,112525:JM,112524
112536 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESG(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen,int)::JM,103281:JM,103274:CD,112546:CD,112554:CD,112562:CD,112570:CD,112578:CD,112586:CD,112594:CD,112602
112546 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,103402
112554 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,127989
112562 :: CALL :: call :: V :: v5.setCell(v12)::CL,128000
112570 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,128011
112578 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,128022
112586 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,128033
112594 :: CALL :: call :: V :: v5.setExpressionSystemTaxId(v24)::CL,128044
112602 :: CALL :: call :: V :: v5.setExpressionSystem(v27)::CL,128055
112626 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolName(java.lang.String)::JM,112631
112631 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = p1 $molName ::
112637 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addCompound(org.biojava.nbio.structure.Compound)::CD,112645
112642 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::
112645 :: CALL :: call :: Z :: v6 = v4.add(p1 $compound )::
112663 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESN(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat,int)::JM,103281:JM,103274:CD,112673:CD,112681:CD,112689:CD,112697:CD,112705:CD,112713
112673 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,103402
112681 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,127989
112689 :: CALL :: call :: V :: v5.setCell(v12)::CL,128000
112697 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,128011
112705 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,128022
112713 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,128033
112733 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESS(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn,int)::JM,103281:JM,103274:CD,112743:CD,112751:CD,112759:CD,112767
112743 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,103402
112751 :: CALL :: call :: V :: v5.setOrganismCommon(v9)::CL,128011
112759 :: CALL :: call :: V :: v5.setOrganismScientific(v12)::CL,128022
112767 :: CALL :: call :: V :: v5.setOrganismTaxId(v15)::CL,128033
112783 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::CE,112784:CD,112788:CD,112813:CD,112817:JM,112797
112784 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::JM,95342:JM,95597:JM,133652
112788 :: CALL :: call :: Ljava/util/Iterator :: v5 = p2 $atomList .iterator()::JM,112817:JM,112797
112793 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,112817:JM,112797
112797 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,112812
112798 :: CALL :: call :: Ljava/lang/String :: v13 = v11.getChainID()::JM,112811:CL,63330
112802 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $seqRes .getChainID()::JM,112811:CL,63330
112806 :: CALL :: call :: Z :: v17 = v13.equals(v15)::JM,112811
112811 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 41::CD,112812:CD,112813:CD,112817:JM,112797
112813 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,112817:JM,112797
112812 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,112784
112817 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,112793:CD,112797:CD,112798:CD,112802:CD,112806:CD,112811:CD,112820:CD,112825:CD,112829:CD,112834:CD,112839:CD,112843:CD,112848:CD,112856:JM,112817
112820 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
112825 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $seqRes .getChainID()::CL,63330
112829 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v19.append(v23)::
112834 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(< to ATOM chains!, si...))::
112839 :: CALL :: call :: I :: v30 = p2 $atomList .size()::JM,112817:JM,112797
112843 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(v30)::JM,112817:JM,112797
112848 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
112856 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,112784
112875 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::JM,95428
112874 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::CE,112875:CD,112879:CD,112883:CD,112885:CD,112890
112879 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v5 = p1 $atomG .getType()::JM,112885:JM,112890:CL,123906:CL,123890:CL,123898
112883 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v6 = org.biojava.nbio.structure.GroupType.AMINOACID::JM,112885:JM,112890
112885 :: CALL :: call :: Z :: v8 = v5.equals(v6)::JM,112885:JM,112890
112890 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 36::CD,112892:CD,112893:CD,112901:CD,112905:CD,112906:CD,112910:CD,112912:CD,112917
112893 :: CALL :: call :: J :: v32 = v29.getId()::JM,112892:CL,128066
112892 :: NORM :: declaration :: Ljava/lang/Long :: v30 = new java.lang.Long::JM,112892:JM,112905
112901 :: CALL :: call :: I :: v35 = v30.intValue()::JM,112905
112905 :: NORM :: compound :: I :: return v35::DD,112875
112906 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v11 = p1 $atomG .getType()::JM,112912:JM,112917:CL,123906:CL,123890:CL,123898
112910 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v12 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::JM,112912:JM,112917
112912 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,112912:JM,112917
112917 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 71::CD,112919:CD,112920:CD,112928:CD,112932:CD,112934:CD,112935:CD,112943:CD,112947
112919 :: NORM :: declaration :: Ljava/lang/Long :: v23 = new java.lang.Long::JM,112919:JM,112932
112920 :: CALL :: call :: J :: v25 = v22.getId()::JM,112919:CL,128066
112928 :: CALL :: call :: I :: v28 = v23.intValue()::JM,112932
112932 :: NORM :: compound :: I :: return v28::DD,112875
112935 :: CALL :: call :: J :: v18 = v15.getId()::JM,112934:CL,128066
112934 :: NORM :: declaration :: Ljava/lang/Long :: v16 = new java.lang.Long::JM,112934:JM,112947
112943 :: CALL :: call :: I :: v21 = v16.intValue()::JM,112947
112947 :: NORM :: compound :: I :: return v21::DD,112875
112966 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setAtomGroups(java.util.List)::CD,112971:CD,112985:CD,112989:JM,112990
112971 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,112989:JM,112990
112976 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,112989
112981 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,74688
112985 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,112989
112989 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,112976:CD,112981:CD,112985:JM,112989
112990 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $groups ::
113004 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setChains(int,java.util.List)::CD,113010:CD,113024:CD,113028:CD,113032:CD,113040
113010 :: CALL :: call :: Ljava/util/Iterator :: v6 = p2 $chains .iterator()::JM,113028
113015 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,113028
113020 :: CALL :: call :: V :: v12.setStructure(p0 $this )::CL,74593
113024 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,113028
113029 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .models::
113028 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,113015:CD,113020:CD,113024:JM,113028
113032 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.remove(p1 $modelnr )::JM,113028
113037 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .models::
113040 :: CALL :: call :: V :: v17.add(p1 $modelnr , p2 $chains )::JM,113028
113081 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.makeBonds()::CD,113085:CD,113088:CD,113091:CD,113094
113085 :: CALL :: call :: V :: p0 $this .formPeptideBonds()::CL,128075
113088 :: CALL :: call :: V :: p0 $this .formNucleotideBonds()::CL,128228
113091 :: CALL :: call :: V :: p0 $this .formIntraResidueBonds()::CL,128381
113094 :: CALL :: call :: V :: p0 $this .trimBondLists()::CL,128598
113102 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formBondsFromStructConn(java.util.List)::CD,113107:CD,113111:CD,113520:CD,113524:CD,113528:JM,113120
113107 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
113111 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $structConn .iterator()::JM,113120:JM,113524
113116 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,113120:JM,113524
113120 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,113220:JM,113211:JM,113215:JM,113539:JM,113221:JM,113234:JM,113225:JM,113229:JM,113235:JM,113540:JM,113248:JM,113239:JM,113243:JM,113249:JM,113253:JM,113258:JM,113505:JM,113509:JM,113514
113127 :: CALL :: call :: Z :: v19 = v15.contains(v17)::JM,113132
113132 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 55::CD,113211:CD,113215:CD,113220:CD,113225:CD,113229:CD,113234:CD,113239:CD,113243:CD,113248:CD,113539:CD,113540
113211 :: CALL :: call :: Ljava/lang/String :: v62 = v14.getPdbx_ptnr1_label_alt_id()::JM,113220:JM,113211:JM,113215
113215 :: CALL :: call :: Z :: v64 = v62.equals(#(?))::JM,113220:JM,113215
113221 :: CALL :: call :: Ljava/lang/String :: v66 = v14.getPdbx_ptnr1_label_alt_id()::JM,113539:JM,113221
113220 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 218::CF,113539:CD,113221
113225 :: CALL :: call :: Ljava/lang/String :: v69 = v14.getPdbx_ptnr2_label_alt_id()::JM,113234:JM,113225:JM,113229
113229 :: CALL :: call :: Z :: v71 = v69.equals(#(?))::JM,113234:JM,113229
113235 :: CALL :: call :: Ljava/lang/String :: v73 = v14.getPdbx_ptnr2_label_alt_id()::JM,113235:JM,113540
113234 :: PRED :: IF :: Z :: if (v71 != #(0)) goto 239::CF,113540:CD,113235
113239 :: CALL :: call :: Ljava/lang/String :: v76 = v14.getPtnr1_symmetry()::JM,113248:JM,113239:JM,113243
113243 :: CALL :: call :: Z :: v78 = v76.equals(#(1_555))::JM,113248:JM,113243
113249 :: CALL :: call :: Ljava/lang/String :: v80 = v14.getPtnr2_symmetry()::JM,113249:JM,113253:JM,113258
113248 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 265::CD,113249:CD,113253:CD,113258
113253 :: CALL :: call :: Z :: v82 = v80.equals(#(1_555))::JM,113253:JM,113258
113258 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 316::CD,113292:CD,113296:CD,113317:CD,113321:CD,113342:CD,113386:CD,113430
113292 :: CALL :: call :: Z :: v84 = v67.isEmpty()::JM,113296:JM,113292
113296 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 327::CF,113298:CD,113303:CD,113308:CD,113313
113298 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
113303 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v85.append(v67)::
113308 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v89.append(#()))::
113313 :: CALL :: call :: Ljava/lang/String :: v94 = v92.toString()::
113317 :: CALL :: call :: Z :: v97 = v74.isEmpty()::JM,113317:JM,113321
113321 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 366::CF,113323:CD,113328:CD,113333:CD,113338
113323 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
113328 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v74)::
113333 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v101.append(#()))::
113338 :: CALL :: call :: Ljava/lang/String :: v105 = v103.toString()::
113342 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v109 = p0 $this .getAtomFromRecord(v58, v67, v54, v31, v50, v41)::JM,113430:CL,128708
113386 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = p0 $this .getAtomFromRecord(v60, v74, v56, v32, v52, v48)::JM,113464:CL,128708
113430 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 598::CD,113464
113464 :: PRED :: IF :: Z :: if (v111 != #(null)) goto 650::CF,113498:JM,138530:JM,138521:JM,138527:JM,138524:CD,113505:CD,113509:CD,113514
113498 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v112 = new org.biojava.nbio.structure.BondImpl::
113505 :: CALL :: call :: Ljava/lang/String :: v116 = v14.getConn_type_id()::JM,113505:JM,113509:JM,113514
113509 :: CALL :: call :: Z :: v119 = v116.equals(#(disulf))::JM,113509:JM,113514
113515 :: CALL :: call :: Z :: v146 = v5.add(v112)::
113514 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 688::CD,113515:JM,113120:JM,113524
113520 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,113120:JM,113524
113524 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,113116:CD,113120:CD,113127:CD,113132:CD,113520:JM,113524
113528 :: CALL :: call :: V :: v147.setSSBonds(v5)::CL,63132
113539 :: EXPR :: assign :: null :: PHI v67 = #(), v66::JM,113296:JM,113292:JM,113234:JM,113225:JM,113229
113540 :: EXPR :: assign :: null :: PHI v74 = #(), v73::JM,113248:JM,113239:JM,113243:JM,113317:JM,113321
113719 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.ChargeAdder.addCharges(org.biojava.nbio.structure.Structure)::CD,113802:CD,113807:CD,113812:CD,113817:CD,113957:CD,113961:CD,113969
113724 :: CALL :: call :: Ljava/util/List :: v7 = p1 $structure .getChains(v115)::JM,113955:CL,74604
113729 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,113955
113734 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,113955
113739 :: CALL :: call :: Ljava/util/List :: v16 = v14.getAtomGroups()::JM,113950:CL,45126
113743 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,113950
113748 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,113950
113757 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v27 = getChemComp(v25)::CL,128882
113761 :: CALL :: call :: Ljava/util/List :: v29 = v27.getAtoms()::JM,113945:JM,113774:CL,129013
113765 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,113945:JM,113774
113770 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,113945:JM,113774
113774 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::JM,113794:JM,113784:JM,113789:JM,113788:JM,113833:JM,113872
113779 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v23.getAtom(v38)::JM,113903:CL,45210
113784 :: CALL :: call :: Ljava/lang/String :: v42 = v36.getCharge()::JM,113794:JM,113784:JM,113789:JM,113788
113789 :: CALL :: call :: Z :: v46 = v42.equals(#(?))::JM,113794:JM,113789
113788 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 230::CD,113789:CD,113794:CD,113867:CD,113872:CD,113876:CD,113881:CD,113886:CD,113890:CD,113895
113795 :: CALL :: call :: S :: v48 = parseShort(v42)::JM,113794:JM,113789
113794 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 186::CD,113795:CD,113828:CD,113833:CD,113837:CD,113842:CD,113847:CD,113851:CD,113856:JM,113794:JM,113789
113802 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
113807 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v51.append(v42)::JM,113794:JM,113789
113812 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(' to short))::
113817 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
113828 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
113833 :: CALL :: call :: Ljava/lang/String :: v67 = v36.getAtom_id()::JM,113833
113837 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
113842 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(#( in group ))::
113847 :: CALL :: call :: Ljava/lang/String :: v74 = v27.getId()::CL,129022
113851 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v72.append(v74)::
113856 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
113867 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
113872 :: CALL :: call :: Ljava/lang/String :: v85 = v36.getAtom_id()::JM,113872
113876 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v81.append(v85)::
113881 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v87.append(#( in group ))::
113886 :: CALL :: call :: Ljava/lang/String :: v91 = v27.getId()::CL,129022
113890 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v89.append(v91)::
113895 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::
113903 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 287::CD,113904
113904 :: CALL :: call :: V :: v40.setCharge(v97)::CL,89715
113908 :: CALL :: call :: Ljava/util/List :: v100 = v23.getAltLocs()::JM,113940:CL,74718
113912 :: CALL :: call :: Ljava/util/Iterator :: v102 = v100.iterator()::JM,113940
113917 :: CALL :: call :: Ljava/lang/Object :: v106 = v102.next()::JM,113940
113926 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = v107.getAtom(v109)::JM,113931:CL,45210
113931 :: PRED :: IF :: Z :: if (v111 == #(null)) goto 344::CF,113965:CD,113932
113932 :: CALL :: call :: V :: v111.setCharge(v97)::CL,89715
113936 :: CALL :: call :: Z :: v104 = v102.hasNext()::JM,113940
113941 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,113945:JM,113774
113940 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 304::CF,113966:CD,113917:CD,113926:CD,113931:CD,113936:CD,113965:JM,113940
113945 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 92::CF,113967:CD,113770:CD,113774:CD,113779:CD,113784:CD,113788:CD,113903:CD,113908:CD,113912:CD,113936:CD,113940:CD,113941:CD,113965:CD,113966:JM,113945
113946 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,113950
113951 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,113955
113950 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 49::CF,113968:CD,113748:CD,113757:CD,113761:CD,113765:CD,113941:CD,113945:CD,113946:CD,113966:CD,113967:JM,113950
113955 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 22::CD,113734:CD,113739:CD,113743:CD,113946:CD,113950:CD,113951:CD,113967:CD,113968:JM,113955:CF,113956
113957 :: CALL :: call :: I :: v5 = p1 $structure .nrModels()::JM,113961:CL,64143
113956 :: EXPR :: assign :: Ljava/lang/Object :: v114 = v116 + #(1)::DD,113969
113961 :: PRED :: IF :: Z :: if (v115 < v5) goto 7::CD,113724:CD,113729:CD,113951:CD,113955:CD,113956:CD,113957:CD,113968:CD,113969
113965 :: EXPR :: assign :: null :: PHI v119 = v118, v119, v119::JM,113940:DD,113965:DD,113966
113967 :: EXPR :: assign :: null :: PHI v117 = v116, v118::JM,113950:DD,113966:DD,113968
113966 :: EXPR :: assign :: null :: PHI v118 = v117, v119::JM,113945:JM,113774:DD,113965:DD,113967
113969 :: EXPR :: assign :: null :: PHI v115 = #(0), v114::DD,113961:DD,113968
113968 :: EXPR :: assign :: null :: PHI v116 = v115, v117::JM,113955:DD,113956:DD,113967
114055 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.getSiteID()::JM,96288:JM,99866:JM,130542
114054 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getSiteID()::CE,114055:CD,114061
114058 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .siteID::DD,114061
114061 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,114055
114070 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
114073 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,114077
114077 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v5::
114080 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
114083 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
114096 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setSiteID(java.lang.String)::JM,114101
114101 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
114107 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getGroups()::CE,114108:CD,114114
114108 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Site.getGroups()::JM,96307:JM,96392
114111 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,114114
114114 :: NORM :: compound :: Ljava/util/List :: return v3::CF,114108
114116 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setGroups(java.util.List)::JM,114121
114121 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $residues ::
114127 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.init()::CD,114138
114138 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,114143
114143 :: EXPR :: modify :: Ljava/util/List :: p0 $this .modelTransformations = v5::
114159 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,114179
114179 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v4::
114202 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setId(java.lang.String)::JM,114207
114207 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
114297 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::CE,114298:CD,114302:CD,114309:CD,114413:CD,114417:CD,114418:JM,114323:JM,114328
114298 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::
114302 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,114418
114306 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .psags::JM,114417:JM,114318
114309 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,114417:JM,114318
114314 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,114417:JM,114318
114319 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getAssembly_id()::JM,114323:JM,114328:JM,114319
114318 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,114323:JM,114328:JM,114319:JM,114356:JM,114347:JM,114412:JM,114351
114323 :: CALL :: call :: Z :: v18 = v16.equals(p1 $assemblyId )::JM,114323:JM,114328
114328 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 189::CD,114336:CD,114343:CD,114347:CD,114351:CD,114356:CD,114360:CD,114408:CD,114412:JM,114417:JM,114318
114336 :: CALL :: call :: V :: v19.parseOperatorExpressionString(v21)::CL,129054
114343 :: CALL :: call :: Ljava/util/List :: v25 = v23.getUnaryOperators()::JM,114407:CL,129102
114347 :: CALL :: call :: Ljava/lang/String :: v27 = v14.getAsym_id_list()::JM,114356:JM,114347:JM,114412:JM,114351
114351 :: CALL :: call :: [Ljava/lang/String :: v30 = v27.split(#(,))::JM,114356:JM,114412:JM,114351
114356 :: CALL :: call :: Ljava/util/List :: v32 = asList(v30)::JM,114356:JM,114412
114360 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,114412
114365 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,114412
114370 :: CALL :: call :: Ljava/util/Iterator :: v41 = v25.iterator()::JM,114407
114375 :: CALL :: call :: Ljava/lang/Object :: v45 = v41.next()::JM,114407
114380 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v48 = p0 $this .getModelTransformationMatrix(v46)::CL,129111
114385 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v49 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
114390 :: CALL :: call :: V :: v49.setChainId(v39)::CL,129227
114394 :: CALL :: call :: V :: v49.setId(v46)::CL,114202
114398 :: CALL :: call :: Z :: v54 = v4.add(v49)::
114403 :: CALL :: call :: Z :: v43 = v41.hasNext()::JM,114407
114407 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 117::CD,114375:CD,114380:CD,114385:JM,129204:JM,129193:JM,129211:CD,114390:CD,114394:CD,114398:CD,114403:JM,114407:JM,114412
114408 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,114412
114413 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,114417:JM,114318
114412 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 93::CD,114365:CD,114370:CD,114403:CD,114407:CD,114408:JM,114412:JM,114417:JM,114318
114417 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,114314:CD,114318:CD,114319:CD,114323:CD,114328:CD,114413:JM,114417:CF,114418
114418 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,114298
114463 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::CE,114464:CD,114468:CD,114475:CD,114482:CD,114599:CD,114603:CD,114604:JM,114496:JM,114501
114464 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::
114468 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,114604
114475 :: CALL :: call :: Ljava/util/List :: v8 = v6.getBinaryOperators()::JM,114593:CL,129238
114479 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .psags::JM,114491:JM,114603
114482 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,114491:JM,114603
114487 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::JM,114491:JM,114603
114491 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,114496:JM,114501:JM,114492:JM,114502:JM,114598:JM,114506:JM,114511
114492 :: CALL :: call :: Ljava/lang/String :: v19 = v17.getAssembly_id()::JM,114496:JM,114501:JM,114492
114496 :: CALL :: call :: Z :: v21 = v19.equals(p1 $assemblyId )::JM,114496:JM,114501
114501 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 218::CD,114502:CD,114506:CD,114511:CD,114522:CD,114526:CD,114594:CD,114598:JM,114491:JM,114603
114502 :: CALL :: call :: Ljava/lang/String :: v23 = v17.getAsym_id_list()::JM,114502:JM,114598:JM,114506:JM,114511
114506 :: CALL :: call :: [Ljava/lang/String :: v26 = v23.split(#(,))::JM,114598:JM,114506:JM,114511
114511 :: CALL :: call :: Ljava/util/List :: v28 = asList(v26)::JM,114598:JM,114511
114522 :: CALL :: call :: V :: v29.parseOperatorExpressionString(v31)::CL,129054
114526 :: CALL :: call :: Ljava/util/Iterator :: v34 = v28.iterator()::JM,114598
114531 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,114598
114536 :: CALL :: call :: Ljava/util/Iterator :: v42 = v8.iterator()::JM,114593
114541 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,114593
114551 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v52 = p0 $this .getModelTransformationMatrix(v50)::CL,129111
114561 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v57 = p0 $this .getModelTransformationMatrix(v55)::CL,129111
114566 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v59 = combine(v52, v57)::CL,129265
114571 :: CALL :: call :: V :: v59.setChainId(v39)::CL,129227
114575 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v67)::
114579 :: CALL :: call :: V :: v59.setId(v62)::CL,114202
114583 :: CALL :: call :: Z :: v65 = v4.add(v59)::
114589 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,114593
114588 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v67 + #(1)::DD,114605
114593 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 122::CD,114541:CD,114551:CD,114561:CD,114566:CD,114571:CD,114575:CD,114579:CD,114583:CD,114588:CD,114589:CD,114605:JM,114593:JM,114598
114594 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,114598
114599 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,114491:JM,114603
114598 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 96::CD,114531:CD,114536:CD,114589:CD,114593:CD,114594:CD,114605:JM,114598:JM,114491:JM,114603
114603 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 32::CD,114487:CD,114491:CD,114492:CD,114496:CD,114501:CD,114599:JM,114603:CF,114604
114605 :: EXPR :: assign :: null :: PHI v67 = #(1), v66::JM,114593:DD,114588
114604 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,114464
114670 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNcsOperators(javax.vecmath.Matrix4d[])::JM,114675
114675 :: EXPR :: modify :: [Ljavax/vecmath/Matrix4d :: p0 $this .ncsOperators = p1 $ncsOperators ::
114681 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::CE,114682:CD,114688
114682 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::JM,97096
114685 :: EXPR :: reference :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v3 = p0 $this .cell::DD,114688
114688 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: return v3::CF,114682
114690 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.checkScaleMatrix(javax.vecmath.Matrix4d)::CD,114695
114695 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v5 = p0 $this .getMTranspose()::CL,129304
114784 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardCoordFrameConvention(boolean)::JM,114789
114789 :: EXPR :: modify :: Z :: p0 $this .nonStandardCoordFrameConvention = p1 $nonStandardCoordFrameConvention ::
115104 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.trimToSize()::CD,115111:CD,115112:CD,115123:CD,115124:CD,115132:CD,115136:CD,115159:CD,115173
115108 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,115111
115111 :: EXPR :: assign :: Z :: v4=v3 INSTANCEOF java.util.ArrayList::DD,115112
115113 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::DD,115116
115112 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 23::CD,115116:CD,115117
115117 :: CALL :: call :: V :: v7.trimToSize()::
115116 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
115120 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .altLocs::DD,115123
115123 :: EXPR :: assign :: Z :: v10=v9 INSTANCEOF java.util.ArrayList::DD,115124
115125 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .altLocs::DD,115128
115124 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 45::CD,115128:CD,115129
115129 :: CALL :: call :: V :: v12.trimToSize()::
115128 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::
115132 :: CALL :: call :: Z :: v15 = p0 $this .hasAltLoc()::JM,115136:CL,129412
115137 :: CALL :: call :: Ljava/util/List :: v17 = p0 $this .getAltLocs()::JM,115158:CL,74718
115136 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 90::CD,115137:CD,115141:CD,115154:CD,115158:CF,115159
115141 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,115158
115146 :: CALL :: call :: Ljava/lang/Object :: v23 = v19.next()::JM,115158
115151 :: CALL :: call :: V :: v24.trimToSize()::CL,115104
115154 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,115158
115159 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,115167
115158 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 65::CD,115146:CD,115151:CD,115154:JM,115158:CF,115159
115167 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v26::
115170 :: EXPR :: reference :: Ljava/util/Map :: v29 = p0 $this .atomNameLookup::DD,115173
115173 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 126::CD,115174
115174 :: NORM :: declaration :: Ljava/util/HashMap :: v31 = new java.util.HashMap::DD,115182
115182 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v31::
115213 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::CE,115214:CD,115221:CD,115225:JM,115264:JM,115284:JM,115321:JM,115259:JM,115279
115214 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::JM,97906:JM,97932:JM,98022:JM,115611
115221 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v8 = getGroupFromChemCompDictionary(p4 $null )::JM,115235:JM,115251:JM,115225:JM,115243:JM,115258:CL,116501
115225 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 100::CD,115226:CD,115230:CD,115234:CD,115259:CD,115264:CD,115343:CD,115344:JM,115284:JM,115321:JM,115279
115226 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = v8.getChemComp()::CL,116734
115230 :: CALL :: call :: Z :: v13 = v11.isEmpty()::JM,115234:CL,116794
115235 :: EXPR :: assign :: Z :: v47=v8 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,115236
115234 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 100::CD,115235:CD,115236:CD,115258:CD,115259:CD,115264:CD,115343:CD,115344:JM,115284:JM,115321:JM,115279
115236 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 51::CD,115238:CD,115243:CD,115244
115238 :: CALL :: call :: V :: v54.setId(p3 $seq_id )::CL,129439
115243 :: EXPR :: assign :: Z :: v48=v8 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,115244
115244 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 75::CD,115246:CD,115251:CD,115252
115246 :: CALL :: call :: V :: v52.setId(p3 $seq_id )::CL,129439
115251 :: EXPR :: assign :: Z :: v49=v8 INSTANCEOF org.biojava.nbio.structure.HetatomImpl::DD,115252
115252 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 96::CD,115254:CF,115258
115254 :: CALL :: call :: V :: v50.setId(p3 $seq_id )::CL,129439
115259 :: CALL :: call :: Z :: v17 = p1 $recordName .equals(#(ATOM))::JM,115264:JM,115284:JM,115321:JM,115259:JM,115279
115258 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v8::DD,115214
115265 :: CALL :: call :: Z :: v31 = isNucleotide(p4 $null )::JM,115269:CL,57243
115264 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 201::CD,115265:CD,115269:CD,115307:CD,115311
115269 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 137::CF,115270:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,115274:CD,115279:CD,115344
115270 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v42 = new org.biojava.nbio.structure.NucleotideImpl::DD,115344
115274 :: CALL :: call :: V :: v42.setId(p3 $seq_id )::CL,129439
115279 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 149::CF,115285:CD,115280:CD,115284:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,115289:CD,115344:JM,115264:JM,115321:JM,115259
115280 :: CALL :: call :: C :: v33 = p2 $aminoCode1 .charValue()::JM,115264:JM,115284:JM,115321:JM,115259
115285 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v39 = new org.biojava.nbio.structure.HetatomImpl::DD,115344
115284 :: PRED :: IF :: Z :: if (v33 != #(88)) goto 171::CF,115294:CF,115285:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,115289:CD,115298:CD,115302:CD,115344
115289 :: CALL :: call :: V :: v39.setId(p3 $seq_id )::CL,129439
115294 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v35 = new org.biojava.nbio.structure.AminoAcidImpl::DD,115344
115298 :: CALL :: call :: V :: v35.setAminoType(p2 $aminoCode1 )::CL,88878
115302 :: CALL :: call :: V :: v35.setId(p3 $seq_id )::CL,129439
115307 :: CALL :: call :: Z :: v19 = isNucleotide(p4 $null )::JM,115311:CL,57243
115311 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 230::CF,115312:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,115316:CD,115321:CD,115344
115312 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v27 = new org.biojava.nbio.structure.NucleotideImpl::DD,115344
115316 :: CALL :: call :: V :: v27.setId(p3 $seq_id )::CL,129439
115321 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 261::CF,115335:CF,115322:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,115326:CD,115330:CD,115339:CD,115344
115322 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v23 = new org.biojava.nbio.structure.AminoAcidImpl::DD,115344
115326 :: CALL :: call :: V :: v23.setAminoType(p2 $aminoCode1 )::CL,88878
115330 :: CALL :: call :: V :: v23.setId(p3 $seq_id )::CL,129439
115335 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v20 = new org.biojava.nbio.structure.HetatomImpl::DD,115344
115339 :: CALL :: call :: V :: v20.setId(p3 $seq_id )::CL,129439
115343 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v45::DD,115214
115344 :: EXPR :: assign :: null :: PHI v45 = v42, v39, v35, v27, v23, v20::CF,115343
115423 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::CE,115424:CD,115435:CD,115439:CD,115443:JM,115459:JM,115509:JM,115528:JM,115533
115424 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::JM,98217
115435 :: CALL :: call :: Ljava/util/List :: v10 = v8.getAtoms()::JM,115443:CL,129450
115439 :: CALL :: call :: I :: v12 = v10.size()::JM,115443
115443 :: PRED :: IF :: Z :: if (v12 <= #(0)) goto 54::CD,115444:CD,115450:CD,115454:CD,115459:CD,115467:CD,115471:CD,115516:CD,115520:JM,115443
115444 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.get(#(0))::JM,115443
115450 :: CALL :: call :: Ljava/lang/Character :: v18 = v16.getAltLoc()::JM,115459:CL,103842
115454 :: CALL :: call :: Z :: v20 = v18.equals(p1 $altLoc )::JM,115459:JM,115509
115459 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 54::CD,115463:CD,115467:CD,115471:CD,115516:CD,115520
115460 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v79 = p0 $this .current_group::DD,115463
115463 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v79::DD,115424
115467 :: CALL :: call :: Ljava/util/List :: v23 = v21.getAltLocs()::JM,115520:JM,115480:CL,74718
115471 :: CALL :: call :: Ljava/util/Iterator :: v25 = v23.iterator()::JM,115520:JM,115480
115476 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,115520:JM,115480
115481 :: CALL :: call :: Ljava/util/List :: v32 = v30.getAtoms()::JM,115489:JM,115515:CL,129450
115480 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,115510
115485 :: CALL :: call :: I :: v34 = v32.size()::JM,115489:JM,115515
115489 :: PRED :: IF :: Z :: if (v34 <= #(0)) goto 160::CD,115490:CD,115511:CD,115515:CD,115516:CD,115520:JM,115489:JM,115480
115490 :: CALL :: call :: Ljava/util/Iterator :: v37 = v32.iterator()::JM,115489:JM,115515
115495 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.next()::JM,115515
115500 :: CALL :: call :: Ljava/lang/Character :: v44 = v42.getAltLoc()::JM,115509:CL,103842
115504 :: CALL :: call :: Z :: v46 = v44.equals(p1 $altLoc )::JM,115509:JM,115459
115509 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,115510:CD,115511:CD,115515
115511 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,115515
115510 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v30::DD,115424
115515 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 121::CD,115495:CD,115500:CD,115504:CD,115509:CD,115516:CD,115520:JM,115515:JM,115480
115516 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,115520:JM,115480
115520 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 78::CD,115476:CD,115480:CD,115481:CD,115485:CD,115489:CD,115524:CD,115528:CD,115533:JM,115520
115524 :: CALL :: call :: Ljava/lang/String :: v49 = v47.getPDBName()::JM,115528:JM,115533:CL,47160
115528 :: CALL :: call :: Z :: v51 = p4 $groupCode3 .equals(v49)::JM,115528:JM,115533
115533 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 268::CD,115537:CD,115541:CD,115545:CD,115581:CD,115589:CD,115600:CD,115607:CD,115611
115537 :: CALL :: call :: Ljava/util/List :: v63 = v61.getAtoms()::JM,115545:CL,129450
115541 :: CALL :: call :: I :: v65 = v63.size()::JM,115545
115545 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 208::CD,115549:CD,115553:CD,115557:CD,115558:CD,115562:CD,115566:CD,115570:CD,115576:CD,115580
115546 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,115549
115549 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,115424
115553 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.clone()::JM,115557:CL,75914:CL,76231:CL,76056
115557 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,115580:CF,115558
115558 :: NORM :: declaration :: Ljava/util/ArrayList :: v70 = new java.util.ArrayList::
115562 :: CALL :: call :: V :: v69.setAtoms(v70)::CL,129459
115566 :: CALL :: call :: Ljava/util/List :: v74 = v69.getAltLocs()::CL,74718
115570 :: CALL :: call :: V :: v74.clear()::
115576 :: CALL :: call :: V :: v76.addAltLoc(v69)::CL,88796
115581 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v53 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p5 $seq_id , p4 $groupCode3 )::JM,115611:CL,115213
115580 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v69::DD,115424
115589 :: CALL :: call :: V :: v53.setPDBName(p4 $groupCode3 )::CL,88573:CL,88858
115600 :: CALL :: call :: V :: v53.setResidueNumber(v57)::CL,88562
115607 :: CALL :: call :: V :: v59.addAltLoc(v53)::CL,88796
115611 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v53::DD,115424
115673 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::JM,98131
115672 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::CE,115673:CD,115679
115676 :: EXPR :: reference :: Z :: v3 = p0 $this .parseCAOnly::DD,115679
115679 :: NORM :: compound :: Z :: return v3::CF,115673
115681 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.convertAtom(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::JM,88919:JM,88924:CD,115690:CD,115694:CD,115698:CD,115706:CD,115734:CD,115738:CD,115742:CD,115754:CD,115766:CD,115770:CD,115774:CD,115816:CD,115839:JM,115779:JM,115780:JM,115785:JM,115775
115690 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $atom .getId()::JM,115779:JM,115780:JM,115785:JM,115690:JM,115770:JM,115775:JM,115774
115694 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,115779:JM,115780:JM,115785:JM,115775:JM,115774
115698 :: CALL :: call :: V :: v4.setPDBserial(v9)::CL,89735
115706 :: CALL :: call :: V :: v4.setName(v12)::CL,89746
115734 :: CALL :: call :: V :: v4.setX(v17)::CL,89618
115738 :: CALL :: call :: V :: v4.setY(v21)::CL,89634
115742 :: CALL :: call :: V :: v4.setZ(v25)::CL,89650
115754 :: CALL :: call :: V :: v4.setOccupancy(v32)::CL,89675
115766 :: CALL :: call :: V :: v4.setTempFactor(v37)::CL,89695
115770 :: CALL :: call :: Ljava/lang/String :: v40 = p1 $atom .getLabel_alt_id()::JM,115779:JM,115780:JM,115785:JM,115690:JM,115770:JM,115775:JM,115774
115775 :: CALL :: call :: I :: v43 = v40.length()::JM,115779:JM,115780:JM,115785:JM,115775
115774 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 167::CD,115775:CD,115779:CD,115806:JM,115780:JM,115785
115779 :: PRED :: IF :: Z :: if (v43 <= #(0)) goto 167::CD,115780:CD,115785:CD,115806:JM,115779:JM,115775
115780 :: CALL :: call :: Z :: v47 = v40.equals(#(.))::JM,115779:JM,115780:JM,115785:JM,115775
115785 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 167::CD,115796:CD,115806
115796 :: CALL :: call :: V :: v4.setAltLoc(v52)::CL,129545
115806 :: CALL :: call :: V :: v4.setAltLoc(v48)::CL,129545
115816 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v61 = valueOfIgnoreCase(v59)::CL,129569
115839 :: CALL :: call :: V :: v4.setElement(v72)::CL,89757
115895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDepDate(java.util.Date)::JM,115900
115900 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = p1 $depDate ::
115906 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setModDate(java.util.Date)::JM,115911
115911 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = p1 $modDate ::
115917 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::CE,115918:CD,115924
115918 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::JM,98623:JM,98639
115921 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .revisionRecords::DD,115924
115924 :: NORM :: compound :: Ljava/util/List :: return v3::CF,115918
115926 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRevisionRecords(java.util.List)::JM,115931
115931 :: EXPR :: modify :: Ljava/util/List :: p0 $this .revisionRecords = p1 $revisionRecords ::
115937 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setResolution(float)::JM,115942
115942 :: EXPR :: modify :: F :: p0 $this .resolution = p1 $resolution ::
115948 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setExperimentalTechnique(java.lang.String)::CD,115953:CD,115957
115953 :: CALL :: call :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = getByName(p1 $techniqueStr )::JM,115957:JM,115963:JM,115967:CL,129613
115957 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 12::CD,115962
115959 :: EXPR :: reference :: Ljava/util/Set :: v7 = p0 $this .techniques::DD,115962
115963 :: CALL :: call :: Ljava/util/EnumSet :: v12 = of(v5)::JM,115963:JM,115967
115962 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CD,115963:JM,115967
115967 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .techniques = v12::
116001 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setA(double)::JM,116006
116006 :: EXPR :: modify :: D :: p0 $this .a = p1 $a ::
116012 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setB(double)::JM,116017
116017 :: EXPR :: modify :: D :: p0 $this .b = p1 $b ::
116023 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setC(double)::JM,116028
116028 :: EXPR :: modify :: D :: p0 $this .c = p1 $c ::
116034 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setAlpha(double)::JM,116039:JM,116046:CD,116042
116039 :: EXPR :: modify :: D :: p0 $this .alpha = p1 $alpha ::
116042 :: CALL :: call :: D :: v5 = toRadians(p1 $alpha )::JM,116042:JM,116046
116046 :: EXPR :: modify :: D :: p0 $this .alphaRad = v5::
116054 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setBeta(double)::JM,116066:JM,116059:CD,116062
116059 :: EXPR :: modify :: D :: p0 $this .beta = p1 $beta ::
116062 :: CALL :: call :: D :: v5 = toRadians(p1 $beta )::JM,116066:JM,116062
116066 :: EXPR :: modify :: D :: p0 $this .betaRad = v5::
116074 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setGamma(double)::JM,116086:JM,116079:CD,116082
116079 :: EXPR :: modify :: D :: p0 $this .gamma = p1 $gamma ::
116082 :: CALL :: call :: D :: v5 = toRadians(p1 $gamma )::JM,116082:JM,116086
116086 :: EXPR :: modify :: D :: p0 $this .gammaRad = v5::
116095 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::JM,98902:JM,119423
116094 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::CE,116095:CD,116098:CD,116102:CD,116103
116098 :: CALL :: call :: D :: v4 = p0 $this .getA()::JM,116102:CL,129628
116103 :: PRED :: IF :: Z :: if (v6 >= #(0)) goto 36::CD,116104:CD,116108:CD,116109:CD,116117
116102 :: EXPR :: assign :: Z :: v6 = v4 > #(10.0 d)::DD,116103
116104 :: CALL :: call :: D :: v9 = p0 $this .getB()::JM,116108:CL,129637
116109 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 36::CD,116110:CD,116114:CD,116115:CD,116117
116108 :: EXPR :: assign :: Z :: v10 = v9 > #(10.0 d)::DD,116109
116110 :: CALL :: call :: D :: v12 = p0 $this .getC()::JM,116114:CL,129646
116115 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 36::CD,116116:CD,116117
116114 :: EXPR :: assign :: Z :: v13 = v12 > #(10.0 d)::DD,116115
116117 :: NORM :: compound :: Z :: return #(1)::CF,116095
116116 :: NORM :: compound :: Z :: return #(0)::CF,116095
116138 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setCrystalCell(org.biojava.nbio.structure.xtal.CrystalCell)::JM,116143
116143 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: p0 $this .cell = p1 $cell ::
116149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::CE,116150:CD,116153:JM,116208:JM,116165:JM,116158
116150 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::JM,99023:JM,119447
116153 :: PRED :: IF :: Z :: if (p1 $shortName  == #(null)) goto 13::CD,116154:CD,116158:CD,116159:JM,116208:JM,116165
116154 :: CALL :: call :: I :: v5 = p1 $shortName .length()::JM,116208:JM,116165:JM,116158
116159 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return #(null)::DD,116150
116158 :: PRED :: IF :: Z :: if (v5 > #(2)) goto 17::CD,116159:CD,116160:CD,116165:CD,116166:CD,116167:CD,116173:CD,116181:CD,116186:CD,116190:CD,116195:CD,116201:CD,116206:CD,116207:CD,116208:JM,116158
116160 :: CALL :: call :: Z :: v9 = p1 $shortName .equals(#(P 1-))::JM,116208:JM,116165:JM,116158
116165 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 26::CF,116208
116167 :: CALL :: call :: Ljava/lang/String :: v16 = v12.substring(#(0), #(1))::
116166 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
116173 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(v16)::
116181 :: CALL :: call :: Ljava/lang/String :: v21 = v12.substring(#(1))::
116186 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toLowerCase()::
116190 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v13.append(v23)::
116195 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
116201 :: CALL :: call :: Ljava/lang/Object :: v30 = v28.get(v27)::JM,116206
116207 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return v31::DD,116150
116206 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::CF,116207
116208 :: EXPR :: assign :: null :: PHI v12 = p1 $shortName , #(P -1)::CF,116166
116228 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardSg(boolean)::JM,116233
116233 :: EXPR :: modify :: Z :: p0 $this .nonStandardSg = p1 $nonStandardSg ::
116239 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setSpaceGroup(org.biojava.nbio.structure.xtal.SpaceGroup)::JM,116244
116244 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: p0 $this .sg = p1 $spaceGroup ::
116257 :: EXPR :: modify :: C :: p0 $this .insertBegin = #(32)::
116260 :: EXPR :: modify :: C :: p0 $this .insertEnd = #(32)::
116263 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = #(32)::
116266 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = #(32)::
116279 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdCode(java.lang.String)::JM,116284
116284 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
116290 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbAccession(java.lang.String)::JM,116295
116295 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbAccession = p1 $dbAccession ::
116301 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbIdCode(java.lang.String)::JM,116306
116306 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbIdCode = p1 $dbIdCode ::
116312 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setChainId(java.lang.String)::JM,116317
116317 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
116323 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::CE,116324:CD,116331:CD,116352:CD,116356:JM,116345:JM,116350
116324 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::JM,99413
116328 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucRefs::JM,116340:JM,116356
116331 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,116340:JM,116356
116336 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,116340:JM,116356
116341 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,116341:JM,116345:JM,116350
116340 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,116341:JM,116345:JM,116350:DD,116351
116345 :: CALL :: call :: Z :: v16 = v14.equals(p1 $ref_id )::JM,116345:JM,116350
116351 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return v12::DD,116324
116350 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,116351:CD,116352:CD,116356:JM,116340
116352 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,116340:JM,116356
116357 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return #(null)::DD,116324
116356 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,116336:CD,116340:CD,116341:CD,116345:CD,116350:CD,116357:JM,116356
116369 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDatabase(java.lang.String)::JM,116374
116374 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .database = p1 $database ::
116380 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqBegin(int)::JM,116385
116385 :: EXPR :: modify :: I :: p0 $this .seqbegin = p1 $seqbegin ::
116391 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertBegin(char)::JM,116396
116396 :: EXPR :: modify :: C :: p0 $this .insertBegin = p1 $insertBegin ::
116402 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqEnd(int)::JM,116407
116407 :: EXPR :: modify :: I :: p0 $this .seqEnd = p1 $seqEnd ::
116413 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertEnd(char)::JM,116418
116418 :: EXPR :: modify :: C :: p0 $this .insertEnd = p1 $insertEnd ::
116424 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqBegin(int)::JM,116429
116429 :: EXPR :: modify :: I :: p0 $this .dbSeqBegin = p1 $dbSeqBegin ::
116435 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsBegin(char)::JM,116440
116440 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = p1 $idbnsBegin ::
116446 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqEnd(int)::JM,116451
116451 :: EXPR :: modify :: I :: p0 $this .dbSeqEnd = p1 $dbSeqEnd ::
116457 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsEnd(char)::JM,116462
116462 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = p1 $idbnsEnd ::
116468 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB()::CD,116472:CD,116476:CD,116480
116472 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
116476 :: CALL :: call :: V :: p0 $this .toPDB(v3)::CL,129655
116480 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
116490 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setDescription(java.lang.String)::JM,116495
116495 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
116501 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::CE,116502:CD,116505:CD,116509:CD,116513:CD,116517
116502 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::JM,100069:JM,100059:JM,115235:JM,115251:JM,115225:JM,115243:JM,115258:JM,129941:JM,129951
116505 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::
116509 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::
116513 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v9 = getChemComp(v6)::JM,116517:CL,128882
116517 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 21::CD,116518:CD,116525:CD,116530:CD,116660:CD,116664:CD,116666
116518 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return #(null)::DD,116502
116525 :: CALL :: call :: Z :: v14 = v10.contains(v12)::JM,116530
116531 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v25 = new org.biojava.nbio.structure.AminoAcidImpl::DD,116666
116530 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 209::CF,116531:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,116535:CD,116539:CD,116579:CD,116645:CD,116650:CD,116665:CD,116666
116535 :: CALL :: call :: Ljava/lang/String :: v28 = v9.getOne_letter_code()::JM,116545:JM,116551:JM,116665:JM,116539:JM,116556:CL,124007
116539 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 84::CD,116540:CD,116545:CD,116557:CD,116561:CD,116665:JM,116551:JM,116556
116540 :: CALL :: call :: Z :: v31 = v28.equals(#(X))::JM,116545:JM,116551:JM,116665:JM,116556
116545 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 84::CD,116546:CD,116551:CD,116557:CD,116561:CD,116665:JM,116545:JM,116556
116546 :: CALL :: call :: Z :: v34 = v28.equals(#(?))::JM,116545:JM,116551:JM,116665:JM,116556
116551 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 84::CD,116552:CD,116556:CD,116557:CD,116561:CD,116665:JM,116545:JM,116551
116552 :: CALL :: call :: I :: v36 = v28.length()::JM,116545:JM,116551:JM,116665:JM,116556
116557 :: CALL :: call :: Ljava/lang/String :: v38 = v9.getMon_nstd_parent_comp_id()::JM,116561:JM,116562:JM,116566:CL,129866
116556 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 125::CF,116665:CD,116557:CD,116561
116561 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 125::CF,116665:CD,116562:CD,116566
116562 :: CALL :: call :: I :: v40 = v38.length()::JM,116562:JM,116566
116566 :: PRED :: IF :: Z :: if (v40 != #(3)) goto 125::CF,116665:CD,116571:CD,116575
116571 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v45 = getChemComp(v43)::CL,128882
116575 :: CALL :: call :: Ljava/lang/String :: v47 = v45.getOne_letter_code()::JM,116665:CL,124007
116579 :: PRED :: IF :: Z :: if (v48 == #(null)) goto 146::CD,116580:CD,116584:CD,116593:CD,116598:CD,116603:CD,116608:CD,116616:CD,116620
116580 :: CALL :: call :: I :: v50 = v48.length()::JM,116584
116585 :: CALL :: call :: Z :: v52 = v48.equals(#(?))::JM,116590
116584 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 146::CD,116585:CD,116590:CD,116593:CD,116598:CD,116603:CD,116608:CD,116616:CD,116620
116590 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 193::CD,116593:CD,116598:CD,116603:CD,116608:CD,116616:CD,116620:CD,116625:CD,116630:CD,116634
116593 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
116598 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v6)::
116603 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#(  Did not find one le...))::
116608 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
116616 :: CALL :: call :: Ljava/lang/Character :: v72 = valueOf(#(88))::
116620 :: CALL :: call :: V :: v25.setAminoType(v72)::CL,88878
116625 :: CALL :: call :: C :: v54 = v48.charAt(#(0))::
116630 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(v54)::
116634 :: CALL :: call :: V :: v25.setAminoType(v56)::CL,88878
116645 :: CALL :: call :: Z :: v20 = v16.contains(v18)::JM,116650
116651 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v23 = new org.biojava.nbio.structure.NucleotideImpl::DD,116666
116650 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 237::CF,116656:CF,116651:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,116666
116656 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v21 = new org.biojava.nbio.structure.HetatomImpl::DD,116666
116660 :: CALL :: call :: V :: v74.setChemComp(v9)::CL,88828
116665 :: EXPR :: assign :: null :: PHI v48 = v28, v28, v28, v47::DD,116579:JM,116584:JM,116590
116664 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v74::DD,116502
116666 :: EXPR :: assign :: null :: PHI v74 = v25, v23, v21::DD,116664
116735 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::JM,102516:JM,130028
116734 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::CE,116735:CD,116741:CD,116782
116738 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v3 = p0 $this .chemComp::DD,116741
116741 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 54::CD,116745:CD,116755
116745 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = getChemComp(v5)::JM,116749:CL,128882
116749 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = v7::
116752 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v8 = p0 $this .chemComp::DD,116755
116755 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 54::CD,116758:CD,116766:CD,116771
116758 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
116763 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdb_name::
116766 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
116771 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
116779 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v19 = p0 $this .chemComp::DD,116782
116782 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v19::DD,116735
116795 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::JM,100068:JM,115234:JM,129950
116794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::CE,116795:CD,116801
116798 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,116801
116801 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 30::CD,116802:CD,116806:CD,116818
116802 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getThree_letter_code()::JM,116806:CL,129875
116807 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getThree_letter_code()::JM,116816:CL,129875
116806 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 30::CD,116807:CD,116811:CD,116816:CD,116818
116811 :: CALL :: call :: Z :: v11 = v8.equals(#(???))::JM,116816
116817 :: NORM :: compound :: Z :: return #(0)::CF,116795
116816 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,116817:CD,116818
116818 :: NORM :: compound :: Z :: return #(1)::CF,116795
116828 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setClassification(java.lang.String)::JM,116833
116833 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classification = p1 $classification ::
116839 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getResolution()::CE,116840:CD,116846
116840 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getResolution()::JM,100575:JM,100588:JM,120121:JM,120138
116843 :: EXPR :: reference :: F :: v3 = p0 $this .resolution::DD,116846
116846 :: NORM :: compound :: F :: return v3::CF,116840
116849 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getRfree()::JM,100662:JM,100675
116848 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRfree()::CE,116849:CD,116855
116852 :: EXPR :: reference :: F :: v3 = p0 $this .rFree::DD,116855
116855 :: NORM :: compound :: F :: return v3::CF,116849
116857 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRfree(float)::JM,116862
116862 :: EXPR :: modify :: F :: p0 $this .rFree = p1 $rFree ::
116868 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.addChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,116880:CD,116886:CD,116890:CD,116910:CD,116914:JM,116896:JM,116915:JM,116920:JM,116891
116880 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $comp )::
116886 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $comp .getPdbx_replaces()::JM,116896:JM,116915:JM,116914:JM,116886:JM,116920:JM,116891:JM,116890:JM,116910
116891 :: CALL :: call :: Z :: v14 = v10.equals(#(?))::JM,116896:JM,116915:JM,116914:JM,116920:JM,116891
116890 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,116891:CD,116896:JM,116915:JM,116914:JM,116920:JM,116886:JM,116890:JM,116910
116896 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 49::CD,116904:JM,116896:JM,116915:JM,116914:JM,116886:JM,116920:JM,116891:JM,116890:JM,116910
116904 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.put(v18, v10)::
116910 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $comp .getPdbx_replaced_by()::JM,116896:JM,116915:JM,116914:JM,116886:JM,116920:JM,116891:JM,116890:JM,116910
116915 :: CALL :: call :: Z :: v24 = v22.equals(#(?))::JM,116896:JM,116915:JM,116920:JM,116891
116914 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 81::CD,116915:CD,116920:JM,116896:JM,116891
116920 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 81::CD,116928
116928 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.put(v27, v22)::
116961 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getAuthors()::CE,116962:CD,116968
116962 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getAuthors()::JM,100930:JM,118854
116965 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .authors::DD,116968
116968 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,116962
116970 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setAuthors(java.lang.String)::JM,116975
116975 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authors = p1 $authors ::
116981 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::CE,116982:CD,116989:CD,116994:CD,116995
116982 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::JM,138758:JM,145701
116989 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::JM,116994
116995 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v7::DD,116982
116994 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,116995
116998 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_ATOM_Handler(java.lang.String)::CD,117006:CD,117010:JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117006 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,117010:CL,94376
117010 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 18::CD,117012:CD,117021:CD,117050:CD,117054:CD,117059:CD,117148:CD,117154:CD,117158:CD,117164:CD,117168:CD,117174:CD,117178:CD,117184:CD,117189:CD,117199:JM,112419:JM,112422:JM,112425:CD,117209:CD,117214:CD,117238:CD,117270:CD,117302:CD,117303:CD,117309:JM,117696:JM,117682:JM,117701:JM,117668:JM,117796:JM,117812:JM,117606:JM,117705:JM,117611:JM,117709:CD,117325:CD,117330:CD,117445:CD,117455:CD,117499:CD,117871:CD,117873:CD,117876:JM,117572:JM,117096:JM,117771:JM,117741:JM,117721
117012 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(21), #(22))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117018 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v12 = p0 $this .current_chain::DD,117021
117021 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 68::CF,117871:CD,117022:JM,63730:JM,63716:JM,63723:JM,63711:CD,117032:CD,117042
117022 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v14 = new org.biojava.nbio.structure.ChainImpl::DD,117026
117026 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v14::
117032 :: CALL :: call :: V :: v16.setChainID(v11)::CL,63754
117036 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .current_model::
117039 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v20 = p0 $this .current_chain::
117042 :: CALL :: call :: Z :: v22 = v19.add(v20)::
117050 :: CALL :: call :: Ljava/lang/String :: v26 = v24.getChainID()::JM,117059:CL,63330
117054 :: CALL :: call :: Z :: v28 = v11.equals(v26)::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117059 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 215::CF,117873:CD,117066:CD,117080:CD,117086:CD,117106:CD,117131:CD,117136:CD,117872
117066 :: CALL :: call :: V :: v29.addGroup(v30)::CL,63901
117080 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p0 $this .isKnownChain(v34, v35)::JM,117872:JM,117086:CL,129884
117087 :: CALL :: call :: Ljava/lang/String :: v39 = v37.getChainID()::JM,117096:CL,63330
117086 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 138::CD,117087:CD,117091:CD,117096:CD,117100:CD,117872
117091 :: CALL :: call :: Z :: v41 = v39.equals(v11)::JM,117096:JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117096 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 148::CF,117872:CD,117100
117100 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v44 = p0 $this .isKnownChain(v11, v42)::JM,117872:CL,129884
117107 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v46 = new org.biojava.nbio.structure.ChainImpl::DD,117111
117106 :: PRED :: IF :: Z :: if (v45 != #(null)) goto 178::CD,117107:JM,63730:JM,63716:JM,63723:JM,63711:CD,117117
117111 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v46::
117117 :: CALL :: call :: V :: v48.setChainID(v11)::CL,63754
117122 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v45::
117125 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .current_model::JM,117136
117128 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v51 = p0 $this .current_chain::JM,117136
117131 :: CALL :: call :: Z :: v53 = v50.contains(v51)::JM,117136
117137 :: EXPR :: reference :: Ljava/util/List :: v54 = p0 $this .current_model::
117136 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 215::CF,117873:CD,117143
117140 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v55 = p0 $this .current_chain::
117143 :: CALL :: call :: Z :: v57 = v54.add(v55)::
117148 :: CALL :: call :: Ljava/lang/String :: v61 = p1 $line .substring(#(0), #(6))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117154 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117158 :: CALL :: call :: Ljava/lang/String :: v67 = p1 $line .substring(#(17), #(20))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117164 :: CALL :: call :: Ljava/lang/String :: v69 = v67.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117168 :: CALL :: call :: Ljava/lang/String :: v72 = p1 $line .substring(#(22), #(26))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117174 :: CALL :: call :: Ljava/lang/String :: v74 = v72.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117178 :: CALL :: call :: Ljava/lang/String :: v77 = p1 $line .substring(#(26), #(27))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117184 :: CALL :: call :: C :: v79 = v77.charAt(#(0))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117189 :: CALL :: call :: Ljava/lang/Character :: v81 = valueOf(v79)::JM,117696:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117611:JM,117709:JM,117682:JM,117812:JM,117302:JM,117214
117199 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v74)::JM,117696:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117611:JM,117709:JM,117682:JM,117812:JM,117302:JM,117214
117209 :: CALL :: call :: Z :: v92 = v63.equals(#(ATOM))::JM,117696:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117611:JM,117709:JM,117682:JM,117812:JM,117302:JM,117214
117215 :: CALL :: call :: Ljava/lang/Character :: v101 = get1LetterCode(v69)::CL,47169
117214 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 322::CD,117215:CD,117220:CD,117224
117220 :: CALL :: call :: Ljava/lang/Character :: v94 = get1LetterCode(v69)::JM,117224:CL,47169
117225 :: CALL :: call :: Ljava/lang/Character :: v97 = valueOf(#(88))::
117224 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 349::CD,117225
117235 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v103 = p0 $this .current_group::DD,117238
117239 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v105 = p0 $this .getNewGroup(v63, v102, v69)::CL,129930
117238 :: PRED :: IF :: Z :: if (v103 != #(null)) goto 400::CD,117239:CD,117252:CD,117259:CD,117266:CF,117270
117252 :: CALL :: call :: V :: v106.setPDBName(v69)::CL,88573:CL,88858
117259 :: CALL :: call :: V :: v108.setResidueNumber(v86)::CL,88562
117266 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v110)::CL,130008
117271 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v113 = p0 $this .getNewGroup(v63, v102, v69)::CL,129930
117270 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 447::CF,117302:CD,117271:CD,117284:CD,117291:CD,117298
117284 :: CALL :: call :: V :: v114.setPDBName(v69)::CL,88573:CL,88858
117291 :: CALL :: call :: V :: v116.setResidueNumber(v86)::CL,88562
117298 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v118)::CL,130008
117303 :: CALL :: call :: Ljava/lang/String :: v123 = p1 $line .substring(#(16), #(17))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117302 :: NORM :: declaration :: Ljava/lang/Character :: v120 = new java.lang.Character::JM,117701:JM,117796:JM,117812:JM,117302:JM,117705:JM,117611:JM,117709:JM,117214:JM,117388:JM,117696:JM,117059:JM,117572:JM,117668:JM,117606:JM,117096:JM,117771:JM,117741:JM,117682:JM,117721
117309 :: CALL :: call :: C :: v125 = v123.charAt(#(0))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117325 :: CALL :: call :: Z :: v131 = v86.equals(v129)::JM,117330:CL,41466
117330 :: PRED :: IF :: Z :: if (v131 != #(0)) goto 561::CD,117337:CD,117344:CD,117347:CD,117360:CD,117367:CD,117374:CD,117379:CD,117383:CD,117388:CD,117876
117337 :: CALL :: call :: V :: v157.addGroup(v158)::CL,63901
117344 :: CALL :: call :: V :: v160.trimToSize()::CL,115104
117347 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v163 = p0 $this .getNewGroup(v63, v102, v69)::CL,129930
117360 :: CALL :: call :: V :: v164.setPDBName(v69)::CL,88573:CL,88858
117367 :: CALL :: call :: V :: v166.setResidueNumber(v86)::CL,88562
117374 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v168)::CL,130008
117379 :: CALL :: call :: Ljava/lang/Character :: v133 = valueOf(#(32))::JM,117388
117383 :: CALL :: call :: Z :: v135 = v120.equals(v133)::JM,117388
117388 :: PRED :: IF :: Z :: if (v135 != #(0)) goto 646::CF,117876:CD,117391:CD,117399:CD,117404:CD,117409:CD,117414:CD,117422:CD,117430:CD,117434
117391 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v137 = new java.lang.StringBuilder::
117399 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v137.append(v140)::
117404 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( ))::
117409 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(#(null))::
117414 :: CALL :: call :: Ljava/lang/String :: v149 = v147.toString()::
117422 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v152 = p0 $this .getCorrectAltLocGroup(v120, v63, v102, v69)::JM,117876:CL,130102
117430 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v154 = v152.getChain()::JM,117434:CL,75905
117434 :: PRED :: IF :: Z :: if (v154 != #(null)) goto 646::CF,117876:CD,117438
117438 :: CALL :: call :: V :: v152.setChain(v155)::CL,74688
117442 :: EXPR :: reference :: I :: v171 = p0 $this .atomCount::DD,117445
117445 :: EXPR :: assign :: Ljava/lang/Object :: v172 = v171 + #(1)::DD,117446
117446 :: EXPR :: modify :: I :: p0 $this .atomCount = v172::
117449 :: EXPR :: reference :: I :: v173 = p0 $this .atomCount::DD,117455
117452 :: EXPR :: reference :: I :: v174 = p0 $this .my_ATOM_CA_THRESHOLD::DD,117455
117455 :: PRED :: IF :: Z :: if (v173 != v174) goto 713::CD,117458:CD,117466:CD,117471:CD,117476:CD,117487:CD,117490
117458 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v176 = new java.lang.StringBuilder::
117463 :: EXPR :: reference :: I :: v179 = p0 $this .my_ATOM_CA_THRESHOLD::
117466 :: CALL :: call :: Ljava/lang/StringBuilder :: v181 = v176.append(v179)::
117471 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v181.append(#( atoms in this struct...))::
117476 :: CALL :: call :: Ljava/lang/String :: v186 = v184.toString()::
117484 :: EXPR :: reference :: Ljava/util/List :: v188 = p0 $this .seqResChains::
117487 :: CALL :: call :: V :: v188.clear()::
117490 :: CALL :: call :: V :: p0 $this .switchCAOnly()::CL,130348
117493 :: EXPR :: reference :: I :: v191 = p0 $this .atomCount::DD,117499
117496 :: EXPR :: reference :: I :: v192 = p0 $this .load_max_atoms::DD,117499
117499 :: PRED :: IF :: Z :: if (v191 != v192) goto 784::CD,117502:CD,117510:CD,117515:CD,117520:CD,117530:CD,117535:CD,117540:CD,117555
117502 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v339 = new java.lang.StringBuilder::
117507 :: EXPR :: reference :: I :: v342 = p0 $this .load_max_atoms::
117510 :: CALL :: call :: Ljava/lang/StringBuilder :: v344 = v339.append(v342)::
117515 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v344.append(#(in this protein struc...))::
117520 :: CALL :: call :: Ljava/lang/String :: v349 = v347.toString()::
117530 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v352 = new java.lang.StringBuilder::
117535 :: CALL :: call :: Ljava/lang/StringBuilder :: v356 = v352.append(p1 $line )::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117540 :: CALL :: call :: Ljava/lang/String :: v358 = v356.toString()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117549 :: EXPR :: reference :: I :: v193 = p0 $this .atomCount::DD,117555
117552 :: EXPR :: reference :: I :: v194 = p0 $this .load_max_atoms::DD,117555
117555 :: PRED :: IF :: Z :: if (v193 <= v194) goto 800::CD,117557:CD,117566:JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117557 :: CALL :: call :: Ljava/lang/String :: v197 = p1 $line .substring(#(12), #(16))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117563 :: EXPR :: reference :: Z :: v198 = p0 $this .parseCAonly::DD,117566
117567 :: CALL :: call :: Z :: v201 = v197.equals(#( CA ))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117566 :: PRED :: IF :: Z :: if (v198 == #(0)) goto 835::CD,117567:CD,117572:CD,117584:CD,117588:JM,117696:JM,117059:JM,117701:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117572 :: PRED :: IF :: Z :: if (v201 != #(0)) goto 835::CD,117584:CD,117588
117584 :: CALL :: call :: [Ljava/lang/String :: v204 = v202.getAcceptedAtomNames()::JM,117588:CL,130427
117588 :: PRED :: IF :: Z :: if (v204 == #(null)) goto 923::CD,117592:CD,117596:CD,117614:CD,117615:CD,117624:CD,117630:CD,117634:JM,88919:JM,88924:CD,117642:CD,117650:CD,117654:CD,117658:CD,117664:CD,117668:CD,117672:CD,117678:CD,117682:CD,117686:CD,117692:CD,117696:CD,117700:CD,117713:CD,117717:CD,117721:CD,117737:CD,117741:CD,117767:CD,117771:CD,117829:CD,117833:CD,117853:CD,117858:CD,117877:CD,117878:JM,117059:JM,117701:JM,117572:JM,117796:JM,117606:JM,117705:JM,117096:JM,117611:JM,117709:JM,117812:JM,117302:JM,117214
117592 :: CALL :: call :: [Ljava/lang/String :: v207 = v205.getAcceptedAtomNames()::JM,117596:CL,130427
117596 :: EXPR :: assign :: I :: v208 = v207.length::DD,117614
117598 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v207[v215]::JM,117606:JM,117611
117602 :: CALL :: call :: Ljava/lang/String :: v211 = v197.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117606 :: CALL :: call :: Z :: v213 = v209.equals(v211)::JM,117606:JM,117611:JM,117696:JM,117682:JM,117701:JM,117668:JM,117796:JM,117812:JM,117302:JM,117705:JM,117709:JM,117214
117611 :: PRED :: IF :: Z :: if (v213 == #(0)) goto 892::CD,117613:CD,117614:CD,117877:CD,117878
117613 :: EXPR :: assign :: Ljava/lang/Object :: v214 = v215 + #(1)::DD,117877
117615 :: PRED :: IF :: Z :: if (v216 != #(0)) goto 923::CD,117624:CD,117630:CD,117634:JM,88919:JM,88924:CD,117642:CD,117650:CD,117654:CD,117658:CD,117664:CD,117668:CD,117672:CD,117678:CD,117682:CD,117686:CD,117692:CD,117696:CD,117700:CD,117713:CD,117717:CD,117721:CD,117737:CD,117741:CD,117767:CD,117771:CD,117829:CD,117833:CD,117853:CD,117858:JM,117059:JM,117701:JM,117572:JM,117796:JM,117606:JM,117705:JM,117096:JM,117611:JM,117709:JM,117812:JM,117302:JM,117214
117614 :: PRED :: IF :: Z :: if (v215 < v208) goto 870::CF,117878:CD,117602:CD,117606:CD,117611
117624 :: CALL :: call :: Ljava/lang/String :: v219 = p1 $line .substring(#(6), #(11))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117630 :: CALL :: call :: Ljava/lang/String :: v221 = v219.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117634 :: CALL :: call :: I :: v223 = parseInt(v221)::JM,117696:JM,117682:JM,117701:JM,117668:JM,117796:JM,117812:JM,117606:JM,117302:JM,117705:JM,117611:JM,117709:JM,117214
117642 :: CALL :: call :: V :: v224.setPDBserial(v223)::CL,89735
117650 :: CALL :: call :: Ljava/lang/String :: v229 = v197.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117654 :: CALL :: call :: V :: v224.setName(v229)::CL,89746
117658 :: CALL :: call :: Ljava/lang/String :: v234 = p1 $line .substring(#(30), #(38))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117664 :: CALL :: call :: Ljava/lang/String :: v236 = v234.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117668 :: CALL :: call :: D :: v238 = parseDouble(v236)::JM,117696:JM,117682:JM,117701:JM,117668:JM,117796:JM,117812:JM,117606:JM,117302:JM,117705:JM,117611:JM,117709:JM,117214
117672 :: CALL :: call :: Ljava/lang/String :: v241 = p1 $line .substring(#(38), #(46))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117678 :: CALL :: call :: Ljava/lang/String :: v243 = v241.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117682 :: CALL :: call :: D :: v245 = parseDouble(v243)::JM,117696:JM,117682:JM,117701:JM,117668:JM,117796:JM,117812:JM,117606:JM,117302:JM,117705:JM,117611:JM,117709:JM,117214
117686 :: CALL :: call :: Ljava/lang/String :: v248 = p1 $line .substring(#(46), #(54))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117692 :: CALL :: call :: Ljava/lang/String :: v250 = v248.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117696 :: CALL :: call :: D :: v252 = parseDouble(v250)::JM,117696:JM,117682:JM,117701:JM,117668:JM,117796:JM,117812:JM,117606:JM,117302:JM,117705:JM,117611:JM,117709:JM,117214
117701 :: EXPR :: modify :: D :: v254[#(0)] = v238::
117700 :: NORM :: declaration :: [D :: v254 = new []::
117705 :: EXPR :: modify :: D :: v254[#(1)] = v245::
117709 :: EXPR :: modify :: D :: v254[#(2)] = v252::
117713 :: CALL :: call :: V :: v224.setCoords(v254)::CL,88966
117717 :: CALL :: call :: I :: v259 = p1 $line .length()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117721 :: PRED :: IF :: Z :: if (v259 <= #(59)) goto 1082::CD,117722:CD,117728:JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117722 :: CALL :: call :: Ljava/lang/String :: v263 = p1 $line .substring(#(54), #(60))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117728 :: CALL :: call :: Ljava/lang/String :: v265 = v263.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117214
117737 :: CALL :: call :: I :: v273 = p1 $line .length()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117741 :: PRED :: IF :: Z :: if (v273 <= #(65)) goto 1115::CD,117742:CD,117748:JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117742 :: CALL :: call :: Ljava/lang/String :: v277 = p1 $line .substring(#(60), #(66))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117748 :: CALL :: call :: Ljava/lang/String :: v279 = v277.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117709:JM,117682:JM,117812:JM,117302:JM,117214
117767 :: CALL :: call :: I :: v289 = p1 $line .length()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117771 :: PRED :: IF :: Z :: if (v289 <= #(77)) goto 1168::CD,117772:CD,117778:CD,117782:CD,117788:CD,117792:CD,117796:CD,117824:JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117772 :: CALL :: call :: Ljava/lang/String :: v314 = p1 $line .substring(#(76), #(78))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117778 :: CALL :: call :: Ljava/lang/String :: v316 = v314.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117611:JM,117709:JM,117682:JM,117812:JM,117302:JM,117214
117782 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v318 = valueOfIgnoreCase(v316)::CL,129569
117788 :: CALL :: call :: Ljava/lang/String :: v292 = v197.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117792 :: CALL :: call :: I :: v294 = v292.length()::JM,117696:JM,117682:JM,117701:JM,117668:JM,117796:JM,117812:JM,117606:JM,117302:JM,117705:JM,117611:JM,117709:JM,117214
117797 :: CALL :: call :: Ljava/lang/String :: v306 = v197.substring(#(0), #(1))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117796 :: PRED :: IF :: Z :: if (v294 != #(4)) goto 1192::CD,117797:CD,117804:CD,117808:CD,117812:JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117302:JM,117721:JM,117214
117804 :: CALL :: call :: Ljava/lang/String :: v297 = v197.trim()::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117808 :: CALL :: call :: I :: v299 = v297.length()::JM,117696:JM,117682:JM,117701:JM,117668:JM,117796:JM,117812:JM,117606:JM,117302:JM,117705:JM,117611:JM,117709:JM,117214
117813 :: CALL :: call :: Ljava/lang/String :: v302 = v197.substring(#(0), #(2))::JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117812 :: PRED :: IF :: Z :: if (v299 <= #(1)) goto 1224::CD,117813:CD,117819:JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117819 :: CALL :: call :: Ljava/lang/String :: v304 = v302.trim()::JM,117696:JM,117682:JM,117701:JM,117668:JM,117796:JM,117812:JM,117606:JM,117302:JM,117705:JM,117611:JM,117709:JM,117214
117824 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v309 = valueOfIgnoreCase(v307)::CL,129569
117829 :: CALL :: call :: V :: v224.setElement(v321)::CL,89757
117833 :: PRED :: IF :: Z :: if (v170 == #(null)) goto 1262::CD,117834:CD,117842
117834 :: CALL :: call :: V :: v170.addAtom(v224)::CL,88604
117842 :: CALL :: call :: V :: v323.addAtom(v224)::CL,88604
117853 :: CALL :: call :: Z :: v331 = v327.hasAtom(v329)::JM,117858:CL,45135
117858 :: PRED :: IF :: Z :: if (v331 != #(0)) goto 1300::CD,117862
117862 :: CALL :: call :: V :: v332.addAtom(v224)::CL,88604
117871 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1)::DD,117873
117873 :: EXPR :: assign :: null :: PHI v58 = v23, #(1), #(1)::DD,117270:JM,117696:JM,117059:JM,117701:JM,117572:JM,117668:JM,117796:JM,117606:JM,117705:JM,117096:JM,117771:JM,117611:JM,117741:JM,117709:JM,117682:JM,117812:JM,117302:JM,117721:JM,117214
117872 :: EXPR :: assign :: null :: PHI v45 = v37, v44::DD,117106:DD,117122
117877 :: EXPR :: assign :: null :: PHI v215 = #(0), v214::DD,117613:DD,117614
117876 :: EXPR :: assign :: null :: PHI v170 = #(null), #(null), v152, v152::DD,117833
117878 :: EXPR :: assign :: null :: PHI v216 = #(1), #(0)::DD,117615
118197 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SEQRES_Handler(java.lang.String)::CD,118202:CD,118208:CD,118212:CD,118218:CD,118224:CD,118228:CD,118236:CD,118244:CD,118249:CD,118254
118202 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(0), #(6))::JM,118254
118208 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,118254
118212 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(#(11), #(12))::JM,118254
118218 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(17))::JM,118254
118224 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::JM,118254
118228 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $line .substring(#(18))::JM,118254
118233 :: EXPR :: reference :: I :: v23 = p0 $this .lengthCheck::DD,118236
118237 :: CALL :: call :: I :: v26 = parseInt(v19)::JM,118254
118236 :: PRED :: IF :: Z :: if (v23 != #(-1)) goto 58::CF,118244:CD,118237:JM,118254
118244 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v27 = new java.util.StringTokenizer::JM,118339
118249 :: CALL :: call :: Z :: v32 = v9.equals(#(SEQRES))::JM,118254
118254 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 87::CD,118259:CD,118271:CD,118335:CD,118339:CD,118343:CD,118349:CD,118364:CD,118377
118259 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v35 = p0 $this .isKnownChain(v13, v33)::JM,118265:CL,129884
118265 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v35::
118268 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v36 = p0 $this .current_chain::DD,118271
118271 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 211::CD,118272:JM,63730:JM,63716:JM,63723:JM,63711:CD,118282:JM,118339
118272 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v37 = new org.biojava.nbio.structure.ChainImpl::DD,118276
118276 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v37::
118282 :: CALL :: call :: V :: v39.setChainID(v13)::CL,63754
118287 :: CALL :: call :: Ljava/lang/String :: v44 = v27.nextToken()::
118291 :: CALL :: call :: Ljava/lang/Character :: v46 = get1LetterCode(v44)::CL,47169
118295 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v49 = p0 $this .getNewGroup(#(ATOM), v46, v44)::JM,118302:CL,129930
118302 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v49::
118308 :: CALL :: call :: V :: v50.setPDBName(v44)::CL,88573:CL,88858
118312 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .current_group::DD,118315
118315 :: EXPR :: assign :: Z :: v53=v52 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,118316
118316 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 197::CD,118321
118321 :: CALL :: call :: V :: v55.setRecordType(#(SEQRES))::CL,88889
118331 :: CALL :: call :: V :: v57.addGroup(v58)::CL,63901
118335 :: CALL :: call :: Z :: v42 = v27.hasMoreTokens()::JM,118339
118339 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 129::CD,118287:CD,118291:CD,118295:CD,118308:CD,118315:CD,118316:CD,118331:CD,118335
118343 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v63 = p0 $this .isKnownChain(v13, v61)::JM,118349:CL,129884
118349 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 248::CD,118356
118350 :: EXPR :: reference :: Ljava/util/List :: v64 = p0 $this .seqResChains::
118353 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v65 = p0 $this .current_chain::
118356 :: CALL :: call :: Z :: v67 = v64.add(v65)::
118361 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v68 = p0 $this .current_group::DD,118364
118364 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 265::CD,118368
118368 :: CALL :: call :: V :: v69.trimToSize()::CL,115104
118377 :: CALL :: call :: I :: v72 = parseInt(v19)::JM,118254
118461 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MODEL_Handler(java.lang.String)::CD,118469:CD,118473
118469 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,118473:CL,94376
118473 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,118478
118475 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v8 = p0 $this .current_chain::DD,118478
118479 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v10 = p0 $this .current_group::DD,118482
118478 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 117::CD,118482:CD,118509:CD,118515:CD,118533:CD,118537
118482 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,118489:CD,118496
118489 :: CALL :: call :: V :: v11.addGroup(v12)::CL,63901
118496 :: CALL :: call :: V :: v14.trimToSize()::CL,115104
118509 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v21 = p0 $this .isKnownChain(v18, v19)::JM,118515:CL,129884
118515 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 84::CD,118522
118516 :: EXPR :: reference :: Ljava/util/List :: v22 = p0 $this .current_model::
118519 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v23 = p0 $this .current_chain::
118522 :: CALL :: call :: Z :: v25 = v22.add(v23)::
118533 :: CALL :: call :: V :: v26.addModel(v27)::CL,63163
118537 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::
118577 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HEADER_Handler(java.lang.String)::CD,118582:CD,118586:CD,118590:CD,118613:CD,118647:CD,118652:CD,118657:CD,118662:CD,118670:CD,118726:JM,118741:JM,118614:JM,118591:JM,118671:JM,118686
118582 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .trim()::JM,118613:JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118590:JM,118670:JM,118686
118586 :: CALL :: call :: I :: v8 = v6.length()::JM,118613:JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118590:JM,118670:JM,118686
118591 :: CALL :: call :: I :: v12 = min(v8, #(50))::JM,118613:JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118670:JM,118686
118590 :: PRED :: IF :: Z :: if (v8 <= #(10)) goto 52::CD,118591:CD,118596:CD,118602:CD,118609:JM,118741:JM,118726:JM,118614:JM,118671:JM,118670:JM,118686:CF,118613
118596 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), v12)::JM,118613:JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118590:JM,118670:JM,118686
118602 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::JM,118613:JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118590:JM,118670:JM,118686
118609 :: CALL :: call :: V :: v17.setClassification(v16)::CL,116828
118613 :: PRED :: IF :: Z :: if (v8 <= #(50)) goto 131::CD,118614:CD,118619:CD,118625:CD,118640:JM,118741:JM,118726:JM,118591:JM,118671:JM,118686:CF,118670
118614 :: CALL :: call :: I :: v22 = min(v8, #(59))::JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118670:JM,118686
118619 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(50), v22)::JM,118613:JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118590:JM,118670:JM,118686
118625 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::JM,118613:JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118590:JM,118670:JM,118686
118640 :: CALL :: call :: V :: v30.setDepDate(v29)::CL,115895
118647 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
118652 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v26)::JM,118741:JM,118614:JM,118591:JM,118671:JM,118686
118657 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#('. Will continue with...))::
118662 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
118671 :: CALL :: call :: I :: v50 = min(v8, #(66))::JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118686
118670 :: PRED :: IF :: Z :: if (v8 <= #(62)) goto 210::CD,118671:CD,118676:CD,118682:CD,118691:CD,118699:CD,118704:CD,118722:JM,118741:JM,118614:JM,118591:JM,118686:CF,118726
118676 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $line .substring(#(62), v50)::JM,118613:JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118590:JM,118670:JM,118686
118682 :: CALL :: call :: Ljava/lang/String :: v54 = v52.trim()::JM,118613:JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118590:JM,118670:JM,118686
118686 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v54::
118691 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
118696 :: EXPR :: reference :: Ljava/lang/String :: v59 = p0 $this .pdbId::
118699 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v56.append(v59)::
118704 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
118722 :: CALL :: call :: V :: v67.setIdCode(v54)::CL,101309
118727 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .pdbId::JM,118741
118726 :: PRED :: IF :: Z :: if (v8 <= #(66)) goto 265::CD,118730:CD,118736:CD,118741
118730 :: CALL :: call :: Ljava/lang/String :: v74 = p1 $line .substring(#(72), #(76))::JM,118613:JM,118741:JM,118726:JM,118614:JM,118591:JM,118671:JM,118590:JM,118670:JM,118686
118736 :: CALL :: call :: Z :: v76 = v70.equals(v74)::JM,118741:JM,118613:JM,118726:JM,118614:JM,118591:JM,118671:JM,118590:JM,118670:JM,118686
118741 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 265::CD,118747:CD,118751:CD,118759:CD,118764:CD,118768
118747 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
118751 :: CALL :: call :: Ljava/lang/String :: v83 = valueOf(v81)::
118759 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v80.append(#( is a LEGACY entry - ...))::
118764 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
118768 :: CALL :: call :: V :: v79.println(v89)::
118833 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_AUTHOR_Handler(java.lang.String)::CD,118838:CD,118843:CD,118850:CD,118854
118838 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .substring(#(10))::
118843 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::
118850 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getAuthors()::JM,118854:CL,116961
118854 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 33::CF,118863:CD,118858:CD,118864:CD,118872:CD,118877:CD,118884
118858 :: CALL :: call :: V :: v23.setAuthors(v8)::CL,116970
118863 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
118864 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v11)::
118872 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v13.append(v8)::
118877 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
118884 :: CALL :: call :: V :: v21.setAuthors(v20)::CL,116970
118904 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TITLE_Handler(java.lang.String)::CD,118909:CD,118913:CD,118942:CD,118946:CD,118992:CD,118993:CD,119001:CD,119006:CD,119013:CD,119018
118909 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,118913:JM,119018
118913 :: PRED :: IF :: Z :: if (v5 <= #(79)) goto 28::CD,118914:CD,118920:CD,118925:CD,118929:CD,118935:CD,119018:JM,118913
118914 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(80))::JM,118913:JM,119018
118920 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::JM,119018
118925 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,118913:JM,119018
118929 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(10), v9)::JM,118913:JM,119018
118935 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,119018
118942 :: CALL :: call :: Ljava/lang/String :: v22 = v20.getTitle()::JM,118946:JM,118952:JM,118958:CL,130436
118947 :: CALL :: call :: Z :: v26 = v22.equals(#())::JM,118952:JM,118958
118946 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 116::CD,118947:CD,118952:JM,118958
118953 :: CALL :: call :: Z :: v30 = v22.endsWith(#(-))::JM,118952:JM,118958
118952 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 116::CD,118953:CD,118958:JM,118952
118959 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
118958 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 88::CF,118973:CF,118959:CD,118960:CD,118968:CD,118974:CD,118982:CD,118987
118960 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v22)::
118968 :: CALL :: call :: Ljava/lang/String :: v45 = v40.toString()::
118973 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
118974 :: CALL :: call :: Ljava/lang/String :: v33 = valueOf(v22)::
118982 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(#( ))::
118987 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
118993 :: CALL :: call :: Ljava/lang/String :: v49 = valueOf(v46)::
118992 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
119001 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v19)::
119006 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::
119013 :: CALL :: call :: V :: v55.setTitle(v54)::CL,101289
119018 :: EXPR :: assign :: null :: PHI v19 = v18, v13::
119054 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_JRNL_Handler(java.lang.String)::CD,119059:CD,119063:CD,119064:CD,119068:CD,119069:CD,119078:CD,119083:JM,119094
119059 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,119063:JM,119094:JM,119083:JM,119068
119063 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - #(8)::JM,119063:JM,119094:JM,119083:JM,119068
119064 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,119063:JM,119094:JM,119083:JM,119068
119069 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v7, v11)::JM,119063:JM,119094:JM,119083:JM,119068
119068 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 - #(4)::JM,119063:JM,119094:JM,119083:JM,119068
119075 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .pdbId::JM,119083
119078 :: CALL :: call :: Z :: v16 = v13.equals(v14)::JM,119094:JM,119083
119083 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 66::CD,119090:CD,119094:CD,119095:CD,119104:CD,119113
119090 :: CALL :: call :: I :: v25 = p1 $line .length()::JM,119063:JM,119094:JM,119083:JM,119068
119095 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(0), v26)::JM,119063:JM,119094:JM,119083:JM,119068
119094 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(8)::JM,119063:JM,119094:JM,119083:JM,119068
119101 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .journalLines::
119104 :: CALL :: call :: Z :: v31 = v29.add(v28)::JM,119083
119110 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .journalLines::
119113 :: CALL :: call :: Z :: v20 = v18.add(p1 $line )::JM,119063:JM,119094:JM,119083:JM,119068
119139 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_EXPDTA_Handler(java.lang.String)::CD,119144:CD,119148:CD,119169:CD,119174:CD,119189:CD,119192
119144 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,119148
119149 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), #(70))::JM,119148
119148 :: PRED :: IF :: Z :: if (v5 <= #(69)) goto 27::CD,119149:CD,119155:CD,119160:CD,119165:JM,119148
119155 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
119160 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $line .substring(#(10))::JM,119148
119165 :: CALL :: call :: Ljava/lang/String :: v11 = v9.trim()::
119169 :: CALL :: call :: [Ljava/lang/String :: v20 = v17.split(#(;\s+))::JM,119174
119174 :: EXPR :: assign :: I :: v21 = v20.length::DD,119189
119183 :: CALL :: call :: Z :: v26 = v24.setExperimentalTechnique(v23)::CL,115948
119189 :: PRED :: IF :: Z :: if (v29 < v21) goto 57::CD,119183:CD,119188:CD,119192
119188 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,119192
119192 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,119188:DD,119189
119218 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CRYST1_Handler(java.lang.String)::CD,119223:CD,119227:CD,119322:CD,119327:CD,119331:CD,119336:CD,119341:CD,119346:CD,119496:JM,119497:JM,119359
119223 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,119497:JM,119227:JM,119359
119227 :: PRED :: IF :: Z :: if (v5 >= #(63)) goto 31::CD,119235:CD,119241:CD,119249:CD,119255:CD,119263:CD,119269:CD,119277:CD,119283:CD,119291:CD,119297:CD,119305:CD,119311:CD,119355:CD,119359:CD,119390:CD,119395:CD,119400:CD,119405:CD,119410:CD,119415:CD,119419:CD,119423:CD,119443:CD,119447:CD,119497:JM,119227
119235 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(6), #(15))::JM,119497:JM,119227:JM,119359
119241 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,119497:JM,119359
119249 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(15), #(24))::JM,119497:JM,119227:JM,119359
119255 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,119497:JM,119359
119263 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $line .substring(#(24), #(33))::JM,119497:JM,119227:JM,119359
119269 :: CALL :: call :: Ljava/lang/String :: v27 = v25.trim()::JM,119497:JM,119359
119277 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(33), #(40))::JM,119497:JM,119227:JM,119359
119283 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::JM,119497:JM,119359
119291 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(40), #(47))::JM,119497:JM,119227:JM,119359
119297 :: CALL :: call :: Ljava/lang/String :: v41 = v39.trim()::JM,119497:JM,119359
119305 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $line .substring(#(47), #(54))::JM,119497:JM,119227:JM,119359
119311 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::JM,119497:JM,119359
119322 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
119327 :: CALL :: call :: Ljava/lang/String :: v57 = v51.getMessage()::
119331 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
119336 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v59.append(#() from line and ignor...))::
119341 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v62.append(p1 $line )::JM,119497:JM,119227:JM,119359
119346 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,119497:JM,119359
119355 :: CALL :: call :: I :: v69 = p1 $line .length()::JM,119497:JM,119227:JM,119359
119359 :: PRED :: IF :: Z :: if (v69 < #(66)) goto 194::CD,119360:CD,119366:CD,119371:CD,119375:CD,119381:CD,119497:JM,119227:JM,119359
119360 :: CALL :: call :: Ljava/lang/String :: v79 = p1 $line .substring(#(55), #(66))::JM,119497:JM,119227:JM,119359
119366 :: CALL :: call :: Ljava/lang/String :: v81 = v79.trim()::JM,119497
119371 :: CALL :: call :: I :: v73 = p1 $line .length()::JM,119497:JM,119227:JM,119359
119375 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(55), v73)::JM,119497:JM,119227:JM,119359
119381 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,119497
119390 :: CALL :: call :: V :: v83.setA(v85)::CL,116001
119395 :: CALL :: call :: V :: v83.setB(v87)::CL,116012
119400 :: CALL :: call :: V :: v83.setC(v89)::CL,116023
119405 :: CALL :: call :: V :: v83.setAlpha(v91)::CL,116034
119410 :: CALL :: call :: V :: v83.setBeta(v93)::CL,116054
119415 :: CALL :: call :: V :: v83.setGamma(v95)::CL,116074
119419 :: CALL :: call :: Z :: v98 = v83.isCellReasonable()::JM,119423:CL,116094
119423 :: PRED :: IF :: Z :: if (v98 != #(0)) goto 289::CD,119426:CD,119439
119426 :: CALL :: call :: Ljava/lang/Double :: v106 = valueOf(#(10.0 d))::JM,119426
119439 :: CALL :: call :: V :: v100.setCrystalCell(v83)::CL,116138
119443 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v109 = getSpaceGroup(v82)::JM,119447:CL,116149
119447 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 353::CD,119450:CD,119455:CD,119460:CD,119465:CD,119476:CD,119484:CD,119491
119450 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v116 = new java.lang.StringBuilder::
119455 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v116.append(v82)::
119460 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#(' not recognised as a...))::
119465 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
119476 :: CALL :: call :: V :: v127.setNonStandardSg(#(1))::CL,116228
119484 :: CALL :: call :: V :: v111.setSpaceGroup(v109)::CL,116239
119491 :: CALL :: call :: V :: v113.setNonStandardSg(#(0))::CL,116228
119497 :: EXPR :: assign :: null :: PHI v82 = v81, v77::
119496 :: EXPR :: assign :: Ljava/lang/Exception :: v51 = catch <exc>::
119572 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MTRIXn_Handler(java.lang.String)::CD,119577:CD,119581:JM,119745:JM,119654:JM,119822
119577 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,119745:JM,119654:JM,119581:JM,119822
119581 :: PRED :: IF :: Z :: if (v5 >= #(60)) goto 25::CD,119589:CD,119595:CD,119599:CD,119609:CD,119619:CD,119629:CD,119639:CD,119645:CD,119649:CD,119654:CD,119665:CD,119822:JM,119745:JM,119581
119589 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(5), #(6))::JM,119745:JM,119654:JM,119581:JM,119822
119595 :: CALL :: call :: I :: v12 = parseInt(v10)::JM,119745:JM,119654:JM,119822
119599 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(20))::JM,119745:JM,119654:JM,119581:JM,119822
119609 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(20), #(30))::JM,119745:JM,119654:JM,119581:JM,119822
119619 :: CALL :: call :: Ljava/lang/String :: v26 = p1 $line .substring(#(30), #(40))::JM,119745:JM,119654:JM,119581:JM,119822
119629 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(45), #(55))::JM,119745:JM,119654:JM,119581:JM,119822
119639 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(59), #(60))::JM,119745:JM,119654:JM,119581:JM,119822
119645 :: CALL :: call :: Ljava/lang/String :: v40 = v38.trim()::JM,119745:JM,119654:JM,119822
119649 :: CALL :: call :: Z :: v43 = v40.equals(#())::JM,119654:JM,119822
119655 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(59), #(60))::JM,119745:JM,119654:JM,119581:JM,119822
119654 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 122::CF,119822:CD,119655:CD,119661:JM,119745:JM,119654:JM,119581
119661 :: CALL :: call :: I :: v47 = parseInt(v45)::JM,119745:JM,119654:JM,119822
119665 :: PRED :: IF :: Z :: if (v48 != #(1)) goto 127::CD,119670:CD,119681:CD,119745
119667 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .ncsOperators::DD,119670
119671 :: NORM :: declaration :: Ljava/util/ArrayList :: v52 = new java.util.ArrayList::DD,119675
119670 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 145::CD,119671
119675 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ncsOperators = v52::
119678 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v54 = p0 $this .currentNcsOp::DD,119681
119681 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 179::CD,119682
119682 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v55 = new javax.vecmath.Matrix4d::DD,119702
119702 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .currentNcsOp = v55::
119745 :: PRED :: IF :: Z :: if (v12 != #(3)) goto 323::CD,119752
119746 :: EXPR :: reference :: Ljava/util/List :: v73 = p0 $this .ncsOperators::
119749 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v74 = p0 $this .currentNcsOp::
119752 :: CALL :: call :: Z :: v76 = v73.add(v74)::
119822 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,119665
119926 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_Handler(java.lang.String)::CD,119931:CD,120017:CD,120022:CD,120027:CD,120032:CD,120037:CD,120074:CD,120167:JM,119936:JM,119987:JM,119954:JM,119943:JM,120090
119931 :: PRED :: IF :: Z :: if (p1 $line  == #(null)) goto 13::CD,119932:CD,119936:JM,119987:JM,119954:JM,119943:JM,120090
119932 :: CALL :: call :: I :: v6 = p1 $line .length()::JM,119936:JM,119987:JM,119954:JM,119943:JM,120090
119936 :: PRED :: IF :: Z :: if (v6 >= #(11)) goto 18::CD,119938:CD,119943:JM,119936:JM,119987:JM,119954:JM,120090
119938 :: CALL :: call :: Z :: v10 = p1 $line .startsWith(#(REMARK 800))::JM,119936:JM,119987:JM,119954:JM,119943:JM,120090
119943 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 36::CD,119944:CD,119949:CD,119954:JM,119936:JM,119987:JM,119943:JM,120090
119944 :: CALL :: call :: V :: p0 $this .pdb_REMARK_800_Handler(p1 $line )::CL,130445
119949 :: CALL :: call :: Z :: v14 = p1 $line .startsWith(#(REMARK 350))::JM,119936:JM,119987:JM,119954:JM,119943:JM,120090
119954 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 85::CD,119958:CD,119962:CD,119982:CD,119987:JM,119936:JM,119954:JM,119943:JM,120090
119958 :: CALL :: call :: Z :: v106 = v104.isParseBioAssembly()::JM,119962:CL,96495
119963 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v107 = p0 $this .bioAssemblyParser::DD,119966
119962 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 342::CD,119966:CD,119977
119966 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 71::JM,130869:JM,130856
119977 :: CALL :: call :: V :: v110.pdb_REMARK_350_Handler(p1 $line )::CL,130893
119982 :: CALL :: call :: Z :: v17 = p1 $line .startsWith(#(REMARK   3   FREE R VALUE))::JM,119936:JM,119987:JM,119954:JM,119943:JM,120090
119987 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 223::CD,119988:CD,119992:CD,119997:CD,120001:CD,120045:CD,120049:CD,120054:CD,120058:CD,120085:CD,120090:JM,119936:JM,119987:JM,119954:JM,119943
119988 :: CALL :: call :: Ljava/util/regex/Pattern :: v62 = compile(#(^REMARK   3   FREE R ...))::
119992 :: CALL :: call :: Ljava/util/regex/Matcher :: v64 = v62.matcher(p1 $line )::JM,120001
119997 :: CALL :: call :: Z :: v66 = v64.matches()::JM,120001
120001 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 166::CD,120002:JM,120001
120002 :: CALL :: call :: Ljava/lang/String :: v68 = v64.group(#(1))::JM,120001
120017 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
120022 :: CALL :: call :: Ljava/lang/String :: v77 = v64.group(#(1))::JM,120001
120027 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v73.append(v77)::
120032 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v79.append(#( does not look like a...))::
120037 :: CALL :: call :: Ljava/lang/String :: v84 = v82.toString()::
120045 :: CALL :: call :: Ljava/util/regex/Pattern :: v89 = compile(#(^REMARK   3   FREE R ...))::
120049 :: CALL :: call :: Ljava/util/regex/Matcher :: v91 = v89.matcher(p1 $line )::JM,120058
120054 :: CALL :: call :: Z :: v93 = v91.matches()::JM,120058
120059 :: CALL :: call :: Ljava/lang/String :: v95 = v91.group(#(1))::JM,120058
120058 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 342::CD,120059:JM,120058
120074 :: CALL :: call :: Ljava/lang/String :: v102 = v91.group(#(1))::JM,120058
120085 :: CALL :: call :: Z :: v20 = p1 $line .startsWith(#(REMARK   3   RESOLUTI...))::JM,119936:JM,119987:JM,119954:JM,119943:JM,120090
120091 :: CALL :: call :: Ljava/util/regex/Pattern :: v23 = compile(#(^REMARK   3   RESOLUT...))::
120090 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 342::CD,120091:CD,120095:CD,120100:CD,120104
120095 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v23.matcher(p1 $line )::JM,120104
120100 :: CALL :: call :: Z :: v27 = v25.matches()::JM,120104
120105 :: CALL :: call :: Ljava/lang/String :: v30 = v25.group(#(1))::JM,120104
120104 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 342::CD,120105:CD,120117:CD,120121:CD,120122:CD,120160:JM,120104
120117 :: CALL :: call :: F :: v35 = v33.getResolution()::JM,120121:CL,116839
120121 :: EXPR :: assign :: Z :: v37 = v35 < #(99.0 f)::DD,120122
120122 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 313::CD,120125:CD,120134:CD,120138:CD,120146
120125 :: CALL :: call :: Ljava/lang/String :: v41 = v25.group(#(1))::JM,120104
120134 :: CALL :: call :: F :: v46 = v44.getResolution()::JM,120138:CL,116839
120138 :: CALL :: call :: Ljava/lang/Float :: v48 = valueOf(v46)::JM,120138
120146 :: CALL :: call :: Ljava/lang/String :: v50 = format(#(%4.2f), v43)::
120160 :: CALL :: call :: V :: v52.setResolution(v32)::CL,115937
120167 :: CALL :: call :: Ljava/lang/String :: v58 = v25.group(#(1))::JM,120104
120251 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CONECT_Handler(java.lang.String)::CD,120259:CD,120450:CD,120455:CD,120459:CD,120464:CD,120469:CD,120474:CD,120484
120256 :: EXPR :: reference :: Z :: v4 = p0 $this .atomOverflow::DD,120259
120259 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 9::CD,120264:CD,120268
120264 :: CALL :: call :: Z :: v8 = v6.isHeaderOnly()::JM,120268:CL,94376
120268 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,120270:CD,120276:CD,120280:CD,120284:CD,120291:CD,120298:CD,120305:CD,120312:CD,120319:CD,120326:CD,120333:CD,120340:CD,120347:CD,120354:CD,120363:CD,120369:CD,120376:CD,120383:CD,120390:CD,120397:CD,120404:CD,120411:CD,120418:CD,120425:CD,120432:CD,120442
120270 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .substring(#(6), #(11))::
120276 :: CALL :: call :: Ljava/lang/String :: v14 = v12.trim()::
120280 :: CALL :: call :: I :: v16 = parseInt(v14)::
120284 :: CALL :: call :: Ljava/lang/Integer :: v19 = p0 $this .conect_helper(p1 $line , #(11), #(16))::JM,120369:CL,131069
120291 :: CALL :: call :: Ljava/lang/Integer :: v22 = p0 $this .conect_helper(p1 $line , #(16), #(21))::JM,120376:CL,131069
120298 :: CALL :: call :: Ljava/lang/Integer :: v25 = p0 $this .conect_helper(p1 $line , #(21), #(26))::JM,120383:CL,131069
120305 :: CALL :: call :: Ljava/lang/Integer :: v28 = p0 $this .conect_helper(p1 $line , #(26), #(31))::JM,120390:CL,131069
120312 :: CALL :: call :: Ljava/lang/Integer :: v31 = p0 $this .conect_helper(p1 $line , #(31), #(36))::JM,120397:CL,131069
120319 :: CALL :: call :: Ljava/lang/Integer :: v34 = p0 $this .conect_helper(p1 $line , #(36), #(41))::JM,120404:CL,131069
120326 :: CALL :: call :: Ljava/lang/Integer :: v37 = p0 $this .conect_helper(p1 $line , #(41), #(46))::JM,120411:CL,131069
120333 :: CALL :: call :: Ljava/lang/Integer :: v40 = p0 $this .conect_helper(p1 $line , #(46), #(51))::JM,120418:CL,131069
120340 :: CALL :: call :: Ljava/lang/Integer :: v43 = p0 $this .conect_helper(p1 $line , #(51), #(56))::JM,120425:CL,131069
120347 :: CALL :: call :: Ljava/lang/Integer :: v46 = p0 $this .conect_helper(p1 $line , #(56), #(61))::JM,120432:CL,131069
120354 :: NORM :: declaration :: Ljava/util/HashMap :: v47 = new java.util.HashMap::
120363 :: CALL :: call :: Ljava/lang/Object :: v53 = v47.put(#(atomserial), v50)::
120369 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 185::CD,120370:CF,120376
120370 :: CALL :: call :: Ljava/lang/Object :: v57 = v47.put(#(bond1), v19)::
120377 :: CALL :: call :: Ljava/lang/Object :: v60 = v47.put(#(bond2), v22)::
120376 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 201::CD,120377:CF,120383
120383 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 217::CD,120384:CF,120390
120384 :: CALL :: call :: Ljava/lang/Object :: v63 = v47.put(#(bond3), v25)::
120391 :: CALL :: call :: Ljava/lang/Object :: v66 = v47.put(#(bond4), v28)::
120390 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 233::CD,120391:CF,120397
120397 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 249::CD,120398:CF,120404
120398 :: CALL :: call :: Ljava/lang/Object :: v69 = v47.put(#(hydrogen1), v31)::
120405 :: CALL :: call :: Ljava/lang/Object :: v72 = v47.put(#(hydrogen2), v34)::
120404 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 265::CD,120405:CF,120411
120411 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 281::CD,120412:CF,120418
120412 :: CALL :: call :: Ljava/lang/Object :: v75 = v47.put(#(salt1), v37)::
120419 :: CALL :: call :: Ljava/lang/Object :: v78 = v47.put(#(hydrogen3), v40)::
120418 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 297::CD,120419:CF,120425
120425 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 313::CD,120426:CF,120432
120426 :: CALL :: call :: Ljava/lang/Object :: v81 = v47.put(#(hydrogen4), v43)::
120433 :: CALL :: call :: Ljava/lang/Object :: v84 = v47.put(#(salt2), v46)::
120432 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 328::CD,120433
120439 :: EXPR :: reference :: Ljava/util/List :: v85 = p0 $this .connects::
120442 :: CALL :: call :: Z :: v87 = v85.add(v47)::
120450 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
120455 :: CALL :: call :: Ljava/lang/String :: v94 = v88.getMessage()::
120459 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
120464 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#(), at line : ))::
120469 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(p1 $line )::
120474 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
120484 :: EXPR :: assign :: Ljava/lang/Exception :: v88 = catch <exc>::
120614 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REVDAT_Handler(java.lang.String)::CD,120622:CD,120626:CD,120666:CD,120671:CD,120676:CD,120681
120622 :: CALL :: call :: Ljava/util/Date :: v6 = v4.getModDate()::JM,120626:CL,131119
120627 :: NORM :: declaration :: Ljava/util/Date :: v8 = new java.util.Date::
120626 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,120627:CD,120632:CD,120637:CD,120638:CD,120644:CD,120659
120632 :: CALL :: call :: Z :: v12 = v6.equals(v8)::JM,120637
120637 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 94::CD,120638:CD,120644:CD,120659
120638 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(22))::
120644 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::
120659 :: CALL :: call :: V :: v23.setModDate(v22)::CL,115906
120666 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
120671 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v27.append(v19)::
120676 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#('. Will continue with...))::
120681 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
120709 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_DBREF_Handler(java.lang.String)::CD,120734:CD,120929
120734 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v13 = new org.biojava.nbio.structure.DBRef::
120926 :: EXPR :: reference :: Ljava/util/List :: v103 = p0 $this .dbrefs::
120929 :: CALL :: call :: Z :: v105 = v103.add(v13)::
121034 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SITE_Handler(java.lang.String)::CD,121042:CD,121046:JM,121498
121042 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,121046:CL,94376
121046 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 11::CD,121050:CD,121055:CD,121060:CD,121068:CD,121077:CD,121082:CD,121083:CD,121088:CD,121092:CD,121097:CD,121099:CD,121100:CD,121177:CD,121186:CD,121387:CD,121393:CD,121398:CD,121401:CD,121409:CD,121413:CD,121417:CD,121422:CD,121427:CD,121438:CD,121442:CD,121489:CD,121493:CD,121495:CD,121496:CD,121497:CD,121498
121050 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
121055 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $line )::JM,121498
121060 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,121498
121068 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(11), #(14))::JM,121498
121077 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v20)::JM,121082
121083 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 69::CD,121495
121082 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,121083:DD,121497
121088 :: CALL :: call :: Ljava/lang/String :: v30 = v20.trim()::JM,121498
121092 :: CALL :: call :: Z :: v32 = v28.containsKey(v30)::JM,121097
121097 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 89::CD,121496
121099 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v27 || v33::DD,121100
121101 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::DD,121497
121100 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 181::CF,121497:CF,121101:CD,121108:CD,121112:CD,121129:CD,121140:CD,121148:CD,121152:CD,121157:CD,121162
121108 :: CALL :: call :: Ljava/lang/String :: v39 = v20.trim()::JM,121498
121112 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.put(v39, v35)::
121129 :: CALL :: call :: Ljava/lang/String :: v47 = format(#(New Site made: %s %s), v45)::
121140 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
121145 :: EXPR :: reference :: Ljava/util/Map :: v53 = p0 $this .siteMap::
121148 :: CALL :: call :: I :: v55 = v53.size()::
121152 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v50.append(v55)::
121157 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v57.append(#( sites))::
121162 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
121177 :: CALL :: call :: Ljava/lang/String :: v69 = format(#(SiteId: %s), v67)::
121186 :: CALL :: call :: Ljava/lang/String :: v73 = p1 $line .substring(#(18))::JM,121498
121194 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
121199 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v76)::JM,121398
121204 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::JM,121398
121209 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
121217 :: CALL :: call :: Ljava/lang/String :: v94 = v76.substring(#(0), #(3))::JM,121398
121223 :: CALL :: call :: Ljava/lang/Character :: v96 = get1LetterCode(v94)::JM,121227:CL,47169
121227 :: PRED :: IF :: Z :: if (v96 == #(null)) goto 289::CD,121228:JM,121398
121228 :: CALL :: call :: Ljava/lang/Character :: v99 = valueOf(#(88))::
121238 :: CALL :: call :: Ljava/lang/String :: v106 = v76.substring(#(4), #(5))::JM,121398
121244 :: CALL :: call :: Ljava/lang/String :: v109 = v76.substring(#(5), #(9))::JM,121398
121250 :: CALL :: call :: Ljava/lang/String :: v111 = v109.trim()::JM,121398
121254 :: CALL :: call :: Ljava/lang/Integer :: v113 = valueOf(v111)::
121258 :: CALL :: call :: Ljava/lang/String :: v115 = v76.substring(#(9), #(10))::JM,121398
121264 :: CALL :: call :: C :: v117 = v115.charAt(#(0))::JM,121398
121269 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(v117)::
121292 :: CALL :: call :: Ljava/lang/String :: v124 = format(#(Site: %s: 'resName:%s...), v122)::
121301 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v126 = new org.biojava.nbio.structure.ResidueNumber::
121307 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v129 = new java.lang.StringBuilder::
121312 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v129.append(v113)::
121317 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v119)::
121322 :: CALL :: call :: Ljava/lang/StringBuilder :: v137 = v135.append(#('))::
121327 :: CALL :: call :: Ljava/lang/String :: v139 = v137.toString()::
121335 :: CALL :: call :: V :: v126.setChainId(v106)::CL,63339
121339 :: CALL :: call :: V :: v126.setSeqNum(v113)::CL,88238
121343 :: CALL :: call :: V :: v126.setInsCode(v119)::CL,88249
121347 :: CALL :: call :: Z :: v145 = v64.add(v126)::
121354 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
121359 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v126)::
121364 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(#( to site ))::
121369 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(v20)::JM,121498
121374 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
121382 :: CALL :: call :: Ljava/lang/String :: v161 = v162.substring(#(11))::JM,121498
121387 :: CALL :: call :: Ljava/lang/String :: v76 = v162.substring(#(0), #(10))::JM,121398
121393 :: CALL :: call :: Z :: v79 = v76.equals(#(          ))::JM,121398
121398 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 216::CD,121194:CD,121199:CD,121204:CD,121209:CD,121217:CD,121223:CD,121227:CD,121238:CD,121244:CD,121250:CD,121254:CD,121258:CD,121264:CD,121269:CD,121292:CD,121301:CD,121307:CD,121312:CD,121317:CD,121322:CD,121327:CD,121335:CD,121339:CD,121343:CD,121347:CD,121354:CD,121359:CD,121364:CD,121369:CD,121374:CD,121382:CD,121387:CD,121393:CD,121498
121401 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
121406 :: EXPR :: reference :: Ljava/util/Map :: v168 = p0 $this .siteToResidueMap::
121409 :: CALL :: call :: Ljava/util/Set :: v170 = v168.keySet()::
121413 :: CALL :: call :: I :: v172 = v170.size()::
121417 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v165.append(v172)::
121422 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v174.append(#( sites):))::
121427 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
121435 :: EXPR :: reference :: Ljava/util/Map :: v181 = p0 $this .siteToResidueMap::JM,121493
121438 :: CALL :: call :: Ljava/util/Set :: v183 = v181.keySet()::JM,121493
121442 :: CALL :: call :: Ljava/util/Iterator :: v185 = v183.iterator()::JM,121493
121447 :: CALL :: call :: Ljava/lang/Object :: v189 = v185.next()::JM,121493
121455 :: CALL :: call :: Ljava/lang/String :: v194 = valueOf(v190)::
121454 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v192 = new java.lang.StringBuilder::
121463 :: CALL :: call :: Ljava/lang/StringBuilder :: v198 = v192.append(#( : ))::
121471 :: CALL :: call :: Ljava/lang/Object :: v201 = v199.get(v190)::
121476 :: CALL :: call :: Ljava/lang/StringBuilder :: v203 = v198.append(v201)::
121481 :: CALL :: call :: Ljava/lang/String :: v205 = v203.toString()::
121489 :: CALL :: call :: Z :: v187 = v185.hasNext()::JM,121493
121493 :: PRED :: IF :: Z :: if (v187 != #(0)) goto 568::CD,121447:CD,121454:CD,121455:CD,121463:CD,121471:CD,121476:CD,121481:CD,121489:JM,121493
121495 :: EXPR :: assign :: null :: PHI v27 = #(1), #(0)::DD,121099
121497 :: EXPR :: assign :: null :: PHI v64 = v24, v35::
121496 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::CF,121099
121498 :: EXPR :: assign :: null :: PHI v162 = v73, v161::JM,121498:JM,121398
121638 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SSBOND_Handler(java.lang.String)::CD,121646:CD,121650:JM,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121646 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,121650:CL,94376
121650 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,121652:CD,121656:JM,121712:JM,121744:JM,121750:JM,121738:JM,121756
121652 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121656 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,121664:CD,121670:CD,121676:CD,121680:CD,121686:CD,121692:CD,121698:CD,121702:CD,121708:CD,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121664 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(16))::JM,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121670 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(17), #(21))::JM,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121676 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,121712:JM,121744:JM,121750:JM,121738:JM,121756
121680 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(21), #(22))::JM,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121686 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(29), #(30))::JM,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121692 :: CALL :: call :: Ljava/lang/String :: v31 = p1 $line .substring(#(31), #(35))::JM,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121698 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::JM,121712:JM,121744:JM,121750:JM,121738:JM,121756
121702 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $line .substring(#(35), #(36))::JM,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121708 :: CALL :: call :: I :: v37 = p1 $line .length()::JM,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121713 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $line .substring(#(59), #(65))::JM,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121712 :: PRED :: IF :: Z :: if (v37 < #(72)) goto 231::CD,121713:CD,121719:CD,121723:CD,121729:CD,121733:CD,121738:CD,121814:CD,121818:CD,121822:CD,121826:CD,121830:CD,121834:CD,121838:CD,121845:JM,121712:JM,121744:JM,121750:JM,121656:JM,121756
121719 :: CALL :: call :: Ljava/lang/String :: v44 = v42.trim()::JM,121744:JM,121750:JM,121738:JM,121756
121723 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(66), #(72))::JM,121712:JM,121744:JM,121750:JM,121656:JM,121738:JM,121756
121729 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,121744:JM,121750:JM,121738:JM,121756
121733 :: CALL :: call :: Z :: v52 = v44.equals(#())::JM,121744:JM,121750:JM,121738:JM,121756
121739 :: CALL :: call :: Z :: v54 = v49.equals(#())::JM,121744:JM,121750:JM,121738:JM,121756
121738 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 231::CD,121739:CD,121744:CD,121814:CD,121818:CD,121822:CD,121826:CD,121830:CD,121834:CD,121838:CD,121845:JM,121750:JM,121738:JM,121756
121745 :: CALL :: call :: Z :: v57 = v44.equals(#(1555))::JM,121744:JM,121750:JM,121738:JM,121756
121744 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 231::CD,121745:CD,121750:CD,121814:CD,121818:CD,121822:CD,121826:CD,121830:CD,121834:CD,121838:CD,121845:JM,121744:JM,121738:JM,121756
121751 :: CALL :: call :: Z :: v59 = v49.equals(#(1555))::JM,121744:JM,121750:JM,121738:JM,121756
121750 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 175::CD,121751:CD,121756:CD,121759:CD,121760:CD,121768:CD,121773:CD,121777:CD,121778:CD,121786:CD,121791:JM,121744:JM,121750:JM,121738
121756 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 231::CD,121759:CD,121760:CD,121768:CD,121773:CD,121777:CD,121778:CD,121786:CD,121791:CD,121814:CD,121818:CD,121822:CD,121826:CD,121830:CD,121834:CD,121838:CD,121845
121759 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
121760 :: CALL :: call :: Ljava/lang/String :: v82 = valueOf(v20)::
121768 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v23)::JM,121712:JM,121744:JM,121750:JM,121738:JM,121756
121773 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::JM,121744:JM,121750:JM,121738:JM,121756
121777 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v88 = new java.lang.StringBuilder::
121778 :: CALL :: call :: Ljava/lang/String :: v90 = valueOf(v33)::
121786 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v88.append(v35)::JM,121712:JM,121744:JM,121750:JM,121738:JM,121756
121791 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::JM,121744:JM,121750:JM,121738:JM,121756
121814 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/SSBondImpl :: v67 = new org.biojava.nbio.structure.io.SSBondImpl::
121818 :: CALL :: call :: V :: v67.setChainID1(v14)::CL,131215
121822 :: CALL :: call :: V :: v67.setResnum1(v20)::CL,131226
121826 :: CALL :: call :: V :: v67.setChainID2(v27)::CL,131237
121830 :: CALL :: call :: V :: v67.setResnum2(v33)::CL,131248
121834 :: CALL :: call :: V :: v67.setInsCode1(v63)::CL,131259
121838 :: CALL :: call :: V :: v67.setInsCode2(v66)::CL,131270
121842 :: EXPR :: reference :: Ljava/util/List :: v75 = p0 $this .ssbonds::
121845 :: CALL :: call :: Z :: v77 = v75.add(v67)::
121938 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_LINK_Handler(java.lang.String)::CD,121946:CD,121950
121946 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,121950:CL,94376
121950 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 16::CD,121952:CD,121958:CD,121962:CD,121968:CD,121972:CD,121978:CD,121982:CD,121988:CD,121992:CD,121998:CD,122002:CD,122008:CD,122012:CD,122018:CD,122022:CD,122028:CD,122032:CD,122038:CD,122042:CD,122048:CD,122052:CD,122058:CD,122062:CD,122068:CD,122072:CD,122078:CD,122082:CD,122088:CD,122095:JM,131314:JM,131329:JM,131302:JM,131335:JM,131332:JM,131317:JM,131323:JM,131320:JM,131305:JM,131326:JM,131311:JM,131308:CD,122113
121952 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(12), #(16))::
121958 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::
121962 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(16), #(17))::
121968 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::
121972 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(17), #(20))::
121978 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::
121982 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(21), #(22))::
121988 :: CALL :: call :: Ljava/lang/String :: v29 = v27.trim()::
121992 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(22), #(26))::
121998 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
122002 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $line .substring(#(26), #(27))::
122008 :: CALL :: call :: Ljava/lang/String :: v39 = v37.trim()::
122012 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(42), #(46))::
122018 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
122022 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(46), #(47))::
122028 :: CALL :: call :: Ljava/lang/String :: v50 = v48.trim()::
122032 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $line .substring(#(47), #(50))::
122038 :: CALL :: call :: Ljava/lang/String :: v55 = v53.trim()::
122042 :: CALL :: call :: Ljava/lang/String :: v59 = p1 $line .substring(#(51), #(52))::
122048 :: CALL :: call :: Ljava/lang/String :: v61 = v59.trim()::
122052 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(52), #(56))::
122058 :: CALL :: call :: Ljava/lang/String :: v66 = v64.trim()::
122062 :: CALL :: call :: Ljava/lang/String :: v69 = p1 $line .substring(#(56), #(57))::
122068 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::
122072 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(59), #(65))::
122078 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::
122082 :: CALL :: call :: Ljava/lang/String :: v81 = p1 $line .substring(#(66), #(72))::
122088 :: CALL :: call :: Ljava/lang/String :: v83 = v81.trim()::
122092 :: EXPR :: reference :: Ljava/util/List :: v84 = p0 $this .linkRecords::
122095 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/util/PDBTemporaryStorageUtils$LinkRecord :: v85 = new org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils$LinkRecord::
122113 :: CALL :: call :: Z :: v88 = v84.add(v85)::
122195 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::JM,101835:JM,101916
122194 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::CE,122195:CD,122201
122198 :: EXPR :: reference :: Z :: v3 = p0 $this .parseSecStruc::DD,122201
122201 :: NORM :: compound :: Z :: return v3::CF,122195
122203 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HELIX_Handler(java.lang.String)::CD,122211:CD,122215:JM,122221
122211 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,122215:CL,94376
122215 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,122217:CD,122221
122217 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,122221
122221 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,122229:CD,122235:CD,122239:CD,122245:CD,122251:CD,122255:CD,122261:CD,122267:CD,122271:CD,122277:CD,122283:CD,122287:CD,122293:CD,122297:CD,122303:CD,122309:CD,122315:CD,122321:CD,122327:CD,122333:CD,122339:CD,122348:JM,122221
122229 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,122221
122235 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
122239 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,122221
122245 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(21), #(25))::JM,122221
122251 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::
122255 :: CALL :: call :: Ljava/lang/String :: v29 = p1 $line .substring(#(25), #(26))::JM,122221
122261 :: CALL :: call :: Ljava/lang/String :: v33 = p1 $line .substring(#(27), #(30))::JM,122221
122267 :: CALL :: call :: Ljava/lang/String :: v35 = v33.trim()::
122271 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(31), #(32))::JM,122221
122277 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(33), #(37))::JM,122221
122283 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
122287 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(37), #(38))::JM,122221
122293 :: NORM :: declaration :: Ljava/util/HashMap :: v48 = new java.util.HashMap::
122297 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.put(#(initResName), v16)::
122303 :: CALL :: call :: Ljava/lang/Object :: v55 = v48.put(#(initChainId), v20)::
122309 :: CALL :: call :: Ljava/lang/Object :: v58 = v48.put(#(initSeqNum), v26)::
122315 :: CALL :: call :: Ljava/lang/Object :: v61 = v48.put(#(initICode), v29)::
122321 :: CALL :: call :: Ljava/lang/Object :: v64 = v48.put(#(endResName), v35)::
122327 :: CALL :: call :: Ljava/lang/Object :: v67 = v48.put(#(endChainId), v39)::
122333 :: CALL :: call :: Ljava/lang/Object :: v70 = v48.put(#(endSeqNum), v45)::
122339 :: CALL :: call :: Ljava/lang/Object :: v73 = v48.put(#(endICode), v47)::
122345 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .helixList::
122348 :: CALL :: call :: Z :: v76 = v74.add(v48)::
122429 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SHEET_Handler(java.lang.String)::CD,122437:CD,122441:JM,122447
122437 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,122441:CL,94376
122441 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,122443:CD,122447
122443 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,122447
122447 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,122455:CD,122461:CD,122465:CD,122471:CD,122477:CD,122481:CD,122487:CD,122493:CD,122497:CD,122503:CD,122509:CD,122513:CD,122519:CD,122523:CD,122529:CD,122535:CD,122541:CD,122547:CD,122553:CD,122559:CD,122565:CD,122574:JM,122447
122455 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(17), #(20))::JM,122447
122461 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
122465 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(21), #(22))::JM,122447
122471 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(22), #(26))::JM,122447
122477 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
122481 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(26), #(27))::JM,122447
122487 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(28), #(31))::JM,122447
122493 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
122497 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(32), #(33))::JM,122447
122503 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(33), #(37))::JM,122447
122509 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
122513 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(37), #(38))::JM,122447
122519 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
122523 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
122529 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
122535 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
122541 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
122547 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
122553 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
122559 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
122565 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
122571 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .strandList::
122574 :: CALL :: call :: Z :: v74 = v72.add(v46)::
122655 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TURN_Handler(java.lang.String)::CD,122663:CD,122667:JM,122673
122663 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,122667:CL,94376
122667 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,122669:CD,122673
122669 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,122673
122673 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,122681:CD,122687:CD,122691:CD,122697:CD,122703:CD,122707:CD,122713:CD,122719:CD,122723:CD,122729:CD,122735:CD,122739:CD,122745:CD,122749:CD,122755:CD,122761:CD,122767:CD,122773:CD,122779:CD,122785:CD,122791:CD,122800:JM,122673
122681 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,122673
122687 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
122691 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,122673
122697 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(20), #(24))::JM,122673
122703 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
122707 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(24), #(25))::JM,122673
122713 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(26), #(29))::JM,122673
122719 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
122723 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(30), #(31))::JM,122673
122729 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(31), #(35))::JM,122673
122735 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
122739 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(35), #(36))::JM,122673
122745 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
122749 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
122755 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
122761 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
122767 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
122773 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
122779 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
122785 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
122791 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
122797 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .turnList::
122800 :: CALL :: call :: Z :: v74 = v72.add(v46)::
122881 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.makeCompounds(java.util.List,java.util.List)::CD,122887:CD,122915:CD,122919:CD,122923:CD,122927:CD,122948:CD,122976:CD,122980
122887 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $compoundList .iterator()::JM,122980:JM,122919
122892 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,122980:JM,122919
122911 :: CALL :: call :: V :: p0 $this .pdb_COMPND_Handler(v12)::CL,131374
122915 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,122980:JM,122919
122919 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,122892:CD,122911:CD,122915:JM,122980:JM,122919
122920 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .compounds::JM,122927
122923 :: CALL :: call :: I :: v22 = v20.size()::JM,122927
122927 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 88::JM,103281:JM,103274:CD,122939
122936 :: EXPR :: reference :: Ljava/util/List :: v23 = p0 $this .compounds::
122939 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.get(#(0))::
122948 :: CALL :: call :: Ljava/util/Iterator :: v30 = p2 $sourceList .iterator()::JM,122980:JM,122919
122953 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,122980:JM,122919
122972 :: CALL :: call :: V :: p0 $this .pdb_SOURCE_Handler(v35)::CL,131937
122976 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,122980:JM,122919
122980 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 116::CD,122953:CD,122972:CD,122976:JM,122980:JM,122919
123017 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.triggerEndFileChecks()::CD,123028:CD,123033:CD,123038:CD,123062:CD,123104:CD,123108:CD,123128:CD,123138:CD,123148:CD,123158:CD,123168:CD,123175:CD,123179:CD,123237:CD,123247:CD,123254:CD,123258:CD,123265:CD,123283:CD,123319:CD,123320:CD,123381
123028 :: NORM :: declaration :: Ljava/util/Date :: v6 = new java.util.Date::
123033 :: CALL :: call :: Z :: v10 = v5.equals(v6)::JM,123038
123038 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 48::CD,123046:CD,123051
123046 :: CALL :: call :: Z :: v16 = v14.equals(v5)::JM,123051
123051 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 48::CD,123055
123055 :: CALL :: call :: V :: v17.setDepDate(v14)::CL,115895
123059 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v19 = p0 $this .current_chain::DD,123062
123062 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 102::CD,123069:CD,123083:CD,123089
123069 :: CALL :: call :: V :: v21.addGroup(v22)::CL,63901
123083 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v29 = p0 $this .isKnownChain(v26, v27)::JM,123089:CL,129884
123089 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 102::CD,123096
123090 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .current_model::
123093 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v31 = p0 $this .current_chain::
123096 :: CALL :: call :: Z :: v33 = v30.add(v31)::
123101 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .journalLines::JM,123108
123104 :: CALL :: call :: Z :: v36 = v34.isEmpty()::JM,123108
123109 :: CALL :: call :: V :: p0 $this .buildjournalArticle()::CL,132603
123108 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 129::CD,123109:CD,123118
123118 :: CALL :: call :: V :: v38.setJournalArticle(v39)::CL,133567
123128 :: CALL :: call :: V :: v41.addModel(v42)::CL,63163
123138 :: CALL :: call :: V :: v44.setPDBHeader(v45)::CL,62887
123148 :: CALL :: call :: V :: v47.setCrystallographicInfo(v48)::CL,133578
123158 :: CALL :: call :: V :: v50.setConnections(v51)::CL,133593
123168 :: CALL :: call :: V :: v53.setDBRefs(v54)::CL,62928
123175 :: CALL :: call :: Z :: v58 = v56.isAlignSeqRes()::JM,123179:CL,95296
123179 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 247::CD,123183:CD,123187:CD,123229
123183 :: CALL :: call :: Z :: v61 = v59.isHeaderOnly()::JM,123187:CL,94376
123187 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 247::CD,123204:CD,123229
123204 :: CALL :: call :: V :: v74.align(v76, v77)::CL,133626
123229 :: CALL :: call :: V :: storeUnAlignedSeqRes(v65, v66, v69)::CL,95547
123237 :: CALL :: call :: V :: p0 $this .linkChains2Compound(v79)::CL,133682
123247 :: CALL :: call :: V :: v81.setCompounds(v82)::CL,63112
123254 :: CALL :: call :: Z :: v86 = v84.isHeaderOnly()::JM,123258:CL,94376
123259 :: CALL :: call :: V :: p0 $this .linkSitesToGroups()::CL,134119
123258 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 312::CD,123259
123262 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v88 = p0 $this .bioAssemblyParser::DD,123265
123265 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 333::CD,123276
123276 :: CALL :: call :: V :: v89.setBioAssemblies(v92)::CL,96692
123280 :: EXPR :: reference :: Ljava/util/List :: v94 = p0 $this .ncsOperators::DD,123283
123283 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 383::CD,123287:CD,123291
123284 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .ncsOperators::JM,123291
123287 :: CALL :: call :: I :: v97 = v95.size()::JM,123291
123291 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 383::CD,123301:CD,123305:CD,123306:CD,123312
123295 :: EXPR :: reference :: Ljava/util/List :: v99 = p0 $this .ncsOperators::
123298 :: EXPR :: reference :: Ljava/util/List :: v100 = p0 $this .ncsOperators::JM,123305
123301 :: CALL :: call :: I :: v102 = v100.size()::JM,123305
123305 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v103 = new javax.vecmath.Matrix4d[]::
123306 :: CALL :: call :: [Ljava/lang/Object :: v105 = v99.toArray(v103)::
123312 :: CALL :: call :: V :: v98.setNcsOperators(v106)::CL,114670
123316 :: EXPR :: reference :: F :: v108 = p0 $this .rfreeNoCutoffLine::DD,123319
123319 :: EXPR :: assign :: Z :: v110 = v108 < #(0.0 f)::DD,123320
123321 :: EXPR :: reference :: F :: v111 = p0 $this .rfreeStandardLine::DD,123324
123320 :: PRED :: IF :: Z :: if (v110 <= #(0)) goto 415::CD,123324:CD,123325:CD,123340:CD,123341
123325 :: PRED :: IF :: Z :: if (v112 >= #(0)) goto 415::CD,123332:CD,123340:CD,123341
123324 :: EXPR :: assign :: Z :: v112 = v111 > #(0.0 f)::DD,123325
123332 :: CALL :: call :: V :: v127.setRfree(v128)::CL,116857
123337 :: EXPR :: reference :: F :: v113 = p0 $this .rfreeNoCutoffLine::DD,123340
123341 :: PRED :: IF :: Z :: if (v114 <= #(0)) goto 447::CD,123345:CD,123346:CD,123361:CD,123362
123340 :: EXPR :: assign :: Z :: v114 = v113 < #(0.0 f)::DD,123341
123342 :: EXPR :: reference :: F :: v115 = p0 $this .rfreeStandardLine::DD,123345
123345 :: EXPR :: assign :: Z :: v116 = v115 < #(0.0 f)::DD,123346
123346 :: PRED :: IF :: Z :: if (v116 <= #(0)) goto 447::CD,123353:CD,123361:CD,123362
123353 :: CALL :: call :: V :: v124.setRfree(v125)::CL,116857
123358 :: EXPR :: reference :: F :: v117 = p0 $this .rfreeNoCutoffLine::DD,123361
123361 :: EXPR :: assign :: Z :: v118 = v117 > #(0.0 f)::DD,123362
123363 :: EXPR :: reference :: F :: v119 = p0 $this .rfreeStandardLine::DD,123366
123362 :: PRED :: IF :: Z :: if (v118 >= #(0)) goto 476::CD,123366:CD,123367
123367 :: PRED :: IF :: Z :: if (v120 <= #(0)) goto 476::CD,123374
123366 :: EXPR :: assign :: Z :: v120 = v119 < #(0.0 f)::DD,123367
123374 :: CALL :: call :: V :: v121.setRfree(v122)::CL,116857
123381 :: CALL :: call :: Ljava/util/List :: v132 = v130.getCompounds()::CL,63015
123484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.formBonds()::CD,123503:CD,123517:CD,123521:CD,123525:CD,123529
123500 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .linkRecords::JM,123521
123503 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,123521
123508 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,123521
123513 :: CALL :: call :: V :: v3.formLinkRecordBond(v15)::CL,134486
123517 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,123521
123521 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,123508:CD,123513:CD,123517:JM,123521
123525 :: CALL :: call :: V :: v3.formDisulfideBonds(v17)::CL,134642
123529 :: CALL :: call :: V :: v3.makeBonds()::CL,113081
123548 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addCharges()::CD,123555
123555 :: CALL :: call :: V :: addCharges(v3)::CL,113719
123560 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecStruc()::CD,123569:CD,123580:CD,123591:CD,123635:CD,123639
123569 :: CALL :: call :: V :: p0 $this .setSecElement(v3, #(PDB_AUTHOR_ASSIGNMENT), v5)::CL,134703
123580 :: CALL :: call :: V :: p0 $this .setSecElement(v7, #(PDB_AUTHOR_ASSIGNMENT), v8)::CL,134703
123591 :: CALL :: call :: V :: p0 $this .setSecElement(v10, #(PDB_AUTHOR_ASSIGNMENT), v11)::CL,134703
123606 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v20 = v13.next()::CL,135011
123610 :: CALL :: call :: Z :: v22 = v20.hasAminoAtoms()::JM,123614:CL,135038
123615 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.getProperty(#(secstruc))::JM,123620:CL,135082
123614 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 109::CD,123615:CD,123620
123620 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 109::JM,135111:JM,135108:CD,123630
123630 :: CALL :: call :: V :: v20.setProperty(#(secstruc), v27)::CL,135125
123635 :: CALL :: call :: Z :: v17 = v13.hasNext()::JM,123639:CL,135145
123639 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 58::CD,123606:CD,123610:CD,123614:CD,123635
123673 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.rebuildQuaternaryStructure(org.biojava.nbio.structure.Structure,java.util.List)::CE,123674:CD,123679:CD,123684:CD,123691:CD,123824:CD,123828:CD,123833:JM,123714:JM,123819:JM,123823:JM,123696:JM,123701:JM,123700:JM,123705:JM,123710
123674 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.rebuildQuaternaryStructure(org.biojava.nbio.structure.Structure,java.util.List)::JM,102337
123679 :: CALL :: call :: V :: p0 $this .orderTransformationsByChainId(p1 $asymUnit , p2 $transformations )::CL,135172
123684 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $asymUnit .clone()::JM,123714:JM,123684:JM,123691:JM,123819:JM,123823:JM,123696:JM,123824:JM,123701:JM,123700:JM,123828:JM,123833:JM,123705:JM,123710
123691 :: CALL :: call :: Ljava/util/Iterator :: v10 = p2 $transformations .iterator()::JM,123714:JM,123684:JM,123691:JM,123819:JM,123823:JM,123696:JM,123824:JM,123701:JM,123700:JM,123828:JM,123833:JM,123705:JM,123710
123696 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.next()::JM,123696:JM,123824:JM,123714:JM,123700:JM,123828:JM,123705:JM,123819:JM,123823:JM,123710
123701 :: CALL :: call :: Ljava/util/List :: v18 = p1 $asymUnit .getChains()::JM,123714:JM,123684:JM,123691:JM,123819:JM,123823:JM,123696:JM,123824:JM,123701:JM,123700:JM,123828:JM,123833:JM,123705:JM,123710
123700 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,123748:JM,123752:JM,123757:JM,123714:JM,123684:JM,123691:JM,123819:JM,123823:JM,123696:JM,123824:JM,123701:JM,123700:JM,123828:JM,123833:JM,123705:JM,123710
123705 :: CALL :: call :: Ljava/util/Iterator :: v20 = v18.iterator()::JM,123696:JM,123824:JM,123714:JM,123700:JM,123828:JM,123705:JM,123819:JM,123823:JM,123710
123710 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,123714:JM,123700:JM,123828:JM,123819:JM,123823:JM,123710
123715 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getInternalChainID()::JM,123715:JM,123719:JM,123834
123714 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,123715:JM,123719:JM,123834:JM,123727:JM,123744
123719 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 125::CF,123834:CD,123722:CD,123727:CD,123731:CD,123736:CD,123744
123722 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
123727 :: CALL :: call :: Ljava/lang/String :: v34 = v25.getChainID()::JM,123727
123731 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v30.append(v34)::
123736 :: CALL :: call :: Ljava/lang/String :: v38 = v36.toString()::
123744 :: CALL :: call :: Ljava/lang/String :: v41 = v25.getChainID()::JM,123744:JM,123834
123748 :: CALL :: call :: Ljava/lang/String :: v44 = v16.getChainId()::JM,123748:JM,123752:JM,123757
123752 :: CALL :: call :: Z :: v46 = v44.equals(v42)::JM,123752:JM,123757
123757 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 256::CD,123813:JM,123714:JM,123700:JM,123828:JM,123819:JM,123823:JM,123710
123813 :: CALL :: call :: V :: p0 $this .addChainAndModel(v7, v49, v72)::CL,135201
123819 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,123714:JM,123700:JM,123828:JM,123819:JM,123823:JM,123710
123823 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 60::CD,123710:CD,123714:CD,123715:CD,123719:CD,123748:CD,123752:CD,123757:CD,123819:CD,123834:JM,123700:JM,123828:JM,123823:JM,123696:JM,123824:JM,123705
123824 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,123696:JM,123824:JM,123714:JM,123700:JM,123828:JM,123705:JM,123819:JM,123823:JM,123710
123828 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 32::CD,123696:CD,123700:CD,123701:CD,123705:CD,123819:CD,123823:CD,123824:JM,123714:JM,123828:JM,123710
123833 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,123674
123834 :: EXPR :: assign :: null :: PHI v42 = v27, v41::JM,123748:JM,123752:JM,123757
123891 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.NucleotideImpl.getType()::JM,102407:JM,102414:JM,112885:JM,112890:JM,112912:JM,112917:JM,124064:JM,124059:JM,130035:JM,130040:JM,152214:JM,152219:JM,152226:JM,152231:JM,153953:JM,153948:JM,153960:JM,153965
123890 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getType()::CF,123891:CD,123894:CD,123896
123894 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.NucleotideImpl.type::CF,123896
123896 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,123891
123899 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.HetatomImpl.getType()::JM,102407:JM,102414:JM,112885:JM,112890:JM,112912:JM,112917:JM,124064:JM,124059:JM,130035:JM,130040:JM,152214:JM,152219:JM,152226:JM,152231:JM,153953:JM,153948:JM,153960:JM,153965
123898 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getType()::CF,123899:CD,123902:CD,123904
123902 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.HetatomImpl.type::CF,123904
123904 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,123899
123907 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.AminoAcidImpl.getType()::JM,102407:JM,102414:JM,112885:JM,112890:JM,112912:JM,112917:JM,124064:JM,124059:JM,130035:JM,130040:JM,152214:JM,152219:JM,152226:JM,152231:JM,153953:JM,153948:JM,153960:JM,153965
123906 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getType()::CF,123907:CD,123910:CD,123912
123910 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.AminoAcidImpl.type::CF,123912
123912 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,123907
123915 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.isWater()::JM,102488:JM,135374:JM,147302
123914 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.isWater()::CE,123915:CD,123918:CD,123923:CD,123928
123918 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.GroupType.WATERNAMES::JM,123928
123920 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .pdb_name::JM,123928
123923 :: CALL :: call :: Z :: v6 = v3.contains(v4)::JM,123928
123928 :: NORM :: compound :: Z :: return v6::CF,123915
123931 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.size()::CE,123932:CD,123938:CD,123942
123932 :: EXIT :: exit :: I :: org.biojava.nbio.structure.HetatomImpl.size()::JM,102494
123935 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::JM,123942
123938 :: CALL :: call :: I :: v5 = v3.size()::JM,123942
123942 :: NORM :: compound :: I :: return v5::CF,123932
123945 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::JM,102500:JM,138404:JM,138458
123944 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::CE,123945:CD,123949:JM,123957:JM,123967
123949 :: PRED :: IF :: Z :: if (p1 $position  < #(0)) goto 18::CD,123953:CD,123957:CD,123958
123950 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::JM,123957
123953 :: CALL :: call :: I :: v7 = v5.size()::JM,123957
123957 :: PRED :: IF :: Z :: if (p1 $position  < v7) goto 20::CD,123958:CD,123962:CD,123967:CD,123968
123959 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .atoms::JM,123967
123958 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,123945
123962 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $position )::JM,123967:JM,123949
123967 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,123968
123968 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v11::DD,123945
123977 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Element.isMetal()::JM,102510
123976 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.isMetal()::CE,123977:CD,123983:CD,123987
123983 :: CALL :: call :: Z :: v5 = v3.isMetal()::JM,123987:CL,135314
123987 :: NORM :: compound :: Z :: return v5::CF,123977
123989 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::CE,123990:CD,123996
123990 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::JM,102535:JM,102540
123993 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v3 = p0 $this .residueType::DD,123996
123996 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v3::CF,123990
123999 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::JM,154962:JM,154979:JM,154971:JM,154959
123998 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::CE,123999:CD,124005
124002 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v3 = p0 $this .polymerType::DD,124005
124005 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v3::CF,123999
124007 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::CE,124008:CD,124014
124008 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::JM,102662:JM,102574:JM,116545:JM,116551:JM,116665:JM,116539:JM,116556:JM,154950:JM,154956
124011 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .one_letter_code::DD,124014
124014 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,124008
124017 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::JM,103426:JM,103428
124016 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::CE,124017:CD,124020:CD,124024:CD,124026
124020 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v4 = getPredominantGroupType(p1 $c )::JM,124026:CL,135323
124024 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v5 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,124026
124027 :: NORM :: compound :: Z :: return #(1)::DD,124017
124026 :: PRED :: IF :: Z :: if (v4 != v5) goto 13::CD,124027:CD,124028
124028 :: NORM :: compound :: Z :: return #(0)::DD,124017
124033 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::CE,124034:CD,124038:CD,124045:CD,124070:CD,124074:CD,124075:JM,124064:JM,124059
124034 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::JM,103596:JM,135408:JM,135382:JM,135477:JM,135384:JM,135416:JM,135392:JM,135488:JM,135409:JM,135380:JM,135381:JM,142694:JM,142695:JM,142762:JM,147760
124038 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,124075
124042 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .groups::JM,124054:JM,124074
124045 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,124054:JM,124074
124050 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,124054:JM,124074
124055 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v16 = v14.getType()::JM,124064:JM,124059:CL,123906:CL,123890:CL,123898
124054 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::
124059 :: CALL :: call :: Z :: v18 = v16.equals(p1 $type )::JM,124064:JM,124059
124065 :: CALL :: call :: Z :: v20 = v4.add(v14)::
124064 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 56::CD,124065:JM,124054:JM,124074
124070 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,124054:JM,124074
124075 :: NORM :: compound :: Ljava/util/List :: return v4::DD,124034
124074 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,124050:CD,124054:CD,124055:CD,124059:CD,124064:CD,124070:JM,124074:CF,124075
124135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(java.lang.Object,java.lang.Object)::CD,124143
124143 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,135592
124153 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(java.lang.Object,java.lang.Object)::CD,124161
124161 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,135624
124171 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.toCanonical()::
124186 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.toCanonical()::CD,124194:JM,60806:JM,60812:JM,60815
124194 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
124222 :: EXPR :: reference :: I :: v6 = p1 $bs .length::DD,124225
124225 :: EXPR :: modify :: I :: p0 $this .length = v6::
124228 :: EXPR :: reference :: I :: v7 = p1 $bs .coreLength::DD,124231
124231 :: EXPR :: modify :: I :: p0 $this .coreLength = v7::
124234 :: EXPR :: modify :: Ljava/util/List :: p0 $this .pose = #(null)::
124237 :: EXPR :: reference :: Ljava/util/List :: v9 = p1 $bs .pose::DD,124240
124241 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::DD,124245
124240 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 107::CD,124241:CD,124251:CD,124274:CD,124278
124245 :: EXPR :: modify :: Ljava/util/List :: p0 $this .pose = v10::
124248 :: EXPR :: reference :: Ljava/util/List :: v12 = p1 $bs .pose::JM,124260:JM,124278
124251 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,124260:JM,124278
124256 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,124260:JM,124278
124261 :: CALL :: call :: Ljava/lang/Object :: v22 = v20.clone()::JM,124261:JM,124265
124260 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,124261:JM,124265
124265 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::
124266 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .pose::
124269 :: CALL :: call :: Z :: v26 = v24.add(v23)::
124274 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,124260:JM,124278
124279 :: EXPR :: modify :: Ljava/util/List :: p0 $this .blocks = #(null)::
124278 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 66::CD,124256:CD,124260:CD,124261:CD,124265:CD,124269:CD,124274:JM,124278
124282 :: EXPR :: reference :: Ljava/util/List :: v27 = p1 $bs .blocks::DD,124285
124285 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 188::CD,124286:CD,124296:CD,124322:CD,124326
124286 :: NORM :: declaration :: Ljava/util/ArrayList :: v28 = new java.util.ArrayList::DD,124290
124290 :: EXPR :: modify :: Ljava/util/List :: p0 $this .blocks = v28::
124293 :: EXPR :: reference :: Ljava/util/List :: v30 = p1 $bs .blocks::JM,124326
124296 :: CALL :: call :: Ljava/util/Iterator :: v32 = v30.iterator()::JM,124326
124301 :: CALL :: call :: Ljava/lang/Object :: v36 = v32.next()::JM,124326
124306 :: CALL :: call :: Lorg/biojava/nbio/structure/align/multiple/Block :: v39 = v37.clone()::CL,135656
124314 :: EXPR :: reference :: Ljava/util/List :: v41 = p0 $this .blocks::
124317 :: CALL :: call :: Z :: v43 = v41.add(v39)::
124322 :: CALL :: call :: Z :: v34 = v32.hasNext()::JM,124326
124326 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 142::CD,124301:CD,124306:CD,124317:CD,124322:JM,124326
124373 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.jama.Matrix.getArrayCopy()::
124372 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getArrayCopy()::CE,124373:CD,124382:CD,124413:CD,124414:CD,124417
124376 :: EXPR :: reference :: I :: v3 = p0 $this .m::DD,124382
124379 :: EXPR :: reference :: I :: v4 = p0 $this .n::DD,124382
124382 :: NORM :: declaration :: [[D :: v5 = new [][]::DD,124414
124385 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v5[v18]::
124389 :: EXPR :: reference :: [[D :: v10 = p0 $this .A::
124392 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v10[v18]::
124396 :: EXPR :: reference :: D :: v12 = v11[v15]::DD,124400
124400 :: EXPR :: modify :: D :: v9[v15] = v12::
124405 :: EXPR :: reference :: I :: v8 = p0 $this .n::DD,124408
124404 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,124416:CF,124415
124409 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,124417
124408 :: PRED :: IF :: Z :: if (v15 < v8) goto 25::CD,124404:CD,124415:CD,124416:CF,124409
124410 :: EXPR :: reference :: I :: v7 = p0 $this .m::DD,124413
124413 :: PRED :: IF :: Z :: if (v17 < v7) goto 20::CD,124408:CD,124409:CD,124415:CD,124416:CD,124417:CF,124414
124415 :: EXPR :: assign :: null :: PHI v18 = v17, v18::CF,124416:DD,124409:DD,124415
124414 :: NORM :: compound :: [[D :: return v5::DD,124373
124417 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,124413:DD,124415
124416 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,124404:DD,124408
124441 :: EXIT :: exit :: I :: org.biojava.nbio.structure.jama.Matrix.getRowDimension()::JM,104343
124440 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getRowDimension()::CE,124441:CD,124447
124444 :: EXPR :: reference :: I :: v3 = p0 $this .m::DD,124447
124447 :: NORM :: compound :: I :: return v3::CF,124441
124449 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getColumnDimension()::CE,124450:CD,124456
124450 :: EXIT :: exit :: I :: org.biojava.nbio.structure.jama.Matrix.getColumnDimension()::JM,104350
124453 :: EXPR :: reference :: I :: v3 = p0 $this .n::DD,124456
124456 :: NORM :: compound :: I :: return v3::CF,124450
124459 :: EXIT :: exit :: D :: org.biojava.nbio.structure.jama.Maths.hypot(double,double)::JM,104467:JM,104708:JM,105481:JM,105482:JM,105486:JM,105625:JM,105626:JM,105630:JM,105883:JM,105884:JM,105887:JM,106037:JM,106038:JM,106042
124458 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Maths.hypot(double,double)::JM,124499:JM,124484:JM,124486:JM,124473:JM,124489:JM,124488:JM,124474:CF,124459:CD,124463:CD,124467:CD,124471:CD,124472:CD,124501:CD,124502
124463 :: CALL :: call :: D :: v5 = abs(p1 $a )::JM,124467:JM,124499:JM,124484:JM,124471:JM,124486:JM,124473:JM,124489:JM,124488:JM,124474:JM,124463
124467 :: CALL :: call :: D :: v7 = abs(p2 $null )::JM,124467:JM,124499:JM,124484:JM,124471:JM,124486:JM,124473:JM,124489:JM,124488:JM,124474:JM,124463
124471 :: EXPR :: assign :: Z :: v8 = v5 < v7::DD,124472
124473 :: EXPR :: assign :: Ljava/lang/Object :: v21 = p2 $null  / p1 $a ::DD,124478:JM,124467:JM,124499:JM,124484:JM,124471:JM,124486:JM,124473:JM,124489:JM,124488:JM,124474:JM,124463
124472 :: PRED :: IF :: Z :: if (v8 <= #(0)) goto 39::CD,124473:CD,124474:CD,124478:CD,124479:CD,124480:CD,124484:CD,124486:CD,124487:CD,124502
124474 :: CALL :: call :: D :: v23 = abs(p1 $a )::JM,124467:JM,124499:JM,124484:JM,124471:JM,124486:JM,124473:JM,124489:JM,124488:JM,124474:JM,124463
124479 :: EXPR :: assign :: Ljava/lang/Object :: v25 = #(1.0 d) + v24::JM,124480:JM,124484
124478 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v21 * v21::CF,124479
124480 :: CALL :: call :: D :: v27 = sqrt(v25)::JM,124480:JM,124484
124484 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v23 * v27::DD,124502
124487 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 73::CD,124488:CD,124489:CD,124493:CD,124494:CD,124495:CD,124499:CD,124502
124486 :: EXPR :: assign :: Z :: v11 = p2 $null  < #(0.0 d)::DD,124487
124489 :: CALL :: call :: D :: v14 = abs(p2 $null )::JM,124467:JM,124499:JM,124484:JM,124471:JM,124489:JM,124474:JM,124463
124488 :: EXPR :: assign :: Ljava/lang/Object :: v12 = p1 $a  / p2 $null ::DD,124493:JM,124467:JM,124499:JM,124484:JM,124471:JM,124489:JM,124474:JM,124463
124493 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v12 * v12::CF,124494
124495 :: CALL :: call :: D :: v19 = sqrt(v17)::JM,124499:JM,124495
124494 :: EXPR :: assign :: Ljava/lang/Object :: v17 = #(1.0 d) + v16::JM,124499:JM,124495
124499 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 * v19::DD,124502
124501 :: NORM :: compound :: D :: return v29::CF,124459
124502 :: EXPR :: assign :: null :: PHI v29 = v28, v20, #(0.0 d)::CF,124501
124527 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.$SWITCH_TABLE$org$biojava$nbio$structure$GroupType()::CE,124528:CD,124530:CD,124532
124528 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.StructureTools.$SWITCH_TABLE$org$biojava$nbio$structure$GroupType()::
124530 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.StructureTools.$SWITCH_TABLE$org$biojava$nbio$structure$GroupType::DD,124532:DD,124533
124533 :: NORM :: compound :: [I :: return v2::DD,124528
124532 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,124533:CD,124534:CD,124537:CD,124538:CD,124539:CD,124541:CD,124550:CD,124552:CD,124561:CD,124563:CD,124574
124534 :: CALL :: call :: [Lorg/biojava/nbio/structure/GroupType :: v5 = values()::JM,124537:CL,135679
124537 :: EXPR :: assign :: I :: v6 = v5.length::CF,124538
124539 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v8 = org.biojava.nbio.structure.GroupType.AMINOACID::
124538 :: NORM :: declaration :: [I :: v7 = new []::DD,124574
124541 :: CALL :: call :: I :: v10 = v8.ordinal()::
124545 :: EXPR :: modify :: I :: v7[v10] = #(1)::
124550 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v14 = org.biojava.nbio.structure.GroupType.HETATM::
124552 :: CALL :: call :: I :: v16 = v14.ordinal()::
124556 :: EXPR :: modify :: I :: v7[v16] = #(3)::
124561 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v20 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::
124563 :: CALL :: call :: I :: v22 = v20.ordinal()::
124567 :: EXPR :: modify :: I :: v7[v22] = #(2)::
124574 :: NORM :: compound :: [I :: return v7::DD,124528
124843 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::CE,124844:CD,124850
124844 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::JM,109030
124847 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v3 = p0 $this .obsoleteBehavior::DD,124850
124850 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: return v3::CF,124844
124853 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::JM,109213
124852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::CF,124853:CD,124855:CD,124857:CD,124858:CD,124866
124855 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.ENUM$VALUES::DD,124857
124857 :: EXPR :: assign :: I :: v4 = v2.length::DD,124858
124858 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::DD,124866
124866 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: return v5::CF,124853
124879 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::CE,124880:CD,124890:CD,124894:JM,125145:JM,125048:JM,125036:JM,125004:JM,124926
124880 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::JM,109363:JM,109368
124890 :: CALL :: call :: Ljava/util/List :: v9 = getStatusIdRecords(v6)::JM,124899:JM,124894:CL,135991
124895 :: CALL :: call :: I :: v12 = v9.size()::JM,124899
124894 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 26::CD,124895:CD,124899:CD,124907
124899 :: PRED :: IF :: Z :: if (v12 == #(1)) goto 41::CD,124907:CD,124908:CD,124914:CD,124919:CD,124920:JM,124899
124907 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,124880
124908 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,124899
124914 :: CALL :: call :: Ljava/lang/Object :: v18 = v15.get(#(structureId))::JM,124919
124919 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,124920:JM,124926
124921 :: CALL :: call :: Z :: v21 = v19.equalsIgnoreCase(p1 $oldPdbId )::JM,124926:JM,125145:JM,125048:JM,125036:JM,125004
124920 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 79::CD,124921:CD,124926:CD,124934
124926 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,124934:CD,124935:CD,124940:CD,124941
124935 :: CALL :: call :: Ljava/lang/Object :: v24 = v15.get(#(status))::JM,124940
124934 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,124880
124941 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 126::CD,124949:CD,124950:CD,124954
124940 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,124941
124949 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,124880
124950 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v27 = fromString(v25)::JM,124954:CL,136361
124954 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 150::CF,124963:CD,124962:CD,124967:CD,124970:CD,124978
124963 :: NORM :: declaration :: Ljava/util/LinkedList :: v28 = new java.util.LinkedList::DD,124984:DD,125016:DD,125095:DD,125109:DD,125172
124962 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,124880
124967 :: CALL :: call :: [I :: v31 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,136580
124970 :: CALL :: call :: I :: v33 = v27.ordinal()::
124974 :: EXPR :: reference :: I :: v34 = v31[v33]::DD,124978
124979 :: CALL :: call :: Z :: v106 = v28.add(p1 $oldPdbId )::JM,125145:JM,125048:JM,125036:JM,125004:JM,124926
124978 :: PRED :: IF :: null :: switch v34::CD,124979:CD,124984:CD,124985:CD,124990:CD,124991:CD,125096:CD,125097:CD,125102:CD,125103
124985 :: CALL :: call :: Ljava/lang/Object :: v66 = v15.get(#(replacedBy))::JM,124990
124984 :: NORM :: compound :: Ljava/util/List :: return v28::DD,124880
124991 :: PRED :: IF :: Z :: if (v67 != #(null)) goto 248::CD,124999:CD,125000:CD,125004:CD,125010:CD,125015
124990 :: EXPR :: assign :: Ljava/lang/Object :: v67 = CHECKCAST v66::DD,124991
124999 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,124880
125000 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,125015
125005 :: CALL :: call :: Z :: v71 = v28.add(p1 $oldPdbId )::JM,125145:JM,125048:JM,125036:JM,125004:JM,124926
125004 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 268::CD,125005:JM,125015
125010 :: CALL :: call :: Z :: v73 = v69.equals(#(NONE))::JM,125015
125015 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 281::CD,125016:CD,125017:CD,125026:CD,125030:CD,125094:CD,125095:CD,125173
125017 :: CALL :: call :: [Ljava/lang/String :: v75 = v69.split(#( ))::JM,125030
125016 :: NORM :: compound :: Ljava/util/List :: return v28::DD,124880
125026 :: CALL :: call :: V :: sort(v75, v76)::
125030 :: EXPR :: assign :: I :: v79 = v75.length::DD,125094
125032 :: EXPR :: reference :: Ljava/lang/Object :: v80 = v75[v101]::DD,125050:DD,125081
125037 :: CALL :: call :: Ljava/util/List :: v82 = getReplacement(v80, p2 $recurse , p3 $includeObsolete )::CL,124879
125036 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 343::CD,125037:CD,125043:CD,125048
125043 :: CALL :: call :: V :: mergeReversed(v28, v82)::CL,136852
125049 :: NORM :: declaration :: [Ljava/lang/String :: v84 = new java.lang.String[]::JM,125054
125048 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 368::CD,125049:CD,125054:CD,125058:CD,125063:CD,125067:CD,125070:CD,125078
125050 :: EXPR :: modify :: Ljava/lang/Object :: v84[#(0)] = v80::
125054 :: CALL :: call :: Ljava/util/List :: v86 = asList(v84)::JM,125054
125058 :: CALL :: call :: V :: mergeReversed(v28, v86)::CL,136852
125063 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v89 = getStatus(v80)::CL,109599
125067 :: CALL :: call :: [I :: v91 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,136580
125070 :: CALL :: call :: I :: v93 = v89.ordinal()::
125074 :: EXPR :: reference :: I :: v94 = v91[v93]::DD,125078
125078 :: PRED :: IF :: null :: switch v94::CD,125080:CD,125085:CD,125089
125081 :: EXPR :: modify :: Ljava/lang/Object :: v95[#(0)] = v80::
125080 :: NORM :: declaration :: [Ljava/lang/String :: v95 = new java.lang.String[]::JM,125085
125085 :: CALL :: call :: Ljava/util/List :: v97 = asList(v95)::JM,125085
125089 :: CALL :: call :: V :: mergeReversed(v28, v97)::CL,136852
125093 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v101 + #(1)::DD,125173
125095 :: NORM :: compound :: Ljava/util/List :: return v28::DD,124880
125094 :: PRED :: IF :: Z :: if (v101 < v79) goto 316::CD,125036:CD,125093:CD,125173:CF,125095
125097 :: CALL :: call :: Ljava/lang/Object :: v37 = v15.get(#(replacedBy))::JM,125102
125096 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,124880
125103 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 470::CD,125104:CD,125109:CD,125110:CD,125114:CD,125119
125102 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,125103
125104 :: CALL :: call :: Z :: v64 = v28.add(p1 $oldPdbId )::JM,125145:JM,125048:JM,125036:JM,125004:JM,124926
125109 :: NORM :: compound :: Ljava/util/List :: return v28::DD,124880
125110 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toUpperCase()::JM,125119
125114 :: CALL :: call :: Z :: v43 = v40.equals(#(NONE))::JM,125119
125119 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 490::CD,125120:CD,125121:CD,125126:CD,125135:CD,125139:CD,125171:CD,125172:CD,125174
125121 :: CALL :: call :: Z :: v45 = v28.add(p1 $oldPdbId )::JM,125145:JM,125048:JM,125036:JM,125004:JM,124926
125120 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,124880
125126 :: CALL :: call :: [Ljava/lang/String :: v48 = v40.split(#( ))::JM,125139
125135 :: CALL :: call :: V :: sort(v48, v49)::
125139 :: EXPR :: assign :: I :: v52 = v48.length::DD,125171
125141 :: EXPR :: reference :: Ljava/lang/Object :: v53 = v48[v62]::DD,125158
125145 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 562::CD,125146:CD,125152:CD,125157:CD,125162:CD,125166
125146 :: CALL :: call :: Ljava/util/List :: v55 = getReplacement(v53, p2 $recurse , p3 $includeObsolete )::CL,124879
125152 :: CALL :: call :: V :: mergeReversed(v28, v55)::CL,136852
125157 :: NORM :: declaration :: [Ljava/lang/String :: v57 = new java.lang.String[]::JM,125162
125158 :: EXPR :: modify :: Ljava/lang/Object :: v57[#(0)] = v53::
125162 :: CALL :: call :: Ljava/util/List :: v59 = asList(v57)::JM,125162
125166 :: CALL :: call :: V :: mergeReversed(v28, v59)::CL,136852
125171 :: PRED :: IF :: Z :: if (v62 < v52) goto 533::CD,125145:CD,125170:CD,125174:CF,125172
125170 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v62 + #(1)::DD,125174
125173 :: EXPR :: assign :: null :: PHI v101 = #(0), v100::DD,125093:DD,125094
125172 :: NORM :: compound :: Ljava/util/List :: return v28::DD,124880
125174 :: EXPR :: assign :: null :: PHI v62 = #(0), v61::DD,125170:DD,125171
125337 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::
125336 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::CE,125337:CD,125342:CD,125382:CD,125386:CD,125403:CD,125404
125343 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $pdbId .substring(#(1), #(3))::JM,125342
125342 :: PRED :: IF :: Z :: if (p2 $obsolete  == #(0)) goto 37::CD,125343:CD,125349:CD,125353:CD,125363:CD,125369:CD,125373:CD,125404:JM,125342
125349 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toLowerCase()::
125353 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::DD,125404
125363 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .substring(#(1), #(3))::JM,125342
125369 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toLowerCase()::
125373 :: NORM :: declaration :: Ljava/io/File :: v13 = new java.io.File::DD,125404
125382 :: CALL :: call :: Z :: v26 = v23.exists()::JM,125386
125387 :: CALL :: call :: Z :: v28 = v23.mkdirs()::
125386 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,125387:CF,125403
125403 :: NORM :: compound :: Ljava/io/File :: return v23::DD,125337
125404 :: EXPR :: assign :: null :: PHI v23 = v20, v13::DD,125403
125435 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::
125434 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::CE,125435:CD,125439:CD,125440:CD,125444:CD,125452:CD,125457:CD,125461
125439 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,125461
125440 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $pdbId .toLowerCase()::
125444 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
125452 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v4.append(#(.cif.gz))::JM,125461
125457 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,125461
125461 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,125435
125465 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::CE,125466:CD,125470:CD,125475:CD,125479:CD,125484:CD,125489:CD,125493
125466 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::
125470 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,125493
125475 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $pdbId .toLowerCase()::JM,125493
125479 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(v8)::JM,125493
125484 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#(.ent.gz))::JM,125493
125489 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,125493
125493 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,125466
125499 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::JM,109473:JM,109464:JM,109469
125498 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::CE,125499:CD,125503:CD,125507:CD,125524:CD,125563:CD,125566:JM,125533
125503 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,125507:JM,125524:JM,125533:JM,125566
125507 :: CALL :: call :: Ljava/lang/String :: v9 = v6.getHeaderField(#(Last-Modified))::JM,125507:JM,125524:JM,125533:JM,125566
125525 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v15 = new java.text.SimpleDateFormat::JM,125533:JM,125566
125524 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 92::CF,125566:CF,125525:CD,125533
125533 :: CALL :: call :: Ljava/util/Date :: v20 = v15.parse(v9)::JM,125533:JM,125566
125563 :: NORM :: compound :: Ljava/util/Date :: return v34::CF,125499
125566 :: EXPR :: assign :: null :: PHI v34 = #(null), v20, #(null), #(null)::CF,125563
125583 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.downloadFile(java.net.URL,java.io.File)::CD,125592:CD,125597:CD,125601:CD,125606:CD,125610:CD,125619:CD,125689:CD,125693
125592 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
125597 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $destination )::CL,109744
125601 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
125606 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
125610 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
125619 :: CALL :: call :: Ljava/net/URLConnection :: v24 = prepareURLConnection(v22, #(60000))::CL,137093
125689 :: CALL :: call :: V :: copy(v19, p2 $destination )::CL,109797
125693 :: CALL :: call :: Z :: v63 = v19.delete()::
125751 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::CE,125752:CD,125755:CD,125756:CD,125757:CD,125761:JM,125874:JM,125766
125752 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::JM,109612
125755 :: EXPR :: assign :: I :: v3 = p1 $pdbIds .length::CF,125756
125757 :: CALL :: call :: Ljava/util/List :: v6 = getStatusIdRecords(p1 $pdbIds )::JM,125761:JM,125856:JM,125767:CL,135991
125756 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v4 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,125876
125761 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 26::CD,125762:CD,125766:CD,125767:CD,125770:CD,125779:JM,125856
125762 :: CALL :: call :: I :: v9 = v6.size()::JM,125856:JM,125767
125767 :: PRED :: IF :: Z :: if (v9 == v10) goto 44::CD,125770:CD,125779:CD,125874:CD,125875:CD,125876:CD,125880
125766 :: EXPR :: assign :: I :: v10 = p1 $pdbIds .length::CF,125767
125770 :: CALL :: call :: Ljava/lang/String :: v53 = toString(p1 $pdbIds )::
125779 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,125752
125781 :: CALL :: call :: Ljava/util/Iterator :: v14 = v6.iterator()::JM,125856:JM,125767
125786 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.next()::JM,125856
125791 :: CALL :: call :: Ljava/lang/Object :: v22 = v19.get(#(structureId))::JM,125796
125797 :: PRED :: IF :: Z :: if (v23 == #(null)) goto 186::CF,125878:CD,125802:CD,125807
125796 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,125797:JM,125807
125798 :: EXPR :: reference :: Ljava/lang/Object :: v24 = p1 $pdbIds [v49]::JM,125807
125802 :: CALL :: call :: Z :: v26 = v23.equalsIgnoreCase(v24)::JM,125807
125807 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 110::CD,125809:CD,125814:CD,125815:CD,125836:CD,125877:CD,125878:CD,125879
125809 :: CALL :: call :: Ljava/lang/Object :: v29 = v19.get(#(status))::JM,125814
125815 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 150::CD,125832:CD,125877
125814 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,125815
125827 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
125832 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v36 = fromString(v30)::JM,125877:CL,136361
125836 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 180::
125844 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
125848 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = v37::
125852 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,125856
125857 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 216::CF,125873
125856 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 63::CD,125786:CD,125791:CD,125796:CD,125797:CD,125852:CD,125878:CD,125879:JM,125856:CF,125857
125869 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
125873 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v49 + #(1)::DD,125880
125875 :: PRED :: IF :: Z :: if (v48 < v12) goto 51::CD,125781:CD,125852:CD,125856:CD,125857:CD,125873:CD,125874:CD,125878:CD,125879:CD,125880:JM,125767:CF,125876
125874 :: EXPR :: assign :: I :: v12 = p1 $pdbIds .length::CF,125875
125877 :: EXPR :: assign :: null :: PHI v37 = #(null), v36::DD,125836:DD,125848
125876 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v4::DD,125752
125879 :: EXPR :: assign :: null :: PHI v42 = #(0), v42, v42, #(1)::JM,125856:DD,125857:DD,125879
125878 :: EXPR :: assign :: null :: PHI v49 = v48, v49, v49, v49::CF,125879:DD,125873:DD,125878
125880 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,125875:DD,125878:CF,125874
126070 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setClassId(java.lang.Integer)::JM,126075
126075 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .classId = p1 $classId ::
126081 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setArchitectureId(java.lang.Integer)::JM,126086
126086 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .architectureId = p1 $architectureId ::
126092 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setTopologyId(java.lang.Integer)::JM,126097
126097 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .topologyId = p1 $topologyId ::
126103 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setHomologyId(java.lang.Integer)::JM,126108
126108 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .homologyId = p1 $homologyId ::
126115 :: EXIT :: exit :: Lorg/biojava/nbio/structure/cath/CathDomain :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::
126114 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::CE,126115:CD,126119:CD,126123:CD,126132:CD,126140:CD,126144:CD,126148:CD,126156:CD,126160:CD,126164:CD,126172:CD,126176:CD,126180:CD,126188:CD,126192:CD,126196:CD,126204:CD,126208:CD,126212:CD,126220:CD,126224:CD,126228:CD,126236:CD,126240:CD,126244:CD,126252:CD,126256:CD,126260:CD,126268:CD,126272:CD,126276:CD,126284:CD,126292:CD,126308:CD,126312
126119 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v4 = new org.biojava.nbio.structure.cath.CathDomain::DD,126312
126123 :: CALL :: call :: [Ljava/lang/String :: v8 = p1 $line .split(#(\s+))::
126132 :: CALL :: call :: V :: v4.setDomainName(v10)::CL,109954
126136 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v8[#(1)]::
126140 :: CALL :: call :: I :: v15 = parseInt(v13)::
126144 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::
126148 :: CALL :: call :: V :: v4.setClassId(v17)::CL,126070
126152 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v8[#(2)]::
126156 :: CALL :: call :: I :: v22 = parseInt(v20)::
126160 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::
126164 :: CALL :: call :: V :: v4.setArchitectureId(v24)::CL,126081
126168 :: EXPR :: reference :: Ljava/lang/Object :: v27 = v8[#(3)]::
126172 :: CALL :: call :: I :: v29 = parseInt(v27)::
126176 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
126180 :: CALL :: call :: V :: v4.setTopologyId(v31)::CL,126092
126184 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v8[#(4)]::
126188 :: CALL :: call :: I :: v36 = parseInt(v34)::
126192 :: CALL :: call :: Ljava/lang/Integer :: v38 = valueOf(v36)::
126196 :: CALL :: call :: V :: v4.setHomologyId(v38)::CL,126103
126200 :: EXPR :: reference :: Ljava/lang/Object :: v41 = v8[#(5)]::
126204 :: CALL :: call :: I :: v43 = parseInt(v41)::
126208 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v43)::
126212 :: CALL :: call :: V :: v4.setSequenceFamilyId(v45)::CL,137351
126216 :: EXPR :: reference :: Ljava/lang/Object :: v48 = v8[#(6)]::
126220 :: CALL :: call :: I :: v50 = parseInt(v48)::
126224 :: CALL :: call :: Ljava/lang/Integer :: v52 = valueOf(v50)::
126228 :: CALL :: call :: V :: v4.setOrthologousSequenceFamilyId(v52)::CL,137362
126232 :: EXPR :: reference :: Ljava/lang/Object :: v55 = v8[#(7)]::
126236 :: CALL :: call :: I :: v57 = parseInt(v55)::
126240 :: CALL :: call :: Ljava/lang/Integer :: v59 = valueOf(v57)::
126244 :: CALL :: call :: V :: v4.setLikeSequenceFamilyId(v59)::CL,137373
126248 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v8[#(8)]::
126252 :: CALL :: call :: I :: v64 = parseInt(v62)::
126256 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v64)::
126260 :: CALL :: call :: V :: v4.setIdenticalSequenceFamilyId(v66)::CL,137384
126264 :: EXPR :: reference :: Ljava/lang/Object :: v69 = v8[#(9)]::
126268 :: CALL :: call :: I :: v71 = parseInt(v69)::
126272 :: CALL :: call :: Ljava/lang/Integer :: v73 = valueOf(v71)::
126276 :: CALL :: call :: V :: v4.setDomainCounter(v73)::CL,137395
126280 :: EXPR :: reference :: Ljava/lang/Object :: v76 = v8[#(10)]::
126284 :: CALL :: call :: I :: v78 = parseInt(v76)::
126292 :: CALL :: call :: V :: v4.setLength(v80)::CL,110077
126308 :: CALL :: call :: V :: v4.setResolution(v87)::CL,137406
126312 :: NORM :: compound :: Lorg/biojava/nbio/structure/cath/CathDomain :: return v4::DD,126115
126355 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFile()::CD,126364
126364 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .getDomainFilename()::CL,126377
126377 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::CE,126378:CD,126389:CD,126394
126378 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::
126389 :: CALL :: call :: Ljava/lang/String :: v9 = format(#(ecod.%s.domains.txt), v5)::JM,126394
126394 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,126378
126419 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::JM,110841
126418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::CE,126419:CD,126425
126422 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .domains::DD,126425
126425 :: NORM :: compound :: Ljava/util/List :: return v3::CF,126419
126427 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getVersion()::CE,126428:CD,126434
126428 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getVersion()::JM,110848
126431 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .version::DD,126434
126434 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,126428
126444 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,137444
126448 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v6 = new java.util.concurrent.atomic.AtomicBoolean::JM,137506:JM,126659:JM,126597:JM,126596:JM,126628:JM,137509:JM,126633:JM,126632:JM,126664:JM,137512:JM,126605:JM,126641:JM,126675:JM,126610:JM,126615:JM,126614:JM,126646:JM,126651:JM,126650:JM,137503:JM,126623:DD,126452
126452 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCla = v6::
126455 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedCla::JM,126458
126458 :: CALL :: call :: V :: v8.set(#(0))::JM,126458
126462 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,137506:JM,126659:JM,126597:JM,126596:JM,126628:JM,137509:JM,126633:JM,126632:JM,126664:JM,137512:JM,126605:JM,126641:JM,126675:JM,126610:JM,126615:JM,126614:JM,126646:JM,126651:JM,126650:JM,137503:JM,126623:DD,126466
126466 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDes = v11::
126469 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedDes::JM,126472
126472 :: CALL :: call :: V :: v13.set(#(0))::JM,126472
126476 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,137506:JM,126659:JM,126597:JM,126596:JM,126628:JM,137509:JM,126633:JM,126632:JM,126664:JM,137512:JM,126605:JM,126641:JM,126675:JM,126610:JM,126615:JM,126614:JM,126646:JM,126651:JM,126650:JM,137503:JM,126623:DD,126480
126480 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedHie = v15::
126483 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v17 = p0 $this .installedHie::JM,126486
126486 :: CALL :: call :: V :: v17.set(#(0))::JM,126486
126490 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v19 = new java.util.concurrent.atomic.AtomicBoolean::JM,137506:JM,126659:JM,126597:JM,126596:JM,126628:JM,137509:JM,126633:JM,126632:JM,126664:JM,137512:JM,126605:JM,126641:JM,126675:JM,126610:JM,126615:JM,126614:JM,126646:JM,126651:JM,126650:JM,137503:JM,126623:DD,126494
126494 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCom = v19::
126497 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v21 = p0 $this .installedCom::JM,126500
126500 :: CALL :: call :: V :: v21.set(#(0))::JM,126500
126504 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .scopVersion = #(1.75)::
126507 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::JM,137506:JM,126659:JM,126597:JM,126596:JM,126628:JM,137509:JM,126633:JM,126632:JM,126664:JM,137512:JM,126605:JM,126641:JM,126675:JM,126610:JM,126615:JM,126614:JM,126646:JM,126651:JM,126650:JM,137503:JM,126623:DD,126512
126512 :: EXPR :: modify :: Ljava/util/List :: p0 $this .mirrors = v24::
126515 :: NORM :: declaration :: Ljava/util/HashMap :: v27 = new java.util.HashMap::JM,137506:JM,126659:JM,126597:JM,126596:JM,126628:JM,137509:JM,126633:JM,126632:JM,126664:JM,137512:JM,126605:JM,126641:JM,126675:JM,126610:JM,126615:JM,126614:JM,126646:JM,126651:JM,126650:JM,137503:JM,126623:DD,126519
126519 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v27::
126522 :: NORM :: declaration :: Ljava/util/HashMap :: v29 = new java.util.HashMap::JM,137506:JM,126659:JM,126597:JM,126596:JM,126628:JM,137509:JM,126633:JM,126632:JM,126664:JM,137512:JM,126605:JM,126641:JM,126675:JM,126610:JM,126615:JM,126614:JM,126646:JM,126651:JM,126650:JM,137503:JM,126623:DD,126526
126526 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .sunidMap = v29::
126529 :: NORM :: declaration :: Ljava/util/TreeMap :: v31 = new java.util.TreeMap::JM,137506:JM,126659:JM,126597:JM,126596:JM,126628:JM,137509:JM,126633:JM,126632:JM,126664:JM,137512:JM,126605:JM,126641:JM,126675:JM,126610:JM,126615:JM,126614:JM,126646:JM,126651:JM,126650:JM,137503:JM,126623:DD,126533
126533 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .scopTree = v31::
126597 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $url )::
126596 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,137506:JM,126675:JM,126596:JM,137509:JM,137512:JM,137503
126605 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(p2 $claURL )::JM,137506:JM,126596:JM,137509:JM,137512:JM,137503
126610 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
126615 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(p1 $url )::
126614 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::JM,137506:JM,126675:JM,126596:JM,137509:JM,137512:JM,137503
126623 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(p3 $desURL )::JM,137506:JM,126596:JM,137509:JM,137512:JM,137503
126628 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
126633 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(p1 $url )::
126632 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,137506:JM,126675:JM,126596:JM,137509:JM,137512:JM,137503
126641 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v24.append(p4 $hieURL )::JM,137506:JM,126596:JM,137509:JM,137512:JM,137503
126646 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
126651 :: CALL :: call :: Ljava/lang/String :: v34 = valueOf(p1 $url )::
126650 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::JM,137506:JM,126675:JM,126596:JM,137509:JM,137512:JM,137503
126659 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v32.append(p5 $comURL )::JM,137506:JM,126596:JM,137509:JM,137512:JM,137503
126664 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
126675 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .rootURL = p1 $url ::
126695 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::
126694 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::CE,126695:CD,126700:CD,126702:CD,126706:CD,126741:CD,126745:CD,126746:CD,126755:CD,126759:CD,126822:JM,126819:JM,126789
126700 :: EXPR :: reference :: Ljava/util/Map :: v5 = org.biojava.nbio.structure.scop.BerkeleyScopInstallation.EQUIVALENT_VERSIONS::JM,126745:JM,126715
126702 :: CALL :: call :: Ljava/util/Set :: v7 = v5.entrySet()::JM,126745:JM,126715
126706 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,126745:JM,126715
126711 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,126745:JM,126715
126715 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,126720:JM,126737
126716 :: CALL :: call :: Ljava/lang/Object :: v17 = v15.getValue()::JM,126720
126721 :: EXPR :: assign :: I :: v19 = v18.length::DD,126740
126720 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,126721
126723 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v18[v25]::JM,126732
126727 :: CALL :: call :: Z :: v22 = v30.equals(v20)::JM,126732
126733 :: CALL :: call :: Ljava/lang/Object :: v27 = v15.getKey()::JM,126737
126732 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 79::CD,126733:CD,126737:CD,126739:CD,126740:CD,126820:CD,126821:CD,126822
126737 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::DD,126822
126739 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,126821:CF,126820
126741 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,126745:JM,126715
126740 :: PRED :: IF :: Z :: if (v25 < v19) goto 54::CF,126822:CD,126727:CD,126732
126745 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 20::CD,126711:CD,126715:CD,126716:CD,126720:CD,126721:CD,126740:CD,126741:CD,126820:CD,126821:CD,126822:JM,126745
126746 :: CALL :: call :: [Ljava/lang/String :: v33 = v29.split(#(\.))::
126751 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v33[#(0)]::JM,126759
126755 :: CALL :: call :: I :: v36 = parseInt(v34)::JM,126759
126759 :: PRED :: IF :: Z :: if (v36 != #(1)) goto 147::CF,126790:CF,126760:CD,126765:CD,126770:CD,126775:CD,126780:CD,126785:CD,126789:CD,126795:CD,126800:CD,126805:CD,126810:CD,126815:CD,126819
126760 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::JM,126789
126765 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(p1 $fileType )::JM,126789:JM,126819:JM,126822
126770 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(.scop.))::JM,126819:JM,126789
126775 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v58.append(v29)::JM,126819:JM,126789
126780 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(.txt))::JM,126819:JM,126789
126785 :: CALL :: call :: Ljava/lang/String :: v65 = v63.toString()::JM,126819:JM,126789
126789 :: NORM :: compound :: Ljava/lang/String :: return v65::DD,126695
126790 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::JM,126819
126795 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v37.append(p1 $fileType )::JM,126819:JM,126789:JM,126822
126800 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v41.append(#(.scope.))::JM,126819:JM,126789
126805 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v29)::JM,126819:JM,126789
126810 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#(-stable.txt))::JM,126819:JM,126789
126815 :: CALL :: call :: Ljava/lang/String :: v51 = v49.toString()::JM,126819:JM,126789
126819 :: NORM :: compound :: Ljava/lang/String :: return v51::DD,126695
126821 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,126739:DD,126740
126820 :: EXPR :: assign :: null :: PHI v30 = v29, v30::CF,126821:JM,126732:DD,126820:DD,126822
126822 :: EXPR :: assign :: null :: PHI v29 = p2 $version , v28, v30::JM,126745:JM,126715:JM,126819:JM,126789:DD,126820
126864 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.extractRanges(java.lang.String)::CD,126869:CD,126877:CD,126882:CD,126921
126869 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $range .split(#(,))::JM,126919:JM,126921
126874 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .scopVersion::JM,126882
126877 :: CALL :: call :: I :: v10 = v7.compareTo(#(1.73))::JM,126882
126882 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 89::CD,126919:CD,126920:CD,126926:JM,126921
126884 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v6[v29]::JM,126892:JM,126899:JM,126914
126888 :: CALL :: call :: I :: v15 = v13.length()::JM,126892
126892 :: PRED :: IF :: Z :: if (v15 >= #(2)) goto 48::CD,126894:CD,126899
126894 :: CALL :: call :: C :: v19 = v13.charAt(#(1))::JM,126899
126899 :: PRED :: IF :: Z :: if (v19 == #(58)) goto 78::CD,126900:CD,126905:CD,126910:CF,126918
126900 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::JM,126914
126905 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v13)::JM,126914
126910 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,126914
126914 :: EXPR :: modify :: Ljava/lang/Object :: v6[v29] = v27::
126919 :: EXPR :: assign :: I :: v12 = v6.length::CF,126920
126918 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,126926
126921 :: CALL :: call :: Ljava/util/List :: v31 = asList(v6)::JM,126921
126920 :: PRED :: IF :: Z :: if (v29 < v12) goto 30::CD,126888:CD,126892:CD,126918:CD,126919:CD,126926:JM,126921
126926 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,126918:DD,126920:CF,126919
127989 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setAtcc(java.lang.String)::JM,127994
127994 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = p1 $atcc ::
128000 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCell(java.lang.String)::JM,128005
128005 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = p1 $cell ::
128011 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismCommon(java.lang.String)::JM,128016
128016 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = p1 $organismCommon ::
128022 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismScientific(java.lang.String)::JM,128027
128027 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = p1 $organismScientific ::
128033 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismTaxId(java.lang.String)::JM,128038
128038 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = p1 $organismTaxId ::
128044 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTaxId(java.lang.String)::JM,128049
128049 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = p1 $expressionSystemTaxId ::
128055 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystem(java.lang.String)::JM,128060
128060 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = p1 $expressionSystem ::
128067 :: EXIT :: exit :: J :: org.biojava.nbio.structure.HetatomImpl.getId()::JM,112892:JM,112919:JM,112934
128066 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getId()::CE,128067:CD,128073
128070 :: EXPR :: reference :: J :: v3 = p0 $this .id::DD,128073
128073 :: NORM :: compound :: J :: return v3::CF,128067
128075 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formPeptideBonds()::CD,128082:CD,128086:CD,128173:CD,128177
128082 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,128177:CL,45114
128086 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,128177
128091 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,128177
128096 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,128114:JM,128171:JM,128106:CL,63834
128101 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,128114:JM,128171:JM,128106
128107 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,128108:CD,128109:CD,128114:CD,128115:CF,128166
128106 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,128107
128109 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,128114:JM,128171:JM,128106
128108 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,128114:JM,128171:JM,128106
128115 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,128117:CD,128123:CD,128124:CD,128130:CD,128134:JM,128114:JM,128171:JM,128106
128114 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,128115
128117 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,128114:JM,128171:JM,128106
128123 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,128114:JM,128171:JM,128106
128124 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,128114:JM,128171:JM,128106
128130 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,128134:CL,74679
128135 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,128139:CL,74679
128134 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,128135:CD,128139:CF,128166
128139 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,128141:CD,128145:CD,128149
128141 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v29.getC()::JM,128149:CL,138328
128145 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v33.getN()::JM,128150:CL,138340
128149 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,128150:CF,128166
128150 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,128152:CD,128157:CD,128158
128152 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,128157:CL,77356
128157 :: EXPR :: assign :: Z :: v46 = v44 > #(1.8 d)::DD,128158
128158 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,138530:JM,138521:JM,138527:JM,138524:CF,128166
128167 :: CALL :: call :: I :: v17 = v15.size()::JM,128114:JM,128171:JM,128106
128166 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,128179
128171 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,128172
128173 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,128177
128172 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,128101:CD,128106:CD,128107:CD,128166:CD,128167:CD,128171:CD,128179:JM,128114:JM,128177
128177 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,128091:CD,128096:CD,128167:CD,128171:CD,128172:CD,128173:CD,128179:JM,128177
128179 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,128114:JM,128171:JM,128106:DD,128108:DD,128123:DD,128166:DD,128172
128228 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formNucleotideBonds()::CD,128235:CD,128239:CD,128326:CD,128330
128235 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,128330:CL,45114
128239 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,128330
128244 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,128330
128249 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,128259:JM,128324:JM,128267:CL,63834
128254 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,128259:JM,128324:JM,128267
128259 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,128260
128261 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,128259:JM,128324:JM,128267
128260 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,128261:CD,128262:CD,128267:CD,128268:CF,128319
128262 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,128259:JM,128324:JM,128267
128267 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,128268
128268 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,128270:CD,128276:CD,128277:CD,128283:CD,128287:JM,128259:JM,128324:JM,128267
128270 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,128259:JM,128324:JM,128267
128277 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,128259:JM,128324:JM,128267
128276 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,128259:JM,128324:JM,128267
128283 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,128287:CL,74679
128287 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,128288:CD,128292:CF,128319
128288 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,128292:CL,74679
128292 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,128294:CD,128298:CD,128302
128294 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v33.getP()::JM,128302:CL,138352
128298 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v29.getO3Prime()::JM,128303:CL,138364
128303 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,128305:CD,128310:CD,128311
128302 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,128303:CF,128319
128305 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,128310:CL,77356
128311 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,138530:JM,138521:JM,138527:JM,138524:CF,128319
128310 :: EXPR :: assign :: Z :: v46 = v44 > #(2.1 d)::DD,128311
128319 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,128332
128320 :: CALL :: call :: I :: v17 = v15.size()::JM,128259:JM,128324:JM,128267
128325 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,128254:CD,128259:CD,128260:CD,128319:CD,128320:CD,128324:CD,128332:JM,128267:JM,128330
128324 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,128325
128326 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,128330
128330 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,128244:CD,128249:CD,128320:CD,128324:CD,128325:CD,128326:CD,128332:JM,128330
128332 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,128259:JM,128324:JM,128267:DD,128261:DD,128276:DD,128319:DD,128325
128381 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formIntraResidueBonds()::CD,128388:CD,128392:CD,128533:CD,128537
128388 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,128537:CL,45114
128392 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,128537
128397 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,128537
128402 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,128532:JM,128415:CL,45126
128406 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,128532:JM,128415
128411 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,128532:JM,128415
128415 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::
128416 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v24 = v22.getResidueNumber()::JM,128420:CL,74679
128420 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 71::CF,128422:CD,128426:CD,128431:CD,128435:CD,128450:CD,128454:CD,128455:CD,128523:CD,128527
128422 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::JM,128527
128426 :: CALL :: call :: Z :: v29 = v26.add(v22)::
128431 :: CALL :: call :: Ljava/util/List :: v31 = v22.getAltLocs()::JM,128454:JM,128444:CL,74718
128435 :: CALL :: call :: Ljava/util/Iterator :: v33 = v31.iterator()::JM,128454:JM,128444
128440 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,128454:JM,128444
128445 :: CALL :: call :: Z :: v40 = v26.add(v38)::
128444 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::
128450 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,128454:JM,128444
128455 :: CALL :: call :: Ljava/util/Iterator :: v42 = v26.iterator()::JM,128527
128454 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 109::CD,128440:CD,128444:CD,128445:CD,128450:JM,128454:JM,128527
128460 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,128527
128469 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = getChemComp(v49)::CL,128882
128473 :: CALL :: call :: Ljava/util/List :: v53 = v51.getBonds()::JM,128522:CL,138376
128477 :: CALL :: call :: Ljava/util/Iterator :: v55 = v53.iterator()::JM,128522
128482 :: CALL :: call :: Ljava/lang/Object :: v59 = v55.next()::JM,128522
128491 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v64 = v47.getAtom(v62)::JM,128505:CL,45210
128500 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v68 = v47.getAtom(v66)::JM,128506:CL,45210
128505 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 261::CD,128506:JM,128522
128506 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 261::JM,138530:JM,138521:JM,138527:JM,138524:JM,128522
128518 :: CALL :: call :: Z :: v57 = v55.hasNext()::JM,128522
128523 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,128527
128522 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 192::CD,128482:CD,128491:CD,128500:CD,128505:CD,128518:JM,128522:JM,128527
128527 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 153::CD,128460:CD,128469:CD,128473:CD,128477:CD,128518:CD,128522:CD,128523:JM,128527:JM,128532:JM,128415
128528 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,128532:JM,128415
128533 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,128537
128532 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 48::CD,128411:CD,128415:CD,128416:CD,128420:CD,128528:JM,128532:JM,128537
128537 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,128397:CD,128402:CD,128406:CD,128528:CD,128532:CD,128533:JM,128537
128598 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.trimBondLists()::CD,128605:CD,128609:CD,128679:CD,128683
128605 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,128683:CL,45114
128609 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,128683
128614 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,128683
128619 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,128678:CL,45126
128623 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,128678
128628 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,128678
128633 :: CALL :: call :: Ljava/util/List :: v24 = v22.getAtoms()::JM,128673:CL,129450
128637 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,128673
128642 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.next()::JM,128673
128647 :: CALL :: call :: Ljava/util/List :: v33 = v31.getBonds()::JM,128651:CL,138385
128651 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 123::CD,128652:CD,128656:CD,128660:JM,128673
128652 :: CALL :: call :: Ljava/util/List :: v36 = v31.getBonds()::JM,128660:CL,138385
128656 :: CALL :: call :: I :: v38 = v36.size()::JM,128660
128661 :: CALL :: call :: Ljava/util/List :: v40 = v31.getBonds()::JM,128665:CL,138385
128660 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 123::CD,128661:CD,128665:CD,128666:JM,128673
128665 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
128666 :: CALL :: call :: V :: v41.trimToSize()::
128669 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,128673
128673 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 73::CD,128642:CD,128647:CD,128651:CD,128669:JM,128673:JM,128678
128674 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,128678
128679 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,128683
128678 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 46::CD,128628:CD,128633:CD,128637:CD,128669:CD,128673:CD,128674:JM,128678:JM,128683
128683 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,128614:CD,128619:CD,128623:CD,128674:CD,128678:CD,128679:JM,128683
128709 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::JM,113430:JM,113464
128708 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::CE,128709:CD,128718:CD,128727:CD,128733:CD,128737:CD,128741:CD,128746:JM,112419:JM,112422:JM,112425:CD,128756:CD,128761:CD,128765:CD,128782:CD,128787:CD,128792:CD,128797:CD,128802:CD,128807:CD,128812:CD,128817:CD,128826:CD,128831:CD,128832:JM,128723:JM,128719
128719 :: CALL :: call :: Z :: v11 = p6 $iCode .isEmpty()::JM,128832:JM,128723:JM,128719:JM,128718
128718 :: PRED :: IF :: Z :: if (p6 $iCode  == #(null)) goto 19::CD,128719:CD,128723:CD,128832:JM,128718
128723 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 19::CF,128832
128727 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v17 = v15.getChainByPDB(p4 $chainID )::CL,97216
128733 :: CALL :: call :: I :: v20 = parseInt(p5 $resSeq )::JM,128832:JM,128723:JM,128719:JM,128718
128737 :: CALL :: call :: Ljava/lang/Integer :: v22 = valueOf(v20)::JM,128723
128741 :: CALL :: call :: C :: v24 = v14.charAt(#(0))::
128746 :: CALL :: call :: Ljava/lang/Character :: v26 = valueOf(v24)::
128756 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = v17.getGroupByPDB(v18)::CL,76387
128761 :: CALL :: call :: Z :: v31 = p2 $altLoc .isEmpty()::JM,128761:JM,128765
128765 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 158::CD,128766:CD,128775:JM,128761:JM,128765
128766 :: CALL :: call :: C :: v33 = p2 $altLoc .charAt(#(0))::JM,128761:JM,128765
128775 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v37 = v29.getAltLocGroup(v35)::CL,138394
128782 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
128787 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p2 $altLoc )::JM,128761:JM,128765
128792 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in group ))::
128797 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v49.append(p5 $resSeq )::JM,128832:JM,128723:JM,128719:JM,128718
128802 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(v14)::JM,128723
128807 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v53.append(#( of chain ))::
128812 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p4 $chainID )::JM,128832:JM,128723:JM,128719:JM,128718
128817 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::JM,128723
128826 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v38.getAtom(p1 $name )::JM,128831:CL,45210
128831 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v40::DD,128709
128832 :: EXPR :: assign :: null :: PHI v14 = p6 $iCode , #( )::
128883 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::JM,116517:JM,116749
128882 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::CE,128883:CD,128886:CD,128890:CD,128894:CD,128896:CD,128901:CD,128902
128886 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::JM,128896:JM,128901
128890 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::JM,128896:JM,128901
128894 :: EXPR :: reference :: Lorg/biojava/nbio/core/util/SoftHashMap :: v7 = org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.cache::JM,128896:JM,128901
128896 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,128896:JM,128901
128901 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,128902:JM,128910:DD,128932
128902 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 57::CD,128905:CD,128910:CD,128914:CD,128919:CD,128924:CD,128932:CD,128935:CD,128940:CD,128945:CD,128956:CD,128960:CD,128965:CD,128975:CD,128988
128905 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
128910 :: CALL :: call :: Ljava/lang/String :: v41 = v10.getThree_letter_code()::JM,128910
128914 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v38.append(v41)::
128919 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#( read from cache))::
128924 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
128932 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v10::DD,128883
128935 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
128940 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(v6)::JM,128896:JM,128901
128945 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( read from provider ))::
128956 :: CALL :: call :: Ljava/lang/String :: v25 = v23.getCanonicalName()::
128960 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::
128965 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
128975 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v33 = v31.getChemComp(v6)::JM,128988:CL,138660
128988 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v33::DD,128883
129013 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::CE,129014:CD,129020
129014 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::JM,113945:JM,113774
129017 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,129020
129020 :: NORM :: compound :: Ljava/util/List :: return v3::CF,129014
129023 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::JM,155272:JM,155298
129022 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::CE,129023:CD,129029
129026 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,129029
129029 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,129023
129054 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.parseOperatorExpressionString(java.lang.String)::CD,129069:CD,129073
129069 :: CALL :: call :: Z :: v11 = isUnaryExpression(v9)::JM,129073:CL,138878
129073 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 34::CD,129074:CD,129082
129074 :: CALL :: call :: Ljava/util/List :: v16 = parseUnaryOperatorExpression(v9)::CL,138917
129082 :: CALL :: call :: Ljava/util/List :: v14 = parseBinaryOperatorExpression(v9)::CL,138927
129103 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::JM,114407
129102 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::CE,129103:CD,129109
129106 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .unaryOperators::DD,129109
129109 :: NORM :: compound :: Ljava/util/List :: return v3::CF,129103
129111 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getModelTransformationMatrix(java.lang.String)::CD,129119:CD,129140:CD,129144:JM,129138
129116 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .modelTransformations::JM,129144
129119 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,129144
129124 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,129144
129129 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,129138:CL,139025
129133 :: CALL :: call :: Z :: v16 = v14.equals(p1 $operator )::JM,129138
129138 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,129140:CD,129144
129140 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,129144
129144 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,129124:CD,129129:CD,129133:CD,129138:CD,129147:CD,129152:CD,129157:JM,114159:JM,129144
129147 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
129152 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $operator )::JM,129138
129157 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
129193 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v5 = new javax.vecmath.Matrix4d::DD,129201
129201 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v5::
129204 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $src .getId()::JM,129208:CL,139025
129208 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = v9::
129211 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $src .getChainId()::JM,129215:CL,139034
129215 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v11::
129227 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setChainId(java.lang.String)::JM,129232
129232 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
129239 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::JM,114593
129238 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::CE,129239:CD,129245
129242 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .binaryOperators::DD,129245
129245 :: NORM :: compound :: Ljava/util/List :: return v3::CF,129239
129265 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,129266:CD,129285:JM,114159:CD,129289:CD,129293
129266 :: EXIT :: exit :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::
129285 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v9 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::DD,129293
129289 :: CALL :: call :: V :: v9.setTransformationMatrix(v4)::CL,139043
129293 :: NORM :: compound :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: return v9::DD,129266
129304 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMTranspose()::CD,129311
129308 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Mtransp::DD,129311
129311 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,129316:CD,129320
129316 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v6 = p0 $this .getM()::CL,139054
129320 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v7 = new javax.vecmath.Matrix3d::DD,129324
129324 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Mtransp = v7::
129413 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::JM,115136
129412 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::CE,129413:CD,129419
129416 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,129419
129419 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,129420:CD,129424:CD,129428:CD,129430:CD,129431
129421 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::JM,129428
129420 :: NORM :: compound :: Z :: return #(0)::CF,129413
129424 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,129428
129428 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 26::CD,129431
129431 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,129430
129430 :: NORM :: compound :: Z :: return v10::CF,129413
129439 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setId(long)::JM,129444
129444 :: EXPR :: modify :: J :: p0 $this .id = p1 $id ::
129451 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::JM,115443:JM,115489:JM,115515:JM,115545:JM,128673:JM,130121:JM,130193:JM,130167:JM,130223:JM,138451:JM,139295
129450 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::CE,129451:CD,129457
129454 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,129457
129457 :: NORM :: compound :: Ljava/util/List :: return v3::CF,129451
129459 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setAtoms(java.util.List)::CD,129467:CD,129474:CD,129505:CD,129509:CD,129513:CD,129517:JM,129510
129464 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,129467
129467 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 17::CD,129471:JM,129509:JM,129510:JM,129517
129468 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .atomNameLookup::
129471 :: CALL :: call :: V :: v6.clear()::
129474 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $atoms .iterator()::JM,129509:JM,129510:JM,129517
129479 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,129509:JM,129517
129484 :: CALL :: call :: V :: v15.setGroup(p0 $this )::CL,88785
129488 :: EXPR :: reference :: Ljava/util/Map :: v17 = p0 $this .atomNameLookup::DD,129491
129491 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 68::CD,129499:JM,129509:JM,129517
129499 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.put(v20, v15)::
129505 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,129509:JM,129517
129509 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 27::CD,129479:CD,129484:CD,129491:CD,129505:JM,129509:JM,129517
129510 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = p1 $atoms ::
129513 :: CALL :: call :: Z :: v24 = p1 $atoms .isEmpty()::JM,129509:JM,129517
129517 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 95::
129518 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(1)::
129545 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setAltLoc(java.lang.Character)::CD,129550:JM,129559
129551 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
129550 :: PRED :: IF :: Z :: if (p1 $c  != #(null)) goto 14::CD,129555:JM,129559:JM,129550
129555 :: CALL :: call :: C :: v6 = p1 $c .charValue()::JM,129559:JM,129550
129559 :: EXPR :: modify :: C :: p0 $this .altLoc = v6::
129569 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.valueOfIgnoreCase(java.lang.String)::CD,129575:CD,129579:CD,129587:CD,129588:CD,129593:CD,129598
129575 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $elementSymbol .toLowerCase()::
129579 :: CALL :: call :: Ljava/lang/Object :: v7 = v3.get(v5)::
129587 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
129588 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
129593 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(p1 $elementSymbol )::
129598 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
129613 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::CE,129614:CD,129619:CD,129624:CD,129625
129614 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::JM,115957:JM,115963:JM,115967
129619 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $expTechniqueName )::JM,129624
129625 :: NORM :: compound :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v6::DD,129614
129624 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,129625
129629 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::JM,116102
129628 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::CE,129629:CD,129635
129632 :: EXPR :: reference :: D :: v3 = p0 $this .a::DD,129635
129635 :: NORM :: compound :: D :: return v3::CF,129629
129637 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::CE,129638:CD,129644
129638 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::JM,116108
129641 :: EXPR :: reference :: D :: v3 = p0 $this .b::DD,129644
129644 :: NORM :: compound :: D :: return v3::CF,129638
129647 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::JM,116114
129646 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::CE,129647:CD,129653
129650 :: EXPR :: reference :: D :: v3 = p0 $this .c::DD,129653
129653 :: NORM :: compound :: D :: return v3::CF,129647
129655 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB(java.lang.StringBuffer)::CD,129660:CD,129661:CD,129665:CD,129690:CD,129701:CD,129712:CD,129723:CD,129755:CD,129766:CD,129777:CD,129788:CD,129796:CD,129802:CD,129806:CD,129811
129661 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
129660 :: NORM :: declaration :: Ljava/util/Formatter :: v4 = new java.util.Formatter::CF,129661
129665 :: EXPR :: reference :: Ljava/util/Locale :: v7 = java.util.Locale.UK::
129687 :: EXPR :: reference :: I :: v17 = p0 $this .seqbegin::
129690 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
129698 :: EXPR :: reference :: C :: v21 = p0 $this .insertBegin::
129701 :: CALL :: call :: Ljava/lang/Character :: v23 = valueOf(v21)::
129709 :: EXPR :: reference :: I :: v25 = p0 $this .seqEnd::
129712 :: CALL :: call :: Ljava/lang/Integer :: v27 = valueOf(v25)::
129720 :: EXPR :: reference :: C :: v29 = p0 $this .insertEnd::
129723 :: CALL :: call :: Ljava/lang/Character :: v31 = valueOf(v29)::
129752 :: EXPR :: reference :: I :: v39 = p0 $this .dbSeqBegin::
129755 :: CALL :: call :: Ljava/lang/Integer :: v41 = valueOf(v39)::
129763 :: EXPR :: reference :: C :: v43 = p0 $this .idbnsBegin::
129766 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(v43)::
129774 :: EXPR :: reference :: I :: v47 = p0 $this .dbSeqEnd::
129777 :: CALL :: call :: Ljava/lang/Integer :: v49 = valueOf(v47)::
129785 :: EXPR :: reference :: C :: v51 = p0 $this .idbnsEnd::
129788 :: CALL :: call :: Ljava/lang/Character :: v53 = valueOf(v51)::
129796 :: CALL :: call :: Ljava/util/Formatter :: v55 = v4.format(#(DBREF  %4s %1s %4d%1s...), v11)::
129802 :: CALL :: call :: Ljava/lang/String :: v57 = v4.toString()::
129806 :: CALL :: call :: Ljava/lang/StringBuffer :: v59 = p1 $buf .append(v57)::
129811 :: CALL :: call :: V :: v4.close()::
129867 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::JM,116561:JM,116562:JM,116566:JM,154944:JM,154949:JM,154943
129866 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::CE,129867:CD,129873
129870 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .mon_nstd_parent_comp_id::DD,129873
129873 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,129867
129875 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::CE,129876:CD,129882
129876 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::JM,116806:JM,116816
129879 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .three_letter_code::DD,129882
129882 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,129876
129885 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::JM,117872:JM,117086:JM,118265:JM,118349:JM,118515:JM,123089
129884 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::CE,129885:CD,129909:CD,129913:CD,129915:JM,129906:JM,129896
129891 :: CALL :: call :: Ljava/lang/Object :: v9 = p2 $chains .get(v17)::JM,129906:JM,129913:JM,129896
129897 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getChainID()::JM,129906:CL,63330
129896 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,129907
129901 :: CALL :: call :: Z :: v14 = p1 $chainID .equals(v12)::JM,129906:JM,129913:JM,129896
129907 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v10::DD,129885
129906 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CD,129907:CD,129908:CD,129909:CD,129913:CD,129915
129909 :: CALL :: call :: I :: v7 = p2 $chains .size()::JM,129906:JM,129913:JM,129896
129908 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,129915
129913 :: PRED :: IF :: Z :: if (v17 < v7) goto 7::CD,129891:CD,129896:CD,129897:CD,129901:CD,129906:CD,129914:JM,129913
129915 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::JM,129906:JM,129896:DD,129908:DD,129913
129914 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,129885
129931 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::JM,118302:JM,130288
129930 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::CE,129931:CD,129937:CD,129941:JM,129952:JM,129957
129937 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = getGroupFromChemCompDictionary(p3 $aminoCode3 )::JM,129941:JM,129951:CL,116501
129941 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 28::CD,129942:CD,129946:CD,129950:CD,129952:CD,129981:CD,129982
129942 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v10 = v7.getChemComp()::CL,116734
129946 :: CALL :: call :: Z :: v12 = v10.isEmpty()::JM,129950:CL,116794
129951 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,129931
129950 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,129951:CD,129952:CD,129981:CD,129982
129953 :: CALL :: call :: C :: v16 = p2 $aminoCode1 .charValue()::JM,129957
129952 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 40::CF,129958:CD,129953:CD,129957:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,129982
129957 :: PRED :: IF :: Z :: if (#(88) != v16) goto 53::CF,129958:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,129963:CD,129967:CD,129982
129958 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v24 = new org.biojava.nbio.structure.HetatomImpl::DD,129982
129963 :: CALL :: call :: Z :: v18 = isNucleotide(p3 $aminoCode3 )::JM,129967:CL,57243
129967 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 75::CF,129973:CF,129968:JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,129977:CD,129982
129968 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v22 = new org.biojava.nbio.structure.NucleotideImpl::DD,129982
129973 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v19 = new org.biojava.nbio.structure.AminoAcidImpl::DD,129982
129977 :: CALL :: call :: V :: v19.setAminoType(p2 $aminoCode1 )::CL,88878
129981 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v26::DD,129931
129982 :: EXPR :: assign :: null :: PHI v26 = v24, v22, v19::CF,129981
130008 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addTohetGroupsDecider(org.biojava.nbio.structure.Group)::CD,130013:CD,130017:CD,130022:JM,130064
130013 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $group .getPDBName()::JM,130022:CL,47160
130017 :: CALL :: call :: Z :: v9 = v6.equals(#(HOH))::JM,130022
130022 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,130024:CD,130028:CD,130051:CD,130078
130024 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = p1 $group .getChemComp()::JM,130028:CL,116734
130029 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v19 = p1 $group .getType()::JM,130035:JM,130040:CL,123906:CL,123890:CL,123898
130028 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 48::CD,130029:CD,130033:CD,130035:CD,130040:CD,130042:CD,130046:CD,130050:CD,130078
130033 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v20 = org.biojava.nbio.structure.GroupType.HETATM::JM,130035:JM,130040
130035 :: CALL :: call :: Z :: v22 = v19.equals(v20)::JM,130035:JM,130040
130040 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 62::CF,130078
130042 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v14 = p1 $group .getChemComp()::CL,116734
130046 :: CALL :: call :: Z :: v16 = v14.isStandard()::JM,130050:CL,139117
130051 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 99::CD,130055:CD,130059:CD,130064
130050 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 62::CF,130078
130055 :: CALL :: call :: Ljava/util/List :: v26 = v24.getHetGroups()::JM,130064:CL,139126
130059 :: CALL :: call :: Z :: v28 = v26.contains(p1 $group )::JM,130064
130064 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 99::CD,130068:CD,130072
130068 :: CALL :: call :: Ljava/util/List :: v31 = v29.getHetGroups()::CL,139126
130072 :: CALL :: call :: Z :: v33 = v31.add(p1 $group )::JM,130064
130078 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1), #(0), #(1)::DD,130051
130103 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::JM,117876
130102 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::CE,130103:CD,130113:CD,130117:CD,130121:JM,130137:JM,130187:JM,130211
130113 :: CALL :: call :: Ljava/util/List :: v9 = v7.getAtoms()::JM,130121:CL,129450
130117 :: CALL :: call :: I :: v11 = v9.size()::JM,130121
130121 :: PRED :: IF :: Z :: if (v11 <= #(0)) goto 54::CD,130122:CD,130128:CD,130132:CD,130137:CD,130145:CD,130149:CD,130194:CD,130198:JM,130121
130122 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,130121
130128 :: CALL :: call :: Ljava/lang/Character :: v17 = v15.getAltLoc()::JM,130137:CL,103842
130132 :: CALL :: call :: Z :: v19 = v17.equals(p1 $altLoc )::JM,130137:JM,130187
130137 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 54::CD,130141:CD,130145:CD,130149:CD,130194:CD,130198
130138 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,130141
130141 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,130103
130145 :: CALL :: call :: Ljava/util/List :: v22 = v20.getAltLocs()::JM,130198:JM,130158:CL,74718
130149 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,130198:JM,130158
130154 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,130198:JM,130158
130159 :: CALL :: call :: Ljava/util/List :: v31 = v29.getAtoms()::JM,130193:JM,130167:CL,129450
130158 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::DD,130188
130163 :: CALL :: call :: I :: v33 = v31.size()::JM,130193:JM,130167
130167 :: PRED :: IF :: Z :: if (v33 <= #(0)) goto 160::CD,130168:CD,130189:CD,130193:CD,130194:CD,130198:JM,130167:JM,130158
130168 :: CALL :: call :: Ljava/util/Iterator :: v36 = v31.iterator()::JM,130193:JM,130167
130173 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,130193
130178 :: CALL :: call :: Ljava/lang/Character :: v43 = v41.getAltLoc()::JM,130187:CL,103842
130182 :: CALL :: call :: Z :: v45 = v43.equals(p1 $altLoc )::JM,130187:JM,130137
130187 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 150::CD,130188:CD,130189:CD,130193
130189 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,130193
130188 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v29::DD,130103
130193 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 121::CD,130173:CD,130178:CD,130182:CD,130187:CD,130194:CD,130198:JM,130193:JM,130158
130194 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,130198:JM,130158
130198 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 78::CD,130154:CD,130158:CD,130159:CD,130163:CD,130167:CD,130202:CD,130206:CD,130211:JM,130198
130202 :: CALL :: call :: Ljava/lang/String :: v48 = v46.getPDBName()::JM,130211:CL,47160
130206 :: CALL :: call :: Z :: v50 = p4 $groupCode3 .equals(v48)::JM,130211
130211 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 266::CD,130215:CD,130219:CD,130223:CD,130259:CD,130266:CD,130277:CD,130284:CD,130288
130215 :: CALL :: call :: Ljava/util/List :: v62 = v60.getAtoms()::JM,130223:CL,129450
130219 :: CALL :: call :: I :: v64 = v62.size()::JM,130223
130223 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,130227:CD,130231:CD,130235:CD,130236:CD,130240:CD,130244:CD,130248:CD,130254:CD,130258
130224 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v77 = p0 $this .current_group::DD,130227
130227 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v77::DD,130103
130231 :: CALL :: call :: Ljava/lang/Object :: v67 = v65.clone()::JM,130235:CL,75914:CL,76231:CL,76056
130235 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::DD,130258:CF,130236
130236 :: NORM :: declaration :: Ljava/util/ArrayList :: v69 = new java.util.ArrayList::
130240 :: CALL :: call :: V :: v68.setAtoms(v69)::CL,129459
130244 :: CALL :: call :: Ljava/util/List :: v73 = v68.getAltLocs()::CL,74718
130248 :: CALL :: call :: V :: v73.clear()::
130254 :: CALL :: call :: V :: v75.addAltLoc(v68)::CL,88796
130259 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p4 $groupCode3 )::JM,130288:CL,129930
130258 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v68::DD,130103
130266 :: CALL :: call :: V :: v52.setPDBName(p4 $groupCode3 )::CL,88573:CL,88858
130277 :: CALL :: call :: V :: v52.setResidueNumber(v56)::CL,88562
130284 :: CALL :: call :: V :: v58.addAltLoc(v52)::CL,88796
130288 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v52::DD,130103
130348 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.switchCAOnly()::CD,130358:CD,130390:CD,130394:CD,130398:CD,130406
130352 :: EXPR :: modify :: Z :: p0 $this .parseCAonly = #(1)::
130358 :: CALL :: call :: Ljava/util/List :: v6 = getRepresentativeAtomsOnly(v4)::CL,139135
130369 :: CALL :: call :: Ljava/util/List :: v13 = v11.getModel(v19)::CL,51721
130374 :: CALL :: call :: Ljava/util/List :: v15 = getRepresentativeAtomsOnly(v13)::CL,139135
130381 :: CALL :: call :: V :: v16.setModel(v19, v15)::CL,63207
130386 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,130406
130390 :: CALL :: call :: I :: v10 = v8.nrModels()::JM,130394:CL,64143
130394 :: PRED :: IF :: Z :: if (v19 < v10) goto 22::CD,130369:CD,130374:CD,130381:CD,130386:CD,130390:CD,130406
130398 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getRepresentativeAtomsOnly(v20)::CL,139182
130406 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::DD,130386:DD,130394
130427 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::CE,130428:CD,130434
130428 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::JM,117588:JM,117596
130431 :: EXPR :: reference :: [Ljava/lang/String :: v3 = p0 $this .fullAtomNames::DD,130434
130434 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,130428
130437 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getTitle()::JM,118946:JM,118952:JM,118958
130436 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getTitle()::CE,130437:CD,130443
130440 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .title::DD,130443
130443 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,130437
130445 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_800_Handler(java.lang.String)::CD,130453:CD,130457
130453 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,130457:CL,94376
130457 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,130459:CD,130464:CD,130469:CD,130470
130459 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(11))::
130464 :: CALL :: call :: [Ljava/lang/String :: v13 = v10.split(#(: ))::JM,130469
130469 :: EXPR :: assign :: I :: v14 = v13.length::DD,130470
130471 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v13[#(0)]::JM,130480
130470 :: PRED :: IF :: Z :: if (v14 != #(2)) goto 389::CD,130475:CD,130480:CD,130634:CD,130639:CD,130684:CD,130689
130475 :: CALL :: call :: Z :: v19 = v16.equals(#(SITE_IDENTIFIER))::JM,130480
130481 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v13[#(1)]::JM,130542
130480 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 229::CD,130485:CD,130491:CD,130496:CD,130501:CD,130506:CD,130517:CD,130522:CD,130529
130485 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::JM,130542
130491 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
130496 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v23)::JM,130542
130501 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#('))::JM,130542
130506 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
130517 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v23)::JM,130522
130523 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Site :: p0 $this .site = v39::
130522 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::DD,130523
130526 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Site :: v40 = p0 $this .site::DD,130529
130529 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 121::CD,130533:CD,130537:CD,130542:CD,130544:JM,139369:JM,139356:JM,139372:CD,130569:CD,130577:CD,130585:CD,130590:CD,130600:CD,130608:CD,130612:CD,130617:CD,130622
130533 :: CALL :: call :: Ljava/lang/String :: v44 = v42.getSiteID()::JM,130542:CL,114054
130537 :: CALL :: call :: Z :: v46 = v23.equals(v44)::JM,130542
130542 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 229::CD,130544:JM,139369:JM,139356:JM,139372:CD,130569:CD,130577:CD,130585:CD,130590:CD,130600:CD,130608:CD,130612:CD,130617:CD,130622
130544 :: NORM :: declaration :: Ljava/util/ArrayList :: v48 = new java.util.ArrayList::
130569 :: CALL :: call :: Ljava/lang/Object :: v57 = v51.put(v54, v55)::
130577 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
130585 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v62)::
130590 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::
130600 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
130605 :: EXPR :: reference :: Ljava/util/Map :: v72 = p0 $this .siteMap::
130608 :: CALL :: call :: I :: v74 = v72.size()::
130612 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v69.append(v74)::
130617 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(#( sites))::
130622 :: CALL :: call :: Ljava/lang/String :: v81 = v79.toString()::
130630 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v13[#(0)]::JM,130639
130634 :: CALL :: call :: Z :: v86 = v83.equals(#(EVIDENCE_CODE))::JM,130639
130639 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 287::CD,130644:CD,130650:CD,130655:CD,130660:CD,130665:CD,130676
130640 :: EXPR :: reference :: Ljava/lang/Object :: v87 = v13[#(1)]::
130644 :: CALL :: call :: Ljava/lang/String :: v89 = v87.trim()::
130650 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
130655 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v91.append(v89)::
130660 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v95.append(#('))::
130665 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
130676 :: CALL :: call :: V :: v101.setEvCode(v89)::CL,139389
130680 :: EXPR :: reference :: Ljava/lang/Object :: v103 = v13[#(0)]::JM,130689
130684 :: CALL :: call :: Z :: v106 = v103.equals(#(SITE_DESCRIPTION))::JM,130689
130689 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 389::CD,130694:CD,130700:CD,130705:CD,130710:CD,130715:CD,130726:CD,130732:CD,130740:CD,130744:CD,130749:CD,130762
130690 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v13[#(1)]::
130694 :: CALL :: call :: Ljava/lang/String :: v109 = v107.trim()::
130700 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
130705 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v109)::
130710 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#('))::
130715 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
130726 :: CALL :: call :: V :: v121.setDescription(v109)::CL,116490
130732 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
130740 :: CALL :: call :: Ljava/lang/String :: v129 = v127.getSiteID()::CL,114054
130744 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v124.append(v129)::
130749 :: CALL :: call :: Ljava/lang/String :: v133 = v131.toString()::
130762 :: CALL :: call :: Ljava/lang/String :: v138 = v136.remark800toPDB()::CL,139400
130853 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
130856 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,130860
130860 :: EXPR :: modify :: Ljava/util/List :: p0 $this .currentChainIDs = v5::
130863 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = #(null)::
130866 :: EXPR :: modify :: [D :: p0 $this .shift = #(null)::
130869 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,130873
130873 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .transformationMap = v7::
130876 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
130893 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.pdb_REMARK_350_Handler(java.lang.String)::CD,130898:CD,130903:JM,130994:JM,130971:JM,130954:JM,131005:JM,130988:JM,130924
130898 :: CALL :: call :: Z :: v6 = p1 $line .startsWith(#(REMARK 350 BIOMOLECULE:))::JM,130994:JM,130903:JM,130971:JM,130954:JM,131005:JM,130988:JM,130924
130903 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 38::CD,130904:CD,130907:CD,130912:CD,130916:CD,130920:CD,130928:CD,130933
130904 :: CALL :: call :: V :: p0 $this .initialize()::CL,139422
130907 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(24))::JM,130994:JM,130903:JM,130971:JM,130954:JM,131005:JM,130988:JM,130924
130912 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,130994:JM,130971:JM,130954:JM,131005:JM,130988:JM,130924
130916 :: CALL :: call :: I :: v51 = parseInt(v49)::JM,130924
130920 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v51)::JM,130924
130924 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = v53::
130928 :: CALL :: call :: Z :: v10 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,130933
130933 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 56::CD,130934:CD,130939:CD,130940
130934 :: CALL :: call :: Z :: v13 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,130939
130939 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 68::CD,130940:CD,130949:CD,130954:JM,130994:JM,130903:JM,130971:JM,131005:JM,130988:JM,130924
130940 :: CALL :: call :: I :: v43 = p0 $this .getMmSize(p1 $line )::JM,130945:CL,139468
130945 :: EXPR :: modify :: I :: p0 $this .currentMmSize = v43::
130949 :: CALL :: call :: Z :: v16 = p1 $line .startsWith(#(REMARK 350 APPLY THE ...))::JM,130994:JM,130903:JM,130971:JM,130954:JM,131005:JM,130988:JM,130924
130955 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .currentChainIDs::
130954 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 94::CD,130958:CD,130961:CD,130966:CD,130971:JM,130994:JM,130903:JM,130954:JM,131005:JM,130988:JM,130924
130958 :: CALL :: call :: V :: v39.clear()::
130961 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,139513
130966 :: CALL :: call :: Z :: v19 = p1 $line .startsWith(#(REMARK 350 IN ADDITIO...))::JM,130994:JM,130903:JM,130971:JM,130954:JM,131005:JM,130988:JM,130924
130971 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 120::CD,130975:CD,130978:CD,130983:CD,130988:JM,130994:JM,130903:JM,130971:JM,130954:JM,131005:JM,130924
130972 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .currentChainIDs::
130975 :: CALL :: call :: V :: v36.clear()::
130978 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,139513
130983 :: CALL :: call :: Z :: v22 = p1 $line .startsWith(#(REMARK 350))::JM,130994:JM,130903:JM,130971:JM,130954:JM,131005:JM,130988:JM,130924
130989 :: CALL :: call :: Z :: v25 = p1 $line .contains(#(AND CHAINS:))::JM,130994:JM,130903:JM,130971:JM,130954:JM,131005:JM,130988:JM,130924
130988 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 146::CD,130989:CD,130994:CD,131000:CD,131005:JM,130903:JM,130971:JM,130954:JM,130988:JM,130924
130995 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,139513
130994 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 146::CD,130995:CD,131000:CD,131005:JM,130994:JM,130903:JM,130971:JM,130954:JM,130988:JM,130924
131000 :: CALL :: call :: Z :: v28 = p1 $line .startsWith(#(REMARK 350   BIOMT))::JM,130994:JM,130903:JM,130971:JM,130954:JM,131005:JM,130988:JM,130924
131005 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 174::CD,131006:CD,131011
131006 :: CALL :: call :: Z :: v30 = p0 $this .readMatrix(p1 $line )::JM,131011:CL,139564
131011 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 174::CD,131012:CD,131018
131012 :: CALL :: call :: V :: p0 $this .saveMatrix()::CL,139720
131015 :: EXPR :: reference :: I :: v32 = p0 $this .modelNumber::DD,131018
131019 :: EXPR :: modify :: I :: p0 $this .modelNumber = v34::
131018 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v32 + #(1)::DD,131019
131069 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::CE,131070:CD,131076:CD,131082:CD,131086:CD,131091:CD,131101:CD,131102:JM,131096
131070 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::JM,120369:JM,120376:JM,120383:JM,120390:JM,120397:JM,120404:JM,120411:JM,120418:JM,120425:JM,120432
131076 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(p2 $start , p3 $end )::JM,131091:JM,131096
131082 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,131091:JM,131096
131086 :: CALL :: call :: Z :: v14 = v9.equals(#())::JM,131091:JM,131096
131091 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 48::CF,131102:CD,131092:CD,131096:JM,131091
131092 :: CALL :: call :: I :: v17 = parseInt(v9)::JM,131091:JM,131096
131096 :: NORM :: declaration :: Ljava/lang/Integer :: v18 = new java.lang.Integer::JM,131096:DD,131102
131102 :: EXPR :: assign :: null :: PHI v21 = #(null), v18::CF,131101
131101 :: NORM :: compound :: Ljava/lang/Integer :: return v21::DD,131070
131119 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getModDate()::CE,131120:CD,131126
131123 :: EXPR :: reference :: Ljava/util/Date :: v3 = p0 $this .modDate::DD,131126
131120 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.PDBHeader.getModDate()::JM,120626
131126 :: NORM :: compound :: Ljava/util/Date :: return v3::CF,131120
131215 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setChainID1(java.lang.String)::JM,131220
131220 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID1 = p1 $chainID1 ::
131226 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setResnum1(java.lang.String)::JM,131231
131231 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resnum1 = p1 $resnum1 ::
131237 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setChainID2(java.lang.String)::JM,131242
131242 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID2 = p1 $chainID2 ::
131248 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setResnum2(java.lang.String)::JM,131253
131253 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resnum2 = p1 $resnum2 ::
131259 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setInsCode1(java.lang.String)::JM,131264
131264 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode1 = p1 $insCode1 ::
131270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setInsCode2(java.lang.String)::JM,131275
131275 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode2 = p1 $insCode2 ::
131302 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name1 = p1 $name1 ::
131305 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .altLoc1 = p2 $altLoc1 ::
131311 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID1 = p4 $chainID1 ::
131308 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resName1 = p3 $resName1 ::
131314 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resSeq1 = p5 $resSeq1 ::
131317 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .iCode1 = p6 $iCode1 ::
131323 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .altLoc2 = p8 $altLoc2 ::
131320 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name2 = p7 $name2 ::
131326 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resName2 = p9 $resName2 ::
131329 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID2 = p10 $chainID2 ::
131335 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .iCode2 = p12 $iCode2 ::
131332 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resSeq2 = p11 $resSeq2 ::
131374 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_COMPND_Handler(java.lang.String)::CD,131381:CD,131389:CD,131394:CD,131404:CD,131412:CD,131417:CD,131427:CD,131435:CD,131440:CD,131450:CD,131458:CD,131463:CD,131474:CD,131481:CD,131485:CD,131491:CD,131495:CD,131500:CD,131501:CD,131821
131381 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
131386 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .previousContinuationField::
131389 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v5.append(v8)::
131394 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
131404 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
131409 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .continuationField::
131412 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v15.append(v18)::
131417 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
131427 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
131435 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v25.append(v28)::
131432 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .continuationString::
131440 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
131450 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
131458 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v35.append(v38)::
131463 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
131471 :: EXPR :: reference :: Z :: v44 = p0 $this .isLegacyFormat::DD,131474
131474 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 131::CF,131821:CD,131475
131475 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(0), #(72))::JM,131821
131481 :: CALL :: call :: I :: v52 = v49.length()::
131485 :: CALL :: call :: Ljava/lang/String :: v54 = v49.substring(#(10), v52)::
131491 :: CALL :: call :: Ljava/lang/String :: v56 = v54.trim()::
131495 :: CALL :: call :: [Ljava/lang/String :: v59 = v56.split(#(\s+))::JM,131500
131502 :: EXPR :: reference :: Ljava/util/List :: v61 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,131513
131500 :: EXPR :: assign :: I :: v60 = v59.length::DD,131501:DD,131537
131501 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 202::CD,131502:CD,131508:CD,131513:CD,131537
131504 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v59[#(0)]::JM,131513
131508 :: CALL :: call :: Z :: v64 = v61.contains(v62)::JM,131513
131514 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v59[#(0)]::DD,131518
131513 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 202::CD,131524:CD,131529:CD,131537:CD,131558:CD,131564:CD,131568:CD,131782:CD,131786:CD,131790
131518 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v72::
131521 :: EXPR :: reference :: Ljava/lang/String :: v73 = p0 $this .previousContinuationField::JM,131529
131524 :: CALL :: call :: Z :: v76 = v73.equals(#())::JM,131529
131530 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .continuationField::DD,131533
131529 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 231::
131533 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v77::
131538 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v59[#(0)]::JM,131547
131537 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 231::CD,131542:CD,131547:CD,131558:CD,131564:CD,131568:CD,131782:CD,131786:CD,131790
131542 :: CALL :: call :: Z :: v68 = v65.contains(#(:))::JM,131547
131547 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 231::CD,131558:CD,131564:CD,131568:CD,131782:CD,131786:CD,131790
131558 :: CALL :: call :: Ljava/lang/String :: v80 = v54.replace(v78, #())::
131564 :: CALL :: call :: Ljava/lang/String :: v82 = v80.trim()::
131568 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v83 = new java.util.StringTokenizer::JM,131732:JM,131786
131574 :: CALL :: call :: Ljava/lang/String :: v88 = v83.nextToken()::JM,131732
131578 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .previousContinuationField::JM,131586
131581 :: CALL :: call :: Z :: v91 = v89.equals(#())::JM,131586
131586 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 286::
131587 :: EXPR :: reference :: Ljava/lang/String :: v92 = p0 $this .continuationField::DD,131590
131590 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v92::
131593 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .previousContinuationField::JM,131604
131599 :: CALL :: call :: Z :: v96 = v93.equals(v94)::JM,131604
131596 :: EXPR :: reference :: Ljava/lang/String :: v94 = p0 $this .continuationField::JM,131604
131607 :: EXPR :: reference :: Ljava/lang/String :: v98 = p0 $this .continuationField::JM,131615
131604 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 429::CD,131605:CD,131610:CD,131615
131605 :: EXPR :: reference :: Ljava/util/List :: v97 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,131615
131610 :: CALL :: call :: Z :: v100 = v97.contains(v98)::JM,131615
131615 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 429::CD,131618:CD,131626:CD,131631:CD,131641:CD,131646:CD,131651:CD,131662:CD,131663:CD,131671:CD,131676:CD,131680:CD,131690:CD,131698:CD,131703
131618 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v102 = new java.lang.StringBuilder::
131623 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .continuationField::
131626 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v102.append(v105)::
131631 :: CALL :: call :: Ljava/lang/String :: v109 = v107.toString()::
131641 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v112 = new java.lang.StringBuilder::
131646 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v112.append(v88)::JM,131732
131651 :: CALL :: call :: Ljava/lang/String :: v118 = v116.toString()::
131659 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .continuationString::JM,131685
131662 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v121 = new java.lang.StringBuilder::JM,131685
131663 :: CALL :: call :: Ljava/lang/String :: v123 = valueOf(v88)::
131671 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v121.append(#( ))::JM,131685
131676 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::JM,131685
131680 :: CALL :: call :: Ljava/lang/String :: v131 = v120.concat(v129)::JM,131685
131685 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v131::
131690 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
131695 :: EXPR :: reference :: Ljava/lang/String :: v136 = p0 $this .continuationString::
131698 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(v136)::
131703 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
131711 :: EXPR :: reference :: Ljava/lang/String :: v142 = p0 $this .continuationField::JM,131722
131714 :: EXPR :: reference :: Ljava/lang/String :: v143 = p0 $this .previousContinuationField::JM,131722
131717 :: CALL :: call :: Z :: v145 = v142.equals(v143)::JM,131722
131722 :: PRED :: IF :: Z :: if (v145 != #(0)) goto 512::CD,131726:CD,131731
131723 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationString::JM,131731
131726 :: CALL :: call :: Z :: v148 = v146.equals(#())::JM,131731
131731 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 466::CD,131742:CD,131753:CD,131754:CD,131762:CD,131767
131732 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v88::
131742 :: CALL :: call :: V :: p0 $this .compndValueSetter(v149, v150)::CL,139910
131747 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationField::DD,131750
131750 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v152::
131754 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v88)::
131753 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,131771
131762 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v153.append(#( ))::JM,131771
131767 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::JM,131771
131771 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v160::
131782 :: CALL :: call :: Z :: v86 = v83.hasMoreTokens()::JM,131786
131786 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 259::CD,131574:CD,131581:CD,131586:CD,131599:CD,131604:CD,131717:CD,131722:CD,131782:JM,131732
131787 :: EXPR :: reference :: Z :: v164 = p0 $this .isLastCompndLine::DD,131790
131790 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 578::CD,131797:CD,131808
131797 :: CALL :: call :: V :: p0 $this .compndValueSetter(v165, v166)::CL,139910
131805 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v168 = p0 $this .current_compound::DD,131808
131808 :: PRED :: IF :: Z :: if (v168 == #(null)) goto 578::CD,131815
131809 :: EXPR :: reference :: Ljava/util/List :: v170 = p0 $this .compounds::
131815 :: CALL :: call :: Z :: v173 = v170.add(v171)::
131812 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v171 = p0 $this .current_compound::
131821 :: EXPR :: assign :: null :: PHI v49 = p1 $line , v48::
131937 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SOURCE_Handler(java.lang.String)::CD,131942:CD,131948:CD,131954:CD,131959:CD,131964:CD,131974:CD,131982:CD,131987:CD,131997:CD,132005:CD,132010:CD,132020:CD,132028:CD,132033:CD,132043:CD,132051:CD,132056:CD,132064:CD,132068:CD,132075:CD,132079:CD,132087:CD,132092:CD,132097:CD,132102:CD,132110:CD,132119:CD,132124:CD,132230:CD,132236:CD,132240:CD,132434:CD,132438:CD,132442:CD,132458:JM,132202
131942 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(9), #(10))::JM,132068:JM,132202:JM,132458
131948 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,132068:JM,132202:JM,132458
131954 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
131959 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v9)::JM,132202
131964 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,132202
131974 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
131979 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .previousContinuationField::
131982 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v20.append(v23)::
131987 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
131997 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
132002 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .continuationField::
132005 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::
132010 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
132020 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
132025 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .continuationString::
132028 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v40.append(v43)::
132033 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
132043 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
132051 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
132056 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
132064 :: CALL :: call :: I :: v60 = p1 $line .length()::JM,132068:JM,132458:JM,132202
132068 :: PRED :: IF :: Z :: if (v60 <= #(79)) goto 170::CF,132458:CD,132069:JM,132068:JM,132202
132069 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(0), #(79))::JM,132068:JM,132458:JM,132202
132075 :: CALL :: call :: I :: v67 = v65.length()::
132079 :: CALL :: call :: Ljava/lang/String :: v69 = v65.substring(#(10), v67)::
132087 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v71 = new java.lang.StringBuilder::
132092 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v71.append(v69)::
132097 :: CALL :: call :: Ljava/lang/StringBuilder :: v78 = v75.append(#(<))::
132102 :: CALL :: call :: Ljava/lang/String :: v80 = v78.toString()::
132110 :: CALL :: call :: [Ljava/lang/String :: v84 = v69.split(#(\s+))::JM,132160
132115 :: EXPR :: reference :: Ljava/lang/Object :: v85 = v84[#(0)]::JM,132124
132119 :: CALL :: call :: Z :: v88 = v85.equals(#())::JM,132124
132127 :: EXPR :: reference :: Ljava/lang/Object :: v90 = v84[#(0)]::JM,132136
132124 :: PRED :: IF :: Z :: if (v88 != #(0)) goto 274::CD,132125:CD,132131:CD,132136:CD,132160:CD,132161
132125 :: EXPR :: reference :: Ljava/util/List :: v89 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,132136
132131 :: CALL :: call :: Z :: v92 = v89.contains(v90)::JM,132136
132136 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 274::CD,132147:CD,132152:CD,132160:CD,132161
132137 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v84[#(0)]::DD,132141
132141 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v114::
132147 :: CALL :: call :: Z :: v117 = v115.equals(#())::JM,132152
132144 :: EXPR :: reference :: Ljava/lang/String :: v115 = p0 $this .previousContinuationField::JM,132152
132152 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 374::
132153 :: EXPR :: reference :: Ljava/lang/String :: v118 = p0 $this .continuationField::DD,132156
132156 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v118::
132162 :: EXPR :: reference :: Ljava/util/List :: v95 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,132173
132160 :: EXPR :: assign :: I :: v93 = v84.length::DD,132161
132161 :: PRED :: IF :: Z :: if (v93 <= #(1)) goto 328::CD,132162:CD,132168:CD,132173:CD,132197:CD,132202
132164 :: EXPR :: reference :: Ljava/lang/Object :: v96 = v84[#(1)]::JM,132173
132168 :: CALL :: call :: Z :: v98 = v95.contains(v96)::JM,132173
132174 :: EXPR :: reference :: Ljava/lang/Object :: v109 = v84[#(1)]::DD,132178
132173 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 328::CD,132184:CD,132189:CD,132197:CD,132202
132178 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v109::
132181 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .previousContinuationField::JM,132189
132184 :: CALL :: call :: Z :: v112 = v110.equals(#())::JM,132189
132190 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .continuationField::DD,132193
132189 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 374::
132193 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v113::
132197 :: CALL :: call :: Z :: v100 = v9.equals(#())::JM,132202
132202 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 374::CD,132215:CD,132220
132209 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = #(MOLECULE:)::
132215 :: CALL :: call :: Z :: v107 = v105.equals(#())::JM,132220
132212 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .previousContinuationField::JM,132220
132220 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 374::
132221 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .continuationField::DD,132224
132224 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v108::
132230 :: CALL :: call :: Ljava/lang/String :: v121 = v69.replace(v119, #())::
132236 :: CALL :: call :: Ljava/lang/String :: v123 = v121.trim()::
132240 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v124 = new java.util.StringTokenizer::JM,132384:JM,132438
132246 :: CALL :: call :: Ljava/lang/String :: v129 = v124.nextToken()::JM,132384
132250 :: EXPR :: reference :: Ljava/lang/String :: v130 = p0 $this .previousContinuationField::JM,132258
132253 :: CALL :: call :: Z :: v132 = v130.equals(#())::JM,132258
132258 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 429::
132259 :: EXPR :: reference :: Ljava/lang/String :: v133 = p0 $this .continuationField::DD,132262
132262 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v133::
132265 :: EXPR :: reference :: Ljava/lang/String :: v134 = p0 $this .previousContinuationField::JM,132276
132271 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,132276
132268 :: EXPR :: reference :: Ljava/lang/String :: v135 = p0 $this .continuationField::JM,132276
132279 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .continuationField::JM,132287
132276 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 546::CD,132277:CD,132282:CD,132287
132277 :: EXPR :: reference :: Ljava/util/List :: v138 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,132287
132282 :: CALL :: call :: Z :: v141 = v138.contains(v139)::JM,132287
132287 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 546::CD,132290:CD,132298:CD,132303:CD,132314:CD,132315:CD,132323:CD,132328:CD,132332:CD,132342:CD,132350:CD,132355
132290 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v143 = new java.lang.StringBuilder::
132295 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationField::
132298 :: CALL :: call :: Ljava/lang/StringBuilder :: v148 = v143.append(v146)::
132303 :: CALL :: call :: Ljava/lang/String :: v150 = v148.toString()::
132311 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationString::JM,132337
132314 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,132337
132315 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v129)::
132323 :: CALL :: call :: Ljava/lang/StringBuilder :: v159 = v153.append(#( ))::JM,132337
132328 :: CALL :: call :: Ljava/lang/String :: v161 = v159.toString()::JM,132337
132332 :: CALL :: call :: Ljava/lang/String :: v163 = v152.concat(v161)::JM,132337
132337 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v163::
132342 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
132347 :: EXPR :: reference :: Ljava/lang/String :: v168 = p0 $this .continuationString::
132350 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v165.append(v168)::
132355 :: CALL :: call :: Ljava/lang/String :: v172 = v170.toString()::
132363 :: EXPR :: reference :: Ljava/lang/String :: v174 = p0 $this .continuationField::JM,132374
132366 :: EXPR :: reference :: Ljava/lang/String :: v175 = p0 $this .previousContinuationField::JM,132374
132369 :: CALL :: call :: Z :: v177 = v174.equals(v175)::JM,132374
132374 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 629::CD,132378:CD,132383
132375 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .continuationString::JM,132383
132378 :: CALL :: call :: Z :: v180 = v178.equals(#())::JM,132383
132383 :: PRED :: IF :: Z :: if (v180 == #(0)) goto 583::CD,132394:CD,132405:CD,132406:CD,132414:CD,132419
132384 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v129::
132394 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v181, v182)::CL,140336
132399 :: EXPR :: reference :: Ljava/lang/String :: v184 = p0 $this .continuationField::DD,132402
132402 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v184::
132406 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v129)::
132405 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::JM,132423
132414 :: CALL :: call :: Ljava/lang/StringBuilder :: v190 = v185.append(#( ))::JM,132423
132419 :: CALL :: call :: Ljava/lang/String :: v192 = v190.toString()::JM,132423
132423 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v192::
132434 :: CALL :: call :: Z :: v127 = v124.hasMoreTokens()::JM,132438
132438 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 402::CD,132246:CD,132253:CD,132258:CD,132271:CD,132276:CD,132369:CD,132374:CD,132434:JM,132384
132439 :: EXPR :: reference :: Z :: v196 = p0 $this .isLastSourceLine::DD,132442
132442 :: PRED :: IF :: Z :: if (v196 == #(0)) goto 674::CD,132449
132449 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v197, v198)::CL,140336
132458 :: EXPR :: assign :: null :: PHI v65 = p1 $line , v64::
132603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.buildjournalArticle()::JM,141040:JM,141033:CD,132620:CD,132624:CD,132628:CD,132632:CD,132636:CD,132640:CD,132644:CD,132648:CD,132655:CD,133170:CD,133174:CD,133178:CD,133182:CD,133187:CD,133194:CD,133198:CD,133203:CD,133210:CD,133214:CD,133219:JM,141666:JM,141671:JM,141540:JM,141834:JM,141578:JM,141545:JM,141833:JM,141710:JM,141646:JM,141517:JM,141522:JM,141842:JM,141651:JM,141527:JM,141847:JM,141626:JM,141817:JM,141631:JM,141532:CD,133235:CD,133242:CD,133246:CD,133251:CD,133270:CD,133281:CD,133292:CD,133299:CD,133303:CD,133307:CD,133314:CD,133318:CD,133322:CD,133329:CD,133333:CD,133337:CD,133344:CD,133348:CD,133352:CD,133359:CD,133363:CD,133367:CD,133382
132620 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
132624 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v10 = new java.lang.StringBuffer::
132628 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v12 = new java.lang.StringBuffer::
132632 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v14 = new java.lang.StringBuffer::
132636 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v16 = new java.lang.StringBuffer::
132640 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v18 = new java.lang.StringBuffer::
132644 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v20 = new java.lang.StringBuffer::
132648 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v22 = new java.lang.StringBuffer::
132655 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,133174:JM,132664
132652 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .journalLines::JM,133174:JM,132664
132660 :: CALL :: call :: Ljava/lang/Object :: v31 = v26.next()::JM,133174:JM,132664
132664 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::JM,132669:JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815:JM,132992
132665 :: CALL :: call :: I :: v34 = v32.length()::JM,132669
132669 :: PRED :: IF :: Z :: if (v34 >= #(19)) goto 162::CD,132672:CD,132677:CD,132682:CD,132691:CD,132697:CD,132702:CD,132751:CD,132756:CD,132810:CD,132815:CD,132864:CD,132869:CD,132923:CD,132928:CD,132982:CD,132987:JM,133121:JM,133067
132672 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v223 = new java.lang.StringBuilder::
132677 :: CALL :: call :: Ljava/lang/StringBuilder :: v227 = v223.append(v32)::
132682 :: CALL :: call :: Ljava/lang/String :: v229 = v227.toString()::
132691 :: CALL :: call :: Ljava/lang/String :: v39 = v32.substring(#(12), #(16))::JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132697 :: CALL :: call :: Z :: v42 = v39.equals(#(AUTH))::JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132702 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 237::CD,132703:CD,132707:CD,132713:CD,132717:CD,132724:CD,132729:CD,132733:CD,132738:CD,132743:JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132703 :: CALL :: call :: I :: v44 = v32.length()::
132707 :: CALL :: call :: Ljava/lang/String :: v46 = v32.substring(#(19), v44)::
132713 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::
132717 :: CALL :: call :: Ljava/lang/StringBuffer :: v50 = v8.append(v48)::
132724 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
132729 :: CALL :: call :: Ljava/lang/String :: v56 = v8.toString()::
132733 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v52.append(v56)::
132738 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#('))::
132743 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
132751 :: CALL :: call :: Z :: v67 = v39.equals(#(TITL))::JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132756 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 308::CD,132757:CD,132761:CD,132767:CD,132771:CD,132776:CD,132783:CD,132788:CD,132792:CD,132797:CD,132802:JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132757 :: CALL :: call :: I :: v69 = v32.length()::
132761 :: CALL :: call :: Ljava/lang/String :: v71 = v32.substring(#(19), v69)::
132767 :: CALL :: call :: Ljava/lang/String :: v73 = v71.trim()::
132771 :: CALL :: call :: Ljava/lang/StringBuffer :: v75 = v10.append(v73)::
132776 :: CALL :: call :: Ljava/lang/StringBuffer :: v78 = v75.append(#( ))::
132783 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
132788 :: CALL :: call :: Ljava/lang/String :: v84 = v10.toString()::
132792 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v80.append(v84)::
132797 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#('))::
132802 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
132810 :: CALL :: call :: Z :: v94 = v39.equals(#(EDIT))::JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132815 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 373::CD,132816:CD,132820:CD,132826:CD,132830:CD,132837:CD,132842:CD,132846:CD,132851:CD,132856:JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132816 :: CALL :: call :: I :: v96 = v32.length()::
132820 :: CALL :: call :: Ljava/lang/String :: v98 = v32.substring(#(19), v96)::
132826 :: CALL :: call :: Ljava/lang/String :: v100 = v98.trim()::
132830 :: CALL :: call :: Ljava/lang/StringBuffer :: v102 = v12.append(v100)::
132837 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
132842 :: CALL :: call :: Ljava/lang/String :: v108 = v12.toString()::
132846 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(v108)::
132851 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v110.append(#('))::
132856 :: CALL :: call :: Ljava/lang/String :: v114 = v112.toString()::
132864 :: CALL :: call :: Z :: v118 = v39.equals(#(REF ))::JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132870 :: CALL :: call :: I :: v120 = v32.length()::
132869 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 446::CD,132870:CD,132874:CD,132880:CD,132884:CD,132889:CD,132896:CD,132901:CD,132905:CD,132910:CD,132915:JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132874 :: CALL :: call :: Ljava/lang/String :: v122 = v32.substring(#(19), v120)::
132880 :: CALL :: call :: Ljava/lang/String :: v124 = v122.trim()::
132884 :: CALL :: call :: Ljava/lang/StringBuffer :: v126 = v14.append(v124)::
132889 :: CALL :: call :: Ljava/lang/StringBuffer :: v128 = v126.append(#( ))::
132896 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v130 = new java.lang.StringBuilder::
132901 :: CALL :: call :: Ljava/lang/String :: v134 = v14.toString()::
132905 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v130.append(v134)::
132910 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(#('))::
132915 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
132923 :: CALL :: call :: Z :: v144 = v39.equals(#(PUBL))::JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132928 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 519::CD,132929:CD,132933:CD,132939:CD,132943:CD,132948:CD,132955:CD,132960:CD,132964:CD,132969:CD,132974:JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132929 :: CALL :: call :: I :: v146 = v32.length()::
132933 :: CALL :: call :: Ljava/lang/String :: v148 = v32.substring(#(19), v146)::
132939 :: CALL :: call :: Ljava/lang/String :: v150 = v148.trim()::
132943 :: CALL :: call :: Ljava/lang/StringBuffer :: v152 = v16.append(v150)::
132948 :: CALL :: call :: Ljava/lang/StringBuffer :: v154 = v152.append(#( ))::
132955 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v156 = new java.lang.StringBuilder::
132960 :: CALL :: call :: Ljava/lang/String :: v160 = v16.toString()::
132964 :: CALL :: call :: Ljava/lang/StringBuilder :: v162 = v156.append(v160)::
132969 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v162.append(#('))::
132974 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
132982 :: CALL :: call :: Z :: v170 = v39.equals(#(REFN))::JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
132987 :: PRED :: IF :: Z :: if (v170 == #(0)) goto 625::CD,132988:CD,132992:CD,133062:CD,133067:CD,133116:CD,133121:JM,132928:JM,132756:JM,132869:JM,132987:JM,132702:JM,132815
132988 :: CALL :: call :: I :: v172 = v32.length()::JM,132992
132995 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v232 = new java.lang.StringBuilder::
132992 :: PRED :: IF :: Z :: if (v172 >= #(35)) goto 572::CD,132995:CD,133000:CD,133005:CD,133014:CD,133018:CD,133024:CD,133028:CD,133035:CD,133040:CD,133044:CD,133049:CD,133054:CD,133062:CD,133067:CD,133116:CD,133121
133000 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v232.append(v32)::
133005 :: CALL :: call :: Ljava/lang/String :: v238 = v236.toString()::
133014 :: CALL :: call :: I :: v175 = v32.length()::
133018 :: CALL :: call :: Ljava/lang/String :: v177 = v32.substring(#(35), v175)::
133024 :: CALL :: call :: Ljava/lang/String :: v179 = v177.trim()::
133028 :: CALL :: call :: Ljava/lang/StringBuffer :: v181 = v18.append(v179)::
133035 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v183 = new java.lang.StringBuilder::
133040 :: CALL :: call :: Ljava/lang/String :: v187 = v18.toString()::
133044 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v183.append(v187)::
133049 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v189.append(#('))::
133054 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
133062 :: CALL :: call :: Z :: v197 = v39.equals(#(PMID))::JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
133067 :: PRED :: IF :: Z :: if (v197 == #(0)) goto 692::CD,133068:CD,133072:CD,133078:CD,133082:CD,133089:CD,133094:CD,133098:CD,133103:CD,133108:JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
133068 :: CALL :: call :: I :: v199 = v32.length()::
133072 :: CALL :: call :: Ljava/lang/String :: v201 = v32.substring(#(19), v199)::
133078 :: CALL :: call :: Ljava/lang/String :: v203 = v201.trim()::
133082 :: CALL :: call :: Ljava/lang/StringBuffer :: v205 = v20.append(v203)::
133089 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v207 = new java.lang.StringBuilder::
133094 :: CALL :: call :: Ljava/lang/String :: v211 = v20.toString()::
133098 :: CALL :: call :: Ljava/lang/StringBuilder :: v213 = v207.append(v211)::
133103 :: CALL :: call :: Ljava/lang/StringBuilder :: v215 = v213.append(#('))::
133108 :: CALL :: call :: Ljava/lang/String :: v217 = v215.toString()::
133116 :: CALL :: call :: Z :: v221 = v39.equals(#(DOI ))::JM,132928:JM,133121:JM,132756:JM,132869:JM,132987:JM,133067:JM,132702:JM,132815
133122 :: CALL :: call :: I :: v241 = v32.length()::
133121 :: PRED :: IF :: Z :: if (v221 == #(0)) goto 756::CD,133122:CD,133126:CD,133132:CD,133136:CD,133143:CD,133148:CD,133152:CD,133157:CD,133162:JM,133174:JM,132664
133126 :: CALL :: call :: Ljava/lang/String :: v243 = v32.substring(#(19), v241)::
133132 :: CALL :: call :: Ljava/lang/String :: v245 = v243.trim()::
133136 :: CALL :: call :: Ljava/lang/StringBuffer :: v247 = v22.append(v245)::
133143 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v249 = new java.lang.StringBuilder::
133148 :: CALL :: call :: Ljava/lang/String :: v253 = v22.toString()::
133152 :: CALL :: call :: Ljava/lang/StringBuilder :: v255 = v249.append(v253)::
133157 :: CALL :: call :: Ljava/lang/StringBuilder :: v257 = v255.append(#('))::
133162 :: CALL :: call :: Ljava/lang/String :: v259 = v257.toString()::
133170 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,133174:JM,132664
133174 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 107::CD,132660:CD,132664:CD,132665:CD,132669:CD,133170:JM,133174
133178 :: CALL :: call :: Ljava/lang/String :: v263 = v8.toString()::
133182 :: CALL :: call :: Ljava/util/List :: v265 = p0 $this .authorBuilder(v263)::CL,141093
133187 :: CALL :: call :: V :: v261.setAuthorList(v265)::CL,141469
133194 :: CALL :: call :: Ljava/lang/String :: v269 = v12.toString()::
133198 :: CALL :: call :: Ljava/util/List :: v271 = p0 $this .authorBuilder(v269)::CL,141093
133203 :: CALL :: call :: V :: v267.setEditorList(v271)::CL,141480
133210 :: CALL :: call :: Ljava/lang/String :: v275 = v14.toString()::
133214 :: CALL :: call :: V :: v273.setRef(v275)::CL,141491
133219 :: CALL :: call :: Ljava/lang/String :: v279 = v14.toString()::
133235 :: CALL :: call :: V :: v281.setJournalName(v283)::CL,142030
133242 :: CALL :: call :: Ljava/lang/String :: v287 = v285.getJournalName()::JM,133251:CL,142041
133246 :: CALL :: call :: Z :: v290 = v287.equals(#(TO BE PUBLISHED))::JM,133251
133251 :: PRED :: IF :: Z :: if (v290 != #(0)) goto 861::CD,133259
133259 :: CALL :: call :: V :: v291.setIsPublished(v294)::CL,142050
133270 :: CALL :: call :: V :: v296.setVolume(v298)::CL,142075
133281 :: CALL :: call :: V :: v300.setStartPage(v302)::CL,142096
133292 :: CALL :: call :: V :: v304.setPublicationDate(v306)::CL,142117
133299 :: CALL :: call :: Ljava/lang/String :: v310 = v16.toString()::
133303 :: CALL :: call :: Ljava/lang/String :: v312 = v310.trim()::
133307 :: CALL :: call :: V :: v308.setPublisher(v312)::CL,142128
133314 :: CALL :: call :: Ljava/lang/String :: v316 = v10.toString()::
133318 :: CALL :: call :: Ljava/lang/String :: v318 = v316.trim()::
133322 :: CALL :: call :: V :: v314.setTitle(v318)::CL,142139
133329 :: CALL :: call :: Ljava/lang/String :: v322 = v18.toString()::
133333 :: CALL :: call :: Ljava/lang/String :: v324 = v322.trim()::
133337 :: CALL :: call :: V :: v320.setRefn(v324)::CL,142150
133344 :: CALL :: call :: Ljava/lang/String :: v328 = v20.toString()::
133348 :: CALL :: call :: Ljava/lang/String :: v330 = v328.trim()::
133352 :: CALL :: call :: V :: v326.setPmid(v330)::CL,142161
133359 :: CALL :: call :: Ljava/lang/String :: v334 = v22.toString()::
133363 :: CALL :: call :: Ljava/lang/String :: v336 = v334.trim()::
133367 :: CALL :: call :: V :: v332.setDoi(v336)::CL,142172
133382 :: CALL :: call :: Ljava/lang/String :: v344 = v342.toString()::CL,142183
133567 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setJournalArticle(org.biojava.nbio.structure.JournalArticle)::JM,133572
133572 :: EXPR :: modify :: Lorg/biojava/nbio/structure/JournalArticle :: p0 $this .journalArticle = p1 $journalArticle ::
133578 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::CD,133586
133586 :: CALL :: call :: V :: v4.setCrystallographicInfo(p1 $crystallographicInfo )::CL,142581
133593 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setConnections(java.util.List)::JM,133598
133598 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = p1 $conns ::
133626 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.align(org.biojava.nbio.structure.Structure,java.util.List)::CD,133632:CD,133637:CD,133659:CD,133663
133632 :: CALL :: call :: Ljava/util/List :: v7 = p1 $s .getModel(#(0))::CL,51721
133637 :: CALL :: call :: Ljava/util/Iterator :: v9 = p2 $seqResList .iterator()::JM,133663
133642 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,133663
133647 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v16 = getMatchingAtomRes(v14, v7)::JM,133652:CL,112783
133654 :: CALL :: call :: V :: p0 $this .mapSeqresRecords(v16, v14)::CL,142592
133652 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 52::CD,133654
133659 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,133663
133663 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 21::CD,133642:CD,133647:CD,133652:CD,133659:JM,133663
133682 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkChains2Compound(org.biojava.nbio.structure.Structure)::CD,133690:CD,133775:CD,133779:CD,133783:CD,133787:CD,133837:CD,133921:CD,133925:CD,133929
133687 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,133779
133690 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,133779
133695 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,133779
133700 :: NORM :: declaration :: Ljava/util/ArrayList :: v13 = new java.util.ArrayList::
133707 :: CALL :: call :: I :: v17 = v12.getMolId()::CL,103739
133711 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
133715 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v19)::JM,133720
133723 :: CALL :: call :: Ljava/util/Iterator :: v25 = v22.iterator()::JM,133770
133720 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,133721:JM,133770
133721 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 61::CD,133723:CD,133766:CD,133770:CD,133771
133728 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,133770
133739 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p1 $s .findChain(v35)::CL,142871
133744 :: CALL :: call :: Z :: v39 = v13.add(v37)::
133766 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,133770
133770 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 73::CD,133728:CD,133739:CD,133744:CD,133766:JM,133770
133771 :: CALL :: call :: V :: v12.setChains(v13)::CL,142886
133775 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,133779
133779 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,133695:CD,133700:CD,133707:CD,133711:CD,133715:CD,133720:CD,133721:CD,133775:JM,133779
133783 :: CALL :: call :: I :: v53 = v51.size()::JM,133787
133780 :: EXPR :: reference :: Ljava/util/List :: v51 = p0 $this .compounds::JM,133787
133787 :: PRED :: IF :: Z :: if (v53 != #(1)) goto 250::CD,133791:CD,133800:CD,133804:CD,133808:CD,133813
133791 :: CALL :: call :: Ljava/lang/Object :: v57 = v55.get(#(0))::
133788 :: EXPR :: reference :: Ljava/util/List :: v55 = p0 $this .compounds::
133800 :: CALL :: call :: I :: v61 = v58.getMolId()::CL,103739
133804 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v61)::
133808 :: CALL :: call :: Ljava/lang/Object :: v65 = v59.get(v63)::JM,133813
133814 :: CALL :: call :: Ljava/util/List :: v67 = p1 $s .getChains(#(0))::JM,133823:CL,74604
133813 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 250::CD,133814:CD,133819:CD,133823
133819 :: CALL :: call :: I :: v69 = v67.size()::JM,133823
133823 :: PRED :: IF :: Z :: if (v69 != #(1)) goto 250::CD,133824:CD,133830:JM,133823
133824 :: CALL :: call :: Ljava/lang/Object :: v71 = v67.get(#(0))::JM,133823
133830 :: CALL :: call :: V :: v58.addChain(v72)::CL,103385
133834 :: EXPR :: reference :: Ljava/util/List :: v76 = p0 $this .compounds::JM,133925
133837 :: CALL :: call :: Ljava/util/Iterator :: v78 = v76.iterator()::JM,133925
133842 :: CALL :: call :: Ljava/lang/Object :: v82 = v78.next()::JM,133925
133850 :: CALL :: call :: I :: v86 = v83.getMolId()::CL,103739
133854 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v86)::
133858 :: CALL :: call :: Ljava/lang/Object :: v90 = v84.get(v88)::JM,133863
133863 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 293::CD,133868:CD,133872:CD,133876:CD,133881:CD,133882:CD,133916:CD,133920
133868 :: CALL :: call :: I :: v93 = v83.getMolId()::CL,103739
133872 :: CALL :: call :: Ljava/lang/Integer :: v95 = valueOf(v93)::
133876 :: CALL :: call :: Ljava/lang/Object :: v97 = v91.get(v95)::JM,133881
133882 :: CALL :: call :: Ljava/util/Iterator :: v100 = v98.iterator()::JM,133891:JM,133920
133881 :: EXPR :: assign :: Ljava/lang/Object :: v98 = CHECKCAST v97::JM,133891:JM,133920
133887 :: CALL :: call :: Ljava/lang/Object :: v105 = v100.next()::JM,133891:JM,133920
133891 :: EXPR :: assign :: Ljava/lang/Object :: v106 = CHECKCAST v105::JM,133897
133892 :: CALL :: call :: Z :: v108 = v106.equals(#(NULL))::JM,133897
133899 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v110 = p1 $s .getChainByPDB(v106)::CL,97216
133897 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 348::CD,133899:CD,133904
133904 :: CALL :: call :: V :: v110.setCompound(v83)::CL,74582
133916 :: CALL :: call :: Z :: v102 = v100.hasNext()::JM,133891:JM,133920
133920 :: PRED :: IF :: Z :: if (v102 != #(0)) goto 321::CD,133887:CD,133891:CD,133892:CD,133897:CD,133916:JM,133920:JM,133925
133921 :: CALL :: call :: Z :: v80 = v78.hasNext()::JM,133925
133926 :: EXPR :: reference :: Ljava/util/List :: v118 = p0 $this .compounds::DD,133929
133925 :: PRED :: IF :: Z :: if (v80 != #(0)) goto 263::CD,133842:CD,133850:CD,133854:CD,133858:CD,133863:CD,133921:JM,133925
133930 :: EXPR :: reference :: Ljava/util/List :: v119 = p0 $this .compounds::JM,133937
133929 :: PRED :: IF :: Z :: if (v118 == #(null)) goto 536::CD,133933:CD,133937
133933 :: CALL :: call :: Z :: v121 = v119.isEmpty()::JM,133937
133938 :: CALL :: call :: Ljava/util/List :: v123 = p1 $s .getChains()::JM,134013:CL,45114
133937 :: PRED :: IF :: Z :: if (v121 != #(0)) goto 536::CD,133938:CD,133942:CD,134009:CD,134013
133942 :: CALL :: call :: Ljava/util/Iterator :: v125 = v123.iterator()::JM,134013
133947 :: CALL :: call :: Ljava/lang/Object :: v129 = v125.next()::JM,134013
133952 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v132 = v130.getCompound()::JM,133956:CL,142897
133956 :: PRED :: IF :: Z :: if (v132 != #(null)) goto 528::CF,133957:JM,103281:JM,103274:CD,133961:CD,133968:CD,133973:CD,133977:CD,133984:CD,133995:CD,133999:JM,134013
133957 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v134 = new org.biojava.nbio.structure.Compound::
133961 :: CALL :: call :: V :: v134.addChain(v130)::CL,103385
133968 :: CALL :: call :: I :: v139 = findMaxCompoundId(v137)::CL,142906
133973 :: CALL :: call :: V :: v134.setMolId(v140)::CL,103402
133977 :: CALL :: call :: V :: v130.setCompound(v134)::CL,74582
133981 :: EXPR :: reference :: Ljava/util/List :: v143 = p0 $this .compounds::
133984 :: CALL :: call :: Z :: v145 = v143.add(v134)::
133995 :: CALL :: call :: I :: v151 = v134.getMolId()::CL,103739
133999 :: CALL :: call :: Ljava/lang/Integer :: v153 = valueOf(v151)::
134009 :: CALL :: call :: Z :: v127 = v125.hasNext()::JM,134013
134013 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 435::CD,133947:CD,133952:CD,133956:CD,134009:JM,134013
134119 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkSitesToGroups()::CD,134126:CD,134327:CD,134332:CD,134337:CD,134342:CD,134347:CD,134355:CD,134360:CD,134365
134123 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .siteMap::DD,134126
134126 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 14::CD,134130
134127 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .siteToResidueMap::DD,134130
134130 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 29::CD,134141:CD,134145:CD,134149
134141 :: CALL :: call :: Ljava/util/List :: v8 = v6.getChains()::JM,134149:CL,45114
134145 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,134149
134150 :: NORM :: declaration :: Ljava/util/ArrayList :: v119 = new java.util.ArrayList::
134151 :: EXPR :: reference :: Ljava/util/Map :: v120 = p0 $this .siteMap::
134149 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 75::CF,134150:CD,134154:CD,134172:CD,134179:CD,134183:CD,134188:CD,134263:CD,134267:CD,134388:CD,134392:CD,134393:CD,134397:CD,134408
134154 :: CALL :: call :: Ljava/util/Collection :: v122 = v120.values()::
134169 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .siteMap::
134172 :: CALL :: call :: Ljava/util/Set :: v14 = v12.keySet()::
134179 :: CALL :: call :: Ljava/util/Set :: v17 = v15.keySet()::
134176 :: EXPR :: reference :: Ljava/util/Map :: v15 = p0 $this .siteToResidueMap::
134183 :: CALL :: call :: Z :: v19 = v14.equals(v17)::JM,134188
134191 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
134188 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 183::CD,134191:CD,134199:CD,134204:CD,134209:CD,134219:CD,134226:CD,134230:CD,134235:CD,134243:CD,134247:CD,134252
134199 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v21.append(v24)::
134196 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .pdbId::
134204 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#( header - some Sites ...))::
134209 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
134219 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
134223 :: EXPR :: reference :: Ljava/util/Map :: v36 = p0 $this .siteMap::
134226 :: CALL :: call :: Ljava/util/Set :: v38 = v36.keySet()::
134230 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v34.append(v38)::
134235 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v40.append(#( | ))::
134243 :: CALL :: call :: Ljava/util/Set :: v46 = v44.keySet()::
134240 :: EXPR :: reference :: Ljava/util/Map :: v44 = p0 $this .siteToResidueMap::
134247 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v43.append(v46)::
134252 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
134263 :: CALL :: call :: Ljava/util/Set :: v54 = v52.keySet()::JM,134392
134260 :: EXPR :: reference :: Ljava/util/Map :: v52 = p0 $this .siteMap::JM,134392
134267 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,134392
134272 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,134392
134280 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::
134289 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.get(v61)::JM,134294
134294 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,134295:JM,134387
134295 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 250::CD,134297:CD,134383:CD,134387
134297 :: CALL :: call :: Ljava/util/Iterator :: v71 = v69.iterator()::JM,134387
134302 :: CALL :: call :: Ljava/lang/Object :: v75 = v71.next()::JM,134387
134307 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::CL,74617
134311 :: CALL :: call :: Ljava/lang/String :: v80 = v76.getChainId()::CL,112382
134318 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v83 = v81.findGroup(v80, v78)::CL,142927
134327 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v86 = new java.lang.StringBuilder::
134332 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v86.append(v78)::
134337 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(#( in chain ))::
134342 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(v80)::
134347 :: CALL :: call :: Ljava/lang/StringBuilder :: v98 = v95.append(#( in order to link up ...))::
134355 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v99)::
134352 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .pdbId::
134360 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#()))::
134365 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
134374 :: CALL :: call :: Ljava/util/List :: v109 = v65.getGroups()::CL,114107
134378 :: CALL :: call :: Z :: v111 = v109.add(v83)::
134383 :: CALL :: call :: Z :: v73 = v71.hasNext()::JM,134387
134387 :: PRED :: IF :: Z :: if (v73 != #(0)) goto 262::CD,134302:CD,134307:CD,134311:CD,134318:CD,134374:CD,134378:CD,134383:JM,134387:JM,134392
134388 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,134392
134394 :: EXPR :: reference :: Ljava/util/Map :: v113 = p0 $this .siteMap::
134392 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 201::CF,134393:CD,134272:CD,134280:CD,134289:CD,134294:CD,134295:CD,134388:JM,134392
134393 :: NORM :: declaration :: Ljava/util/ArrayList :: v112 = new java.util.ArrayList::
134397 :: CALL :: call :: Ljava/util/Collection :: v115 = v113.values()::
134408 :: CALL :: call :: V :: v117.setSites(v112)::CL,63152
134486 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formLinkRecordBond(org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord)::CD,134491:CD,134495:CD,134500:CD,134598
134491 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $linkRecord .getAltLoc1()::JM,134500:CL,142945
134495 :: CALL :: call :: Z :: v8 = v5.equals(#( ))::JM,134500
134500 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,134501:CD,134505:CD,134510
134501 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $linkRecord .getAltLoc2()::JM,134510:CL,142954
134505 :: CALL :: call :: Z :: v13 = v11.equals(#( ))::JM,134510
134510 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 29::CD,134536:CD,134570:JM,138530:JM,138521:JM,138527:JM,138524
134536 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v27 = p0 $this .getAtomFromRecord(v15, v17, v19, v21, v23, v25)::CL,128708
134570 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v41 = p0 $this .getAtomFromRecord(v29, v31, v33, v35, v37, v39)::CL,128708
134598 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $linkRecord .toString()::CL,143053
134642 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBonds(java.util.List)::CD,134647:CD,134651:CD,134672:CD,134676:CD,134680
134647 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
134651 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $disulfideBonds .iterator()::JM,134676
134656 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,134676
134661 :: CALL :: call :: Lorg/biojava/nbio/structure/Bond :: v15 = p0 $this .formDisulfideBond(v13)::JM,134666:CL,143571
134666 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 53::CD,134667:JM,134676
134667 :: CALL :: call :: Z :: v18 = v4.add(v15)::
134672 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,134676
134676 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,134656:CD,134661:CD,134666:CD,134672:JM,134676
134680 :: CALL :: call :: V :: v19.setSSBonds(v4)::CL,63132
134703 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecElement(java.util.List,java.lang.String,org.biojava.nbio.structure.secstruc.SecStrucType)::CD,134710:CD,134893:CD,134897
134710 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $secList .iterator()::JM,134897
134715 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,134897
134720 :: CALL :: call :: Ljava/lang/Object :: v16 = v13.get(#(initChainId))::JM,134725
134726 :: CALL :: call :: Ljava/lang/Object :: v20 = v13.get(#(initSeqNum))::
134725 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,134794
134732 :: CALL :: call :: Ljava/lang/Object :: v24 = v13.get(#(initICode))::JM,134737
134738 :: CALL :: call :: Ljava/lang/Object :: v28 = v13.get(#(endChainId))::JM,134743
134737 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,134761:DD,134899
134743 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::JM,134854
134744 :: CALL :: call :: Ljava/lang/Object :: v32 = v13.get(#(endSeqNum))::
134750 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(endICode))::JM,134755
134755 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::JM,134767:DD,134900:JM,134761
134756 :: CALL :: call :: Z :: v40 = v25.equals(#( ))::JM,134761
134762 :: CALL :: call :: Z :: v44 = v37.equals(#( ))::JM,134767
134761 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 134::CF,134899
134767 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 145::CF,134900
134777 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = v46.next()::CL,135011
134785 :: CALL :: call :: Ljava/lang/String :: v56 = v54.getChainID()::JM,134794:CL,63330
134789 :: CALL :: call :: Z :: v58 = v56.equals(v17)::JM,134794
134794 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 240::CF,134901:CF,134795:CD,134796:CD,134804:CD,134809:CD,134817:CD,134821:CD,134826
134795 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,134826
134796 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v21)::
134804 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v42)::JM,134826
134809 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,134826
134817 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::JM,134826:CL,74617
134821 :: CALL :: call :: Z :: v72 = v70.equals(v66)::JM,134826
134826 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 240::CF,134901
134827 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 280::CD,134828:CD,134832
134828 :: CALL :: call :: Z :: v76 = v52.hasAminoAtoms()::JM,134832:CL,135038
134832 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 280::JM,135111:JM,135108:CD,134840
134840 :: CALL :: call :: V :: v52.setProperty(#(secstruc), v77)::CL,135125
134845 :: CALL :: call :: Ljava/lang/String :: v82 = v54.getChainID()::JM,134854:CL,63330
134849 :: CALL :: call :: Z :: v84 = v82.equals(v29)::JM,134854
134854 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 341::CF,134902:CF,134855:CD,134856:CD,134864:CD,134869:CD,134877:CD,134881:CD,134886:CD,134888:CD,134892
134855 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::JM,134886
134856 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v33)::
134864 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v45)::JM,134886
134869 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,134886
134877 :: CALL :: call :: Ljava/lang/String :: v96 = v94.toString()::JM,134886:CL,74617
134881 :: CALL :: call :: Z :: v98 = v92.equals(v96)::JM,134886
134886 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 341::CF,134902:CD,134888:CD,134892
134888 :: CALL :: call :: Z :: v50 = v46.hasNext()::JM,134892:CL,135145
134892 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 166::CD,134777:CD,134785:CD,134789:CD,134794:CD,134827:CD,134845:CD,134849:CD,134854:CD,134901:CD,134902:JM,134897
134893 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,134897
134899 :: EXPR :: assign :: null :: PHI v42 = v25, #()::JM,134826:JM,134767
134897 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 13::CD,134715:CD,134720:CD,134725:CD,134726:CD,134732:CD,134737:CD,134738:CD,134743:CD,134744:CD,134750:CD,134755:CD,134756:CD,134761:CD,134762:CD,134767:CD,134888:CD,134892:CD,134893:CD,134899:CD,134900:CD,134902:JM,134897
134902 :: EXPR :: assign :: null :: PHI v99 = #(0), v74, v74::DD,134901
134900 :: EXPR :: assign :: null :: PHI v45 = v37, #()::JM,134886
134901 :: EXPR :: assign :: null :: PHI v74 = v99, v99, #(1)::DD,134827:DD,134902
135011 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.next()::CD,135025
135025 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v9 = p0 $this .getNextGroup(v3, v4, v7)::CL,143688
135038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::CE,135039:CD,135042:CD,135047
135039 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::JM,123614:JM,134832
135042 :: CALL :: call :: Z :: v5 = p0 $this .hasAtom(#(CA))::JM,135047:CL,45135
135047 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 43::CD,135048:CD,135053:CD,135067
135048 :: CALL :: call :: Z :: v9 = p0 $this .hasAtom(#(C))::JM,135053:CL,45135
135054 :: CALL :: call :: Z :: v12 = p0 $this .hasAtom(#(N))::JM,135059:CL,45135
135053 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 43::CD,135054:CD,135059:CD,135067
135059 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 43::CD,135060:CD,135065:CD,135067
135060 :: CALL :: call :: Z :: v15 = p0 $this .hasAtom(#(O))::JM,135065:CL,45135
135066 :: NORM :: compound :: Z :: return #(1)::DD,135039
135067 :: NORM :: compound :: Z :: return #(0)::DD,135039
135065 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 43::CD,135066:CD,135067
135082 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::CE,135083:CD,135090:CD,135095
135083 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::JM,123620
135090 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $key )::JM,135095
135095 :: NORM :: compound :: Ljava/lang/Object :: return v6::DD,135083
135111 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .assignment = p2 $ass ::
135108 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: p0 $this .type = p3 $t ::
135125 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setProperty(java.lang.String,java.lang.Object)::CD,135134
135134 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.put(p1 $key , p2 $value )::
135146 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasNext()::JM,123639:JM,134892
135145 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasNext()::CE,135146:CD,135159:CD,135166
135159 :: CALL :: call :: Z :: v9 = p0 $this .hasSubGroup(v3, v4, v7)::JM,135166:CL,143799
135166 :: NORM :: compound :: Z :: return v9::DD,135146
135172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.orderTransformationsByChainId(org.biojava.nbio.structure.Structure,java.util.List)::CD,135178:CD,135189
135178 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChainIds(p1 $asymUnit )::CL,143885
135189 :: CALL :: call :: V :: sort(p2 $transformations , v7)::
135201 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.addChainAndModel(org.biojava.nbio.structure.Structure,org.biojava.nbio.structure.Chain,java.lang.String)::CD,135211:CD,135215:CD,135227:CD,135232:CD,135249:CD,135281:JM,135255:JM,135259
135211 :: CALL :: call :: I :: v8 = v6.size()::JM,135215
135208 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .modelIndex::JM,135215
135215 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 25::CD,135219
135219 :: CALL :: call :: Z :: v13 = v10.add(#(PLACEHOLDER FOR ASYM UNIT))::
135216 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .modelIndex::
135227 :: CALL :: call :: I :: v16 = v14.indexOf(p3 $modelId )::JM,135232:JM,135281:JM,135259
135224 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .modelIndex::JM,135232:JM,135281
135232 :: PRED :: IF :: Z :: if (v16 != #(-1)) goto 67::CF,135281:CD,135236:CD,135244
135233 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .modelIndex::
135236 :: CALL :: call :: Z :: v20 = v18.add(p3 $modelId )::JM,135232:JM,135281:JM,135259
135241 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .modelIndex::JM,135281
135244 :: CALL :: call :: I :: v23 = v21.indexOf(p3 $modelId )::JM,135281:JM,135232:JM,135259
135249 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 83::CD,135255:CD,135259:JM,135232:JM,135281
135255 :: CALL :: call :: I :: v26 = p1 $s .nrModels()::JM,135232:JM,135281:JM,135255:JM,135259
135259 :: PRED :: IF :: Z :: if (v24 <= v26) goto 125::CF,135260:CD,135264
135260 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::
135264 :: CALL :: call :: Z :: v33 = v30.add(p2 $newChain )::JM,135232:JM,135281:JM,135255:JM,135259
135281 :: EXPR :: assign :: null :: PHI v24 = v16, v23::DD,135249:DD,135259
135314 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.isMetal()::CE,135315:CD,135321
135315 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ElementType.isMetal()::JM,123987
135318 :: EXPR :: reference :: Z :: v3 = p0 $this .metal::DD,135321
135323 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::CE,135324:CD,135329:CD,135334:CD,135340:CD,135345:CD,135351:CD,135356:CD,135360:CD,135376:CD,135380:CD,135381:CD,135382:CD,135383:CD,135384:CD,135385:CD,135386:CD,135387:CD,135388:CD,135505
135321 :: NORM :: compound :: Z :: return v3::CF,135315
135324 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::JM,124026
135329 :: CALL :: call :: Ljava/util/List :: v5 = p1 $c .getAtomGroups(v3)::JM,135408:JM,135382:JM,135477:JM,135384:JM,135416:CL,124033
135334 :: CALL :: call :: I :: v7 = v5.size()::JM,135408:JM,135382:JM,135477:JM,135384:JM,135416
135340 :: CALL :: call :: Ljava/util/List :: v10 = p1 $c .getAtomGroups(v8)::JM,135392:JM,135408:JM,135488:JM,135409:JM,135382:CL,124033
135345 :: CALL :: call :: I :: v12 = v10.size()::JM,135392:JM,135408:JM,135488:JM,135409:JM,135382
135351 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c .getAtomGroups(v13)::JM,135380:JM,135381:CL,124033
135356 :: CALL :: call :: I :: v17 = v15.size()::JM,135380:JM,135381
135360 :: CALL :: call :: Ljava/util/Iterator :: v20 = v15.iterator()::JM,135380:JM,135381
135365 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,135380
135370 :: CALL :: call :: Z :: v27 = v25.isWater()::JM,135374:CL,123914
135374 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 89::CF,135505:CD,135375
135375 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,135505
135376 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,135380
135382 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v7 + v12::DD,135383
135383 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v32 + v31::DD,135385:DD,135393:DD,135401:DD,135478:DD,135489:CF,135384
135380 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 64::CD,135365:CD,135370:CD,135374:CD,135376:CD,135505:JM,135380:CF,135381
135381 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v17 - v30::DD,135383:DD,135400:DD,135409:DD,135416:CF,135382
135386 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 / v35::DD,135387
135387 :: EXPR :: assign :: Z :: v38 = v36 < #(0.95 d)::DD,135388
135384 :: EXPR :: assign :: D :: v34 = CONVERT I to D v7::DD,135386:CF,135385
135385 :: EXPR :: assign :: D :: v35 = CONVERT I to D v33::CF,135386
135391 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v88::DD,135324
135388 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 130::CD,135389:CD,135391:CD,135392:CD,135393:CD,135394:CD,135395:CD,135396
135389 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v88 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,135391
135394 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v39 / v40::DD,135395
135395 :: EXPR :: assign :: Z :: v42 = v41 < #(0.95 d)::DD,135396
135392 :: EXPR :: assign :: D :: v39 = CONVERT I to D v12::DD,135394:CF,135393
135393 :: EXPR :: assign :: D :: v40 = CONVERT I to D v33::CF,135394
135399 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v87::DD,135324
135396 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CD,135397:CD,135399:CD,135400:CD,135401:CD,135402:CD,135403:CD,135404
135397 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v87 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,135399
135402 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v43 / v44::DD,135403
135403 :: EXPR :: assign :: Z :: v46 = v45 < #(0.95 d)::DD,135404
135400 :: EXPR :: assign :: D :: v43 = CONVERT I to D v31::DD,135402:CF,135401
135401 :: EXPR :: assign :: D :: v44 = CONVERT I to D v33::CF,135402
135407 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v86::DD,135324
135404 :: PRED :: IF :: Z :: if (v46 <= #(0)) goto 166::CD,135405:CD,135407:CD,135408:CD,135433:CD,135445:CD,135453:CD,135461:CD,135469:CD,135477:CD,135478:CD,135479:CD,135480:CD,135488:CD,135489:CD,135490:CD,135491:CD,135504:CD,135506
135405 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v86 = org.biojava.nbio.structure.GroupType.HETATM::CF,135407
135410 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v50 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,135506
135408 :: PRED :: IF :: Z :: if (v12 <= v7) goto 194::CD,135409:CD,135416
135409 :: PRED :: IF :: Z :: if (v12 <= v31) goto 183::CD,135410:CD,135413:CD,135506
135413 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v49 = org.biojava.nbio.structure.GroupType.HETATM::DD,135506
135416 :: PRED :: IF :: Z :: if (v7 <= v31) goto 205::CD,135417:CD,135420:CD,135506
135417 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v48 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,135506
135420 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v47 = org.biojava.nbio.structure.GroupType.HETATM::DD,135506
135433 :: CALL :: call :: Ljava/lang/Double :: v59 = valueOf(#(0.95 d))::JM,135433
135445 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v7)::JM,135477
135453 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v12)::JM,135488
135461 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v31)::
135469 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v30)::
135478 :: EXPR :: assign :: D :: v75 = CONVERT I to D v33::CF,135479
135479 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v74 / v75::JM,135480
135477 :: EXPR :: assign :: D :: v74 = CONVERT I to D v7::DD,135479:CF,135478
135480 :: CALL :: call :: Ljava/lang/Double :: v78 = valueOf(v76)::JM,135480
135490 :: EXPR :: assign :: Ljava/lang/Object :: v82 = v80 / v81::JM,135491
135491 :: CALL :: call :: Ljava/lang/Double :: v84 = valueOf(v82)::JM,135491
135488 :: EXPR :: assign :: D :: v80 = CONVERT I to D v12::DD,135490:CF,135489
135489 :: EXPR :: assign :: D :: v81 = CONVERT I to D v33::CF,135490
135506 :: EXPR :: assign :: null :: PHI v51 = v50, v49, v48, v47::DD,135504
135504 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v51::DD,135324
135505 :: EXPR :: assign :: null :: PHI v30 = #(0), v30, v29::JM,135380:DD,135375:DD,135381:DD,135505
135592 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,135598:CD,135599:CD,135607:CD,135611
135598 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,135598
135599 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,135598:CL,103739
135607 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,103739
135611 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
135624 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,135630:CD,135631:CD,135639:CD,135643
135630 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,135630
135631 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,135630:CL,103739
135639 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,103739
135643 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
135656 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.multiple.BlockImpl.clone()::CE,135657:CD,135660:JM,144046:CD,135665
135657 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/multiple/Block :: org.biojava.nbio.structure.align.multiple.BlockImpl.clone()::
135660 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/multiple/BlockImpl :: v3 = new org.biojava.nbio.structure.align.multiple.BlockImpl::DD,135665
135665 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/multiple/Block :: return v3::DD,135657
135679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.values()::CF,135680:CD,135682:CD,135684:CD,135685:CD,135693
135682 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/GroupType :: v2 = org.biojava.nbio.structure.GroupType.ENUM$VALUES::DD,135684
135680 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.values()::JM,124537
135684 :: EXPR :: assign :: I :: v4 = v2.length::DD,135685
135685 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/GroupType :: v5 = new org.biojava.nbio.structure.GroupType[]::DD,135693
135693 :: NORM :: compound :: [Lorg/biojava/nbio/structure/GroupType :: return v5::CF,135680
135991 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::CE,135992:CD,135995:CD,135996:CD,136001:CD,136005:CD,136029:CD,136040:CD,136045:CD,136101:CD,136102:CD,136106:CD,136107:CD,136112:CD,136208:CD,136212:CD,136222:CD,136225:CD,136239:CD,136242:CD,136256:CD,136263:CD,136264
135995 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,136113:DD,136257:CF,135996
135992 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::JM,124899:JM,124894:JM,125761:JM,125856:JM,125767
135996 :: EXPR :: assign :: I :: v4 = p1 $pdbIDs .length::
136001 :: CALL :: call :: Ljava/lang/String :: v8 = getProperty(#(PDB.SERVER))::JM,136001:JM,136005
136005 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 26::CD,136018
136018 :: CALL :: call :: Ljava/lang/String :: v17 = format(#(Got System property %s=%s), v13)::
136029 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v135 = new java.lang.IllegalArgumentException::
136040 :: CALL :: call :: Ljava/lang/String :: v25 = format(#(http://%s/pdb/rest/id...), v23)::JM,136263
136045 :: EXPR :: assign :: I :: v26 = p1 $pdbIDs .length::DD,136101
136051 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toUpperCase()::JM,136070:JM,136262:JM,136062
136055 :: EXPR :: reference :: Ljava/util/Map :: v30 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,136062
136057 :: CALL :: call :: Z :: v32 = v30.containsKey(v29)::JM,136062:JM,136070:JM,136262
136062 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 148::CF,136077:CD,136063:CD,136065:CD,136070:CD,136071:CD,136078:CD,136086:CD,136091:CD,136096:CD,136262
136063 :: EXPR :: reference :: Ljava/util/Map :: v33 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,136070
136065 :: CALL :: call :: Ljava/lang/Object :: v35 = v33.get(v29)::JM,136070:JM,136262:JM,136062
136070 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::
136071 :: CALL :: call :: Z :: v38 = v3.add(v36)::
136078 :: CALL :: call :: Ljava/lang/String :: v41 = valueOf(v52)::
136077 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v39 = new java.lang.StringBuilder::JM,136262
136086 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v39.append(v29)::JM,136262:JM,136070:JM,136062
136091 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#(,))::JM,136262
136096 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::JM,136262
136102 :: CALL :: call :: I :: v55 = v52.length()::JM,136106
136100 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v53 + #(1)::DD,136264:CF,136263
136101 :: PRED :: IF :: Z :: if (v53 < v26) goto 102::CD,136051:CD,136055:CD,136057:CD,136062:CD,136100:CD,136262:CD,136263:CD,136264:JM,136106
136106 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v55 - #(1)::JM,136112
136107 :: CALL :: call :: C :: v58 = v52.charAt(v56)::JM,136112
136112 :: PRED :: IF :: Z :: if (v58 != #(61)) goto 201::CD,136113:CD,136146:CD,136158:CD,136162:CD,136191:CD,136195:CD,136196:CD,136200:CD,136257
136113 :: NORM :: compound :: Ljava/util/List :: return v3::DD,135992
136146 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$PDBStatusXMLHandler :: v75 = new org.biojava.nbio.structure.PDBStatus$PDBStatusXMLHandler::JM,136162:JM,136195:JM,136167:JM,136171:JM,136158:JM,136191:JM,136196
136158 :: CALL :: call :: Ljava/util/List :: v80 = v75.getRecords()::JM,136162:JM,136195:JM,136167:JM,136171:JM,136158:JM,136191
136162 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,136162:JM,136195:JM,136167:JM,136171:JM,136191
136167 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,136195:JM,136167:JM,136171:JM,136191
136171 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,136177:JM,136172
136172 :: CALL :: call :: Ljava/lang/Object :: v90 = v87.get(#(structureId))::JM,136177:JM,136172
136178 :: CALL :: call :: Ljava/lang/String :: v93 = v91.toUpperCase()::JM,136178:JM,136182
136177 :: EXPR :: assign :: Ljava/lang/Object :: v91 = CHECKCAST v90::JM,136178:JM,136182
136182 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 355::CD,136183:CD,136185:JM,136195:JM,136167:JM,136171:JM,136191
136183 :: EXPR :: reference :: Ljava/util/Map :: v94 = org.biojava.nbio.structure.PDBStatus.recordsCache::
136185 :: CALL :: call :: Ljava/lang/Object :: v96 = v94.put(v93, v87)::
136191 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,136195:JM,136167:JM,136171:JM,136191
136195 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 308::CD,136167:CD,136171:CD,136172:CD,136177:CD,136178:CD,136182:CD,136191:JM,136195:JM,136196
136196 :: CALL :: call :: Ljava/util/List :: v98 = v75.getRecords()::JM,136196
136200 :: CALL :: call :: Z :: v112 = v3.addAll(v98)::
136208 :: CALL :: call :: Ljava/lang/String :: v107 = toString(p1 $pdbIDs )::
136212 :: CALL :: call :: Ljava/lang/String :: v109 = v99.getMessage()::
136222 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,135992
136225 :: CALL :: call :: Ljava/lang/String :: v131 = toString(p1 $pdbIDs )::
136239 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,135992
136242 :: CALL :: call :: Ljava/lang/String :: v120 = toString(p1 $pdbIDs )::
136256 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,135992
136257 :: NORM :: compound :: Ljava/util/List :: return v3::DD,135992
136262 :: EXPR :: assign :: null :: PHI v50 = v52, v49::DD,136263:CF,136100
136263 :: EXPR :: assign :: null :: PHI v52 = v25, v50::CF,136264:JM,136106:JM,136112:DD,136262
136264 :: EXPR :: assign :: null :: PHI v53 = #(0), v51::DD,136100:DD,136101
136362 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::JM,124954:JM,125877
136361 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::CE,136362:CD,136365:CD,136369:CD,136374:CD,136486:CD,136487:CD,136492:CD,136497:CD,136502:CD,136511:CD,136512
136365 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $statusStr .toUpperCase()::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136369 :: CALL :: call :: Z :: v7 = v4.equalsIgnoreCase(#(OBSOLETE))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136374 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 24::CD,136375:CD,136378:CD,136383:CD,136512:JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136428
136375 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v69 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,136512
136378 :: CALL :: call :: Z :: v11 = v4.equalsIgnoreCase(#(CURRENT))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136383 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 40::CD,136384:CD,136387:CD,136392:CD,136512:JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136473:JM,136446:JM,136383:JM,136428
136387 :: CALL :: call :: Z :: v14 = v4.equalsIgnoreCase(#(AUTH))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136384 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,136512
136392 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,136393:CD,136396:CD,136401:CD,136512:JM,136419:JM,136464:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136393 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,136512
136396 :: CALL :: call :: Z :: v17 = v4.equalsIgnoreCase(#(HOLD))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136402 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,136512
136401 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 72::CD,136402:CD,136405:CD,136410:CD,136512:JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136405 :: CALL :: call :: Z :: v20 = v4.equalsIgnoreCase(#(HPUB))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136410 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 88::CD,136411:CD,136414:CD,136419:CD,136512:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136411 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,136512
136414 :: CALL :: call :: Z :: v23 = v4.equalsIgnoreCase(#(POLC))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136419 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 104::CD,136420:CD,136423:CD,136428:CD,136512:JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383
136423 :: CALL :: call :: Z :: v26 = v4.equalsIgnoreCase(#(PROC))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136420 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,136512
136428 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 120::CD,136429:CD,136432:CD,136437:CD,136512:JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136429 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,136512
136432 :: CALL :: call :: Z :: v29 = v4.equalsIgnoreCase(#(REFI))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136438 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,136512
136437 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 136::CD,136438:CD,136441:CD,136446:CD,136512:JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136383:JM,136428
136441 :: CALL :: call :: Z :: v32 = v4.equalsIgnoreCase(#(REPL))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136446 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 152::CD,136447:CD,136450:CD,136455:CD,136512:JM,136419:JM,136464:JM,136401:JM,136374:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136447 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,136512
136450 :: CALL :: call :: Z :: v35 = v4.equalsIgnoreCase(#(WAIT))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136455 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 168::CD,136456:CD,136459:CD,136464:CD,136512:JM,136419:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136459 :: CALL :: call :: Z :: v38 = v4.equalsIgnoreCase(#(WDRN))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136456 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,136512
136464 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 184::CD,136465:CD,136468:CD,136473:CD,136512:JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136446:JM,136383:JM,136428
136465 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,136512
136468 :: CALL :: call :: Z :: v41 = v4.equalsIgnoreCase(#(MODEL))::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136474 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,136512
136473 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 200::CD,136474:CD,136483:CD,136512
136483 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,136512
136486 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v45 = new java.lang.IllegalArgumentException::
136487 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v46 = new java.lang.StringBuilder::
136492 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v46.append(v4)::JM,136419:JM,136464:JM,136401:JM,136374:JM,136455:JM,136437:JM,136410:JM,136392:JM,136473:JM,136446:JM,136383:JM,136428
136497 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v50.append(#('.))::
136502 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
136511 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v70::DD,136362
136512 :: EXPR :: assign :: null :: PHI v70 = v69, v68, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57::CF,136511
136583 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status::DD,136585:DD,136586
136580 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CE,136581:CD,136583:CD,136585
136581 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::
136586 :: NORM :: compound :: [I :: return v2::DD,136581
136587 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = values()::JM,136590:CL,144108
136585 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,136586:CD,136587:CD,136590:CD,136591:CD,136592:CD,136594:CD,136603:CD,136605:CD,136614:CD,136616:CD,136625:CD,136627:CD,136636:CD,136638:CD,136647:CD,136649:CD,136658:CD,136660:CD,136669:CD,136671:CD,136680:CD,136682:CD,136691:CD,136693:CD,136702:CD,136704:CD,136713:CD,136715:CD,136724:CD,136726:CD,136737
136590 :: EXPR :: assign :: I :: v6 = v5.length::CF,136591
136591 :: NORM :: declaration :: [I :: v7 = new []::DD,136737
136594 :: CALL :: call :: I :: v10 = v8.ordinal()::
136592 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v8 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::
136598 :: EXPR :: modify :: I :: v7[v10] = #(3)::
136603 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::
136605 :: CALL :: call :: I :: v16 = v14.ordinal()::
136609 :: EXPR :: modify :: I :: v7[v16] = #(2)::
136614 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v20 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::
136616 :: CALL :: call :: I :: v22 = v20.ordinal()::
136620 :: EXPR :: modify :: I :: v7[v22] = #(4)::
136627 :: CALL :: call :: I :: v28 = v26.ordinal()::
136625 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::
136631 :: EXPR :: modify :: I :: v7[v28] = #(5)::
136638 :: CALL :: call :: I :: v34 = v32.ordinal()::
136636 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v32 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::
136642 :: EXPR :: modify :: I :: v7[v34] = #(12)::
136647 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::
136649 :: CALL :: call :: I :: v40 = v38.ordinal()::
136653 :: EXPR :: modify :: I :: v7[v40] = #(1)::
136658 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = org.biojava.nbio.structure.PDBStatus$Status.POLC::
136660 :: CALL :: call :: I :: v46 = v44.ordinal()::
136664 :: EXPR :: modify :: I :: v7[v46] = #(6)::
136671 :: CALL :: call :: I :: v52 = v50.ordinal()::
136669 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = org.biojava.nbio.structure.PDBStatus$Status.PROC::
136675 :: EXPR :: modify :: I :: v7[v52] = #(7)::
136682 :: CALL :: call :: I :: v58 = v56.ordinal()::
136680 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.REFI::
136686 :: EXPR :: modify :: I :: v7[v58] = #(8)::
136691 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REPL::
136693 :: CALL :: call :: I :: v64 = v62.ordinal()::
136697 :: EXPR :: modify :: I :: v7[v64] = #(9)::
136702 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::
136704 :: CALL :: call :: I :: v70 = v68.ordinal()::
136708 :: EXPR :: modify :: I :: v7[v70] = #(13)::
136715 :: CALL :: call :: I :: v76 = v74.ordinal()::
136713 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v74 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::
136719 :: EXPR :: modify :: I :: v7[v76] = #(10)::
136726 :: CALL :: call :: I :: v82 = v80.ordinal()::
136724 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v80 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::
136730 :: EXPR :: modify :: I :: v7[v82] = #(11)::
136737 :: NORM :: compound :: [I :: return v7::DD,136581
136852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.mergeReversed(java.util.List,java.util.List)::CD,136857:CD,136861:JM,136867:JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892
136857 :: CALL :: call :: Z :: v5 = p2 $other .isEmpty()::JM,136867:JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136863 :: CALL :: call :: Z :: v8 = p1 $merged .isEmpty()::JM,136867:JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136861 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 11::CD,136863:CD,136867:JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136867 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 29::CD,136868:CD,136874:CD,136878:CD,136882:CD,136886:CD,136940:CD,136944:CD,136967:JM,136867:JM,136963:JM,136912:JM,136929:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136868 :: CALL :: call :: Z :: v51 = p1 $merged .addAll(p2 $other )::JM,136867:JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136874 :: CALL :: call :: Ljava/util/ListIterator :: v10 = p1 $merged .listIterator()::JM,136867:JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136878 :: CALL :: call :: Ljava/util/ListIterator :: v12 = p2 $other .listIterator()::JM,136867:JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136882 :: CALL :: call :: Ljava/lang/Object :: v14 = v12.next()::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892
136886 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,136967
136888 :: CALL :: call :: Ljava/lang/Object :: v19 = v10.next()::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136892 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,136918:JM,136924:JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136893 :: CALL :: call :: Ljava/lang/Object :: v22 = v10.previous()::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136898 :: CALL :: call :: V :: v10.add(v31)::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136902 :: CALL :: call :: Z :: v27 = v12.hasNext()::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892
136906 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 96::CD,136908:CD,136912:CD,136913:CD,136918:CD,136965:JM,136963:JM,136944:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892
136908 :: CALL :: call :: Ljava/lang/Object :: v29 = v12.next()::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892
136912 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,136965
136913 :: CALL :: call :: I :: v24 = v31.compareTo(v20)::JM,136918
136918 :: PRED :: IF :: Z :: if (v24 > #(0)) goto 80::CD,136898:CD,136902:CD,136906:CD,136919:CD,136924:CD,136966:JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136954:JM,136892:JM,136861
136919 :: CALL :: call :: Z :: v33 = v31.equals(v20)::JM,136924
136924 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 148::CF,136966:CD,136925:CD,136929:CD,136936:CD,136940:CD,136944:CD,136967:JM,136963:JM,136912:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892
136925 :: CALL :: call :: Z :: v35 = v12.hasNext()::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892
136931 :: CALL :: call :: Ljava/lang/Object :: v37 = v12.next()::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892
136929 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 137::CD,136931:CD,136935:CD,136936:CD,136940:CD,136944:CD,136966:CD,136967:JM,136963:JM,136912:JM,136929:JM,136886:JM,136906:JM,136954:JM,136892
136935 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,136966
136936 :: CALL :: call :: Ljava/lang/Object :: v41 = v10.next()::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136940 :: CALL :: call :: Z :: v17 = v10.hasNext()::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136944 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 57::CD,136888:CD,136892:CD,136893:CD,136913:CD,136918:CD,136945:CD,136959:CD,136963:CD,136965:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136861
136945 :: CALL :: call :: V :: v10.add(v42)::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136950 :: CALL :: call :: Ljava/lang/Object :: v47 = v12.next()::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892
136954 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136955 :: CALL :: call :: V :: v10.add(v48)::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861
136959 :: CALL :: call :: Z :: v45 = v12.hasNext()::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892
136963 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 176::CD,136950:CD,136954:CD,136955:CD,136959:JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136892
136966 :: EXPR :: assign :: null :: PHI v39 = v31, v38::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861:DD,136967
136967 :: EXPR :: assign :: null :: PHI v42 = v15, v39::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136861:DD,136965
136965 :: EXPR :: assign :: null :: PHI v31 = v42, v30::JM,136963:JM,136944:JM,136912:JM,136929:JM,136886:JM,136935:JM,136906:JM,136954:JM,136892:JM,136918:JM,136924:DD,136966
137093 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.prepareURLConnection(java.lang.String,int)::
137351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSequenceFamilyId(java.lang.Integer)::JM,137356
137356 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .sequenceFamilyId = p1 $sequenceFamilyId ::
137362 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setOrthologousSequenceFamilyId(java.lang.Integer)::JM,137367
137367 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .orthologousSequenceFamilyId = p1 $orthologousSequenceFamilyId ::
137373 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setLikeSequenceFamilyId(java.lang.Integer)::JM,137378
137378 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .likeSequenceFamilyId = p1 $likeSequenceFamilyId ::
137384 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setIdenticalSequenceFamilyId(java.lang.Integer)::JM,137389
137389 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .identicalSequenceFamilyId = p1 $identicalSequenceFamilyId ::
137395 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setDomainCounter(java.lang.Integer)::JM,137400
137400 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .domainCounter = p1 $domainCounter ::
137406 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setResolution(java.lang.Double)::JM,137411
137411 :: EXPR :: modify :: Ljava/lang/Double :: p0 $this .resolution = p1 $resolution ::
137431 :: NORM :: declaration :: Ljava/io/BufferedReader :: v4 = new java.io.BufferedReader::JM,137431:JM,144409
137444 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setCacheLocation(java.lang.String)::CD,137449:CD,137451:CD,137456:CD,137481
137451 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,137456:JM,137481
137449 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::JM,137456:JM,137481
137458 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
137456 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,137481:CF,137457:CD,137458:CD,137466:CD,137468:CD,137473
137457 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,137481
137466 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::JM,137481
137468 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::JM,137481
137473 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::JM,137481
137477 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheLocation = v17::
137481 :: EXPR :: assign :: null :: PHI v17 = p1 $cacheLocation , v16::DD,137477
137503 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .claURL = p1 $claURL ::
137500 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .rootURL = #(null)::
137506 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .desURL = p2 $desURL ::
137509 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .hieURL = p3 $hieURL ::
137512 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .comURL = p4 $comURL ::
138328 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getC()::CE,138329:CD,138332:CD,138337
138329 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getC()::JM,128149
138332 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(C))::JM,138337:CL,45210
138337 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,138329
138340 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getN()::CE,138341:CD,138344:CD,138349
138341 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getN()::JM,128150
138344 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(N))::JM,138349:CL,45210
138349 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,138341
138352 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getP()::CE,138353:CD,138356:CD,138361
138353 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getP()::JM,128302
138356 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(P))::JM,138361:CL,45210
138361 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,138353
138364 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::CE,138365:CD,138368:CD,138373
138365 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::JM,128303
138368 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(O3'))::JM,138373:CL,45210
138373 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,138365
138376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::CE,138377:CD,138383
138377 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::JM,128522
138383 :: NORM :: compound :: Ljava/util/List :: return v3::CF,138377
138380 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,138383
138386 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.AtomImpl.getBonds()::JM,128651:JM,128660:JM,128665:JM,144882:JM,144944
138385 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getBonds()::CE,138386:CD,138392
138389 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,138392
138394 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocGroup(java.lang.Character)::CD,138399:CD,138404:JM,138469:JM,138415
138392 :: NORM :: compound :: Ljava/util/List :: return v3::CF,138386
138399 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .getAtom(#(0))::JM,138404:CL,123944
138406 :: CALL :: call :: Ljava/lang/Character :: v9 = v6.getAltLoc()::JM,138415:CL,103842
138404 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 13::CD,138406:CD,138410:CD,138415
138410 :: CALL :: call :: Z :: v11 = v9.equals(p1 $altLoc )::JM,138415:JM,138469
138415 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 28::CD,138420
138417 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .altLocs::DD,138420
138420 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 47::CD,138424:CD,138428
138421 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .altLocs::JM,138428
138424 :: CALL :: call :: Z :: v15 = v13.isEmpty()::JM,138428
138430 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .altLocs::JM,138475
138428 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 49::CD,138433:CD,138471:CD,138475
138433 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,138475
138438 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,138475
138443 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,138451:CL,129450
138447 :: CALL :: call :: Z :: v27 = v25.isEmpty()::JM,138451
138451 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,138453:CD,138458:CD,138471:CD,138475
138453 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v29 = v23.getAtom(#(0))::JM,138458:CL,123944
138458 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 109::CD,138460:CD,138464:CD,138469:CD,138471:CD,138475
138460 :: CALL :: call :: Ljava/lang/Character :: v31 = v29.getAltLoc()::JM,138469:CL,103842
138464 :: CALL :: call :: Z :: v33 = v31.equals(p1 $altLoc )::JM,138469:JM,138415
138471 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,138475
138469 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 125::CD,138471:CD,138475
138475 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 64::CD,138438:CD,138443:CD,138447:CD,138451:JM,138475
138521 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomA = p1 $atomA ::
138527 :: EXPR :: modify :: I :: p0 $this .bondOrder = p3 $bondOrder ::
138524 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomB = p2 $atomB ::
138530 :: PRED :: IF :: Z :: if (p4 $addSelfToAtoms  == #(0)) goto 28::CD,138531
138531 :: CALL :: call :: V :: p0 $this .addSelfToAtoms()::CL,144871
138660 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::CE,138661:CD,138665:CD,138669:CD,138673:CD,138678:CD,138766
138661 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::JM,128988
138665 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::JM,138678
138669 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::JM,138678
138673 :: CALL :: call :: Z :: v11 = v7.equals(#(?))::JM,138678
138678 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 23::CD,138679:CD,138680:CD,138684:CD,138688:CD,138692:CD,138697:CD,138824
138679 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return #(null)::DD,138661
138680 :: CALL :: call :: Z :: v14 = fileExists(v7)::JM,138684:CL,144973
138684 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 34::CD,138685
138685 :: CALL :: call :: V :: p0 $this .checkDoFirstInstall()::CL,144997
138688 :: CALL :: call :: Z :: v17 = fileExists(v7)::JM,138692:CL,144973
138692 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CF,138824:CD,138693
138693 :: CALL :: call :: Z :: v19 = downloadChemCompRecord(v7)::JM,138824:CL,145086
138698 :: CALL :: call :: Ljava/lang/String :: v22 = getLocalFileName(v7)::CL,145394
138697 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 268::CD,138698:JM,61644:JM,150886:JM,150900:JM,145534:JM,150893:CD,138719:CD,138723:CD,138724:CD,138733:CD,138741:CD,138758:CD,138813:CD,138818
138719 :: CALL :: call :: V :: v28.addMMcifConsumer(v30)::CL,61702
138723 :: NORM :: declaration :: Ljava/io/BufferedReader :: v33 = new java.io.BufferedReader::CF,138724
138724 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v34 = new java.io.InputStreamReader::
138733 :: CALL :: call :: V :: v28.parse(v33)::CL,61719
138741 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v61 = v59.getChemComp(v7)::JM,138758:CL,116981
138758 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v61::DD,138661
138766 :: CALL :: call :: Ljava/lang/String :: v45 = v38.getMessage()::
138813 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v57 = v54.getChemComp(v7)::JM,138818:CL,145571
138818 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v57::DD,138661
138824 :: EXPR :: assign :: null :: PHI v20 = #(1), v19::DD,138697
138878 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,138896:JM,138895:JM,138893:CF,138879:CD,138882:CD,138887:CD,138892
138879 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,129073
138882 :: CALL :: call :: I :: v5 = p1 $expression .indexOf(#(())::JM,138882:JM,138896:JM,138887:JM,138895:JM,138892:JM,138893
138887 :: CALL :: call :: I :: v7 = p1 $expression .lastIndexOf(#(())::JM,138882:JM,138896:JM,138887:JM,138895:JM,138892:JM,138893
138894 :: NORM :: compound :: Z :: return #(1)::CF,138879
138895 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 38::CD,138896:CD,138899
138892 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 23::CD,138893:CD,138894
138893 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 25::CD,138894:CD,138895:CD,138898:CD,138899
138898 :: NORM :: compound :: Z :: return v10::CF,138879
138899 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,138898
138896 :: PRED :: IF :: Z :: if (v7 <= v5) goto 38::CD,138899
138917 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseUnaryOperatorExpression(java.lang.String)::CD,138921
138921 :: CALL :: call :: Ljava/util/List :: v4 = parseSubExpression(p1 $operatorExpression )::CL,145791
138927 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseBinaryOperatorExpression(java.lang.String)::CD,138937:CD,138938:CD,138943:CD,138948:CD,138959:CD,138960:CD,138965:CD,138970:CD,138983:CD,138991:CD,139001
138938 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
138937 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
138943 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $expression )::
138948 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
138959 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v31 = new java.lang.IllegalArgumentException::
138960 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
138965 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(p1 $expression )::
138970 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
138983 :: CALL :: call :: Ljava/util/List :: v22 = parseSubExpression(v20)::CL,145791
138991 :: CALL :: call :: Ljava/util/List :: v26 = parseSubExpression(v24)::CL,145791
139001 :: CALL :: call :: Ljava/util/List :: v30 = v27.getOrderedPairs()::CL,145945
139026 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::JM,129138:JM,129208
139025 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::CE,139026:CD,139032
139029 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,139032
139034 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::CE,139035:CD,139041
139035 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::JM,129215
139032 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,139026
139038 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,139041
139043 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setTransformationMatrix(javax.vecmath.Matrix4d)::JM,139048
139041 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,139035
139048 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = p1 $transformation ::
139054 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getM()::CD,139061
139058 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .M::DD,139061
139061 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,139066:CD,139076
139066 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,139070
139070 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .M = v5::
139076 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v9 = p0 $this .getMInv()::CL,146039
139118 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::JM,130050
139117 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::CE,139118:CD,139124
139121 :: EXPR :: reference :: Z :: v3 = p0 $this .standard::DD,139124
139126 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::CE,139127:CD,139133
139127 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::JM,130064
139124 :: NORM :: compound :: Z :: return v3::CF,139118
139130 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .hetAtoms::DD,139133
139135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(java.util.List)::CD,139139:CD,139143:CD,139162:CD,139166
139133 :: NORM :: compound :: Ljava/util/List :: return v3::CF,139127
139139 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
139143 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $chains .iterator()::JM,139166
139148 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,139166
139153 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = getRepresentativeAtomsOnly(v12)::CL,139182
139157 :: CALL :: call :: Z :: v16 = v3.add(v14)::
139162 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,139166
139166 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 19::CD,139148:CD,139153:CD,139157:CD,139162:JM,139166
139182 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::CE,139183:CD,139186:JM,63730:JM,63716:JM,63723:JM,63711:CD,139194:CD,139202:CD,139210:CD,139214:CD,139218:CD,139296:CD,139300:CD,139301
139183 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::
139186 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v3 = new org.biojava.nbio.structure.ChainImpl::DD,139301
139194 :: CALL :: call :: V :: v3.setChainID(v6)::CL,63754
139202 :: CALL :: call :: V :: v3.setCompound(v9)::CL,74582
139210 :: CALL :: call :: V :: v3.setSwissprotId(v12)::CL,112315
139214 :: CALL :: call :: Ljava/util/List :: v15 = p1 $chain .getAtomGroups()::JM,139300:JM,139227:CL,45126
139218 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,139300:JM,139227
139223 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,139300:JM,139227
139227 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,139232
139228 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,139295:CL,129450
139235 :: CALL :: call :: Ljava/util/Iterator :: v28 = v25.iterator()::JM,139295
139232 :: EXPR :: assign :: Z :: v26=v23 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,139233
139233 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,139235:CD,139291:CD,139295
139240 :: CALL :: call :: Ljava/lang/Object :: v32 = v28.next()::JM,139295
139245 :: CALL :: call :: Ljava/lang/String :: v35 = v33.getName()::JM,139254:CL,51738
139249 :: CALL :: call :: Z :: v38 = v35.equals(#(CA))::JM,139254
139254 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 200::CD,139255:CD,139259:CD,139261:CD,139291:CD,139295
139255 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v40 = v33.getElement()::JM,139261:CL,45274
139259 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v41 = org.biojava.nbio.structure.Element.C::CF,139261
139261 :: PRED :: IF :: Z :: if (v40 != v41) goto 200::JM,88486:JM,88502:JM,88504:JM,88506:JM,88479:CD,139270:CD,139278:CD,139282:CD,139286:CD,139291:CD,139295
139270 :: CALL :: call :: V :: v42.setPDBName(v45)::CL,88858
139278 :: CALL :: call :: V :: v42.setResidueNumber(v48)::CL,88562
139282 :: CALL :: call :: V :: v42.addAtom(v33)::CL,88604
139286 :: CALL :: call :: V :: v3.addGroup(v42)::CL,63901
139291 :: CALL :: call :: Z :: v30 = v28.hasNext()::JM,139295
139295 :: PRED :: IF :: Z :: if (v30 != #(0)) goto 105::CD,139240:CD,139245:CD,139249:CD,139254:JM,139295:JM,139300:JM,139227
139296 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,139300:JM,139227
139300 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 64::CD,139223:CD,139227:CD,139228:CD,139232:CD,139233:CD,139296:JM,139300:CF,139301
139301 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::DD,139183
139353 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
139356 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,139369:JM,139372:DD,139360
139363 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
139360 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v7::
139366 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
139369 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
139372 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p2 $groups ::
139389 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setEvCode(java.lang.String)::JM,139394
139394 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = p1 $evCode ::
139400 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB()::CD,139404:CD,139408:CD,139412
139404 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
139408 :: CALL :: call :: V :: p0 $this .remark800toPDB(v3)::CL,146346
139412 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
139422 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.initialize()::CD,139426:CD,139433:CD,139444
139426 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,139430
139430 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transformations = v3::
139433 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v7 = identity(#(3), #(3))::JM,139438:CL,146462
139438 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v7::
139441 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
139444 :: NORM :: declaration :: [D :: v9 = new []::DD,139445
139445 :: EXPR :: modify :: [D :: p0 $this .shift = v9::
139451 :: EXPR :: modify :: I :: p0 $this .currentMmSize = #(0)::
139448 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
139468 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::CE,139469:CD,139473:CD,139478:CD,139479:CD,139483:CD,139484:CD,139490:CD,139494:CD,139498:CD,139502
139469 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::JM,130945
139473 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(58))::JM,139478:JM,139483
139478 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,139478:JM,139483
139479 :: CALL :: call :: I :: v10 = p1 $line .length()::JM,139478:JM,139483
139483 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 - #(1)::JM,139478:JM,139483
139484 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v8, v11)::JM,139478:JM,139483
139490 :: CALL :: call :: Ljava/lang/String :: v15 = v13.trim()::
139494 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toLowerCase()::
139498 :: CALL :: call :: I :: v19 = getSizefromString(v17)::JM,139502:CL,146524
139502 :: NORM :: compound :: I :: return v19::DD,139469
139513 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.addToCurrentChainList(java.lang.String)::CD,139518:CD,139523:CD,139524:CD,139529:CD,139533:CD,139541:CD,139545
139518 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(:))::JM,139523
139523 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,139523
139524 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(v8)::JM,139523
139529 :: CALL :: call :: Ljava/lang/String :: v12 = v10.trim()::
139533 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#([ ,]+))::JM,139541
139538 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .currentChainIDs::
139541 :: CALL :: call :: Ljava/util/List :: v18 = asList(v15)::JM,139541
139545 :: CALL :: call :: Z :: v20 = v16.addAll(v18)::
139564 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::CE,139565:CD,139569:CD,139578:CD,139583:CD,139587:CD,139613:CD,139632:CD,139651:CD,139660:CD,139665:CD,139669:CD,139674
139565 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::JM,131011
139569 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $line .split(#([ ]+))::
139574 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(2)]::JM,139587:JM,139674:JM,139660
139578 :: CALL :: call :: Ljava/lang/String :: v11 = v8.substring(#(5))::JM,139587:JM,139674:JM,139660
139583 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,139587:JM,139674:JM,139660
139587 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 44::CD,139588:CD,139596
139588 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v17 = identity(#(3), #(3))::JM,139593:CL,146462
139593 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v17::
139596 :: NORM :: declaration :: [D :: v18 = new []::DD,139597
139597 :: EXPR :: modify :: [D :: p0 $this .shift = v18::
139613 :: CALL :: call :: V :: v19.set(v20, #(0), v26)::CL,77415
139632 :: CALL :: call :: V :: v28.set(v29, #(1), v33)::CL,77415
139651 :: CALL :: call :: V :: v35.set(v36, #(2), v41)::CL,77415
139657 :: EXPR :: reference :: [D :: v43 = p0 $this .shift::
139660 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v13 - #(1)::
139661 :: EXPR :: reference :: Ljava/lang/Object :: v46 = v6[#(7)]::JM,139665:JM,139669
139665 :: CALL :: call :: F :: v48 = parseFloat(v46)::JM,139665:JM,139669
139670 :: EXPR :: modify :: D :: v43[v44] = v49::
139669 :: EXPR :: assign :: D :: v49 = CONVERT F to D v48::DD,139670
139674 :: PRED :: IF :: Z :: if (v13 != #(3)) goto 127::CD,139675:CD,139676
139675 :: NORM :: compound :: Z :: return #(1)::DD,139565
139676 :: NORM :: compound :: Z :: return #(0)::DD,139565
139720 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.saveMatrix()::CD,139727:CD,139782:CD,139786:CD,139793:CD,139798
139727 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,139786
139724 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .currentChainIDs::JM,139786
139732 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,139786
139737 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v12 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
139759 :: EXPR :: reference :: I :: v20 = p0 $this .modelNumber::
139762 :: CALL :: call :: Ljava/lang/String :: v22 = valueOf(v20)::
139766 :: CALL :: call :: V :: v12.setId(v22)::CL,114202
139770 :: CALL :: call :: V :: v12.setChainId(v11)::CL,129227
139774 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .transformations::
139777 :: CALL :: call :: Z :: v27 = v25.add(v12)::
139782 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,139786
139786 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,139732:CD,139737:JM,114159:CD,139762:CD,139766:CD,139770:CD,139777:CD,139782:JM,139786
139793 :: CALL :: call :: Z :: v31 = v28.containsKey(v29)::JM,139798
139798 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 173::CD,139810:CD,139831:CD,139838:CD,139848
139810 :: CALL :: call :: V :: v32.setId(v36)::CL,96659
139831 :: CALL :: call :: V :: v32.setMacromolecularSize(v43)::CL,96670
139838 :: CALL :: call :: V :: v32.setTransforms(v45)::CL,96681
139848 :: CALL :: call :: Ljava/lang/Object :: v50 = v47.put(v48, v32)::
139910 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.compndValueSetter(java.lang.String,java.lang.String)::CD,139916:CD,139920:CD,139926:CD,139931:CD,139999:JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,140169:JM,140156
139916 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
139920 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,140218
139926 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
139931 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 123::CD,139932:CD,139936:CD,139948:CD,140218
139932 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,140218
139936 :: CALL :: call :: I :: v19 = v17.intValue()::JM,140218
139948 :: PRED :: IF :: Z :: if (v25 <= #(0)) goto 123::CD,139952
139949 :: EXPR :: reference :: I :: v26 = p0 $this .prevMolId::DD,139952
139952 :: PRED :: IF :: Z :: if (v26 == v25) goto 123::CD,139956:CD,139970:CD,139979:JM,103281:JM,103274:CD,139989
139953 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v27 = p0 $this .current_compound::DD,139956
139956 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 83::CD,139963
139957 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .compounds::
139963 :: CALL :: call :: Z :: v32 = v29.add(v30)::
139960 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v30 = p0 $this .current_compound::
139970 :: CALL :: call :: Ljava/lang/Integer :: v36 = valueOf(v25)::
139979 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v38 = new org.biojava.nbio.structure.Compound::DD,139983
139983 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .current_compound = v38::
139989 :: CALL :: call :: V :: v40.setMolId(v25)::CL,103402
139999 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 133::CD,140001:CD,140006:CD,140014:CD,140019:CD,140075:CD,140080:CD,140113:CD,140118:CD,140151:CD,140156:CD,140164:CD,140169:CD,140177:CD,140182:CD,140190:CD,140195:CD,140203:CD,140208:JM,139931
139996 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v43 = p0 $this .current_compound::DD,139999
140001 :: CALL :: call :: Z :: v46 = p1 $field .equals(#(MOLECULE:))::JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140006 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,140010:JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140010 :: CALL :: call :: V :: v47.setMolName(v10)::CL,112626
140014 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(CHAIN:))::JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140019 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 245::CF,140020:CD,140026:CD,140050:CD,140054:CD,140061:CD,140065:CD,140069:JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140020 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v52 = new java.util.StringTokenizer::JM,140219:JM,140044:JM,140054
140026 :: NORM :: declaration :: Ljava/util/ArrayList :: v55 = new java.util.ArrayList::
140031 :: CALL :: call :: Ljava/lang/String :: v60 = v52.nextToken()::JM,140219:JM,140044
140035 :: CALL :: call :: Ljava/lang/String :: v62 = v60.trim()::JM,140219:JM,140044
140039 :: CALL :: call :: Z :: v65 = v62.equals(#(NULL))::JM,140219:JM,140044
140044 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 209::CF,140219
140045 :: CALL :: call :: Z :: v69 = v55.add(v67)::
140050 :: CALL :: call :: Z :: v58 = v52.hasMoreTokens()::JM,140054
140054 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 181::CD,140031:CD,140035:CD,140039:CD,140044:CD,140045:CD,140050:CD,140219
140061 :: CALL :: call :: I :: v73 = v71.getMolId()::CL,103739
140065 :: CALL :: call :: Ljava/lang/Integer :: v75 = valueOf(v73)::
140069 :: CALL :: call :: Ljava/lang/Object :: v77 = v70.put(v75, v55)::
140075 :: CALL :: call :: Z :: v80 = p1 $field .equals(#(SYNONYM:))::JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140080 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 306::CF,140081:CD,140087:CD,140108:CD,140112:JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140081 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v81 = new java.util.StringTokenizer::JM,140112
140087 :: NORM :: declaration :: Ljava/util/ArrayList :: v83 = new java.util.ArrayList::
140092 :: CALL :: call :: Ljava/lang/String :: v88 = v81.nextToken()::
140096 :: CALL :: call :: Z :: v90 = v83.add(v88)::
140104 :: CALL :: call :: V :: v91.setSynonyms(v83)::CL,146845
140108 :: CALL :: call :: Z :: v86 = v81.hasMoreTokens()::JM,140112
140112 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 278::CD,140092:CD,140096:CD,140104:CD,140108:JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140113 :: CALL :: call :: Z :: v95 = p1 $field .equals(#(EC:))::JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140118 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 367::CF,140119:CD,140125:CD,140146:CD,140150:JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140119 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v96 = new java.util.StringTokenizer::JM,140150
140125 :: NORM :: declaration :: Ljava/util/ArrayList :: v98 = new java.util.ArrayList::
140130 :: CALL :: call :: Ljava/lang/String :: v103 = v96.nextToken()::
140134 :: CALL :: call :: Z :: v105 = v98.add(v103)::
140142 :: CALL :: call :: V :: v106.setEcNums(v98)::CL,146856
140146 :: CALL :: call :: Z :: v101 = v96.hasMoreTokens()::JM,140150
140150 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 339::CD,140130:CD,140134:CD,140142:CD,140146:JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140151 :: CALL :: call :: Z :: v110 = p1 $field .equals(#(FRAGMENT:))::JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140156 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 384::CD,140160:JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140160 :: CALL :: call :: V :: v111.setFragment(v10)::CL,146867
140164 :: CALL :: call :: Z :: v115 = p1 $field .equals(#(ENGINEERED:))::JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140169 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 401::CD,140173:JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140173 :: CALL :: call :: V :: v116.setEngineered(v10)::CL,146878
140177 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(MUTATION:))::JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140182 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 418::CD,140186:JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140186 :: CALL :: call :: V :: v121.setMutation(v10)::CL,146889
140190 :: CALL :: call :: Z :: v125 = p1 $field .equals(#(BIOLOGICAL_UNIT:))::JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140195 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 435::CD,140199:JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140199 :: CALL :: call :: V :: v126.setBiologicalUnit(v10)::CL,146900
140203 :: CALL :: call :: Z :: v130 = p1 $field .equals(#(OTHER_DETAILS:))::JM,140019:JM,140195:JM,140080:JM,140208:JM,140006:JM,140118:JM,140182:JM,139931:JM,140169:JM,140156
140208 :: PRED :: IF :: Z :: if (v130 == #(0)) goto 449::CD,140212
140212 :: CALL :: call :: V :: v131.setDetails(v10)::CL,146911
140218 :: EXPR :: assign :: null :: PHI v25 = v19, #(-1)::DD,139948:DD,139952
140219 :: EXPR :: assign :: null :: PHI v67 = v62, #( )::
140336 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.sourceValueSetter(java.lang.String,java.lang.String)::CD,140342:CD,140346:CD,140352:CD,140357:CD,140382:CD,140387:CD,140391:CD,140396:CD,140405:CD,140410:CD,140853:JM,140802:JM,140480:JM,140550:JM,140676:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140536:JM,140606:JM,140732
140342 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140346 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,140369
140352 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140358 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .compounds::
140357 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 84::CD,140361:CD,140365:CD,140369:CD,140370:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140361 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,140369
140365 :: CALL :: call :: I :: v19 = v17.intValue()::JM,140369
140370 :: CALL :: call :: Ljava/lang/Object :: v23 = v15.get(v21)::
140369 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 - #(1)::
140382 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
140387 :: CALL :: call :: Ljava/lang/String :: v30 = v24.getMessage()::
140391 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v26.append(v30)::
140396 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
140405 :: CALL :: call :: Z :: v39 = p1 $field .equals(#(SYNTHETIC:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140410 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 104::CD,140414:CD,140419:CD,140424:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140414 :: CALL :: call :: V :: v195.setSynthetic(v10)::CL,146922
140419 :: CALL :: call :: Z :: v42 = p1 $field .equals(#(FRAGMENT:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140424 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 124::CD,140428:CD,140433:CD,140438:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140428 :: CALL :: call :: V :: v193.setFragment(v10)::CL,146867
140433 :: CALL :: call :: Z :: v45 = p1 $field .equals(#(ORGANISM_SCIENTIFIC:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140438 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 144::CD,140442:CD,140447:CD,140452:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140442 :: CALL :: call :: V :: v191.setOrganismScientific(v10)::CL,128022
140447 :: CALL :: call :: Z :: v48 = p1 $field .equals(#(ORGANISM_TAXID:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140452 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 164::CD,140456:CD,140461:CD,140466:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140456 :: CALL :: call :: V :: v189.setOrganismTaxId(v10)::CL,128033
140461 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(ORGANISM_COMMON:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140466 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 184::CD,140470:CD,140475:CD,140480:JM,140802:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140470 :: CALL :: call :: V :: v187.setOrganismCommon(v10)::CL,128011
140475 :: CALL :: call :: Z :: v54 = p1 $field .equals(#(STRAIN:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140480 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 204::CD,140484:CD,140489:CD,140494:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140484 :: CALL :: call :: V :: v185.setStrain(v10)::CL,146933
140489 :: CALL :: call :: Z :: v57 = p1 $field .equals(#(VARIANT:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140494 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 224::CD,140498:CD,140503:CD,140508:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140498 :: CALL :: call :: V :: v183.setVariant(v10)::CL,146944
140503 :: CALL :: call :: Z :: v60 = p1 $field .equals(#(CELL_LINE:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140508 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 244::CD,140512:CD,140517:CD,140522:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140512 :: CALL :: call :: V :: v181.setCellLine(v10)::CL,146955
140517 :: CALL :: call :: Z :: v63 = p1 $field .equals(#(ATCC:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140522 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 264::CD,140526:CD,140531:CD,140536:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140606:JM,140732
140526 :: CALL :: call :: V :: v179.setAtcc(v10)::CL,127989
140531 :: CALL :: call :: Z :: v66 = p1 $field .equals(#(ORGAN:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140536 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 284::CD,140540:CD,140545:CD,140550:JM,140802:JM,140480:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140540 :: CALL :: call :: V :: v177.setOrgan(v10)::CL,146966
140545 :: CALL :: call :: Z :: v69 = p1 $field .equals(#(TISSUE:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140550 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 304::CD,140554:CD,140559:CD,140564:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140554 :: CALL :: call :: V :: v175.setTissue(v10)::CL,146977
140559 :: CALL :: call :: Z :: v72 = p1 $field .equals(#(CELL:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140564 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 324::CD,140568:CD,140573:CD,140578:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140568 :: CALL :: call :: V :: v173.setCell(v10)::CL,128000
140573 :: CALL :: call :: Z :: v75 = p1 $field .equals(#(ORGANELLE:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140578 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 344::CD,140582:CD,140587:CD,140592:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140582 :: CALL :: call :: V :: v171.setOrganelle(v10)::CL,146988
140587 :: CALL :: call :: Z :: v78 = p1 $field .equals(#(SECRETION:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140592 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 364::CD,140596:CD,140601:CD,140606:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140732
140596 :: CALL :: call :: V :: v169.setSecretion(v10)::CL,146999
140601 :: CALL :: call :: Z :: v81 = p1 $field .equals(#(GENE:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140606 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 384::CD,140610:CD,140615:CD,140620:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140610 :: CALL :: call :: V :: v167.setGene(v10)::CL,147010
140615 :: CALL :: call :: Z :: v84 = p1 $field .equals(#(CELLULAR_LOCATION:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140620 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 404::CD,140624:CD,140629:CD,140634:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140624 :: CALL :: call :: V :: v165.setCellularLocation(v10)::CL,147021
140629 :: CALL :: call :: Z :: v87 = p1 $field .equals(#(EXPRESSION_SYSTEM:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140634 :: PRED :: IF :: Z :: if (v87 == #(0)) goto 424::CD,140638:CD,140643:CD,140648:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140638 :: CALL :: call :: V :: v163.setExpressionSystem(v10)::CL,128055
140643 :: CALL :: call :: Z :: v90 = p1 $field .equals(#(EXPRESSION_SYSTEM_TAXID:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140648 :: PRED :: IF :: Z :: if (v90 == #(0)) goto 444::CD,140652:CD,140657:CD,140662:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140652 :: CALL :: call :: V :: v161.setExpressionSystemTaxId(v10)::CL,128044
140657 :: CALL :: call :: Z :: v93 = p1 $field .equals(#(EXPRESSION_SYSTEM_STRAIN:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140662 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 464::CD,140666:CD,140671:CD,140676:JM,140802:JM,140480:JM,140550:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140666 :: CALL :: call :: V :: v159.setExpressionSystemStrain(v10)::CL,147032
140671 :: CALL :: call :: Z :: v96 = p1 $field .equals(#(EXPRESSION_SYSTEM_VAR...))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140676 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 484::CD,140680:CD,140685:CD,140690:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140680 :: CALL :: call :: V :: v157.setExpressionSystemVariant(v10)::CL,147043
140685 :: CALL :: call :: Z :: v99 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140690 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 504::CD,140694:CD,140699:CD,140704:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140694 :: CALL :: call :: V :: v155.setExpressionSystemCellLine(v10)::CL,147054
140699 :: CALL :: call :: Z :: v102 = p1 $field .equals(#(EXPRESSION_SYSTEM_ATC...))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140704 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 524::CD,140708:CD,140713:CD,140718:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140708 :: CALL :: call :: V :: v153.setExpressionSystemAtccNumber(v10)::CL,147065
140713 :: CALL :: call :: Z :: v105 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORGAN:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140718 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 544::CD,140722:CD,140727:CD,140732:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606
140722 :: CALL :: call :: V :: v151.setExpressionSystemOrgan(v10)::CL,147076
140727 :: CALL :: call :: Z :: v108 = p1 $field .equals(#(EXPRESSION_SYSTEM_TISSUE:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140732 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 564::CD,140736:CD,140741:CD,140746:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140736 :: CALL :: call :: V :: v149.setExpressionSystemTissue(v10)::CL,147087
140741 :: CALL :: call :: Z :: v111 = p1 $field .equals(#(EXPRESSION_SYSTEM_CELL:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140746 :: PRED :: IF :: Z :: if (v111 == #(0)) goto 584::CD,140750:CD,140755:CD,140760:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140750 :: CALL :: call :: V :: v147.setExpressionSystemCell(v10)::CL,147098
140755 :: CALL :: call :: Z :: v114 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORG...))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140760 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 604::CD,140764:CD,140769:CD,140774:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140764 :: CALL :: call :: V :: v145.setExpressionSystemOrganelle(v10)::CL,147109
140769 :: CALL :: call :: Z :: v117 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140774 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 624::CD,140778:CD,140783:CD,140788:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140410:JM,140536:JM,140606:JM,140732
140778 :: CALL :: call :: V :: v143.setExpressionSystemCellularLocation(v10)::CL,147120
140783 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(EXPRESSION_SYSTEM_VEC...))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140788 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 644::CD,140792:CD,140797:CD,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140792 :: CALL :: call :: V :: v141.setExpressionSystemVectorType(v10)::CL,147131
140797 :: CALL :: call :: Z :: v123 = p1 $field .equals(#(EXPRESSION_SYSTEM_VECTOR:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140802 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 664::CD,140806:CD,140811:CD,140816:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140806 :: CALL :: call :: V :: v139.setExpressionSystemVector(v10)::CL,147142
140811 :: CALL :: call :: Z :: v126 = p1 $field .equals(#(EXPRESSION_SYSTEM_PLA...))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140816 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 684::CD,140820:CD,140825:CD,140830:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140820 :: CALL :: call :: V :: v137.setExpressionSystemPlasmid(v10)::CL,147153
140825 :: CALL :: call :: Z :: v129 = p1 $field .equals(#(EXPRESSION_SYSTEM_GENE:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140830 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 704::CD,140834:CD,140839:CD,140844:JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140834 :: CALL :: call :: V :: v135.setExpressionSystemGene(v10)::CL,147164
140839 :: CALL :: call :: Z :: v132 = p1 $field .equals(#(OTHER_DETAILS:))::JM,140802:JM,140480:JM,140550:JM,140676:JM,140357:JM,140746:JM,140424:JM,140494:JM,140620:JM,140690:JM,140816:JM,140438:JM,140564:JM,140634:JM,140760:JM,140830:JM,140508:JM,140578:JM,140704:JM,140774:JM,140452:JM,140522:JM,140648:JM,140718:JM,140844:JM,140466:JM,140592:JM,140662:JM,140788:JM,140410:JM,140536:JM,140606:JM,140732
140844 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 718::CD,140848
140848 :: CALL :: call :: V :: v133.setExpressionSystemOtherDetails(v10)::CL,147175
140853 :: EXPR :: assign :: Ljava/lang/Exception :: v24 = catch <exc>::
141033 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,141037
141037 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = v4::
141040 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,141044
141047 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #()::
141044 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = v6::
141050 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = #()::
141053 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = #()::
141059 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = #()::
141056 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = #()::
141062 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = #()::
141065 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = #()::
141068 :: EXPR :: modify :: Z :: p0 $this .published = #(0)::
141093 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.authorBuilder(java.lang.String)::CD,141098:CD,141102:CD,141107
141098 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
141102 :: CALL :: call :: Z :: v8 = p1 $authorString .equals(#())::JM,141107
141107 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,141109:CD,141114:CD,141115
141109 :: CALL :: call :: [Ljava/lang/String :: v12 = p1 $authorString .split(#(,))::JM,141365:JM,141114
141114 :: EXPR :: assign :: I :: v13 = v12.length::DD,141115
141115 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 93::CF,141116:CD,141124:CD,141130:CD,141135:CD,141139:CD,141144:CD,141152:CD,141365:CD,141366:CD,141372
141116 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v112 = new org.biojava.nbio.structure.Author::
141124 :: CALL :: call :: V :: v112.setSurname(v114)::CL,147205
141130 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v117 = new java.lang.StringBuilder::
141135 :: CALL :: call :: Ljava/lang/String :: v121 = v112.getSurname()::CL,147216
141139 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v117.append(v121)::
141144 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
141152 :: CALL :: call :: Z :: v128 = v4.add(v112)::
141159 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v12[v109]::
141165 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
141170 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v16)::
141175 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
141183 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v26 = new org.biojava.nbio.structure.Author::
141187 :: CALL :: call :: [Ljava/lang/String :: v30 = v16.split(#(\.))::JM,141233:JM,141297:JM,141329:JM,141192
141194 :: CALL :: call :: V :: v26.setSurname(v16)::CL,147205
141192 :: EXPR :: assign :: I :: v31 = v30.length::DD,141193
141193 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 209::CD,141194:CD,141200:CD,141205:CD,141210:CD,141215:CD,141219:CD,141224:CD,141233:CD,141234:CD,141371
141200 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
141205 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(#(\.))::
141210 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#(' Setting whole name ))::
141215 :: CALL :: call :: Ljava/lang/String :: v43 = v26.getSurname()::CL,147216
141219 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
141224 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
141234 :: PRED :: IF :: Z :: if (v49 != #(1)) goto 263::CD,141239:CD,141245:CD,141250:CD,141254:CD,141259:CD,141297:CD,141298:CD,141299:CD,141302:CD,141307:CD,141312:CD,141317:CD,141325:CD,141329:CD,141330:CD,141337:CD,141342:CD,141347:CD,141355:CD,141368:CD,141369:CD,141370:CD,141371
141233 :: EXPR :: assign :: I :: v49 = v30.length::DD,141234
141239 :: CALL :: call :: V :: v26.setSurname(v50)::CL,147205
141245 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
141250 :: CALL :: call :: Ljava/lang/String :: v57 = v26.getSurname()::CL,147216
141254 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
141259 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
141269 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v30[v79]::JM,141369
141274 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v78)::
141273 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::JM,141369
141282 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v66.append(v65)::JM,141369
141287 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v71.append(#(.))::JM,141369
141292 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::JM,141369
141298 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v63 - #(1)::CF,141299
141299 :: PRED :: IF :: Z :: if (v79 < v64) goto 270::CD,141273:CD,141274:CD,141282:CD,141287:CD,141292:CD,141296:CD,141297:CD,141298:CD,141368:CD,141369:CD,141370
141296 :: EXPR :: assign :: Ljava/lang/Object :: v77 = v79 + #(1)::DD,141370:CF,141368
141297 :: EXPR :: assign :: I :: v63 = v30.length::DD,141298
141302 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
141307 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v78)::
141312 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::
141317 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
141325 :: CALL :: call :: V :: v26.setInitials(v78)::CL,147225
141330 :: EXPR :: assign :: Ljava/lang/Object :: v94 = v93 - #(1)::
141331 :: EXPR :: reference :: Ljava/lang/Object :: v95 = v30[v94]::
141329 :: EXPR :: assign :: I :: v93 = v30.length::DD,141330
141337 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
141342 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v95)::
141347 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
141355 :: CALL :: call :: V :: v26.setSurname(v95)::CL,147205
141359 :: CALL :: call :: Z :: v107 = v4.add(v26)::
141366 :: PRED :: IF :: Z :: if (v109 < v15) goto 99::CD,141165:CD,141170:CD,141175:CD,141183:CD,141187:CD,141192:CD,141193:CD,141359:CD,141364:CD,141365:CD,141371:CD,141372
141364 :: EXPR :: assign :: Ljava/lang/Object :: v108 = v111 + #(1)::DD,141372
141365 :: EXPR :: assign :: I :: v15 = v12.length::CF,141366
141370 :: EXPR :: assign :: null :: PHI v79 = #(0), v77::DD,141296:DD,141299:CF,141297
141371 :: EXPR :: assign :: null :: PHI v111 = v109, v109, v110::DD,141364
141368 :: EXPR :: assign :: null :: PHI v110 = v109, v110::CF,141369:DD,141368:DD,141371
141369 :: EXPR :: assign :: null :: PHI v78 = #(), v76::CF,141370
141372 :: EXPR :: assign :: null :: PHI v109 = #(0), v108::DD,141366:DD,141368:DD,141371:CF,141365
141469 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setAuthorList(java.util.List)::JM,141474
141474 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = p1 $authorList ::
141480 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setEditorList(java.util.List)::JM,141485
141485 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = p1 $editorList ::
141491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRef(java.lang.String)::JM,141496
141496 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = p1 $ref ::
141517 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141522 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p2 $ref )::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141527 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(#('))::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141532 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141646:JM,141631
141540 :: CALL :: call :: Z :: v21 = p2 $ref .equals(#(TO BE PUBLISHED ))::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141546 :: CALL :: call :: Ljava/lang/String :: v173 = p2 $ref .trim()::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141545 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 81::CD,141546:CD,141564:CD,141574:CD,141578:JM,141666:JM,141651:JM,141671:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141564 :: CALL :: call :: Ljava/lang/String :: v179 = format(#(JournalParser found j...), v176)::
141574 :: CALL :: call :: I :: v24 = p2 $ref .length()::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141578 :: PRED :: IF :: Z :: if (v24 >= #(48)) goto 128::CD,141599:CD,141613:CD,141622:CD,141626:CD,141627:CD,141631:CD,141632:CD,141638:CD,141642:CD,141646:CD,141647:CD,141651:CD,141652:CD,141658:CD,141662:CD,141666:CD,141667:CD,141671:CD,141672:CD,141678:CD,141682:CD,141683:CD,141689:CD,141693:CD,141701:CD,141706:CD,141710:CD,141711:CD,141717:CD,141721:CD,141727:CD,141731:CD,141736:CD,141740:CD,141752:CD,141769:CD,141786:CD,141803:CD,141812:CD,141817:CD,141873:CD,141878:JM,141578:JM,141545
141599 :: CALL :: call :: Ljava/lang/String :: v28 = p2 $ref .substring(#(30), #(48))::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141613 :: CALL :: call :: Ljava/lang/String :: v35 = format(#(Parsing volumeInforma...), v33)::
141622 :: CALL :: call :: I :: v38 = v28.length()::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141626 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 - #(5)::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141646:JM,141631:JM,141710
141627 :: CALL :: call :: I :: v42 = v28.length()::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141631 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v42 - #(1)::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141632 :: CALL :: call :: Ljava/lang/String :: v45 = v28.substring(v40, v43)::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141638 :: CALL :: call :: Ljava/lang/String :: v47 = v45.trim()::JM,141666:JM,141651:JM,141671:JM,141817:JM,141646
141642 :: CALL :: call :: I :: v49 = v28.length()::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141646 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v49 - #(11)::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141646:JM,141631:JM,141710
141647 :: CALL :: call :: I :: v53 = v28.length()::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141651 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v53 - #(6)::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141652 :: CALL :: call :: Ljava/lang/String :: v57 = v28.substring(v51, v55)::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141658 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,141666:JM,141671:JM,141817
141662 :: CALL :: call :: I :: v61 = v28.length()::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141666 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v61 - #(16)::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141646:JM,141631:JM,141710
141667 :: CALL :: call :: I :: v65 = v28.length()::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141671 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v65 - #(12)::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141672 :: CALL :: call :: Ljava/lang/String :: v69 = v28.substring(v63, v67)::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141678 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::JM,141817
141682 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v72 = new java.lang.StringBuilder::JM,141878:JM,141879:JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141683 :: CALL :: call :: Ljava/lang/String :: v75 = p2 $ref .substring(#(0), #(29))::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141689 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141693 :: CALL :: call :: Ljava/lang/String :: v79 = valueOf(v77)::
141701 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v72.append(#( ))::JM,141878:JM,141879
141706 :: CALL :: call :: I :: v85 = p2 $ref .length()::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141710 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v85 - #(1)::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141711 :: CALL :: call :: Ljava/lang/String :: v88 = p2 $ref .substring(#(30), v86)::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141717 :: CALL :: call :: Ljava/lang/String :: v90 = v28.trim()::JM,141666:JM,141651:JM,141671:JM,141626:JM,141817:JM,141710:JM,141646:JM,141631
141721 :: CALL :: call :: Ljava/lang/String :: v93 = v88.replace(v90, #())::JM,141878:JM,141879
141727 :: CALL :: call :: Ljava/lang/String :: v95 = v93.trim()::JM,141878:JM,141879
141731 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v83.append(v95)::JM,141878:JM,141879
141736 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::JM,141878:JM,141879
141740 :: CALL :: call :: Ljava/lang/String :: v101 = v99.trim()::JM,141878:JM,141879
141752 :: CALL :: call :: Ljava/lang/String :: v107 = format(#(JournalParser found v...), v105)::
141769 :: CALL :: call :: Ljava/lang/String :: v114 = format(#(JournalParser found s...), v112)::
141786 :: CALL :: call :: Ljava/lang/String :: v121 = format(#(JournalParser found d...), v119)::
141803 :: CALL :: call :: Ljava/lang/String :: v128 = format(#(JournalParser found j...), v126)::
141812 :: CALL :: call :: Z :: v132 = v47.equals(#(    ))::JM,141817
141818 :: CALL :: call :: Ljava/lang/Integer :: v134 = valueOf(v47)::JM,141817
141817 :: PRED :: IF :: Z :: if (v132 != #(0)) goto 431::CD,141818:JM,141817
141834 :: CALL :: call :: Ljava/lang/String :: v142 = valueOf(v47)::
141833 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::JM,141666:JM,141651:JM,141671:JM,141578:JM,141626:JM,141545:JM,141817:JM,141710:JM,141646:JM,141631
141842 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v140.append(#( is not a valid integ...))::
141847 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::
141873 :: CALL :: call :: Z :: v156 = v101.equals(#(    ))::JM,141878:JM,141879
141878 :: PRED :: IF :: Z :: if (v156 != #(0)) goto 502::CD,141885:CD,141893:CD,141898
141879 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = v101::
141885 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
141890 :: EXPR :: reference :: Ljava/lang/String :: v162 = p0 $this .journalName::
141893 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(v162)::
141898 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
142030 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setJournalName(java.lang.String)::JM,142035
142035 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = p1 $journalName ::
142042 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.JournalArticle.getJournalName()::JM,133251
142041 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.getJournalName()::CE,142042:CD,142048
142045 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .journalName::DD,142048
142050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setIsPublished(java.lang.Boolean)::CD,142055:JM,142059
142048 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,142042
142055 :: CALL :: call :: Z :: v5 = p1 $state .booleanValue()::JM,142059
142059 :: EXPR :: modify :: Z :: p0 $this .published = v5::
142075 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setVolume(java.lang.String)::JM,142080
142080 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .volume = p1 $volume ::
142096 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setStartPage(java.lang.String)::JM,142101
142101 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .startPage = p1 $startPage ::
142117 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublicationDate(int)::JM,142122
142122 :: EXPR :: modify :: I :: p0 $this .publicationDate = p1 $publicationDate ::
142128 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublisher(java.lang.String)::JM,142133
142133 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = p1 $publisher ::
142139 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setTitle(java.lang.String)::JM,142144
142144 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
142150 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRefn(java.lang.String)::JM,142155
142155 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = p1 $refn ::
142161 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPmid(java.lang.String)::JM,142166
142166 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = p1 $pmid ::
142172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setDoi(java.lang.String)::JM,142177
142177 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = p1 $doi ::
142183 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.toString()::CD,142187:CD,142191:CD,142195:CD,142200:CD,142205:CD,142210:CD,142215:CD,142220:CD,142225:CD,142230:CD,142238:CD,142258:CD,142262:CD,142263:CD,142268:CD,142276:CD,142281:CD,142286:CD,142294:CD,142298:CD,142340:CD,142345:CD,142350:CD,142358:CD,142363:CD,142385:CD,142390:CD,142412:CD,142417:CD,142439:CD,142444:CD,142463
142187 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(line.separator))::JM,142187
142191 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
142195 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
142200 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
142205 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
142210 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
142215 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
142220 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
142225 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
142230 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
142235 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .authorList::JM,142262
142238 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,142262
142243 :: CALL :: call :: Ljava/lang/Object :: v39 = v34.next()::JM,142262
142248 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v8.append(v40)::
142253 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#(,))::
142258 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,142262
142262 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 117::CD,142243:CD,142248:CD,142253:CD,142258:JM,142262
142263 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v6.append(v8)::
142268 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v5)::
142273 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .title::
142276 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v11.append(v50)::
142281 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v6.append(v11)::
142286 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v54.append(v5)::
142291 :: EXPR :: reference :: Ljava/util/List :: v57 = p0 $this .editorList::JM,142298
142294 :: CALL :: call :: Z :: v59 = v57.isEmpty()::JM,142298
142298 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 255::CD,142302:CD,142322:CD,142326:CD,142327:CD,142332
142299 :: EXPR :: reference :: Ljava/util/List :: v60 = p0 $this .editorList::JM,142326
142302 :: CALL :: call :: Ljava/util/Iterator :: v62 = v60.iterator()::JM,142326
142307 :: CALL :: call :: Ljava/lang/Object :: v66 = v62.next()::JM,142326
142312 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v14.append(v67)::
142317 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v69.append(#(,))::
142322 :: CALL :: call :: Z :: v64 = v62.hasNext()::JM,142326
142326 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,142307:CD,142312:CD,142317:CD,142322:JM,142326
142327 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v6.append(v14)::
142332 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v74.append(v5)::
142337 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .ref::
142340 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v17.append(v79)::
142345 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v6.append(v17)::
142350 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v83.append(v5)::
142355 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .publisher::JM,142363
142358 :: CALL :: call :: Z :: v89 = v86.equals(#())::JM,142363
142363 :: PRED :: IF :: Z :: if (v89 != #(0)) goto 307::CD,142367:CD,142372:CD,142377
142367 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v20.append(v90)::
142364 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .publisher::
142372 :: CALL :: call :: Ljava/lang/StringBuilder :: v94 = v6.append(v20)::
142377 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v94.append(v5)::
142382 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .refn::JM,142390
142385 :: CALL :: call :: Z :: v99 = v97.equals(#())::JM,142390
142390 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 340::CD,142394:CD,142399:CD,142404
142391 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .refn::
142394 :: CALL :: call :: Ljava/lang/StringBuilder :: v102 = v23.append(v100)::
142399 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v6.append(v23)::
142404 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v5)::
142409 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .pmid::JM,142417
142412 :: CALL :: call :: Z :: v109 = v107.equals(#())::JM,142417
142418 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .pmid::
142417 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 373::CD,142421:CD,142426:CD,142431
142421 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v26.append(v110)::
142426 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v6.append(v26)::
142431 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v114.append(v5)::
142439 :: CALL :: call :: Z :: v119 = v117.equals(#())::JM,142444
142436 :: EXPR :: reference :: Ljava/lang/String :: v117 = p0 $this .doi::JM,142444
142444 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 406::CD,142448:CD,142453:CD,142458
142445 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .doi::
142448 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v29.append(v120)::
142453 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v6.append(v29)::
142458 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v124.append(v5)::
142463 :: CALL :: call :: Ljava/lang/String :: v128 = v6.toString()::
142581 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::JM,142586
142586 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = p1 $crystallographicInfo ::
142592 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapSeqresRecords(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,142598:CD,142602:CD,142617:CD,142621:CD,142637:CD,142641:CD,142654:CD,142660
142598 :: CALL :: call :: Ljava/util/List :: v6 = p2 $seqRes .getAtomGroups()::CL,45126
142602 :: CALL :: call :: Ljava/util/List :: v8 = p1 $atomRes .getAtomGroups()::CL,45126
142617 :: CALL :: call :: I :: v18 = v8.size()::
142621 :: CALL :: call :: Ljava/lang/Integer :: v20 = valueOf(v18)::
142637 :: CALL :: call :: I :: v26 = v6.size()::
142641 :: CALL :: call :: Ljava/lang/Integer :: v28 = valueOf(v26)::
142654 :: CALL :: call :: Ljava/util/List :: v31 = p0 $this .trySimpleMatch(v6, v8)::JM,142660:CL,147279
142660 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 95::CD,142661:CD,142674:CD,142679:CD,142685:CD,142690:CD,142694
142661 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v31)::CL,63843
142674 :: CALL :: call :: Ljava/util/List :: v38 = p2 $seqRes .getAtomGroups(v36)::JM,142694:CL,124033
142679 :: CALL :: call :: I :: v40 = v38.size()::JM,142694
142685 :: CALL :: call :: Ljava/util/List :: v43 = p2 $seqRes .getAtomGroups(v41)::JM,142695:CL,124033
142690 :: CALL :: call :: I :: v45 = v43.size()::JM,142695
142694 :: PRED :: IF :: Z :: if (v40 >= #(1)) goto 218::CD,142695:CD,142753:CD,142758:CD,142762
142695 :: PRED :: IF :: Z :: if (v45 <= #(1)) goto 177::CD,142702:CD,142712:CD,142729:CD,142737
142702 :: CALL :: call :: Ljava/lang/Integer :: v81 = valueOf(v45)::
142712 :: CALL :: call :: V :: p0 $this .alignNucleotideChains(p2 $seqRes , p1 $atomRes )::CL,147743
142729 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v40)::
142737 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v45)::
142753 :: CALL :: call :: Ljava/util/List :: v48 = p1 $atomRes .getAtomGroups(v46)::JM,142762:CL,124033
142758 :: CALL :: call :: I :: v50 = v48.size()::JM,142762
142762 :: PRED :: IF :: Z :: if (v50 >= #(1)) goto 252::CD,142790:CD,142796
142790 :: CALL :: call :: Z :: v59 = p0 $this .alignProteinChains(v6, v57)::JM,142796:CL,147822
142796 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 293::CD,142797
142797 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v6)::CL,63843
142871 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::CE,142872:CD,142876:CD,142882
142872 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::
142876 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .findChain(p1 $chainId , #(0))::JM,142882:CL,148090
142882 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,142872
142886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setChains(java.util.List)::JM,142891
142891 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = p1 $chains ::
142898 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.ChainImpl.getCompound()::JM,133956
142897 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getCompound()::CE,142898:CD,142904
142901 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v3 = p0 $this .mol::DD,142904
142906 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.findMaxCompoundId(java.util.List)::CD,142914
142904 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v3::CF,142898
142914 :: CALL :: call :: Ljava/lang/Object :: v6 = max(p1 $compounds , v3)::
142927 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::CE,142928:CD,142933:CD,142940
142928 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::
142933 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = p0 $this .findGroup(p1 $chainName , p2 $pdbResnum , #(0))::JM,142940:CL,148182
142940 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,142928
142946 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::JM,134500
142945 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::CE,142946:CD,142952
142949 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc1::DD,142952
142954 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::CE,142955:CD,142961
142955 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::JM,134510
142952 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,142946
142958 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc2::DD,142961
142961 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,142955
143053 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.toString()::CD,143057:CD,143058:CD,143066:CD,143071:CD,143075:CD,143076:CD,143084:CD,143092:CD,143097:CD,143102:CD,143106:CD,143107:CD,143115:CD,143123:CD,143128:CD,143133:CD,143137:CD,143138:CD,143146:CD,143154:CD,143159:CD,143164:CD,143168:CD,143169:CD,143177:CD,143185:CD,143190:CD,143195:CD,143199:CD,143200:CD,143208:CD,143216:CD,143221:CD,143226:CD,143230:CD,143231:CD,143239:CD,143247:CD,143252:CD,143257:CD,143261:CD,143262:CD,143270:CD,143275:CD,143279:CD,143280:CD,143288:CD,143296:CD,143301:CD,143306:CD,143310:CD,143311:CD,143319:CD,143327:CD,143332:CD,143337:CD,143341:CD,143342:CD,143350:CD,143358:CD,143363:CD,143368:CD,143372:CD,143373:CD,143381:CD,143389:CD,143394:CD,143399:CD,143403:CD,143404:CD,143412:CD,143420:CD,143425:CD,143430:CD,143434:CD,143435:CD,143443:CD,143451:CD,143456:CD,143461:CD,143465:CD,143466:CD,143474:CD,143479
143058 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([LINK Record:))::
143057 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
143066 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
143071 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
143075 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
143076 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
143084 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Name: ))::
143089 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .name1::
143092 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
143097 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
143102 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
143106 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
143107 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
143115 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Alt Loc: ))::
143123 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
143120 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .altLoc1::
143128 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
143133 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
143138 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
143137 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
143146 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Res name: ))::
143151 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .resName1::
143154 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
143159 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
143164 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
143168 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
143169 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
143177 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(	Chain ID: ))::
143182 :: EXPR :: reference :: Ljava/lang/String :: v63 = p0 $this .chainID1::
143185 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(v63)::
143190 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(#())::
143195 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toString()::
143199 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
143200 :: CALL :: call :: Ljava/lang/String :: v72 = valueOf(v69)::
143208 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v70.append(#(	Res Seq: ))::
143213 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .resSeq1::
143216 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(v77)::
143221 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#())::
143226 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
143230 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
143231 :: CALL :: call :: Ljava/lang/String :: v86 = valueOf(v83)::
143239 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v84.append(#(	Ins Code: ))::
143247 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(v91)::
143244 :: EXPR :: reference :: Ljava/lang/String :: v91 = p0 $this .iCode1::
143252 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(#())::
143257 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
143262 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v97)::
143261 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
143270 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(#(Atom 2:))::
143275 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
143279 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v107 = new java.lang.StringBuilder::
143280 :: CALL :: call :: Ljava/lang/String :: v109 = valueOf(v106)::
143288 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v107.append(#(	Name: ))::
143293 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .name2::
143296 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v112.append(v113)::
143301 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#())::
143306 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
143310 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
143311 :: CALL :: call :: Ljava/lang/String :: v122 = valueOf(v119)::
143319 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v120.append(#(	Alt Loc: ))::
143327 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v125.append(v126)::
143324 :: EXPR :: reference :: Ljava/lang/String :: v126 = p0 $this .altLoc2::
143332 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v128.append(#())::
143337 :: CALL :: call :: Ljava/lang/String :: v132 = v130.toString()::
143342 :: CALL :: call :: Ljava/lang/String :: v135 = valueOf(v132)::
143341 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
143350 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(#(	Res name: ))::
143355 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .resName2::
143358 :: CALL :: call :: Ljava/lang/StringBuilder :: v141 = v138.append(v139)::
143363 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v141.append(#())::
143368 :: CALL :: call :: Ljava/lang/String :: v145 = v143.toString()::
143372 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v146 = new java.lang.StringBuilder::
143373 :: CALL :: call :: Ljava/lang/String :: v148 = valueOf(v145)::
143381 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v146.append(#(	Chain ID: ))::
143386 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .chainID2::
143389 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(v152)::
143394 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(#())::
143399 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
143403 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
143404 :: CALL :: call :: Ljava/lang/String :: v161 = valueOf(v158)::
143412 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(#(	Res Seq: ))::
143417 :: EXPR :: reference :: Ljava/lang/String :: v165 = p0 $this .resSeq2::
143420 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v164.append(v165)::
143425 :: CALL :: call :: Ljava/lang/StringBuilder :: v169 = v167.append(#())::
143430 :: CALL :: call :: Ljava/lang/String :: v171 = v169.toString()::
143434 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v172 = new java.lang.StringBuilder::
143435 :: CALL :: call :: Ljava/lang/String :: v174 = valueOf(v171)::
143443 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v172.append(#(	Ins Code: ))::
143451 :: CALL :: call :: Ljava/lang/StringBuilder :: v180 = v177.append(v178)::
143448 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .iCode2::
143456 :: CALL :: call :: Ljava/lang/StringBuilder :: v182 = v180.append(#())::
143461 :: CALL :: call :: Ljava/lang/String :: v184 = v182.toString()::
143466 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v184)::
143465 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::
143474 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v185.append(#(]))::
143479 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
143571 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::CE,143572:CD,143588:CD,143610:CD,143620:JM,138530:JM,138521:JM,138527:JM,138524:CD,143630:CD,143634:CD,143645:CD,143661
143572 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Bond :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::JM,134666
143588 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v14 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v8, v10, v12)::CL,128708
143610 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v22 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v16, v18, v20)::CL,128708
143620 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v37 = new org.biojava.nbio.structure.BondImpl::DD,143634
143630 :: CALL :: call :: V :: v40.addSSBond(v37)::CL,148383
143634 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return v37::DD,143572
143645 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $disulfideBond .toString()::CL,148400
143661 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return #(null)::DD,143572
143688 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.getNextGroup(int,int,int)::CD,143703:CD,143712:CD,143717:CD,143721:JM,143741
143703 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v30 = new java.util.NoSuchElementException::
143712 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,143721:CL,51721
143717 :: CALL :: call :: I :: v13 = v11.size()::JM,143721
143723 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = p0 $this .getNextGroup(v27, #(0), #(0))::CL,143688
143721 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 59::CD,143723:CD,143731:CD,143737:CD,143741:JM,143721
143731 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,143721:JM,143741
143737 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,143741:CL,148696
143743 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v26 = p0 $this .getNextGroup(p1 $tmp_model , v23, #(0))::CL,143688
143741 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 92::CD,143743:CD,143763
143763 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v21 = v16.getAtomGroup(v19)::CL,112365
143799 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::CE,143800:CD,143809:CD,143813:JM,143827:JM,143847
143800 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::JM,135166:JM,143836:JM,143856
143809 :: CALL :: call :: I :: v8 = v6.nrModels()::JM,143813:CL,64143
143814 :: NORM :: compound :: Z :: return #(0)::DD,143800
143813 :: PRED :: IF :: Z :: if (p1 $tmp_model  < v8) goto 16::CD,143814:CD,143818:CD,143823:CD,143827
143818 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,143827:CL,51721
143823 :: CALL :: call :: I :: v13 = v11.size()::JM,143827
143827 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 51::CD,143829:CD,143836:CD,143837:CD,143843:CD,143847:JM,143827
143829 :: CALL :: call :: Z :: v26 = p0 $this .hasSubGroup(v24, #(0), #(0))::JM,143836:CL,143799
143836 :: NORM :: compound :: Z :: return v26::DD,143800
143837 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,143827:JM,143847
143843 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,143847:CL,148696
143847 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 87::CD,143849:CD,143856:CD,143858
143849 :: CALL :: call :: Z :: v23 = p0 $this .hasSubGroup(p1 $tmp_model , v20, #(0))::JM,143856:CL,143799
143858 :: NORM :: compound :: Z :: return #(1)::DD,143800
143856 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 87::CD,143857:CD,143858
143857 :: NORM :: compound :: Z :: return #(0)::DD,143800
143885 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getChainIds(org.biojava.nbio.structure.Structure)::CD,143890:CD,143894:CD,143898:CD,143922:CD,143926:JM,143907:JM,143903
143890 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
143894 :: CALL :: call :: Ljava/util/List :: v7 = p1 $asymUnit .getChains()::JM,143922:JM,143907:JM,143894:JM,143926:JM,143898:JM,143903
143898 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,143922:JM,143907:JM,143926:JM,143898:JM,143903
143903 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,143922:JM,143907:JM,143926:JM,143903
143907 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,143908:JM,143912:JM,143928:JM,143913
143908 :: CALL :: call :: Ljava/lang/String :: v17 = v15.getInternalChainID()::JM,143908:JM,143912:JM,143928
143912 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 59::CF,143928:CD,143913
143913 :: CALL :: call :: Ljava/lang/String :: v20 = v15.getChainID()::JM,143928:JM,143913
143917 :: CALL :: call :: Z :: v23 = v4.add(v21)::
143922 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,143922:JM,143907:JM,143926:JM,143903
143926 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 26::CD,143903:CD,143907:CD,143908:CD,143912:CD,143917:CD,143922:CD,143928:JM,143926
143928 :: EXPR :: assign :: null :: PHI v21 = v17, v20::
144034 :: EXPR :: reference :: I :: v6 = p1 $b .coreLength::DD,144037
144037 :: EXPR :: modify :: I :: p0 $this .coreLength = v6::
144043 :: EXPR :: reference :: Ljava/util/List :: v8 = p1 $b .alignRes::DD,144046
144040 :: EXPR :: modify :: Ljava/util/List :: p0 $this .alignRes = #(null)::
144046 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 90::CD,144047:CD,144078:CD,144082:CD,144084
144047 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::DD,144051
144051 :: EXPR :: modify :: Ljava/util/List :: p0 $this .alignRes = v9::
144055 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .alignRes::
144058 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::
144059 :: EXPR :: reference :: Ljava/util/List :: v16 = p1 $b .alignRes::JM,144067
144062 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.get(v25)::JM,144067
144067 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::
144072 :: CALL :: call :: Z :: v22 = v14.add(v15)::
144078 :: CALL :: call :: I :: v13 = p1 $b .size()::JM,144082:CL,65157
144077 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,144084
144082 :: PRED :: IF :: Z :: if (v25 < v13) goto 50::CD,144058:CD,144062:CD,144067:CD,144072:CD,144077:CD,144078:CD,144084
144084 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::JM,144067:DD,144077:DD,144082
144111 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = org.biojava.nbio.structure.PDBStatus$Status.ENUM$VALUES::DD,144113
144108 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.values()::CF,144109:CD,144111:CD,144113:CD,144114:CD,144122
144109 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.values()::JM,136590
144114 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,144122
144113 :: EXPR :: assign :: I :: v4 = v2.length::DD,144114
144122 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v5::CF,144109
144409 :: CALL :: call :: V :: p0 $this .parse(p1 $reader )::CL,148763
144871 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.addSelfToAtoms()::CD,144878:CD,144882:CD,144895:CD,144923:CD,144927:CD,144928:CD,144944:CD,144945
144878 :: CALL :: call :: Ljava/util/List :: v5 = v3.getBonds()::JM,144882:JM,144944:CL,138385
144882 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 36::CF,144944:CF,144883:CD,144891
144883 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,144944
144891 :: CALL :: call :: V :: v10.setBonds(v7)::CL,150239
144895 :: CALL :: call :: Ljava/util/Iterator :: v15 = v12.iterator()::JM,144927
144900 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,144927
144908 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v23 = v20.getOther(v21)::JM,144916:JM,144921:CL,150250
144913 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v24 = p0 $this .atomB::JM,144916:JM,144921
144916 :: CALL :: call :: Z :: v26 = v23.equals(v24)::JM,144916:JM,144921
144923 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,144927
144921 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 84::CD,144923:CD,144927:CD,144945
144927 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 48::CF,144945:CD,144900:CD,144908:CD,144916:CD,144921:JM,144927
144928 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 116::CD,144932:CD,144939
144932 :: CALL :: call :: V :: v29.addBond(p0 $this )::CL,150289
144939 :: CALL :: call :: V :: v31.addBond(p0 $this )::CL,150289
144944 :: EXPR :: assign :: null :: PHI v12 = v5, v7::JM,144927
144945 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,144928
144974 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::JM,138684:JM,138692
144973 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::CE,144974:CD,144977:CD,144981:CD,144986:CD,144990
144977 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,145394
144981 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
144986 :: CALL :: call :: Z :: v8 = v5.exists()::JM,144990
144990 :: NORM :: compound :: Z :: return v8::DD,144974
144997 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.checkDoFirstInstall()::CD,145004:CD,145051
145001 :: EXPR :: reference :: Z :: v3 = p0 $this .downloadAll::DD,145004
145006 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
145007 :: EXPR :: reference :: Ljava/io/File :: v6 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
145004 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 8::CF,145006:CD,145007:CD,145014:CD,145020:CD,145024
145014 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
145020 :: CALL :: call :: Z :: v13 = v9.exists()::JM,145024
145024 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 46::CD,145025:CD,145034:CD,145039:CD,145040
145025 :: CALL :: call :: V :: p0 $this .downloadAllDefinitions()::CL,150323
145034 :: CALL :: call :: [Ljava/lang/String :: v17 = v5.list(v14)::JM,145039
145039 :: EXPR :: assign :: I :: v18 = v17.length::DD,145040
145040 :: PRED :: IF :: Z :: if (v18 >= #(500)) goto 99::CD,145041
145041 :: CALL :: call :: V :: p0 $this .split()::CL,150596
145051 :: CALL :: call :: Ljava/lang/String :: v27 = v21.getMessage()::
145086 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::CE,145087:CD,145090:CD,145094:CD,145099:CD,145104:CD,145108:CD,145125:CD,145126:CD,145131:CD,145136:CD,145141:CD,145147:CD,145152:CD,145157:CD,145165:CD,145170:CD,145174:CD,145189:CD,145190:CD,145208:CD,145212:CD,145213:CD,145216:CD,145222:CD,145226:CD,145239:CD,145273:CD,145276:CD,145281:CD,145285:CD,145290:CD,145295:CD,145300:CD,145305:CD,145309:CD,145314:CD,145322:CD,145326:CD,145336
145087 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::JM,138824
145090 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,145394
145094 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
145099 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $recordName )::
145104 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
145108 :: CALL :: call :: Ljava/io/File :: v14 = createTempFile(v11, #(cif))::
145126 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
145125 :: NORM :: compound :: Z :: return #(0)::DD,145087
145131 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(p1 $recordName )::
145136 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(.cif))::
145141 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
145147 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
145152 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v32)::
145157 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
145165 :: NORM :: declaration :: Ljava/net/URL :: v43 = new java.net.URL::DD,145336
145170 :: CALL :: call :: Ljava/net/HttpURLConnection :: v46 = openHttpURLConnection(v43)::CL,150824
145174 :: NORM :: declaration :: Ljava/io/PrintWriter :: v47 = new java.io.PrintWriter::DD,145226
145190 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v54 = new java.io.InputStreamReader::
145189 :: NORM :: declaration :: Ljava/io/BufferedReader :: v53 = new java.io.BufferedReader::JM,145212:DD,145216:CF,145190
145204 :: CALL :: call :: V :: v47.println(v60)::
145208 :: CALL :: call :: Ljava/lang/String :: v60 = v53.readLine()::JM,145212
145212 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 177::CD,145204:CD,145208
145213 :: CALL :: call :: V :: v47.flush()::
145216 :: PRED :: IF :: Z :: if (v53 == #(null)) goto 226::CD,145217:CF,145226
145217 :: CALL :: call :: V :: v53.close()::
145222 :: CALL :: call :: V :: v53.close()::
145226 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 310::CD,145227
145227 :: CALL :: call :: V :: v47.close()::
145239 :: CALL :: call :: V :: v47.close()::
145273 :: NORM :: compound :: Z :: return #(1)::DD,145087
145276 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
145281 :: CALL :: call :: Ljava/lang/String :: v94 = v88.toString()::
145285 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
145290 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( OR store locally to ))::
145295 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v4)::
145300 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( Error =))::
145305 :: CALL :: call :: Ljava/lang/String :: v106 = v87.getMessage()::
145309 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v104.append(v106)::
145314 :: CALL :: call :: Ljava/lang/String :: v110 = v108.toString()::
145322 :: CALL :: call :: Z :: v113 = v14.delete()::
145326 :: NORM :: compound :: Z :: return #(0)::DD,145087
145336 :: EXPR :: assign :: null :: PHI v88 = #(null), v43, v43, v43, v43, v43, v43::
145394 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::CE,145395:CD,145398:CD,145400:CD,145405:CD,145420:CD,145422:CD,145423:CD,145430:CD,145434:CD,145467:CD,145468:CD,145469:CD,145477:CD,145482:CD,145491:CD,145495
145395 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::
145398 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::JM,145405
145400 :: CALL :: call :: Z :: v5 = v3.contains(p1 $recordName )::JM,145405
145406 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
145405 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 30::CF,145406:CD,145411:CD,145416
145411 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $recordName )::JM,145405
145416 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
145422 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::
145423 :: EXPR :: reference :: Ljava/io/File :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
145420 :: CALL :: call :: V :: initPath()::CL,43159
145430 :: CALL :: call :: Z :: v21 = v16.exists()::JM,145434
145434 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 99::CF,145467:CD,145437:CD,145442:CD,145447:CD,145455
145437 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
145442 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v16)::
145447 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
145455 :: CALL :: call :: Z :: v32 = v16.mkdir()::
145467 :: NORM :: declaration :: Ljava/io/File :: v36 = new java.io.File::JM,145495:CF,145468
145468 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
145469 :: CALL :: call :: Ljava/lang/String :: v39 = valueOf(v14)::
145477 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v37.append(#(.cif.gz))::
145482 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::
145491 :: CALL :: call :: Ljava/lang/String :: v48 = v36.toString()::JM,145495
145495 :: NORM :: compound :: Ljava/lang/String :: return v48::DD,145395
145534 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: v4 = new org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary::DD,145538
145538 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: p0 $this .dictionary = v4::
145571 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::CE,145572:CD,145576:CD,145580:CD,145588:CD,145593:CD,145598:CD,145603:CD,145607:CD,145614:CD,145619:CD,145624:CD,145629:CD,145637:CD,145730:CD,145733:CD,145737
145572 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::JM,138818
145576 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::
145580 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::
145588 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
145593 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v7)::
145598 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(.cif.gz))::
145603 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
145607 :: CALL :: call :: Ljava/io/InputStream :: v22 = v10.getResourceAsStream(v20)::JM,145637
145614 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
145619 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v24.append(v7)::
145624 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(#(.cif.gz))::
145629 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
145637 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 112::CD,145645:CD,145648:CD,145656:JM,61644:JM,150886:JM,150900:JM,145534:JM,150893:CD,145665:CD,145669:CD,145670:CD,145684:CD,145692:CD,145701
145645 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v55 = getEmptyChemComp()::JM,145656:CL,150951
145648 :: CALL :: call :: V :: v55.setId(v7)::CL,150990
145656 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v55::DD,145572
145665 :: CALL :: call :: V :: v34.addMMcifConsumer(v36)::CL,61702
145670 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v40 = new java.io.InputStreamReader::
145669 :: NORM :: declaration :: Ljava/io/BufferedReader :: v39 = new java.io.BufferedReader::CF,145670
145684 :: CALL :: call :: V :: v34.parse(v39)::CL,61719
145692 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v49 = v47.getChemComp(v7)::JM,145701:CL,116981
145701 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v49::DD,145572
145730 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v73 = getEmptyChemComp()::JM,145737:CL,150951
145733 :: CALL :: call :: V :: v73.setId(v7)::CL,150990
145737 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v73::DD,145572
145791 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseSubExpression(java.lang.String)::CD,145795:CD,145801:CD,145807:CD,145812:CD,145817:CD,145818:CD,145823:CD,145828:CD,145837:CD,145841:CD,145872:CD,145876:JM,145850
145795 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $expression .replace(#((), #())::JM,145795:JM,145812:JM,145876:JM,145850:JM,145801:JM,145807
145801 :: CALL :: call :: Ljava/lang/String :: v9 = v6.replace(#()), #())::JM,145812:JM,145876:JM,145850:JM,145801:JM,145807
145807 :: CALL :: call :: [Ljava/lang/String :: v13 = v9.split(#(,))::JM,145812:JM,145876:JM,145850:JM,145807
145812 :: CALL :: call :: Ljava/util/List :: v15 = asList(v13)::JM,145812:JM,145876:JM,145850
145818 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
145817 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v17 = new java.lang.IllegalArgumentException::
145823 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $expression )::JM,145795:JM,145812:JM,145876:JM,145850:JM,145801:JM,145807
145828 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,145812:JM,145876:JM,145850:JM,145801:JM,145807
145837 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::
145841 :: CALL :: call :: Ljava/util/Iterator :: v29 = v15.iterator()::JM,145876:JM,145850
145846 :: CALL :: call :: Ljava/lang/Object :: v34 = v29.next()::JM,145876:JM,145850
145850 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,145856
145851 :: CALL :: call :: Z :: v38 = v35.contains(#(-))::JM,145856
145856 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 117::CD,145857:CD,145861:CD,145867
145857 :: CALL :: call :: Ljava/util/List :: v40 = expandRange(v35)::CL,151001
145861 :: CALL :: call :: Z :: v42 = v26.addAll(v40)::
145867 :: CALL :: call :: Z :: v44 = v26.add(v35)::
145872 :: CALL :: call :: Z :: v31 = v29.hasNext()::JM,145876:JM,145850
145876 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 79::CD,145846:CD,145850:CD,145851:CD,145856:CD,145872:JM,145876
145945 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.CartesianProduct.getOrderedPairs()::CD,145949:CD,145953:CD,145960:CD,145964:CD,145972:CD,146011:CD,146015
145950 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .list1::JM,145964
145949 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
145953 :: CALL :: call :: I :: v6 = v4.size()::JM,145964
145957 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .list2::JM,145964
145960 :: CALL :: call :: I :: v9 = v7.size()::JM,145964
145964 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v6 * v9::
145969 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .list1::JM,146015
145972 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,146015
145977 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,146015
145982 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .list2::JM,146010
145985 :: CALL :: call :: Ljava/util/Iterator :: v23 = v21.iterator()::JM,146010
145990 :: CALL :: call :: Ljava/lang/Object :: v27 = v23.next()::JM,146010
145995 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/OrderedPair :: v29 = new org.biojava.nbio.structure.quaternary.OrderedPair::
146001 :: CALL :: call :: Z :: v32 = v3.add(v29)::
146006 :: CALL :: call :: Z :: v25 = v23.hasNext()::JM,146010
146010 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 66::CD,145990:CD,145995:JM,151106:JM,151109:CD,146001:CD,146006:JM,146010:JM,146015
146011 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,146015
146015 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 41::CD,145977:CD,145985:CD,146006:CD,146010:CD,146011:JM,146015
146039 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMInv()::CD,146046
146043 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Minv::DD,146046
146046 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,146051:CD,146105
146051 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,146122
146105 :: CALL :: call :: D :: v34 = p0 $this .getCstar()::CL,151167
146122 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Minv = v5::
146346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB(java.lang.StringBuffer)::CD,146367:CD,146373:CD,146394:CD,146400:CD,146421:CD,146427
146367 :: CALL :: call :: Ljava/lang/String :: v13 = format(v4, #(REMARK 800 SITE_IDENT...), v7)::
146373 :: CALL :: call :: Ljava/lang/StringBuffer :: v15 = p1 $stringBuffer .append(v13)::
146394 :: CALL :: call :: Ljava/lang/String :: v22 = format(v16, #(REMARK 800 EVIDENCE_C...), v18)::
146400 :: CALL :: call :: Ljava/lang/StringBuffer :: v24 = p1 $stringBuffer .append(v22)::
146421 :: CALL :: call :: Ljava/lang/String :: v31 = format(v25, #(REMARK 800 SITE_DESCR...), v27)::
146427 :: CALL :: call :: Ljava/lang/StringBuffer :: v33 = p1 $stringBuffer .append(v31)::
146462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::CE,146463:CD,146467:JM,104305:JM,104299:JM,104302:CD,146473:CD,146492:CD,146493:CD,146497:JM,146490
146463 :: EXIT :: exit :: Lorg/biojava/nbio/structure/jama/Matrix :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::JM,139438:JM,139593
146467 :: NORM :: declaration :: Lorg/biojava/nbio/structure/jama/Matrix :: v4 = new org.biojava.nbio.structure.jama.Matrix::DD,146493
146473 :: CALL :: call :: [[D :: v7 = v4.getArray()::CL,104318
146479 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v7[v18]::
146483 :: PRED :: IF :: Z :: if (v18 != v15) goto 45::CD,146494
146485 :: EXPR :: modify :: D :: v9[v15] = v12::
146490 :: PRED :: IF :: Z :: if (v15 < p2 $n ) goto 30::CD,146483:CD,146489:CD,146494:CD,146495:CD,146496:CF,146491
146491 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,146497
146489 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,146496:CF,146495
146494 :: EXPR :: assign :: null :: PHI v12 = #(1.0 d), #(0.0 d)::DD,146485
146495 :: EXPR :: assign :: null :: PHI v18 = v17, v18::CF,146496:DD,146483:DD,146491:DD,146495
146492 :: PRED :: IF :: Z :: if (v17 < p1 $m ) goto 24::CD,146490:CD,146491:CD,146495:CD,146496:CD,146497:CF,146493
146493 :: NORM :: compound :: Lorg/biojava/nbio/structure/jama/Matrix :: return v4::DD,146463
146496 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,146483:DD,146489:DD,146490
146497 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,146492:DD,146495
146524 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::CE,146525:CD,146528:CD,146532:CD,146537:CD,146688:CD,146689
146525 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::JM,139502
146528 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $oligomer .toLowerCase()::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146532 :: CALL :: call :: Z :: v8 = v5.equals(#(monomeric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146539 :: CALL :: call :: Z :: v11 = v5.equals(#(dimeric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146537 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 26::CD,146539:CD,146544:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146546 :: CALL :: call :: Z :: v14 = v5.equals(#(trimeric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146544 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 41::CD,146546:CD,146551:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146586:JM,146649:JM,146558:JM,146621
146551 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,146553:CD,146558:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146621
146553 :: CALL :: call :: Z :: v17 = v5.equals(#(tetrameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146558 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 71::CD,146560:CD,146565:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146560 :: CALL :: call :: Z :: v20 = v5.equals(#(pentameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146567 :: CALL :: call :: Z :: v23 = v5.equals(#(hexameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146565 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 86::CD,146567:CD,146572:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146574 :: CALL :: call :: Z :: v26 = v5.equals(#(heptameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146572 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 102::CD,146574:CD,146579:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146579 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 118::CD,146581:CD,146586:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146649:JM,146558:JM,146621
146581 :: CALL :: call :: Z :: v29 = v5.equals(#(octameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146586 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 134::CD,146588:CD,146593:CD,146689:JM,146656:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146588 :: CALL :: call :: Z :: v32 = v5.equals(#(nonameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146595 :: CALL :: call :: Z :: v35 = v5.equals(#(decameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146593 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 150::CD,146595:CD,146600:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146602 :: CALL :: call :: Z :: v38 = v5.equals(#(undecameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146600 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 166::CD,146602:CD,146607:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146607 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 182::CD,146609:CD,146614:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146609 :: CALL :: call :: Z :: v41 = v5.equals(#(dodecameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146614 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 198::CD,146616:CD,146621:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558
146616 :: CALL :: call :: Z :: v44 = v5.equals(#(tridecameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146623 :: CALL :: call :: Z :: v47 = v5.equals(#(tetradecameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146621 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 214::CD,146623:CD,146628:CD,146689:JM,146656:JM,146593:JM,146663:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146630 :: CALL :: call :: Z :: v50 = v5.equals(#(pentadecameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146628 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 230::CD,146630:CD,146635:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146635 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 246::CD,146637:CD,146642:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146637 :: CALL :: call :: Z :: v53 = v5.equals(#(hexadecameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146642 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 262::CD,146644:CD,146649:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146558:JM,146621
146644 :: CALL :: call :: Z :: v56 = v5.equals(#(heptadecameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146651 :: CALL :: call :: Z :: v59 = v5.equals(#(octadecameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146649 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 278::CD,146651:CD,146656:CD,146689:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146658 :: CALL :: call :: Z :: v62 = v5.equals(#(nonadecameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146656 :: PRED :: IF :: Z :: if (v59 == #(0)) goto 294::CD,146658:CD,146663:CD,146689:JM,146656:JM,146593:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146663 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 310::CD,146665:CD,146670:CD,146689:JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146665 :: CALL :: call :: Z :: v65 = v5.equals(#(eicosameric))::JM,146656:JM,146593:JM,146663:JM,146628:JM,146565:JM,146635:JM,146600:JM,146537:JM,146670:JM,146607:JM,146572:JM,146642:JM,146579:JM,146544:JM,146614:JM,146551:JM,146586:JM,146649:JM,146558:JM,146621
146670 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 326::CD,146672:CD,146677:CD,146689
146672 :: CALL :: call :: Z :: v68 = v5.matches(#((\d+).*))::JM,146677
146678 :: CALL :: call :: Ljava/lang/String :: v71 = v5.replaceAll(#((\d+).*), #($1))::JM,146689
146677 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 347::CF,146689:CD,146678:CD,146684
146684 :: CALL :: call :: I :: v73 = parseInt(v71)::JM,146689
146688 :: NORM :: compound :: I :: return v94::DD,146525
146689 :: EXPR :: assign :: null :: PHI v94 = #(1), #(2), #(3), #(4), #(5), #(6), #(7), #(8), #(9), #(10), #(11), #(12), #(13), #(14), #(15), #(16), #(17), #(18), #(19), #(20), #(0), v73::CF,146688
146845 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynonyms(java.util.List)::JM,146850
146850 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = p1 $synonyms ::
146856 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEcNums(java.util.List)::JM,146861
146861 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = p1 $ecNums ::
146867 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setFragment(java.lang.String)::JM,146872
146872 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = p1 $fragment ::
146878 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEngineered(java.lang.String)::JM,146883
146883 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = p1 $engineered ::
146889 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMutation(java.lang.String)::JM,146894
146894 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = p1 $mutation ::
146900 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setBiologicalUnit(java.lang.String)::JM,146905
146905 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = p1 $biologicalUnit ::
146911 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setDetails(java.lang.String)::JM,146916
146916 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
146922 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynthetic(java.lang.String)::JM,146927
146927 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = p1 $synthetic ::
146933 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setStrain(java.lang.String)::JM,146938
146938 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = p1 $strain ::
146944 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setVariant(java.lang.String)::JM,146949
146949 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = p1 $variant ::
146955 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellLine(java.lang.String)::JM,146960
146960 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = p1 $cellLine ::
146966 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrgan(java.lang.String)::JM,146971
146971 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = p1 $organ ::
146977 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setTissue(java.lang.String)::JM,146982
146982 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = p1 $tissue ::
146988 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganelle(java.lang.String)::JM,146993
146993 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = p1 $organelle ::
146999 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSecretion(java.lang.String)::JM,147004
147004 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = p1 $secretion ::
147010 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setGene(java.lang.String)::JM,147015
147015 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = p1 $gene ::
147021 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellularLocation(java.lang.String)::JM,147026
147026 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = p1 $cellularLocation ::
147032 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemStrain(java.lang.String)::JM,147037
147037 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = p1 $expressionSystemStrain ::
147043 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVariant(java.lang.String)::JM,147048
147048 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = p1 $expressionSystemVariant ::
147054 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellLine(java.lang.String)::JM,147059
147059 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = p1 $expressionSystemCellLine ::
147065 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemAtccNumber(java.lang.String)::JM,147070
147070 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = p1 $expressionSystemAtccNumber ::
147076 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrgan(java.lang.String)::JM,147081
147081 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = p1 $expressionSystemOrgan ::
147087 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTissue(java.lang.String)::JM,147092
147092 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = p1 $expressionSystemTissue ::
147098 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCell(java.lang.String)::JM,147103
147103 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = p1 $expressionSystemCell ::
147109 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrganelle(java.lang.String)::JM,147114
147114 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = p1 $expressionSystemOrganelle ::
147120 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellularLocation(java.lang.String)::JM,147125
147125 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = p1 $expressionSystemCellularLocation ::
147131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVectorType(java.lang.String)::JM,147136
147136 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = p1 $expressionSystemVectorType ::
147142 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVector(java.lang.String)::JM,147147
147147 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = p1 $expressionSystemVector ::
147153 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemPlasmid(java.lang.String)::JM,147158
147158 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = p1 $expressionSystemPlasmid ::
147164 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemGene(java.lang.String)::JM,147169
147169 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = p1 $expressionSystemGene ::
147175 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOtherDetails(java.lang.String)::JM,147180
147180 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = p1 $expressionSystemOtherDetails ::
147193 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = #()::
147196 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = #()::
147205 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setSurname(java.lang.String)::JM,147210
147210 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = p1 $surname ::
147216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.getSurname()::CE,147217:CD,147223
147217 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Author.getSurname()::
147223 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,147217
147220 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .surname::DD,147223
147225 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setInitials(java.lang.String)::JM,147230
147230 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = p1 $initials ::
147279 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::CE,147280:CD,147285:CD,147286:CD,147290:CD,147623:CD,147627:CD,147632:CD,147633:JM,147474:JM,147297:JM,147375
147280 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::JM,142660
147286 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.clone()::JM,147290
147285 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST p1 $seqResGroups ::JM,147290
147290 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,147628
147292 :: CALL :: call :: Ljava/lang/Object :: v14 = p2 $atmResGroups .get(v90)::JM,147474:JM,147297:JM,147627:JM,147375
147298 :: CALL :: call :: Z :: v17 = v15.isWater()::JM,147302:CL,123914
147297 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,147376:DD,147423:DD,147495
147302 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 48::CD,147308:CD,147312:CD,147316:CD,147622:CD,147623:CD,147627:CD,147631:CD,147632:CD,147633
147308 :: CALL :: call :: Ljava/lang/Integer :: v21 = v19.getSeqNum()::JM,147329:JM,147316:JM,147369:JM,147630:CL,112391
147312 :: CALL :: call :: I :: v23 = v21.intValue()::JM,147329:JM,147316:JM,147369:JM,147630
147316 :: PRED :: IF :: Z :: if (v23 >= #(0)) goto 89::CD,147328:CD,147329:CD,147629
147330 :: CALL :: call :: Ljava/lang/Object :: v25 = p1 $seqResGroups .get(#(0))::JM,147474:JM,147297:JM,147627:JM,147375
147328 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,147280
147329 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 158::CF,147629:CD,147330:CD,147336:CD,147340:CD,147344:CD,147349:CD,147368:CD,147370:CD,147630:JM,147474:JM,147297:JM,147627:JM,147375
147336 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getPDBName()::JM,147349:CL,47160
147340 :: CALL :: call :: Ljava/lang/String :: v30 = v15.getPDBName()::JM,147349:CL,47160
147344 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,147349
147349 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 130::CD,147367:CD,147368:CD,147370:CD,147629:CD,147630
147367 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,147280
147370 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 301::CD,147371:CD,147375:CD,147470:CD,147474:JM,147297:JM,147627
147371 :: CALL :: call :: I :: v38 = p1 $seqResGroups .size()::JM,147474:JM,147297:JM,147627:JM,147375
147368 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 166::CF,147630:CD,147369
147369 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v23 + #(-1)::DD,147630
147375 :: PRED :: IF :: Z :: if (v36 < v38) goto 301::CD,147376:CD,147377:CD,147470:CD,147474:JM,147297:JM,147627:JM,147375
147376 :: EXPR :: assign :: Z :: v39=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,147377
147377 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 241::CD,147380:CD,147385:CD,147390:CD,147395:CD,147399:CD,147404:CD,147409:CD,147414:CD,147422:CD,147423:CD,147424:CD,147631
147380 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::
147385 :: CALL :: call :: Ljava/lang/StringBuilder :: v144 = v140.append(v36)::
147390 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v144.append(#( > seqres! ))::
147395 :: CALL :: call :: I :: v148 = p1 $seqResGroups .size()::JM,147474:JM,147297:JM,147627:JM,147375
147399 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v146.append(v148)::JM,147474:JM,147297:JM,147627
147404 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(#( ))::
147409 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v152.append(v15)::
147414 :: CALL :: call :: Ljava/lang/String :: v156 = v154.toString()::
147422 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,147280
147423 :: EXPR :: assign :: Z :: v40=v15 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,147424
147427 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
147424 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 511::CF,147631:CD,147427:CD,147432:CD,147437:CD,147442:CD,147446:CD,147451:CD,147456:CD,147461:CD,147469:CD,147622:CD,147623:CD,147627:CD,147632:CD,147633
147432 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v119.append(v36)::
147437 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v123.append(#( > seqres! ))::
147442 :: CALL :: call :: I :: v128 = p1 $seqResGroups .size()::JM,147474:JM,147297:JM,147627:JM,147375
147446 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v126.append(v128)::JM,147474:JM,147297:JM,147627
147451 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v130.append(#( ))::
147456 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v15)::
147461 :: CALL :: call :: Ljava/lang/String :: v137 = v135.toString()::
147470 :: CALL :: call :: I :: v42 = p1 $seqResGroups .size()::JM,147474:JM,147297:JM,147627:JM,147375
147469 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,147280
147474 :: PRED :: IF :: Z :: if (v36 < v42) goto 347::CD,147477:CD,147482:CD,147487:CD,147495:CD,147496:CD,147498:CD,147504:CD,147508:CD,147512:CD,147516:CD,147520:CD,147525:CD,147631:JM,147474:JM,147297:JM,147627:JM,147375
147477 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
147482 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v36)::
147487 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
147495 :: EXPR :: assign :: Z :: v52=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,147496
147498 :: CALL :: call :: Ljava/lang/Object :: v54 = p1 $seqResGroups .get(v36)::JM,147474:JM,147297:JM,147627:JM,147375
147496 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 511::CF,147631:CD,147497:CD,147622:CD,147623:CD,147627:CD,147632:CD,147633
147497 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,147280
147504 :: CALL :: call :: Ljava/lang/String :: v57 = v55.getPDBName()::JM,147525:CL,47160
147508 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,147525
147512 :: CALL :: call :: Ljava/lang/String :: v61 = v15.getPDBName()::JM,147525:CL,47160
147516 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,147525
147520 :: CALL :: call :: Z :: v65 = v59.equals(v63)::JM,147525
147525 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 438::CD,147528:CD,147533:CD,147538:CD,147543:CD,147548:CD,147553:CD,147558:CD,147566:CD,147567:CD,147577:CD,147622:CD,147623:CD,147627:CD,147631:CD,147632:CD,147633
147528 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
147533 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v36)::
147538 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v104.append(#( and ATOM record: ))::
147543 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v107.append(v15)::
147548 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v109.append(#( | ))::
147553 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v112.append(v55)::
147558 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::
147566 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,147280
147567 :: CALL :: call :: Ljava/lang/Object :: v67 = v8.set(v36, v15)::
147577 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v36)::
147622 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v90 + #(1)::DD,147633:CF,147632
147623 :: CALL :: call :: I :: v12 = p2 $atmResGroups .size()::JM,147474:JM,147297:JM,147627:JM,147375
147627 :: PRED :: IF :: Z :: if (v90 < v12) goto 23::CD,147292:CD,147297:CD,147298:CD,147302:CD,147628:JM,147474:JM,147627:JM,147375
147630 :: EXPR :: assign :: null :: PHI v36 = v23, v35::DD,147375:DD,147474:JM,147297:JM,147627:CF,147370
147631 :: EXPR :: assign :: null :: PHI v87 = v89, v33, v33, v33::DD,147632:CF,147622
147628 :: NORM :: compound :: Ljava/util/List :: return v8::DD,147280
147629 :: EXPR :: assign :: null :: PHI v33 = v89, #(0)::DD,147368:DD,147370:DD,147631
147632 :: EXPR :: assign :: null :: PHI v89 = #(1), v87::CF,147633:DD,147629:DD,147631
147633 :: EXPR :: assign :: null :: PHI v90 = #(0), v88::JM,147474:JM,147297:JM,147375:DD,147622:DD,147627
147743 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideChains(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,147751:CD,147756:CD,147760
147751 :: CALL :: call :: Ljava/util/List :: v7 = p2 $atomRes .getAtomGroups(v5)::JM,147760:CL,124033
147756 :: CALL :: call :: I :: v9 = v7.size()::JM,147760
147760 :: PRED :: IF :: Z :: if (v9 >= #(1)) goto 35::CD,147792:CD,147798
147792 :: CALL :: call :: Z :: v21 = p0 $this .alignNucleotideGroups(v17, v19)::JM,147798:CL,151506
147798 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,147799
147799 :: CALL :: call :: V :: p2 $atomRes .setSeqResGroups(v17)::CL,63843
147822 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::CE,147823:CD,147828:CD,147832:CD,147836:CD,147842:CD,147850:CD,147855:CD,147859:CD,147864:CD,147869:CD,147874:CD,147884:CD,147889:CD,147893:CD,147898:CD,147903:CD,147908:CD,147916:CD,147921:CD,147938:CD,147939:CD,147942:CD,147948:CD,147949:CD,147957:CD,147961
147823 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::JM,142796
147828 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
147832 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
147836 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(0))::CL,102434
147842 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(0))::CL,102434
147850 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
147855 :: CALL :: call :: I :: v19 = v11.length()::
147859 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v15.append(v19)::
147864 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#(): ))::
147869 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v24.append(v11)::
147874 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
147884 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
147889 :: CALL :: call :: I :: v35 = v13.length()::
147893 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(v35)::
147898 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#(): ))::
147903 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(v13)::
147908 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
147916 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v45 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,147957:JM,147962:JM,147961:JM,147966:JM,147999:JM,147949
147921 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v47 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,147957:JM,147962:JM,147961:JM,147966:JM,147999:JM,147949
147938 :: NORM :: compound :: Z :: return #(1)::DD,147823
147939 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v57 = getBlosum65()::JM,147957:JM,147962:JM,147961:JM,147966:JM,147999:JM,147949
147942 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v58 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,147957:JM,147962:JM,147961:JM,147966:JM,147999:JM,147949
147948 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v61 = LOCAL::JM,147957:JM,147962:JM,147961:JM,147966:JM,147999:JM,147949
147949 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v63 = getPairwiseAligner(v45, v47, v61, v58, v57)::JM,147957:JM,147962:JM,147961:JM,147966:JM,147999:JM,147949
147957 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v65 = v63.getPair()::JM,147957:JM,147962:JM,147961:JM,147966:JM,147999:JM,147949
147962 :: CALL :: call :: I :: v68 = v65.getLength()::JM,147962:JM,147966:JM,147999
147961 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 216::CD,147962:CD,147966:CD,147991:JM,147999
147966 :: PRED :: IF :: Z :: if (v68 != #(0)) goto 260::CD,147991:CD,147994:CD,147999:CD,148004:CD,148009:CD,148017:CD,148026
147991 :: NORM :: compound :: Z :: return #(1)::DD,147823
147994 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
147999 :: CALL :: call :: Ljava/lang/String :: v75 = v65.toString(#(100))::JM,147962:JM,147966:JM,147999
148004 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v70.append(v75)::
148009 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
148017 :: CALL :: call :: Z :: v82 = p0 $this .mapChains(p1 $seqRes , p2 $atomRes , v65, v5, v7)::JM,148026:CL,151903
148026 :: NORM :: compound :: Z :: return v82::DD,147823
148090 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::CE,148091:CD,148096:CD,148101:CD,148106:CD,148110:CD,148111:CD,148115:CD,148120:CD,148121:CD,148122:CD,148128:CD,148133:CD,148138:CD,148146:CD,148151
148091 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::JM,142882
148096 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,148110:CL,74604
148101 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,148110
148106 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,148110
148110 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,148121
148111 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,148120:CL,63330
148115 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,148120
148122 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,148110
148120 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,148106:CD,148110:CD,148111:CD,148115:CD,148122:CF,148121
148121 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,148091
148128 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
148133 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,148120
148138 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#(' for PDB id ))::
148143 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .pdb_id::
148146 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::
148151 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
148182 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::CE,148183:CD,148198:CD,148203:CD,148208:CD,148216:CD,148220:CD,148225:CD,148230:CD,148239:CD,148245:CD,148249:CD,148254:CD,148258:CD,148263:CD,148267:CD,148272:CD,148273:CD,148274:CD,148280:CD,148285:CD,148290:CD,148295:CD,148300
148183 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::JM,142940
148198 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
148203 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p3 $modelnr )::JM,148272
148208 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in this structure. (...))::
148213 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .models::
148216 :: CALL :: call :: I :: v52 = v50.size()::
148220 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v49.append(v52)::
148225 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#()))::
148230 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
148239 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v10 = p0 $this .findChain(p1 $chainId , p3 $modelnr )::CL,148090
148245 :: CALL :: call :: Ljava/util/List :: v12 = v10.getAtomGroups()::JM,148258:CL,45126
148249 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,148258
148254 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,148258
148258 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::DD,148273
148263 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,148272:CL,74617
148267 :: CALL :: call :: Z :: v26 = v24.equals(p2 $pdbResnum )::JM,148272
148274 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,148258
148272 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 129::CD,148254:CD,148258:CD,148263:CD,148267:CD,148274:CF,148273
148273 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v20::DD,148183
148280 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
148285 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(p2 $pdbResnum )::JM,148272
148290 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#( in chain ))::
148295 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(p1 $chainId )::JM,148272
148300 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,148272
148383 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addSSBond(org.biojava.nbio.structure.Bond)::CD,148391
148391 :: CALL :: call :: Z :: v6 = v4.add(p1 $ssbond )::
148388 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .ssbonds::
148400 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.toString()::CD,148404:CD,148405:CD,148413:CD,148418:CD,148422:CD,148423:CD,148431:CD,148439:CD,148444:CD,148449:CD,148453:CD,148454:CD,148462:CD,148470:CD,148475:CD,148480:CD,148484:CD,148485:CD,148493:CD,148501:CD,148506:CD,148511:CD,148515:CD,148516:CD,148524:CD,148529:CD,148533:CD,148534:CD,148542:CD,148550:CD,148555:CD,148560:CD,148564:CD,148565:CD,148573:CD,148581:CD,148586:CD,148591:CD,148595:CD,148596:CD,148604:CD,148612:CD,148617:CD,148622:CD,148626:CD,148627:CD,148635:CD,148640
148404 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
148405 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([SSBOND:))::
148413 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
148418 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
148422 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
148423 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
148431 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Chain: ))::
148439 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
148436 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .chainID1::
148444 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
148449 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
148454 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
148453 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
148462 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Residue #: ))::
148467 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::
148470 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
148475 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
148480 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
148484 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
148485 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
148493 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Ins. Code: ))::
148498 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .insCode1::
148501 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
148506 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
148511 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
148515 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
148516 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
148524 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(Atom 2:))::
148529 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
148534 :: CALL :: call :: Ljava/lang/String :: v67 = valueOf(v64)::
148533 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
148542 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(#(	Chain: ))::
148547 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .chainID2::
148550 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v70.append(v71)::
148555 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v73.append(#())::
148560 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
148564 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::
148565 :: CALL :: call :: Ljava/lang/String :: v80 = valueOf(v77)::
148573 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v78.append(#(	Residue #: ))::
148578 :: EXPR :: reference :: Ljava/lang/String :: v84 = p0 $this .resnum2::
148581 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v83.append(v84)::
148586 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#())::
148591 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
148595 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
148596 :: CALL :: call :: Ljava/lang/String :: v93 = valueOf(v90)::
148604 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v91.append(#(	Ins. Code: ))::
148609 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .insCode2::
148612 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(v97)::
148617 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(#())::
148622 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
148626 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
148627 :: CALL :: call :: Ljava/lang/String :: v106 = valueOf(v103)::
148635 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(#(]))::
148640 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
148696 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::CE,148697:CD,148703:CD,148707
148697 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::JM,143741:JM,143847
148703 :: CALL :: call :: I :: v5 = v3.size()::JM,148707
148700 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::JM,148707
148707 :: NORM :: compound :: I :: return v5::CF,148697
148710 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::
148709 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::CE,148710:CD,148717:CD,148723
148717 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,148723:CL,152439
148723 :: NORM :: compound :: I :: return v8::CF,148710
148727 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::CE,148728:CD,148735:CD,148741
148728 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::
148735 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,148741:CL,152494
148741 :: NORM :: compound :: I :: return v8::CF,148728
148746 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::
148745 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::CE,148746:CD,148753:CD,148759
148753 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,148759:CL,152508
148759 :: NORM :: compound :: I :: return v8::CF,148746
148763 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.parse(java.io.BufferedReader)::CD,148768:CD,148773:CD,148777:CD,148781:CD,149203:CD,149208:CD,149213:CD,149257:CD,149299:CD,149308:CD,149312:CD,149336:CD,149337:CD,149338:CD,149339:CD,149344:CD,149345:CD,149346:CD,149347:CD,149348
148768 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,149299
148773 :: CALL :: call :: Ljava/util/regex/Pattern :: v9 = compile(#(^\s*#.*ECOD\s*version...))::
148777 :: CALL :: call :: Ljava/util/regex/Pattern :: v12 = compile(#(^\s*#.*))::
148781 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $in .readLine()::JM,149347:JM,149312
148786 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v9.matcher(v251)::JM,148795
148791 :: CALL :: call :: Z :: v22 = v20.matches()::JM,148795
148795 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 78::CD,148796:CD,148805:CD,148810:CD,148814:CD,149340:CD,149341:CD,149342:CD,149343:JM,148795
148796 :: CALL :: call :: Ljava/lang/String :: v38 = v20.group(#(1))::JM,148795
148805 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v12.matcher(v251)::JM,148814
148810 :: CALL :: call :: Z :: v27 = v25.matches()::JM,148814
148814 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 874::CF,149340:CD,148815:CD,148820:CD,148821
148815 :: CALL :: call :: [Ljava/lang/String :: v30 = v251.split(#(	))::JM,148822:JM,148820:JM,148824:JM,149016:JM,148844
148822 :: EXPR :: assign :: I :: v33 = v30.length::DD,148823
148823 :: PRED :: IF :: Z :: if (v33 == #(14)) goto 131::CD,148824:CD,148825:CD,148826:CD,148831:CD,148835:CD,148839:CD,148844:CD,148845:CD,148886:CD,148891:CD,148896:CD,148897:CD,148941:CD,148942:CD,148956:CD,148957:CD,148971:CD,148972:CD,148986:CD,148987:CD,149001:CD,149006:CD,149011:CD,149016:CD,149017:CD,149023:CD,149032:CD,149041:CD,149050:CD,149059:CD,149068:CD,149073:CD,149078:CD,149129:CD,149134:CD,149172:JM,152578:JM,152581:JM,152554:JM,152587:JM,152584:JM,152590:JM,152557:JM,152563:JM,152560:JM,152593:JM,152566:JM,152599:JM,152596:JM,152602:JM,152569:JM,152575:JM,152572:JM,152605:CD,149194:CD,149319:CD,149321:CD,149326:CD,149328:CD,149333:CD,149334:CD,149340:CD,149341:CD,149342:CD,149343
148820 :: EXPR :: assign :: I :: v31 = v30.length::DD,148821
148821 :: PRED :: IF :: Z :: if (v31 == #(13)) goto 131::CD,148822:CD,148823:CD,148826:CD,148831:CD,148835:CD,148839:CD,148844:CD,148845:CD,148886:CD,148891:CD,148896:CD,148897:CD,148941:CD,148942:CD,148956:CD,148957:CD,148971:CD,148972:CD,148986:CD,148987:CD,149001:CD,149006:CD,149011:CD,149016:CD,149017:CD,149023:CD,149032:CD,149041:CD,149050:CD,149059:CD,149068:CD,149073:CD,149078:CD,149129:CD,149134:CD,149172:JM,152578:JM,152581:JM,152554:JM,152587:JM,152584:JM,152590:JM,152557:JM,152563:JM,152560:JM,152593:JM,152566:JM,152599:JM,152596:JM,152602:JM,152569:JM,152575:JM,152572:JM,152605:CD,149194:CD,149319:CD,149321:CD,149326:CD,149328:CD,149333:CD,149334:CD,149340:CD,149341:CD,149342:CD,149343
148826 :: EXPR :: assign :: Ljava/lang/Object :: v39 = #(0) + #(1)::DD,148839
148827 :: EXPR :: reference :: Ljava/lang/Object :: v40 = v30[#(0)]::
148824 :: EXPR :: assign :: I :: v35 = v30.length::DD,148825
148825 :: PRED :: IF :: Z :: if (v35 != #(15)) goto 826::CD,148826:CD,148831:CD,148835:CD,148839:CD,148844:CD,148845:CD,148886:CD,148891:CD,148896:CD,148897:CD,148941:CD,148942:CD,148956:CD,148957:CD,148971:CD,148972:CD,148986:CD,148987:CD,149001:CD,149006:CD,149011:CD,149016:CD,149017:CD,149023:CD,149032:CD,149041:CD,149050:CD,149059:CD,149068:CD,149073:CD,149078:CD,149129:CD,149134:CD,149172:JM,152578:JM,152581:JM,152554:JM,152587:JM,152584:JM,152590:JM,152557:JM,152563:JM,152560:JM,152593:JM,152566:JM,152599:JM,152596:JM,152602:JM,152569:JM,152575:JM,152572:JM,152605:CD,149194:CD,149223:CD,149319:CD,149321:CD,149326:CD,149328:CD,149333:CD,149334:CD,149340:CD,149341:CD,149342:CD,149343
148831 :: CALL :: call :: J :: v42 = parseLong(v40)::
148835 :: CALL :: call :: Ljava/lang/Long :: v44 = valueOf(v42)::
148839 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v39 + #(1)::DD,148846:DD,149319
148846 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v45 + #(1)::DD,149319
148847 :: EXPR :: reference :: Ljava/lang/Object :: v49 = v30[v45]::JM,148856:JM,148867
148844 :: EXPR :: assign :: I :: v47 = v30.length::DD,148845
148845 :: PRED :: IF :: Z :: if (v47 < #(14)) goto 233::CF,149319:CD,148846:CD,148851:CD,148856
148851 :: CALL :: call :: Z :: v52 = v49.equalsIgnoreCase(#(MANUAL_REP))::JM,148856
148856 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 197::CD,148862:CD,148867:CD,149319
148862 :: CALL :: call :: Z :: v57 = v49.equalsIgnoreCase(#(AUTO_NONREP))::JM,148867
148867 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 212::CD,148876:CD,149319
148876 :: CALL :: call :: Ljava/lang/Integer :: v64 = valueOf(v252)::
148886 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v66 + #(1)::DD,149001
148891 :: CALL :: call :: [Ljava/lang/String :: v72 = v69.split(#(\.))::JM,148898:JM,148896:JM,148986:JM,148971:JM,148956:JM,148941
148898 :: EXPR :: assign :: I :: v76 = v72.length::CF,148899
148899 :: PRED :: IF :: Z :: if (#(4) >= v76) goto 324::CF,149321:CD,148900
148896 :: EXPR :: assign :: I :: v73 = v72.length::DD,148897
148897 :: PRED :: IF :: Z :: if (v73 < #(3)) goto 261::CD,148898:CD,148899:CD,148900:CD,149321
148900 :: PRED :: IF :: Z :: if (v249 <= #(1)) goto 294::CD,148909:CD,148919:CD,148921:CD,149321
148909 :: CALL :: call :: Ljava/lang/Integer :: v83 = valueOf(v252)::
148919 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v249 + #(-1)::DD,149321
148921 :: PRED :: IF :: Z :: if (v249 == #(0)) goto 324::CF,149321:CD,148930:CD,148940
148930 :: CALL :: call :: Ljava/lang/Integer :: v93 = valueOf(v252)::
148942 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 346::CD,148947:CD,148951
148943 :: EXPR :: reference :: Ljava/lang/Object :: v98 = v72[#(0)]::
148940 :: EXPR :: assign :: Ljava/lang/Object :: v95 = v249 + #(-1)::DD,149321
148941 :: EXPR :: assign :: I :: v97 = v72.length::DD,148942
148947 :: CALL :: call :: I :: v100 = parseInt(v98)::
148951 :: CALL :: call :: Ljava/lang/Integer :: v102 = valueOf(v100)::
148958 :: EXPR :: reference :: Ljava/lang/Object :: v105 = v72[#(1)]::
148956 :: EXPR :: assign :: I :: v104 = v72.length::DD,148957
148957 :: PRED :: IF :: Z :: if (v104 <= #(1)) goto 369::CD,148962:CD,148966
148962 :: CALL :: call :: I :: v107 = parseInt(v105)::
148966 :: CALL :: call :: Ljava/lang/Integer :: v109 = valueOf(v107)::
148971 :: EXPR :: assign :: I :: v111 = v72.length::DD,148972
148972 :: PRED :: IF :: Z :: if (v111 <= #(2)) goto 392::CD,148977:CD,148981
148973 :: EXPR :: reference :: Ljava/lang/Object :: v113 = v72[#(2)]::
148977 :: CALL :: call :: I :: v115 = parseInt(v113)::
148981 :: CALL :: call :: Ljava/lang/Integer :: v117 = valueOf(v115)::
148986 :: EXPR :: assign :: I :: v119 = v72.length::DD,148987
148987 :: PRED :: IF :: Z :: if (v119 <= #(3)) goto 417::CD,148992:CD,148996
148988 :: EXPR :: reference :: Ljava/lang/Object :: v120 = v72[#(3)]::
148992 :: CALL :: call :: I :: v122 = parseInt(v120)::
148996 :: CALL :: call :: Ljava/lang/Integer :: v124 = valueOf(v122)::
149001 :: EXPR :: assign :: Ljava/lang/Object :: v126 = v68 + #(1)::DD,149006
149006 :: EXPR :: assign :: Ljava/lang/Object :: v128 = v126 + #(1)::DD,149011
149011 :: EXPR :: assign :: Ljava/lang/Object :: v130 = v128 + #(1)::DD,149018:DD,149326
149018 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v130 + #(1)::DD,149326
149016 :: EXPR :: assign :: I :: v132 = v30.length::DD,149017
149017 :: PRED :: IF :: Z :: if (v132 < #(15)) goto 468::CF,149326:CD,149018
149023 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v135 + #(1)::DD,149032
149032 :: EXPR :: assign :: Ljava/lang/Object :: v141 = v137 + #(1)::DD,149041
149041 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v141 + #(1)::DD,149050
149050 :: EXPR :: assign :: Ljava/lang/Object :: v149 = v145 + #(1)::DD,149059
149059 :: EXPR :: assign :: Ljava/lang/Object :: v153 = v149 + #(1)::DD,149068
149068 :: EXPR :: assign :: Ljava/lang/Object :: v157 = v153 + #(1)::
149069 :: EXPR :: reference :: Ljava/lang/Object :: v158 = v30[v153]::JM,149078:JM,149085
149073 :: CALL :: call :: Z :: v161 = v158.equals(#(NOT_DOMAIN_ASSEMBLY))::JM,149078
149078 :: PRED :: IF :: Z :: if (v161 == #(0)) goto 563::CD,149080:CD,149085:CD,149328
149080 :: CALL :: call :: Z :: v164 = v158.equals(#(IS_DOMAIN_ASSEMBLY))::JM,149085
149086 :: PRED :: IF :: Z :: if (v248 <= #(1)) goto 598::CD,149090:CD,149099:CD,149101:CD,149328
149085 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 624::CD,149086:CD,149116:CD,149120:CD,149328
149090 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v252)::
149099 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v248 + #(-1)::DD,149328
149101 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 636::CF,149328:CD,149105:CD,149114
149105 :: CALL :: call :: Ljava/lang/Integer :: v176 = valueOf(v252)::
149114 :: EXPR :: assign :: Ljava/lang/Object :: v178 = v248 + #(-1)::DD,149328
149116 :: CALL :: call :: J :: v180 = parseLong(v158)::
149120 :: CALL :: call :: Ljava/lang/Long :: v182 = valueOf(v180)::
149125 :: EXPR :: reference :: Ljava/lang/Object :: v186 = v30[v157]::JM,149134:JM,149139:JM,149135
149129 :: CALL :: call :: Z :: v189 = v186.equals(#(NO_LIGANDS_4A))::JM,149134
149134 :: PRED :: IF :: Z :: if (v189 != #(0)) goto 663::CD,149135:CD,149139:CD,149333:CD,149334
149135 :: CALL :: call :: Z :: v191 = v186.isEmpty()::JM,149139:JM,149135
149139 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 675::CD,149144:CD,149149:CD,149150:CD,149155:CD,149171:CD,149330:CD,149331:CD,149332:CD,149333:CD,149334
149144 :: CALL :: call :: [Ljava/lang/String :: v194 = v186.split(#(,))::JM,149155:JM,149150
149150 :: EXPR :: assign :: I :: v196 = v194.length::
149149 :: NORM :: declaration :: Ljava/util/LinkedHashSet :: v195 = new java.util.LinkedHashSet::CF,149150
149155 :: EXPR :: assign :: I :: v198 = v194.length::DD,149171
149165 :: CALL :: call :: Z :: v203 = v195.add(v201)::
149170 :: EXPR :: assign :: Ljava/lang/Object :: v204 = v205 + #(1)::DD,149332:CF,149330
149171 :: PRED :: IF :: Z :: if (v205 < v198) goto 710::CF,149333:CD,149165:CD,149170:CD,149330:CD,149331:CD,149332
149172 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v209 = new org.biojava.nbio.structure.ecod.EcodDomain::
149194 :: CALL :: call :: Z :: v212 = v4.add(v209)::
149203 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v219 = new java.lang.StringBuilder::
149208 :: CALL :: call :: Ljava/lang/StringBuilder :: v223 = v219.append(v261)::
149213 :: CALL :: call :: Ljava/lang/String :: v225 = v223.toString()::
149223 :: PRED :: IF :: Z :: if (v250 <= #(1)) goto 852::CD,149227:CD,149236:CD,149238:CD,149340:CD,149341:CD,149342:CD,149343
149227 :: CALL :: call :: Ljava/lang/Integer :: v231 = valueOf(v252)::
149238 :: PRED :: IF :: Z :: if (v250 != #(0)) goto 874::CF,149340:CD,149242:CD,149251:CD,149341:CD,149342:CD,149343
149236 :: EXPR :: assign :: Ljava/lang/Object :: v233 = v250 + #(-1)::DD,149342
149242 :: CALL :: call :: Ljava/lang/Integer :: v238 = valueOf(v252)::
149251 :: EXPR :: assign :: Ljava/lang/Object :: v240 = v248 + #(-1)::DD,149340
149252 :: CALL :: call :: Ljava/lang/String :: v246 = p1 $in .readLine()::JM,149347:JM,149312
149256 :: EXPR :: assign :: Ljava/lang/Object :: v247 = v263 + #(1)::DD,149348:CF,149344
149257 :: PRED :: IF :: Z :: if (v251 != #(null)) goto 48::CD,148786:CD,148791:CD,148795:CD,149252:CD,149256:CD,149340:CD,149341:CD,149342:CD,149343:CD,149344:CD,149345:CD,149346:CD,149347:CD,149348
149299 :: CALL :: call :: Ljava/util/List :: v283 = unmodifiableList(v4)::JM,149299
149308 :: CALL :: call :: V :: p1 $in .close()::JM,149347:JM,149312
149312 :: PRED :: IF :: Z :: if (p1 $in  == #(null)) goto 967::CD,149313:JM,149347
149313 :: CALL :: call :: V :: p1 $in .close()::JM,149347
149319 :: EXPR :: assign :: null :: PHI v66 = v45, v48, v48, v48::DD,148886
149321 :: EXPR :: assign :: null :: PHI v96 = v249, v86, v249, v95::CF,148941:DD,149337:DD,149341
149326 :: EXPR :: assign :: null :: PHI v135 = v130, v133::DD,149023
149330 :: EXPR :: assign :: null :: PHI v253 = v250, v253::CF,149331:DD,149330:DD,149333:DD,149338
149331 :: EXPR :: assign :: null :: PHI v255 = v252, v255::CF,149332:DD,149331:DD,149334:DD,149339
149328 :: EXPR :: assign :: null :: PHI v183 = v248, v171, v248, v178, v248::DD,149336:DD,149340
149334 :: EXPR :: assign :: null :: PHI v258 = v252, v255::DD,149339:DD,149343
149332 :: EXPR :: assign :: null :: PHI v205 = #(0), v204::DD,149170:DD,149171
149333 :: EXPR :: assign :: null :: PHI v256 = v250, v253::CF,149334:DD,149338:DD,149342
149338 :: EXPR :: assign :: null :: PHI v259 = v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v253, v253, v256, v256::DD,149342
149339 :: EXPR :: assign :: null :: PHI v261 = v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v255, v255, v258, v258::DD,149343
149336 :: EXPR :: assign :: null :: PHI v214 = v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v183, v183, v183, v183, v183, v183, v183, v183, v183::DD,149340
149337 :: EXPR :: assign :: null :: PHI v215 = v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96::DD,149341
149342 :: EXPR :: assign :: null :: PHI v243 = v250, v250, v256, v259, v233, v250, v250::CF,149343:DD,149346
149343 :: EXPR :: assign :: null :: PHI v263 = v252, v252, v258, v261, v252, v252, v252::JM,149347:JM,149312:DD,149256
149340 :: EXPR :: assign :: null :: PHI v241 = v248, v248, v183, v214, v248, v248, v240::CF,149341:DD,149344
149341 :: EXPR :: assign :: null :: PHI v242 = v249, v249, v96, v215, v249, v249, v249::CF,149342:DD,149345
149346 :: EXPR :: assign :: null :: PHI v250 = #(10), v243::CF,149347:DD,149223:DD,149236:DD,149238:DD,149330:DD,149333:DD,149338:DD,149342
149347 :: EXPR :: assign :: null :: PHI v251 = v17, v246::CF,149348:DD,149257
149344 :: EXPR :: assign :: null :: PHI v248 = #(1), v241::CF,149345:DD,149086:DD,149099:DD,149101:DD,149114:DD,149251:DD,149328:DD,149336:DD,149340
149345 :: EXPR :: assign :: null :: PHI v249 = #(5), v242::CF,149346:DD,148900:DD,148919:DD,148921:DD,148940:DD,149321:DD,149337:DD,149341
149348 :: EXPR :: assign :: null :: PHI v252 = #(1), v247::DD,149331:DD,149334:DD,149339:DD,149343:CF,149257
150239 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setBonds(java.util.List)::JM,150244
150244 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = p1 $bonds ::
150250 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::CE,150251:CD,150263:CD,150272
150251 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::JM,144916:JM,144921
150263 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::
150269 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .atomA::DD,150272
150272 :: PRED :: IF :: Z :: if (p1 $exclude  != v6) goto 40::CD,150276:CD,150280
150273 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v8 = p0 $this .atomB::DD,150276
150276 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v8::DD,150251
150277 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v7 = p0 $this .atomA::DD,150280
150280 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v7::DD,150251
150289 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.addBond(org.biojava.nbio.structure.Bond)::CD,150297:CD,150309
150294 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .bonds::DD,150297
150298 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,150303
150297 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 20::CD,150298
150303 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
150306 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .bonds::
150309 :: CALL :: call :: Z :: v11 = v9.add(p1 $bond )::
150323 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadAllDefinitions()::CD,150340:CD,150342:CD,150346:CD,150353:CD,150358:CD,150362:CD,150367:CD,150408:CD,150417:CD,150419:CD,150430:CD,150439:CD,150441:CD,150483
150342 :: CALL :: call :: Z :: v12 = v10.get()::JM,150346
150340 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v10 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,150346
150346 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 79::CD,150382:CD,150384:CD,150388:CD,150403:CD,150424:CD,150446:CD,150451:CD,150456:CD,150457:CD,150458:CD,150463:CD,150468:CD,150476:CD,150478
150353 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
150358 :: CALL :: call :: Ljava/lang/String :: v69 = v63.getMessage()::
150362 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::
150367 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::
150382 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,150384
150384 :: CALL :: call :: V :: v13.set(#(1))::JM,150384
150388 :: CALL :: call :: J :: v17 = currentTimeMillis()::JM,150456
150403 :: CALL :: call :: V :: downloadFile()::CL,152704
150408 :: CALL :: call :: Ljava/lang/String :: v29 = v25.getMessage()::
150419 :: CALL :: call :: V :: v31.set(#(0))::
150417 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v31 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
150424 :: CALL :: call :: V :: p0 $this .split()::CL,150596
150430 :: CALL :: call :: Ljava/lang/String :: v38 = v34.getMessage()::
150439 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v40 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
150441 :: CALL :: call :: V :: v40.set(#(0))::
150446 :: CALL :: call :: J :: v43 = currentTimeMillis()::JM,150456
150451 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
150458 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v45.append(v50)::
150456 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v43 - v17::DD,150457
150457 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v48 / #(1000 l)::
150463 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( sec.))::
150468 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
150478 :: CALL :: call :: V :: v59.set(#(0))::JM,150478
150476 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v59 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,150478
150483 :: EXPR :: assign :: Ljava/lang/Exception :: v63 = catch <exc>::
150596 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.split()::CD,150606:CD,150607:CD,150614:CD,150624:CD,150625:CD,150639:CD,150643:CD,150690:CD,150691:CD,150695:CD,150700:CD,150701:CD,150707:CD,150721:CD,150726:CD,150731:CD,150736:CD,150751:CD,150752:CD,150753:CD,150754
150606 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::
150607 :: EXPR :: reference :: Ljava/io/File :: v7 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
150614 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
150624 :: NORM :: declaration :: Ljava/io/BufferedReader :: v17 = new java.io.BufferedReader::JM,150752:DD,150701:CF,150625
150625 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v18 = new java.io.InputStreamReader::
150639 :: CALL :: call :: Ljava/lang/String :: v24 = v17.readLine()::JM,150752
150643 :: NORM :: declaration :: Ljava/io/StringWriter :: v25 = new java.io.StringWriter::DD,150753
150648 :: CALL :: call :: Z :: v29 = v52.startsWith(#(data_))::JM,150653
150654 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 130::CF,150747:CD,150655:CD,150659:CD,150664
150655 :: CALL :: call :: Ljava/lang/String :: v31 = v53.toString()::
150653 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 148::CF,150748:CD,150654:CD,150665:CD,150670:CD,150747:CD,150749:CD,150750
150659 :: CALL :: call :: V :: p0 $this .writeID(v31, v54)::CL,152808
150664 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v51 + #(1)::DD,150747
150665 :: CALL :: call :: Ljava/lang/String :: v38 = v52.substring(#(5))::JM,150750
150670 :: NORM :: declaration :: Ljava/io/StringWriter :: v39 = new java.io.StringWriter::DD,150749
150674 :: CALL :: call :: Ljava/io/StringWriter :: v45 = v42.append(v52)::
150679 :: EXPR :: reference :: Ljava/lang/String :: v46 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.NEWLINE::
150681 :: CALL :: call :: Ljava/io/StringWriter :: v48 = v42.append(v46)::
150686 :: CALL :: call :: Ljava/lang/String :: v50 = v17.readLine()::JM,150752
150690 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 102::CD,150648:CD,150653:CD,150674:CD,150679:CD,150681:CD,150686:CD,150748:CD,150749:CD,150750:CD,150751:CD,150752:CD,150753:CD,150754
150691 :: CALL :: call :: Ljava/lang/String :: v56 = v53.toString()::
150695 :: CALL :: call :: V :: p0 $this .writeID(v56, v54)::CL,152808
150702 :: CALL :: call :: V :: v17.close()::
150700 :: EXPR :: assign :: Ljava/lang/Object :: v58 = v51 + #(1)::CF,150701
150701 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 246::CD,150702
150707 :: CALL :: call :: V :: v17.close()::
150721 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
150726 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v61.append(v58)::
150731 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( chemical component f...))::
150736 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
150747 :: EXPR :: assign :: null :: PHI v35 = v51, v34::DD,150748:JM,150750
150750 :: EXPR :: assign :: null :: PHI v43 = v54, v38::DD,150754
150751 :: EXPR :: assign :: null :: PHI v51 = #(0), v41::CF,150752:DD,150664:DD,150700:DD,150747:DD,150748
150748 :: EXPR :: assign :: null :: PHI v41 = v51, v35::CF,150749:DD,150751
150749 :: EXPR :: assign :: null :: PHI v42 = v53, v39::CF,150750:DD,150753
150754 :: EXPR :: assign :: null :: PHI v54 = #(null), v43::DD,150654:DD,150750:CF,150690
150752 :: EXPR :: assign :: null :: PHI v52 = v24, v50::CF,150753:JM,150653:JM,150750:DD,150690
150753 :: EXPR :: assign :: null :: PHI v53 = v25, v42::CF,150754:DD,150749
150824 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL)::CD,150828
150828 :: CALL :: call :: Ljava/net/HttpURLConnection :: v5 = openHttpURLConnection(p1 $url , #(15000))::CL,94075
150886 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::DD,150890
150890 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .dictionary = v4::
150893 :: NORM :: declaration :: Ljava/util/HashMap :: v6 = new java.util.HashMap::DD,150897
150897 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .replaces = v6::
150900 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,150904
150904 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .isreplacedby = v8::
150951 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::CE,150952:CD,150954:JM,153058:JM,153051:JM,153065:CD,150958:CD,150962:CD,150968:CD,150974:CD,150978
150954 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v2 = new org.biojava.nbio.structure.io.mmcif.model.ChemComp::DD,150978
150952 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::JM,145656:JM,145737
150958 :: CALL :: call :: V :: v2.setOne_letter_code(#(?))::CL,153080
150962 :: CALL :: call :: V :: v2.setThree_letter_code(#(???))::CL,153095
150968 :: CALL :: call :: V :: v2.setPolymerType(v8)::CL,153106
150974 :: CALL :: call :: V :: v2.setResidueType(v10)::CL,153117
150978 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v2::DD,150952
150990 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setId(java.lang.String)::JM,150995
150995 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
151002 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::
151001 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::CE,151002:CD,151005:CD,151014:CD,151022:CD,151027:CD,151028:CD,151033:CD,151038:CD,151047:CD,151048:CD,151049:CD,151065:CD,151066:CD,151068
151005 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $expression .split(#(-))::
151010 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[#(0)]::JM,151048:JM,151068
151014 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,151048:JM,151068
151018 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v6[#(1)]::JM,151048:JM,151065
151022 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,151048:JM,151065
151027 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v16 = new java.lang.IllegalArgumentException::
151028 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
151033 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $expression )::
151038 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
151047 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,151066:CF,151048
151048 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v13 - v9::DD,151049
151049 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v26 + #(1)::
151055 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v34)::
151059 :: CALL :: call :: Z :: v32 = v25.add(v30)::
151066 :: NORM :: compound :: Ljava/util/List :: return v25::DD,151002
151064 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v34 + #(1)::DD,151068
151065 :: PRED :: IF :: Z :: if (v34 <= v13) goto 75::CD,151055:CD,151059:CD,151064:CD,151068:CF,151066
151068 :: EXPR :: assign :: null :: PHI v34 = v9, v33::DD,151064:DD,151065
151106 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element1 = p1 $element1 ::
151109 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element2 = p2 $element2 ::
151167 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getCstar()::CD,151186
151186 :: CALL :: call :: D :: v11 = p0 $this .getVolume()::CL,153128
151506 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::CE,151507:CD,151512:CD,151516:CD,151520:CD,151526:CD,151532:CD,151536:CD,151669:CD,151674:CD,151679:CD,151687:CD,151713:CD,151718:CD,151723:CD,151731
151507 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::JM,147798
151512 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
151516 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
151520 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(1))::JM,151536:JM,151532:CL,102434
151526 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(1))::JM,151537:JM,151541:CL,102434
151532 :: CALL :: call :: Z :: v15 = v11.isEmpty()::JM,151536:JM,151532
151536 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 50::CD,151537:CD,151541:CD,151548
151537 :: CALL :: call :: Z :: v18 = v13.isEmpty()::JM,151537:JM,151541
151541 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 63::CD,151548:CD,151551:CD,151556:CD,151560:CD,151565:CD,151570:CD,151575:CD,151585:CD,151590:CD,151594:CD,151599:CD,151604:CD,151609:CD,151617:CD,151622:CD,151627
151551 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
151548 :: NORM :: compound :: Z :: return #(1)::DD,151507
151556 :: CALL :: call :: I :: v24 = v11.length()::JM,151536:JM,151532
151560 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
151565 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#() ))::
151570 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v29.append(v11)::JM,151536:JM,151532
151575 :: CALL :: call :: Ljava/lang/String :: v33 = v31.toString()::
151585 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
151590 :: CALL :: call :: I :: v40 = v13.length()::JM,151537:JM,151541
151594 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v36.append(v40)::
151599 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v42.append(#() ))::
151604 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v13)::JM,151537:JM,151541
151609 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
151617 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v51 = p0 $this .getNucleotideSequence(v11)::JM,151651:JM,151638:JM,151818:JM,151627:JM,151643:JM,151656:JM,151817:JM,151630:JM,151644:CL,153535
151622 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v53 = p0 $this .getNucleotideSequence(v13)::JM,151634:JM,151638:JM,151700:JM,151819:JM,151643:JM,151688:JM,151695:JM,151628:CL,153535
151627 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 170::CD,151628:CD,151629
151630 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v56 = v51.getCompoundSet()::JM,151651:JM,151638:JM,151818:JM,151643:JM,151656:JM,151817:JM,151630:JM,151644
151628 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 173::CD,151629:CD,151630:CD,151634:CD,151638:CD,151643:CD,151732:CD,151735:CD,151741:CD,151742:CD,151750:CD,151754:CD,151818:CD,151819:JM,151651:JM,151656:JM,151817:JM,151644
151629 :: NORM :: compound :: Z :: return #(1)::DD,151507
151634 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v58 = v53.getCompoundSet()::JM,151634:JM,151638:JM,151700:JM,151819:JM,151643:JM,151688:JM,151695
151638 :: CALL :: call :: Z :: v60 = v56.equals(v58)::JM,151651:JM,151638:JM,151643:JM,151656:JM,151700:JM,151695
151643 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 317::CF,151818:CD,151644:CD,151648:CD,151651:CD,151656:CD,151688:CD,151692:CD,151695:CD,151700:CD,151817:CD,151819:JM,151638:JM,151643:JM,151630
151644 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v62 = v51.getCompoundSet()::JM,151651:JM,151638:JM,151818:JM,151643:JM,151656:JM,151817:JM,151630:JM,151644
151651 :: CALL :: call :: Z :: v66 = v62.equals(v64)::JM,151651:JM,151638:JM,151643:JM,151656
151648 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v64 = getRNACompoundSet()::JM,151651:JM,151656
151656 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 256::CF,151817:CF,151657
151657 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v67 = new org.biojava.nbio.core.sequence.RNASequence::DD,151817
151669 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
151674 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v73.append(v11)::JM,151536:JM,151532
151679 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
151687 :: NORM :: compound :: Z :: return #(1)::DD,151507
151688 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v83 = v53.getCompoundSet()::JM,151634:JM,151638:JM,151700:JM,151819:JM,151643:JM,151688:JM,151695
151695 :: CALL :: call :: Z :: v87 = v83.equals(v85)::JM,151638:JM,151700:JM,151643:JM,151695
151692 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v85 = getRNACompoundSet()::JM,151700:JM,151695
151700 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 317::CF,151818:CF,151701:CD,151819
151701 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v88 = new org.biojava.nbio.core.sequence.RNASequence::DD,151819
151713 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v94 = new java.lang.StringBuilder::
151718 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v94.append(v13)::JM,151537:JM,151541
151723 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
151731 :: NORM :: compound :: Z :: return #(1)::DD,151507
151735 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v105 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,151750:JM,151754:JM,151787:JM,151742
151732 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v104 = getNuc4_4()::JM,151750:JM,151754:JM,151787:JM,151742
151742 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v110 = getPairwiseAligner(v101, v102, v108, v105, v104)::JM,151750:JM,151754:JM,151787:JM,151742
151741 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v108 = LOCAL::JM,151750:JM,151754:JM,151787:JM,151742
151750 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v112 = v110.getPair()::JM,151750:JM,151754:JM,151787:JM,151742
151754 :: PRED :: IF :: Z :: if (v112 != #(null)) goto 408::CD,151779:CD,151782:CD,151787:CD,151792:CD,151797:CD,151805:CD,151814
151779 :: NORM :: compound :: Z :: return #(1)::DD,151507
151782 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v114 = new java.lang.StringBuilder::
151787 :: CALL :: call :: Ljava/lang/String :: v119 = v112.toString(#(100))::JM,151787
151792 :: CALL :: call :: Ljava/lang/StringBuilder :: v121 = v114.append(v119)::
151797 :: CALL :: call :: Ljava/lang/String :: v123 = v121.toString()::
151805 :: CALL :: call :: Z :: v126 = p0 $this .mapDNAChains(p1 $seqRes , p2 $atomRes , v112, v5, v7)::JM,151814:CL,153609
151814 :: NORM :: compound :: Z :: return v126::DD,151507
151818 :: EXPR :: assign :: null :: PHI v101 = v51, v81, v81::CF,151819:JM,151750:JM,151754:JM,151787:JM,151742
151819 :: EXPR :: assign :: null :: PHI v102 = v53, v53, v88::CF,151732:JM,151750:JM,151754:JM,151787:JM,151742
151817 :: EXPR :: assign :: null :: PHI v81 = v51, v67::JM,151634:JM,151638:JM,151700:JM,151819:JM,151643:JM,151688:JM,151695:DD,151818
151903 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,151904:CD,151912:CD,151916:CD,151919:CD,152302:CD,152312:CD,152313:JM,151937:JM,151942:JM,151943:JM,152007:JM,151948:JM,151949:JM,151954:JM,151987:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967
151904 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,148026
151912 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,151937:JM,151942:JM,151943:JM,152007:JM,151912:JM,152302:JM,151948:JM,151949:JM,151954:JM,151987:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967
151919 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompound :: v15 = v12.getCompoundForString(#(-))::JM,151954:JM,151955:JM,151960:JM,151919:JM,151949
151916 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompoundSet :: v12 = getAminoAcidCompoundSet()::JM,151954:JM,151955:JM,151960:JM,151919:JM,151949
151925 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v172)::JM,151937:JM,151942:JM,151943:JM,152007:JM,151912:JM,152302:JM,151948:JM,151949:JM,151954:JM,151987:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967
151931 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v172)::JM,151937:JM,151942:JM,151943:JM,152007:JM,151912:JM,152302:JM,151948:JM,151949:JM,151954:JM,151987:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967
151937 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v172)::JM,151937:JM,151942:JM,151943:JM,152007:JM,151912:JM,152302:JM,151948:JM,151949:JM,151954:JM,151987:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967
151942 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,151937:JM,151942:JM,151943:JM,152007:JM,151912:JM,152302:JM,151948:JM,151949:JM,151954:JM,151987:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967
151943 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v172)::JM,151937:JM,151942:JM,151943:JM,152007:JM,151912:JM,152302:JM,151948:JM,151949:JM,151954:JM,151987:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967
151948 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,151954:JM,151955:JM,151942:JM,151962:JM,151931:JM,151960:JM,151967:JM,151948:JM,151949
151949 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,151954:JM,151955:JM,151942:JM,151962:JM,151931:JM,151960:JM,151967:JM,151948:JM,151949
151954 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 552::CF,152311:CD,151955:CD,151960:CD,152301:CD,152302:CD,152312:CD,152313:JM,151954:JM,151942:JM,151962:JM,151967:JM,151948:JM,151949
151955 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,151954:JM,151955:JM,151942:JM,151962:JM,151960:JM,151967:JM,151948:JM,151949
151962 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,151954:JM,151955:JM,151942:JM,151962:JM,151931:JM,151960:JM,151967:JM,151948:JM,151949
151960 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,151962:CD,151967:CD,152301:CD,152302:CD,152311:CD,152312:CD,152313:JM,151954:JM,151955:JM,151942:JM,151931:JM,151960:JM,151948:JM,151949
151967 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 552::CF,152311:CD,151968:CD,151972:CD,151977:CD,151978:CD,151982:CD,151987:CD,151988:CD,151992:CD,151997:CD,151998:CD,152002:CD,152007:CD,152008:CD,152301:CD,152302:CD,152312:CD,152313
151968 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
151972 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,151977
151978 :: CALL :: call :: I :: v40 = v38.intValue()::JM,151987
151977 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,151987
151982 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,151937:JM,151942:JM,151943:JM,152007:JM,151912:JM,152302:JM,151948:JM,151949:JM,151954:JM,151987:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967
151987 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,152008
151988 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
151992 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,151997
151998 :: CALL :: call :: I :: v50 = v48.intValue()::JM,152007
151997 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,152007
152002 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,151937:JM,151942:JM,151943:JM,152007:JM,151912:JM,152302:JM,151948:JM,151949:JM,151954:JM,151987:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967
152007 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,152009:JM,151937:JM,151942:JM,151943:JM,152007:JM,151912:JM,152302:JM,151948:JM,151949:JM,151954:JM,151987:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967:CF,152008
152008 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,152009:CD,152012:CD,152017:CD,152022:CD,152027:CD,152032:CD,152037:CD,152042:CD,152047:CD,152052:CD,152057:CD,152062:CD,152067:CD,152072:CD,152301:CD,152302:CD,152311:CD,152312:CD,152313
152009 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,152012:CD,152017:CD,152022:CD,152027:CD,152032:CD,152037:CD,152042:CD,152047:CD,152052:CD,152057:CD,152062:CD,152067:CD,152072:CD,152081:CD,152085:CD,152089:CD,152301:CD,152302:CD,152311:CD,152312:CD,152313
152012 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
152017 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v172)::
152022 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
152027 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
152032 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
152037 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
152042 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
152047 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
152052 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
152057 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
152062 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
152067 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
152072 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
152081 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,152089:JM,152143:CL,47160
152085 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,152090:JM,152143:CL,47160
152090 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 340::CD,152129:CD,152130:CD,152134:CD,152138:CD,152143:CD,152281:CD,152285:CD,152290:CD,152291:CD,152295:CD,152301:CD,152302:CD,152311:CD,152312:CD,152313
152089 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,152090:CD,152129
152130 :: CALL :: call :: Ljava/lang/String :: v92 = v90.trim()::JM,152143
152129 :: NORM :: compound :: Z :: return #(1)::DD,151904
152134 :: CALL :: call :: Ljava/lang/String :: v94 = v88.trim()::JM,152143
152138 :: CALL :: call :: Z :: v96 = v92.equals(v94)::JM,152143
152143 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 527::CF,152144:CD,152149:CD,152154:CD,152159:CD,152164:CD,152169:CD,152174:CD,152179:CD,152184:CD,152189:CD,152194:CD,152199:CD,152204:CD,152208:CD,152212:CD,152214:CD,152219
152144 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
152149 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v43)::
152154 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(' (position ))::
152159 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v23)::
152164 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v106.append(#() does not align with '))::
152169 :: CALL :: call :: Ljava/lang/StringBuilder :: v111 = v109.append(v53)::
152174 :: CALL :: call :: Ljava/lang/StringBuilder :: v113 = v111.append(#(' (position ))::
152179 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v113.append(v26)::
152184 :: CALL :: call :: Ljava/lang/StringBuilder :: v118 = v115.append(#(), should be: ))::
152189 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v118.append(v17)::
152194 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#( : ))::
152199 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v20)::
152204 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
152208 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v129 = v43.getType()::JM,152214:JM,152219:CL,123906:CL,123890:CL,123898
152214 :: CALL :: call :: Z :: v132 = v129.equals(v130)::JM,152214:JM,152219
152212 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v130 = org.biojava.nbio.structure.HetatomImpl.type::JM,152214:JM,152219
152219 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 493::CD,152220:CD,152224:CD,152226:CD,152231:CD,152259:CD,152260:CD,152268:CD,152273
152220 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v134 = v53.getType()::JM,152226:JM,152231:CL,123906:CL,123890:CL,123898
152226 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,152226:JM,152231
152224 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v135 = org.biojava.nbio.structure.HetatomImpl.type::JM,152226:JM,152231
152231 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 493::CD,152234:CD,152235:CD,152243:CD,152248:CD,152259:CD,152260:CD,152268:CD,152273
152234 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
152235 :: CALL :: call :: Ljava/lang/String :: v141 = valueOf(v127)::
152243 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v139.append(#(. They seem to be het...))::
152248 :: CALL :: call :: Ljava/lang/String :: v147 = v145.toString()::
152259 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v150 = new java.lang.StringBuilder::
152260 :: CALL :: call :: Ljava/lang/String :: v152 = valueOf(v127)::
152268 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v150.append(#(. This could be a pro...))::
152273 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
152281 :: CALL :: call :: Ljava/lang/Integer :: v161 = valueOf(v23)::
152285 :: CALL :: call :: Ljava/lang/Object :: v163 = p4 $seqresIndexPosition .get(v161)::JM,152290
152290 :: EXPR :: assign :: Ljava/lang/Object :: v164 = CHECKCAST v163::
152291 :: CALL :: call :: I :: v166 = v164.intValue()::
152295 :: CALL :: call :: Ljava/lang/Object :: v168 = p1 $seqResGroups .set(v166, v53)::JM,151937:JM,151942:JM,151943:JM,152007:JM,151912:JM,152302:JM,151948:JM,151949:JM,151954:JM,151987:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967
152302 :: PRED :: IF :: Z :: if (v172 <= v9) goto 32::CD,151925:CD,151931:CD,151937:CD,151942:CD,151943:CD,151948:CD,151949:CD,151954:CD,152310:CD,152311:JM,152007:JM,151912:JM,152302:JM,151987:JM,151955:JM,151962:JM,151960:JM,151967
152301 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v172 + #(1)::DD,152313:CF,152312
152310 :: NORM :: compound :: Z :: return v171::DD,151904
152311 :: EXPR :: assign :: null :: PHI v169 = v171, v171, v171, v171, #(0)::DD,152312:CF,152301
152312 :: EXPR :: assign :: null :: PHI v171 = #(1), v169::CF,152313:DD,152310:DD,152311
152313 :: EXPR :: assign :: null :: PHI v172 = #(1), v170::JM,151937:JM,151942:JM,151943:JM,152007:JM,151948:JM,151949:JM,151954:JM,151955:JM,151925:JM,151962:JM,151931:JM,151960:JM,151967:JM,151987:DD,152301:DD,152302
152439 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,152440:CD,152445:CD,152449:CD,152453:CD,152458:JM,152483:JM,152474:JM,152462
152440 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::JM,148723
152445 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $t1 .getId()::JM,152483:JM,152449:JM,152453:JM,152474:JM,152458:JM,152462:JM,152445
152449 :: CALL :: call :: Ljava/lang/String :: v8 = p2 $t2 .getId()::JM,152483:JM,152449:JM,152453:JM,152474:JM,152458:JM,152462:JM,152445
152453 :: CALL :: call :: Z :: v10 = v6.equals(v8)::JM,152483:JM,152453:JM,152458
152458 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 43::CD,152462:CD,152466:CD,152474:CD,152478:CD,152483:CD,152484:CD,152485
152459 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .val$chainIds::JM,152483
152462 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $t1 .getChainId()::JM,152483:JM,152449:JM,152453:JM,152474:JM,152458:JM,152462:JM,152445
152466 :: CALL :: call :: I :: v16 = v12.indexOf(v14)::JM,152483:JM,152453:JM,152458
152471 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .val$chainIds::JM,152483
152474 :: CALL :: call :: Ljava/lang/String :: v19 = p2 $t2 .getChainId()::JM,152483:JM,152449:JM,152453:JM,152474:JM,152458:JM,152462:JM,152445
152478 :: CALL :: call :: I :: v21 = v17.indexOf(v19)::JM,152483:JM,152453:JM,152458
152483 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v16 - v21::CF,152484
152484 :: NORM :: compound :: I :: return v22::CF,152440
152485 :: NORM :: compound :: I :: return #(0)::CF,152440
152494 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::CE,152495:CD,152500:CD,152505
152495 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::JM,148741
152500 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,152505
152505 :: NORM :: compound :: I :: return v6::CF,152495
152508 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::CE,152509:CD,152514:CD,152519
152509 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::JM,148759
152514 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,152519
152519 :: NORM :: compound :: I :: return v6::CF,152509
152554 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .uid = p1 $uid ::
152557 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .domainId = p2 $domainId ::
152563 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .xGroup = p4 $xGroup ::
152560 :: EXPR :: modify :: Ljava/lang/Boolean :: p0 $this .manual = p3 $manual ::
152566 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .hGroup = p5 $hGroup ::
152569 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .tGroup = p6 $tGroup ::
152575 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p8 $pdbId ::
152572 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .fGroup = p7 $fGroup ::
152578 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p9 $chainId ::
152581 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .range = p10 $range ::
152587 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .architectureName = p12 $architectureName ::
152584 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .seqIdRange = p11 $seqId ::
152590 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .xGroupName = p13 $xGroupName ::
152593 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .hGroupName = p14 $hGroupName ::
152599 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fGroupName = p16 $fGroupName ::
152596 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tGroupName = p15 $tGroupName ::
152602 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .assemblyId = p17 $assemblyId ::
152605 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .ligands = p18 $ligands ::
152707 :: CALL :: call :: V :: initPath()::CL,154181
152704 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFile()::CD,152707:CD,152709:CD,152711:CD,152714:CD,152717:CD,152725:CD,152730:CD,152735:CD,152749
152711 :: CALL :: call :: Ljava/lang/String :: v5 = getLocalFileName()::CL,154219
152709 :: CALL :: call :: V :: initServerName()::CL,154204
152714 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
152717 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
152725 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(/))::
152730 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(pub/pdb/data/monomers...))::
152735 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
152749 :: CALL :: call :: V :: downloadFileFromRemote(v19, v21)::CL,154277
152794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::CF,152795:CD,152800:CD,152805
152795 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::
152800 :: CALL :: call :: Z :: v7 = p2 $file .endsWith(#(.cif.gz))::JM,152800:JM,152805
152805 :: NORM :: compound :: Z :: return v7::CF,152795
152808 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.writeID(java.lang.String,java.lang.String)::CD,152814:CD,152818:CD,152837:CD,152841:CD,152844:CD,152850
152814 :: CALL :: call :: Ljava/lang/String :: v6 = getLocalFileName(p2 $currentID )::CL,145394
152818 :: NORM :: declaration :: Ljava/io/PrintWriter :: v8 = new java.io.PrintWriter::DD,152844
152837 :: CALL :: call :: V :: v8.print(v15)::
152841 :: CALL :: call :: V :: v8.flush()::
152844 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 108::CD,152845
152845 :: CALL :: call :: V :: v8.close()::
152850 :: CALL :: call :: V :: v8.close()::
153051 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,153055
153055 :: EXPR :: modify :: Ljava/util/List :: p0 $this .descriptors = v4::
153058 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,153062
153062 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
153065 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,153069
153069 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v8::
153080 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setOne_letter_code(java.lang.String)::CD,153088:JM,153085
153085 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .one_letter_code = p1 $one_letter_code ::
153088 :: CALL :: call :: V :: p0 $this .setStandardFlag()::CL,154470
153095 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setThree_letter_code(java.lang.String)::JM,153100
153100 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .three_letter_code = p1 $three_letter_code ::
153106 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setPolymerType(org.biojava.nbio.structure.io.mmcif.chem.PolymerType)::JM,153111
153111 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p1 $polymerType ::
153117 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setResidueType(org.biojava.nbio.structure.io.mmcif.chem.ResidueType)::JM,153122
153122 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: p0 $this .residueType = p1 $residueType ::
153128 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getVolume()::CD,153135:CD,153136
153135 :: EXPR :: assign :: Z :: v5 = v3 < #(0.0 d)::DD,153136
153132 :: EXPR :: reference :: D :: v3 = p0 $this .volume::DD,153135
153136 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 16::CD,153147:CD,153151:CD,153155:CD,153162:CD,153166:CD,153167:CD,153171:CD,153178:CD,153182:CD,153183:CD,153187:CD,153194:CD,153198:CD,153199:CD,153203:CD,153207:CD,153211:CD,153215:CD,153219:CD,153223:CD,153224:CD,153225:CD,153229
153141 :: EXPR :: reference :: D :: v7 = p0 $this .a::DD,153147
153147 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 * v8::DD,153151
153144 :: EXPR :: reference :: D :: v8 = p0 $this .b::DD,153147
153151 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 * v10::DD,153229
153148 :: EXPR :: reference :: D :: v10 = p0 $this .c::DD,153151
153155 :: CALL :: call :: D :: v15 = cos(v13)::JM,153155:JM,153166
153152 :: EXPR :: reference :: D :: v13 = p0 $this .alphaRad::JM,153155:JM,153166
153159 :: EXPR :: reference :: D :: v16 = p0 $this .alphaRad::JM,153162:JM,153166
153162 :: CALL :: call :: D :: v18 = cos(v16)::JM,153162:JM,153166
153166 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v15 * v18::CF,153167
153167 :: EXPR :: assign :: Ljava/lang/Object :: v20 = #(1.0 d) - v19::DD,153183
153171 :: CALL :: call :: D :: v23 = cos(v21)::JM,153171:JM,153182
153168 :: EXPR :: reference :: D :: v21 = p0 $this .betaRad::JM,153171:JM,153182
153175 :: EXPR :: reference :: D :: v24 = p0 $this .betaRad::JM,153178:JM,153182
153178 :: CALL :: call :: D :: v26 = cos(v24)::JM,153178:JM,153182
153182 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v23 * v26::CF,153183
153183 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v20 - v27::DD,153199
153187 :: CALL :: call :: D :: v31 = cos(v29)::JM,153187:JM,153198
153184 :: EXPR :: reference :: D :: v29 = p0 $this .gammaRad::JM,153187:JM,153198
153191 :: EXPR :: reference :: D :: v32 = p0 $this .gammaRad::JM,153194:JM,153198
153194 :: CALL :: call :: D :: v34 = cos(v32)::JM,153194:JM,153198
153198 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v31 * v34::CF,153199
153199 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v28 - v35::DD,153224
153203 :: CALL :: call :: D :: v40 = cos(v38)::JM,153203:JM,153207
153200 :: EXPR :: reference :: D :: v38 = p0 $this .alphaRad::JM,153203:JM,153207
153207 :: EXPR :: assign :: Ljava/lang/Object :: v41 = #(2.0 d) * v40::DD,153215
153211 :: CALL :: call :: D :: v44 = cos(v42)::JM,153211:JM,153215
153208 :: EXPR :: reference :: D :: v42 = p0 $this .betaRad::JM,153211:JM,153215
153215 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v41 * v44::DD,153223
153219 :: CALL :: call :: D :: v48 = cos(v46)::JM,153219:JM,153223
153216 :: EXPR :: reference :: D :: v46 = p0 $this .gammaRad::JM,153219:JM,153223
153223 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v45 * v48::CF,153224
153224 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v36 + v49::JM,153225:JM,153229
153225 :: CALL :: call :: D :: v52 = sqrt(v50)::JM,153225:JM,153229
153230 :: EXPR :: modify :: D :: p0 $this .volume = v53::
153229 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v11 * v52::DD,153230
153535 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::CE,153536:CD,153540:CD,153550:CD,153560:CD,153579:CD,153584:CD,153589:CD,153597:CD,153598:CD,153602
153536 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/template/Sequence :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::JM,151651:JM,151638:JM,151818:JM,151627:JM,151643:JM,151656:JM,151817:JM,151630:JM,151644:JM,151634:JM,151700:JM,151819:JM,151688:JM,151695:JM,151628
153540 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v5 = new org.biojava.nbio.core.sequence.DNASequence::DD,153602
153550 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v10 = new org.biojava.nbio.core.sequence.RNASequence::DD,153602
153560 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v15 = new org.biojava.nbio.core.sequence.DNASequence::DD,153602
153579 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
153584 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(p1 $seq )::
153589 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
153598 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return v34::DD,153536
153597 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return #(null)::DD,153536
153602 :: EXPR :: assign :: null :: PHI v34 = v5, v10, v15::CF,153598
153610 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,151814
153609 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,153610:CD,153618:CD,153622:CD,153625:CD,154024:CD,154032:CD,154034:CD,154035:JM,153666:JM,153668:JM,153637:JM,153643:JM,153673:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153693:JM,153661
153618 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,153666:JM,153668:JM,153637:JM,153643:JM,154024:JM,153673:JM,153618:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153661:JM,153693
153622 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/DNACompoundSet :: v12 = getDNACompoundSet()::JM,153666:JM,153655:JM,153625:JM,153660:JM,153661
153625 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v15 = v12.getCompoundForString(#(-))::JM,153666:JM,153655:JM,153625:JM,153660:JM,153661
153631 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v194)::JM,153666:JM,153668:JM,153637:JM,153643:JM,154024:JM,153673:JM,153618:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153661:JM,153693
153637 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v194)::JM,153666:JM,153668:JM,153637:JM,153643:JM,154024:JM,153673:JM,153618:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153661:JM,153693
153643 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v194)::JM,153666:JM,153668:JM,153637:JM,153643:JM,154024:JM,153673:JM,153618:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153661:JM,153693
153648 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,153666:JM,153668:JM,153637:JM,153643:JM,154024:JM,153673:JM,153618:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153661:JM,153693
153649 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v194)::JM,153666:JM,153668:JM,153637:JM,153643:JM,154024:JM,153673:JM,153618:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153661:JM,153693
153654 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,153666:JM,153648:JM,153654:JM,153655:JM,153668:JM,153637:JM,153673:JM,153660:JM,153661
153655 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,153666:JM,153648:JM,153654:JM,153655:JM,153668:JM,153637:JM,153673:JM,153660:JM,153661
153660 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 567::CF,154033:CD,153661:CD,153666:JM,153648:JM,153654:JM,153655:JM,153668:JM,153673:JM,153660
153661 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,153666:JM,153648:JM,153654:JM,153655:JM,153668:JM,153673:JM,153660:JM,153661
153666 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,153668:CD,153673:CD,154033:JM,153666:JM,153648:JM,153654:JM,153655:JM,153637:JM,153660:JM,153661
153668 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,153666:JM,153648:JM,153654:JM,153655:JM,153668:JM,153637:JM,153673:JM,153660:JM,153661
153674 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
153673 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 567::CF,154033:CD,153674:CD,153678:CD,153683:CD,153684:CD,153688:CD,153693:CD,153694:CD,153698:CD,153703:CD,153704:CD,153708:CD,153713:CD,153714
153678 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,153683
153683 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,153693
153684 :: CALL :: call :: I :: v40 = v38.intValue()::JM,153693
153688 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,153666:JM,153668:JM,153637:JM,153643:JM,154024:JM,153673:JM,153618:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153693:JM,153661
153694 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
153693 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,153714
153698 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,153703
153703 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,153713
153704 :: CALL :: call :: I :: v50 = v48.intValue()::JM,153713
153708 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,153666:JM,153668:JM,153637:JM,153643:JM,154024:JM,153673:JM,153618:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153661:JM,153693
153714 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,153715:CD,153718:CD,153723:CD,153728:CD,153733:CD,153738:CD,153743:CD,153748:CD,153753:CD,153758:CD,153763:CD,153768:CD,153773:CD,153778:CD,154033
153715 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,153718:CD,153723:CD,153728:CD,153733:CD,153738:CD,153743:CD,153748:CD,153753:CD,153758:CD,153763:CD,153768:CD,153773:CD,153778:CD,153787:CD,153791:CD,153795:CD,153853:CD,153858:CD,154003:CD,154007:CD,154012:CD,154013:CD,154017:CD,154033
153713 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,153715:JM,153666:JM,153668:JM,153637:JM,153643:JM,154024:JM,153673:JM,153618:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153693:JM,153661:CF,153714
153718 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
153723 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v194)::
153728 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
153733 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
153738 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
153743 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
153748 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
153753 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
153758 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
153763 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
153768 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
153773 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
153778 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
153787 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,153858:JM,153795:JM,153872:CL,47160
153791 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,153858:JM,153872:JM,153796:CL,47160
153795 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,153796:CD,153799:CD,153804:CD,153809:CD,153814:CD,153819:CD,153824:CD,153829:CD,153834:CD,153839
153799 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v92 = new java.lang.StringBuilder::
153796 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 357::CD,153799:CD,153804:CD,153809:CD,153814:CD,153819:CD,153824:CD,153829:CD,153834:CD,153839:JM,153858:JM,153872
153804 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v92.append(v23)::
153809 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( when trying to align ))::
153814 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v43)::
153819 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( and ))::
153824 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v53)::
153829 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v106.append(#( ))::
153834 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v108.append(v26)::
153839 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
153853 :: CALL :: call :: Z :: v118 = v90.equals(v88)::JM,153858:JM,153872
153858 :: PRED :: IF :: Z :: if (v118 != #(0)) goto 542::CD,153859:CD,153863:CD,153867:CD,153872:JM,153858
153859 :: CALL :: call :: Ljava/lang/String :: v120 = v90.trim()::JM,153858:JM,153872
153863 :: CALL :: call :: Ljava/lang/String :: v122 = v88.trim()::JM,153858:JM,153872
153867 :: CALL :: call :: Z :: v124 = v120.equals(v122)::JM,153872
153875 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v126 = new java.lang.StringBuilder::
153872 :: PRED :: IF :: Z :: if (v124 != #(0)) goto 542::CD,153875:CD,153879:CD,153884:CD,153889:CD,153894:CD,153899:CD,153904:CD,153909:CD,153914:CD,153919:CD,153924:CD,153929:CD,153934:CD,153942:CD,153946:CD,153948:CD,153953
153879 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v126.append(v43)::
153884 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(#( ))::
153889 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v131.append(v23)::
153894 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v133.append(#( does not align with ))::
153899 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(v53)::
153904 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v138.append(#( ))::
153909 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v140.append(v26)::
153914 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( should be: ))::
153919 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(v17)::
153924 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v147.append(#( : ))::
153929 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(v20)::
153934 :: CALL :: call :: Ljava/lang/String :: v154 = v152.toString()::
153942 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v157 = v43.getType()::JM,153953:JM,153948:CL,123906:CL,123890:CL,123898
153946 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v158 = org.biojava.nbio.structure.HetatomImpl.type::JM,153953:JM,153948
153948 :: CALL :: call :: Z :: v160 = v157.equals(v158)::JM,153953:JM,153948
153954 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v162 = v53.getType()::JM,153960:JM,153965:CL,123906:CL,123890:CL,123898
153953 :: PRED :: IF :: Z :: if (v160 == #(0)) goto 501::CD,153954:CD,153958:CD,153960:CD,153965:CD,153975:CD,153980:CD,153985:CD,153990:CD,153995
153958 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v163 = org.biojava.nbio.structure.HetatomImpl.type::JM,153960:JM,153965
153960 :: CALL :: call :: Z :: v165 = v162.equals(v163)::JM,153960:JM,153965
153965 :: PRED :: IF :: Z :: if (v165 == #(0)) goto 501::CD,153975:CD,153980:CD,153985:CD,153990:CD,153995
153975 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
153980 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v43)::
153985 :: CALL :: call :: Ljava/lang/StringBuilder :: v176 = v174.append(#( ))::
153990 :: CALL :: call :: Ljava/lang/StringBuilder :: v178 = v176.append(v53)::
153995 :: CALL :: call :: Ljava/lang/String :: v180 = v178.toString()::
154003 :: CALL :: call :: Ljava/lang/Integer :: v183 = valueOf(v23)::
154007 :: CALL :: call :: Ljava/lang/Object :: v185 = p4 $seqresIndexPosition .get(v183)::JM,154012
154012 :: EXPR :: assign :: Ljava/lang/Object :: v186 = CHECKCAST v185::
154013 :: CALL :: call :: I :: v188 = v186.intValue()::
154017 :: CALL :: call :: Ljava/lang/Object :: v190 = p1 $seqResGroups .set(v188, v53)::JM,153666:JM,153668:JM,153637:JM,153643:JM,154024:JM,153673:JM,153618:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153693:JM,153661
154023 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v194 + #(1)::DD,154035:CF,154034
154024 :: PRED :: IF :: Z :: if (v194 <= v9) goto 32::CD,153631:CD,153637:CD,153643:CD,153648:CD,153649:CD,153654:CD,153655:CD,153660:CD,154023:CD,154033:CD,154034:CD,154035:JM,153666:JM,153668:JM,154024:JM,153673:JM,153618:JM,153713:JM,153661:JM,153693
154034 :: EXPR :: assign :: null :: PHI v193 = #(1), v191::CF,154035:DD,154032:DD,154033
154035 :: EXPR :: assign :: null :: PHI v194 = #(1), v192::JM,153666:JM,153668:JM,153637:JM,153643:JM,153673:JM,153648:JM,153649:JM,153713:JM,153654:JM,153655:JM,153631:JM,153660:JM,153661:JM,153693:DD,154023:DD,154024
154032 :: NORM :: compound :: Z :: return v193::DD,153610
154033 :: EXPR :: assign :: null :: PHI v191 = v193, v193, v193, v193, #(0)::DD,154034:CF,154023
154181 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initPath()::CD,154184:CD,154186
154186 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 21::JM,35975:JM,35982
154184 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::DD,154186
154207 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.serverName::DD,154209
154204 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initServerName()::CD,154207:CD,154209
154210 :: CALL :: call :: Ljava/lang/String :: v5 = getServerName()::CL,58979
154209 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 12::CD,154210
154219 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::CD,154230:CD,154234
154230 :: CALL :: call :: Z :: v7 = v2.exists()::JM,154234
154234 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 39::CD,154246
154246 :: CALL :: call :: Z :: v15 = v2.mkdir()::
154277 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFileFromRemote(java.net.URL,java.io.File)::CD,154284:CD,154289:CD,154294:CD,154299:CD,154304
154284 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
154289 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $remoteURL )::
154294 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v9.append(#( to: ))::
154299 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v12.append(p2 $localFile )::
154304 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
154470 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setStandardFlag()::CD,154474
154474 :: CALL :: call :: Z :: v4 = isStandardChemComp(p0 $this )::JM,154478:CL,154927
154478 :: EXPR :: modify :: Z :: p0 $this .standard = v4::
154927 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,154928:CD,154931:CD,154935:CD,154939:CD,154943
154931 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getMon_nstd_parent_comp_id()::JM,154944:JM,154949:JM,154943:CL,129866
154928 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,154478
154935 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $cc .getOne_letter_code()::JM,154950:JM,154956:CL,124007
154939 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v8 = p1 $cc .getPolymerType()::JM,154962:JM,154979:JM,154971:JM,154959:CL,123998
154943 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 29::CD,154944:CD,154949:CD,154950
154944 :: CALL :: call :: Z :: v12 = v4.equals(#(?))::JM,154944:JM,154949
154950 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 88::CD,154951:CD,154956:CD,154986
154951 :: CALL :: call :: Z :: v15 = v6.equals(#(?))::JM,154956
154949 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 88::CD,154950:CD,154986
154959 :: PRED :: IF :: Z :: if (v8 == v16) goto 57::CD,154960:CD,154962:CD,154963:CD,154968
154956 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 88::CD,154957:CD,154959:CD,154986
154957 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v16 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::CF,154959
154962 :: PRED :: IF :: Z :: if (v8 != v17) goto 62::CD,154963:CD,154968:CD,154969:CD,154971
154963 :: CALL :: call :: Z :: v25 = performPeptideCheck(p1 $cc , v6)::JM,154968:CL,155221
154960 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::CF,154962
154971 :: PRED :: IF :: Z :: if (v8 != v18) goto 74::CD,154972:CD,154976:CD,154977:CD,154979
154968 :: NORM :: compound :: Z :: return v25::DD,154928
154969 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v18 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::CF,154971
154972 :: CALL :: call :: Z :: v23 = performRNACheck(p1 $cc )::JM,154976:CL,155260
154979 :: PRED :: IF :: Z :: if (v8 != v19) goto 86::CD,154980:CD,154984:CD,154985
154976 :: NORM :: compound :: Z :: return v23::DD,154928
154977 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v19 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::CF,154979
154980 :: CALL :: call :: Z :: v21 = performDNACheck(p1 $cc )::JM,154984:CL,155279
154986 :: NORM :: compound :: Z :: return #(0)::DD,154928
154984 :: NORM :: compound :: Z :: return v21::DD,154928
154985 :: NORM :: compound :: Z :: return #(0)::DD,154928
155222 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::JM,154968
155221 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::CE,155222:CD,155226:CD,155228:CD,155232:CD,155237
155226 :: EXPR :: reference :: Ljava/lang/Character :: v4 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_ONE_LETTER_CODE::JM,155237
155228 :: CALL :: call :: Ljava/lang/String :: v6 = v4.toString()::JM,155237
155232 :: CALL :: call :: Z :: v8 = p2 $one .equals(v6)::JM,155237
155238 :: NORM :: compound :: Z :: return #(0)::DD,155222
155237 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 16::CD,155238:CD,155243:CD,155247
155243 :: CALL :: call :: Ljava/lang/Character :: v13 = getAminoOneLetter(v11)::JM,155247:CL,157474
155247 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 30::CD,155248:CD,155249
155248 :: NORM :: compound :: Z :: return #(0)::DD,155222
155249 :: NORM :: compound :: Z :: return #(1)::DD,155222
155260 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,155261:CD,155264:CD,155268:CD,155272
155261 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,154976
155264 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,155272:CL,129022
155268 :: CALL :: call :: I :: v6 = v4.length()::JM,155272
155274 :: NORM :: compound :: Z :: return #(0)::CF,155261
155272 :: PRED :: IF :: Z :: if (v6 != #(1)) goto 14::CD,155273:CD,155274
155273 :: NORM :: compound :: Z :: return #(1)::CF,155261
155279 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,155280:CD,155283:CD,155287:CD,155289:CD,155293:CD,155298
155283 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,155298:CL,129022
155280 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,154984
155287 :: EXPR :: reference :: Ljava/lang/Character :: v5 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_NUCLEOTIDE::JM,155298
155289 :: CALL :: call :: Ljava/lang/String :: v7 = v5.toString()::JM,155298
155293 :: CALL :: call :: Z :: v9 = v4.equals(v7)::JM,155298
155298 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,155299:CD,155304:CD,155308
155299 :: NORM :: compound :: Z :: return #(0)::DD,155280
155304 :: CALL :: call :: Ljava/lang/Character :: v14 = getDNAOneLetter(v12)::JM,155308:CL,157489
155310 :: NORM :: compound :: Z :: return #(1)::DD,155280
155308 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 33::CD,155309:CD,155310
155309 :: NORM :: compound :: Z :: return #(0)::DD,155280
157474 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::CE,157475:CD,157480:CD,157485:CD,157486
157475 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::JM,155247
157480 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,157485
157486 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,157475
157485 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,157486
157490 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::JM,155308
157489 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::CE,157490:CD,157495:CD,157500:CD,157501
157495 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,157500
157500 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,157501
157501 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,157490
