[34359, 34360]
1 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FastaAFPChainConverter.main(java.lang.String[])::CD,5:CD,6
5 :: EXPR :: assign :: I :: v3 = p1 $args .length::DD,6
6 :: PRED :: IF :: Z :: if (v3 == #(3)) goto 16::CF,14:CD,27:CD,35
14 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
15 :: EXPR :: reference :: Ljava/lang/Object :: v7 = p1 $args [#(0)]::
23 :: EXPR :: reference :: Ljava/lang/Object :: v10 = p1 $args [#(1)]::JM,38994:JM,34373:JM,34389:JM,38965:JM,34359
27 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v12 = getStructure(v10)::JM,38994:JM,34373:JM,34389:JM,38965:JM,34359:CL,32739
31 :: EXPR :: reference :: Ljava/lang/Object :: v14 = p1 $args [#(2)]::JM,38994:JM,34373:JM,34389:JM,38965:JM,34359
35 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v16 = getStructure(v14)::JM,38994:JM,34373:JM,34389:JM,38965:JM,34359:CL,32739
622 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.<clinit>()::CD,632:CD,640:CD,644:CD,652:CD,656:CD,664:CD,668:CD,676:CD,680:CD,688:CD,692:CD,700:CD,704:CD,712:CD,716:CD,724:CD,728:CD,736:CD,740:CD,748:CD,752:CD,760:CD,764:CD,772:CD,776:CD,784:CD,788:CD,796:CD,800:CD,808:CD,812:CD,820:CD,824:CD,832:CD,836:CD,844:CD,848:CD,856:CD,860:CD,868:CD,872:CD,880:CD,884:CD,892:CD,896:CD,904:CD,908:CD,916:CD,920:CD,928:CD,932:CD,940:CD,944:CD,950:CD,956:CD,1005:CD,1034:CD,1035:CD,1043:CD,1047:CD,1055:CD,1059:CD,1067:CD,1071:CD,1079:CD,1083:CD,1091:CD,1095:CD,1103:CD,1107:CD,1115:CD,1119:CD,1127:CD,1131:CD,1139:CD,1143:CD,1151:CD,1155:CD,1163:CD,1167:CD,1175:CD,1179:CD,1187:CD,1191:CD,1199:CD,1203:CD,1211:CD,1215:CD,1223:CD,1227:CD,1235:CD,1239:CD,1247:CD,1251:CD,1259:CD,1263:CD,1271:CD,1275:CD,1283:CD,1287:CD,1295:CD,1299:CD,1307:CD,1311:CD,1319:CD,1323:CD,1331:CD,1335:CD,1341:CD,1351:CD,1360:CD,1369:CD,1375
632 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
640 :: CALL :: call :: Ljava/lang/Character :: v11 = valueOf(#(65))::
644 :: CALL :: call :: Ljava/lang/Object :: v13 = v7.put(#(DA), v11)::
652 :: CALL :: call :: Ljava/lang/Character :: v18 = valueOf(#(67))::
656 :: CALL :: call :: Ljava/lang/Object :: v20 = v14.put(#(DC), v18)::
664 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(#(71))::
668 :: CALL :: call :: Ljava/lang/Object :: v27 = v21.put(#(DG), v25)::
676 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(84))::
680 :: CALL :: call :: Ljava/lang/Object :: v34 = v28.put(#(DT), v32)::
688 :: CALL :: call :: Ljava/lang/Character :: v39 = valueOf(#(73))::
692 :: CALL :: call :: Ljava/lang/Object :: v41 = v35.put(#(DI), v39)::
700 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(#(65))::
704 :: CALL :: call :: Ljava/lang/Object :: v47 = v42.put(#(A), v45)::
712 :: CALL :: call :: Ljava/lang/Character :: v51 = valueOf(#(71))::
716 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.put(#(G), v51)::
724 :: CALL :: call :: Ljava/lang/Character :: v57 = valueOf(#(67))::
728 :: CALL :: call :: Ljava/lang/Object :: v59 = v54.put(#(C), v57)::
736 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(85))::
740 :: CALL :: call :: Ljava/lang/Object :: v66 = v60.put(#(U), v64)::
748 :: CALL :: call :: Ljava/lang/Character :: v70 = valueOf(#(73))::
752 :: CALL :: call :: Ljava/lang/Object :: v72 = v67.put(#(I), v70)::
760 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(88))::
764 :: CALL :: call :: Ljava/lang/Object :: v79 = v73.put(#(TAF), v77)::
772 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(88))::
776 :: CALL :: call :: Ljava/lang/Object :: v85 = v80.put(#(TC1), v83)::
784 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(88))::
788 :: CALL :: call :: Ljava/lang/Object :: v91 = v86.put(#(TFE), v89)::
796 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(88))::
800 :: CALL :: call :: Ljava/lang/Object :: v97 = v92.put(#(TFO), v95)::
808 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(88))::
812 :: CALL :: call :: Ljava/lang/Object :: v103 = v98.put(#(TGP), v101)::
820 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(88))::
824 :: CALL :: call :: Ljava/lang/Object :: v109 = v104.put(#(THX), v107)::
832 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(88))::
836 :: CALL :: call :: Ljava/lang/Object :: v115 = v110.put(#(TLC), v113)::
844 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(#(88))::
848 :: CALL :: call :: Ljava/lang/Object :: v121 = v116.put(#(TLN), v119)::
856 :: CALL :: call :: Ljava/lang/Character :: v125 = valueOf(#(88))::
860 :: CALL :: call :: Ljava/lang/Object :: v127 = v122.put(#(LCG), v125)::
868 :: CALL :: call :: Ljava/lang/Character :: v131 = valueOf(#(88))::
872 :: CALL :: call :: Ljava/lang/Object :: v133 = v128.put(#(TP1), v131)::
880 :: CALL :: call :: Ljava/lang/Character :: v137 = valueOf(#(88))::
884 :: CALL :: call :: Ljava/lang/Object :: v139 = v134.put(#(CP1), v137)::
892 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(88))::
896 :: CALL :: call :: Ljava/lang/Object :: v145 = v140.put(#(TPN), v143)::
904 :: CALL :: call :: Ljava/lang/Character :: v149 = valueOf(#(88))::
908 :: CALL :: call :: Ljava/lang/Object :: v151 = v146.put(#(CPN), v149)::
916 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(88))::
920 :: CALL :: call :: Ljava/lang/Object :: v157 = v152.put(#(GPN), v155)::
928 :: CALL :: call :: Ljava/lang/Character :: v161 = valueOf(#(88))::
932 :: CALL :: call :: Ljava/lang/Object :: v163 = v158.put(#(APN), v161)::
940 :: CALL :: call :: Ljava/lang/Character :: v167 = valueOf(#(88))::
944 :: CALL :: call :: Ljava/lang/Object :: v169 = v164.put(#(TPC), v167)::
950 :: NORM :: declaration :: Ljava/util/HashMap :: v170 = new java.util.HashMap::
956 :: NORM :: declaration :: [Ljava/lang/String :: v173 = new java.lang.String[]::DD,1005
957 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(0)] = #(C)::
961 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(1)] = #(G)::
965 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(2)] = #(A)::
969 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(3)] = #(T)::
973 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(4)] = #(U)::
977 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(5)] = #(I)::
981 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(6)] = #(+C)::
985 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(7)] = #(+G)::
989 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(8)] = #(+A)::
993 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(9)] = #(+T)::
997 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(10)] = #(+U)::
1001 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(11)] = #(+I)::
1005 :: EXPR :: assign :: I :: v193 = v173.length::DD,1034
1007 :: EXPR :: reference :: Ljava/lang/Object :: v194 = v173[v206]::JM,1017
1013 :: CALL :: call :: I :: v197 = v194.length()::JM,1017
1017 :: EXPR :: assign :: Ljava/lang/Object :: v198 = v197 - #(1)::
1018 :: CALL :: call :: C :: v200 = v194.charAt(v198)::
1023 :: CALL :: call :: Ljava/lang/Character :: v202 = valueOf(v200)::
1027 :: CALL :: call :: Ljava/lang/Object :: v204 = v195.put(v194, v202)::
1033 :: EXPR :: assign :: Ljava/lang/Object :: v205 = v206 + #(1)::DD,1375
1034 :: PRED :: IF :: Z :: if (v206 < v193) goto 530::CF,1035:CD,1013:CD,1017:CD,1018:CD,1023:CD,1027:CD,1033:CD,1375
1035 :: NORM :: declaration :: Ljava/util/HashMap :: v207 = new java.util.HashMap::
1043 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(71))::
1047 :: CALL :: call :: Ljava/lang/Object :: v214 = v209.put(#(GLY), v212)::
1055 :: CALL :: call :: Ljava/lang/Character :: v218 = valueOf(#(65))::
1059 :: CALL :: call :: Ljava/lang/Object :: v220 = v215.put(#(ALA), v218)::
1067 :: CALL :: call :: Ljava/lang/Character :: v225 = valueOf(#(86))::
1071 :: CALL :: call :: Ljava/lang/Object :: v227 = v221.put(#(VAL), v225)::
1079 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(76))::
1083 :: CALL :: call :: Ljava/lang/Object :: v234 = v228.put(#(LEU), v232)::
1091 :: CALL :: call :: Ljava/lang/Character :: v238 = valueOf(#(73))::
1095 :: CALL :: call :: Ljava/lang/Object :: v240 = v235.put(#(ILE), v238)::
1103 :: CALL :: call :: Ljava/lang/Character :: v245 = valueOf(#(70))::
1107 :: CALL :: call :: Ljava/lang/Object :: v247 = v241.put(#(PHE), v245)::
1115 :: CALL :: call :: Ljava/lang/Character :: v252 = valueOf(#(89))::
1119 :: CALL :: call :: Ljava/lang/Object :: v254 = v248.put(#(TYR), v252)::
1127 :: CALL :: call :: Ljava/lang/Character :: v259 = valueOf(#(87))::
1131 :: CALL :: call :: Ljava/lang/Object :: v261 = v255.put(#(TRP), v259)::
1139 :: CALL :: call :: Ljava/lang/Character :: v266 = valueOf(#(80))::
1143 :: CALL :: call :: Ljava/lang/Object :: v268 = v262.put(#(PRO), v266)::
1151 :: CALL :: call :: Ljava/lang/Character :: v273 = valueOf(#(72))::
1155 :: CALL :: call :: Ljava/lang/Object :: v275 = v269.put(#(HIS), v273)::
1163 :: CALL :: call :: Ljava/lang/Character :: v280 = valueOf(#(75))::
1167 :: CALL :: call :: Ljava/lang/Object :: v282 = v276.put(#(LYS), v280)::
1175 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(82))::
1179 :: CALL :: call :: Ljava/lang/Object :: v289 = v283.put(#(ARG), v287)::
1187 :: CALL :: call :: Ljava/lang/Character :: v294 = valueOf(#(83))::
1191 :: CALL :: call :: Ljava/lang/Object :: v296 = v290.put(#(SER), v294)::
1199 :: CALL :: call :: Ljava/lang/Character :: v300 = valueOf(#(84))::
1203 :: CALL :: call :: Ljava/lang/Object :: v302 = v297.put(#(THR), v300)::
1211 :: CALL :: call :: Ljava/lang/Character :: v307 = valueOf(#(69))::
1215 :: CALL :: call :: Ljava/lang/Object :: v309 = v303.put(#(GLU), v307)::
1223 :: CALL :: call :: Ljava/lang/Character :: v314 = valueOf(#(81))::
1227 :: CALL :: call :: Ljava/lang/Object :: v316 = v310.put(#(GLN), v314)::
1235 :: CALL :: call :: Ljava/lang/Character :: v321 = valueOf(#(68))::
1239 :: CALL :: call :: Ljava/lang/Object :: v323 = v317.put(#(ASP), v321)::
1247 :: CALL :: call :: Ljava/lang/Character :: v328 = valueOf(#(78))::
1251 :: CALL :: call :: Ljava/lang/Object :: v330 = v324.put(#(ASN), v328)::
1259 :: CALL :: call :: Ljava/lang/Character :: v334 = valueOf(#(67))::
1263 :: CALL :: call :: Ljava/lang/Object :: v336 = v331.put(#(CYS), v334)::
1271 :: CALL :: call :: Ljava/lang/Character :: v341 = valueOf(#(77))::
1275 :: CALL :: call :: Ljava/lang/Object :: v343 = v337.put(#(MET), v341)::
1283 :: CALL :: call :: Ljava/lang/Character :: v347 = valueOf(#(77))::
1287 :: CALL :: call :: Ljava/lang/Object :: v349 = v344.put(#(MSE), v347)::
1295 :: CALL :: call :: Ljava/lang/Character :: v353 = valueOf(#(85))::
1299 :: CALL :: call :: Ljava/lang/Object :: v355 = v350.put(#(CSE), v353)::
1307 :: CALL :: call :: Ljava/lang/Character :: v359 = valueOf(#(85))::
1311 :: CALL :: call :: Ljava/lang/Object :: v361 = v356.put(#(SEC), v359)::
1319 :: CALL :: call :: Ljava/lang/Character :: v366 = valueOf(#(79))::
1323 :: CALL :: call :: Ljava/lang/Object :: v368 = v362.put(#(PYH), v366)::
1331 :: CALL :: call :: Ljava/lang/Character :: v372 = valueOf(#(79))::
1335 :: CALL :: call :: Ljava/lang/Object :: v374 = v369.put(#(PYL), v372)::
1341 :: NORM :: declaration :: Ljava/util/HashSet :: v375 = new java.util.HashSet::
1351 :: CALL :: call :: Z :: v380 = v377.add(v378)::
1360 :: CALL :: call :: Z :: v384 = v381.add(v382)::
1369 :: CALL :: call :: Z :: v388 = v385.add(v386)::
1375 :: EXPR :: assign :: null :: PHI v206 = #(0), v205::DD,1033:DD,1034
1607 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.<clinit>()::CD,1610:CD,1611:JM,33120:JM,33123:JM,33126:JM,33129:JM,33132:JM,33102:JM,33135:JM,33105:JM,33138:JM,33108:JM,33141:JM,33111:JM,33144:JM,33114:JM,33117:CD,1639:CD,1641:CD,1642:CD,1698:CD,1700:CD,1701:CD,1757:CD,1759:CD,1760:CD,1800:CD,1802:CD,1803:CD,1831:CD,1833:CD,1834:CD,1862:CD,1864:CD,1889:CD,1891:CD,1892:CD,1920:CD,1922:CD,1923:CD,1955:CD,1957:CD,1958:CD,1994:CD,1996:CD,1997:CD,2029:CD,2031:CD,2056:CD,2058:CD,2059:CD,2091:CD,2093:CD,2094:CD,2126:CD,2128:CD,2129:CD,2165:CD,2167:CD,2168:CD,2224:CD,2226:CD,2227:CD,2283:CD,2285:CD,2286:CD,2342:CD,2344:CD,2345:CD,2401:CD,2403:CD,2428:CD,2430:CD,2431:CD,2463:CD,2465:CD,2466:CD,2498:CD,2500:CD,2501:CD,2537:CD,2539:CD,2540:CD,2584:CD,2586:CD,2587:CD,2635:CD,2637:CD,2638:CD,2694:CD,2696:CD,2697:CD,2761:CD,2763:CD,2764:CD,2820:CD,2822:CD,2823:CD,2871:CD,2873:CD,2874:CD,2918:CD,2920:CD,2921:CD,2961:CD,2963:CD,2964:CD,2996:CD,2998:CD,2999:CD,3035:CD,3037:CD,3038:CD,3094:CD,3096:CD,3097:CD,3141:CD,3143:CD,3144:CD,3188:CD,3190:CD,3191:CD,3243:CD,3245:CD,3246:CD,3274:CD,3276:CD,3277:CD,3309:CD,3311:CD,3312:CD,3344:CD,3346:CD,3347:CD,3383:CD,3385:CD,3386:CD,3426:CD,3428:CD,3429:CD,3477:CD,3479:CD,3480:CD,3536:CD,3538:CD,3539:CD,3599:CD,3601:CD,3602:CD,3662:CD,3664:CD,3665:CD,3717:CD,3719:CD,3720:CD,3756:CD,3758:CD,3759:CD,3799:CD,3801:CD,3802:CD,3834:CD,3836:CD,3837:CD,3873:CD,3875:CD,3876:CD,3912:CD,3914:CD,3915:CD,3951:CD,3953:CD,3954:CD,3998:CD,4000:CD,4001:CD,4049:CD,4051:CD,4052:CD,4096:CD,4098:CD,4099:CD,4131:CD,4133:CD,4134:CD,4162:CD,4164:CD,4165:CD,4197:CD,4199:CD,4200:CD,4236:CD,4238:CD,4239:CD,4275:CD,4277:CD,4278:CD,4314:CD,4316:CD,4317:CD,4349:CD,4351:CD,4352:CD,4384:CD,4386:CD,4387:CD,4419:CD,4421:CD,4422:CD,4458:CD,4460:CD,4461:CD,4501:CD,4503:CD,4504:CD,4540:CD,4542:CD,4543:CD,4575:CD,4577:CD,4578:CD,4610:CD,4612:CD,4613:CD,4649:CD,4651:CD,4652:CD,4684:CD,4686:CD,4687:CD,4715:CD,4717:CD,4718:CD,4754:CD,4756:CD,4757:CD,4801:CD,4803:CD,4804:CD,4860:CD,4862:CD,4863:CD,4923:CD,4925:CD,4926:CD,4990:CD,4992:CD,4993:CD,5053:CD,5055:CD,5056:CD,5112:CD,5114:CD,5115:CD,5159:CD,5161:CD,5162:CD,5198:CD,5200:CD,5201:CD,5237:CD,5239:CD,5240:CD,5276:CD,5278:CD,5279:CD,5319:CD,5321:CD,5322:CD,5366:CD,5368:CD,5369:CD,5413:CD,5415:CD,5416:CD,5448:CD,5450:CD,5451:CD,5479:CD,5481:CD,5482:CD,5510:CD,5512:CD,5513:CD,5545:CD,5547:CD,5548:CD,5584:CD,5586:CD,5587:CD,5627:CD,5629:CD,5630:CD,5674:CD,5676:CD,5677:CD,5721:CD,5723:CD,5724:CD,5772:CD,5774:CD,5775:CD,5823:CD,5825:CD,5826:CD,5858:CD,5860:CD,5861:CD,5897:CD,5899:CD,5900:CD,5936:CD,5938:CD,5939:CD,5971:CD,5973:CD,5974:CD,6006:CD,6008:CD,6009:CD,6041:CD,6043:CD,6044:CD,6076:CD,6078:CD,6079:CD,6107:CD,6109:CD,6133:CD,6135:CD,6136:CD,6142:CD,6148:CD,6154:CD,6160:CD,6166:CD,6172:CD,6178:CD,6184:CD,6190:CD,6196:CD,6202:CD,6208:CD,6214:CD,6220:CD,6226:CD,6232:CD,6238:CD,6244:CD,6250:CD,6256:CD,6262:CD,6268:CD,6274:CD,6280:CD,6286:CD,6292:CD,6298:CD,6304:CD,6310:CD,6316:CD,6322:CD,6328:CD,6334:CD,6340:CD,6346:CD,6352:CD,6358:CD,6364:CD,6370:CD,6376:CD,6382:CD,6388:CD,6394:CD,6400:CD,6406:CD,6412:CD,6418:CD,6424:CD,6430:CD,6436:CD,6442:CD,6448:CD,6454:CD,6460:CD,6466:CD,6472:CD,6478:CD,6484:CD,6490:CD,6496:CD,6502:CD,6508:CD,6514:CD,6520:CD,6526:CD,6532:CD,6538:CD,6544:CD,6550:CD,6556:CD,6562:CD,6568:CD,6574:CD,6580:CD,6586:CD,6592:CD,6598:CD,6604:CD,6610:CD,6616:CD,6622:CD,6628:CD,6634:CD,6640:CD,6646:CD,6652:CD,6658:CD,6664:CD,6670:CD,6676:CD,6682:CD,6688:CD,6694:CD,6700:CD,6706:CD,6712:CD,6718:CD,6724:CD,6730:CD,6736:CD,6742:CD,6748:CD,6754:CD,6760:CD,6766:CD,6774:CD,6780:CD,6783:CD,6806:CD,6808
1610 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v2 = new org.biojava.nbio.structure.Element::DD,1639:CF,1611
1611 :: NORM :: declaration :: [I :: v10 = new []::
1612 :: EXPR :: modify :: I :: v10[#(0)] = #(1)::
1639 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.H = v2::
1641 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v14 = new org.biojava.nbio.structure.Element::DD,1698:CF,1642
1642 :: NORM :: declaration :: [I :: v24 = new []::
1643 :: EXPR :: modify :: I :: v24[#(0)] = #(-4)::
1647 :: EXPR :: modify :: I :: v24[#(1)] = #(-3)::
1651 :: EXPR :: modify :: I :: v24[#(2)] = #(-2)::
1655 :: EXPR :: modify :: I :: v24[#(4)] = #(-1)::
1659 :: EXPR :: modify :: I :: v24[#(5)] = #(1)::
1663 :: EXPR :: modify :: I :: v24[#(6)] = #(2)::
1667 :: EXPR :: modify :: I :: v24[#(7)] = #(3)::
1671 :: EXPR :: modify :: I :: v24[#(8)] = #(4)::
1698 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.C = v14::
1700 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v35 = new org.biojava.nbio.structure.Element::DD,1757:CF,1701
1701 :: NORM :: declaration :: [I :: v41 = new []::
1702 :: EXPR :: modify :: I :: v41[#(0)] = #(-3)::
1706 :: EXPR :: modify :: I :: v41[#(1)] = #(-2)::
1710 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
1714 :: EXPR :: modify :: I :: v41[#(4)] = #(1)::
1718 :: EXPR :: modify :: I :: v41[#(5)] = #(2)::
1722 :: EXPR :: modify :: I :: v41[#(6)] = #(3)::
1726 :: EXPR :: modify :: I :: v41[#(7)] = #(4)::
1730 :: EXPR :: modify :: I :: v41[#(8)] = #(5)::
1757 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.N = v35::
1759 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v45 = new org.biojava.nbio.structure.Element::DD,1800:CF,1760
1760 :: NORM :: declaration :: [I :: v51 = new []::
1761 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
1765 :: EXPR :: modify :: I :: v51[#(1)] = #(-1)::
1769 :: EXPR :: modify :: I :: v51[#(3)] = #(1)::
1773 :: EXPR :: modify :: I :: v51[#(4)] = #(2)::
1800 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.O = v45::
1802 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v55 = new org.biojava.nbio.structure.Element::DD,1831:CF,1803
1803 :: NORM :: declaration :: [I :: v58 = new []::
1804 :: EXPR :: modify :: I :: v58[#(1)] = #(1)::
1831 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.D = v55::
1833 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v61 = new org.biojava.nbio.structure.Element::DD,1862:CF,1834
1834 :: NORM :: declaration :: [I :: v64 = new []::
1835 :: EXPR :: modify :: I :: v64[#(1)] = #(1)::
1862 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.T = v61::
1864 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v67 = new org.biojava.nbio.structure.Element::DD,1889
1889 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.He = v67::
1891 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v77 = new org.biojava.nbio.structure.Element::DD,1920:CF,1892
1892 :: NORM :: declaration :: [I :: v83 = new []::
1893 :: EXPR :: modify :: I :: v83[#(1)] = #(1)::
1920 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Li = v77::
1922 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v87 = new org.biojava.nbio.structure.Element::DD,1955:CF,1923
1923 :: NORM :: declaration :: [I :: v92 = new []::
1924 :: EXPR :: modify :: I :: v92[#(1)] = #(1)::
1928 :: EXPR :: modify :: I :: v92[#(2)] = #(2)::
1955 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Be = v87::
1957 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v96 = new org.biojava.nbio.structure.Element::DD,1994:CF,1958
1958 :: NORM :: declaration :: [I :: v101 = new []::
1959 :: EXPR :: modify :: I :: v101[#(1)] = #(1)::
1963 :: EXPR :: modify :: I :: v101[#(2)] = #(2)::
1967 :: EXPR :: modify :: I :: v101[#(3)] = #(3)::
1994 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.B = v96::
1996 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v105 = new org.biojava.nbio.structure.Element::DD,2029:CF,1997
1997 :: NORM :: declaration :: [I :: v111 = new []::
1998 :: EXPR :: modify :: I :: v111[#(0)] = #(-1)::
2002 :: EXPR :: modify :: I :: v111[#(2)] = #(1)::
2029 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.F = v105::
2031 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v115 = new org.biojava.nbio.structure.Element::DD,2056
2056 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ne = v115::
2058 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v125 = new org.biojava.nbio.structure.Element::DD,2091:CF,2059
2059 :: NORM :: declaration :: [I :: v130 = new []::
2060 :: EXPR :: modify :: I :: v130[#(0)] = #(-1)::
2064 :: EXPR :: modify :: I :: v130[#(2)] = #(1)::
2091 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Na = v125::
2093 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v134 = new org.biojava.nbio.structure.Element::DD,2126:CF,2094
2094 :: NORM :: declaration :: [I :: v140 = new []::
2095 :: EXPR :: modify :: I :: v140[#(1)] = #(1)::
2099 :: EXPR :: modify :: I :: v140[#(2)] = #(2)::
2126 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mg = v134::
2128 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v144 = new org.biojava.nbio.structure.Element::DD,2165:CF,2129
2129 :: NORM :: declaration :: [I :: v149 = new []::
2130 :: EXPR :: modify :: I :: v149[#(1)] = #(1)::
2134 :: EXPR :: modify :: I :: v149[#(2)] = #(2)::
2138 :: EXPR :: modify :: I :: v149[#(3)] = #(3)::
2165 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Al = v144::
2167 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v153 = new org.biojava.nbio.structure.Element::DD,2224:CF,2168
2168 :: NORM :: declaration :: [I :: v159 = new []::
2169 :: EXPR :: modify :: I :: v159[#(0)] = #(-4)::
2173 :: EXPR :: modify :: I :: v159[#(1)] = #(-3)::
2177 :: EXPR :: modify :: I :: v159[#(2)] = #(-2)::
2181 :: EXPR :: modify :: I :: v159[#(3)] = #(-1)::
2185 :: EXPR :: modify :: I :: v159[#(5)] = #(1)::
2189 :: EXPR :: modify :: I :: v159[#(6)] = #(2)::
2193 :: EXPR :: modify :: I :: v159[#(7)] = #(3)::
2197 :: EXPR :: modify :: I :: v159[#(8)] = #(4)::
2224 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Si = v153::
2226 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v163 = new org.biojava.nbio.structure.Element::DD,2283:CF,2227
2227 :: NORM :: declaration :: [I :: v170 = new []::
2228 :: EXPR :: modify :: I :: v170[#(0)] = #(-3)::
2232 :: EXPR :: modify :: I :: v170[#(1)] = #(-2)::
2236 :: EXPR :: modify :: I :: v170[#(2)] = #(-1)::
2240 :: EXPR :: modify :: I :: v170[#(4)] = #(1)::
2244 :: EXPR :: modify :: I :: v170[#(5)] = #(2)::
2248 :: EXPR :: modify :: I :: v170[#(6)] = #(3)::
2252 :: EXPR :: modify :: I :: v170[#(7)] = #(4)::
2256 :: EXPR :: modify :: I :: v170[#(8)] = #(5)::
2283 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.P = v163::
2285 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v174 = new org.biojava.nbio.structure.Element::DD,2342:CF,2286
2286 :: NORM :: declaration :: [I :: v181 = new []::
2287 :: EXPR :: modify :: I :: v181[#(0)] = #(-2)::
2291 :: EXPR :: modify :: I :: v181[#(1)] = #(-1)::
2295 :: EXPR :: modify :: I :: v181[#(3)] = #(1)::
2299 :: EXPR :: modify :: I :: v181[#(4)] = #(2)::
2303 :: EXPR :: modify :: I :: v181[#(5)] = #(3)::
2307 :: EXPR :: modify :: I :: v181[#(6)] = #(4)::
2311 :: EXPR :: modify :: I :: v181[#(7)] = #(5)::
2315 :: EXPR :: modify :: I :: v181[#(8)] = #(6)::
2342 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.S = v174::
2344 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v185 = new org.biojava.nbio.structure.Element::DD,2401:CF,2345
2345 :: NORM :: declaration :: [I :: v192 = new []::
2346 :: EXPR :: modify :: I :: v192[#(0)] = #(-1)::
2350 :: EXPR :: modify :: I :: v192[#(2)] = #(1)::
2354 :: EXPR :: modify :: I :: v192[#(3)] = #(2)::
2358 :: EXPR :: modify :: I :: v192[#(4)] = #(3)::
2362 :: EXPR :: modify :: I :: v192[#(5)] = #(4)::
2366 :: EXPR :: modify :: I :: v192[#(6)] = #(5)::
2370 :: EXPR :: modify :: I :: v192[#(7)] = #(6)::
2374 :: EXPR :: modify :: I :: v192[#(8)] = #(7)::
2401 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cl = v185::
2403 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v196 = new org.biojava.nbio.structure.Element::DD,2428
2428 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ar = v196::
2430 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v204 = new org.biojava.nbio.structure.Element::DD,2463:CF,2431
2431 :: NORM :: declaration :: [I :: v211 = new []::
2432 :: EXPR :: modify :: I :: v211[#(0)] = #(-1)::
2436 :: EXPR :: modify :: I :: v211[#(2)] = #(1)::
2463 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.K = v204::
2465 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v214 = new org.biojava.nbio.structure.Element::DD,2498:CF,2466
2466 :: NORM :: declaration :: [I :: v219 = new []::
2467 :: EXPR :: modify :: I :: v219[#(1)] = #(1)::
2471 :: EXPR :: modify :: I :: v219[#(2)] = #(2)::
2498 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ca = v214::
2500 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v223 = new org.biojava.nbio.structure.Element::DD,2537:CF,2501
2501 :: NORM :: declaration :: [I :: v230 = new []::
2502 :: EXPR :: modify :: I :: v230[#(1)] = #(1)::
2506 :: EXPR :: modify :: I :: v230[#(2)] = #(2)::
2510 :: EXPR :: modify :: I :: v230[#(3)] = #(3)::
2537 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sc = v223::
2539 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v234 = new org.biojava.nbio.structure.Element::DD,2584:CF,2540
2540 :: NORM :: declaration :: [I :: v239 = new []::
2541 :: EXPR :: modify :: I :: v239[#(0)] = #(-1)::
2545 :: EXPR :: modify :: I :: v239[#(2)] = #(1)::
2549 :: EXPR :: modify :: I :: v239[#(3)] = #(2)::
2553 :: EXPR :: modify :: I :: v239[#(4)] = #(3)::
2557 :: EXPR :: modify :: I :: v239[#(5)] = #(4)::
2584 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ti = v234::
2586 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v242 = new org.biojava.nbio.structure.Element::DD,2635:CF,2587
2587 :: NORM :: declaration :: [I :: v248 = new []::
2588 :: EXPR :: modify :: I :: v248[#(0)] = #(-1)::
2592 :: EXPR :: modify :: I :: v248[#(2)] = #(1)::
2596 :: EXPR :: modify :: I :: v248[#(3)] = #(2)::
2600 :: EXPR :: modify :: I :: v248[#(4)] = #(3)::
2604 :: EXPR :: modify :: I :: v248[#(5)] = #(4)::
2608 :: EXPR :: modify :: I :: v248[#(6)] = #(5)::
2635 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.V = v242::
2637 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v252 = new org.biojava.nbio.structure.Element::DD,2694:CF,2638
2638 :: NORM :: declaration :: [I :: v258 = new []::
2639 :: EXPR :: modify :: I :: v258[#(0)] = #(-2)::
2643 :: EXPR :: modify :: I :: v258[#(1)] = #(-1)::
2647 :: EXPR :: modify :: I :: v258[#(3)] = #(1)::
2651 :: EXPR :: modify :: I :: v258[#(4)] = #(2)::
2655 :: EXPR :: modify :: I :: v258[#(5)] = #(3)::
2659 :: EXPR :: modify :: I :: v258[#(6)] = #(4)::
2663 :: EXPR :: modify :: I :: v258[#(7)] = #(5)::
2667 :: EXPR :: modify :: I :: v258[#(8)] = #(6)::
2694 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cr = v252::
2696 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v262 = new org.biojava.nbio.structure.Element::DD,2761:CF,2697
2697 :: NORM :: declaration :: [I :: v269 = new []::
2698 :: EXPR :: modify :: I :: v269[#(0)] = #(-3)::
2702 :: EXPR :: modify :: I :: v269[#(1)] = #(-2)::
2706 :: EXPR :: modify :: I :: v269[#(2)] = #(-1)::
2710 :: EXPR :: modify :: I :: v269[#(4)] = #(1)::
2714 :: EXPR :: modify :: I :: v269[#(5)] = #(2)::
2718 :: EXPR :: modify :: I :: v269[#(6)] = #(3)::
2722 :: EXPR :: modify :: I :: v269[#(7)] = #(4)::
2726 :: EXPR :: modify :: I :: v269[#(8)] = #(5)::
2730 :: EXPR :: modify :: I :: v269[#(9)] = #(6)::
2734 :: EXPR :: modify :: I :: v269[#(10)] = #(7)::
2761 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mn = v262::
2763 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v272 = new org.biojava.nbio.structure.Element::DD,2820:CF,2764
2764 :: NORM :: declaration :: [I :: v276 = new []::
2765 :: EXPR :: modify :: I :: v276[#(0)] = #(-2)::
2769 :: EXPR :: modify :: I :: v276[#(1)] = #(-1)::
2773 :: EXPR :: modify :: I :: v276[#(3)] = #(1)::
2777 :: EXPR :: modify :: I :: v276[#(4)] = #(2)::
2781 :: EXPR :: modify :: I :: v276[#(5)] = #(3)::
2785 :: EXPR :: modify :: I :: v276[#(6)] = #(4)::
2789 :: EXPR :: modify :: I :: v276[#(7)] = #(5)::
2793 :: EXPR :: modify :: I :: v276[#(8)] = #(6)::
2820 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fe = v272::
2822 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v280 = new org.biojava.nbio.structure.Element::DD,2871:CF,2823
2823 :: NORM :: declaration :: [I :: v285 = new []::
2824 :: EXPR :: modify :: I :: v285[#(0)] = #(-1)::
2828 :: EXPR :: modify :: I :: v285[#(2)] = #(1)::
2832 :: EXPR :: modify :: I :: v285[#(3)] = #(2)::
2836 :: EXPR :: modify :: I :: v285[#(4)] = #(3)::
2840 :: EXPR :: modify :: I :: v285[#(5)] = #(4)::
2844 :: EXPR :: modify :: I :: v285[#(6)] = #(5)::
2871 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Co = v280::
2873 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v288 = new org.biojava.nbio.structure.Element::DD,2918:CF,2874
2874 :: NORM :: declaration :: [I :: v295 = new []::
2875 :: EXPR :: modify :: I :: v295[#(0)] = #(-1)::
2879 :: EXPR :: modify :: I :: v295[#(2)] = #(1)::
2883 :: EXPR :: modify :: I :: v295[#(3)] = #(2)::
2887 :: EXPR :: modify :: I :: v295[#(4)] = #(3)::
2891 :: EXPR :: modify :: I :: v295[#(5)] = #(4)::
2918 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ni = v288::
2920 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v299 = new org.biojava.nbio.structure.Element::DD,2961:CF,2921
2921 :: NORM :: declaration :: [I :: v305 = new []::
2922 :: EXPR :: modify :: I :: v305[#(1)] = #(1)::
2926 :: EXPR :: modify :: I :: v305[#(2)] = #(2)::
2930 :: EXPR :: modify :: I :: v305[#(3)] = #(3)::
2934 :: EXPR :: modify :: I :: v305[#(4)] = #(4)::
2961 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cu = v299::
2963 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v308 = new org.biojava.nbio.structure.Element::DD,2996:CF,2964
2964 :: NORM :: declaration :: [I :: v313 = new []::
2965 :: EXPR :: modify :: I :: v313[#(1)] = #(1)::
2969 :: EXPR :: modify :: I :: v313[#(2)] = #(2)::
2996 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zn = v308::
2998 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v317 = new org.biojava.nbio.structure.Element::DD,3035:CF,2999
2999 :: NORM :: declaration :: [I :: v321 = new []::
3000 :: EXPR :: modify :: I :: v321[#(1)] = #(1)::
3004 :: EXPR :: modify :: I :: v321[#(2)] = #(2)::
3008 :: EXPR :: modify :: I :: v321[#(3)] = #(3)::
3035 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ga = v317::
3037 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v324 = new org.biojava.nbio.structure.Element::DD,3094:CF,3038
3038 :: NORM :: declaration :: [I :: v329 = new []::
3039 :: EXPR :: modify :: I :: v329[#(0)] = #(-4)::
3043 :: EXPR :: modify :: I :: v329[#(1)] = #(-3)::
3047 :: EXPR :: modify :: I :: v329[#(2)] = #(-2)::
3051 :: EXPR :: modify :: I :: v329[#(3)] = #(-1)::
3055 :: EXPR :: modify :: I :: v329[#(5)] = #(1)::
3059 :: EXPR :: modify :: I :: v329[#(6)] = #(2)::
3063 :: EXPR :: modify :: I :: v329[#(7)] = #(3)::
3067 :: EXPR :: modify :: I :: v329[#(8)] = #(4)::
3094 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ge = v324::
3096 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v333 = new org.biojava.nbio.structure.Element::DD,3141:CF,3097
3097 :: NORM :: declaration :: [I :: v338 = new []::
3098 :: EXPR :: modify :: I :: v338[#(0)] = #(-3)::
3102 :: EXPR :: modify :: I :: v338[#(2)] = #(1)::
3106 :: EXPR :: modify :: I :: v338[#(3)] = #(2)::
3110 :: EXPR :: modify :: I :: v338[#(4)] = #(3)::
3114 :: EXPR :: modify :: I :: v338[#(5)] = #(5)::
3141 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.As = v333::
3143 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v342 = new org.biojava.nbio.structure.Element::DD,3188:CF,3144
3144 :: NORM :: declaration :: [I :: v348 = new []::
3145 :: EXPR :: modify :: I :: v348[#(0)] = #(-2)::
3149 :: EXPR :: modify :: I :: v348[#(2)] = #(1)::
3153 :: EXPR :: modify :: I :: v348[#(3)] = #(2)::
3157 :: EXPR :: modify :: I :: v348[#(4)] = #(4)::
3161 :: EXPR :: modify :: I :: v348[#(5)] = #(6)::
3188 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Se = v342::
3190 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v351 = new org.biojava.nbio.structure.Element::DD,3243:CF,3191
3191 :: NORM :: declaration :: [I :: v355 = new []::
3192 :: EXPR :: modify :: I :: v355[#(0)] = #(-1)::
3196 :: EXPR :: modify :: I :: v355[#(2)] = #(1)::
3200 :: EXPR :: modify :: I :: v355[#(3)] = #(2)::
3204 :: EXPR :: modify :: I :: v355[#(4)] = #(3)::
3208 :: EXPR :: modify :: I :: v355[#(5)] = #(4)::
3212 :: EXPR :: modify :: I :: v355[#(6)] = #(5)::
3216 :: EXPR :: modify :: I :: v355[#(7)] = #(7)::
3243 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Br = v351::
3245 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v359 = new org.biojava.nbio.structure.Element::DD,3274:CF,3246
3246 :: NORM :: declaration :: [I :: v364 = new []::
3247 :: EXPR :: modify :: I :: v364[#(1)] = #(2)::
3274 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Kr = v359::
3276 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v368 = new org.biojava.nbio.structure.Element::DD,3309:CF,3277
3277 :: NORM :: declaration :: [I :: v374 = new []::
3278 :: EXPR :: modify :: I :: v374[#(0)] = #(-1)::
3282 :: EXPR :: modify :: I :: v374[#(2)] = #(1)::
3309 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rb = v368::
3311 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v377 = new org.biojava.nbio.structure.Element::DD,3344:CF,3312
3312 :: NORM :: declaration :: [I :: v382 = new []::
3313 :: EXPR :: modify :: I :: v382[#(1)] = #(1)::
3317 :: EXPR :: modify :: I :: v382[#(2)] = #(2)::
3344 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sr = v377::
3346 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v386 = new org.biojava.nbio.structure.Element::DD,3383:CF,3347
3347 :: NORM :: declaration :: [I :: v391 = new []::
3348 :: EXPR :: modify :: I :: v391[#(1)] = #(1)::
3352 :: EXPR :: modify :: I :: v391[#(2)] = #(2)::
3356 :: EXPR :: modify :: I :: v391[#(3)] = #(3)::
3383 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Y = v386::
3385 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v394 = new org.biojava.nbio.structure.Element::DD,3426:CF,3386
3386 :: NORM :: declaration :: [I :: v401 = new []::
3387 :: EXPR :: modify :: I :: v401[#(1)] = #(1)::
3391 :: EXPR :: modify :: I :: v401[#(2)] = #(2)::
3395 :: EXPR :: modify :: I :: v401[#(3)] = #(3)::
3399 :: EXPR :: modify :: I :: v401[#(4)] = #(4)::
3426 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zr = v394::
3428 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v405 = new org.biojava.nbio.structure.Element::DD,3477:CF,3429
3429 :: NORM :: declaration :: [I :: v411 = new []::
3430 :: EXPR :: modify :: I :: v411[#(0)] = #(-1)::
3434 :: EXPR :: modify :: I :: v411[#(2)] = #(1)::
3438 :: EXPR :: modify :: I :: v411[#(3)] = #(2)::
3442 :: EXPR :: modify :: I :: v411[#(4)] = #(3)::
3446 :: EXPR :: modify :: I :: v411[#(5)] = #(4)::
3450 :: EXPR :: modify :: I :: v411[#(6)] = #(5)::
3477 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nb = v405::
3479 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v414 = new org.biojava.nbio.structure.Element::DD,3536:CF,3480
3480 :: NORM :: declaration :: [I :: v420 = new []::
3481 :: EXPR :: modify :: I :: v420[#(0)] = #(-2)::
3485 :: EXPR :: modify :: I :: v420[#(1)] = #(-1)::
3489 :: EXPR :: modify :: I :: v420[#(3)] = #(1)::
3493 :: EXPR :: modify :: I :: v420[#(4)] = #(2)::
3497 :: EXPR :: modify :: I :: v420[#(5)] = #(3)::
3501 :: EXPR :: modify :: I :: v420[#(6)] = #(4)::
3505 :: EXPR :: modify :: I :: v420[#(7)] = #(5)::
3509 :: EXPR :: modify :: I :: v420[#(8)] = #(6)::
3536 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mo = v414::
3538 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v424 = new org.biojava.nbio.structure.Element::DD,3599:CF,3539
3539 :: NORM :: declaration :: [I :: v431 = new []::
3540 :: EXPR :: modify :: I :: v431[#(0)] = #(-3)::
3544 :: EXPR :: modify :: I :: v431[#(1)] = #(-1)::
3548 :: EXPR :: modify :: I :: v431[#(3)] = #(1)::
3552 :: EXPR :: modify :: I :: v431[#(4)] = #(2)::
3556 :: EXPR :: modify :: I :: v431[#(5)] = #(3)::
3560 :: EXPR :: modify :: I :: v431[#(6)] = #(4)::
3564 :: EXPR :: modify :: I :: v431[#(7)] = #(5)::
3568 :: EXPR :: modify :: I :: v431[#(8)] = #(6)::
3572 :: EXPR :: modify :: I :: v431[#(9)] = #(7)::
3599 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tc = v424::
3601 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v434 = new org.biojava.nbio.structure.Element::DD,3662:CF,3602
3602 :: NORM :: declaration :: [I :: v440 = new []::
3603 :: EXPR :: modify :: I :: v440[#(0)] = #(-2)::
3607 :: EXPR :: modify :: I :: v440[#(2)] = #(1)::
3611 :: EXPR :: modify :: I :: v440[#(3)] = #(2)::
3615 :: EXPR :: modify :: I :: v440[#(4)] = #(3)::
3619 :: EXPR :: modify :: I :: v440[#(5)] = #(4)::
3623 :: EXPR :: modify :: I :: v440[#(6)] = #(5)::
3627 :: EXPR :: modify :: I :: v440[#(7)] = #(6)::
3631 :: EXPR :: modify :: I :: v440[#(8)] = #(7)::
3635 :: EXPR :: modify :: I :: v440[#(9)] = #(8)::
3662 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ru = v434::
3664 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v443 = new org.biojava.nbio.structure.Element::DD,3717:CF,3665
3665 :: NORM :: declaration :: [I :: v448 = new []::
3666 :: EXPR :: modify :: I :: v448[#(0)] = #(-1)::
3670 :: EXPR :: modify :: I :: v448[#(2)] = #(1)::
3674 :: EXPR :: modify :: I :: v448[#(3)] = #(2)::
3678 :: EXPR :: modify :: I :: v448[#(4)] = #(3)::
3682 :: EXPR :: modify :: I :: v448[#(5)] = #(4)::
3686 :: EXPR :: modify :: I :: v448[#(6)] = #(5)::
3690 :: EXPR :: modify :: I :: v448[#(7)] = #(6)::
3717 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rh = v443::
3719 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v452 = new org.biojava.nbio.structure.Element::DD,3756:CF,3720
3720 :: NORM :: declaration :: [I :: v456 = new []::
3721 :: EXPR :: modify :: I :: v456[#(1)] = #(1)::
3725 :: EXPR :: modify :: I :: v456[#(2)] = #(2)::
3729 :: EXPR :: modify :: I :: v456[#(3)] = #(4)::
3756 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pd = v452::
3758 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v459 = new org.biojava.nbio.structure.Element::DD,3799:CF,3759
3759 :: NORM :: declaration :: [I :: v463 = new []::
3760 :: EXPR :: modify :: I :: v463[#(1)] = #(1)::
3764 :: EXPR :: modify :: I :: v463[#(2)] = #(2)::
3768 :: EXPR :: modify :: I :: v463[#(3)] = #(3)::
3772 :: EXPR :: modify :: I :: v463[#(4)] = #(4)::
3799 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ag = v459::
3801 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v467 = new org.biojava.nbio.structure.Element::DD,3834:CF,3802
3802 :: NORM :: declaration :: [I :: v471 = new []::
3803 :: EXPR :: modify :: I :: v471[#(1)] = #(1)::
3807 :: EXPR :: modify :: I :: v471[#(2)] = #(2)::
3834 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cd = v467::
3836 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v475 = new org.biojava.nbio.structure.Element::DD,3873:CF,3837
3837 :: NORM :: declaration :: [I :: v479 = new []::
3838 :: EXPR :: modify :: I :: v479[#(1)] = #(1)::
3842 :: EXPR :: modify :: I :: v479[#(2)] = #(2)::
3846 :: EXPR :: modify :: I :: v479[#(3)] = #(3)::
3873 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.In = v475::
3875 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v483 = new org.biojava.nbio.structure.Element::DD,3912:CF,3876
3876 :: NORM :: declaration :: [I :: v490 = new []::
3877 :: EXPR :: modify :: I :: v490[#(0)] = #(-4)::
3881 :: EXPR :: modify :: I :: v490[#(2)] = #(2)::
3885 :: EXPR :: modify :: I :: v490[#(3)] = #(4)::
3912 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sn = v483::
3914 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v493 = new org.biojava.nbio.structure.Element::DD,3951:CF,3915
3915 :: NORM :: declaration :: [I :: v498 = new []::
3916 :: EXPR :: modify :: I :: v498[#(0)] = #(-3)::
3920 :: EXPR :: modify :: I :: v498[#(2)] = #(3)::
3924 :: EXPR :: modify :: I :: v498[#(3)] = #(5)::
3951 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sb = v493::
3953 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v502 = new org.biojava.nbio.structure.Element::DD,3998:CF,3954
3954 :: NORM :: declaration :: [I :: v507 = new []::
3955 :: EXPR :: modify :: I :: v507[#(0)] = #(-2)::
3959 :: EXPR :: modify :: I :: v507[#(2)] = #(2)::
3963 :: EXPR :: modify :: I :: v507[#(3)] = #(4)::
3967 :: EXPR :: modify :: I :: v507[#(4)] = #(5)::
3971 :: EXPR :: modify :: I :: v507[#(5)] = #(6)::
3998 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Te = v502::
4000 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v511 = new org.biojava.nbio.structure.Element::DD,4049:CF,4001
4001 :: NORM :: declaration :: [I :: v515 = new []::
4002 :: EXPR :: modify :: I :: v515[#(0)] = #(-1)::
4006 :: EXPR :: modify :: I :: v515[#(2)] = #(1)::
4010 :: EXPR :: modify :: I :: v515[#(3)] = #(3)::
4014 :: EXPR :: modify :: I :: v515[#(4)] = #(4)::
4018 :: EXPR :: modify :: I :: v515[#(5)] = #(5)::
4022 :: EXPR :: modify :: I :: v515[#(6)] = #(7)::
4049 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.I = v511::
4051 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v519 = new org.biojava.nbio.structure.Element::DD,4096:CF,4052
4052 :: NORM :: declaration :: [I :: v524 = new []::
4053 :: EXPR :: modify :: I :: v524[#(1)] = #(1)::
4057 :: EXPR :: modify :: I :: v524[#(2)] = #(2)::
4061 :: EXPR :: modify :: I :: v524[#(3)] = #(4)::
4065 :: EXPR :: modify :: I :: v524[#(4)] = #(6)::
4069 :: EXPR :: modify :: I :: v524[#(5)] = #(8)::
4096 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Xe = v519::
4098 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v528 = new org.biojava.nbio.structure.Element::DD,4131:CF,4099
4099 :: NORM :: declaration :: [I :: v533 = new []::
4100 :: EXPR :: modify :: I :: v533[#(0)] = #(-1)::
4104 :: EXPR :: modify :: I :: v533[#(2)] = #(1)::
4131 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cs = v528::
4133 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v537 = new org.biojava.nbio.structure.Element::DD,4162:CF,4134
4134 :: NORM :: declaration :: [I :: v542 = new []::
4135 :: EXPR :: modify :: I :: v542[#(1)] = #(2)::
4162 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ba = v537::
4164 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v546 = new org.biojava.nbio.structure.Element::DD,4197:CF,4165
4165 :: NORM :: declaration :: [I :: v549 = new []::
4166 :: EXPR :: modify :: I :: v549[#(1)] = #(2)::
4170 :: EXPR :: modify :: I :: v549[#(2)] = #(3)::
4197 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.La = v546::
4199 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v552 = new org.biojava.nbio.structure.Element::DD,4236:CF,4200
4200 :: NORM :: declaration :: [I :: v557 = new []::
4201 :: EXPR :: modify :: I :: v557[#(1)] = #(2)::
4205 :: EXPR :: modify :: I :: v557[#(2)] = #(3)::
4209 :: EXPR :: modify :: I :: v557[#(3)] = #(4)::
4236 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ce = v552::
4238 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v560 = new org.biojava.nbio.structure.Element::DD,4275:CF,4239
4239 :: NORM :: declaration :: [I :: v565 = new []::
4240 :: EXPR :: modify :: I :: v565[#(1)] = #(2)::
4244 :: EXPR :: modify :: I :: v565[#(2)] = #(3)::
4248 :: EXPR :: modify :: I :: v565[#(3)] = #(4)::
4275 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pr = v560::
4277 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v568 = new org.biojava.nbio.structure.Element::DD,4314:CF,4278
4278 :: NORM :: declaration :: [I :: v572 = new []::
4279 :: EXPR :: modify :: I :: v572[#(1)] = #(2)::
4283 :: EXPR :: modify :: I :: v572[#(2)] = #(3)::
4287 :: EXPR :: modify :: I :: v572[#(3)] = #(4)::
4314 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nd = v568::
4316 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v575 = new org.biojava.nbio.structure.Element::DD,4349:CF,4317
4317 :: NORM :: declaration :: [I :: v580 = new []::
4318 :: EXPR :: modify :: I :: v580[#(1)] = #(2)::
4322 :: EXPR :: modify :: I :: v580[#(2)] = #(3)::
4349 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pm = v575::
4351 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v583 = new org.biojava.nbio.structure.Element::DD,4384:CF,4352
4352 :: NORM :: declaration :: [I :: v589 = new []::
4353 :: EXPR :: modify :: I :: v589[#(1)] = #(2)::
4357 :: EXPR :: modify :: I :: v589[#(2)] = #(3)::
4384 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sm = v583::
4386 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v593 = new org.biojava.nbio.structure.Element::DD,4419:CF,4387
4387 :: NORM :: declaration :: [I :: v598 = new []::
4388 :: EXPR :: modify :: I :: v598[#(1)] = #(2)::
4392 :: EXPR :: modify :: I :: v598[#(2)] = #(3)::
4419 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Eu = v593::
4421 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v601 = new org.biojava.nbio.structure.Element::DD,4458:CF,4422
4422 :: NORM :: declaration :: [I :: v605 = new []::
4423 :: EXPR :: modify :: I :: v605[#(1)] = #(1)::
4427 :: EXPR :: modify :: I :: v605[#(2)] = #(2)::
4431 :: EXPR :: modify :: I :: v605[#(3)] = #(3)::
4458 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Gd = v601::
4460 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v608 = new org.biojava.nbio.structure.Element::DD,4501:CF,4461
4461 :: NORM :: declaration :: [I :: v614 = new []::
4462 :: EXPR :: modify :: I :: v614[#(1)] = #(1)::
4466 :: EXPR :: modify :: I :: v614[#(2)] = #(2)::
4470 :: EXPR :: modify :: I :: v614[#(3)] = #(3)::
4474 :: EXPR :: modify :: I :: v614[#(4)] = #(4)::
4501 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tb = v608::
4503 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v617 = new org.biojava.nbio.structure.Element::DD,4540:CF,4504
4504 :: NORM :: declaration :: [I :: v621 = new []::
4505 :: EXPR :: modify :: I :: v621[#(1)] = #(2)::
4509 :: EXPR :: modify :: I :: v621[#(2)] = #(3)::
4513 :: EXPR :: modify :: I :: v621[#(3)] = #(4)::
4540 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Dy = v617::
4542 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v624 = new org.biojava.nbio.structure.Element::DD,4575:CF,4543
4543 :: NORM :: declaration :: [I :: v628 = new []::
4544 :: EXPR :: modify :: I :: v628[#(1)] = #(2)::
4548 :: EXPR :: modify :: I :: v628[#(2)] = #(3)::
4575 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ho = v624::
4577 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v632 = new org.biojava.nbio.structure.Element::DD,4610:CF,4578
4578 :: NORM :: declaration :: [I :: v638 = new []::
4579 :: EXPR :: modify :: I :: v638[#(1)] = #(2)::
4583 :: EXPR :: modify :: I :: v638[#(2)] = #(3)::
4610 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Er = v632::
4612 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v641 = new org.biojava.nbio.structure.Element::DD,4649:CF,4613
4613 :: NORM :: declaration :: [I :: v646 = new []::
4614 :: EXPR :: modify :: I :: v646[#(1)] = #(2)::
4618 :: EXPR :: modify :: I :: v646[#(2)] = #(3)::
4622 :: EXPR :: modify :: I :: v646[#(3)] = #(4)::
4649 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tm = v641::
4651 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v649 = new org.biojava.nbio.structure.Element::DD,4684:CF,4652
4652 :: NORM :: declaration :: [I :: v654 = new []::
4653 :: EXPR :: modify :: I :: v654[#(1)] = #(2)::
4657 :: EXPR :: modify :: I :: v654[#(2)] = #(3)::
4684 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Yb = v649::
4686 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v657 = new org.biojava.nbio.structure.Element::DD,4715:CF,4687
4687 :: NORM :: declaration :: [I :: v662 = new []::
4688 :: EXPR :: modify :: I :: v662[#(1)] = #(3)::
4715 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lu = v657::
4717 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v665 = new org.biojava.nbio.structure.Element::DD,4754:CF,4718
4718 :: NORM :: declaration :: [I :: v669 = new []::
4719 :: EXPR :: modify :: I :: v669[#(1)] = #(2)::
4723 :: EXPR :: modify :: I :: v669[#(2)] = #(3)::
4727 :: EXPR :: modify :: I :: v669[#(3)] = #(4)::
4754 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hf = v665::
4756 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v672 = new org.biojava.nbio.structure.Element::DD,4801:CF,4757
4757 :: NORM :: declaration :: [I :: v677 = new []::
4758 :: EXPR :: modify :: I :: v677[#(0)] = #(-1)::
4762 :: EXPR :: modify :: I :: v677[#(2)] = #(2)::
4766 :: EXPR :: modify :: I :: v677[#(3)] = #(3)::
4770 :: EXPR :: modify :: I :: v677[#(4)] = #(4)::
4774 :: EXPR :: modify :: I :: v677[#(5)] = #(5)::
4801 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ta = v672::
4803 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v680 = new org.biojava.nbio.structure.Element::DD,4860:CF,4804
4804 :: NORM :: declaration :: [I :: v685 = new []::
4805 :: EXPR :: modify :: I :: v685[#(0)] = #(-2)::
4809 :: EXPR :: modify :: I :: v685[#(1)] = #(-1)::
4813 :: EXPR :: modify :: I :: v685[#(3)] = #(1)::
4817 :: EXPR :: modify :: I :: v685[#(4)] = #(2)::
4821 :: EXPR :: modify :: I :: v685[#(5)] = #(3)::
4825 :: EXPR :: modify :: I :: v685[#(6)] = #(4)::
4829 :: EXPR :: modify :: I :: v685[#(7)] = #(5)::
4833 :: EXPR :: modify :: I :: v685[#(8)] = #(6)::
4860 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.W = v680::
4862 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v689 = new org.biojava.nbio.structure.Element::DD,4923:CF,4863
4863 :: NORM :: declaration :: [I :: v694 = new []::
4864 :: EXPR :: modify :: I :: v694[#(0)] = #(-3)::
4868 :: EXPR :: modify :: I :: v694[#(1)] = #(-1)::
4872 :: EXPR :: modify :: I :: v694[#(3)] = #(1)::
4876 :: EXPR :: modify :: I :: v694[#(4)] = #(2)::
4880 :: EXPR :: modify :: I :: v694[#(5)] = #(3)::
4884 :: EXPR :: modify :: I :: v694[#(6)] = #(4)::
4888 :: EXPR :: modify :: I :: v694[#(7)] = #(5)::
4892 :: EXPR :: modify :: I :: v694[#(8)] = #(6)::
4896 :: EXPR :: modify :: I :: v694[#(9)] = #(7)::
4923 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Re = v689::
4925 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v697 = new org.biojava.nbio.structure.Element::DD,4990:CF,4926
4926 :: NORM :: declaration :: [I :: v701 = new []::
4927 :: EXPR :: modify :: I :: v701[#(0)] = #(-2)::
4931 :: EXPR :: modify :: I :: v701[#(1)] = #(-1)::
4935 :: EXPR :: modify :: I :: v701[#(3)] = #(1)::
4939 :: EXPR :: modify :: I :: v701[#(4)] = #(2)::
4943 :: EXPR :: modify :: I :: v701[#(5)] = #(3)::
4947 :: EXPR :: modify :: I :: v701[#(6)] = #(4)::
4951 :: EXPR :: modify :: I :: v701[#(7)] = #(5)::
4955 :: EXPR :: modify :: I :: v701[#(8)] = #(6)::
4959 :: EXPR :: modify :: I :: v701[#(9)] = #(7)::
4963 :: EXPR :: modify :: I :: v701[#(10)] = #(8)::
4990 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Os = v697::
4992 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v704 = new org.biojava.nbio.structure.Element::DD,5053:CF,4993
4993 :: NORM :: declaration :: [I :: v707 = new []::
4994 :: EXPR :: modify :: I :: v707[#(0)] = #(-3)::
4998 :: EXPR :: modify :: I :: v707[#(1)] = #(-1)::
5002 :: EXPR :: modify :: I :: v707[#(3)] = #(1)::
5006 :: EXPR :: modify :: I :: v707[#(4)] = #(2)::
5010 :: EXPR :: modify :: I :: v707[#(5)] = #(3)::
5014 :: EXPR :: modify :: I :: v707[#(6)] = #(4)::
5018 :: EXPR :: modify :: I :: v707[#(7)] = #(5)::
5022 :: EXPR :: modify :: I :: v707[#(8)] = #(6)::
5026 :: EXPR :: modify :: I :: v707[#(9)] = #(8)::
5053 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ir = v704::
5055 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v710 = new org.biojava.nbio.structure.Element::DD,5112:CF,5056
5056 :: NORM :: declaration :: [I :: v713 = new []::
5057 :: EXPR :: modify :: I :: v713[#(0)] = #(-2)::
5061 :: EXPR :: modify :: I :: v713[#(1)] = #(-1)::
5065 :: EXPR :: modify :: I :: v713[#(3)] = #(1)::
5069 :: EXPR :: modify :: I :: v713[#(4)] = #(2)::
5073 :: EXPR :: modify :: I :: v713[#(5)] = #(3)::
5077 :: EXPR :: modify :: I :: v713[#(6)] = #(4)::
5081 :: EXPR :: modify :: I :: v713[#(7)] = #(5)::
5085 :: EXPR :: modify :: I :: v713[#(8)] = #(6)::
5112 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pt = v710::
5114 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v716 = new org.biojava.nbio.structure.Element::DD,5159:CF,5115
5115 :: NORM :: declaration :: [I :: v720 = new []::
5116 :: EXPR :: modify :: I :: v720[#(0)] = #(-1)::
5120 :: EXPR :: modify :: I :: v720[#(2)] = #(1)::
5124 :: EXPR :: modify :: I :: v720[#(3)] = #(2)::
5128 :: EXPR :: modify :: I :: v720[#(4)] = #(3)::
5132 :: EXPR :: modify :: I :: v720[#(5)] = #(5)::
5159 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Au = v716::
5161 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v724 = new org.biojava.nbio.structure.Element::DD,5198:CF,5162
5162 :: NORM :: declaration :: [I :: v727 = new []::
5163 :: EXPR :: modify :: I :: v727[#(1)] = #(1)::
5167 :: EXPR :: modify :: I :: v727[#(2)] = #(2)::
5171 :: EXPR :: modify :: I :: v727[#(3)] = #(4)::
5198 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hg = v724::
5200 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v731 = new org.biojava.nbio.structure.Element::DD,5237:CF,5201
5201 :: NORM :: declaration :: [I :: v735 = new []::
5202 :: EXPR :: modify :: I :: v735[#(0)] = #(-1)::
5206 :: EXPR :: modify :: I :: v735[#(2)] = #(1)::
5210 :: EXPR :: modify :: I :: v735[#(3)] = #(3)::
5237 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tl = v731::
5239 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v738 = new org.biojava.nbio.structure.Element::DD,5276:CF,5240
5240 :: NORM :: declaration :: [I :: v742 = new []::
5241 :: EXPR :: modify :: I :: v742[#(0)] = #(-4)::
5245 :: EXPR :: modify :: I :: v742[#(2)] = #(2)::
5249 :: EXPR :: modify :: I :: v742[#(3)] = #(4)::
5276 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pb = v738::
5278 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v746 = new org.biojava.nbio.structure.Element::DD,5319:CF,5279
5279 :: NORM :: declaration :: [I :: v750 = new []::
5280 :: EXPR :: modify :: I :: v750[#(0)] = #(-3)::
5284 :: EXPR :: modify :: I :: v750[#(2)] = #(1)::
5288 :: EXPR :: modify :: I :: v750[#(3)] = #(3)::
5292 :: EXPR :: modify :: I :: v750[#(4)] = #(5)::
5319 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bi = v746::
5321 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v753 = new org.biojava.nbio.structure.Element::DD,5366:CF,5322
5322 :: NORM :: declaration :: [I :: v757 = new []::
5323 :: EXPR :: modify :: I :: v757[#(0)] = #(-2)::
5327 :: EXPR :: modify :: I :: v757[#(2)] = #(2)::
5331 :: EXPR :: modify :: I :: v757[#(3)] = #(4)::
5335 :: EXPR :: modify :: I :: v757[#(4)] = #(5)::
5339 :: EXPR :: modify :: I :: v757[#(5)] = #(6)::
5366 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Po = v753::
5368 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v760 = new org.biojava.nbio.structure.Element::DD,5413:CF,5369
5369 :: NORM :: declaration :: [I :: v764 = new []::
5370 :: EXPR :: modify :: I :: v764[#(0)] = #(-1)::
5374 :: EXPR :: modify :: I :: v764[#(2)] = #(1)::
5378 :: EXPR :: modify :: I :: v764[#(3)] = #(3)::
5382 :: EXPR :: modify :: I :: v764[#(4)] = #(5)::
5386 :: EXPR :: modify :: I :: v764[#(5)] = #(7)::
5413 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.At = v760::
5415 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v767 = new org.biojava.nbio.structure.Element::DD,5448:CF,5416
5416 :: NORM :: declaration :: [I :: v771 = new []::
5417 :: EXPR :: modify :: I :: v771[#(1)] = #(2)::
5421 :: EXPR :: modify :: I :: v771[#(2)] = #(6)::
5448 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rn = v767::
5450 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v774 = new org.biojava.nbio.structure.Element::DD,5479:CF,5451
5451 :: NORM :: declaration :: [I :: v778 = new []::
5452 :: EXPR :: modify :: I :: v778[#(1)] = #(1)::
5479 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fr = v774::
5481 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v782 = new org.biojava.nbio.structure.Element::DD,5510:CF,5482
5482 :: NORM :: declaration :: [I :: v787 = new []::
5483 :: EXPR :: modify :: I :: v787[#(1)] = #(2)::
5510 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ra = v782::
5512 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v790 = new org.biojava.nbio.structure.Element::DD,5545:CF,5513
5513 :: NORM :: declaration :: [I :: v794 = new []::
5514 :: EXPR :: modify :: I :: v794[#(1)] = #(2)::
5518 :: EXPR :: modify :: I :: v794[#(2)] = #(3)::
5545 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ac = v790::
5547 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v797 = new org.biojava.nbio.structure.Element::DD,5584:CF,5548
5548 :: NORM :: declaration :: [I :: v802 = new []::
5549 :: EXPR :: modify :: I :: v802[#(1)] = #(2)::
5553 :: EXPR :: modify :: I :: v802[#(2)] = #(3)::
5557 :: EXPR :: modify :: I :: v802[#(3)] = #(4)::
5584 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Th = v797::
5586 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v805 = new org.biojava.nbio.structure.Element::DD,5627:CF,5587
5587 :: NORM :: declaration :: [I :: v808 = new []::
5588 :: EXPR :: modify :: I :: v808[#(1)] = #(2)::
5592 :: EXPR :: modify :: I :: v808[#(2)] = #(3)::
5596 :: EXPR :: modify :: I :: v808[#(3)] = #(4)::
5600 :: EXPR :: modify :: I :: v808[#(4)] = #(5)::
5627 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pa = v805::
5629 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v811 = new org.biojava.nbio.structure.Element::DD,5674:CF,5630
5630 :: NORM :: declaration :: [I :: v816 = new []::
5631 :: EXPR :: modify :: I :: v816[#(1)] = #(2)::
5635 :: EXPR :: modify :: I :: v816[#(2)] = #(3)::
5639 :: EXPR :: modify :: I :: v816[#(3)] = #(4)::
5643 :: EXPR :: modify :: I :: v816[#(4)] = #(5)::
5647 :: EXPR :: modify :: I :: v816[#(5)] = #(6)::
5674 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.U = v811::
5676 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v819 = new org.biojava.nbio.structure.Element::DD,5721:CF,5677
5677 :: NORM :: declaration :: [I :: v823 = new []::
5678 :: EXPR :: modify :: I :: v823[#(1)] = #(3)::
5682 :: EXPR :: modify :: I :: v823[#(2)] = #(4)::
5686 :: EXPR :: modify :: I :: v823[#(3)] = #(5)::
5690 :: EXPR :: modify :: I :: v823[#(4)] = #(6)::
5694 :: EXPR :: modify :: I :: v823[#(5)] = #(7)::
5721 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Np = v819::
5723 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v826 = new org.biojava.nbio.structure.Element::DD,5772:CF,5724
5724 :: NORM :: declaration :: [I :: v829 = new []::
5725 :: EXPR :: modify :: I :: v829[#(1)] = #(3)::
5729 :: EXPR :: modify :: I :: v829[#(2)] = #(4)::
5733 :: EXPR :: modify :: I :: v829[#(3)] = #(5)::
5737 :: EXPR :: modify :: I :: v829[#(4)] = #(6)::
5741 :: EXPR :: modify :: I :: v829[#(5)] = #(7)::
5745 :: EXPR :: modify :: I :: v829[#(6)] = #(8)::
5772 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pu = v826::
5774 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v832 = new org.biojava.nbio.structure.Element::DD,5823:CF,5775
5775 :: NORM :: declaration :: [I :: v835 = new []::
5776 :: EXPR :: modify :: I :: v835[#(1)] = #(2)::
5780 :: EXPR :: modify :: I :: v835[#(2)] = #(3)::
5784 :: EXPR :: modify :: I :: v835[#(3)] = #(4)::
5788 :: EXPR :: modify :: I :: v835[#(4)] = #(5)::
5792 :: EXPR :: modify :: I :: v835[#(5)] = #(6)::
5796 :: EXPR :: modify :: I :: v835[#(6)] = #(7)::
5823 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Am = v832::
5825 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v838 = new org.biojava.nbio.structure.Element::DD,5858:CF,5826
5826 :: NORM :: declaration :: [I :: v841 = new []::
5827 :: EXPR :: modify :: I :: v841[#(1)] = #(3)::
5831 :: EXPR :: modify :: I :: v841[#(2)] = #(4)::
5858 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cm = v838::
5860 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v844 = new org.biojava.nbio.structure.Element::DD,5897:CF,5861
5861 :: NORM :: declaration :: [I :: v848 = new []::
5862 :: EXPR :: modify :: I :: v848[#(1)] = #(2)::
5866 :: EXPR :: modify :: I :: v848[#(2)] = #(3)::
5870 :: EXPR :: modify :: I :: v848[#(3)] = #(4)::
5897 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bk = v844::
5899 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v851 = new org.biojava.nbio.structure.Element::DD,5936:CF,5900
5900 :: NORM :: declaration :: [I :: v854 = new []::
5901 :: EXPR :: modify :: I :: v854[#(1)] = #(2)::
5905 :: EXPR :: modify :: I :: v854[#(2)] = #(3)::
5909 :: EXPR :: modify :: I :: v854[#(3)] = #(4)::
5936 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cf = v851::
5938 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v857 = new org.biojava.nbio.structure.Element::DD,5971:CF,5939
5939 :: NORM :: declaration :: [I :: v860 = new []::
5940 :: EXPR :: modify :: I :: v860[#(1)] = #(2)::
5944 :: EXPR :: modify :: I :: v860[#(2)] = #(3)::
5971 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Es = v857::
5973 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v863 = new org.biojava.nbio.structure.Element::DD,6006:CF,5974
5974 :: NORM :: declaration :: [I :: v866 = new []::
5975 :: EXPR :: modify :: I :: v866[#(1)] = #(2)::
5979 :: EXPR :: modify :: I :: v866[#(2)] = #(3)::
6006 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fm = v863::
6008 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v869 = new org.biojava.nbio.structure.Element::DD,6041:CF,6009
6009 :: NORM :: declaration :: [I :: v872 = new []::
6010 :: EXPR :: modify :: I :: v872[#(1)] = #(2)::
6014 :: EXPR :: modify :: I :: v872[#(2)] = #(3)::
6041 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Md = v869::
6043 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v875 = new org.biojava.nbio.structure.Element::DD,6076:CF,6044
6044 :: NORM :: declaration :: [I :: v877 = new []::
6045 :: EXPR :: modify :: I :: v877[#(1)] = #(2)::
6049 :: EXPR :: modify :: I :: v877[#(2)] = #(3)::
6076 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.No = v875::
6078 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v880 = new org.biojava.nbio.structure.Element::DD,6107:CF,6079
6079 :: NORM :: declaration :: [I :: v883 = new []::
6080 :: EXPR :: modify :: I :: v883[#(1)] = #(3)::
6107 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lr = v880::
6109 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v886 = new org.biojava.nbio.structure.Element::DD,6133
6133 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.R = v886::
6135 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v891 = new org.biojava.nbio.structure.Element[]::
6136 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v892 = org.biojava.nbio.structure.Element.H::DD,6138
6138 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(0)] = v892::
6142 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v893 = org.biojava.nbio.structure.Element.C::DD,6144
6144 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(1)] = v893::
6148 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v894 = org.biojava.nbio.structure.Element.N::DD,6150
6150 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(2)] = v894::
6154 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v895 = org.biojava.nbio.structure.Element.O::DD,6156
6156 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(3)] = v895::
6160 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v896 = org.biojava.nbio.structure.Element.D::DD,6162
6162 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(4)] = v896::
6166 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v897 = org.biojava.nbio.structure.Element.T::DD,6168
6168 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(5)] = v897::
6172 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v898 = org.biojava.nbio.structure.Element.He::DD,6174
6174 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(6)] = v898::
6178 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v899 = org.biojava.nbio.structure.Element.Li::DD,6180
6180 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(7)] = v899::
6184 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v900 = org.biojava.nbio.structure.Element.Be::DD,6186
6186 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(8)] = v900::
6190 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v901 = org.biojava.nbio.structure.Element.B::DD,6192
6192 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(9)] = v901::
6196 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v902 = org.biojava.nbio.structure.Element.F::DD,6198
6198 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(10)] = v902::
6202 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v903 = org.biojava.nbio.structure.Element.Ne::DD,6204
6204 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(11)] = v903::
6208 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v904 = org.biojava.nbio.structure.Element.Na::DD,6210
6210 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(12)] = v904::
6214 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v905 = org.biojava.nbio.structure.Element.Mg::DD,6216
6216 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(13)] = v905::
6220 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v906 = org.biojava.nbio.structure.Element.Al::DD,6222
6222 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(14)] = v906::
6226 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v907 = org.biojava.nbio.structure.Element.Si::DD,6228
6228 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(15)] = v907::
6232 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v908 = org.biojava.nbio.structure.Element.P::DD,6234
6234 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(16)] = v908::
6238 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v909 = org.biojava.nbio.structure.Element.S::DD,6240
6240 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(17)] = v909::
6244 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v910 = org.biojava.nbio.structure.Element.Cl::DD,6246
6246 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(18)] = v910::
6250 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v911 = org.biojava.nbio.structure.Element.Ar::DD,6252
6252 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(19)] = v911::
6256 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v912 = org.biojava.nbio.structure.Element.K::DD,6258
6258 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(20)] = v912::
6262 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v913 = org.biojava.nbio.structure.Element.Ca::DD,6264
6264 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(21)] = v913::
6268 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v914 = org.biojava.nbio.structure.Element.Sc::DD,6270
6270 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(22)] = v914::
6274 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v915 = org.biojava.nbio.structure.Element.Ti::DD,6276
6276 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(23)] = v915::
6280 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v916 = org.biojava.nbio.structure.Element.V::DD,6282
6282 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(24)] = v916::
6286 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v917 = org.biojava.nbio.structure.Element.Cr::DD,6288
6288 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(25)] = v917::
6292 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v918 = org.biojava.nbio.structure.Element.Mn::DD,6294
6294 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(26)] = v918::
6298 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v919 = org.biojava.nbio.structure.Element.Fe::DD,6300
6300 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(27)] = v919::
6304 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v920 = org.biojava.nbio.structure.Element.Co::DD,6306
6306 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(28)] = v920::
6310 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v921 = org.biojava.nbio.structure.Element.Ni::DD,6312
6312 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(29)] = v921::
6316 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v922 = org.biojava.nbio.structure.Element.Cu::DD,6318
6318 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(30)] = v922::
6322 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v923 = org.biojava.nbio.structure.Element.Zn::DD,6324
6324 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(31)] = v923::
6328 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v924 = org.biojava.nbio.structure.Element.Ga::DD,6330
6330 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(32)] = v924::
6334 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v925 = org.biojava.nbio.structure.Element.Ge::DD,6336
6336 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(33)] = v925::
6340 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v926 = org.biojava.nbio.structure.Element.As::DD,6342
6342 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(34)] = v926::
6346 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v927 = org.biojava.nbio.structure.Element.Se::DD,6348
6348 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(35)] = v927::
6352 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v928 = org.biojava.nbio.structure.Element.Br::DD,6354
6354 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(36)] = v928::
6358 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v929 = org.biojava.nbio.structure.Element.Kr::DD,6360
6360 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(37)] = v929::
6364 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v930 = org.biojava.nbio.structure.Element.Rb::DD,6366
6366 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(38)] = v930::
6370 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v931 = org.biojava.nbio.structure.Element.Sr::DD,6372
6372 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(39)] = v931::
6376 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v932 = org.biojava.nbio.structure.Element.Y::DD,6378
6378 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(40)] = v932::
6382 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v933 = org.biojava.nbio.structure.Element.Zr::DD,6384
6384 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(41)] = v933::
6388 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v934 = org.biojava.nbio.structure.Element.Nb::DD,6390
6390 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(42)] = v934::
6394 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v935 = org.biojava.nbio.structure.Element.Mo::DD,6396
6396 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(43)] = v935::
6400 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v936 = org.biojava.nbio.structure.Element.Tc::DD,6402
6402 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(44)] = v936::
6406 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v937 = org.biojava.nbio.structure.Element.Ru::DD,6408
6408 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(45)] = v937::
6412 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v938 = org.biojava.nbio.structure.Element.Rh::DD,6414
6414 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(46)] = v938::
6418 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v939 = org.biojava.nbio.structure.Element.Pd::DD,6420
6420 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(47)] = v939::
6424 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v940 = org.biojava.nbio.structure.Element.Ag::DD,6426
6426 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(48)] = v940::
6430 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v941 = org.biojava.nbio.structure.Element.Cd::DD,6432
6432 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(49)] = v941::
6436 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v942 = org.biojava.nbio.structure.Element.In::DD,6438
6438 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(50)] = v942::
6442 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v943 = org.biojava.nbio.structure.Element.Sn::DD,6444
6444 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(51)] = v943::
6448 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v944 = org.biojava.nbio.structure.Element.Sb::DD,6450
6450 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(52)] = v944::
6454 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v945 = org.biojava.nbio.structure.Element.Te::DD,6456
6456 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(53)] = v945::
6460 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v946 = org.biojava.nbio.structure.Element.I::DD,6462
6462 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(54)] = v946::
6466 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v947 = org.biojava.nbio.structure.Element.Xe::DD,6468
6468 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(55)] = v947::
6472 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v948 = org.biojava.nbio.structure.Element.Cs::DD,6474
6474 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(56)] = v948::
6478 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v949 = org.biojava.nbio.structure.Element.Ba::DD,6480
6480 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(57)] = v949::
6484 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v950 = org.biojava.nbio.structure.Element.La::DD,6486
6486 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(58)] = v950::
6490 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v951 = org.biojava.nbio.structure.Element.Ce::DD,6492
6492 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(59)] = v951::
6496 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v952 = org.biojava.nbio.structure.Element.Pr::DD,6498
6498 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(60)] = v952::
6502 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v953 = org.biojava.nbio.structure.Element.Nd::DD,6504
6504 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(61)] = v953::
6508 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v954 = org.biojava.nbio.structure.Element.Pm::DD,6510
6510 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(62)] = v954::
6514 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v955 = org.biojava.nbio.structure.Element.Sm::DD,6516
6516 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(63)] = v955::
6520 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v956 = org.biojava.nbio.structure.Element.Eu::DD,6522
6522 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(64)] = v956::
6526 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v957 = org.biojava.nbio.structure.Element.Gd::DD,6528
6528 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(65)] = v957::
6532 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v958 = org.biojava.nbio.structure.Element.Tb::DD,6534
6534 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(66)] = v958::
6538 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v959 = org.biojava.nbio.structure.Element.Dy::DD,6540
6540 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(67)] = v959::
6544 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v960 = org.biojava.nbio.structure.Element.Ho::DD,6546
6546 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(68)] = v960::
6550 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v961 = org.biojava.nbio.structure.Element.Er::DD,6552
6552 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(69)] = v961::
6556 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v962 = org.biojava.nbio.structure.Element.Tm::DD,6558
6558 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(70)] = v962::
6562 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v963 = org.biojava.nbio.structure.Element.Yb::DD,6564
6564 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(71)] = v963::
6568 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v964 = org.biojava.nbio.structure.Element.Lu::DD,6570
6570 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(72)] = v964::
6574 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v965 = org.biojava.nbio.structure.Element.Hf::DD,6576
6576 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(73)] = v965::
6580 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v966 = org.biojava.nbio.structure.Element.Ta::DD,6582
6582 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(74)] = v966::
6586 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v967 = org.biojava.nbio.structure.Element.W::DD,6588
6588 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(75)] = v967::
6592 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v968 = org.biojava.nbio.structure.Element.Re::DD,6594
6594 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(76)] = v968::
6598 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v969 = org.biojava.nbio.structure.Element.Os::DD,6600
6600 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(77)] = v969::
6604 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v970 = org.biojava.nbio.structure.Element.Ir::DD,6606
6606 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(78)] = v970::
6610 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v971 = org.biojava.nbio.structure.Element.Pt::DD,6612
6612 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(79)] = v971::
6616 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v972 = org.biojava.nbio.structure.Element.Au::DD,6618
6618 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(80)] = v972::
6622 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v973 = org.biojava.nbio.structure.Element.Hg::DD,6624
6624 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(81)] = v973::
6628 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v974 = org.biojava.nbio.structure.Element.Tl::DD,6630
6630 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(82)] = v974::
6634 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v975 = org.biojava.nbio.structure.Element.Pb::DD,6636
6636 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(83)] = v975::
6640 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v976 = org.biojava.nbio.structure.Element.Bi::DD,6642
6642 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(84)] = v976::
6646 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v977 = org.biojava.nbio.structure.Element.Po::DD,6648
6648 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(85)] = v977::
6652 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v978 = org.biojava.nbio.structure.Element.At::DD,6654
6654 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(86)] = v978::
6658 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v979 = org.biojava.nbio.structure.Element.Rn::DD,6660
6660 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(87)] = v979::
6664 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v980 = org.biojava.nbio.structure.Element.Fr::DD,6666
6666 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(88)] = v980::
6670 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v981 = org.biojava.nbio.structure.Element.Ra::DD,6672
6672 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(89)] = v981::
6676 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v982 = org.biojava.nbio.structure.Element.Ac::DD,6678
6678 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(90)] = v982::
6682 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v983 = org.biojava.nbio.structure.Element.Th::DD,6684
6684 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(91)] = v983::
6688 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v984 = org.biojava.nbio.structure.Element.Pa::DD,6690
6690 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(92)] = v984::
6694 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v985 = org.biojava.nbio.structure.Element.U::DD,6696
6696 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(93)] = v985::
6700 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v986 = org.biojava.nbio.structure.Element.Np::DD,6702
6702 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(94)] = v986::
6706 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v987 = org.biojava.nbio.structure.Element.Pu::DD,6708
6708 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(95)] = v987::
6712 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v988 = org.biojava.nbio.structure.Element.Am::DD,6714
6714 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(96)] = v988::
6718 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v989 = org.biojava.nbio.structure.Element.Cm::DD,6720
6720 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(97)] = v989::
6724 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v990 = org.biojava.nbio.structure.Element.Bk::DD,6726
6726 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(98)] = v990::
6730 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v991 = org.biojava.nbio.structure.Element.Cf::DD,6732
6732 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(99)] = v991::
6736 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v992 = org.biojava.nbio.structure.Element.Es::DD,6738
6738 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(100)] = v992::
6742 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v993 = org.biojava.nbio.structure.Element.Fm::DD,6744
6744 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(101)] = v993::
6748 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v994 = org.biojava.nbio.structure.Element.Md::DD,6750
6750 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(102)] = v994::
6754 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v995 = org.biojava.nbio.structure.Element.No::DD,6756
6756 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(103)] = v995::
6760 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v996 = org.biojava.nbio.structure.Element.Lr::DD,6762
6762 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(104)] = v996::
6766 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v997 = org.biojava.nbio.structure.Element.R::DD,6768
6768 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(105)] = v997::
6774 :: NORM :: declaration :: Ljava/util/HashMap :: v998 = new java.util.HashMap::
6780 :: CALL :: call :: [Lorg/biojava/nbio/structure/Element :: v1001 = values()::JM,6783:CL,33181
6783 :: EXPR :: assign :: I :: v1002 = v1001.length::DD,6806
6799 :: CALL :: call :: Ljava/lang/Object :: v1010 = v1004.put(v1008, v1003)::
6805 :: EXPR :: assign :: Ljava/lang/Object :: v1011 = v1012 + #(1)::DD,6808
6806 :: PRED :: IF :: Z :: if (v1012 < v1002) goto 7461::CD,6799:CD,6805:CD,6808
6808 :: EXPR :: assign :: null :: PHI v1012 = #(0), v1011::DD,6805:DD,6806
10432 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.<clinit>()::CD,10448:CD,10449:CD,10490:CD,10500:CD,10501:CD,10522:CD,10532:CD,10533:CD,10670
10448 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::CF,10449
10449 :: NORM :: declaration :: [Ljava/lang/String :: v10 = new java.lang.String[]::JM,10490
10450 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(0)] = #(MOL_ID:)::
10454 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(1)] = #(MOLECULE:)::
10458 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(2)] = #(CHAIN:)::
10462 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(3)] = #(SYNONYM:)::
10466 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(4)] = #(EC:)::
10470 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(5)] = #(FRAGMENT:)::
10474 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(6)] = #(ENGINEERED:)::
10478 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(7)] = #(MUTATION:)::
10482 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(8)] = #(BIOLOGICAL_UNIT:)::
10486 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(9)] = #(OTHER_DETAILS:)::
10490 :: CALL :: call :: Ljava/util/List :: v32 = asList(v10)::JM,10490
10500 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::CF,10501
10501 :: NORM :: declaration :: [Ljava/lang/String :: v35 = new java.lang.String[]::JM,10522
10502 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = #(HETEROGEN:)::
10506 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = #(ENGINEEREED:)::
10510 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = #(FRAGMENT,)::
10514 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = #(MUTANT:)::
10518 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = #(SYNTHETIC:)::
10522 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,10522
10532 :: NORM :: declaration :: Ljava/util/ArrayList :: v44 = new java.util.ArrayList::CF,10533
10533 :: NORM :: declaration :: [Ljava/lang/String :: v46 = new java.lang.String[]::JM,10670
10534 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(0)] = #(ENGINEERED:)::
10538 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(1)] = #(MOL_ID:)::
10542 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(2)] = #(SYNTHETIC:)::
10546 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(3)] = #(FRAGMENT:)::
10550 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(4)] = #(ORGANISM_SCIENTIFIC:)::
10554 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(5)] = #(ORGANISM_COMMON:)::
10558 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(6)] = #(ORGANISM_TAXID:)::
10562 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(7)] = #(STRAIN:)::
10566 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(8)] = #(VARIANT:)::
10570 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(9)] = #(CELL_LINE:)::
10574 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(10)] = #(ATCC:)::
10578 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(11)] = #(ORGAN:)::
10582 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(12)] = #(TISSUE:)::
10586 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(13)] = #(CELL:)::
10590 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(14)] = #(ORGANELLE:)::
10594 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(15)] = #(SECRETION:)::
10598 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(16)] = #(GENE:)::
10602 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(17)] = #(CELLULAR_LOCATION:)::
10606 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(18)] = #(EXPRESSION_SYSTEM:)::
10610 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(19)] = #(EXPRESSION_SYSTEM_TAXID:)::
10614 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(20)] = #(EXPRESSION_SYSTEM_STRAIN:)::
10618 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(21)] = #(EXPRESSION_SYSTEM_VAR...)::
10622 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(22)] = #(EXPRESSION_SYSTEM_CEL...)::
10626 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(23)] = #(EXPRESSION_SYSTEM_ATC...)::
10630 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(24)] = #(EXPRESSION_SYSTEM_ORGAN:)::
10634 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(25)] = #(EXPRESSION_SYSTEM_TISSUE:)::
10638 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(26)] = #(EXPRESSION_SYSTEM_CELL:)::
10642 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(27)] = #(EXPRESSION_SYSTEM_ORG...)::
10646 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(28)] = #(EXPRESSION_SYSTEM_CEL...)::
10650 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(29)] = #(EXPRESSION_SYSTEM_VEC...)::
10654 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(30)] = #(EXPRESSION_SYSTEM_VECTOR:)::
10658 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(31)] = #(EXPRESSION_SYSTEM_PLA...)::
10662 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(32)] = #(EXPRESSION_SYSTEM_GENE:)::
10666 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(33)] = #(OTHER_DETAILS:)::
10670 :: CALL :: call :: Ljava/util/List :: v100 = asList(v46)::JM,10670
10860 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.<clinit>()::CD,10863:JM,33220:CD,10870:CD,10872:CD,10879:CD,10881:CD,10888:CD,10890:CD,10897:CD,10899:CD,10906:CD,10908:CD,10915:CD,10917:CD,10924:CD,10926:CD,10933:CD,10935:CD,10942:CD,10944:CD,10951:CD,10953:CD,10960:CD,10962:CD,10963:CD,10969:CD,10975:CD,10981:CD,10987:CD,10993:CD,10999:CD,11005:CD,11011:CD,11017:CD,11023
10863 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v2 = new org.biojava.nbio.structure.ElementType::DD,10870
10870 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.METALLOID = v2::
10872 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v6 = new org.biojava.nbio.structure.ElementType::DD,10879
10879 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.OTHER_NONMETAL = v6::
10881 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v10 = new org.biojava.nbio.structure.ElementType::DD,10888
10888 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.HALOGEN = v10::
10890 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v14 = new org.biojava.nbio.structure.ElementType::DD,10897
10897 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.NOBLE_GAS = v14::
10899 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v18 = new org.biojava.nbio.structure.ElementType::DD,10906
10906 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALI_METAL = v18::
10908 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v22 = new org.biojava.nbio.structure.ElementType::DD,10915
10915 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL = v22::
10917 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v26 = new org.biojava.nbio.structure.ElementType::DD,10924
10924 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.LANTHANOID = v26::
10926 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v30 = new org.biojava.nbio.structure.ElementType::DD,10933
10933 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ACTINOID = v30::
10935 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v34 = new org.biojava.nbio.structure.ElementType::DD,10942
10942 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.TRANSITION_METAL = v34::
10944 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v38 = new org.biojava.nbio.structure.ElementType::DD,10951
10951 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL = v38::
10953 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v42 = new org.biojava.nbio.structure.ElementType::DD,10960
10960 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.UNKNOWN = v42::
10962 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ElementType :: v47 = new org.biojava.nbio.structure.ElementType[]::
10963 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v48 = org.biojava.nbio.structure.ElementType.METALLOID::DD,10965
10965 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(0)] = v48::
10969 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v49 = org.biojava.nbio.structure.ElementType.OTHER_NONMETAL::DD,10971
10971 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(1)] = v49::
10975 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v50 = org.biojava.nbio.structure.ElementType.HALOGEN::DD,10977
10977 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(2)] = v50::
10981 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v51 = org.biojava.nbio.structure.ElementType.NOBLE_GAS::DD,10983
10983 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(3)] = v51::
10987 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v52 = org.biojava.nbio.structure.ElementType.ALKALI_METAL::DD,10989
10989 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(4)] = v52::
10993 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v53 = org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL::DD,10995
10995 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(5)] = v53::
10999 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v54 = org.biojava.nbio.structure.ElementType.LANTHANOID::DD,11001
11001 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(6)] = v54::
11005 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v55 = org.biojava.nbio.structure.ElementType.ACTINOID::DD,11007
11007 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(7)] = v55::
11011 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v56 = org.biojava.nbio.structure.ElementType.TRANSITION_METAL::DD,11013
11013 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(8)] = v56::
11017 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v57 = org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL::DD,11019
11019 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(9)] = v57::
11023 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v58 = org.biojava.nbio.structure.ElementType.UNKNOWN::DD,11025
11025 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(10)] = v58::
11174 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.<clinit>()::CD,11184:CD,11191:CD,11198
11184 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^(?:CATH:)?([0-9][a-z...), #(2))::
11191 :: CALL :: call :: Ljava/util/regex/Pattern :: v11 = compile(#(^(?:SCOP:)?d([0-9][a-...), #(2))::
11198 :: CALL :: call :: Ljava/util/regex/Pattern :: v14 = compile(#(^(?:ECOD:)?e([0-9][a-...), #(2))::
11216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.StructureSequenceMatcher.<clinit>()::CD,11220
11220 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
11254 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.<clinit>()::CD,11257:CD,11263:CD,11265:CD,11271:CD,11273:CD,11279:CD,11281:CD,11287:CD,11289:CD,11295:CD,11297:CD,11298:CD,11304:CD,11310:CD,11316:CD,11322
11257 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,11263
11263 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY = v2::
11265 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,11271
11271 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES = v6::
11273 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,11279
11279 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED = v10::
11281 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,11287
11287 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED = v14::
11289 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v18 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,11295
11295 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD = v18::
11297 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v23 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::
11298 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v24 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::DD,11300
11300 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(0)] = v24::
11304 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v25 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::DD,11306
11306 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(1)] = v25::
11310 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::DD,11312
11312 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(2)] = v26::
11316 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v27 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::DD,11318
11318 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(3)] = v27::
11322 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v28 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::DD,11324
11324 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(4)] = v28::
11373 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.ObsoleteBehavior.<clinit>()::CD,11376:CD,11382:CD,11384:CD,11390:CD,11392:CD,11398:CD,11400:CD,11401:CD,11407:CD,11413
11376 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,11382
11382 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT = v2::
11384 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,11390
11390 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE = v6::
11392 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,11398
11398 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION = v10::
11400 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v15 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior[]::
11401 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v16 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::DD,11403
11403 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
11407 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v17 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::DD,11409
11409 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
11413 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION::DD,11415
11415 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
11484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AlignmentTools.<clinit>()::CD,11488
11488 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
11530 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.<clinit>()::CD,11546:CD,11552
11546 :: CALL :: call :: Ljava/util/regex/Pattern :: v10 = compile(#(.*\s([A-Z]+)(\s'.+')?...))::
11552 :: CALL :: call :: Ljava/util/TreeMap :: v12 = parseSpaceGroupsXML()::CL,33288
11612 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.<clinit>()::CD,11622:CD,11630:CD,11637:CD,11644:CD,11651:CD,11658:CD,11665
11622 :: NORM :: declaration :: Ljava/util/HashSet :: v5 = new java.util.HashSet::
11630 :: CALL :: call :: Z :: v10 = v7.add(#(disulf))::
11637 :: CALL :: call :: Z :: v14 = v11.add(#(covale))::
11644 :: CALL :: call :: Z :: v18 = v15.add(#(covale_base))::
11651 :: CALL :: call :: Z :: v22 = v19.add(#(covale_phosphate))::
11658 :: CALL :: call :: Z :: v26 = v23.add(#(covale_sugar))::
11665 :: CALL :: call :: Z :: v30 = v27.add(#(modres))::
11699 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucType.<clinit>()::CD,11702:CD,11703:JM,33479:JM,33482:CD,11714:CD,11716:CD,11717:CD,11728:CD,11730:CD,11731:CD,11742:CD,11744:CD,11745:CD,11756:CD,11758:CD,11759:CD,11770:CD,11772:CD,11773:CD,11784:CD,11786:CD,11787:CD,11798:CD,11800:CD,11801:CD,11812:CD,11814:CD,11815:CD,11821:CD,11827:CD,11833:CD,11839:CD,11845:CD,11851:CD,11857
11702 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v2 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11714
11703 :: CALL :: call :: Ljava/lang/Character :: v8 = valueOf(#(72))::
11714 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix4 = v2::
11716 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v10 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11728
11717 :: CALL :: call :: Ljava/lang/Character :: v16 = valueOf(#(69))::
11728 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.extended = v10::
11730 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v18 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11742
11731 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(66))::
11742 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bridge = v18::
11744 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v26 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11756
11745 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(71))::
11756 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix3 = v26::
11758 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v34 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11770
11759 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(#(73))::
11770 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix5 = v34::
11772 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v42 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11784
11773 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(84))::
11784 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.turn = v42::
11786 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v50 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11798
11787 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(83))::
11798 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bend = v50::
11800 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v58 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,11812
11801 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(32))::
11812 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.coil = v58::
11814 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v67 = new org.biojava.nbio.structure.secstruc.SecStrucType[]::
11815 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v68 = org.biojava.nbio.structure.secstruc.SecStrucType.helix4::DD,11817
11817 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(0)] = v68::
11821 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v69 = org.biojava.nbio.structure.secstruc.SecStrucType.extended::DD,11823
11823 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(1)] = v69::
11827 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v70 = org.biojava.nbio.structure.secstruc.SecStrucType.bridge::DD,11829
11829 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(2)] = v70::
11833 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v71 = org.biojava.nbio.structure.secstruc.SecStrucType.helix3::DD,11835
11835 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(3)] = v71::
11839 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v72 = org.biojava.nbio.structure.secstruc.SecStrucType.helix5::DD,11841
11841 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(4)] = v72::
11845 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v73 = org.biojava.nbio.structure.secstruc.SecStrucType.turn::DD,11847
11847 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(5)] = v73::
11851 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v74 = org.biojava.nbio.structure.secstruc.SecStrucType.bend::DD,11853
11853 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(6)] = v74::
11857 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v75 = org.biojava.nbio.structure.secstruc.SecStrucType.coil::DD,11859
11859 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(7)] = v75::
11940 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.<clinit>()::CD,11943:CD,11949:CD,11951:CD,11957:CD,11959:CD,11965:CD,11967:CD,11973:CD,11975:CD,11981:CD,11983:CD,11989:CD,11991:CD,11997:CD,11999:CD,12005:CD,12007:CD,12008:CD,12014:CD,12020:CD,12026:CD,12032:CD,12038:CD,12044:CD,12050
11943 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,11949
11949 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDB = v2::
11951 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v6 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,11957
11957 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.SCOP = v6::
11959 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,11965
11965 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDP = v10::
11967 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,11973
11973 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.CATH = v14::
11975 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v18 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,11981
11981 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.URL = v18::
11983 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v22 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,11989
11989 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.FILE = v22::
11991 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,11997
11997 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.ECOD = v26::
11999 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v30 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,12005
12005 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.BIO = v30::
12007 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v35 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::
12008 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v36 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::DD,12010
12010 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
12014 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v37 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::DD,12016
12016 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = v37::
12020 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::DD,12022
12022 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = v38::
12026 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v39 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::DD,12028
12028 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = v39::
12032 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v40 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::DD,12034
12034 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = v40::
12038 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v41 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::DD,12040
12040 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(5)] = v41::
12044 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v42 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::DD,12046
12046 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(6)] = v42::
12050 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v43 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::DD,12052
12052 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(7)] = v43::
12165 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.<clinit>()::JM,33524
12239 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.<clinit>()::CD,12242:CD,12245:JM,33605:JM,33608:CD,12256:CD,12258:CD,12261:CD,12272:CD,12274:CD,12275:CD,12285:CD,12287:CD,12288:CD,12294:CD,12300:CD,12308:CD,12321
12242 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v2 = new org.biojava.nbio.structure.GroupType::DD,12256
12245 :: CALL :: call :: Ljava/util/Set :: v8 = matchPolymerTypes(v6)::CL,33532
12256 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.AMINOACID = v2::
12258 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v10 = new org.biojava.nbio.structure.GroupType::DD,12272
12261 :: CALL :: call :: Ljava/util/Set :: v16 = matchPolymerTypes(v14)::CL,33532
12272 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.NUCLEOTIDE = v10::
12274 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v18 = new org.biojava.nbio.structure.GroupType::DD,12285
12275 :: CALL :: call :: Ljava/util/Set :: v23 = getHetatmTypes()::CL,33619
12285 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.HETATM = v18::
12287 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/GroupType :: v26 = new org.biojava.nbio.structure.GroupType[]::
12288 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v27 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,12290
12290 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(0)] = v27::
12294 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v28 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,12296
12296 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(1)] = v28::
12300 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v29 = org.biojava.nbio.structure.GroupType.HETATM::DD,12302
12302 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(2)] = v29::
12308 :: NORM :: declaration :: [Ljava/lang/String :: v30 = new java.lang.String[]::JM,12321
12309 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(0)] = #(HOH)::
12313 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(1)] = #(DOD)::
12317 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(2)] = #(WAT)::
12321 :: CALL :: call :: Ljava/util/List :: v35 = asList(v30)::JM,12321
12367 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.<clinit>()::CD,12370:JM,33713:JM,33716:JM,33710:CD,12379:CD,12381:CD,12390:CD,12392:CD,12401:CD,12403:CD,12412:CD,12414:CD,12423:CD,12425:CD,12434:CD,12436:CD,12445:CD,12447:CD,12456:CD,12458:CD,12467:CD,12469:CD,12478:CD,12480:CD,12489:CD,12491:CD,12492:CD,12498:CD,12504:CD,12510:CD,12516:CD,12522:CD,12528:CD,12534:CD,12540:CD,12546:CD,12552:CD,12560
12370 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,12379
12379 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION = v2::
12381 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v8 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,12390
12390 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR = v8::
12392 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v12 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,12401
12401 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR = v12::
12403 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v17 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,12412
12412 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY = v17::
12414 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v22 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,12423
12423 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY = v22::
12425 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v27 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,12434
12434 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION = v27::
12436 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v32 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,12445
12445 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION = v32::
12447 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v37 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,12456
12456 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING = v37::
12458 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v42 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,12467
12467 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION = v42::
12469 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v47 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,12478
12478 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER = v47::
12480 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v52 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,12489
12489 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY = v52::
12491 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v58 = new org.biojava.nbio.structure.ExperimentalTechnique[]::
12492 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v59 = org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION::DD,12494
12494 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
12498 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v60 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR::DD,12500
12500 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
12504 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v61 = org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR::DD,12506
12506 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
12510 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v62 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY::DD,12512
12512 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
12516 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v63 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY::DD,12518
12518 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
12522 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v64 = org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION::DD,12524
12524 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
12528 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v65 = org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION::DD,12530
12530 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
12534 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v66 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING::DD,12536
12536 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
12540 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v67 = org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION::DD,12542
12542 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
12546 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v68 = org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER::DD,12548
12548 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
12552 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v69 = org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY::DD,12554
12554 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
12560 :: CALL :: call :: Ljava/util/HashMap :: v71 = initExpTechStr2Value()::CL,33729
12841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.<clinit>()::CD,12844
12844 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:PDP:)([0-9][a-z0-...), #(2))::
12855 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.<clinit>()::CD,12858
12858 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:BIO:)([0-9][a-z0-...), #(2))::
12881 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.<clinit>()::CD,12891
12891 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^([0-9][a-z0-9]{3})([...), #(2))::
12903 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.<clinit>()::CD,12906
12906 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
12915 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.<clinit>()::CD,12925:CD,12929
12925 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::JM,12929
12929 :: CALL :: call :: Ljava/util/Map :: v8 = synchronizedMap(v5)::JM,12929
12943 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.<clinit>()::CD,12953
12953 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
12967 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.<clinit>()::CD,12970:CD,12976
12970 :: CALL :: call :: Ljava/util/regex/Pattern :: v4 = compile(#(^\s*([a-zA-Z0-9]+|_)(...))::
12976 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^\s*([a-zA-Z0-9]+|_)$))::
13015 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.<clinit>()::CD,13018:JM,33794:JM,33791:CD,13026:CD,13028:CD,13038:CD,13040:CD,13050:CD,13052:CD,13062:CD,13064:CD,13074:CD,13076:CD,13086:CD,13088:CD,13098:CD,13100:CD,13110:CD,13112:CD,13122:CD,13124:CD,13134:CD,13136:CD,13146:CD,13148:CD,13158:CD,13160:CD,13170:CD,13172:CD,13182:CD,13184:CD,13194:CD,13196:CD,13206:CD,13208:CD,13218:CD,13220:CD,13230:CD,13232:CD,13242:CD,13244:CD,13254:CD,13256:CD,13266:CD,13268:CD,13278:CD,13280:CD,13290:CD,13292:CD,13302:CD,13304:CD,13314:CD,13316:CD,13326:CD,13328:CD,13338:CD,13340:CD,13350:CD,13352:CD,13360:CD,13362:CD,13370:CD,13372:CD,13373:CD,13379:CD,13385:CD,13391:CD,13397:CD,13403:CD,13409:CD,13415:CD,13421:CD,13427:CD,13433:CD,13439:CD,13445:CD,13451:CD,13457:CD,13463:CD,13469:CD,13475:CD,13481:CD,13487:CD,13493:CD,13499:CD,13505:CD,13511:CD,13517:CD,13523:CD,13529:CD,13535:CD,13541:CD,13547
13018 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13026
13026 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn = v2::
13028 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v8 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13038
13038 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking = v8::
13040 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v14 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13050
13050 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking = v14::
13052 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v20 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13062
13062 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine = v20::
13064 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v26 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13074
13074 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike = v26::
13076 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13086
13086 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus = v32::
13088 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v38 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13098
13098 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus = v38::
13100 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v44 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13110
13110 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus = v44::
13112 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13122
13122 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus = v50::
13124 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v56 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13134
13134 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking = v56::
13136 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v62 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13146
13146 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking = v62::
13148 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v68 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13158
13158 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus = v68::
13160 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v74 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13170
13170 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus = v74::
13172 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v80 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13182
13182 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus = v80::
13184 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v86 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13194
13194 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus = v86::
13196 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v92 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13206
13206 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide = v92::
13208 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v98 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13218
13218 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking = v98::
13220 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v104 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13230
13230 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking = v104::
13232 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v110 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13242
13242 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide = v110::
13244 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v116 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13254
13254 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking = v116::
13256 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v122 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13266
13266 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking = v122::
13268 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v128 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13278
13278 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide = v128::
13280 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v133 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13290
13290 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking = v133::
13292 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v139 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13302
13302 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking = v139::
13304 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v145 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13314
13314 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking = v145::
13316 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v151 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13326
13326 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking = v151::
13328 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v157 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13338
13338 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking = v157::
13340 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v163 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13350
13350 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking = v163::
13352 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v169 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13360
13360 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer = v169::
13362 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v174 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,13370
13370 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp = v174::
13372 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v180 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::
13373 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v181 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn::DD,13375
13375 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(0)] = v181::
13379 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v182 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking::DD,13381
13381 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(1)] = v182::
13385 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v183 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::DD,13387
13387 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(2)] = v183::
13391 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v184 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine::DD,13393
13393 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(3)] = v184::
13397 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v185 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike::DD,13399
13399 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(4)] = v185::
13403 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v186 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus::DD,13405
13405 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(5)] = v186::
13409 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v187 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus::DD,13411
13411 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(6)] = v187::
13415 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v188 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus::DD,13417
13417 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(7)] = v188::
13421 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v189 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus::DD,13423
13423 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(8)] = v189::
13427 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v190 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking::DD,13429
13429 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(9)] = v190::
13433 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v191 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking::DD,13435
13435 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(10)] = v191::
13439 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v192 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus::DD,13441
13441 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(11)] = v192::
13445 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v193 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus::DD,13447
13447 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(12)] = v193::
13451 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v194 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus::DD,13453
13453 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(13)] = v194::
13457 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v195 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus::DD,13459
13459 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(14)] = v195::
13463 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v196 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide::DD,13465
13465 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(15)] = v196::
13469 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v197 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking::DD,13471
13471 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(16)] = v197::
13475 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v198 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking::DD,13477
13477 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(17)] = v198::
13481 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v199 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide::DD,13483
13483 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(18)] = v199::
13487 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v200 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking::DD,13489
13489 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(19)] = v200::
13493 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v201 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking::DD,13495
13495 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(20)] = v201::
13499 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v202 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide::DD,13501
13501 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(21)] = v202::
13505 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v203 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking::DD,13507
13507 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(22)] = v203::
13511 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v204 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking::DD,13513
13513 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(23)] = v204::
13517 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v205 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking::DD,13519
13519 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(24)] = v205::
13523 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v206 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking::DD,13525
13525 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(25)] = v206::
13529 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v207 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking::DD,13531
13531 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(26)] = v207::
13535 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v208 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking::DD,13537
13537 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(27)] = v208::
13541 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v209 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer::DD,13543
13543 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(28)] = v209::
13547 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v210 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp::DD,13549
13549 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(29)] = v210::
13808 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.<clinit>()::CD,13811:JM,33817:CD,13818:CD,13820:CD,13827:CD,13829:CD,13836:CD,13838:CD,13845:CD,13847:CD,13854:CD,13856:CD,13863:CD,13865:CD,13872:CD,13874:CD,13881:CD,13883:CD,13890:CD,13892:CD,13899:CD,13901:CD,13908:CD,13910:CD,13911:CD,13917:CD,13923:CD,13929:CD,13935:CD,13941:CD,13947:CD,13953:CD,13959:CD,13965:CD,13971:CD,13979:CD,13985:CD,13990:CD,13996:CD,14002:CD,14007:CD,14013:CD,14019:CD,14024:CD,14030:CD,14036:CD,14043:CD,14050:CD,14062:CD,14065
13811 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,13818
13818 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide = v2::
13820 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v7 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,13827
13827 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide = v7::
13829 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v12 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,13836
13836 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna = v12::
13838 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,13845
13845 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna = v17::
13847 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v22 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,13854
13854 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna = v22::
13856 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v27 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,13863
13863 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide = v27::
13865 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,13872
13872 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide = v32::
13874 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v37 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,13881
13881 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer = v37::
13883 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v42 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,13890
13890 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide = v42::
13892 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v47 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,13899
13899 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid = v47::
13901 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v52 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,13908
13908 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown = v52::
13910 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v58 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::
13911 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v59 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::DD,13913
13913 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
13917 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v60 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::DD,13919
13919 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
13923 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v61 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::DD,13925
13925 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
13929 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v62 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::DD,13931
13931 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
13935 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v63 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna::DD,13937
13937 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
13941 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v64 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide::DD,13943
13943 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
13947 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v65 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide::DD,13949
13949 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
13953 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v66 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer::DD,13955
13955 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
13959 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v67 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide::DD,13961
13961 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
13965 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v68 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid::DD,13967
13967 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
13971 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v69 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown::DD,13973
13973 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
13979 :: NORM :: declaration :: Ljava/util/HashSet :: v70 = new java.util.HashSet::JM,13990
13985 :: CALL :: call :: Z :: v74 = v70.add(v72)::
13990 :: CALL :: call :: Ljava/util/Set :: v76 = unmodifiableSet(v70)::JM,13990
13996 :: NORM :: declaration :: Ljava/util/HashSet :: v77 = new java.util.HashSet::JM,14007
14002 :: CALL :: call :: Z :: v81 = v77.add(v79)::
14007 :: CALL :: call :: Ljava/util/Set :: v83 = unmodifiableSet(v77)::JM,14007
14013 :: NORM :: declaration :: Ljava/util/HashSet :: v84 = new java.util.HashSet::JM,14024
14019 :: CALL :: call :: Z :: v88 = v84.add(v86)::
14024 :: CALL :: call :: Ljava/util/Set :: v90 = unmodifiableSet(v84)::JM,14024
14030 :: NORM :: declaration :: Ljava/util/HashSet :: v91 = new java.util.HashSet::
14036 :: CALL :: call :: Z :: v95 = v91.add(v93)::
14043 :: CALL :: call :: Z :: v98 = v91.add(v96)::
14050 :: CALL :: call :: Z :: v101 = v91.add(v99)::
14062 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v106 = values()::JM,14065:CL,33826
14065 :: CALL :: call :: Ljava/util/List :: v108 = asList(v106)::JM,14065
14200 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.<clinit>()::CD,14210:CD,14211:CD,14288:CD,14361:CD,14450:CD,14535:CD,14612:CD,14681:CD,14762:CD,14827:CD,14900:CD,14969:CD,15050:CD,15127:CD,15204:CD,15285:CD,15370:CD,15455:CD,15536:CD,15613:CD,15702:CD,15791:CD,15882:CD,15883:CD,15891:CD,15899:CD,15907:CD,15915:CD,15923:CD,15931:CD,15939:CD,15947:CD,15955:CD,15963:CD,15971:CD,15979:CD,15987:CD,15995:CD,16003:CD,16011:CD,16019:CD,16027:CD,16035:CD,16043:CD,16051:CD,16053:CD,16055
14210 :: NORM :: declaration :: [[I :: v6 = new [][]::CF,14211
14211 :: NORM :: declaration :: [I :: v8 = new []::DD,14284
14212 :: EXPR :: modify :: I :: v8[#(0)] = #(6)::
14216 :: EXPR :: modify :: I :: v8[#(2)] = #(-2)::
14220 :: EXPR :: modify :: I :: v8[#(3)] = #(-3)::
14224 :: EXPR :: modify :: I :: v8[#(4)] = #(-2)::
14228 :: EXPR :: modify :: I :: v8[#(6)] = #(-1)::
14232 :: EXPR :: modify :: I :: v8[#(8)] = #(-2)::
14236 :: EXPR :: modify :: I :: v8[#(9)] = #(-2)::
14240 :: EXPR :: modify :: I :: v8[#(10)] = #(-2)::
14244 :: EXPR :: modify :: I :: v8[#(11)] = #(-2)::
14248 :: EXPR :: modify :: I :: v8[#(12)] = #(-2)::
14252 :: EXPR :: modify :: I :: v8[#(13)] = #(-3)::
14256 :: EXPR :: modify :: I :: v8[#(14)] = #(-4)::
14260 :: EXPR :: modify :: I :: v8[#(15)] = #(-4)::
14264 :: EXPR :: modify :: I :: v8[#(16)] = #(-3)::
14268 :: EXPR :: modify :: I :: v8[#(17)] = #(-3)::
14272 :: EXPR :: modify :: I :: v8[#(18)] = #(-3)::
14276 :: EXPR :: modify :: I :: v8[#(19)] = #(-2)::
14280 :: EXPR :: modify :: I :: v8[#(20)] = #(-4)::
14284 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(0)] = v8::
14288 :: NORM :: declaration :: [I :: v31 = new []::DD,14357
14289 :: EXPR :: modify :: I :: v31[#(1)] = #(4)::
14293 :: EXPR :: modify :: I :: v31[#(2)] = #(-1)::
14297 :: EXPR :: modify :: I :: v31[#(5)] = #(1)::
14301 :: EXPR :: modify :: I :: v31[#(6)] = #(-2)::
14305 :: EXPR :: modify :: I :: v31[#(7)] = #(-2)::
14309 :: EXPR :: modify :: I :: v31[#(8)] = #(-1)::
14313 :: EXPR :: modify :: I :: v31[#(9)] = #(-1)::
14317 :: EXPR :: modify :: I :: v31[#(10)] = #(-1)::
14321 :: EXPR :: modify :: I :: v31[#(11)] = #(-2)::
14325 :: EXPR :: modify :: I :: v31[#(12)] = #(-1)::
14329 :: EXPR :: modify :: I :: v31[#(14)] = #(-1)::
14333 :: EXPR :: modify :: I :: v31[#(15)] = #(-1)::
14337 :: EXPR :: modify :: I :: v31[#(16)] = #(-1)::
14341 :: EXPR :: modify :: I :: v31[#(17)] = #(-2)::
14345 :: EXPR :: modify :: I :: v31[#(18)] = #(-2)::
14349 :: EXPR :: modify :: I :: v31[#(19)] = #(-3)::
14353 :: EXPR :: modify :: I :: v31[#(20)] = #(-4)::
14357 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(1)] = v31::
14361 :: NORM :: declaration :: [I :: v34 = new []::DD,14446
14362 :: EXPR :: modify :: I :: v34[#(0)] = #(-2)::
14366 :: EXPR :: modify :: I :: v34[#(1)] = #(-1)::
14370 :: EXPR :: modify :: I :: v34[#(2)] = #(7)::
14374 :: EXPR :: modify :: I :: v34[#(3)] = #(-3)::
14378 :: EXPR :: modify :: I :: v34[#(4)] = #(-1)::
14382 :: EXPR :: modify :: I :: v34[#(5)] = #(-1)::
14386 :: EXPR :: modify :: I :: v34[#(6)] = #(-1)::
14390 :: EXPR :: modify :: I :: v34[#(7)] = #(-2)::
14394 :: EXPR :: modify :: I :: v34[#(8)] = #(-1)::
14398 :: EXPR :: modify :: I :: v34[#(9)] = #(-1)::
14402 :: EXPR :: modify :: I :: v34[#(10)] = #(-1)::
14406 :: EXPR :: modify :: I :: v34[#(11)] = #(-2)::
14410 :: EXPR :: modify :: I :: v34[#(12)] = #(-2)::
14414 :: EXPR :: modify :: I :: v34[#(13)] = #(-2)::
14418 :: EXPR :: modify :: I :: v34[#(14)] = #(-3)::
14422 :: EXPR :: modify :: I :: v34[#(15)] = #(-3)::
14426 :: EXPR :: modify :: I :: v34[#(16)] = #(-2)::
14430 :: EXPR :: modify :: I :: v34[#(17)] = #(-4)::
14434 :: EXPR :: modify :: I :: v34[#(18)] = #(-3)::
14438 :: EXPR :: modify :: I :: v34[#(19)] = #(-4)::
14442 :: EXPR :: modify :: I :: v34[#(20)] = #(-4)::
14446 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(2)] = v34::
14450 :: NORM :: declaration :: [I :: v35 = new []::DD,14531
14451 :: EXPR :: modify :: I :: v35[#(0)] = #(-3)::
14455 :: EXPR :: modify :: I :: v35[#(2)] = #(-3)::
14459 :: EXPR :: modify :: I :: v35[#(3)] = #(9)::
14463 :: EXPR :: modify :: I :: v35[#(4)] = #(-1)::
14467 :: EXPR :: modify :: I :: v35[#(5)] = #(-1)::
14471 :: EXPR :: modify :: I :: v35[#(6)] = #(-3)::
14475 :: EXPR :: modify :: I :: v35[#(7)] = #(-3)::
14479 :: EXPR :: modify :: I :: v35[#(8)] = #(-4)::
14483 :: EXPR :: modify :: I :: v35[#(9)] = #(-3)::
14487 :: EXPR :: modify :: I :: v35[#(10)] = #(-3)::
14491 :: EXPR :: modify :: I :: v35[#(11)] = #(-3)::
14495 :: EXPR :: modify :: I :: v35[#(12)] = #(-3)::
14499 :: EXPR :: modify :: I :: v35[#(13)] = #(-1)::
14503 :: EXPR :: modify :: I :: v35[#(14)] = #(-1)::
14507 :: EXPR :: modify :: I :: v35[#(15)] = #(-1)::
14511 :: EXPR :: modify :: I :: v35[#(16)] = #(-1)::
14515 :: EXPR :: modify :: I :: v35[#(17)] = #(-2)::
14519 :: EXPR :: modify :: I :: v35[#(18)] = #(-2)::
14523 :: EXPR :: modify :: I :: v35[#(19)] = #(-2)::
14527 :: EXPR :: modify :: I :: v35[#(20)] = #(-4)::
14531 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(3)] = v35::
14535 :: NORM :: declaration :: [I :: v36 = new []::DD,14608
14536 :: EXPR :: modify :: I :: v36[#(0)] = #(-2)::
14540 :: EXPR :: modify :: I :: v36[#(2)] = #(-1)::
14544 :: EXPR :: modify :: I :: v36[#(3)] = #(-1)::
14548 :: EXPR :: modify :: I :: v36[#(4)] = #(5)::
14552 :: EXPR :: modify :: I :: v36[#(5)] = #(1)::
14556 :: EXPR :: modify :: I :: v36[#(6)] = #(-1)::
14560 :: EXPR :: modify :: I :: v36[#(8)] = #(-1)::
14564 :: EXPR :: modify :: I :: v36[#(9)] = #(-1)::
14568 :: EXPR :: modify :: I :: v36[#(10)] = #(-1)::
14572 :: EXPR :: modify :: I :: v36[#(11)] = #(-2)::
14576 :: EXPR :: modify :: I :: v36[#(12)] = #(-1)::
14580 :: EXPR :: modify :: I :: v36[#(14)] = #(-1)::
14584 :: EXPR :: modify :: I :: v36[#(15)] = #(-1)::
14588 :: EXPR :: modify :: I :: v36[#(16)] = #(-1)::
14592 :: EXPR :: modify :: I :: v36[#(17)] = #(-2)::
14596 :: EXPR :: modify :: I :: v36[#(18)] = #(-2)::
14600 :: EXPR :: modify :: I :: v36[#(19)] = #(-2)::
14604 :: EXPR :: modify :: I :: v36[#(20)] = #(-4)::
14608 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(4)] = v36::
14612 :: NORM :: declaration :: [I :: v37 = new []::DD,14677
14613 :: EXPR :: modify :: I :: v37[#(1)] = #(1)::
14617 :: EXPR :: modify :: I :: v37[#(2)] = #(-1)::
14621 :: EXPR :: modify :: I :: v37[#(3)] = #(-1)::
14625 :: EXPR :: modify :: I :: v37[#(4)] = #(1)::
14629 :: EXPR :: modify :: I :: v37[#(5)] = #(4)::
14633 :: EXPR :: modify :: I :: v37[#(7)] = #(1)::
14637 :: EXPR :: modify :: I :: v37[#(11)] = #(-1)::
14641 :: EXPR :: modify :: I :: v37[#(12)] = #(-1)::
14645 :: EXPR :: modify :: I :: v37[#(13)] = #(-2)::
14649 :: EXPR :: modify :: I :: v37[#(14)] = #(-2)::
14653 :: EXPR :: modify :: I :: v37[#(15)] = #(-2)::
14657 :: EXPR :: modify :: I :: v37[#(16)] = #(-1)::
14661 :: EXPR :: modify :: I :: v37[#(17)] = #(-2)::
14665 :: EXPR :: modify :: I :: v37[#(18)] = #(-2)::
14669 :: EXPR :: modify :: I :: v37[#(19)] = #(-3)::
14673 :: EXPR :: modify :: I :: v37[#(20)] = #(-4)::
14677 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(5)] = v37::
14681 :: NORM :: declaration :: [I :: v38 = new []::DD,14758
14682 :: EXPR :: modify :: I :: v38[#(0)] = #(-1)::
14686 :: EXPR :: modify :: I :: v38[#(1)] = #(-2)::
14690 :: EXPR :: modify :: I :: v38[#(2)] = #(-1)::
14694 :: EXPR :: modify :: I :: v38[#(3)] = #(-3)::
14698 :: EXPR :: modify :: I :: v38[#(4)] = #(-1)::
14702 :: EXPR :: modify :: I :: v38[#(6)] = #(6)::
14706 :: EXPR :: modify :: I :: v38[#(7)] = #(1)::
14710 :: EXPR :: modify :: I :: v38[#(8)] = #(2)::
14714 :: EXPR :: modify :: I :: v38[#(10)] = #(-1)::
14718 :: EXPR :: modify :: I :: v38[#(11)] = #(-1)::
14722 :: EXPR :: modify :: I :: v38[#(12)] = #(-2)::
14726 :: EXPR :: modify :: I :: v38[#(13)] = #(-3)::
14730 :: EXPR :: modify :: I :: v38[#(14)] = #(-3)::
14734 :: EXPR :: modify :: I :: v38[#(15)] = #(-4)::
14738 :: EXPR :: modify :: I :: v38[#(16)] = #(-3)::
14742 :: EXPR :: modify :: I :: v38[#(17)] = #(-3)::
14746 :: EXPR :: modify :: I :: v38[#(18)] = #(-3)::
14750 :: EXPR :: modify :: I :: v38[#(19)] = #(-4)::
14754 :: EXPR :: modify :: I :: v38[#(20)] = #(-4)::
14758 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(6)] = v38::
14762 :: NORM :: declaration :: [I :: v39 = new []::DD,14823
14763 :: EXPR :: modify :: I :: v39[#(1)] = #(-2)::
14767 :: EXPR :: modify :: I :: v39[#(2)] = #(-2)::
14771 :: EXPR :: modify :: I :: v39[#(3)] = #(-3)::
14775 :: EXPR :: modify :: I :: v39[#(5)] = #(1)::
14779 :: EXPR :: modify :: I :: v39[#(6)] = #(1)::
14783 :: EXPR :: modify :: I :: v39[#(7)] = #(6)::
14787 :: EXPR :: modify :: I :: v39[#(11)] = #(1)::
14791 :: EXPR :: modify :: I :: v39[#(13)] = #(-3)::
14795 :: EXPR :: modify :: I :: v39[#(14)] = #(-3)::
14799 :: EXPR :: modify :: I :: v39[#(15)] = #(-3)::
14803 :: EXPR :: modify :: I :: v39[#(16)] = #(-2)::
14807 :: EXPR :: modify :: I :: v39[#(17)] = #(-3)::
14811 :: EXPR :: modify :: I :: v39[#(18)] = #(-2)::
14815 :: EXPR :: modify :: I :: v39[#(19)] = #(-4)::
14819 :: EXPR :: modify :: I :: v39[#(20)] = #(-4)::
14823 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(7)] = v39::
14827 :: NORM :: declaration :: [I :: v40 = new []::DD,14896
14828 :: EXPR :: modify :: I :: v40[#(0)] = #(-2)::
14832 :: EXPR :: modify :: I :: v40[#(1)] = #(-1)::
14836 :: EXPR :: modify :: I :: v40[#(2)] = #(-1)::
14840 :: EXPR :: modify :: I :: v40[#(3)] = #(-4)::
14844 :: EXPR :: modify :: I :: v40[#(4)] = #(-1)::
14848 :: EXPR :: modify :: I :: v40[#(6)] = #(2)::
14852 :: EXPR :: modify :: I :: v40[#(8)] = #(5)::
14856 :: EXPR :: modify :: I :: v40[#(9)] = #(2)::
14860 :: EXPR :: modify :: I :: v40[#(10)] = #(1)::
14864 :: EXPR :: modify :: I :: v40[#(13)] = #(-2)::
14868 :: EXPR :: modify :: I :: v40[#(14)] = #(-3)::
14872 :: EXPR :: modify :: I :: v40[#(15)] = #(-3)::
14876 :: EXPR :: modify :: I :: v40[#(16)] = #(-2)::
14880 :: EXPR :: modify :: I :: v40[#(17)] = #(-3)::
14884 :: EXPR :: modify :: I :: v40[#(18)] = #(-2)::
14888 :: EXPR :: modify :: I :: v40[#(19)] = #(-3)::
14892 :: EXPR :: modify :: I :: v40[#(20)] = #(-4)::
14896 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(8)] = v40::
14900 :: NORM :: declaration :: [I :: v41 = new []::DD,14965
14901 :: EXPR :: modify :: I :: v41[#(0)] = #(-2)::
14905 :: EXPR :: modify :: I :: v41[#(1)] = #(-1)::
14909 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
14913 :: EXPR :: modify :: I :: v41[#(3)] = #(-3)::
14917 :: EXPR :: modify :: I :: v41[#(4)] = #(-1)::
14921 :: EXPR :: modify :: I :: v41[#(8)] = #(2)::
14925 :: EXPR :: modify :: I :: v41[#(9)] = #(5)::
14929 :: EXPR :: modify :: I :: v41[#(10)] = #(1)::
14933 :: EXPR :: modify :: I :: v41[#(12)] = #(1)::
14937 :: EXPR :: modify :: I :: v41[#(13)] = #(-2)::
14941 :: EXPR :: modify :: I :: v41[#(14)] = #(-3)::
14945 :: EXPR :: modify :: I :: v41[#(15)] = #(-2)::
14949 :: EXPR :: modify :: I :: v41[#(17)] = #(-3)::
14953 :: EXPR :: modify :: I :: v41[#(18)] = #(-1)::
14957 :: EXPR :: modify :: I :: v41[#(19)] = #(-2)::
14961 :: EXPR :: modify :: I :: v41[#(20)] = #(-4)::
14965 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(9)] = v41::
14969 :: NORM :: declaration :: [I :: v42 = new []::DD,15046
14970 :: EXPR :: modify :: I :: v42[#(0)] = #(-2)::
14974 :: EXPR :: modify :: I :: v42[#(1)] = #(-1)::
14978 :: EXPR :: modify :: I :: v42[#(2)] = #(-1)::
14982 :: EXPR :: modify :: I :: v42[#(3)] = #(-3)::
14986 :: EXPR :: modify :: I :: v42[#(4)] = #(-1)::
14990 :: EXPR :: modify :: I :: v42[#(6)] = #(-1)::
14994 :: EXPR :: modify :: I :: v42[#(8)] = #(1)::
14998 :: EXPR :: modify :: I :: v42[#(9)] = #(1)::
15002 :: EXPR :: modify :: I :: v42[#(10)] = #(5)::
15006 :: EXPR :: modify :: I :: v42[#(11)] = #(-1)::
15010 :: EXPR :: modify :: I :: v42[#(12)] = #(2)::
15014 :: EXPR :: modify :: I :: v42[#(13)] = #(-2)::
15018 :: EXPR :: modify :: I :: v42[#(14)] = #(-3)::
15022 :: EXPR :: modify :: I :: v42[#(15)] = #(-2)::
15026 :: EXPR :: modify :: I :: v42[#(16)] = #(-1)::
15030 :: EXPR :: modify :: I :: v42[#(17)] = #(-3)::
15034 :: EXPR :: modify :: I :: v42[#(18)] = #(-2)::
15038 :: EXPR :: modify :: I :: v42[#(19)] = #(-3)::
15042 :: EXPR :: modify :: I :: v42[#(20)] = #(-4)::
15046 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(10)] = v42::
15050 :: NORM :: declaration :: [I :: v43 = new []::DD,15123
15051 :: EXPR :: modify :: I :: v43[#(0)] = #(-2)::
15055 :: EXPR :: modify :: I :: v43[#(1)] = #(-2)::
15059 :: EXPR :: modify :: I :: v43[#(2)] = #(-2)::
15063 :: EXPR :: modify :: I :: v43[#(3)] = #(-3)::
15067 :: EXPR :: modify :: I :: v43[#(4)] = #(-2)::
15071 :: EXPR :: modify :: I :: v43[#(5)] = #(-1)::
15075 :: EXPR :: modify :: I :: v43[#(6)] = #(-1)::
15079 :: EXPR :: modify :: I :: v43[#(7)] = #(1)::
15083 :: EXPR :: modify :: I :: v43[#(10)] = #(-1)::
15087 :: EXPR :: modify :: I :: v43[#(11)] = #(8)::
15091 :: EXPR :: modify :: I :: v43[#(13)] = #(-3)::
15095 :: EXPR :: modify :: I :: v43[#(14)] = #(-3)::
15099 :: EXPR :: modify :: I :: v43[#(15)] = #(-3)::
15103 :: EXPR :: modify :: I :: v43[#(16)] = #(-2)::
15107 :: EXPR :: modify :: I :: v43[#(17)] = #(-1)::
15111 :: EXPR :: modify :: I :: v43[#(18)] = #(2)::
15115 :: EXPR :: modify :: I :: v43[#(19)] = #(-2)::
15119 :: EXPR :: modify :: I :: v43[#(20)] = #(-4)::
15123 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(11)] = v43::
15127 :: NORM :: declaration :: [I :: v44 = new []::DD,15200
15128 :: EXPR :: modify :: I :: v44[#(0)] = #(-2)::
15132 :: EXPR :: modify :: I :: v44[#(1)] = #(-1)::
15136 :: EXPR :: modify :: I :: v44[#(2)] = #(-2)::
15140 :: EXPR :: modify :: I :: v44[#(3)] = #(-3)::
15144 :: EXPR :: modify :: I :: v44[#(4)] = #(-1)::
15148 :: EXPR :: modify :: I :: v44[#(5)] = #(-1)::
15152 :: EXPR :: modify :: I :: v44[#(6)] = #(-2)::
15156 :: EXPR :: modify :: I :: v44[#(9)] = #(1)::
15160 :: EXPR :: modify :: I :: v44[#(10)] = #(2)::
15164 :: EXPR :: modify :: I :: v44[#(12)] = #(5)::
15168 :: EXPR :: modify :: I :: v44[#(13)] = #(-3)::
15172 :: EXPR :: modify :: I :: v44[#(14)] = #(-3)::
15176 :: EXPR :: modify :: I :: v44[#(15)] = #(-2)::
15180 :: EXPR :: modify :: I :: v44[#(16)] = #(-1)::
15184 :: EXPR :: modify :: I :: v44[#(17)] = #(-3)::
15188 :: EXPR :: modify :: I :: v44[#(18)] = #(-2)::
15192 :: EXPR :: modify :: I :: v44[#(19)] = #(-3)::
15196 :: EXPR :: modify :: I :: v44[#(20)] = #(-4)::
15200 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(12)] = v44::
15204 :: NORM :: declaration :: [I :: v45 = new []::DD,15281
15205 :: EXPR :: modify :: I :: v45[#(0)] = #(-3)::
15209 :: EXPR :: modify :: I :: v45[#(2)] = #(-2)::
15213 :: EXPR :: modify :: I :: v45[#(3)] = #(-1)::
15217 :: EXPR :: modify :: I :: v45[#(5)] = #(-2)::
15221 :: EXPR :: modify :: I :: v45[#(6)] = #(-3)::
15225 :: EXPR :: modify :: I :: v45[#(7)] = #(-3)::
15229 :: EXPR :: modify :: I :: v45[#(8)] = #(-2)::
15233 :: EXPR :: modify :: I :: v45[#(9)] = #(-2)::
15237 :: EXPR :: modify :: I :: v45[#(10)] = #(-2)::
15241 :: EXPR :: modify :: I :: v45[#(11)] = #(-3)::
15245 :: EXPR :: modify :: I :: v45[#(12)] = #(-3)::
15249 :: EXPR :: modify :: I :: v45[#(13)] = #(4)::
15253 :: EXPR :: modify :: I :: v45[#(14)] = #(3)::
15257 :: EXPR :: modify :: I :: v45[#(15)] = #(1)::
15261 :: EXPR :: modify :: I :: v45[#(16)] = #(1)::
15265 :: EXPR :: modify :: I :: v45[#(17)] = #(-1)::
15269 :: EXPR :: modify :: I :: v45[#(18)] = #(-1)::
15273 :: EXPR :: modify :: I :: v45[#(19)] = #(-3)::
15277 :: EXPR :: modify :: I :: v45[#(20)] = #(-4)::
15281 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(13)] = v45::
15285 :: NORM :: declaration :: [I :: v46 = new []::DD,15366
15286 :: EXPR :: modify :: I :: v46[#(0)] = #(-4)::
15290 :: EXPR :: modify :: I :: v46[#(1)] = #(-1)::
15294 :: EXPR :: modify :: I :: v46[#(2)] = #(-3)::
15298 :: EXPR :: modify :: I :: v46[#(3)] = #(-1)::
15302 :: EXPR :: modify :: I :: v46[#(4)] = #(-1)::
15306 :: EXPR :: modify :: I :: v46[#(5)] = #(-2)::
15310 :: EXPR :: modify :: I :: v46[#(6)] = #(-3)::
15314 :: EXPR :: modify :: I :: v46[#(7)] = #(-3)::
15318 :: EXPR :: modify :: I :: v46[#(8)] = #(-3)::
15322 :: EXPR :: modify :: I :: v46[#(9)] = #(-3)::
15326 :: EXPR :: modify :: I :: v46[#(10)] = #(-3)::
15330 :: EXPR :: modify :: I :: v46[#(11)] = #(-3)::
15334 :: EXPR :: modify :: I :: v46[#(12)] = #(-3)::
15338 :: EXPR :: modify :: I :: v46[#(13)] = #(3)::
15342 :: EXPR :: modify :: I :: v46[#(14)] = #(4)::
15346 :: EXPR :: modify :: I :: v46[#(15)] = #(2)::
15350 :: EXPR :: modify :: I :: v46[#(16)] = #(1)::
15354 :: EXPR :: modify :: I :: v46[#(18)] = #(-1)::
15358 :: EXPR :: modify :: I :: v46[#(19)] = #(-3)::
15362 :: EXPR :: modify :: I :: v46[#(20)] = #(-4)::
15366 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(14)] = v46::
15370 :: NORM :: declaration :: [I :: v47 = new []::DD,15451
15371 :: EXPR :: modify :: I :: v47[#(0)] = #(-4)::
15375 :: EXPR :: modify :: I :: v47[#(1)] = #(-1)::
15379 :: EXPR :: modify :: I :: v47[#(2)] = #(-3)::
15383 :: EXPR :: modify :: I :: v47[#(3)] = #(-1)::
15387 :: EXPR :: modify :: I :: v47[#(4)] = #(-1)::
15391 :: EXPR :: modify :: I :: v47[#(5)] = #(-2)::
15395 :: EXPR :: modify :: I :: v47[#(6)] = #(-4)::
15399 :: EXPR :: modify :: I :: v47[#(7)] = #(-3)::
15403 :: EXPR :: modify :: I :: v47[#(8)] = #(-3)::
15407 :: EXPR :: modify :: I :: v47[#(9)] = #(-2)::
15411 :: EXPR :: modify :: I :: v47[#(10)] = #(-2)::
15415 :: EXPR :: modify :: I :: v47[#(11)] = #(-3)::
15419 :: EXPR :: modify :: I :: v47[#(12)] = #(-2)::
15423 :: EXPR :: modify :: I :: v47[#(13)] = #(1)::
15427 :: EXPR :: modify :: I :: v47[#(14)] = #(2)::
15431 :: EXPR :: modify :: I :: v47[#(15)] = #(4)::
15435 :: EXPR :: modify :: I :: v47[#(16)] = #(2)::
15439 :: EXPR :: modify :: I :: v47[#(18)] = #(-1)::
15443 :: EXPR :: modify :: I :: v47[#(19)] = #(-2)::
15447 :: EXPR :: modify :: I :: v47[#(20)] = #(-4)::
15451 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(15)] = v47::
15455 :: NORM :: declaration :: [I :: v48 = new []::DD,15532
15456 :: EXPR :: modify :: I :: v48[#(0)] = #(-3)::
15460 :: EXPR :: modify :: I :: v48[#(1)] = #(-1)::
15464 :: EXPR :: modify :: I :: v48[#(2)] = #(-2)::
15468 :: EXPR :: modify :: I :: v48[#(3)] = #(-1)::
15472 :: EXPR :: modify :: I :: v48[#(4)] = #(-1)::
15476 :: EXPR :: modify :: I :: v48[#(5)] = #(-1)::
15480 :: EXPR :: modify :: I :: v48[#(6)] = #(-3)::
15484 :: EXPR :: modify :: I :: v48[#(7)] = #(-2)::
15488 :: EXPR :: modify :: I :: v48[#(8)] = #(-2)::
15492 :: EXPR :: modify :: I :: v48[#(10)] = #(-1)::
15496 :: EXPR :: modify :: I :: v48[#(11)] = #(-2)::
15500 :: EXPR :: modify :: I :: v48[#(12)] = #(-1)::
15504 :: EXPR :: modify :: I :: v48[#(13)] = #(1)::
15508 :: EXPR :: modify :: I :: v48[#(14)] = #(1)::
15512 :: EXPR :: modify :: I :: v48[#(15)] = #(2)::
15516 :: EXPR :: modify :: I :: v48[#(16)] = #(5)::
15520 :: EXPR :: modify :: I :: v48[#(18)] = #(-1)::
15524 :: EXPR :: modify :: I :: v48[#(19)] = #(-1)::
15528 :: EXPR :: modify :: I :: v48[#(20)] = #(-4)::
15532 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(16)] = v48::
15536 :: NORM :: declaration :: [I :: v49 = new []::DD,15609
15537 :: EXPR :: modify :: I :: v49[#(0)] = #(-3)::
15541 :: EXPR :: modify :: I :: v49[#(1)] = #(-2)::
15545 :: EXPR :: modify :: I :: v49[#(2)] = #(-4)::
15549 :: EXPR :: modify :: I :: v49[#(3)] = #(-2)::
15553 :: EXPR :: modify :: I :: v49[#(4)] = #(-2)::
15557 :: EXPR :: modify :: I :: v49[#(5)] = #(-2)::
15561 :: EXPR :: modify :: I :: v49[#(6)] = #(-3)::
15565 :: EXPR :: modify :: I :: v49[#(7)] = #(-3)::
15569 :: EXPR :: modify :: I :: v49[#(8)] = #(-3)::
15573 :: EXPR :: modify :: I :: v49[#(9)] = #(-3)::
15577 :: EXPR :: modify :: I :: v49[#(10)] = #(-3)::
15581 :: EXPR :: modify :: I :: v49[#(11)] = #(-1)::
15585 :: EXPR :: modify :: I :: v49[#(12)] = #(-3)::
15589 :: EXPR :: modify :: I :: v49[#(13)] = #(-1)::
15593 :: EXPR :: modify :: I :: v49[#(17)] = #(6)::
15597 :: EXPR :: modify :: I :: v49[#(18)] = #(3)::
15601 :: EXPR :: modify :: I :: v49[#(19)] = #(1)::
15605 :: EXPR :: modify :: I :: v49[#(20)] = #(-4)::
15609 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(17)] = v49::
15613 :: NORM :: declaration :: [I :: v50 = new []::DD,15698
15614 :: EXPR :: modify :: I :: v50[#(0)] = #(-3)::
15618 :: EXPR :: modify :: I :: v50[#(1)] = #(-2)::
15622 :: EXPR :: modify :: I :: v50[#(2)] = #(-3)::
15626 :: EXPR :: modify :: I :: v50[#(3)] = #(-2)::
15630 :: EXPR :: modify :: I :: v50[#(4)] = #(-2)::
15634 :: EXPR :: modify :: I :: v50[#(5)] = #(-2)::
15638 :: EXPR :: modify :: I :: v50[#(6)] = #(-3)::
15642 :: EXPR :: modify :: I :: v50[#(7)] = #(-2)::
15646 :: EXPR :: modify :: I :: v50[#(8)] = #(-2)::
15650 :: EXPR :: modify :: I :: v50[#(9)] = #(-1)::
15654 :: EXPR :: modify :: I :: v50[#(10)] = #(-2)::
15658 :: EXPR :: modify :: I :: v50[#(11)] = #(2)::
15662 :: EXPR :: modify :: I :: v50[#(12)] = #(-2)::
15666 :: EXPR :: modify :: I :: v50[#(13)] = #(-1)::
15670 :: EXPR :: modify :: I :: v50[#(14)] = #(-1)::
15674 :: EXPR :: modify :: I :: v50[#(15)] = #(-1)::
15678 :: EXPR :: modify :: I :: v50[#(16)] = #(-1)::
15682 :: EXPR :: modify :: I :: v50[#(17)] = #(3)::
15686 :: EXPR :: modify :: I :: v50[#(18)] = #(7)::
15690 :: EXPR :: modify :: I :: v50[#(19)] = #(2)::
15694 :: EXPR :: modify :: I :: v50[#(20)] = #(-4)::
15698 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(18)] = v50::
15702 :: NORM :: declaration :: [I :: v51 = new []::DD,15787
15703 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
15707 :: EXPR :: modify :: I :: v51[#(1)] = #(-3)::
15711 :: EXPR :: modify :: I :: v51[#(2)] = #(-4)::
15715 :: EXPR :: modify :: I :: v51[#(3)] = #(-2)::
15719 :: EXPR :: modify :: I :: v51[#(4)] = #(-2)::
15723 :: EXPR :: modify :: I :: v51[#(5)] = #(-3)::
15727 :: EXPR :: modify :: I :: v51[#(6)] = #(-4)::
15731 :: EXPR :: modify :: I :: v51[#(7)] = #(-4)::
15735 :: EXPR :: modify :: I :: v51[#(8)] = #(-3)::
15739 :: EXPR :: modify :: I :: v51[#(9)] = #(-2)::
15743 :: EXPR :: modify :: I :: v51[#(10)] = #(-3)::
15747 :: EXPR :: modify :: I :: v51[#(11)] = #(-2)::
15751 :: EXPR :: modify :: I :: v51[#(12)] = #(-3)::
15755 :: EXPR :: modify :: I :: v51[#(13)] = #(-3)::
15759 :: EXPR :: modify :: I :: v51[#(14)] = #(-3)::
15763 :: EXPR :: modify :: I :: v51[#(15)] = #(-2)::
15767 :: EXPR :: modify :: I :: v51[#(16)] = #(-1)::
15771 :: EXPR :: modify :: I :: v51[#(17)] = #(1)::
15775 :: EXPR :: modify :: I :: v51[#(18)] = #(2)::
15779 :: EXPR :: modify :: I :: v51[#(19)] = #(11)::
15783 :: EXPR :: modify :: I :: v51[#(20)] = #(-4)::
15787 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(19)] = v51::
15791 :: NORM :: declaration :: [I :: v52 = new []::DD,15876
15792 :: EXPR :: modify :: I :: v52[#(0)] = #(-4)::
15796 :: EXPR :: modify :: I :: v52[#(1)] = #(-4)::
15800 :: EXPR :: modify :: I :: v52[#(2)] = #(-4)::
15804 :: EXPR :: modify :: I :: v52[#(3)] = #(-4)::
15808 :: EXPR :: modify :: I :: v52[#(4)] = #(-4)::
15812 :: EXPR :: modify :: I :: v52[#(5)] = #(-4)::
15816 :: EXPR :: modify :: I :: v52[#(6)] = #(-4)::
15820 :: EXPR :: modify :: I :: v52[#(7)] = #(-4)::
15824 :: EXPR :: modify :: I :: v52[#(8)] = #(-4)::
15828 :: EXPR :: modify :: I :: v52[#(9)] = #(-4)::
15832 :: EXPR :: modify :: I :: v52[#(10)] = #(-4)::
15836 :: EXPR :: modify :: I :: v52[#(11)] = #(-4)::
15840 :: EXPR :: modify :: I :: v52[#(12)] = #(-4)::
15844 :: EXPR :: modify :: I :: v52[#(13)] = #(-4)::
15848 :: EXPR :: modify :: I :: v52[#(14)] = #(-4)::
15852 :: EXPR :: modify :: I :: v52[#(15)] = #(-4)::
15856 :: EXPR :: modify :: I :: v52[#(16)] = #(-4)::
15860 :: EXPR :: modify :: I :: v52[#(17)] = #(-4)::
15864 :: EXPR :: modify :: I :: v52[#(18)] = #(-4)::
15868 :: EXPR :: modify :: I :: v52[#(19)] = #(-4)::
15872 :: EXPR :: modify :: I :: v52[#(20)] = #(1)::
15876 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(20)] = v52::
15882 :: NORM :: declaration :: [Ljava/lang/Character :: v53 = new java.lang.Character[]::DD,16051:JM,15887
15883 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(71))::JM,15887
15887 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(0)] = v56::
15891 :: CALL :: call :: Ljava/lang/Character :: v59 = valueOf(#(65))::JM,15895
15895 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(1)] = v59::
15899 :: CALL :: call :: Ljava/lang/Character :: v62 = valueOf(#(80))::JM,15903
15903 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(2)] = v62::
15907 :: CALL :: call :: Ljava/lang/Character :: v65 = valueOf(#(67))::JM,15911
15911 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(3)] = v65::
15915 :: CALL :: call :: Ljava/lang/Character :: v68 = valueOf(#(84))::JM,15919
15919 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(4)] = v68::
15923 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(83))::JM,15927
15927 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(5)] = v71::
15931 :: CALL :: call :: Ljava/lang/Character :: v74 = valueOf(#(68))::JM,15935
15935 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(6)] = v74::
15939 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(78))::JM,15943
15943 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(7)] = v77::
15947 :: CALL :: call :: Ljava/lang/Character :: v80 = valueOf(#(69))::JM,15951
15951 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(8)] = v80::
15955 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(81))::JM,15959
15959 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(9)] = v83::
15963 :: CALL :: call :: Ljava/lang/Character :: v86 = valueOf(#(75))::JM,15967
15967 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(10)] = v86::
15971 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(72))::JM,15975
15975 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(11)] = v89::
15979 :: CALL :: call :: Ljava/lang/Character :: v92 = valueOf(#(82))::JM,15983
15983 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(12)] = v92::
15987 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(86))::JM,15991
15991 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(13)] = v95::
15995 :: CALL :: call :: Ljava/lang/Character :: v98 = valueOf(#(73))::JM,15999
15999 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(14)] = v98::
16003 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(76))::JM,16007
16007 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(15)] = v101::
16011 :: CALL :: call :: Ljava/lang/Character :: v104 = valueOf(#(77))::JM,16015
16015 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(16)] = v104::
16019 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(70))::JM,16023
16023 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(17)] = v107::
16027 :: CALL :: call :: Ljava/lang/Character :: v110 = valueOf(#(89))::JM,16031
16031 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(18)] = v110::
16035 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(87))::JM,16039
16039 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(19)] = v113::
16043 :: CALL :: call :: Ljava/lang/Character :: v116 = valueOf(#(45))::JM,16047
16047 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(20)] = v116::
16051 :: EXPR :: modify :: [Ljava/lang/Character :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1 = v53::
16053 :: EXPR :: reference :: [Ljava/lang/Character :: v117 = org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1::JM,16055
16055 :: CALL :: call :: Ljava/util/List :: v119 = asList(v117)::JM,16055
17368 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.<clinit>()::CD,17384:CD,17391:CD,17395:CD,17397:CD,17399:CD,17404:CD,17406:CD,17411:CD,17413:CD,17418:CD,17420
17384 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::
17391 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,17395
17395 :: EXPR :: modify :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs = v11::
17397 :: EXPR :: reference :: Ljava/util/List :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
17399 :: CALL :: call :: Z :: v16 = v13.add(#(CON))::
17404 :: EXPR :: reference :: Ljava/util/List :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
17406 :: CALL :: call :: Z :: v20 = v17.add(#(PRN))::
17411 :: EXPR :: reference :: Ljava/util/List :: v21 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
17413 :: CALL :: call :: Z :: v24 = v21.add(#(AUX))::
17418 :: EXPR :: reference :: Ljava/util/List :: v25 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
17420 :: CALL :: call :: Z :: v28 = v25.add(#(NUL))::
17443 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.PerformanceBehavior.<clinit>()::CD,17446:CD,17452:CD,17454:CD,17460:CD,17462:CD,17463:CD,17469
17446 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v2 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,17452
17452 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY = v2::
17454 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v6 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,17460
17460 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE = v6::
17462 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior[]::
17463 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v12 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::DD,17465
17465 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(0)] = v12::
17469 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v13 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE::DD,17471
17471 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(1)] = v13::
17538 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
17599 :: CALL :: call :: J :: v35 = lowMask(#(-_.!~*'()))::
17605 :: CALL :: call :: J :: v37 = highMask(#(-_.!~*'()))::
17625 :: CALL :: call :: J :: v46 = lowMask(#(;/?:@&=+$,[]))::
17631 :: CALL :: call :: J :: v48 = highMask(#(;/?:@&=+$,[]))::
17655 :: CALL :: call :: J :: v61 = lowMask(#(:@&=+$,))::
17664 :: CALL :: call :: J :: v65 = highMask(#(:@&=+$,))::
17673 :: CALL :: call :: J :: v70 = lowMask(#(;/))::
17682 :: CALL :: call :: J :: v74 = highMask(#(;/))::
17689 :: CALL :: call :: J :: v78 = lowMask(#(-))::
17695 :: CALL :: call :: J :: v80 = highMask(#(-))::
17701 :: CALL :: call :: J :: v83 = lowMask(#(.))::
17707 :: CALL :: call :: J :: v85 = highMask(#(.))::
17716 :: CALL :: call :: J :: v90 = lowMask(#(;:&=+$,))::
17725 :: CALL :: call :: J :: v94 = highMask(#(;:&=+$,))::
17735 :: CALL :: call :: J :: v100 = lowMask(#($,;:@&=+))::
17744 :: CALL :: call :: J :: v104 = highMask(#($,;:@&=+))::
17759 :: CALL :: call :: J :: v113 = lowMask(#(.:@[]))::
17774 :: CALL :: call :: J :: v121 = highMask(#(.:@[]))::
17783 :: CALL :: call :: J :: v126 = lowMask(#(%))::
17792 :: CALL :: call :: J :: v130 = highMask(#(%))::
17799 :: CALL :: call :: J :: v134 = lowMask(#([))::
17805 :: CALL :: call :: J :: v136 = highMask(#([))::
17813 :: CALL :: call :: J :: v140 = lowMask(#(+-.))::
17822 :: CALL :: call :: J :: v144 = highMask(#(+-.))::
17832 :: CALL :: call :: J :: v150 = lowMask(#(;?:@&=+$,))::
17841 :: CALL :: call :: J :: v154 = highMask(#(;?:@&=+$,))::
17848 :: NORM :: declaration :: [C :: v157 = new []::
17849 :: EXPR :: modify :: C :: v157[#(0)] = #(48)::
17853 :: EXPR :: modify :: C :: v157[#(1)] = #(49)::
17857 :: EXPR :: modify :: C :: v157[#(2)] = #(50)::
17861 :: EXPR :: modify :: C :: v157[#(3)] = #(51)::
17865 :: EXPR :: modify :: C :: v157[#(4)] = #(52)::
17869 :: EXPR :: modify :: C :: v157[#(5)] = #(53)::
17873 :: EXPR :: modify :: C :: v157[#(6)] = #(54)::
17877 :: EXPR :: modify :: C :: v157[#(7)] = #(55)::
17881 :: EXPR :: modify :: C :: v157[#(8)] = #(56)::
17885 :: EXPR :: modify :: C :: v157[#(9)] = #(57)::
17889 :: EXPR :: modify :: C :: v157[#(10)] = #(65)::
17893 :: EXPR :: modify :: C :: v157[#(11)] = #(66)::
17897 :: EXPR :: modify :: C :: v157[#(12)] = #(67)::
17901 :: EXPR :: modify :: C :: v157[#(13)] = #(68)::
17905 :: EXPR :: modify :: C :: v157[#(14)] = #(69)::
17909 :: EXPR :: modify :: C :: v157[#(15)] = #(70)::
18070 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.<clinit>()::CD,18080:CD,18096
18080 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v7 = getResourceManager(#(jfatcat))::CL,33913
18096 :: NORM :: declaration :: Ljava/util/Random :: v13 = new java.util.Random::
23674 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.<clinit>()::CD,23684
23684 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^e(....).+\d+$))::
23892 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.<clinit>()::CD,23895:CD,23903:CD,23908:CD,23916:CD,23921:CD,23929:CD,23934
23895 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
23903 :: NORM :: declaration :: [Ljava/lang/String :: v7 = new java.lang.String[]::
23904 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(0)] = #(1.75A)::
23908 :: CALL :: call :: Ljava/lang/Object :: v11 = v4.put(#(2.01), v7)::
23916 :: NORM :: declaration :: [Ljava/lang/String :: v14 = new java.lang.String[]::
23917 :: EXPR :: modify :: Ljava/lang/Object :: v14[#(0)] = #(1.75B)::
23921 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.put(#(2.02), v14)::
23929 :: NORM :: declaration :: [Ljava/lang/String :: v20 = new java.lang.String[]::
23930 :: EXPR :: modify :: Ljava/lang/Object :: v20[#(0)] = #(1.75C)::
23934 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.put(#(2.03), v20)::
24150 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.<clinit>()::CD,24160:CD,24167
24160 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v5 = new java.util.concurrent.atomic.AtomicBoolean::
24167 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::
30195 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.<clinit>()::CD,30199:CD,30234:CD,30239:CD,30243:CD,30248:CD,30265
30199 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
30234 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
30239 :: CALL :: call :: Ljava/lang/String :: v27 = v21.getMessage()::
30243 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(v27)::
30248 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
30265 :: EXPR :: assign :: Ljava/lang/Exception :: v21 = catch <exc>::
30288 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.<clinit>()::CD,30291:CD,30297:CD,30303:CD,30307:CD,30311:CD,30317:CD,30321:CD,30327:CD,30331:CD,30337:CD,30341:CD,30347:CD,30351:CD,30357:CD,30361:CD,30367:CD,30371:CD,30377:CD,30381:CD,30387:CD,30391:CD,30397:CD,30401:CD,30407:CD,30411:CD,30417:CD,30421:CD,30427:CD,30431:CD,30437:CD,30441:CD,30447:CD,30451:CD,30457:CD,30461:CD,30467:CD,30471:CD,30477:CD,30481:CD,30487:CD,30491:CD,30497:CD,30501:CD,30507:CD,30511:CD,30517:CD,30521:CD,30527:CD,30531:CD,30535:CD,30537:CD,30541:CD,30545:CD,30551:CD,30555:CD,30561:CD,30565:CD,30571:CD,30575:CD,30581:CD,30585:CD,30591:CD,30595:CD,30601:CD,30605:CD,30611:CD,30615:CD,30621:CD,30625:CD,30631:CD,30635:CD,30641:CD,30645:CD,30651:CD,30655:CD,30661:CD,30665:CD,30671:CD,30675:CD,30681:CD,30685:CD,30691:CD,30695:CD,30701:CD,30705:CD,30711:CD,30715:CD,30721:CD,30725:CD,30731:CD,30735:CD,30741:CD,30745:CD,30751:CD,30755:CD,30761:CD,30765:CD,30771:CD,30775:CD,30779:CD,30785:CD,30789:CD,30795:CD,30799:CD,30805:CD,30809:CD,30815:CD,30819:CD,30825:CD,30829:CD,30835:CD,30839:CD,30843:CD,30845:CD,30849:CD,30853:CD,30859:CD,30863:CD,30869:CD,30873:CD,30879:CD,30883:CD,30889:CD,30893:CD,30899:CD,30903:CD,30909:CD,30913:CD,30919:CD,30923:CD,30925:CD,30929:CD,30934:CD,30936:CD,30940
30291 :: CALL :: call :: Ljava/lang/Character :: v4 = valueOf(#(88))::
30297 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(#(78))::
30303 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,30531:JM,30535:JM,30527
30307 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(65))::
30311 :: CALL :: call :: Ljava/lang/Object :: v15 = v8.put(#(ALA), v13)::
30317 :: CALL :: call :: Ljava/lang/Character :: v19 = valueOf(#(68))::
30321 :: CALL :: call :: Ljava/lang/Object :: v21 = v8.put(#(ASP), v19)::
30327 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(78))::
30331 :: CALL :: call :: Ljava/lang/Object :: v26 = v8.put(#(ASN), v24)::
30337 :: CALL :: call :: Ljava/lang/Character :: v30 = valueOf(#(66))::
30341 :: CALL :: call :: Ljava/lang/Object :: v32 = v8.put(#(ASX), v30)::
30347 :: CALL :: call :: Ljava/lang/Character :: v36 = valueOf(#(82))::
30351 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.put(#(ARG), v36)::
30357 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(#(67))::
30361 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.put(#(CYS), v42)::
30367 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(69))::
30371 :: CALL :: call :: Ljava/lang/Object :: v50 = v8.put(#(GLU), v48)::
30377 :: CALL :: call :: Ljava/lang/Character :: v54 = valueOf(#(81))::
30381 :: CALL :: call :: Ljava/lang/Object :: v56 = v8.put(#(GLN), v54)::
30387 :: CALL :: call :: Ljava/lang/Character :: v60 = valueOf(#(71))::
30391 :: CALL :: call :: Ljava/lang/Object :: v62 = v8.put(#(GLY), v60)::
30397 :: CALL :: call :: Ljava/lang/Character :: v66 = valueOf(#(90))::
30401 :: CALL :: call :: Ljava/lang/Object :: v68 = v8.put(#(GLX), v66)::
30407 :: CALL :: call :: Ljava/lang/Character :: v72 = valueOf(#(72))::
30411 :: CALL :: call :: Ljava/lang/Object :: v74 = v8.put(#(HIS), v72)::
30417 :: CALL :: call :: Ljava/lang/Character :: v78 = valueOf(#(73))::
30421 :: CALL :: call :: Ljava/lang/Object :: v80 = v8.put(#(ILE), v78)::
30427 :: CALL :: call :: Ljava/lang/Character :: v84 = valueOf(#(75))::
30431 :: CALL :: call :: Ljava/lang/Object :: v86 = v8.put(#(LYS), v84)::
30437 :: CALL :: call :: Ljava/lang/Character :: v90 = valueOf(#(76))::
30441 :: CALL :: call :: Ljava/lang/Object :: v92 = v8.put(#(LEU), v90)::
30447 :: CALL :: call :: Ljava/lang/Character :: v96 = valueOf(#(77))::
30451 :: CALL :: call :: Ljava/lang/Object :: v98 = v8.put(#(MET), v96)::
30457 :: CALL :: call :: Ljava/lang/Character :: v102 = valueOf(#(70))::
30461 :: CALL :: call :: Ljava/lang/Object :: v104 = v8.put(#(PHE), v102)::
30467 :: CALL :: call :: Ljava/lang/Character :: v108 = valueOf(#(80))::
30471 :: CALL :: call :: Ljava/lang/Object :: v110 = v8.put(#(PRO), v108)::
30477 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(83))::
30481 :: CALL :: call :: Ljava/lang/Object :: v116 = v8.put(#(SER), v114)::
30487 :: CALL :: call :: Ljava/lang/Character :: v120 = valueOf(#(84))::
30491 :: CALL :: call :: Ljava/lang/Object :: v122 = v8.put(#(THR), v120)::
30497 :: CALL :: call :: Ljava/lang/Character :: v126 = valueOf(#(87))::
30501 :: CALL :: call :: Ljava/lang/Object :: v128 = v8.put(#(TRP), v126)::
30507 :: CALL :: call :: Ljava/lang/Character :: v132 = valueOf(#(89))::
30511 :: CALL :: call :: Ljava/lang/Object :: v134 = v8.put(#(TYR), v132)::
30517 :: CALL :: call :: Ljava/lang/Character :: v138 = valueOf(#(86))::
30521 :: CALL :: call :: Ljava/lang/Object :: v140 = v8.put(#(VAL), v138)::
30527 :: CALL :: call :: Ljava/util/Map :: v142 = synchronizedMap(v8)::JM,30531:JM,30535:JM,30527
30531 :: CALL :: call :: Ljava/util/Map :: v144 = unmodifiableMap(v142)::JM,30531:JM,30535
30535 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1 = v144::
30537 :: NORM :: declaration :: Ljava/util/HashMap :: v145 = new java.util.HashMap::JM,30761:JM,30765
30541 :: CALL :: call :: Ljava/lang/Character :: v148 = valueOf(#(65))::
30545 :: CALL :: call :: Ljava/lang/Object :: v150 = v145.put(v148, #(ALA))::
30551 :: CALL :: call :: Ljava/lang/Character :: v152 = valueOf(#(68))::
30555 :: CALL :: call :: Ljava/lang/Object :: v154 = v145.put(v152, #(ASP))::
30561 :: CALL :: call :: Ljava/lang/Character :: v156 = valueOf(#(78))::
30565 :: CALL :: call :: Ljava/lang/Object :: v158 = v145.put(v156, #(ASN))::
30571 :: CALL :: call :: Ljava/lang/Character :: v160 = valueOf(#(66))::
30575 :: CALL :: call :: Ljava/lang/Object :: v162 = v145.put(v160, #(ASX))::
30581 :: CALL :: call :: Ljava/lang/Character :: v164 = valueOf(#(82))::
30585 :: CALL :: call :: Ljava/lang/Object :: v166 = v145.put(v164, #(ARG))::
30591 :: CALL :: call :: Ljava/lang/Character :: v168 = valueOf(#(67))::
30595 :: CALL :: call :: Ljava/lang/Object :: v170 = v145.put(v168, #(CYS))::
30601 :: CALL :: call :: Ljava/lang/Character :: v172 = valueOf(#(69))::
30605 :: CALL :: call :: Ljava/lang/Object :: v174 = v145.put(v172, #(GLU))::
30611 :: CALL :: call :: Ljava/lang/Character :: v176 = valueOf(#(81))::
30615 :: CALL :: call :: Ljava/lang/Object :: v178 = v145.put(v176, #(GLN))::
30621 :: CALL :: call :: Ljava/lang/Character :: v180 = valueOf(#(71))::
30625 :: CALL :: call :: Ljava/lang/Object :: v182 = v145.put(v180, #(GLY))::
30631 :: CALL :: call :: Ljava/lang/Character :: v184 = valueOf(#(90))::
30635 :: CALL :: call :: Ljava/lang/Object :: v186 = v145.put(v184, #(GLX))::
30641 :: CALL :: call :: Ljava/lang/Character :: v188 = valueOf(#(72))::
30645 :: CALL :: call :: Ljava/lang/Object :: v190 = v145.put(v188, #(HIS))::
30651 :: CALL :: call :: Ljava/lang/Character :: v192 = valueOf(#(73))::
30655 :: CALL :: call :: Ljava/lang/Object :: v194 = v145.put(v192, #(ILE))::
30661 :: CALL :: call :: Ljava/lang/Character :: v196 = valueOf(#(75))::
30665 :: CALL :: call :: Ljava/lang/Object :: v198 = v145.put(v196, #(LYS))::
30671 :: CALL :: call :: Ljava/lang/Character :: v200 = valueOf(#(76))::
30675 :: CALL :: call :: Ljava/lang/Object :: v202 = v145.put(v200, #(LEU))::
30681 :: CALL :: call :: Ljava/lang/Character :: v204 = valueOf(#(77))::
30685 :: CALL :: call :: Ljava/lang/Object :: v206 = v145.put(v204, #(MET))::
30691 :: CALL :: call :: Ljava/lang/Character :: v208 = valueOf(#(70))::
30695 :: CALL :: call :: Ljava/lang/Object :: v210 = v145.put(v208, #(PHE))::
30701 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(80))::
30705 :: CALL :: call :: Ljava/lang/Object :: v214 = v145.put(v212, #(PRO))::
30711 :: CALL :: call :: Ljava/lang/Character :: v216 = valueOf(#(83))::
30715 :: CALL :: call :: Ljava/lang/Object :: v218 = v145.put(v216, #(SER))::
30721 :: CALL :: call :: Ljava/lang/Character :: v220 = valueOf(#(84))::
30725 :: CALL :: call :: Ljava/lang/Object :: v222 = v145.put(v220, #(THR))::
30731 :: CALL :: call :: Ljava/lang/Character :: v224 = valueOf(#(87))::
30735 :: CALL :: call :: Ljava/lang/Object :: v226 = v145.put(v224, #(TRP))::
30741 :: CALL :: call :: Ljava/lang/Character :: v228 = valueOf(#(89))::
30745 :: CALL :: call :: Ljava/lang/Object :: v230 = v145.put(v228, #(TYR))::
30751 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(86))::
30755 :: CALL :: call :: Ljava/lang/Object :: v234 = v145.put(v232, #(VAL))::
30761 :: CALL :: call :: Ljava/util/Map :: v236 = synchronizedMap(v145)::JM,30761:JM,30765
30765 :: CALL :: call :: Ljava/util/Map :: v238 = unmodifiableMap(v236)::JM,30765
30771 :: NORM :: declaration :: Ljava/util/HashMap :: v239 = new java.util.HashMap::JM,30835:JM,30839:JM,30843
30775 :: CALL :: call :: Ljava/lang/Character :: v243 = valueOf(#(65))::
30779 :: CALL :: call :: Ljava/lang/Object :: v245 = v239.put(#(DA), v243)::
30785 :: CALL :: call :: Ljava/lang/Character :: v248 = valueOf(#(67))::
30789 :: CALL :: call :: Ljava/lang/Object :: v250 = v239.put(#(DC), v248)::
30795 :: CALL :: call :: Ljava/lang/Character :: v253 = valueOf(#(71))::
30799 :: CALL :: call :: Ljava/lang/Object :: v255 = v239.put(#(DG), v253)::
30805 :: CALL :: call :: Ljava/lang/Character :: v258 = valueOf(#(73))::
30809 :: CALL :: call :: Ljava/lang/Object :: v260 = v239.put(#(DI), v258)::
30815 :: CALL :: call :: Ljava/lang/Character :: v264 = valueOf(#(85))::
30819 :: CALL :: call :: Ljava/lang/Object :: v266 = v239.put(#(DU), v264)::
30825 :: CALL :: call :: Ljava/lang/Character :: v269 = valueOf(#(84))::
30829 :: CALL :: call :: Ljava/lang/Object :: v271 = v239.put(#(DT), v269)::
30835 :: CALL :: call :: Ljava/util/Map :: v273 = synchronizedMap(v239)::JM,30835:JM,30839:JM,30843
30839 :: CALL :: call :: Ljava/util/Map :: v275 = unmodifiableMap(v273)::JM,30839:JM,30843
30843 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1 = v275::
30845 :: NORM :: declaration :: Ljava/util/HashMap :: v276 = new java.util.HashMap::JM,30913:JM,30909
30849 :: CALL :: call :: Ljava/lang/Character :: v279 = valueOf(#(65))::
30853 :: CALL :: call :: Ljava/lang/Object :: v281 = v276.put(v279, #(DA))::
30859 :: CALL :: call :: Ljava/lang/Character :: v283 = valueOf(#(67))::
30863 :: CALL :: call :: Ljava/lang/Object :: v285 = v276.put(v283, #(DC))::
30869 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(71))::
30873 :: CALL :: call :: Ljava/lang/Object :: v289 = v276.put(v287, #(DG))::
30879 :: CALL :: call :: Ljava/lang/Character :: v291 = valueOf(#(73))::
30883 :: CALL :: call :: Ljava/lang/Object :: v293 = v276.put(v291, #(DI))::
30889 :: CALL :: call :: Ljava/lang/Character :: v295 = valueOf(#(85))::
30893 :: CALL :: call :: Ljava/lang/Object :: v297 = v276.put(v295, #(DU))::
30899 :: CALL :: call :: Ljava/lang/Character :: v299 = valueOf(#(84))::
30903 :: CALL :: call :: Ljava/lang/Object :: v301 = v276.put(v299, #(DT))::
30909 :: CALL :: call :: Ljava/util/Map :: v303 = synchronizedMap(v276)::JM,30913:JM,30909
30913 :: CALL :: call :: Ljava/util/Map :: v305 = unmodifiableMap(v303)::JM,30913
30919 :: NORM :: declaration :: Ljava/util/ArrayList :: v306 = new java.util.ArrayList::
30923 :: EXPR :: reference :: Ljava/util/Map :: v308 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1::
30925 :: CALL :: call :: Ljava/util/Set :: v310 = v308.keySet()::
30929 :: CALL :: call :: Z :: v312 = v306.addAll(v310)::
30934 :: EXPR :: reference :: Ljava/util/Map :: v313 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1::
30936 :: CALL :: call :: Ljava/util/Set :: v315 = v313.keySet()::
30940 :: CALL :: call :: Z :: v317 = v306.addAll(v315)::
31421 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.<clinit>()::CD,31424:JM,38754:JM,38758:JM,41352:JM,41416:JM,41388:JM,38738:JM,41396:JM,38742:JM,38746:JM,41338:JM,41402:JM,41467:JM,38750:JM,34236:CD,31439:CD,31441:JM,38786:JM,38790:JM,38794:JM,38798:CD,31456:CD,31458:CD,31468:CD,31470:CD,31471:CD,31477:CD,31483
31424 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,31439
31439 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB = v2::
31441 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v10 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,31456
31456 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF = v10::
31458 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v18 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,31468
31468 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN = v18::
31470 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v25 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::
31471 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v26 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::DD,31473
31473 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(0)] = v26::
31477 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::DD,31479
31479 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(1)] = v27::
31483 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v28 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,31485
31485 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(2)] = v28::
31549 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.<clinit>()::CD,31552:CD,31571
31552 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
31553 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
31557 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
31561 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
31565 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(pdb)::
31571 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
31572 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
31576 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
31580 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
31584 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(pdb)::
31619 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.<clinit>()::CD,31622:CD,31641
31622 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
31623 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
31627 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
31631 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
31635 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(mmCIF)::
31641 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
31642 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
31646 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
31650 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
31654 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(mmCIF)::
32397 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.<clinit>()::CD,32401:CD,32416
32401 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
32416 :: NORM :: declaration :: Ljava/util/Hashtable :: v11 = new java.util.Hashtable::
32431 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.<clinit>()::CD,32434:CD,32440:CD,32442:CD,32448:CD,32450:CD,32456:CD,32458:CD,32464:CD,32466:CD,32472:CD,32474:CD,32480:CD,32482:CD,32488:CD,32490:CD,32496:CD,32498:CD,32504:CD,32506:CD,32512:CD,32514:CD,32520:CD,32522:CD,32528:CD,32530:CD,32536:CD,32538:CD,32539:CD,32545:CD,32551:CD,32557:CD,32563:CD,32569:CD,32575:CD,32581:CD,32587:CD,32593:CD,32599:CD,32605:CD,32611
32434 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32440
32440 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE = v2::
32442 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v6 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32448
32448 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.CURRENT = v6::
32450 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v10 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32456
32456 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.AUTH = v10::
32458 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32464
32464 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HOLD = v14::
32466 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v18 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32472
32472 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HPUB = v18::
32474 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v22 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32480
32480 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.POLC = v22::
32482 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32488
32488 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.PROC = v26::
32490 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v30 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32496
32496 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REFI = v30::
32498 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v34 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32504
32504 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REPL = v34::
32506 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32512
32512 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WAIT = v38::
32514 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v42 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32520
32520 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WDRN = v42::
32522 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v46 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32528
32528 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.MODEL = v46::
32530 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = new org.biojava.nbio.structure.PDBStatus$Status::DD,32536
32536 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN = v50::
32538 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v55 = new org.biojava.nbio.structure.PDBStatus$Status[]::
32539 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,32541
32541 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(0)] = v56::
32545 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,32547
32547 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(1)] = v57::
32551 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,32553
32553 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(2)] = v58::
32557 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,32559
32559 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(3)] = v59::
32563 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,32565
32565 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(4)] = v60::
32569 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,32571
32571 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(5)] = v61::
32575 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,32577
32577 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(6)] = v62::
32581 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,32583
32583 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(7)] = v63::
32587 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,32589
32589 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(8)] = v64::
32593 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,32595
32595 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(9)] = v65::
32599 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,32601
32601 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(10)] = v66::
32605 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,32607
32607 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(11)] = v67::
32611 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,32613
32613 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(12)] = v68::
32739 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getStructure(java.lang.String)::CD,32743:JM,38994:JM,34373:JM,34389:JM,38965:JM,34359
32743 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v5 = getStructure(p1 $name , #(null), #(null))::JM,38994:JM,34373:JM,34389:JM,38965:JM,34359:CL,34353
33102 :: EXPR :: modify :: I :: p0 $this .atomicNumber = p3 $atomicNumber ::
33105 :: EXPR :: modify :: I :: p0 $this .period = p4 $period ::
33108 :: EXPR :: modify :: F :: p0 $this .VDWRadius = p6 $VDWRadius ::
33111 :: EXPR :: modify :: F :: p0 $this .covalentRadius = p7 $covalentRadius ::
33114 :: EXPR :: modify :: I :: p0 $this .valenceElectronCount = p8 $valenceElectronCount ::
33117 :: EXPR :: modify :: I :: p0 $this .minimumValence = p9 $minimumValence ::
33120 :: EXPR :: modify :: I :: p0 $this .maximumValence = p10 $maximumValence ::
33123 :: EXPR :: modify :: I :: p0 $this .commonValence = p11 $commonValence ::
33126 :: EXPR :: modify :: I :: p0 $this .maximumCovalentValence = p12 $maximumCovalentValence ::
33129 :: EXPR :: modify :: F :: p0 $this .atomicMass = p13 $atomicMass ::
33132 :: EXPR :: modify :: I :: p0 $this .coreElectronCount = p14 $coreElectronCount ::
33135 :: EXPR :: modify :: I :: p0 $this .oxidationState = p15 $oxidationState ::
33138 :: EXPR :: modify :: [I :: p0 $this .allOxidationStates = p16 $allOxidationStates ::
33141 :: EXPR :: modify :: F :: p0 $this .paulingElectronegativity = p17 $paulingElectronegativity ::
33144 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: p0 $this .elementType = p18 $elementType ::
33181 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.values()::CF,33182:CD,33184:CD,33186:CD,33187:CD,33195
33182 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.values()::JM,6783
33184 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/Element :: v2 = org.biojava.nbio.structure.Element.ENUM$VALUES::DD,33186
33186 :: EXPR :: assign :: I :: v4 = v2.length::DD,33187
33187 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v5 = new org.biojava.nbio.structure.Element[]::DD,33195
33195 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Element :: return v5::CF,33182
33220 :: EXPR :: modify :: Z :: p0 $this .metal = p3 $metal ::
33288 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML()::CD,33292:CD,33296:CD,33301:CD,33311:CD,33315:CD,33322:CD,33327:CD,33331:CD,33336:CD,33344:CD,33350:CD,33355:CD,33359:CD,33364:CD,33372:CD,33375:CD,33381:CD,33385:CD,33427:CD,33431:CD,33433:CD,33434:CD,33435
33292 :: CALL :: call :: Ljava/lang/ClassLoader :: v4 = v2.getClassLoader()::JM,33301
33296 :: CALL :: call :: Ljava/io/InputStream :: v7 = v4.getResourceAsStream(#(org/biojava/nbio/stru...))::JM,33301
33301 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CF,33311:CD,33308
33308 :: CALL :: call :: V :: exit(#(1))::
33311 :: NORM :: declaration :: Ljava/util/TreeMap :: v14 = new java.util.TreeMap::DD,33435
33315 :: CALL :: call :: Ljava/util/TreeMap :: v17 = parseSpaceGroupsXML(v7)::JM,33435:CL,37777
33322 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
33327 :: CALL :: call :: Ljava/lang/String :: v37 = v31.getMessage()::
33331 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::
33336 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
33344 :: CALL :: call :: V :: exit(#(1))::
33350 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
33355 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
33359 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
33364 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
33372 :: CALL :: call :: V :: exit(#(1))::
33375 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
33381 :: CALL :: call :: Ljava/util/Collection :: v49 = v45.values()::JM,33394:JM,33431
33385 :: CALL :: call :: Ljava/util/Iterator :: v51 = v49.iterator()::JM,33394:JM,33431
33390 :: CALL :: call :: Ljava/lang/Object :: v56 = v51.next()::JM,33394:JM,33431
33394 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::JM,33410:JM,33414
33404 :: CALL :: call :: Ljava/lang/Object :: v63 = v59.put(v61, v57)::
33410 :: CALL :: call :: Ljava/lang/String :: v65 = v57.getAltShortSymbol()::JM,33410:JM,33414
33414 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 181::CD,33421:JM,33394:JM,33431
33421 :: CALL :: call :: Ljava/lang/Object :: v70 = v66.put(v68, v57)::
33427 :: CALL :: call :: Z :: v53 = v51.hasNext()::JM,33394:JM,33431
33431 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 136::CD,33390:CD,33394:CD,33404:CD,33410:CD,33414:CD,33427:JM,33431
33433 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
33434 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
33435 :: EXPR :: assign :: null :: PHI v45 = v17, v14, v14::CF,33375:JM,33394:JM,33431
33479 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
33482 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .type = p4 $stype ::
33515 :: EXPR :: modify :: Z :: p0 $this .downloadAll = #(0)::
33524 :: CALL :: call :: V :: initPath()::CL,37799
33532 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.matchPolymerTypes(java.util.Set)::CD,33536:CD,33540:CD,33543:CD,33564:CD,33570
33536 :: NORM :: declaration :: Ljava/util/HashSet :: v3 = new java.util.HashSet::
33540 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v6 = values()::JM,33543:CL,37828
33543 :: EXPR :: assign :: I :: v7 = v6.length::DD,33564
33552 :: CALL :: call :: Z :: v12 = p1 $allowedTypes .contains(v10)::JM,33557
33557 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 48::CD,33558:CF,33563
33558 :: CALL :: call :: Z :: v14 = v3.add(v9)::
33563 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,33570
33564 :: PRED :: IF :: Z :: if (v17 < v7) goto 25::CD,33552:CD,33557:CD,33563:CD,33570
33570 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,33563:DD,33564
33605 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
33608 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .types = p4 $types ::
33619 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.getHetatmTypes()::CD,33622:CD,33626:CD,33629:CD,33665:CD,33671
33622 :: NORM :: declaration :: Ljava/util/HashSet :: v2 = new java.util.HashSet::
33626 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = values()::JM,33629:CL,37828
33629 :: EXPR :: assign :: I :: v6 = v5.length::DD,33665
33641 :: CALL :: call :: Z :: v13 = v11.contains(v8)::JM,33646
33646 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 64::CD,33653:CD,33658:CF,33664
33653 :: CALL :: call :: Z :: v18 = v16.contains(v8)::JM,33658
33658 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 64::CD,33659:CF,33664
33659 :: CALL :: call :: Z :: v20 = v2.add(v8)::
33664 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,33671
33665 :: PRED :: IF :: Z :: if (v23 < v6) goto 24::CD,33641:CD,33646:CD,33664:CD,33671
33671 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,33664:DD,33665
33710 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
33713 :: EXPR :: modify :: Z :: p0 $this .isCrystallographic = p4 $isXtallographic ::
33716 :: EXPR :: modify :: Z :: p0 $this .isNmr = p5 $isNmr ::
33729 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.initExpTechStr2Value()::CD,33732:CD,33736:CD,33739:CD,33756:CD,33758
33732 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
33736 :: CALL :: call :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = values()::JM,33739:CL,37880
33739 :: EXPR :: assign :: I :: v6 = v5.length::DD,33756
33749 :: CALL :: call :: Ljava/lang/Object :: v12 = v2.put(v10, v8)::
33755 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,33758
33756 :: PRED :: IF :: Z :: if (v15 < v6) goto 24::CD,33749:CD,33755:CD,33758
33758 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,33755:DD,33756
33791 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p3 $pt ::
33794 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chem_comp_type = p4 $chem_comp_type ::
33817 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .entity_poly_type = p3 $entity_poly_type ::
33826 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::CF,33827:CD,33829:CD,33831:CD,33832:CD,33840
33827 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::JM,14065
33829 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.ENUM$VALUES::DD,33831
33831 :: EXPR :: assign :: I :: v4 = v2.length::DD,33832
33832 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::DD,33840
33840 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v5::CF,33827
33913 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.ResourceManager.getResourceManager(java.lang.String)::JM,37953:JM,37961
34211 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::CE,34212:CD,34218:CD,34222
34212 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::JM,138100:JM,138056
34215 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .extensions::JM,34218:JM,34222
34218 :: CALL :: call :: Ljava/util/List :: v5 = unmodifiableList(v3)::JM,34218:JM,34222
34222 :: NORM :: compound :: Ljava/util/List :: return v5::DD,34212
34236 :: EXPR :: modify :: Ljava/util/List :: p0 $this .extensions = p3 $extensions ::
34353 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getStructure(java.lang.String,org.biojava.nbio.structure.io.PDBFileParser,org.biojava.nbio.structure.align.util.AtomCache)::CD,34359:CD,34360:CD,34368:CD,34372:JM,38994:JM,34373:JM,34389:JM,38965
34359 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::JM,38994:JM,34373:JM,34389:JM,38965:JM,34359
34360 :: CALL :: call :: Ljava/lang/String :: v7 = expandUserHome(p1 $name )::JM,38994:JM,34373:JM,34389:JM,38965:JM,34359:CL,38940
34368 :: CALL :: call :: Z :: v10 = v5.exists()::JM,34372
34372 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 49::CD,34373:CD,34383:CD,34389:CD,34394
34373 :: PRED :: IF :: Z :: if (p2 $parser  != #(null)) goto 31::JM,39075:JM,39110:JM,39174:JM,41480:JM,39241:JM,41513:JM,39082:JM,39181:JM,41488:JM,41520:JM,39089:JM,39061:JM,39191:JM,39096:JM,39160:JM,41496:JM,41467:JM,39068:JM,39133:JM,39103:JM,39167
34383 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v24 = v20.parsePDBFile(v21)::CL,39322
34389 :: PRED :: IF :: Z :: if (p3 $cache  != #(null)) goto 62::JM,54400:JM,54353:JM,54372:JM,40533:JM,54357:JM,54405:JM,54374:JM,54425:JM,54379:JM,40540
34394 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v17 = v15.getStructure(p1 $name )::CL,39358
34812 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::CE,34813:CD,34816:CD,34820:CD,34829:CD,34830:CD,34834:CD,34843:CD,34844:CD,34848:CD,34857:CD,34858:CD,34862:CD,34871:CD,34872:CD,34876:CD,34885:CD,34886:CD,34890:CD,34899:CD,34900:CD,34901:CD,34902:CD,34903:CD,34904:CD,34905:CD,34906
34813 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::
34816 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,34829
34817 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainID1::DD,34820
34820 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,34825:CD,34901
34822 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainID1::JM,34901
34825 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,34901
34829 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,34830
34830 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,34843
34831 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainID2::DD,34834
34834 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,34839:CD,34902
34836 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainID2::JM,34902
34839 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,34902
34843 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,34844
34844 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,34857
34845 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .insCode1::DD,34848
34848 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,34853:CD,34903
34850 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::JM,34903
34853 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,34903
34857 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,34858
34858 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,34871
34859 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,34862
34862 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,34867:CD,34904
34864 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,34904
34867 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,34904
34871 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,34872
34872 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,34885
34873 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::DD,34876
34876 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,34881:CD,34905
34878 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .resnum1::JM,34905
34881 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,34905
34885 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,34886
34886 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,34899
34887 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .resnum2::DD,34890
34890 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,34895:CD,34906
34892 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .resnum2::JM,34906
34895 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,34906
34899 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,34900
34900 :: NORM :: compound :: I :: return v48::CF,34813
34901 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,34829
34902 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,34843
34903 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,34857
34904 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,34871
34905 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,34885
34906 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,34899
35071 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.hashCode()::CE,35072:CD,35075:CD,35079:CD,35088:CD,35089:CD,35093:CD,35102:CD,35103:CD,35107:CD,35116:CD,35117:CD,35118:CD,35119:CD,35120
35072 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.hashCode()::JM,35374:JM,35375
35075 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,35088
35076 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainId::DD,35079
35079 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,35084:CD,35118
35081 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainId::JM,35118
35084 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,35118
35088 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,35089
35089 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,35102
35090 :: EXPR :: reference :: Ljava/lang/Character :: v15 = p0 $this .insCode::DD,35093
35093 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,35098:CD,35119
35095 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::JM,35119
35098 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,35119
35102 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,35103
35103 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,35116
35104 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,35107
35107 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,35112:CD,35120
35109 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::JM,35120
35112 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,35120
35116 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,35117
35117 :: NORM :: compound :: I :: return v27::CF,35072
35118 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,35088
35119 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,35102
35120 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,35116
35186 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.hashCode()::CE,35187:CD,35190:CD,35194:CD,35203:CD,35204:CD,35208:CD,35217:CD,35218:CD,35222:CD,35231:CD,35232:CD,35236:CD,35245:CD,35246:CD,35247:CD,35248:CD,35249:CD,35250
35187 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.hashCode()::
35190 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(37) * #(5)::DD,35203
35191 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::DD,35194
35194 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,35198:CD,35247
35195 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .siteID::JM,35247
35198 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,35247
35203 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,35204
35204 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(37) * v13::DD,35217
35205 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::DD,35208
35208 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 50::CD,35212:CD,35248
35212 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,35248
35217 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,35218
35218 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(37) * v20::DD,35231
35219 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .evCode::DD,35222
35222 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 74::CD,35226:CD,35249
35223 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .evCode::JM,35249
35226 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,35249
35231 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,35232
35232 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(37) * v27::DD,35245
35233 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .description::DD,35236
35236 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 98::CD,35240:CD,35250
35237 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::JM,35250
35240 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,35250
35245 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,35246
35246 :: NORM :: compound :: I :: return v34::DD,35187
35247 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,35203
35248 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,35217
35249 :: EXPR :: assign :: null :: PHI v26 = v25, #(0)::CF,35231
35250 :: EXPR :: assign :: null :: PHI v33 = v32, #(0)::CF,35245
35326 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.hashCode()::CE,35327:CD,35330:CD,35334:CD,35343:CD,35344:CD,35348:CD,35357:CD,35358:CD,35362:CD,35371:CD,35372:CD,35373:CD,35374:CD,35375
35327 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueRange.hashCode()::
35330 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,35343
35331 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chain::DD,35334
35334 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,35339:CD,35373
35336 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chain::JM,35373
35339 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,35373
35343 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,35344
35344 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,35357
35345 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v15 = p0 $this .end::DD,35348
35348 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,35353:CD,35374
35353 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,35374:CL,35071
35357 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,35358
35358 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,35371
35359 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = p0 $this .start::DD,35362
35362 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,35367:CD,35375
35367 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,35375:CL,35071
35371 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,35372
35372 :: NORM :: compound :: I :: return v27::CF,35327
35373 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,35343
35374 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,35357
35375 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,35371
35402 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.hashCode()::CE,35403:CD,35406:CD,35410:CD,35419:CD,35420:CD,35424:CD,35433:CD,35434:CD,35435:CD,35436
35403 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Author.hashCode()::
35406 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(19) * #(3)::DD,35419
35407 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .surname::DD,35410
35410 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,35414:CD,35435
35411 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .surname::JM,35435
35414 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,35435
35419 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,35420
35420 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(19) * v13::DD,35433
35421 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .initials::DD,35424
35424 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 48::CD,35428:CD,35436
35425 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .initials::JM,35436
35428 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,35436
35433 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,35434
35434 :: NORM :: compound :: I :: return v20::CF,35403
35435 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,35419
35436 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,35433
35454 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::CE,35455:CD,35458:CD,35462:CD,35471:CD,35472:CD,35476:CD,35485:CD,35486:CD,35490:CD,35499:CD,35500:CD,35504:CD,35513:CD,35514:CD,35518:CD,35527:CD,35528:CD,35532:CD,35541:CD,35542:CD,35546:CD,35555:CD,35556:CD,35560:CD,35569:CD,35570:CD,35574:CD,35583:CD,35584:CD,35588:CD,35597:CD,35598:CD,35602:CD,35611:CD,35612:CD,35616:CD,35625:CD,35626:CD,35630:CD,35639:CD,35640:CD,35644:CD,35653:CD,35654:CD,35658:CD,35667:CD,35668:CD,35672:CD,35681:CD,35682:CD,35686:CD,35695:CD,35696:CD,35697:CD,35698:CD,35699:CD,35700:CD,35701:CD,35702:CD,35703:CD,35704:CD,35705:CD,35706:CD,35707:CD,35708:CD,35709:CD,35710:CD,35711:CD,35712:CD,35713
35455 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::
35458 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,35471
35459 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .architectureName::DD,35462
35462 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,35467:CD,35697
35464 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .architectureName::JM,35697
35467 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,35697
35471 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,35472
35472 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,35485
35473 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainId::DD,35476
35476 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,35481:CD,35698
35478 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainId::JM,35698
35481 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,35698
35485 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,35486
35486 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,35499
35487 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .domainId::DD,35490
35490 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,35495:CD,35699
35492 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::JM,35699
35495 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,35699
35499 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,35500
35500 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,35513
35501 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,35504
35504 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,35509:CD,35700
35506 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,35700
35509 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,35700
35513 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,35514
35514 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,35527
35515 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::DD,35518
35518 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,35523:CD,35701
35520 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = p0 $this .fGroup::JM,35701
35523 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,35701
35527 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,35528
35528 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,35541
35529 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p0 $this .hGroup::DD,35532
35532 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,35537:CD,35702
35534 :: EXPR :: reference :: Ljava/lang/Integer :: v44 = p0 $this .hGroup::JM,35702
35537 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,35702
35541 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,35542
35542 :: EXPR :: assign :: Ljava/lang/Object :: v49 = #(31) * v48::DD,35555
35543 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .hGroupName::DD,35546
35546 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 165::CD,35551:CD,35703
35548 :: EXPR :: reference :: Ljava/lang/String :: v51 = p0 $this .hGroupName::JM,35703
35551 :: CALL :: call :: I :: v53 = v51.hashCode()::JM,35703
35555 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v49 + v54::DD,35556
35556 :: EXPR :: assign :: Ljava/lang/Object :: v56 = #(31) * v55::DD,35569
35557 :: EXPR :: reference :: Ljava/lang/Long :: v57 = p0 $this .assemblyId::DD,35560
35560 :: PRED :: IF :: Z :: if (v57 != #(null)) goto 189::CD,35565:CD,35704
35562 :: EXPR :: reference :: Ljava/lang/Long :: v58 = p0 $this .assemblyId::JM,35704
35565 :: CALL :: call :: I :: v60 = v58.hashCode()::JM,35704
35569 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v56 + v61::DD,35570
35570 :: EXPR :: assign :: Ljava/lang/Object :: v63 = #(31) * v62::DD,35583
35571 :: EXPR :: reference :: Ljava/util/Set :: v64 = p0 $this .ligands::DD,35574
35574 :: PRED :: IF :: Z :: if (v64 != #(null)) goto 213::CD,35579:CD,35705
35579 :: CALL :: call :: I :: v67 = v65.hashCode()::JM,35705
35583 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v63 + v68::DD,35584
35584 :: EXPR :: assign :: Ljava/lang/Object :: v70 = #(31) * v69::DD,35597
35585 :: EXPR :: reference :: Ljava/lang/Boolean :: v71 = p0 $this .manual::DD,35588
35588 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 239::CD,35593:CD,35706
35590 :: EXPR :: reference :: Ljava/lang/Boolean :: v72 = p0 $this .manual::JM,35706
35593 :: CALL :: call :: I :: v74 = v72.hashCode()::JM,35706
35597 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v70 + v75::DD,35598
35598 :: EXPR :: assign :: Ljava/lang/Object :: v77 = #(31) * v76::DD,35611
35599 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .pdbId::DD,35602
35602 :: PRED :: IF :: Z :: if (v78 != #(null)) goto 263::CD,35607:CD,35707
35604 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .pdbId::JM,35707
35607 :: CALL :: call :: I :: v81 = v79.hashCode()::JM,35707
35611 :: EXPR :: assign :: Ljava/lang/Object :: v83 = v77 + v82::DD,35612
35612 :: EXPR :: assign :: Ljava/lang/Object :: v84 = #(31) * v83::DD,35625
35613 :: EXPR :: reference :: Ljava/lang/String :: v85 = p0 $this .range::DD,35616
35616 :: PRED :: IF :: Z :: if (v85 != #(null)) goto 287::CD,35621:CD,35708
35618 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .range::JM,35708
35621 :: CALL :: call :: I :: v88 = v86.hashCode()::JM,35708
35625 :: EXPR :: assign :: Ljava/lang/Object :: v90 = v84 + v89::DD,35626
35626 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(31) * v90::DD,35639
35627 :: EXPR :: reference :: Ljava/lang/Integer :: v92 = p0 $this .tGroup::DD,35630
35630 :: PRED :: IF :: Z :: if (v92 != #(null)) goto 311::CD,35635:CD,35709
35632 :: EXPR :: reference :: Ljava/lang/Integer :: v93 = p0 $this .tGroup::JM,35709
35635 :: CALL :: call :: I :: v95 = v93.hashCode()::JM,35709
35639 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v91 + v96::DD,35640
35640 :: EXPR :: assign :: Ljava/lang/Object :: v98 = #(31) * v97::DD,35653
35641 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .tGroupName::DD,35644
35644 :: PRED :: IF :: Z :: if (v99 != #(null)) goto 335::CD,35649:CD,35710
35646 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .tGroupName::JM,35710
35649 :: CALL :: call :: I :: v102 = v100.hashCode()::JM,35710
35653 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v98 + v103::DD,35654
35654 :: EXPR :: assign :: Ljava/lang/Object :: v105 = #(31) * v104::DD,35667
35655 :: EXPR :: reference :: Ljava/lang/Long :: v106 = p0 $this .uid::DD,35658
35658 :: PRED :: IF :: Z :: if (v106 != #(null)) goto 359::CD,35663:CD,35711
35660 :: EXPR :: reference :: Ljava/lang/Long :: v107 = p0 $this .uid::JM,35711
35663 :: CALL :: call :: I :: v109 = v107.hashCode()::JM,35711
35667 :: EXPR :: assign :: Ljava/lang/Object :: v111 = v105 + v110::DD,35668
35668 :: EXPR :: assign :: Ljava/lang/Object :: v112 = #(31) * v111::DD,35681
35669 :: EXPR :: reference :: Ljava/lang/Integer :: v113 = p0 $this .xGroup::DD,35672
35672 :: PRED :: IF :: Z :: if (v113 != #(null)) goto 383::CD,35677:CD,35712
35674 :: EXPR :: reference :: Ljava/lang/Integer :: v114 = p0 $this .xGroup::JM,35712
35677 :: CALL :: call :: I :: v116 = v114.hashCode()::JM,35712
35681 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v112 + v117::DD,35682
35682 :: EXPR :: assign :: Ljava/lang/Object :: v119 = #(31) * v118::DD,35695
35683 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .xGroupName::DD,35686
35686 :: PRED :: IF :: Z :: if (v120 != #(null)) goto 407::CD,35691:CD,35713
35688 :: EXPR :: reference :: Ljava/lang/String :: v121 = p0 $this .xGroupName::JM,35713
35691 :: CALL :: call :: I :: v123 = v121.hashCode()::JM,35713
35695 :: EXPR :: assign :: Ljava/lang/Object :: v125 = v119 + v124::DD,35696
35696 :: NORM :: compound :: I :: return v125::DD,35455
35697 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,35471
35698 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,35485
35699 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,35499
35700 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,35513
35701 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,35527
35702 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,35541
35703 :: EXPR :: assign :: null :: PHI v54 = #(0), v53::CF,35555
35704 :: EXPR :: assign :: null :: PHI v61 = #(0), v60::CF,35569
35705 :: EXPR :: assign :: null :: PHI v68 = #(0), v67::CF,35583
35706 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::CF,35597
35707 :: EXPR :: assign :: null :: PHI v82 = #(0), v81::CF,35611
35708 :: EXPR :: assign :: null :: PHI v89 = #(0), v88::CF,35625
35709 :: EXPR :: assign :: null :: PHI v96 = #(0), v95::CF,35639
35710 :: EXPR :: assign :: null :: PHI v103 = #(0), v102::CF,35653
35711 :: EXPR :: assign :: null :: PHI v110 = #(0), v109::CF,35667
35712 :: EXPR :: assign :: null :: PHI v117 = #(0), v116::CF,35681
35713 :: EXPR :: assign :: null :: PHI v124 = #(0), v123::CF,35695
35951 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::CE,35952:CD,35956:JM,35968:JM,35970:JM,35958:JM,35960:JM,35964
35952 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::
35956 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,35957:CD,35958
35957 :: NORM :: compound :: Z :: return #(1)::DD,35952
35958 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,35959:CD,35960:CD,35964:CD,35968:JM,35970:JM,35956:JM,35958
35959 :: NORM :: compound :: Z :: return #(0)::DD,35952
35960 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,35968:JM,35970:JM,35956:JM,35958:JM,35960:JM,35964
35964 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,35968:JM,35970:JM,35956:JM,35960:JM,35964
35968 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,35969:CD,35970:CD,35974
35969 :: NORM :: compound :: Z :: return #(0)::DD,35952
35970 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
35971 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .architectureName::DD,35974
35974 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,35978:CD,35986:CD,35991
35975 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.architectureName::DD,35978
35978 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,35979:CD,35996
35979 :: NORM :: compound :: Z :: return #(0)::DD,35952
35980 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .architectureName::JM,35991
35983 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.architectureName::JM,35991
35986 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,35991
35991 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,35992:CD,35996
35992 :: NORM :: compound :: Z :: return #(0)::DD,35952
35993 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainId::DD,35996
35996 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,36000:CD,36008:CD,36013
35997 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainId::DD,36000
36000 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,36001:CD,36018
36001 :: NORM :: compound :: Z :: return #(0)::DD,35952
36002 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainId::JM,36013
36005 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainId::JM,36013
36008 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,36013
36013 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,36014:CD,36018
36014 :: NORM :: compound :: Z :: return #(0)::DD,35952
36015 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::DD,36018
36018 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,36022:CD,36030:CD,36035
36019 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.domainId::DD,36022
36022 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,36023:CD,36040
36023 :: NORM :: compound :: Z :: return #(0)::DD,35952
36024 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .domainId::JM,36035
36027 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.domainId::JM,36035
36030 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,36035
36035 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,36036:CD,36040
36036 :: NORM :: compound :: Z :: return #(0)::DD,35952
36037 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,36040
36040 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,36044:CD,36052:CD,36057
36041 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.fGroupName::DD,36044
36044 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,36045:CD,36062
36045 :: NORM :: compound :: Z :: return #(0)::DD,35952
36046 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,36057
36049 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.fGroupName::JM,36057
36052 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,36057
36057 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,36058:CD,36062
36058 :: NORM :: compound :: Z :: return #(0)::DD,35952
36059 :: EXPR :: reference :: Ljava/lang/Integer :: v35 = p0 $this .fGroup::DD,36062
36062 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,36066:CD,36074:CD,36079
36063 :: EXPR :: reference :: Ljava/lang/Integer :: v40 = v9.fGroup::DD,36066
36066 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,36067:CD,36084
36067 :: NORM :: compound :: Z :: return #(0)::DD,35952
36068 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::JM,36079
36071 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = v9.fGroup::JM,36079
36074 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,36079
36079 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,36080:CD,36084
36080 :: NORM :: compound :: Z :: return #(0)::DD,35952
36081 :: EXPR :: reference :: Ljava/lang/Integer :: v41 = p0 $this .hGroup::DD,36084
36084 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,36088:CD,36096:CD,36101
36085 :: EXPR :: reference :: Ljava/lang/Integer :: v46 = v9.hGroup::DD,36088
36088 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,36089:CD,36106
36089 :: NORM :: compound :: Z :: return #(0)::DD,35952
36090 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .hGroup::JM,36101
36093 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = v9.hGroup::JM,36101
36096 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,36101
36101 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,36102:CD,36106
36102 :: NORM :: compound :: Z :: return #(0)::DD,35952
36103 :: EXPR :: reference :: Ljava/lang/String :: v47 = p0 $this .hGroupName::DD,36106
36106 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 240::CD,36110:CD,36118:CD,36123
36107 :: EXPR :: reference :: Ljava/lang/String :: v52 = v9.hGroupName::DD,36110
36110 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 256::CD,36111:CD,36128
36111 :: NORM :: compound :: Z :: return #(0)::DD,35952
36112 :: EXPR :: reference :: Ljava/lang/String :: v48 = p0 $this .hGroupName::JM,36123
36115 :: EXPR :: reference :: Ljava/lang/String :: v49 = v9.hGroupName::JM,36123
36118 :: CALL :: call :: Z :: v51 = v48.equals(v49)::JM,36123
36123 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 256::CD,36124:CD,36128
36124 :: NORM :: compound :: Z :: return #(0)::DD,35952
36125 :: EXPR :: reference :: Ljava/lang/Long :: v53 = p0 $this .assemblyId::DD,36128
36128 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 272::CD,36132:CD,36140:CD,36145
36129 :: EXPR :: reference :: Ljava/lang/Long :: v58 = v9.assemblyId::DD,36132
36132 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 288::CD,36133:CD,36150
36133 :: NORM :: compound :: Z :: return #(0)::DD,35952
36134 :: EXPR :: reference :: Ljava/lang/Long :: v54 = p0 $this .assemblyId::JM,36145
36137 :: EXPR :: reference :: Ljava/lang/Long :: v55 = v9.assemblyId::JM,36145
36140 :: CALL :: call :: Z :: v57 = v54.equals(v55)::JM,36145
36145 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 288::CD,36146:CD,36150
36146 :: NORM :: compound :: Z :: return #(0)::DD,35952
36147 :: EXPR :: reference :: Ljava/util/Set :: v59 = p0 $this .ligands::DD,36150
36150 :: PRED :: IF :: Z :: if (v59 != #(null)) goto 304::CD,36154:CD,36162:CD,36167
36151 :: EXPR :: reference :: Ljava/util/Set :: v64 = v9.ligands::DD,36154
36154 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 322::CD,36155:CD,36172
36155 :: NORM :: compound :: Z :: return #(0)::DD,35952
36162 :: CALL :: call :: Z :: v63 = v60.equals(v61)::JM,36167
36167 :: PRED :: IF :: Z :: if (v63 != #(0)) goto 322::CD,36168:CD,36172
36168 :: NORM :: compound :: Z :: return #(0)::DD,35952
36169 :: EXPR :: reference :: Ljava/lang/Boolean :: v65 = p0 $this .manual::DD,36172
36172 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 338::CD,36176:CD,36184:CD,36189
36173 :: EXPR :: reference :: Ljava/lang/Boolean :: v70 = v9.manual::DD,36176
36176 :: PRED :: IF :: Z :: if (v70 == #(null)) goto 354::CD,36177:CD,36194
36177 :: NORM :: compound :: Z :: return #(0)::DD,35952
36178 :: EXPR :: reference :: Ljava/lang/Boolean :: v66 = p0 $this .manual::JM,36189
36181 :: EXPR :: reference :: Ljava/lang/Boolean :: v67 = v9.manual::JM,36189
36184 :: CALL :: call :: Z :: v69 = v66.equals(v67)::JM,36189
36189 :: PRED :: IF :: Z :: if (v69 != #(0)) goto 354::CD,36190:CD,36194
36190 :: NORM :: compound :: Z :: return #(0)::DD,35952
36191 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .pdbId::DD,36194
36194 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 370::CD,36198:CD,36206:CD,36211
36195 :: EXPR :: reference :: Ljava/lang/String :: v76 = v9.pdbId::DD,36198
36198 :: PRED :: IF :: Z :: if (v76 == #(null)) goto 386::CD,36199:CD,36216
36199 :: NORM :: compound :: Z :: return #(0)::DD,35952
36200 :: EXPR :: reference :: Ljava/lang/String :: v72 = p0 $this .pdbId::JM,36211
36203 :: EXPR :: reference :: Ljava/lang/String :: v73 = v9.pdbId::JM,36211
36206 :: CALL :: call :: Z :: v75 = v72.equals(v73)::JM,36211
36211 :: PRED :: IF :: Z :: if (v75 != #(0)) goto 386::CD,36212:CD,36216
36212 :: NORM :: compound :: Z :: return #(0)::DD,35952
36213 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .range::DD,36216
36216 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 402::CD,36220:CD,36228:CD,36233
36217 :: EXPR :: reference :: Ljava/lang/String :: v82 = v9.range::DD,36220
36220 :: PRED :: IF :: Z :: if (v82 == #(null)) goto 418::CD,36221:CD,36238
36221 :: NORM :: compound :: Z :: return #(0)::DD,35952
36222 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .range::JM,36233
36225 :: EXPR :: reference :: Ljava/lang/String :: v79 = v9.range::JM,36233
36228 :: CALL :: call :: Z :: v81 = v78.equals(v79)::JM,36233
36233 :: PRED :: IF :: Z :: if (v81 != #(0)) goto 418::CD,36234:CD,36238
36234 :: NORM :: compound :: Z :: return #(0)::DD,35952
36235 :: EXPR :: reference :: Ljava/lang/Integer :: v83 = p0 $this .tGroup::DD,36238
36238 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 434::CD,36242:CD,36250:CD,36255
36239 :: EXPR :: reference :: Ljava/lang/Integer :: v88 = v9.tGroup::DD,36242
36242 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 450::CD,36243:CD,36260
36243 :: NORM :: compound :: Z :: return #(0)::DD,35952
36244 :: EXPR :: reference :: Ljava/lang/Integer :: v84 = p0 $this .tGroup::JM,36255
36247 :: EXPR :: reference :: Ljava/lang/Integer :: v85 = v9.tGroup::JM,36255
36250 :: CALL :: call :: Z :: v87 = v84.equals(v85)::JM,36255
36255 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 450::CD,36256:CD,36260
36256 :: NORM :: compound :: Z :: return #(0)::DD,35952
36257 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .tGroupName::DD,36260
36260 :: PRED :: IF :: Z :: if (v89 != #(null)) goto 466::CD,36264:CD,36272:CD,36277
36261 :: EXPR :: reference :: Ljava/lang/String :: v94 = v9.tGroupName::DD,36264
36264 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 482::CD,36265:CD,36282
36265 :: NORM :: compound :: Z :: return #(0)::DD,35952
36266 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .tGroupName::JM,36277
36269 :: EXPR :: reference :: Ljava/lang/String :: v91 = v9.tGroupName::JM,36277
36272 :: CALL :: call :: Z :: v93 = v90.equals(v91)::JM,36277
36277 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 482::CD,36278:CD,36282
36278 :: NORM :: compound :: Z :: return #(0)::DD,35952
36279 :: EXPR :: reference :: Ljava/lang/Long :: v95 = p0 $this .uid::DD,36282
36282 :: PRED :: IF :: Z :: if (v95 != #(null)) goto 498::CD,36286:CD,36294:CD,36299
36283 :: EXPR :: reference :: Ljava/lang/Long :: v100 = v9.uid::DD,36286
36286 :: PRED :: IF :: Z :: if (v100 == #(null)) goto 514::CD,36287:CD,36304
36287 :: NORM :: compound :: Z :: return #(0)::DD,35952
36288 :: EXPR :: reference :: Ljava/lang/Long :: v96 = p0 $this .uid::JM,36299
36291 :: EXPR :: reference :: Ljava/lang/Long :: v97 = v9.uid::JM,36299
36294 :: CALL :: call :: Z :: v99 = v96.equals(v97)::JM,36299
36299 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 514::CD,36300:CD,36304
36300 :: NORM :: compound :: Z :: return #(0)::DD,35952
36301 :: EXPR :: reference :: Ljava/lang/Integer :: v101 = p0 $this .xGroup::DD,36304
36304 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 530::CD,36308:CD,36316:CD,36321
36305 :: EXPR :: reference :: Ljava/lang/Integer :: v106 = v9.xGroup::DD,36308
36308 :: PRED :: IF :: Z :: if (v106 == #(null)) goto 546::CD,36309:CD,36326
36309 :: NORM :: compound :: Z :: return #(0)::DD,35952
36310 :: EXPR :: reference :: Ljava/lang/Integer :: v102 = p0 $this .xGroup::JM,36321
36313 :: EXPR :: reference :: Ljava/lang/Integer :: v103 = v9.xGroup::JM,36321
36316 :: CALL :: call :: Z :: v105 = v102.equals(v103)::JM,36321
36321 :: PRED :: IF :: Z :: if (v105 != #(0)) goto 546::CD,36322:CD,36326
36322 :: NORM :: compound :: Z :: return #(0)::DD,35952
36323 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .xGroupName::DD,36326
36326 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 562::CD,36330:CD,36338:CD,36343
36327 :: EXPR :: reference :: Ljava/lang/String :: v112 = v9.xGroupName::DD,36330
36330 :: PRED :: IF :: Z :: if (v112 == #(null)) goto 578::CD,36331:CD,36345
36331 :: NORM :: compound :: Z :: return #(0)::DD,35952
36332 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .xGroupName::JM,36343
36335 :: EXPR :: reference :: Ljava/lang/String :: v109 = v9.xGroupName::JM,36343
36338 :: CALL :: call :: Z :: v111 = v108.equals(v109)::JM,36343
36343 :: PRED :: IF :: Z :: if (v111 != #(0)) goto 578::CD,36344:CD,36345
36344 :: NORM :: compound :: Z :: return #(0)::DD,35952
36345 :: NORM :: compound :: Z :: return #(1)::DD,35952
36511 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::CE,36512:CD,36516:JM,36528:JM,36518:JM,36522:JM,36526
36512 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::
36516 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,36517:CD,36518:CD,36522:CD,36526:JM,36528:JM,36516
36517 :: NORM :: compound :: Z :: return #(0)::CF,36512
36518 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,36528:JM,36516:JM,36518:JM,36522:JM,36526
36522 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,36528:JM,36516:JM,36518:JM,36522:JM,36526
36526 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,36527:CD,36528:CD,36532
36527 :: NORM :: compound :: Z :: return #(0)::CF,36512
36528 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
36529 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .surname::DD,36532
36532 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,36536:CD,36544:CD,36549
36533 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.surname::DD,36536
36536 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,36550:CD,36554:CD,36573:CD,36574
36538 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .surname::JM,36549
36541 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.surname::JM,36549
36544 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,36549
36549 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,36550:CD,36554:CD,36573:CD,36574
36550 :: NORM :: compound :: Z :: return #(0)::CF,36512
36551 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .initials::DD,36554
36554 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 75::CD,36558:CD,36566:CD,36571
36555 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.initials::DD,36558
36558 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 93::CD,36574
36560 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .initials::JM,36571
36563 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.initials::JM,36571
36566 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,36571
36571 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 93::CD,36574
36573 :: NORM :: compound :: Z :: return v24::CF,36512
36574 :: EXPR :: assign :: null :: PHI v24 = #(0), #(1)::CF,36573
36600 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::CE,36601:CD,36605:JM,36609:JM,36613:JM,36617:JM,36619:JM,36607
36601 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::
36605 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,36606:CD,36607
36606 :: NORM :: compound :: Z :: return #(1)::CF,36601
36607 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,36608:CD,36609:CD,36613:CD,36617:JM,36619:JM,36605:JM,36607
36608 :: NORM :: compound :: Z :: return #(0)::CF,36601
36609 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,36609:JM,36613:JM,36617:JM,36619:JM,36605:JM,36607
36613 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,36609:JM,36613:JM,36617:JM,36619:JM,36605
36617 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,36618:CD,36619:CD,36623
36618 :: NORM :: compound :: Z :: return #(0)::CF,36601
36619 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
36620 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainID1::DD,36623
36623 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,36627:CD,36635:CD,36640
36624 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainID1::DD,36627
36627 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,36628:CD,36645
36628 :: NORM :: compound :: Z :: return #(0)::CF,36601
36629 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainID1::JM,36640
36632 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainID1::JM,36640
36635 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,36640
36640 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,36641:CD,36645
36641 :: NORM :: compound :: Z :: return #(0)::CF,36601
36642 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainID2::DD,36645
36645 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,36649:CD,36657:CD,36662
36646 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainID2::DD,36649
36649 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,36650:CD,36667
36650 :: NORM :: compound :: Z :: return #(0)::CF,36601
36651 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainID2::JM,36662
36654 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainID2::JM,36662
36657 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,36662
36662 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,36663:CD,36667
36663 :: NORM :: compound :: Z :: return #(0)::CF,36601
36664 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::DD,36667
36667 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,36671:CD,36679:CD,36684
36668 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.insCode1::DD,36671
36671 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,36672:CD,36689
36672 :: NORM :: compound :: Z :: return #(0)::CF,36601
36673 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .insCode1::JM,36684
36676 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.insCode1::JM,36684
36679 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,36684
36684 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,36685:CD,36689
36685 :: NORM :: compound :: Z :: return #(0)::CF,36601
36686 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,36689
36689 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,36693:CD,36701:CD,36706
36690 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.insCode2::DD,36693
36693 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,36694:CD,36711
36694 :: NORM :: compound :: Z :: return #(0)::CF,36601
36695 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,36706
36698 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.insCode2::JM,36706
36701 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,36706
36706 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,36707:CD,36711
36707 :: NORM :: compound :: Z :: return #(0)::CF,36601
36708 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::DD,36711
36711 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,36715:CD,36723:CD,36728
36712 :: EXPR :: reference :: Ljava/lang/String :: v40 = v9.resnum1::DD,36715
36715 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,36716:CD,36733
36716 :: NORM :: compound :: Z :: return #(0)::CF,36601
36717 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::JM,36728
36720 :: EXPR :: reference :: Ljava/lang/String :: v37 = v9.resnum1::JM,36728
36723 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,36728
36728 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,36729:CD,36733
36729 :: NORM :: compound :: Z :: return #(0)::CF,36601
36730 :: EXPR :: reference :: Ljava/lang/String :: v41 = p0 $this .resnum2::DD,36733
36733 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,36737:CD,36745:CD,36750
36734 :: EXPR :: reference :: Ljava/lang/String :: v46 = v9.resnum2::DD,36737
36737 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,36738:CD,36752
36738 :: NORM :: compound :: Z :: return #(0)::CF,36601
36739 :: EXPR :: reference :: Ljava/lang/String :: v42 = p0 $this .resnum2::JM,36750
36742 :: EXPR :: reference :: Ljava/lang/String :: v43 = v9.resnum2::JM,36750
36745 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,36750
36750 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,36751:CD,36752
36751 :: NORM :: compound :: Z :: return #(0)::CF,36601
36752 :: NORM :: compound :: Z :: return #(1)::CF,36601
36962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::CE,36963:CD,36967:JM,36979:JM,36981:JM,36969:JM,36971:JM,36975
36963 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::JM,37409:JM,37431:JM,47974:JM,121065:JM,124120
36967 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,36968:CD,36969
36968 :: NORM :: compound :: Z :: return #(1)::CF,36963
36969 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,36970:CD,36971:CD,36975:CD,36979:JM,36981:JM,36967:JM,36969
36970 :: NORM :: compound :: Z :: return #(0)::CF,36963
36971 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,36979:JM,36981:JM,36967:JM,36969:JM,36971:JM,36975
36975 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,36979:JM,36981:JM,36967:JM,36971:JM,36975
36979 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,36980:CD,36981:CD,36985
36980 :: NORM :: compound :: Z :: return #(0)::CF,36963
36981 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
36982 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainId::DD,36985
36985 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,36989:CD,36997:CD,37002
36986 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainId::DD,36989
36989 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,36990:CD,37007
36990 :: NORM :: compound :: Z :: return #(0)::CF,36963
36991 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainId::JM,37002
36994 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainId::JM,37002
36997 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,37002
37002 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,37003:CD,37007
37003 :: NORM :: compound :: Z :: return #(0)::CF,36963
37004 :: EXPR :: reference :: Ljava/lang/Character :: v17 = p0 $this .insCode::DD,37007
37007 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,37011:CD,37019:CD,37024
37008 :: EXPR :: reference :: Ljava/lang/Character :: v22 = v9.insCode::DD,37011
37011 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,37012:CD,37029
37012 :: NORM :: compound :: Z :: return #(0)::CF,36963
37013 :: EXPR :: reference :: Ljava/lang/Character :: v18 = p0 $this .insCode::JM,37024
37016 :: EXPR :: reference :: Ljava/lang/Character :: v19 = v9.insCode::JM,37024
37019 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,37024
37024 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,37025:CD,37029
37025 :: NORM :: compound :: Z :: return #(0)::CF,36963
37026 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::DD,37029
37029 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,37033:CD,37041:CD,37046
37030 :: EXPR :: reference :: Ljava/lang/Integer :: v28 = v9.seqNum::DD,37033
37033 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,37034:CD,37048
37034 :: NORM :: compound :: Z :: return #(0)::CF,36963
37035 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::JM,37046
37038 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = v9.seqNum::JM,37046
37041 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,37046
37046 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,37047:CD,37048
37047 :: NORM :: compound :: Z :: return #(0)::CF,36963
37048 :: NORM :: compound :: Z :: return #(1)::CF,36963
37204 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::CE,37205:CD,37209:CD,37210:JM,37212
37205 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::
37209 :: EXPR :: assign :: Z :: v4=p1 $o  INSTANCEOF org.biojava.nbio.structure.secstruc.SecStrucInfo::DD,37210
37210 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 10::CD,37211:CD,37212:CD,37219
37211 :: NORM :: compound :: Z :: return #(0)::CF,37205
37212 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $o ::
37213 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v7 = p0 $this .type::DD,37219
37216 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v8 = v6.type::DD,37219
37219 :: PRED :: IF :: Z :: if (v7 != v8) goto 28::CD,37220:CD,37221
37220 :: NORM :: compound :: Z :: return #(1)::CF,37205
37221 :: NORM :: compound :: Z :: return #(0)::CF,37205
37347 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::CE,37348:CD,37352:JM,37360:JM,37364:JM,37366:JM,37354:JM,37356
37348 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::
37352 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,37353:CD,37354
37353 :: NORM :: compound :: Z :: return #(1)::CF,37348
37354 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,37355:CD,37356:CD,37360:CD,37364:JM,37366:JM,37352:JM,37354
37355 :: NORM :: compound :: Z :: return #(0)::CF,37348
37356 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,37360:JM,37364:JM,37366:JM,37352:JM,37354:JM,37356
37360 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,37360:JM,37364:JM,37366:JM,37352:JM,37356
37364 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,37365:CD,37366:CD,37370
37365 :: NORM :: compound :: Z :: return #(0)::CF,37348
37366 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
37367 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chain::DD,37370
37370 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,37374:CD,37382:CD,37387
37371 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chain::DD,37374
37374 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,37375:CD,37392
37375 :: NORM :: compound :: Z :: return #(0)::CF,37348
37376 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chain::JM,37387
37379 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chain::JM,37387
37382 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,37387
37387 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,37388:CD,37392
37388 :: NORM :: compound :: Z :: return #(0)::CF,37348
37389 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = p0 $this .end::DD,37392
37392 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,37396:CD,37404:CD,37409
37393 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = v9.end::DD,37396
37396 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,37397:CD,37414
37397 :: NORM :: compound :: Z :: return #(0)::CF,37348
37404 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,37409:CL,36962
37409 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,37410:CD,37414
37410 :: NORM :: compound :: Z :: return #(0)::CF,37348
37411 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v23 = p0 $this .start::DD,37414
37414 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,37418:CD,37426:CD,37431
37415 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v28 = v9.start::DD,37418
37418 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,37419:CD,37433
37419 :: NORM :: compound :: Z :: return #(0)::CF,37348
37426 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,37431:CL,36962
37431 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,37432:CD,37433
37432 :: NORM :: compound :: Z :: return #(0)::CF,37348
37433 :: NORM :: compound :: Z :: return #(1)::CF,37348
37473 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::CE,37474:CD,37478:JM,37488:JM,37490:JM,37480:JM,37484
37474 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::
37478 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,37479:CD,37480:CD,37484:CD,37488:JM,37490:JM,37478
37479 :: NORM :: compound :: Z :: return #(0)::DD,37474
37480 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,37488:JM,37490:JM,37478:JM,37480:JM,37484
37484 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,37488:JM,37490:JM,37478:JM,37480:JM,37484
37488 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,37489:CD,37490:CD,37494
37489 :: NORM :: compound :: Z :: return #(0)::DD,37474
37490 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
37491 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .siteID::DD,37494
37494 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,37498:CD,37506:CD,37511
37495 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.siteID::DD,37498
37498 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,37512:CD,37519
37500 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .siteID::JM,37511
37503 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.siteID::JM,37511
37506 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,37511
37511 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,37512:CD,37519
37512 :: NORM :: compound :: Z :: return #(0)::DD,37474
37513 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .groups::DD,37519
37516 :: EXPR :: reference :: Ljava/util/List :: v18 = v9.groups::DD,37519
37519 :: PRED :: IF :: Z :: if (v17 == v18) goto 94::CD,37523:CD,37540
37520 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::DD,37523
37523 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 92::CD,37530:CD,37535:CD,37536
37530 :: CALL :: call :: Z :: v23 = v20.equals(v21)::JM,37535
37535 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 94::CD,37536:CD,37540
37536 :: NORM :: compound :: Z :: return #(0)::DD,37474
37537 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .evCode::DD,37540
37540 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 111::CD,37544:CD,37552:CD,37557
37541 :: EXPR :: reference :: Ljava/lang/String :: v29 = v9.evCode::DD,37544
37544 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 127::CD,37558:CD,37562
37546 :: EXPR :: reference :: Ljava/lang/String :: v25 = p0 $this .evCode::JM,37557
37549 :: EXPR :: reference :: Ljava/lang/String :: v26 = v9.evCode::JM,37557
37552 :: CALL :: call :: Z :: v28 = v25.equals(v26)::JM,37557
37557 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 127::CD,37558:CD,37562
37558 :: NORM :: compound :: Z :: return #(0)::DD,37474
37559 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::DD,37562
37562 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 144::CD,37566:CD,37574:CD,37579
37563 :: EXPR :: reference :: Ljava/lang/String :: v35 = v9.description::DD,37566
37566 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 160::CD,37580:CD,37581
37568 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .description::JM,37579
37571 :: EXPR :: reference :: Ljava/lang/String :: v32 = v9.description::JM,37579
37574 :: CALL :: call :: Z :: v34 = v31.equals(v32)::JM,37579
37579 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 160::CD,37580:CD,37581
37580 :: NORM :: compound :: Z :: return #(0)::DD,37474
37581 :: NORM :: compound :: Z :: return #(1)::DD,37474
37777 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::CE,37778:CD,37781:CD,37785:CD,37789:CD,37793
37778 :: EXIT :: exit :: Ljava/util/TreeMap :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::JM,33435
37781 :: CALL :: call :: Ljava/lang/String :: v4 = convertStreamToString(p1 $spaceGroupIS )::CL,40409
37785 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: v6 = fromXML(v4)::JM,37793:JM,37789:CL,40467
37789 :: CALL :: call :: Ljava/util/TreeMap :: v8 = v6.getMapProperty()::JM,37793:JM,37789
37793 :: NORM :: compound :: Ljava/util/TreeMap :: return v8::DD,37778
37799 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.initPath()::CD,37802:CD,37804
37802 :: EXPR :: reference :: Ljava/io/File :: v2 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::DD,37804
37804 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 28::JM,40533:JM,40540:CD,37809:CD,37810:CD,37818
37809 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::DD,37818
37810 :: CALL :: call :: Ljava/lang/String :: v8 = v4.getCacheFilePath()::CL,40562
37818 :: EXPR :: modify :: Ljava/io/File :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path = v6::
37828 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::CF,37829:CD,37831:CD,37833:CD,37834:CD,37842
37829 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::JM,33543:JM,33629
37831 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.ENUM$VALUES::DD,37833
37833 :: EXPR :: assign :: I :: v4 = v2.length::DD,37834
37834 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::DD,37842
37842 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v5::CF,37829
37880 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.values()::CF,37881:CD,37883:CD,37885:CD,37886:CD,37894
37881 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.values()::JM,33739
37883 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = org.biojava.nbio.structure.ExperimentalTechnique.ENUM$VALUES::DD,37885
37885 :: EXPR :: assign :: I :: v4 = v2.length::DD,37886
37886 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = new org.biojava.nbio.structure.ExperimentalTechnique[]::DD,37894
37894 :: NORM :: compound :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v5::CF,37881
37953 :: CALL :: call :: Ljava/util/ResourceBundle :: v6 = getBundle(p1 $bundleName )::JM,37957
37957 :: EXPR :: modify :: Ljava/util/ResourceBundle :: p0 $this .RESOURCE_BUNDLE = v6::
37961 :: CALL :: call :: V :: v7.printStackTrace()::
38738 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent))::CL,41443
38742 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb))::CL,41443
38746 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.gz))::CL,41443
38750 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.gz))::CL,41443
38754 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.Z))::CL,41443
38758 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.Z))::CL,41443
38786 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif))::CL,41443
38790 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif))::CL,41443
38794 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif.gz))::CL,41443
38798 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif.gz))::CL,41443
38940 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::CE,38941:CD,38944:CD,38949:CD,38951:CD,38956:CD,38960:CD,38965:CD,38993:CD,38994:JM,34389:JM,34359
38941 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::JM,41416
38944 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,38965
38949 :: EXPR :: reference :: Ljava/lang/String :: v6 = java.io.File.separator::JM,38965
38951 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,38965
38956 :: CALL :: call :: Ljava/lang/String :: v10 = v8.toString()::JM,38965
38960 :: CALL :: call :: Z :: v12 = p1 $file .startsWith(v10)::JM,38994:JM,38965
38965 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 53::CF,38994:CF,38966:CD,38971:CD,38979:CD,38984:CD,38989
38966 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::JM,38994
38971 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(v17)::
38979 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $file .substring(#(1))::JM,38994:JM,38965
38984 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v14.append(v23)::JM,38994
38989 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,38994
38993 :: NORM :: compound :: Ljava/lang/String :: return v28::DD,38941
38994 :: EXPR :: assign :: null :: PHI v28 = p1 $file , v27::CF,38993
39061 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39068 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39075 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39082 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39089 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39096 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39103 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v18 = new java.util.LinkedHashMap::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39110 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39133 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39160 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39167 :: NORM :: declaration :: Ljava/util/ArrayList :: v33 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39174 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39181 :: NORM :: declaration :: Ljava/util/ArrayList :: v37 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39191 :: NORM :: declaration :: Ljava/util/ArrayList :: v39 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39241 :: NORM :: declaration :: Ljava/util/ArrayList :: v51 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:JM,41467
39322 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.InputStream)::CD,39327:CD,39332
39327 :: CALL :: call :: Ljava/io/BufferedReader :: v5 = p0 $this .getBufferedReader(p1 $inStream )::CL,41574
39332 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .parsePDBFile(v5)::CL,41604
39358 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(java.lang.String)::JM,42452:JM,42455:CD,39368
39368 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getStructure(v4)::CL,42467
40409 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.convertStreamToString(java.io.InputStream)::CD,40413:CD,40414:CD,40423:CD,40440:CD,40444:CD,40445
40413 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,40444:CF,40414
40414 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
40423 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
40428 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,40444
40433 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.xtal.SymoplibParser.newline::
40435 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
40440 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,40444
40444 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,40428:CD,40433:CD,40435:CD,40440
40445 :: CALL :: call :: Ljava/lang/String :: v19 = v7.toString()::
40467 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::CE,40468:CD,40471:CD,40477:CD,40481:CD,40485:CD,40486:CD,40494:CD,40499:CD,40500
40468 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::JM,37793:JM,37789
40471 :: NORM :: declaration :: [Ljava/lang/Class :: v5 = new java.lang.Class[]::JM,40481:JM,40499:JM,40477:JM,40494
40477 :: CALL :: call :: Ljavax/xml/bind/JAXBContext :: v9 = newInstance(v5)::JM,40481:JM,40499:JM,40477:JM,40494
40481 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v11 = v9.createUnmarshaller()::JM,40481:JM,40499:JM,40494
40485 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v12 = new java.io.ByteArrayInputStream::JM,40499:JM,40494:JM,40471
40486 :: CALL :: call :: [B :: v14 = p1 $xml .getBytes()::JM,40471
40494 :: CALL :: call :: Ljava/lang/Object :: v17 = v11.unmarshal(v12)::JM,40499:JM,40494
40499 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,40500
40500 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: return v18::DD,40468
40533 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .initPdbFilePath()::CL,45161
40540 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .initCacheFilePath()::CL,45487
40562 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::CE,40563:CD,40569
40563 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::
40566 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,40569
40569 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,40563
41338 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,41352:JM,41467
41352 :: PRED :: IF :: Z :: if (p1 $path  != #(null)) goto 61::JM,40533:JM,40540:CD,41357:CD,41373:CD,41416
41357 :: CALL :: call :: Ljava/lang/String :: v20 = v17.getPdbFilePath()::JM,41416:CL,47181
41373 :: CALL :: call :: Ljava/lang/String :: v11 = expandUserHome(p1 $path )::JM,41416:CL,38940
41388 :: NORM :: declaration :: Ljava/io/File :: v27 = new java.io.File::JM,41352:JM,41467
41396 :: CALL :: call :: Ljava/lang/String :: v30 = getServerName()::CL,47190
41402 :: CALL :: call :: V :: p0 $this .initPaths()::CL,47287
41416 :: EXPR :: assign :: null :: PHI v26 = v20, v11::CF,41388:JM,41352:JM,41467
41443 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.addExtension(java.lang.String)::CD,41451
41448 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .extensions::
41451 :: CALL :: call :: Z :: v6 = v4.add(p1 $s )::
41467 :: CALL :: call :: V :: p0 $this .setDefault()::CL,47482
41480 :: NORM :: declaration :: Ljava/util/Date :: v4 = new java.util.Date::DD,41485
41485 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = v4::
41488 :: NORM :: declaration :: Ljava/util/Date :: v7 = new java.util.Date::DD,41493
41493 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = v7::
41496 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v9 = new java.text.SimpleDateFormat::DD,41504
41504 :: EXPR :: modify :: Ljava/text/DateFormat :: p0 $this .dateFormat = v9::
41507 :: EXPR :: modify :: F :: p0 $this .resolution = #(99.0 f)::
41510 :: EXPR :: modify :: F :: p0 $this .rFree = #(1.0 f)::
41513 :: NORM :: declaration :: Ljava/util/HashMap :: v15 = new java.util.HashMap::DD,41517
41517 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = v15::
41520 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: v17 = new org.biojava.nbio.structure.PDBCrystallographicInfo::DD,41524
41524 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = v17::
41574 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getBufferedReader(java.io.InputStream)::CD,41586:CD,41587
41586 :: NORM :: declaration :: Ljava/io/BufferedReader :: v5 = new java.io.BufferedReader::CF,41587
41587 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v6 = new java.io.InputStreamReader::
41604 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.BufferedReader)::JM,47585:JM,47554:JM,47592:JM,41480:JM,41513:JM,47564:JM,47599:JM,41488:JM,41520:JM,47571:JM,47606:JM,41496:JM,47578:CD,41636:CD,41643:CD,41650:CD,41670:CD,41692:CD,41698:CD,41713:CD,41719:CD,41725:CD,41731:CD,41743:CD,41753:CD,42104:CD,42108:CD,42115:CD,42120:CD,42126:CD,42130:CD,42137:CD,42141:CD,42148:CD,42152:JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,41852:JM,41981:JM,41918:JM,42047
41636 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::
41643 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::
41650 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::
41670 :: NORM :: declaration :: Ljava/util/ArrayList :: v21 = new java.util.ArrayList::
41689 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .sourceLines::
41692 :: CALL :: call :: V :: v24.clear()::
41695 :: EXPR :: reference :: Ljava/util/List :: v26 = p0 $this .compndLines::
41698 :: CALL :: call :: V :: v26.clear()::
41710 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .compounds::
41713 :: CALL :: call :: V :: v30.clear()::
41716 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .helixList::
41719 :: CALL :: call :: V :: v32.clear()::
41722 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .strandList::
41725 :: CALL :: call :: V :: v34.clear()::
41728 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .turnList::
41731 :: CALL :: call :: V :: v36.clear()::
41743 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::
41750 :: EXPR :: reference :: Ljava/util/Map :: v40 = p0 $this .siteToResidueMap::
41753 :: CALL :: call :: V :: v40.clear()::
41767 :: CALL :: call :: Z :: v48 = v46.equals(#())::JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41772 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 778::CD,41773:CD,41775:CD,41780:JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41773 :: EXPR :: reference :: Ljava/lang/String :: v50 = org.biojava.nbio.structure.io.PDBFileParser.NEWLINE::JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41775 :: CALL :: call :: Z :: v52 = v46.equals(v50)::JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41780 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 271::CD,41782:CD,41787:JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41782 :: CALL :: call :: Z :: v55 = v46.startsWith(#(TER))::JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41787 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 778::CD,41788:CD,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41788 :: CALL :: call :: Z :: v58 = v46.startsWith(#(END))::JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41793 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 291::CD,41795:CD,41799:JM,41793:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41795 :: CALL :: call :: I :: v60 = v46.length()::JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41799 :: PRED :: IF :: Z :: if (v60 >= #(6)) goto 337::CD,41802:CD,41807:CD,41812:CD,41817:CD,41826:CD,41832:CD,41836:CD,41841:JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41802 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
41807 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v139.append(v46)::JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41812 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v143.append(#(<))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41817 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41826 :: CALL :: call :: Ljava/lang/String :: v63 = v46.substring(#(0), #(6))::JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41832 :: CALL :: call :: Ljava/lang/String :: v65 = v63.trim()::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41836 :: CALL :: call :: Z :: v68 = v65.equals(#(ATOM))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41841 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 366::CD,41842:CD,41847:CD,41852:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41842 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,47642
41847 :: CALL :: call :: Z :: v71 = v65.equals(#(SEQRES))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41852 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 384::CD,41853:CD,41858:CD,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41853 :: CALL :: call :: V :: p0 $this .pdb_SEQRES_Handler(v46)::CL,48841
41858 :: CALL :: call :: Z :: v74 = v65.equals(#(HETATM))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41863 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 402::CD,41864:CD,41869:CD,41874:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41864 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,47642
41869 :: CALL :: call :: Z :: v77 = v65.equals(#(MODEL))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41874 :: PRED :: IF :: Z :: if (v77 == #(0)) goto 420::CD,41875:CD,41880:CD,41885:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41875 :: CALL :: call :: V :: p0 $this .pdb_MODEL_Handler(v46)::CL,49105
41880 :: CALL :: call :: Z :: v80 = v65.equals(#(HEADER))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41885 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 438::CD,41886:CD,41891:CD,41896:JM,41863:JM,41959:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41886 :: CALL :: call :: V :: p0 $this .pdb_HEADER_Handler(v46)::CL,49221
41891 :: CALL :: call :: Z :: v83 = v65.equals(#(AUTHOR))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41896 :: PRED :: IF :: Z :: if (v83 == #(0)) goto 456::CD,41897:CD,41902:CD,41907:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41897 :: CALL :: call :: V :: p0 $this .pdb_AUTHOR_Handler(v46)::CL,49477
41902 :: CALL :: call :: Z :: v86 = v65.equals(#(TITLE))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41907 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 474::CD,41908:CD,41913:CD,41918:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,42014:JM,42047
41908 :: CALL :: call :: V :: p0 $this .pdb_TITLE_Handler(v46)::CL,49548
41913 :: CALL :: call :: Z :: v89 = v65.equals(#(SOURCE))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41918 :: PRED :: IF :: Z :: if (v89 == #(0)) goto 498::CD,41922:CD,41928:CD,41933:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41919 :: EXPR :: reference :: Ljava/util/List :: v157 = p0 $this .sourceLines::
41922 :: CALL :: call :: Z :: v159 = v157.add(v46)::JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41928 :: CALL :: call :: Z :: v92 = v65.equals(#(COMPND))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41933 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 522::CD,41937:CD,41943:CD,41948:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41934 :: EXPR :: reference :: Ljava/util/List :: v160 = p0 $this .compndLines::
41937 :: CALL :: call :: Z :: v162 = v160.add(v46)::JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
41943 :: CALL :: call :: Z :: v95 = v65.equals(#(JRNL))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41948 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 540::CD,41949:CD,41954:CD,41959:JM,41863:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41949 :: CALL :: call :: V :: p0 $this .pdb_JRNL_Handler(v46)::CL,49698
41954 :: CALL :: call :: Z :: v98 = v65.equals(#(EXPDTA))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41959 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 558::CD,41960:CD,41965:CD,41970:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41960 :: CALL :: call :: V :: p0 $this .pdb_EXPDTA_Handler(v46)::CL,49783
41965 :: CALL :: call :: Z :: v101 = v65.equals(#(CRYST1))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41970 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 576::CD,41971:CD,41976:CD,41981:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,42077:JM,41918:JM,42014:JM,42047
41971 :: CALL :: call :: V :: p0 $this .pdb_CRYST1_Handler(v46)::CL,49862
41976 :: CALL :: call :: Z :: v104 = v65.startsWith(#(MTRIX))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41981 :: PRED :: IF :: Z :: if (v104 == #(0)) goto 594::CD,41982:CD,41987:CD,41992:JM,41863:JM,41959:JM,41896:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41982 :: CALL :: call :: V :: p0 $this .pdb_MTRIXn_Handler(v46)::CL,50216
41987 :: CALL :: call :: Z :: v107 = v65.equals(#(REMARK))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41992 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 612::CD,41993:CD,41998:CD,42003:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
41993 :: CALL :: call :: V :: p0 $this .pdb_REMARK_Handler(v46)::CL,50570
41998 :: CALL :: call :: Z :: v110 = v65.equals(#(CONECT))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42003 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 630::CD,42004:CD,42009:CD,42014:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42047
42004 :: CALL :: call :: V :: p0 $this .pdb_CONECT_Handler(v46)::CL,50895
42009 :: CALL :: call :: Z :: v113 = v65.equals(#(REVDAT))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42014 :: PRED :: IF :: Z :: if (v113 == #(0)) goto 648::CD,42015:CD,42020:CD,42025:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42015 :: CALL :: call :: V :: p0 $this .pdb_REVDAT_Handler(v46)::CL,51258
42020 :: CALL :: call :: Z :: v116 = v65.equals(#(DBREF))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42025 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 666::CD,42026:CD,42031:CD,42036:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42026 :: CALL :: call :: V :: p0 $this .pdb_DBREF_Handler(v46)::CL,51353
42031 :: CALL :: call :: Z :: v119 = v65.equals(#(SITE))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42036 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 684::CD,42037:CD,42042:CD,42047:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014
42037 :: CALL :: call :: V :: p0 $this .pdb_SITE_Handler(v46)::CL,51678
42042 :: CALL :: call :: Z :: v122 = v65.equals(#(SSBOND))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42047 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 702::CD,42048:CD,42053:CD,42058:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42048 :: CALL :: call :: V :: p0 $this .pdb_SSBOND_Handler(v46)::CL,52282
42053 :: CALL :: call :: Z :: v125 = v65.equals(#(LINK))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42058 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 717::CD,42059:CD,42067:CD,42071
42059 :: CALL :: call :: V :: p0 $this .pdb_LINK_Handler(v46)::CL,52582
42067 :: CALL :: call :: Z :: v128 = v126.isParseSecStruc()::JM,42071:CL,52838
42071 :: PRED :: IF :: Z :: if (v128 == #(0)) goto 778::CD,42072:CD,42077:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,41918:JM,42014:JM,42047:JM,41793:JM,41799:JM,41772:JM,41780:JM,41787:JM,42108
42072 :: CALL :: call :: Z :: v131 = v65.equals(#(HELIX))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42077 :: PRED :: IF :: Z :: if (v131 == #(0)) goto 748::CD,42078:CD,42083:CD,42088:JM,41863:JM,41959:JM,41896:JM,41992:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42078 :: CALL :: call :: V :: p0 $this .pdb_HELIX_Handler(v46)::CL,52847
42083 :: CALL :: call :: Z :: v134 = v65.equals(#(SHEET))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42088 :: PRED :: IF :: Z :: if (v134 == #(0)) goto 766::CD,42089:CD,42094:CD,42099:JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42089 :: CALL :: call :: V :: p0 $this .pdb_SHEET_Handler(v46)::CL,53073
42094 :: CALL :: call :: Z :: v137 = v65.equals(#(TURN))::JM,41863:JM,41959:JM,41896:JM,41992:JM,42088:JM,42025:JM,42058:JM,41933:JM,41841:JM,41874:JM,41970:JM,41907:JM,42003:JM,42099:JM,42036:JM,41852:JM,41948:JM,41885:JM,41981:JM,42077:JM,41918:JM,42014:JM,42047
42099 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 778::CD,42100:JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
42100 :: CALL :: call :: V :: p0 $this .pdb_TURN_Handler(v46)::CL,53299
42104 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $buf .readLine()::JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41772:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
42108 :: PRED :: IF :: Z :: if (v46 != #(null)) goto 248::CD,41767:CD,41772:CD,42104:JM,41793:JM,41799:JM,41863:JM,41992:JM,42058:JM,41933:JM,41874:JM,42003:JM,41948:JM,41885:JM,42077:JM,42014:JM,41959:JM,41896:JM,42088:JM,42025:JM,41841:JM,41970:JM,41907:JM,42099:JM,41780:JM,42036:JM,41787:JM,42108:JM,41852:JM,41981:JM,41918:JM,42047
42115 :: CALL :: call :: V :: p0 $this .makeCompounds(v177, v178)::CL,53525
42120 :: CALL :: call :: V :: p0 $this .triggerEndFileChecks()::CL,53661
42126 :: CALL :: call :: Z :: v183 = v181.shouldCreateAtomBonds()::JM,42130:CL,54128
42130 :: PRED :: IF :: Z :: if (v183 == #(0)) goto 817::CD,42131
42131 :: CALL :: call :: V :: p0 $this .formBonds()::CL,54137
42137 :: CALL :: call :: Z :: v187 = v185.shouldCreateAtomCharges()::JM,42141:CL,54201
42141 :: PRED :: IF :: Z :: if (v187 == #(0)) goto 831::CD,42142
42142 :: CALL :: call :: V :: p0 $this .addCharges()::CL,54210
42148 :: CALL :: call :: Z :: v191 = v189.isParseSecStruc()::JM,42152:CL,52838
42152 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 855::CD,42156:CD,42160
42156 :: CALL :: call :: Z :: v194 = v192.isHeaderOnly()::JM,42160:CL,54222
42160 :: PRED :: IF :: Z :: if (v194 != #(0)) goto 855::CD,42161
42161 :: CALL :: call :: V :: p0 $this .setSecStruc()::CL,54231
42446 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = #(null)::
42449 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = #(null)::
42452 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $name ::
42455 :: CALL :: call :: V :: p0 $this .init()::CL,54496
42467 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(org.biojava.nbio.structure.StructureIdentifier)::CD,42472:CD,42477
42472 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v5 = p1 $strucId .loadStructure(p0 $this )::CL,55048
42477 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $strucId .reduce(v5)::CL,55065
45161 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initPdbFilePath()::CD,45165:CD,45169:CD,45360:CD,45362:CD,45367:CD,45389
45165 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_DIR))::JM,45169:JM,45174:JM,45178:JM,45165:JM,45389
45169 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 118::CD,45170:CD,45174:CD,45178:CD,45240:CD,45243:CD,45248:JM,45389
45170 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::JM,45174:JM,45178:JM,45389
45174 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,45174:JM,45178
45178 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 118::CD,45187:CD,45192:CD,45196:CD,45240:CD,45243:CD,45248
45187 :: NORM :: declaration :: Ljava/io/File :: v61 = new java.io.File::
45192 :: CALL :: call :: Z :: v64 = v61.isDirectory()::JM,45196
45196 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 97::CD,45221:CD,45226:CD,45230:CD,45389
45221 :: CALL :: call :: Ljava/lang/String :: v77 = getProperty(#(java.io.tmpdir))::JM,45221:JM,45389
45226 :: CALL :: call :: Z :: v66 = v61.canWrite()::JM,45230
45230 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 297::CF,45389
45240 :: CALL :: call :: Ljava/util/Map :: v13 = getenv()::
45243 :: CALL :: call :: Z :: v15 = v13.containsKey(#(PDB_DIR))::JM,45248
45248 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 260::CD,45249:CD,45254:CD,45255:CD,45259:CD,45263:CD,45331:CD,45355:CD,45389
45249 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.get(#(PDB_DIR))::JM,45254
45254 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,45259:JM,45263
45255 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,45259:JM,45263
45259 :: CALL :: call :: Z :: v22 = v20.isEmpty()::JM,45259:JM,45263
45263 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 260::CD,45264:CD,45269:CD,45278:CD,45283:CD,45287:CD,45331:CD,45355:CD,45389
45264 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(PDB_DIR))::JM,45269
45269 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::DD,45389
45278 :: NORM :: declaration :: Ljava/io/File :: v41 = new java.io.File::
45283 :: CALL :: call :: Z :: v44 = v41.isDirectory()::JM,45287
45287 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 237::CD,45312:CD,45317:CD,45321:CD,45389
45312 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,45312:JM,45389
45317 :: CALL :: call :: Z :: v46 = v41.canWrite()::JM,45321
45321 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 297::CF,45389
45331 :: CALL :: call :: Ljava/lang/String :: v25 = getProperty(#(java.io.tmpdir))::JM,45331:JM,45389
45355 :: CALL :: call :: Ljava/lang/String :: v34 = setProperty(#(PDB_DIR), v25)::
45360 :: EXPR :: reference :: Ljava/lang/String :: v80 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,45367
45362 :: CALL :: call :: Z :: v82 = v78.endsWith(v80)::JM,45367
45367 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 328::CF,45368:CD,45369:CD,45377:CD,45379:CD,45384
45368 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v83 = new java.lang.StringBuilder::
45369 :: CALL :: call :: Ljava/lang/String :: v85 = valueOf(v78)::
45377 :: EXPR :: reference :: Ljava/lang/String :: v87 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
45379 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v83.append(v87)::
45384 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
45389 :: EXPR :: assign :: null :: PHI v78 = v77, v6, v6, v57, v37, v37, v25::JM,45367
45487 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initCacheFilePath()::CD,45491:CD,45495:CD,45756:CD,45758:CD,45763:CD,45785
45491 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_CACHE_DIR))::JM,45491:JM,45495:JM,45785
45495 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 138::CD,45504:CD,45509:CD,45513:CD,45582:CD,45585:CD,45590
45504 :: NORM :: declaration :: Ljava/io/File :: v69 = new java.io.File::
45509 :: CALL :: call :: Z :: v72 = v69.isDirectory()::JM,45513
45513 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 87::CD,45538:CD,45543:CD,45547:CD,45785
45538 :: CALL :: call :: Ljava/lang/String :: v92 = getProperty(#(java.io.tmpdir))::JM,45538:JM,45785
45543 :: CALL :: call :: Z :: v74 = v69.canWrite()::JM,45547
45547 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 385::CF,45785:CD,45572:CD,45576
45572 :: CALL :: call :: Ljava/lang/String :: v82 = getProperty(#(java.io.tmpdir))::JM,45572:JM,45785
45576 :: CALL :: call :: Ljava/lang/String :: v84 = setProperty(#(PDB_CACHE_DIR), v82)::
45582 :: CALL :: call :: Ljava/util/Map :: v8 = getenv()::
45585 :: CALL :: call :: Z :: v10 = v8.containsKey(#(PDB_CACHE_DIR))::JM,45590
45590 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 282::CF,45678:CD,45591:CD,45596:CD,45605:CD,45610:CD,45614:CD,45686:CD,45690
45591 :: CALL :: call :: Ljava/lang/Object :: v39 = v8.get(#(PDB_CACHE_DIR))::JM,45596
45596 :: EXPR :: assign :: Ljava/lang/Object :: v40 = CHECKCAST v39::DD,45785
45605 :: NORM :: declaration :: Ljava/io/File :: v44 = new java.io.File::
45610 :: CALL :: call :: Z :: v47 = v44.isDirectory()::JM,45614
45614 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 237::CD,45639:CD,45644:CD,45648:CD,45785
45639 :: CALL :: call :: Ljava/lang/String :: v65 = getProperty(#(java.io.tmpdir))::JM,45639:JM,45785
45644 :: CALL :: call :: Z :: v49 = v44.canWrite()::JM,45648
45648 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 385::CF,45785:CD,45673
45673 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,45673:JM,45785
45678 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
45679 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdbFilePath::
45686 :: CALL :: call :: Z :: v16 = v12.canWrite()::JM,45690
45690 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 341::CD,45714:CD,45720:CD,45751:CD,45785
45691 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdbFilePath::DD,45785
45714 :: CALL :: call :: Ljava/lang/String :: v37 = setProperty(#(PDB_CACHE_DIR), v31)::
45720 :: CALL :: call :: Ljava/lang/String :: v19 = getProperty(#(java.io.tmpdir))::JM,45720:JM,45785
45751 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(PDB_CACHE_DIR), v19)::
45756 :: EXPR :: reference :: Ljava/lang/String :: v95 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,45763
45758 :: CALL :: call :: Z :: v97 = v93.endsWith(v95)::JM,45763
45763 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 416::CF,45764:CD,45765:CD,45773:CD,45775:CD,45780
45764 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
45765 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v93)::
45773 :: EXPR :: reference :: Ljava/lang/String :: v102 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
45775 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(v102)::
45780 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
45785 :: EXPR :: assign :: null :: PHI v93 = v92, v6, v82, v65, v40, v57, v31, v19::JM,45763
47181 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::CE,47182:CD,47188
47182 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::JM,41416
47185 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,47188
47188 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,47182
47190 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getServerName()::CD,47193:CD,47197
47193 :: CALL :: call :: Ljava/lang/String :: v4 = getProperty(#(PDB.FILE.SERVER))::JM,47202:JM,47220:JM,47206:JM,47193:JM,47226:JM,47197
47197 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 23::CD,47198:CD,47202:CD,47206:JM,47220:JM,47226
47198 :: CALL :: call :: Ljava/lang/String :: v7 = v4.trim()::JM,47202:JM,47220:JM,47206:JM,47226
47202 :: CALL :: call :: Z :: v9 = v7.isEmpty()::JM,47202:JM,47220:JM,47206:JM,47226
47206 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 42::CD,47215:CD,47220:JM,47202:JM,47206:JM,47226
47215 :: CALL :: call :: Z :: v13 = v4.startsWith(#(http://))::JM,47202:JM,47220:JM,47206:JM,47226
47220 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 90::CD,47221:CD,47226:JM,47202:JM,47220:JM,47206
47221 :: CALL :: call :: Z :: v16 = v4.startsWith(#(ftp://))::JM,47202:JM,47220:JM,47206:JM,47226
47226 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 90::CD,47235:CD,47240:CD,47245
47235 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
47240 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(v4)::JM,47202:JM,47220:JM,47206:JM,47226
47245 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::JM,47202:JM,47206
47287 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.initPaths()::CD,47291:CD,47295:CD,47299:CD,47320:CD,47321:CD,47322:CD,47343:CD,47344:CD,47345:CD,47352:CD,47383:CD,47384:CD,47409:CD,47410:CD,47412:CD,47413:CD,47414:CD,47415
47291 :: CALL :: call :: [Ljava/lang/String :: v4 = p0 $this .getSplitDirPath()::JM,47383:JM,47320:CL,59936:CL,59928
47295 :: CALL :: call :: [Ljava/lang/String :: v6 = p0 $this .getObsoleteDirPath()::JM,47409:JM,47343:CL,59952:CL,59944
47299 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
47305 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(/))::
47310 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v4[v20]::
47314 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v7.append(v15)::
47319 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,47412
47320 :: EXPR :: assign :: I :: v11 = v4.length::CF,47321
47321 :: PRED :: IF :: Z :: if (v20 < v11) goto 31::CF,47322:CD,47305:CD,47314:CD,47319:CD,47320:CD,47412
47322 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
47328 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(#(/))::
47333 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v6[v30]::
47337 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v21.append(v26)::
47342 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,47413
47343 :: EXPR :: assign :: I :: v23 = v6.length::CF,47344
47344 :: PRED :: IF :: Z :: if (v30 < v23) goto 77::CD,47328:CD,47337:CD,47342:CD,47343:CD,47413
47345 :: CALL :: call :: Ljava/lang/String :: v32 = v7.toString()::
47352 :: CALL :: call :: Ljava/lang/String :: v34 = v21.toString()::
47359 :: EXPR :: reference :: Ljava/io/File :: v35 = p0 $this .path::DD,47362
47362 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v35::
47366 :: NORM :: declaration :: Ljava/io/File :: v37 = new java.io.File::DD,47379
47367 :: EXPR :: reference :: Ljava/io/File :: v38 = p0 $this .splitDirPath::
47370 :: EXPR :: reference :: Ljava/lang/Object :: v39 = v4[v42]::
47379 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v37::
47382 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,47414
47383 :: EXPR :: assign :: I :: v36 = v4.length::CF,47384
47384 :: PRED :: IF :: Z :: if (v42 < v36) goto 133::CD,47366:CD,47382:CD,47383:CD,47414
47385 :: EXPR :: reference :: Ljava/io/File :: v43 = p0 $this .path::DD,47388
47388 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v43::
47392 :: NORM :: declaration :: Ljava/io/File :: v45 = new java.io.File::DD,47405
47393 :: EXPR :: reference :: Ljava/io/File :: v46 = p0 $this .obsoleteDirPath::
47396 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v6[v50]::
47405 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v45::
47408 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,47415
47409 :: EXPR :: assign :: I :: v44 = v6.length::CF,47410
47410 :: PRED :: IF :: Z :: if (v50 < v44) goto 176::CD,47392:CD,47408:CD,47409:CD,47415
47412 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,47319:DD,47321:CF,47320
47413 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,47342:DD,47344:CF,47343
47414 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,47382:DD,47384:CF,47383
47415 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::DD,47408:DD,47410:CF,47409
47482 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.setDefault()::
47486 :: EXPR :: modify :: Z :: p0 $this .parseSecStruc = #(0)::
47489 :: EXPR :: modify :: Z :: p0 $this .alignSeqRes = #(1)::
47492 :: EXPR :: modify :: Z :: p0 $this .parseCAOnly = #(0)::
47495 :: EXPR :: modify :: Z :: p0 $this .headerOnly = #(0)::
47498 :: EXPR :: modify :: Z :: p0 $this .updateRemediatedFiles = #(0)::
47501 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .fullAtomNames = #(null)::
47504 :: EXPR :: modify :: I :: p0 $this .maxAtoms = #(2147483647)::
47507 :: EXPR :: modify :: I :: p0 $this .atomCaThreshold = #(500000)::
47510 :: EXPR :: modify :: Z :: p0 $this .parseBioAssembly = #(0)::
47513 :: EXPR :: modify :: Z :: p0 $this .createAtomBonds = #(0)::
47516 :: EXPR :: modify :: Z :: p0 $this .createAtomCharges = #(1)::
47519 :: EXPR :: modify :: Z :: p0 $this .useInternalChainId = #(0)::
47554 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:DD,47558
47558 :: EXPR :: modify :: Ljava/util/List :: p0 $this .models = v4::
47561 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #()::
47564 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:DD,47568
47568 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = v7::
47571 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:DD,47575
47575 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v9::
47578 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:DD,47582
47582 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = v11::
47585 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBHeader :: v13 = new org.biojava.nbio.structure.PDBHeader::DD,47589
47589 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = v13::
47592 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:DD,47596
47596 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = v15::
47599 :: NORM :: declaration :: Ljava/util/ArrayList :: v17 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:DD,47603
47603 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = v17::
47606 :: NORM :: declaration :: Ljava/util/ArrayList :: v19 = new java.util.ArrayList::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:DD,47610
47610 :: EXPR :: modify :: Ljava/util/List :: p0 $this .hetAtoms = v19::
47633 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::CE,47634:CD,47640
47634 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::JM,124254
47637 :: EXPR :: reference :: Z :: v3 = p0 $this .parseCAOnly::DD,47640
47640 :: NORM :: compound :: Z :: return v3::CF,47634
47642 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_ATOM_Handler(java.lang.String)::CD,47650:CD,47654:JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47650 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,47654:CL,54222
47654 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 18::CD,47656:CD,47665:CD,47694:CD,47698:CD,47703:CD,47792:CD,47798:CD,47802:CD,47808:CD,47812:CD,47818:CD,47822:CD,47828:CD,47833:CD,47843:JM,60337:JM,60331:JM,60334:CD,47853:CD,47858:CD,47882:CD,47914:CD,47946:CD,47947:CD,47953:JM,48353:JM,48340:JM,48326:JM,48312:JM,48440:JM,48456:JM,48345:JM,48250:JM,48349:JM,48255:CD,47969:CD,47974:CD,48089:CD,48099:CD,48143:CD,48515:CD,48517:CD,48520:JM,48385:JM,48365:JM,48216:JM,47740:JM,48415
47656 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(21), #(22))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47662 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v12 = p0 $this .current_chain::DD,47665
47665 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 68::CF,48515:CD,47666:JM,59970:JM,59989:JM,59975:JM,59982:CD,47676:CD,47686
47666 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v14 = new org.biojava.nbio.structure.ChainImpl::DD,47670
47670 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v14::
47676 :: CALL :: call :: V :: v16.setChainID(v11)::CL,60013
47680 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .current_model::
47683 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v20 = p0 $this .current_chain::
47686 :: CALL :: call :: Z :: v22 = v19.add(v20)::
47694 :: CALL :: call :: Ljava/lang/String :: v26 = v24.getChainID()::JM,47703:CL,60024
47698 :: CALL :: call :: Z :: v28 = v11.equals(v26)::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47703 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 215::CF,48517:CD,47710:CD,47724:CD,47730:CD,47750:CD,47775:CD,47780:CD,48516
47710 :: CALL :: call :: V :: v29.addGroup(v30)::CL,60033
47724 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p0 $this .isKnownChain(v34, v35)::JM,47730:JM,48516:CL,60275
47730 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 138::CD,47731:CD,47735:CD,47740:CD,47744:CD,48516
47731 :: CALL :: call :: Ljava/lang/String :: v39 = v37.getChainID()::JM,47740:CL,60024
47735 :: CALL :: call :: Z :: v41 = v39.equals(v11)::JM,47740:JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,48349:JM,48415:JM,48255
47740 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 148::CF,48516:CD,47744
47744 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v44 = p0 $this .isKnownChain(v11, v42)::JM,48516:CL,60275
47750 :: PRED :: IF :: Z :: if (v45 != #(null)) goto 178::CD,47751:JM,59970:JM,59989:JM,59975:JM,59982:CD,47761
47751 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v46 = new org.biojava.nbio.structure.ChainImpl::DD,47755
47755 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v46::
47761 :: CALL :: call :: V :: v48.setChainID(v11)::CL,60013
47766 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v45::
47769 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .current_model::JM,47780
47772 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v51 = p0 $this .current_chain::JM,47780
47775 :: CALL :: call :: Z :: v53 = v50.contains(v51)::JM,47780
47780 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 215::CF,48517:CD,47787
47781 :: EXPR :: reference :: Ljava/util/List :: v54 = p0 $this .current_model::
47784 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v55 = p0 $this .current_chain::
47787 :: CALL :: call :: Z :: v57 = v54.add(v55)::
47792 :: CALL :: call :: Ljava/lang/String :: v61 = p1 $line .substring(#(0), #(6))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47798 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47802 :: CALL :: call :: Ljava/lang/String :: v67 = p1 $line .substring(#(17), #(20))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47808 :: CALL :: call :: Ljava/lang/String :: v69 = v67.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47812 :: CALL :: call :: Ljava/lang/String :: v72 = p1 $line .substring(#(22), #(26))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47818 :: CALL :: call :: Ljava/lang/String :: v74 = v72.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47822 :: CALL :: call :: Ljava/lang/String :: v77 = p1 $line .substring(#(26), #(27))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47828 :: CALL :: call :: C :: v79 = v77.charAt(#(0))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47833 :: CALL :: call :: Ljava/lang/Character :: v81 = valueOf(v79)::JM,48353:JM,48326:JM,48456:JM,47946:JM,47858:JM,48340:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,48349:JM,48255
47843 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v74)::JM,48353:JM,48326:JM,48456:JM,47946:JM,47858:JM,48340:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,48349:JM,48255
47853 :: CALL :: call :: Z :: v92 = v63.equals(#(ATOM))::JM,48353:JM,48326:JM,48456:JM,47946:JM,47858:JM,48340:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,48349:JM,48255
47858 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 322::CD,47859:CD,47864:CD,47868
47859 :: CALL :: call :: Ljava/lang/Character :: v101 = get1LetterCode(v69)::CL,60348
47864 :: CALL :: call :: Ljava/lang/Character :: v94 = get1LetterCode(v69)::JM,47868:CL,60348
47868 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 349::CD,47869
47869 :: CALL :: call :: Ljava/lang/Character :: v97 = valueOf(#(88))::
47879 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v103 = p0 $this .current_group::DD,47882
47882 :: PRED :: IF :: Z :: if (v103 != #(null)) goto 400::CD,47883:CD,47896:CD,47903:CD,47910:CF,47914
47883 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v105 = p0 $this .getNewGroup(v63, v102, v69)::CL,60417
47896 :: CALL :: call :: V :: v106.setPDBName(v69)::CL,60526:CL,60495
47903 :: CALL :: call :: V :: v108.setResidueNumber(v86)::CL,60537
47910 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v110)::CL,60548
47914 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 447::CF,47946:CD,47915:CD,47928:CD,47935:CD,47942
47915 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v113 = p0 $this .getNewGroup(v63, v102, v69)::CL,60417
47928 :: CALL :: call :: V :: v114.setPDBName(v69)::CL,60526:CL,60495
47935 :: CALL :: call :: V :: v116.setResidueNumber(v86)::CL,60537
47942 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v118)::CL,60548
47946 :: NORM :: declaration :: Ljava/lang/Character :: v120 = new java.lang.Character::JM,48353:JM,47858:JM,48440:JM,48456:JM,48345:JM,47946:JM,48349:JM,48255:JM,48032:JM,48385:JM,48326:JM,48365:JM,48340:JM,47703:JM,48216:JM,48312:JM,48250:JM,47740:JM,48415
47947 :: CALL :: call :: Ljava/lang/String :: v123 = p1 $line .substring(#(16), #(17))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47953 :: CALL :: call :: C :: v125 = v123.charAt(#(0))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
47969 :: CALL :: call :: Z :: v131 = v86.equals(v129)::JM,47974:CL,36962
47974 :: PRED :: IF :: Z :: if (v131 != #(0)) goto 561::CD,47981:CD,47988:CD,47991:CD,48004:CD,48011:CD,48018:CD,48023:CD,48027:CD,48032:CD,48520
47981 :: CALL :: call :: V :: v157.addGroup(v158)::CL,60033
47988 :: CALL :: call :: V :: v160.trimToSize()::CL,60642
47991 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v163 = p0 $this .getNewGroup(v63, v102, v69)::CL,60417
48004 :: CALL :: call :: V :: v164.setPDBName(v69)::CL,60526:CL,60495
48011 :: CALL :: call :: V :: v166.setResidueNumber(v86)::CL,60537
48018 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v168)::CL,60548
48023 :: CALL :: call :: Ljava/lang/Character :: v133 = valueOf(#(32))::JM,48032
48027 :: CALL :: call :: Z :: v135 = v120.equals(v133)::JM,48032
48032 :: PRED :: IF :: Z :: if (v135 != #(0)) goto 646::CF,48520:CD,48035:CD,48043:CD,48048:CD,48053:CD,48058:CD,48066:CD,48074:CD,48078
48035 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v137 = new java.lang.StringBuilder::
48043 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v137.append(v140)::
48048 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( ))::
48053 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(#(null))::
48058 :: CALL :: call :: Ljava/lang/String :: v149 = v147.toString()::
48066 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v152 = p0 $this .getCorrectAltLocGroup(v120, v63, v102, v69)::JM,48520:CL,60751
48074 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v154 = v152.getChain()::JM,48078:CL,55773
48078 :: PRED :: IF :: Z :: if (v154 != #(null)) goto 646::CF,48520:CD,48082
48082 :: CALL :: call :: V :: v152.setChain(v155)::CL,60997
48086 :: EXPR :: reference :: I :: v171 = p0 $this .atomCount::DD,48089
48089 :: EXPR :: assign :: Ljava/lang/Object :: v172 = v171 + #(1)::DD,48090
48090 :: EXPR :: modify :: I :: p0 $this .atomCount = v172::
48093 :: EXPR :: reference :: I :: v173 = p0 $this .atomCount::DD,48099
48096 :: EXPR :: reference :: I :: v174 = p0 $this .my_ATOM_CA_THRESHOLD::DD,48099
48099 :: PRED :: IF :: Z :: if (v173 != v174) goto 713::CD,48102:CD,48110:CD,48115:CD,48120:CD,48131:CD,48134
48102 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v176 = new java.lang.StringBuilder::
48107 :: EXPR :: reference :: I :: v179 = p0 $this .my_ATOM_CA_THRESHOLD::
48110 :: CALL :: call :: Ljava/lang/StringBuilder :: v181 = v176.append(v179)::
48115 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v181.append(#( atoms in this struct...))::
48120 :: CALL :: call :: Ljava/lang/String :: v186 = v184.toString()::
48128 :: EXPR :: reference :: Ljava/util/List :: v188 = p0 $this .seqResChains::
48131 :: CALL :: call :: V :: v188.clear()::
48134 :: CALL :: call :: V :: p0 $this .switchCAOnly()::CL,61027
48137 :: EXPR :: reference :: I :: v191 = p0 $this .atomCount::DD,48143
48140 :: EXPR :: reference :: I :: v192 = p0 $this .load_max_atoms::DD,48143
48143 :: PRED :: IF :: Z :: if (v191 != v192) goto 784::CD,48146:CD,48154:CD,48159:CD,48164:CD,48174:CD,48179:CD,48184:CD,48199
48146 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v339 = new java.lang.StringBuilder::
48151 :: EXPR :: reference :: I :: v342 = p0 $this .load_max_atoms::
48154 :: CALL :: call :: Ljava/lang/StringBuilder :: v344 = v339.append(v342)::
48159 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v344.append(#(in this protein struc...))::
48164 :: CALL :: call :: Ljava/lang/String :: v349 = v347.toString()::
48174 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v352 = new java.lang.StringBuilder::
48179 :: CALL :: call :: Ljava/lang/StringBuilder :: v356 = v352.append(p1 $line )::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48184 :: CALL :: call :: Ljava/lang/String :: v358 = v356.toString()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48193 :: EXPR :: reference :: I :: v193 = p0 $this .atomCount::DD,48199
48196 :: EXPR :: reference :: I :: v194 = p0 $this .load_max_atoms::DD,48199
48199 :: PRED :: IF :: Z :: if (v193 <= v194) goto 800::CD,48201:CD,48210:JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48201 :: CALL :: call :: Ljava/lang/String :: v197 = p1 $line .substring(#(12), #(16))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48207 :: EXPR :: reference :: Z :: v198 = p0 $this .parseCAonly::DD,48210
48210 :: PRED :: IF :: Z :: if (v198 == #(0)) goto 835::CD,48211:CD,48216:CD,48228:CD,48232:JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48211 :: CALL :: call :: Z :: v201 = v197.equals(#( CA ))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48216 :: PRED :: IF :: Z :: if (v201 != #(0)) goto 835::CD,48228:CD,48232
48228 :: CALL :: call :: [Ljava/lang/String :: v204 = v202.getAcceptedAtomNames()::JM,48232:CL,61106
48232 :: PRED :: IF :: Z :: if (v204 == #(null)) goto 923::CD,48236:CD,48240:CD,48258:CD,48259:CD,48268:CD,48274:CD,48278:JM,61125:JM,61130:CD,48286:CD,48294:CD,48298:CD,48302:CD,48308:CD,48312:CD,48316:CD,48322:CD,48326:CD,48330:CD,48336:CD,48340:CD,48344:CD,48357:CD,48361:CD,48365:CD,48381:CD,48385:CD,48411:CD,48415:CD,48473:CD,48477:CD,48497:CD,48502:CD,48521:CD,48522:JM,48353:JM,48456:JM,47946:JM,47858:JM,47703:JM,48216:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48255
48236 :: CALL :: call :: [Ljava/lang/String :: v207 = v205.getAcceptedAtomNames()::JM,48240:CL,61106
48240 :: EXPR :: assign :: I :: v208 = v207.length::DD,48258
48242 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v207[v215]::JM,48250:JM,48255
48246 :: CALL :: call :: Ljava/lang/String :: v211 = v197.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48250 :: CALL :: call :: Z :: v213 = v209.equals(v211)::JM,48250:JM,48255:JM,48353:JM,47858:JM,48340:JM,48326:JM,48312:JM,48440:JM,48456:JM,48345:JM,47946:JM,48349
48255 :: PRED :: IF :: Z :: if (v213 == #(0)) goto 892::CD,48257:CD,48258:CD,48521:CD,48522
48257 :: EXPR :: assign :: Ljava/lang/Object :: v214 = v215 + #(1)::DD,48521
48258 :: PRED :: IF :: Z :: if (v215 < v208) goto 870::CF,48522:CD,48246:CD,48250:CD,48255
48259 :: PRED :: IF :: Z :: if (v216 != #(0)) goto 923::CD,48268:CD,48274:CD,48278:JM,61125:JM,61130:CD,48286:CD,48294:CD,48298:CD,48302:CD,48308:CD,48312:CD,48316:CD,48322:CD,48326:CD,48330:CD,48336:CD,48340:CD,48344:CD,48357:CD,48361:CD,48365:CD,48381:CD,48385:CD,48411:CD,48415:CD,48473:CD,48477:CD,48497:CD,48502:JM,48353:JM,48456:JM,47946:JM,47858:JM,47703:JM,48216:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48255
48268 :: CALL :: call :: Ljava/lang/String :: v219 = p1 $line .substring(#(6), #(11))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48274 :: CALL :: call :: Ljava/lang/String :: v221 = v219.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48278 :: CALL :: call :: I :: v223 = parseInt(v221)::JM,48353:JM,47858:JM,48340:JM,48326:JM,48312:JM,48440:JM,48456:JM,48345:JM,48250:JM,47946:JM,48349:JM,48255
48286 :: CALL :: call :: V :: v224.setPDBserial(v223)::CL,61172
48294 :: CALL :: call :: Ljava/lang/String :: v229 = v197.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48298 :: CALL :: call :: V :: v224.setName(v229)::CL,61207
48302 :: CALL :: call :: Ljava/lang/String :: v234 = p1 $line .substring(#(30), #(38))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48308 :: CALL :: call :: Ljava/lang/String :: v236 = v234.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48312 :: CALL :: call :: D :: v238 = parseDouble(v236)::JM,48353:JM,47858:JM,48340:JM,48326:JM,48312:JM,48440:JM,48456:JM,48345:JM,48250:JM,47946:JM,48349:JM,48255
48316 :: CALL :: call :: Ljava/lang/String :: v241 = p1 $line .substring(#(38), #(46))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48322 :: CALL :: call :: Ljava/lang/String :: v243 = v241.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48326 :: CALL :: call :: D :: v245 = parseDouble(v243)::JM,48353:JM,47858:JM,48340:JM,48326:JM,48312:JM,48440:JM,48456:JM,48345:JM,48250:JM,47946:JM,48349:JM,48255
48330 :: CALL :: call :: Ljava/lang/String :: v248 = p1 $line .substring(#(46), #(54))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48336 :: CALL :: call :: Ljava/lang/String :: v250 = v248.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48340 :: CALL :: call :: D :: v252 = parseDouble(v250)::JM,48353:JM,47858:JM,48340:JM,48326:JM,48312:JM,48440:JM,48456:JM,48345:JM,48250:JM,47946:JM,48349:JM,48255
48344 :: NORM :: declaration :: [D :: v254 = new []::
48345 :: EXPR :: modify :: D :: v254[#(0)] = v238::
48349 :: EXPR :: modify :: D :: v254[#(1)] = v245::
48353 :: EXPR :: modify :: D :: v254[#(2)] = v252::
48357 :: CALL :: call :: V :: v224.setCoords(v254)::CL,61218
48361 :: CALL :: call :: I :: v259 = p1 $line .length()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48365 :: PRED :: IF :: Z :: if (v259 <= #(59)) goto 1082::CD,48366:CD,48372:JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48366 :: CALL :: call :: Ljava/lang/String :: v263 = p1 $line .substring(#(54), #(60))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48372 :: CALL :: call :: Ljava/lang/String :: v265 = v263.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48381 :: CALL :: call :: I :: v273 = p1 $line .length()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48385 :: PRED :: IF :: Z :: if (v273 <= #(65)) goto 1115::CD,48386:CD,48392:JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48386 :: CALL :: call :: Ljava/lang/String :: v277 = p1 $line .substring(#(60), #(66))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48392 :: CALL :: call :: Ljava/lang/String :: v279 = v277.trim()::JM,48353:JM,48326:JM,48456:JM,47946:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48411 :: CALL :: call :: I :: v289 = p1 $line .length()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48415 :: PRED :: IF :: Z :: if (v289 <= #(77)) goto 1168::CD,48416:CD,48422:CD,48426:CD,48432:CD,48436:CD,48440:CD,48468:JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48416 :: CALL :: call :: Ljava/lang/String :: v314 = p1 $line .substring(#(76), #(78))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48422 :: CALL :: call :: Ljava/lang/String :: v316 = v314.trim()::JM,48353:JM,48326:JM,48456:JM,47946:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48255
48426 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v318 = valueOfIgnoreCase(v316)::CL,61251
48432 :: CALL :: call :: Ljava/lang/String :: v292 = v197.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48436 :: CALL :: call :: I :: v294 = v292.length()::JM,48353:JM,47858:JM,48340:JM,48326:JM,48312:JM,48440:JM,48456:JM,48345:JM,48250:JM,47946:JM,48349:JM,48255
48440 :: PRED :: IF :: Z :: if (v294 != #(4)) goto 1192::CD,48441:CD,48448:CD,48452:CD,48456:JM,48385:JM,48353:JM,48326:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48441 :: CALL :: call :: Ljava/lang/String :: v306 = v197.substring(#(0), #(1))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48448 :: CALL :: call :: Ljava/lang/String :: v297 = v197.trim()::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48452 :: CALL :: call :: I :: v299 = v297.length()::JM,48353:JM,47858:JM,48340:JM,48326:JM,48312:JM,48440:JM,48456:JM,48345:JM,48250:JM,47946:JM,48349:JM,48255
48456 :: PRED :: IF :: Z :: if (v299 <= #(1)) goto 1224::CD,48457:CD,48463:JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48457 :: CALL :: call :: Ljava/lang/String :: v302 = v197.substring(#(0), #(2))::JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48463 :: CALL :: call :: Ljava/lang/String :: v304 = v302.trim()::JM,48353:JM,47858:JM,48340:JM,48326:JM,48312:JM,48440:JM,48456:JM,48345:JM,48250:JM,47946:JM,48349:JM,48255
48468 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v309 = valueOfIgnoreCase(v307)::CL,61251
48473 :: CALL :: call :: V :: v224.setElement(v321)::CL,61295
48477 :: PRED :: IF :: Z :: if (v170 == #(null)) goto 1262::CD,48478:CD,48486
48478 :: CALL :: call :: V :: v170.addAtom(v224)::CL,61306
48486 :: CALL :: call :: V :: v323.addAtom(v224)::CL,61306
48497 :: CALL :: call :: Z :: v331 = v327.hasAtom(v329)::JM,48502:CL,61496
48502 :: PRED :: IF :: Z :: if (v331 != #(0)) goto 1300::CD,48506
48506 :: CALL :: call :: V :: v332.addAtom(v224)::CL,61306
48515 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1)::DD,48517
48516 :: EXPR :: assign :: null :: PHI v45 = v37, v44::DD,47750:DD,47766
48517 :: EXPR :: assign :: null :: PHI v58 = v23, #(1), #(1)::DD,47914:JM,48385:JM,48353:JM,48326:JM,48456:JM,47946:JM,48365:JM,47858:JM,48340:JM,47703:JM,48216:JM,48312:JM,48440:JM,48345:JM,48250:JM,47740:JM,48349:JM,48415:JM,48255
48520 :: EXPR :: assign :: null :: PHI v170 = #(null), #(null), v152, v152::DD,48477
48521 :: EXPR :: assign :: null :: PHI v215 = #(0), v214::DD,48257:DD,48258
48522 :: EXPR :: assign :: null :: PHI v216 = #(1), #(0)::DD,48259
48841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SEQRES_Handler(java.lang.String)::CD,48846:CD,48852:CD,48856:CD,48862:CD,48868:CD,48872:CD,48880:CD,48888:CD,48893:CD,48898
48846 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(0), #(6))::JM,48898
48852 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,48898
48856 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(#(11), #(12))::JM,48898
48862 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(17))::JM,48898
48868 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::JM,48898
48872 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $line .substring(#(18))::JM,48898
48877 :: EXPR :: reference :: I :: v23 = p0 $this .lengthCheck::DD,48880
48880 :: PRED :: IF :: Z :: if (v23 != #(-1)) goto 58::CF,48888:CD,48881:JM,48898
48881 :: CALL :: call :: I :: v26 = parseInt(v19)::JM,48898
48888 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v27 = new java.util.StringTokenizer::JM,48983
48893 :: CALL :: call :: Z :: v32 = v9.equals(#(SEQRES))::JM,48898
48898 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 87::CD,48903:CD,48915:CD,48979:CD,48983:CD,48987:CD,48993:CD,49008:CD,49021
48903 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v35 = p0 $this .isKnownChain(v13, v33)::JM,48909:CL,60275
48909 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v35::
48912 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v36 = p0 $this .current_chain::DD,48915
48915 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 211::CD,48916:JM,59970:JM,59989:JM,59975:JM,59982:CD,48926:JM,48983
48916 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v37 = new org.biojava.nbio.structure.ChainImpl::DD,48920
48920 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v37::
48926 :: CALL :: call :: V :: v39.setChainID(v13)::CL,60013
48931 :: CALL :: call :: Ljava/lang/String :: v44 = v27.nextToken()::
48935 :: CALL :: call :: Ljava/lang/Character :: v46 = get1LetterCode(v44)::CL,60348
48939 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v49 = p0 $this .getNewGroup(#(ATOM), v46, v44)::JM,48946:CL,60417
48946 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v49::
48952 :: CALL :: call :: V :: v50.setPDBName(v44)::CL,60526:CL,60495
48956 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .current_group::DD,48959
48959 :: EXPR :: assign :: Z :: v53=v52 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,48960
48960 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 197::CD,48965
48965 :: CALL :: call :: V :: v55.setRecordType(#(SEQRES))::CL,61571
48975 :: CALL :: call :: V :: v57.addGroup(v58)::CL,60033
48979 :: CALL :: call :: Z :: v42 = v27.hasMoreTokens()::JM,48983
48983 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 129::CD,48931:CD,48935:CD,48939:CD,48952:CD,48959:CD,48960:CD,48975:CD,48979
48987 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v63 = p0 $this .isKnownChain(v13, v61)::JM,48993:CL,60275
48993 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 248::CD,49000
48994 :: EXPR :: reference :: Ljava/util/List :: v64 = p0 $this .seqResChains::
48997 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v65 = p0 $this .current_chain::
49000 :: CALL :: call :: Z :: v67 = v64.add(v65)::
49005 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v68 = p0 $this .current_group::DD,49008
49008 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 265::CD,49012
49012 :: CALL :: call :: V :: v69.trimToSize()::CL,60642
49021 :: CALL :: call :: I :: v72 = parseInt(v19)::JM,48898
49105 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MODEL_Handler(java.lang.String)::CD,49113:CD,49117
49113 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,49117:CL,54222
49117 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,49122
49119 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v8 = p0 $this .current_chain::DD,49122
49122 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 117::CD,49126:CD,49153:CD,49159:CD,49177:CD,49181
49123 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v10 = p0 $this .current_group::DD,49126
49126 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,49133:CD,49140
49133 :: CALL :: call :: V :: v11.addGroup(v12)::CL,60033
49140 :: CALL :: call :: V :: v14.trimToSize()::CL,60642
49153 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v21 = p0 $this .isKnownChain(v18, v19)::JM,49159:CL,60275
49159 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 84::CD,49166
49160 :: EXPR :: reference :: Ljava/util/List :: v22 = p0 $this .current_model::
49163 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v23 = p0 $this .current_chain::
49166 :: CALL :: call :: Z :: v25 = v22.add(v23)::
49177 :: CALL :: call :: V :: v26.addModel(v27)::CL,61582
49181 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::
49221 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HEADER_Handler(java.lang.String)::CD,49226:CD,49230:CD,49234:CD,49257:CD,49291:CD,49296:CD,49301:CD,49306:CD,49314:CD,49370:JM,49330:JM,49235:JM,49315:JM,49385:JM,49258
49226 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .trim()::JM,49234:JM,49314:JM,49330:JM,49235:JM,49315:JM,49257:JM,49385:JM,49370:JM,49258
49230 :: CALL :: call :: I :: v8 = v6.length()::JM,49234:JM,49314:JM,49330:JM,49235:JM,49315:JM,49257:JM,49385:JM,49370:JM,49258
49234 :: PRED :: IF :: Z :: if (v8 <= #(10)) goto 52::CD,49235:CD,49240:CD,49246:CD,49253:JM,49314:JM,49330:JM,49315:JM,49385:JM,49370:JM,49258:CF,49257
49235 :: CALL :: call :: I :: v12 = min(v8, #(50))::JM,49314:JM,49330:JM,49235:JM,49315:JM,49257:JM,49385:JM,49370:JM,49258
49240 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), v12)::JM,49234:JM,49314:JM,49330:JM,49235:JM,49315:JM,49257:JM,49385:JM,49370:JM,49258
49246 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::JM,49234:JM,49314:JM,49330:JM,49235:JM,49315:JM,49257:JM,49385:JM,49370:JM,49258
49253 :: CALL :: call :: V :: v17.setClassification(v16)::CL,61626
49257 :: PRED :: IF :: Z :: if (v8 <= #(50)) goto 131::CD,49258:CD,49263:CD,49269:CD,49284:JM,49330:JM,49235:JM,49315:JM,49385:JM,49370:CF,49314
49258 :: CALL :: call :: I :: v22 = min(v8, #(59))::JM,49314:JM,49330:JM,49235:JM,49315:JM,49385:JM,49370:JM,49258
49263 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(50), v22)::JM,49234:JM,49314:JM,49330:JM,49235:JM,49315:JM,49257:JM,49385:JM,49370:JM,49258
49269 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::JM,49234:JM,49314:JM,49330:JM,49235:JM,49315:JM,49257:JM,49385:JM,49370:JM,49258
49284 :: CALL :: call :: V :: v30.setDepDate(v29)::CL,61637
49291 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
49296 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v26)::JM,49330:JM,49235:JM,49315:JM,49385:JM,49258
49301 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#('. Will continue with...))::
49306 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
49314 :: PRED :: IF :: Z :: if (v8 <= #(62)) goto 210::CD,49315:CD,49320:CD,49326:CD,49335:CD,49343:CD,49348:CD,49366:JM,49330:JM,49235:JM,49385:JM,49258:CF,49370
49315 :: CALL :: call :: I :: v50 = min(v8, #(66))::JM,49330:JM,49235:JM,49315:JM,49385:JM,49370:JM,49258
49320 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $line .substring(#(62), v50)::JM,49234:JM,49314:JM,49330:JM,49235:JM,49315:JM,49257:JM,49385:JM,49370:JM,49258
49326 :: CALL :: call :: Ljava/lang/String :: v54 = v52.trim()::JM,49234:JM,49314:JM,49330:JM,49235:JM,49315:JM,49257:JM,49385:JM,49370:JM,49258
49330 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v54::
49335 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
49340 :: EXPR :: reference :: Ljava/lang/String :: v59 = p0 $this .pdbId::
49343 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v56.append(v59)::
49348 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
49366 :: CALL :: call :: V :: v67.setIdCode(v54)::CL,61659
49370 :: PRED :: IF :: Z :: if (v8 <= #(66)) goto 265::CD,49374:CD,49380:CD,49385
49371 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .pdbId::JM,49385
49374 :: CALL :: call :: Ljava/lang/String :: v74 = p1 $line .substring(#(72), #(76))::JM,49234:JM,49314:JM,49330:JM,49235:JM,49315:JM,49257:JM,49385:JM,49370:JM,49258
49380 :: CALL :: call :: Z :: v76 = v70.equals(v74)::JM,49385:JM,49234:JM,49314:JM,49330:JM,49235:JM,49315:JM,49257:JM,49370:JM,49258
49385 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 265::CD,49391:CD,49395:CD,49403:CD,49408:CD,49412
49391 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
49395 :: CALL :: call :: Ljava/lang/String :: v83 = valueOf(v81)::
49403 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v80.append(#( is a LEGACY entry - ...))::
49408 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
49412 :: CALL :: call :: V :: v79.println(v89)::
49477 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_AUTHOR_Handler(java.lang.String)::CD,49482:CD,49487:CD,49494:CD,49498
49482 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .substring(#(10))::
49487 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::
49494 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getAuthors()::JM,49498:CL,61670
49498 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 33::CF,49507:CD,49502:CD,49508:CD,49516:CD,49521:CD,49528
49502 :: CALL :: call :: V :: v23.setAuthors(v8)::CL,61679
49507 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
49508 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v11)::
49516 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v13.append(v8)::
49521 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
49528 :: CALL :: call :: V :: v21.setAuthors(v20)::CL,61679
49548 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TITLE_Handler(java.lang.String)::CD,49553:CD,49557:CD,49586:CD,49590:CD,49636:CD,49637:CD,49645:CD,49650:CD,49657:CD,49662
49553 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,49557:JM,49662
49557 :: PRED :: IF :: Z :: if (v5 <= #(79)) goto 28::CD,49558:CD,49564:CD,49569:CD,49573:CD,49579:CD,49662:JM,49557
49558 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(80))::JM,49557:JM,49662
49564 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::JM,49662
49569 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,49557:JM,49662
49573 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(10), v9)::JM,49557:JM,49662
49579 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,49662
49586 :: CALL :: call :: Ljava/lang/String :: v22 = v20.getTitle()::JM,49602:JM,49590:JM,49596:CL,61690
49590 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 116::CD,49591:CD,49596:JM,49602
49591 :: CALL :: call :: Z :: v26 = v22.equals(#())::JM,49602:JM,49596
49596 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 116::CD,49597:CD,49602:JM,49596
49597 :: CALL :: call :: Z :: v30 = v22.endsWith(#(-))::JM,49602:JM,49596
49602 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 88::CF,49617:CF,49603:CD,49604:CD,49612:CD,49618:CD,49626:CD,49631
49603 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
49604 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v22)::
49612 :: CALL :: call :: Ljava/lang/String :: v45 = v40.toString()::
49617 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
49618 :: CALL :: call :: Ljava/lang/String :: v33 = valueOf(v22)::
49626 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(#( ))::
49631 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
49636 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
49637 :: CALL :: call :: Ljava/lang/String :: v49 = valueOf(v46)::
49645 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v19)::
49650 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::
49657 :: CALL :: call :: V :: v55.setTitle(v54)::CL,61699
49662 :: EXPR :: assign :: null :: PHI v19 = v18, v13::
49698 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_JRNL_Handler(java.lang.String)::CD,49703:CD,49707:CD,49708:CD,49712:CD,49713:CD,49722:CD,49727:JM,49738
49703 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,49712:JM,49738:JM,49707:JM,49727
49707 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - #(8)::JM,49712:JM,49738:JM,49707:JM,49727
49708 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,49712:JM,49738:JM,49707:JM,49727
49712 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 - #(4)::JM,49712:JM,49738:JM,49707:JM,49727
49713 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v7, v11)::JM,49712:JM,49738:JM,49707:JM,49727
49719 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .pdbId::JM,49727
49722 :: CALL :: call :: Z :: v16 = v13.equals(v14)::JM,49738:JM,49727
49727 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 66::CD,49734:CD,49738:CD,49739:CD,49748:CD,49757
49734 :: CALL :: call :: I :: v25 = p1 $line .length()::JM,49712:JM,49738:JM,49707:JM,49727
49738 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(8)::JM,49712:JM,49738:JM,49707:JM,49727
49739 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(0), v26)::JM,49712:JM,49738:JM,49707:JM,49727
49745 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .journalLines::
49748 :: CALL :: call :: Z :: v31 = v29.add(v28)::JM,49727
49754 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .journalLines::
49757 :: CALL :: call :: Z :: v20 = v18.add(p1 $line )::JM,49712:JM,49738:JM,49707:JM,49727
49783 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_EXPDTA_Handler(java.lang.String)::CD,49788:CD,49792:CD,49813:CD,49818:CD,49833:CD,49836
49788 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,49792
49792 :: PRED :: IF :: Z :: if (v5 <= #(69)) goto 27::CD,49793:CD,49799:CD,49804:CD,49809:JM,49792
49793 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), #(70))::JM,49792
49799 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
49804 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $line .substring(#(10))::JM,49792
49809 :: CALL :: call :: Ljava/lang/String :: v11 = v9.trim()::
49813 :: CALL :: call :: [Ljava/lang/String :: v20 = v17.split(#(;\s+))::JM,49818
49818 :: EXPR :: assign :: I :: v21 = v20.length::DD,49833
49827 :: CALL :: call :: Z :: v26 = v24.setExperimentalTechnique(v23)::CL,61710
49832 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,49836
49833 :: PRED :: IF :: Z :: if (v29 < v21) goto 57::CD,49827:CD,49832:CD,49836
49836 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,49832:DD,49833
49862 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CRYST1_Handler(java.lang.String)::CD,49867:CD,49871:CD,49966:CD,49971:CD,49975:CD,49980:CD,49985:CD,49990:CD,50140:JM,50003:JM,50141
49867 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,50003:JM,50141:JM,49871
49871 :: PRED :: IF :: Z :: if (v5 >= #(63)) goto 31::CD,49879:CD,49885:CD,49893:CD,49899:CD,49907:CD,49913:CD,49921:CD,49927:CD,49935:CD,49941:CD,49949:CD,49955:CD,49999:CD,50003:CD,50034:CD,50039:CD,50044:CD,50049:CD,50054:CD,50059:CD,50063:CD,50067:CD,50087:CD,50091:CD,50141:JM,49871
49879 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(6), #(15))::JM,50003:JM,50141:JM,49871
49885 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,50003:JM,50141
49893 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(15), #(24))::JM,50003:JM,50141:JM,49871
49899 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,50003:JM,50141
49907 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $line .substring(#(24), #(33))::JM,50003:JM,50141:JM,49871
49913 :: CALL :: call :: Ljava/lang/String :: v27 = v25.trim()::JM,50003:JM,50141
49921 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(33), #(40))::JM,50003:JM,50141:JM,49871
49927 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::JM,50003:JM,50141
49935 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(40), #(47))::JM,50003:JM,50141:JM,49871
49941 :: CALL :: call :: Ljava/lang/String :: v41 = v39.trim()::JM,50003:JM,50141
49949 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $line .substring(#(47), #(54))::JM,50003:JM,50141:JM,49871
49955 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::JM,50003:JM,50141
49966 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
49971 :: CALL :: call :: Ljava/lang/String :: v57 = v51.getMessage()::
49975 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
49980 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v59.append(#() from line and ignor...))::
49985 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v62.append(p1 $line )::JM,50003:JM,50141:JM,49871
49990 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,50003:JM,50141
49999 :: CALL :: call :: I :: v69 = p1 $line .length()::JM,50003:JM,50141:JM,49871
50003 :: PRED :: IF :: Z :: if (v69 < #(66)) goto 194::CD,50004:CD,50010:CD,50015:CD,50019:CD,50025:CD,50141:JM,50003:JM,49871
50004 :: CALL :: call :: Ljava/lang/String :: v79 = p1 $line .substring(#(55), #(66))::JM,50003:JM,50141:JM,49871
50010 :: CALL :: call :: Ljava/lang/String :: v81 = v79.trim()::JM,50141
50015 :: CALL :: call :: I :: v73 = p1 $line .length()::JM,50003:JM,50141:JM,49871
50019 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(55), v73)::JM,50003:JM,50141:JM,49871
50025 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,50141
50034 :: CALL :: call :: V :: v83.setA(v85)::CL,61763
50039 :: CALL :: call :: V :: v83.setB(v87)::CL,61774
50044 :: CALL :: call :: V :: v83.setC(v89)::CL,61785
50049 :: CALL :: call :: V :: v83.setAlpha(v91)::CL,61796
50054 :: CALL :: call :: V :: v83.setBeta(v93)::CL,61816
50059 :: CALL :: call :: V :: v83.setGamma(v95)::CL,61836
50063 :: CALL :: call :: Z :: v98 = v83.isCellReasonable()::JM,50067:CL,61856
50067 :: PRED :: IF :: Z :: if (v98 != #(0)) goto 289::CD,50070:CD,50083
50070 :: CALL :: call :: Ljava/lang/Double :: v106 = valueOf(#(10.0 d))::JM,50070
50083 :: CALL :: call :: V :: v100.setCrystalCell(v83)::CL,61891
50087 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v109 = getSpaceGroup(v82)::JM,50091:CL,61902
50091 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 353::CD,50094:CD,50099:CD,50104:CD,50109:CD,50120:CD,50128:CD,50135
50094 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v116 = new java.lang.StringBuilder::
50099 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v116.append(v82)::
50104 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#(' not recognised as a...))::
50109 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
50120 :: CALL :: call :: V :: v127.setNonStandardSg(#(1))::CL,61981
50128 :: CALL :: call :: V :: v111.setSpaceGroup(v109)::CL,61992
50135 :: CALL :: call :: V :: v113.setNonStandardSg(#(0))::CL,61981
50140 :: EXPR :: assign :: Ljava/lang/Exception :: v51 = catch <exc>::
50141 :: EXPR :: assign :: null :: PHI v82 = v81, v77::
50216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MTRIXn_Handler(java.lang.String)::CD,50221:CD,50225:JM,50466:JM,50389:JM,50298
50221 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,50225:JM,50466:JM,50389:JM,50298
50225 :: PRED :: IF :: Z :: if (v5 >= #(60)) goto 25::CD,50233:CD,50239:CD,50243:CD,50253:CD,50263:CD,50273:CD,50283:CD,50289:CD,50293:CD,50298:CD,50309:CD,50466:JM,50225:JM,50389
50233 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(5), #(6))::JM,50225:JM,50466:JM,50389:JM,50298
50239 :: CALL :: call :: I :: v12 = parseInt(v10)::JM,50466:JM,50389:JM,50298
50243 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(20))::JM,50225:JM,50466:JM,50389:JM,50298
50253 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(20), #(30))::JM,50225:JM,50466:JM,50389:JM,50298
50263 :: CALL :: call :: Ljava/lang/String :: v26 = p1 $line .substring(#(30), #(40))::JM,50225:JM,50466:JM,50389:JM,50298
50273 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(45), #(55))::JM,50225:JM,50466:JM,50389:JM,50298
50283 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(59), #(60))::JM,50225:JM,50466:JM,50389:JM,50298
50289 :: CALL :: call :: Ljava/lang/String :: v40 = v38.trim()::JM,50466:JM,50389:JM,50298
50293 :: CALL :: call :: Z :: v43 = v40.equals(#())::JM,50466:JM,50298
50298 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 122::CF,50466:CD,50299:CD,50305:JM,50225:JM,50389:JM,50298
50299 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(59), #(60))::JM,50225:JM,50466:JM,50389:JM,50298
50305 :: CALL :: call :: I :: v47 = parseInt(v45)::JM,50466:JM,50389:JM,50298
50309 :: PRED :: IF :: Z :: if (v48 != #(1)) goto 127::CD,50314:CD,50325:CD,50389
50311 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .ncsOperators::DD,50314
50314 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 145::CD,50315
50315 :: NORM :: declaration :: Ljava/util/ArrayList :: v52 = new java.util.ArrayList::DD,50319
50319 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ncsOperators = v52::
50322 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v54 = p0 $this .currentNcsOp::DD,50325
50325 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 179::CD,50326
50326 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v55 = new javax.vecmath.Matrix4d::DD,50346
50346 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .currentNcsOp = v55::
50389 :: PRED :: IF :: Z :: if (v12 != #(3)) goto 323::CD,50396
50390 :: EXPR :: reference :: Ljava/util/List :: v73 = p0 $this .ncsOperators::
50393 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v74 = p0 $this .currentNcsOp::
50396 :: CALL :: call :: Z :: v76 = v73.add(v74)::
50466 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,50309
50570 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_Handler(java.lang.String)::CD,50575:CD,50661:CD,50666:CD,50671:CD,50676:CD,50681:CD,50718:CD,50811:JM,50580:JM,50598:JM,50631:JM,50587:JM,50734
50575 :: PRED :: IF :: Z :: if (p1 $line  == #(null)) goto 13::CD,50576:CD,50580:JM,50598:JM,50631:JM,50587:JM,50734
50576 :: CALL :: call :: I :: v6 = p1 $line .length()::JM,50580:JM,50598:JM,50631:JM,50587:JM,50734
50580 :: PRED :: IF :: Z :: if (v6 >= #(11)) goto 18::CD,50582:CD,50587:JM,50580:JM,50598:JM,50631:JM,50734
50582 :: CALL :: call :: Z :: v10 = p1 $line .startsWith(#(REMARK 800))::JM,50580:JM,50598:JM,50631:JM,50587:JM,50734
50587 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 36::CD,50588:CD,50593:CD,50598:JM,50580:JM,50631:JM,50587:JM,50734
50588 :: CALL :: call :: V :: p0 $this .pdb_REMARK_800_Handler(p1 $line )::CL,62003
50593 :: CALL :: call :: Z :: v14 = p1 $line .startsWith(#(REMARK 350))::JM,50580:JM,50598:JM,50631:JM,50587:JM,50734
50598 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 85::CD,50602:CD,50606:CD,50626:CD,50631:JM,50580:JM,50598:JM,50587:JM,50734
50602 :: CALL :: call :: Z :: v106 = v104.isParseBioAssembly()::JM,50606:CL,62404
50606 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 342::CD,50610:CD,50621
50607 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v107 = p0 $this .bioAssemblyParser::DD,50610
50610 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 71::JM,62436:JM,62423
50621 :: CALL :: call :: V :: v110.pdb_REMARK_350_Handler(p1 $line )::CL,62460
50626 :: CALL :: call :: Z :: v17 = p1 $line .startsWith(#(REMARK   3   FREE R VALUE))::JM,50580:JM,50598:JM,50631:JM,50587:JM,50734
50631 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 223::CD,50632:CD,50636:CD,50641:CD,50645:CD,50689:CD,50693:CD,50698:CD,50702:CD,50729:CD,50734:JM,50580:JM,50598:JM,50631:JM,50587
50632 :: CALL :: call :: Ljava/util/regex/Pattern :: v62 = compile(#(^REMARK   3   FREE R ...))::
50636 :: CALL :: call :: Ljava/util/regex/Matcher :: v64 = v62.matcher(p1 $line )::JM,50645
50641 :: CALL :: call :: Z :: v66 = v64.matches()::JM,50645
50645 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 166::CD,50646:JM,50645
50646 :: CALL :: call :: Ljava/lang/String :: v68 = v64.group(#(1))::JM,50645
50661 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
50666 :: CALL :: call :: Ljava/lang/String :: v77 = v64.group(#(1))::JM,50645
50671 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v73.append(v77)::
50676 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v79.append(#( does not look like a...))::
50681 :: CALL :: call :: Ljava/lang/String :: v84 = v82.toString()::
50689 :: CALL :: call :: Ljava/util/regex/Pattern :: v89 = compile(#(^REMARK   3   FREE R ...))::
50693 :: CALL :: call :: Ljava/util/regex/Matcher :: v91 = v89.matcher(p1 $line )::JM,50702
50698 :: CALL :: call :: Z :: v93 = v91.matches()::JM,50702
50702 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 342::CD,50703:JM,50702
50703 :: CALL :: call :: Ljava/lang/String :: v95 = v91.group(#(1))::JM,50702
50718 :: CALL :: call :: Ljava/lang/String :: v102 = v91.group(#(1))::JM,50702
50729 :: CALL :: call :: Z :: v20 = p1 $line .startsWith(#(REMARK   3   RESOLUTI...))::JM,50580:JM,50598:JM,50631:JM,50587:JM,50734
50734 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 342::CD,50735:CD,50739:CD,50744:CD,50748
50735 :: CALL :: call :: Ljava/util/regex/Pattern :: v23 = compile(#(^REMARK   3   RESOLUT...))::
50739 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v23.matcher(p1 $line )::JM,50748
50744 :: CALL :: call :: Z :: v27 = v25.matches()::JM,50748
50748 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 342::CD,50749:CD,50761:CD,50765:CD,50766:CD,50804:JM,50748
50749 :: CALL :: call :: Ljava/lang/String :: v30 = v25.group(#(1))::JM,50748
50761 :: CALL :: call :: F :: v35 = v33.getResolution()::JM,50765:CL,62673
50765 :: EXPR :: assign :: Z :: v37 = v35 < #(99.0 f)::DD,50766
50766 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 313::CD,50769:CD,50778:CD,50782:CD,50790
50769 :: CALL :: call :: Ljava/lang/String :: v41 = v25.group(#(1))::JM,50748
50778 :: CALL :: call :: F :: v46 = v44.getResolution()::JM,50782:CL,62673
50782 :: CALL :: call :: Ljava/lang/Float :: v48 = valueOf(v46)::JM,50782
50790 :: CALL :: call :: Ljava/lang/String :: v50 = format(#(%4.2f), v43)::
50804 :: CALL :: call :: V :: v52.setResolution(v32)::CL,62682
50811 :: CALL :: call :: Ljava/lang/String :: v58 = v25.group(#(1))::JM,50748
50895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CONECT_Handler(java.lang.String)::CD,50903:CD,51094:CD,51099:CD,51103:CD,51108:CD,51113:CD,51118:CD,51128
50900 :: EXPR :: reference :: Z :: v4 = p0 $this .atomOverflow::DD,50903
50903 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 9::CD,50908:CD,50912
50908 :: CALL :: call :: Z :: v8 = v6.isHeaderOnly()::JM,50912:CL,54222
50912 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,50914:CD,50920:CD,50924:CD,50928:CD,50935:CD,50942:CD,50949:CD,50956:CD,50963:CD,50970:CD,50977:CD,50984:CD,50991:CD,50998:CD,51007:CD,51013:CD,51020:CD,51027:CD,51034:CD,51041:CD,51048:CD,51055:CD,51062:CD,51069:CD,51076:CD,51086
50914 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .substring(#(6), #(11))::
50920 :: CALL :: call :: Ljava/lang/String :: v14 = v12.trim()::
50924 :: CALL :: call :: I :: v16 = parseInt(v14)::
50928 :: CALL :: call :: Ljava/lang/Integer :: v19 = p0 $this .conect_helper(p1 $line , #(11), #(16))::JM,51013:CL,62693
50935 :: CALL :: call :: Ljava/lang/Integer :: v22 = p0 $this .conect_helper(p1 $line , #(16), #(21))::JM,51020:CL,62693
50942 :: CALL :: call :: Ljava/lang/Integer :: v25 = p0 $this .conect_helper(p1 $line , #(21), #(26))::JM,51027:CL,62693
50949 :: CALL :: call :: Ljava/lang/Integer :: v28 = p0 $this .conect_helper(p1 $line , #(26), #(31))::JM,51034:CL,62693
50956 :: CALL :: call :: Ljava/lang/Integer :: v31 = p0 $this .conect_helper(p1 $line , #(31), #(36))::JM,51041:CL,62693
50963 :: CALL :: call :: Ljava/lang/Integer :: v34 = p0 $this .conect_helper(p1 $line , #(36), #(41))::JM,51048:CL,62693
50970 :: CALL :: call :: Ljava/lang/Integer :: v37 = p0 $this .conect_helper(p1 $line , #(41), #(46))::JM,51055:CL,62693
50977 :: CALL :: call :: Ljava/lang/Integer :: v40 = p0 $this .conect_helper(p1 $line , #(46), #(51))::JM,51062:CL,62693
50984 :: CALL :: call :: Ljava/lang/Integer :: v43 = p0 $this .conect_helper(p1 $line , #(51), #(56))::JM,51069:CL,62693
50991 :: CALL :: call :: Ljava/lang/Integer :: v46 = p0 $this .conect_helper(p1 $line , #(56), #(61))::JM,51076:CL,62693
50998 :: NORM :: declaration :: Ljava/util/HashMap :: v47 = new java.util.HashMap::
51007 :: CALL :: call :: Ljava/lang/Object :: v53 = v47.put(#(atomserial), v50)::
51013 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 185::CD,51014:CF,51020
51014 :: CALL :: call :: Ljava/lang/Object :: v57 = v47.put(#(bond1), v19)::
51020 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 201::CD,51021:CF,51027
51021 :: CALL :: call :: Ljava/lang/Object :: v60 = v47.put(#(bond2), v22)::
51027 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 217::CD,51028:CF,51034
51028 :: CALL :: call :: Ljava/lang/Object :: v63 = v47.put(#(bond3), v25)::
51034 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 233::CD,51035:CF,51041
51035 :: CALL :: call :: Ljava/lang/Object :: v66 = v47.put(#(bond4), v28)::
51041 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 249::CD,51042:CF,51048
51042 :: CALL :: call :: Ljava/lang/Object :: v69 = v47.put(#(hydrogen1), v31)::
51048 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 265::CD,51049:CF,51055
51049 :: CALL :: call :: Ljava/lang/Object :: v72 = v47.put(#(hydrogen2), v34)::
51055 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 281::CD,51056:CF,51062
51056 :: CALL :: call :: Ljava/lang/Object :: v75 = v47.put(#(salt1), v37)::
51062 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 297::CD,51063:CF,51069
51063 :: CALL :: call :: Ljava/lang/Object :: v78 = v47.put(#(hydrogen3), v40)::
51069 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 313::CD,51070:CF,51076
51070 :: CALL :: call :: Ljava/lang/Object :: v81 = v47.put(#(hydrogen4), v43)::
51076 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 328::CD,51077
51077 :: CALL :: call :: Ljava/lang/Object :: v84 = v47.put(#(salt2), v46)::
51083 :: EXPR :: reference :: Ljava/util/List :: v85 = p0 $this .connects::
51086 :: CALL :: call :: Z :: v87 = v85.add(v47)::
51094 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
51099 :: CALL :: call :: Ljava/lang/String :: v94 = v88.getMessage()::
51103 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
51108 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#(), at line : ))::
51113 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(p1 $line )::
51118 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
51128 :: EXPR :: assign :: Ljava/lang/Exception :: v88 = catch <exc>::
51258 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REVDAT_Handler(java.lang.String)::CD,51266:CD,51270:CD,51310:CD,51315:CD,51320:CD,51325
51266 :: CALL :: call :: Ljava/util/Date :: v6 = v4.getModDate()::JM,51270:CL,62743
51270 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,51271:CD,51276:CD,51281:CD,51282:CD,51288:CD,51303
51271 :: NORM :: declaration :: Ljava/util/Date :: v8 = new java.util.Date::
51276 :: CALL :: call :: Z :: v12 = v6.equals(v8)::JM,51281
51281 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 94::CD,51282:CD,51288:CD,51303
51282 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(22))::
51288 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::
51303 :: CALL :: call :: V :: v23.setModDate(v22)::CL,62779
51310 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
51315 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v27.append(v19)::
51320 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#('. Will continue with...))::
51325 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
51353 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_DBREF_Handler(java.lang.String)::CD,51378:CD,51573
51378 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v13 = new org.biojava.nbio.structure.DBRef::
51570 :: EXPR :: reference :: Ljava/util/List :: v103 = p0 $this .dbrefs::
51573 :: CALL :: call :: Z :: v105 = v103.add(v13)::
51678 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SITE_Handler(java.lang.String)::CD,51686:CD,51690:JM,52142
51686 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,51690:CL,54222
51690 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 11::CD,51694:CD,51699:CD,51704:CD,51712:CD,51721:CD,51726:CD,51727:CD,51732:CD,51736:CD,51741:CD,51743:CD,51744:CD,51821:CD,51830:CD,52031:CD,52037:CD,52042:CD,52045:CD,52053:CD,52057:CD,52061:CD,52066:CD,52071:CD,52082:CD,52086:CD,52133:CD,52137:CD,52139:CD,52140:CD,52141:CD,52142
51694 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
51699 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $line )::JM,52142
51704 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,52142
51712 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(11), #(14))::JM,52142
51721 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v20)::JM,51726
51726 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,51727:DD,52141
51727 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 69::CD,52139
51732 :: CALL :: call :: Ljava/lang/String :: v30 = v20.trim()::JM,52142
51736 :: CALL :: call :: Z :: v32 = v28.containsKey(v30)::JM,51741
51741 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 89::CD,52140
51743 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v27 || v33::DD,51744
51744 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 181::CF,52141:CF,51745:CD,51752:CD,51756:CD,51773:CD,51784:CD,51792:CD,51796:CD,51801:CD,51806
51745 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::DD,52141
51752 :: CALL :: call :: Ljava/lang/String :: v39 = v20.trim()::JM,52142
51756 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.put(v39, v35)::
51773 :: CALL :: call :: Ljava/lang/String :: v47 = format(#(New Site made: %s %s), v45)::
51784 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
51789 :: EXPR :: reference :: Ljava/util/Map :: v53 = p0 $this .siteMap::
51792 :: CALL :: call :: I :: v55 = v53.size()::
51796 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v50.append(v55)::
51801 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v57.append(#( sites))::
51806 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
51821 :: CALL :: call :: Ljava/lang/String :: v69 = format(#(SiteId: %s), v67)::
51830 :: CALL :: call :: Ljava/lang/String :: v73 = p1 $line .substring(#(18))::JM,52142
51838 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
51843 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v76)::JM,52042
51848 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::JM,52042
51853 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
51861 :: CALL :: call :: Ljava/lang/String :: v94 = v76.substring(#(0), #(3))::JM,52042
51867 :: CALL :: call :: Ljava/lang/Character :: v96 = get1LetterCode(v94)::JM,51871:CL,60348
51871 :: PRED :: IF :: Z :: if (v96 == #(null)) goto 289::CD,51872:JM,52042
51872 :: CALL :: call :: Ljava/lang/Character :: v99 = valueOf(#(88))::
51882 :: CALL :: call :: Ljava/lang/String :: v106 = v76.substring(#(4), #(5))::JM,52042
51888 :: CALL :: call :: Ljava/lang/String :: v109 = v76.substring(#(5), #(9))::JM,52042
51894 :: CALL :: call :: Ljava/lang/String :: v111 = v109.trim()::JM,52042
51898 :: CALL :: call :: Ljava/lang/Integer :: v113 = valueOf(v111)::
51902 :: CALL :: call :: Ljava/lang/String :: v115 = v76.substring(#(9), #(10))::JM,52042
51908 :: CALL :: call :: C :: v117 = v115.charAt(#(0))::JM,52042
51913 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(v117)::
51936 :: CALL :: call :: Ljava/lang/String :: v124 = format(#(Site: %s: 'resName:%s...), v122)::
51945 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v126 = new org.biojava.nbio.structure.ResidueNumber::
51951 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v129 = new java.lang.StringBuilder::
51956 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v129.append(v113)::
51961 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v119)::
51966 :: CALL :: call :: Ljava/lang/StringBuilder :: v137 = v135.append(#('))::
51971 :: CALL :: call :: Ljava/lang/String :: v139 = v137.toString()::
51979 :: CALL :: call :: V :: v126.setChainId(v106)::CL,63047
51983 :: CALL :: call :: V :: v126.setSeqNum(v113)::CL,63058
51987 :: CALL :: call :: V :: v126.setInsCode(v119)::CL,63069
51991 :: CALL :: call :: Z :: v145 = v64.add(v126)::
51998 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
52003 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v126)::
52008 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(#( to site ))::
52013 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(v20)::JM,52142
52018 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
52026 :: CALL :: call :: Ljava/lang/String :: v161 = v162.substring(#(11))::JM,52142
52031 :: CALL :: call :: Ljava/lang/String :: v76 = v162.substring(#(0), #(10))::JM,52042
52037 :: CALL :: call :: Z :: v79 = v76.equals(#(          ))::JM,52042
52042 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 216::CD,51838:CD,51843:CD,51848:CD,51853:CD,51861:CD,51867:CD,51871:CD,51882:CD,51888:CD,51894:CD,51898:CD,51902:CD,51908:CD,51913:CD,51936:CD,51945:CD,51951:CD,51956:CD,51961:CD,51966:CD,51971:CD,51979:CD,51983:CD,51987:CD,51991:CD,51998:CD,52003:CD,52008:CD,52013:CD,52018:CD,52026:CD,52031:CD,52037:CD,52142
52045 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
52050 :: EXPR :: reference :: Ljava/util/Map :: v168 = p0 $this .siteToResidueMap::
52053 :: CALL :: call :: Ljava/util/Set :: v170 = v168.keySet()::
52057 :: CALL :: call :: I :: v172 = v170.size()::
52061 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v165.append(v172)::
52066 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v174.append(#( sites):))::
52071 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
52079 :: EXPR :: reference :: Ljava/util/Map :: v181 = p0 $this .siteToResidueMap::JM,52137
52082 :: CALL :: call :: Ljava/util/Set :: v183 = v181.keySet()::JM,52137
52086 :: CALL :: call :: Ljava/util/Iterator :: v185 = v183.iterator()::JM,52137
52091 :: CALL :: call :: Ljava/lang/Object :: v189 = v185.next()::JM,52137
52098 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v192 = new java.lang.StringBuilder::
52099 :: CALL :: call :: Ljava/lang/String :: v194 = valueOf(v190)::
52107 :: CALL :: call :: Ljava/lang/StringBuilder :: v198 = v192.append(#( : ))::
52115 :: CALL :: call :: Ljava/lang/Object :: v201 = v199.get(v190)::
52120 :: CALL :: call :: Ljava/lang/StringBuilder :: v203 = v198.append(v201)::
52125 :: CALL :: call :: Ljava/lang/String :: v205 = v203.toString()::
52133 :: CALL :: call :: Z :: v187 = v185.hasNext()::JM,52137
52137 :: PRED :: IF :: Z :: if (v187 != #(0)) goto 568::CD,52091:CD,52098:CD,52099:CD,52107:CD,52115:CD,52120:CD,52125:CD,52133:JM,52137
52139 :: EXPR :: assign :: null :: PHI v27 = #(1), #(0)::DD,51743
52140 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::CF,51743
52141 :: EXPR :: assign :: null :: PHI v64 = v24, v35::
52142 :: EXPR :: assign :: null :: PHI v162 = v73, v161::JM,52142:JM,52042
52282 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SSBOND_Handler(java.lang.String)::CD,52290:CD,52294:JM,52400:JM,52356:JM,52388:JM,52394:JM,52300:JM,52382
52290 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,52294:CL,54222
52294 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,52296:CD,52300:JM,52400:JM,52356:JM,52388:JM,52394:JM,52382
52296 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,52400:JM,52356:JM,52388:JM,52394:JM,52300:JM,52382
52300 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,52308:CD,52314:CD,52320:CD,52324:CD,52330:CD,52336:CD,52342:CD,52346:CD,52352:CD,52356:JM,52400:JM,52388:JM,52394:JM,52300:JM,52382
52308 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(16))::JM,52400:JM,52356:JM,52388:JM,52394:JM,52300:JM,52382
52314 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(17), #(21))::JM,52400:JM,52356:JM,52388:JM,52394:JM,52300:JM,52382
52320 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,52400:JM,52356:JM,52388:JM,52394:JM,52382
52324 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(21), #(22))::JM,52400:JM,52356:JM,52388:JM,52394:JM,52300:JM,52382
52330 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(29), #(30))::JM,52400:JM,52356:JM,52388:JM,52394:JM,52300:JM,52382
52336 :: CALL :: call :: Ljava/lang/String :: v31 = p1 $line .substring(#(31), #(35))::JM,52400:JM,52356:JM,52388:JM,52394:JM,52300:JM,52382
52342 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::JM,52400:JM,52356:JM,52388:JM,52394:JM,52382
52346 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $line .substring(#(35), #(36))::JM,52400:JM,52356:JM,52388:JM,52394:JM,52300:JM,52382
52352 :: CALL :: call :: I :: v37 = p1 $line .length()::JM,52400:JM,52356:JM,52388:JM,52394:JM,52300:JM,52382
52356 :: PRED :: IF :: Z :: if (v37 < #(72)) goto 231::CD,52357:CD,52363:CD,52367:CD,52373:CD,52377:CD,52382:CD,52458:CD,52462:CD,52466:CD,52470:CD,52474:CD,52478:CD,52482:CD,52489:JM,52400:JM,52356:JM,52388:JM,52394:JM,52300
52357 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $line .substring(#(59), #(65))::JM,52400:JM,52356:JM,52388:JM,52394:JM,52300:JM,52382
52363 :: CALL :: call :: Ljava/lang/String :: v44 = v42.trim()::JM,52400:JM,52388:JM,52394:JM,52382
52367 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(66), #(72))::JM,52400:JM,52356:JM,52388:JM,52394:JM,52300:JM,52382
52373 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,52400:JM,52388:JM,52394:JM,52382
52377 :: CALL :: call :: Z :: v52 = v44.equals(#())::JM,52400:JM,52388:JM,52394:JM,52382
52382 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 231::CD,52383:CD,52388:CD,52458:CD,52462:CD,52466:CD,52470:CD,52474:CD,52478:CD,52482:CD,52489:JM,52400:JM,52394:JM,52382
52383 :: CALL :: call :: Z :: v54 = v49.equals(#())::JM,52400:JM,52388:JM,52394:JM,52382
52388 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 231::CD,52389:CD,52394:CD,52458:CD,52462:CD,52466:CD,52470:CD,52474:CD,52478:CD,52482:CD,52489:JM,52400:JM,52388:JM,52382
52389 :: CALL :: call :: Z :: v57 = v44.equals(#(1555))::JM,52400:JM,52388:JM,52394:JM,52382
52394 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 175::CD,52395:CD,52400:CD,52403:CD,52404:CD,52412:CD,52417:CD,52421:CD,52422:CD,52430:CD,52435:JM,52388:JM,52394:JM,52382
52395 :: CALL :: call :: Z :: v59 = v49.equals(#(1555))::JM,52400:JM,52388:JM,52394:JM,52382
52400 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 231::CD,52403:CD,52404:CD,52412:CD,52417:CD,52421:CD,52422:CD,52430:CD,52435:CD,52458:CD,52462:CD,52466:CD,52470:CD,52474:CD,52478:CD,52482:CD,52489
52403 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
52404 :: CALL :: call :: Ljava/lang/String :: v82 = valueOf(v20)::
52412 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v23)::JM,52400:JM,52356:JM,52388:JM,52394:JM,52382
52417 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::JM,52400:JM,52388:JM,52394:JM,52382
52421 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v88 = new java.lang.StringBuilder::
52422 :: CALL :: call :: Ljava/lang/String :: v90 = valueOf(v33)::
52430 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v88.append(v35)::JM,52400:JM,52356:JM,52388:JM,52394:JM,52382
52435 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::JM,52400:JM,52388:JM,52394:JM,52382
52458 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/SSBondImpl :: v67 = new org.biojava.nbio.structure.io.SSBondImpl::
52462 :: CALL :: call :: V :: v67.setChainID1(v14)::CL,63094
52466 :: CALL :: call :: V :: v67.setResnum1(v20)::CL,63105
52470 :: CALL :: call :: V :: v67.setChainID2(v27)::CL,63116
52474 :: CALL :: call :: V :: v67.setResnum2(v33)::CL,63127
52478 :: CALL :: call :: V :: v67.setInsCode1(v63)::CL,63138
52482 :: CALL :: call :: V :: v67.setInsCode2(v66)::CL,63149
52486 :: EXPR :: reference :: Ljava/util/List :: v75 = p0 $this .ssbonds::
52489 :: CALL :: call :: Z :: v77 = v75.add(v67)::
52582 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_LINK_Handler(java.lang.String)::CD,52590:CD,52594
52590 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,52594:CL,54222
52594 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 16::CD,52596:CD,52602:CD,52606:CD,52612:CD,52616:CD,52622:CD,52626:CD,52632:CD,52636:CD,52642:CD,52646:CD,52652:CD,52656:CD,52662:CD,52666:CD,52672:CD,52676:CD,52682:CD,52686:CD,52692:CD,52696:CD,52702:CD,52706:CD,52712:CD,52716:CD,52722:CD,52726:CD,52732:CD,52739:JM,63184:JM,63202:JM,63187:JM,63205:JM,63190:JM,63208:JM,63193:JM,63211:JM,63196:JM,63181:JM,63214:JM,63199:CD,52757
52596 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(12), #(16))::
52602 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::
52606 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(16), #(17))::
52612 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::
52616 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(17), #(20))::
52622 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::
52626 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(21), #(22))::
52632 :: CALL :: call :: Ljava/lang/String :: v29 = v27.trim()::
52636 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(22), #(26))::
52642 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
52646 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $line .substring(#(26), #(27))::
52652 :: CALL :: call :: Ljava/lang/String :: v39 = v37.trim()::
52656 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(42), #(46))::
52662 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
52666 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(46), #(47))::
52672 :: CALL :: call :: Ljava/lang/String :: v50 = v48.trim()::
52676 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $line .substring(#(47), #(50))::
52682 :: CALL :: call :: Ljava/lang/String :: v55 = v53.trim()::
52686 :: CALL :: call :: Ljava/lang/String :: v59 = p1 $line .substring(#(51), #(52))::
52692 :: CALL :: call :: Ljava/lang/String :: v61 = v59.trim()::
52696 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(52), #(56))::
52702 :: CALL :: call :: Ljava/lang/String :: v66 = v64.trim()::
52706 :: CALL :: call :: Ljava/lang/String :: v69 = p1 $line .substring(#(56), #(57))::
52712 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::
52716 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(59), #(65))::
52722 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::
52726 :: CALL :: call :: Ljava/lang/String :: v81 = p1 $line .substring(#(66), #(72))::
52732 :: CALL :: call :: Ljava/lang/String :: v83 = v81.trim()::
52736 :: EXPR :: reference :: Ljava/util/List :: v84 = p0 $this .linkRecords::
52739 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/util/PDBTemporaryStorageUtils$LinkRecord :: v85 = new org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils$LinkRecord::
52757 :: CALL :: call :: Z :: v88 = v84.add(v85)::
52838 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::CE,52839:CD,52845
52839 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::JM,42071:JM,42152
52842 :: EXPR :: reference :: Z :: v3 = p0 $this .parseSecStruc::DD,52845
52845 :: NORM :: compound :: Z :: return v3::CF,52839
52847 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HELIX_Handler(java.lang.String)::CD,52855:CD,52859:JM,52865
52855 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,52859:CL,54222
52859 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,52861:CD,52865
52861 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,52865
52865 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,52873:CD,52879:CD,52883:CD,52889:CD,52895:CD,52899:CD,52905:CD,52911:CD,52915:CD,52921:CD,52927:CD,52931:CD,52937:CD,52941:CD,52947:CD,52953:CD,52959:CD,52965:CD,52971:CD,52977:CD,52983:CD,52992:JM,52865
52873 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,52865
52879 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
52883 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,52865
52889 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(21), #(25))::JM,52865
52895 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::
52899 :: CALL :: call :: Ljava/lang/String :: v29 = p1 $line .substring(#(25), #(26))::JM,52865
52905 :: CALL :: call :: Ljava/lang/String :: v33 = p1 $line .substring(#(27), #(30))::JM,52865
52911 :: CALL :: call :: Ljava/lang/String :: v35 = v33.trim()::
52915 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(31), #(32))::JM,52865
52921 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(33), #(37))::JM,52865
52927 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
52931 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(37), #(38))::JM,52865
52937 :: NORM :: declaration :: Ljava/util/HashMap :: v48 = new java.util.HashMap::
52941 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.put(#(initResName), v16)::
52947 :: CALL :: call :: Ljava/lang/Object :: v55 = v48.put(#(initChainId), v20)::
52953 :: CALL :: call :: Ljava/lang/Object :: v58 = v48.put(#(initSeqNum), v26)::
52959 :: CALL :: call :: Ljava/lang/Object :: v61 = v48.put(#(initICode), v29)::
52965 :: CALL :: call :: Ljava/lang/Object :: v64 = v48.put(#(endResName), v35)::
52971 :: CALL :: call :: Ljava/lang/Object :: v67 = v48.put(#(endChainId), v39)::
52977 :: CALL :: call :: Ljava/lang/Object :: v70 = v48.put(#(endSeqNum), v45)::
52983 :: CALL :: call :: Ljava/lang/Object :: v73 = v48.put(#(endICode), v47)::
52989 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .helixList::
52992 :: CALL :: call :: Z :: v76 = v74.add(v48)::
53073 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SHEET_Handler(java.lang.String)::CD,53081:CD,53085:JM,53091
53081 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,53085:CL,54222
53085 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,53087:CD,53091
53087 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,53091
53091 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,53099:CD,53105:CD,53109:CD,53115:CD,53121:CD,53125:CD,53131:CD,53137:CD,53141:CD,53147:CD,53153:CD,53157:CD,53163:CD,53167:CD,53173:CD,53179:CD,53185:CD,53191:CD,53197:CD,53203:CD,53209:CD,53218:JM,53091
53099 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(17), #(20))::JM,53091
53105 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
53109 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(21), #(22))::JM,53091
53115 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(22), #(26))::JM,53091
53121 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
53125 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(26), #(27))::JM,53091
53131 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(28), #(31))::JM,53091
53137 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
53141 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(32), #(33))::JM,53091
53147 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(33), #(37))::JM,53091
53153 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
53157 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(37), #(38))::JM,53091
53163 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
53167 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
53173 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
53179 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
53185 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
53191 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
53197 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
53203 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
53209 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
53215 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .strandList::
53218 :: CALL :: call :: Z :: v74 = v72.add(v46)::
53299 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TURN_Handler(java.lang.String)::CD,53307:CD,53311:JM,53317
53307 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,53311:CL,54222
53311 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,53313:CD,53317
53313 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,53317
53317 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,53325:CD,53331:CD,53335:CD,53341:CD,53347:CD,53351:CD,53357:CD,53363:CD,53367:CD,53373:CD,53379:CD,53383:CD,53389:CD,53393:CD,53399:CD,53405:CD,53411:CD,53417:CD,53423:CD,53429:CD,53435:CD,53444:JM,53317
53325 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,53317
53331 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
53335 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,53317
53341 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(20), #(24))::JM,53317
53347 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
53351 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(24), #(25))::JM,53317
53357 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(26), #(29))::JM,53317
53363 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
53367 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(30), #(31))::JM,53317
53373 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(31), #(35))::JM,53317
53379 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
53383 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(35), #(36))::JM,53317
53389 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
53393 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
53399 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
53405 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
53411 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
53417 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
53423 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
53429 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
53435 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
53441 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .turnList::
53444 :: CALL :: call :: Z :: v74 = v72.add(v46)::
53525 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.makeCompounds(java.util.List,java.util.List)::CD,53531:CD,53559:CD,53563:CD,53567:CD,53571:CD,53592:CD,53620:CD,53624
53531 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $compoundList .iterator()::JM,53624:JM,53563
53536 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,53624:JM,53563
53555 :: CALL :: call :: V :: p0 $this .pdb_COMPND_Handler(v12)::CL,63253
53559 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,53624:JM,53563
53563 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,53536:CD,53555:CD,53559:JM,53624:JM,53563
53564 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .compounds::JM,53571
53567 :: CALL :: call :: I :: v22 = v20.size()::JM,53571
53571 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 88::JM,63952:JM,63959:CD,53583
53580 :: EXPR :: reference :: Ljava/util/List :: v23 = p0 $this .compounds::
53583 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.get(#(0))::
53592 :: CALL :: call :: Ljava/util/Iterator :: v30 = p2 $sourceList .iterator()::JM,53624:JM,53563
53597 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,53624:JM,53563
53616 :: CALL :: call :: V :: p0 $this .pdb_SOURCE_Handler(v35)::CL,64063
53620 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,53624:JM,53563
53624 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 116::CD,53597:CD,53616:CD,53620:JM,53624:JM,53563
53661 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.triggerEndFileChecks()::CD,53672:CD,53677:CD,53682:CD,53706:CD,53748:CD,53752:CD,53772:CD,53782:CD,53792:CD,53802:CD,53812:CD,53819:CD,53823:CD,53881:CD,53891:CD,53898:CD,53902:CD,53909:CD,53927:CD,53963:CD,53964:CD,54025
53672 :: NORM :: declaration :: Ljava/util/Date :: v6 = new java.util.Date::
53677 :: CALL :: call :: Z :: v10 = v5.equals(v6)::JM,53682
53682 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 48::CD,53690:CD,53695
53690 :: CALL :: call :: Z :: v16 = v14.equals(v5)::JM,53695
53695 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 48::CD,53699
53699 :: CALL :: call :: V :: v17.setDepDate(v14)::CL,61637
53703 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v19 = p0 $this .current_chain::DD,53706
53706 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 102::CD,53713:CD,53727:CD,53733
53713 :: CALL :: call :: V :: v21.addGroup(v22)::CL,60033
53727 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v29 = p0 $this .isKnownChain(v26, v27)::JM,53733:CL,60275
53733 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 102::CD,53740
53734 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .current_model::
53737 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v31 = p0 $this .current_chain::
53740 :: CALL :: call :: Z :: v33 = v30.add(v31)::
53745 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .journalLines::JM,53752
53748 :: CALL :: call :: Z :: v36 = v34.isEmpty()::JM,53752
53752 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 129::CD,53753:CD,53762
53753 :: CALL :: call :: V :: p0 $this .buildjournalArticle()::CL,64729
53762 :: CALL :: call :: V :: v38.setJournalArticle(v39)::CL,65693
53772 :: CALL :: call :: V :: v41.addModel(v42)::CL,61582
53782 :: CALL :: call :: V :: v44.setPDBHeader(v45)::CL,65704
53792 :: CALL :: call :: V :: v47.setCrystallographicInfo(v48)::CL,65715
53802 :: CALL :: call :: V :: v50.setConnections(v51)::CL,65730
53812 :: CALL :: call :: V :: v53.setDBRefs(v54)::CL,65741
53819 :: CALL :: call :: Z :: v58 = v56.isAlignSeqRes()::JM,53823:CL,65788
53823 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 247::CD,53827:CD,53831:CD,53873
53827 :: CALL :: call :: Z :: v61 = v59.isHeaderOnly()::JM,53831:CL,54222
53831 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 247::CD,53848:CD,53873
53848 :: CALL :: call :: V :: v74.align(v76, v77)::CL,65819
53873 :: CALL :: call :: V :: storeUnAlignedSeqRes(v65, v66, v69)::CL,65875
53881 :: CALL :: call :: V :: p0 $this .linkChains2Compound(v79)::CL,66018
53891 :: CALL :: call :: V :: v81.setCompounds(v82)::CL,66455
53898 :: CALL :: call :: Z :: v86 = v84.isHeaderOnly()::JM,53902:CL,54222
53902 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 312::CD,53903
53903 :: CALL :: call :: V :: p0 $this .linkSitesToGroups()::CL,66466
53906 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v88 = p0 $this .bioAssemblyParser::DD,53909
53909 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 333::CD,53920
53920 :: CALL :: call :: V :: v89.setBioAssemblies(v92)::CL,66833
53924 :: EXPR :: reference :: Ljava/util/List :: v94 = p0 $this .ncsOperators::DD,53927
53927 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 383::CD,53931:CD,53935
53928 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .ncsOperators::JM,53935
53931 :: CALL :: call :: I :: v97 = v95.size()::JM,53935
53935 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 383::CD,53945:CD,53949:CD,53950:CD,53956
53939 :: EXPR :: reference :: Ljava/util/List :: v99 = p0 $this .ncsOperators::
53942 :: EXPR :: reference :: Ljava/util/List :: v100 = p0 $this .ncsOperators::JM,53949
53945 :: CALL :: call :: I :: v102 = v100.size()::JM,53949
53949 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v103 = new javax.vecmath.Matrix4d[]::
53950 :: CALL :: call :: [Ljava/lang/Object :: v105 = v99.toArray(v103)::
53956 :: CALL :: call :: V :: v98.setNcsOperators(v106)::CL,66844
53960 :: EXPR :: reference :: F :: v108 = p0 $this .rfreeNoCutoffLine::DD,53963
53963 :: EXPR :: assign :: Z :: v110 = v108 < #(0.0 f)::DD,53964
53964 :: PRED :: IF :: Z :: if (v110 <= #(0)) goto 415::CD,53968:CD,53969:CD,53984:CD,53985
53965 :: EXPR :: reference :: F :: v111 = p0 $this .rfreeStandardLine::DD,53968
53968 :: EXPR :: assign :: Z :: v112 = v111 > #(0.0 f)::DD,53969
53969 :: PRED :: IF :: Z :: if (v112 >= #(0)) goto 415::CD,53976:CD,53984:CD,53985
53976 :: CALL :: call :: V :: v127.setRfree(v128)::CL,66855
53981 :: EXPR :: reference :: F :: v113 = p0 $this .rfreeNoCutoffLine::DD,53984
53984 :: EXPR :: assign :: Z :: v114 = v113 < #(0.0 f)::DD,53985
53985 :: PRED :: IF :: Z :: if (v114 <= #(0)) goto 447::CD,53989:CD,53990:CD,54005:CD,54006
53986 :: EXPR :: reference :: F :: v115 = p0 $this .rfreeStandardLine::DD,53989
53989 :: EXPR :: assign :: Z :: v116 = v115 < #(0.0 f)::DD,53990
53990 :: PRED :: IF :: Z :: if (v116 <= #(0)) goto 447::CD,53997:CD,54005:CD,54006
53997 :: CALL :: call :: V :: v124.setRfree(v125)::CL,66855
54002 :: EXPR :: reference :: F :: v117 = p0 $this .rfreeNoCutoffLine::DD,54005
54005 :: EXPR :: assign :: Z :: v118 = v117 > #(0.0 f)::DD,54006
54006 :: PRED :: IF :: Z :: if (v118 >= #(0)) goto 476::CD,54010:CD,54011
54007 :: EXPR :: reference :: F :: v119 = p0 $this .rfreeStandardLine::DD,54010
54010 :: EXPR :: assign :: Z :: v120 = v119 < #(0.0 f)::DD,54011
54011 :: PRED :: IF :: Z :: if (v120 <= #(0)) goto 476::CD,54018
54018 :: CALL :: call :: V :: v121.setRfree(v122)::CL,66855
54025 :: CALL :: call :: Ljava/util/List :: v132 = v130.getCompounds()::CL,66866
54128 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::CE,54129:CD,54135
54129 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::JM,42130:JM,107476
54132 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomBonds::DD,54135
54135 :: NORM :: compound :: Z :: return v3::CF,54129
54137 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.formBonds()::CD,54156:CD,54170:CD,54174:CD,54178:CD,54182
54153 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .linkRecords::JM,54174
54156 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,54174
54161 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,54174
54166 :: CALL :: call :: V :: v3.formLinkRecordBond(v15)::CL,66984
54170 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,54174
54174 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,54161:CD,54166:CD,54170:JM,54174
54178 :: CALL :: call :: V :: v3.formDisulfideBonds(v17)::CL,67140
54182 :: CALL :: call :: V :: v3.makeBonds()::CL,67201
54201 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::CE,54202:CD,54208
54202 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::JM,42141:JM,107487
54205 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomCharges::DD,54208
54208 :: NORM :: compound :: Z :: return v3::CF,54202
54210 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addCharges()::CD,54217
54217 :: CALL :: call :: V :: addCharges(v3)::CL,67222
54222 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::CE,54223:CD,54229
54223 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::JM,42160:JM,47654:JM,49117:JM,50912:JM,51690:JM,52294:JM,52594:JM,52859:JM,53085:JM,53311:JM,53831:JM,53902:JM,62015:JM,107076:JM,107468:JM,107501:JM,123736:JM,125952
54226 :: EXPR :: reference :: Z :: v3 = p0 $this .headerOnly::DD,54229
54229 :: NORM :: compound :: Z :: return v3::CF,54223
54231 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecStruc()::CD,54240:CD,54251:CD,54262:CD,54306:CD,54310
54240 :: CALL :: call :: V :: p0 $this .setSecElement(v3, #(PDB_AUTHOR_ASSIGNMENT), v5)::CL,67539
54251 :: CALL :: call :: V :: p0 $this .setSecElement(v7, #(PDB_AUTHOR_ASSIGNMENT), v8)::CL,67539
54262 :: CALL :: call :: V :: p0 $this .setSecElement(v10, #(PDB_AUTHOR_ASSIGNMENT), v11)::CL,67539
54277 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v20 = v13.next()::CL,67847
54281 :: CALL :: call :: Z :: v22 = v20.hasAminoAtoms()::JM,54285:CL,67874
54285 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 109::CD,54286:CD,54291
54286 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.getProperty(#(secstruc))::JM,54291:CL,67918
54291 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 109::JM,67944:JM,67947:CD,54301
54301 :: CALL :: call :: V :: v20.setProperty(#(secstruc), v27)::CL,67961
54306 :: CALL :: call :: Z :: v17 = v13.hasNext()::JM,54310:CL,67981
54310 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 58::CD,54277:CD,54281:CD,54285:CD,54306
54353 :: NORM :: declaration :: Ljava/util/TreeSet :: v6 = new java.util.TreeSet::JM,54379:JM,54357:JM,54361
54357 :: CALL :: call :: Ljava/util/Collection :: v9 = synchronizedCollection(v6)::JM,54357:JM,54361
54361 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .currentlyLoading = v9::
54372 :: EXPR :: reference :: Ljava/lang/String :: v13 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::JM,54379
54374 :: CALL :: call :: Z :: v15 = p1 $pdbFilePath .endsWith(v13)::JM,54379
54379 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 65::CF,54380:CD,54381:CD,54389:CD,54391:CD,54396
54380 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
54381 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(p1 $pdbFilePath )::
54389 :: EXPR :: reference :: Ljava/lang/String :: v21 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::
54391 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
54396 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
54400 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(biojava.cache.files), #(true))::
54405 :: CALL :: call :: V :: p0 $this .setPath(v26)::CL,68008
54422 :: EXPR :: reference :: Ljava/util/Collection :: v34 = p0 $this .currentlyLoading::
54425 :: CALL :: call :: V :: v34.clear()::
54496 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.init()::CD,54503:CD,54512:CD,54513:CD,54563:CD,54568:CD,54573:CD,54593:CD,54598:CD,54603:CD,54620:CD,54625:CD,54630:CD,54650:CD,54655:CD,54660:CD,54677:CD,54682:CD,54687:CD,54704:CD,54709:CD,54714:CD,54745:CD,54750:CD,54755:CD,54766:CD,54774:CD,54779
54503 :: CALL :: call :: [Ljava/lang/String :: v7 = v3.split(#(:), #(2))::JM,54512
54509 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = #(null)::
54512 :: EXPR :: assign :: I :: v9 = v7.length::DD,54513
54513 :: PRED :: IF :: Z :: if (v9 <= #(1)) goto 396::CD,54522:CD,54526:CD,54540:CD,54791:CD,54796
54514 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(1)]::JM,54729
54522 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
54526 :: CALL :: call :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v17 = valueOf(v15)::JM,54530:CL,68056
54530 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v17::
54534 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = #(null)::
54537 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = p0 $this .mySource::DD,54540
54540 :: PRED :: IF :: Z :: if (v20 == #(null)) goto 396::CD,54541:CD,54547:CD,54555:CD,54791:CD,54796
54541 :: CALL :: call :: [I :: v78 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,68069
54544 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v79 = p0 $this .mySource::
54547 :: CALL :: call :: I :: v81 = v79.ordinal()::
54551 :: EXPR :: reference :: I :: v82 = v78[v81]::DD,54555
54555 :: PRED :: IF :: null :: switch v82::CD,54556:CD,54586:CD,54613:CD,54643:CD,54670:CD,54697:CD,54724:CD,54729:CD,54738
54556 :: CALL :: call :: Z :: v168 = p0 $this .initFromScop(v11)::CL,68212
54563 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
54568 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v11)::
54573 :: CALL :: call :: Ljava/lang/String :: v176 = v174.toString()::
54586 :: CALL :: call :: Z :: v157 = p0 $this .initFromPDP(v155)::CL,68271
54593 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
54598 :: CALL :: call :: Ljava/lang/StringBuilder :: v163 = v159.append(v11)::
54603 :: CALL :: call :: Ljava/lang/String :: v165 = v163.toString()::
54613 :: CALL :: call :: Z :: v145 = p0 $this .initFromCATH(v11)::CL,68323
54620 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
54625 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v11)::
54630 :: CALL :: call :: Ljava/lang/String :: v153 = v151.toString()::
54643 :: CALL :: call :: Z :: v134 = p0 $this .initFromBIO(v132)::CL,68382
54650 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::
54655 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v136.append(v11)::
54660 :: CALL :: call :: Ljava/lang/String :: v142 = v140.toString()::
54670 :: CALL :: call :: Z :: v122 = p0 $this .initFromECOD(v11)::CL,68423
54677 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
54682 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v124.append(v11)::
54687 :: CALL :: call :: Ljava/lang/String :: v130 = v128.toString()::
54697 :: CALL :: call :: Z :: v111 = p0 $this .initFromPDB(v11)::CL,68476
54704 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v113 = new java.lang.StringBuilder::
54709 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v113.append(v11)::
54714 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
54724 :: CALL :: call :: Z :: v95 = v11.startsWith(#(/))::JM,54729
54729 :: PRED :: IF :: Z :: if (v95 != #(0)) goto 333::CD,54730:CD,54738
54730 :: CALL :: call :: Z :: v109 = p0 $this .initFromFile()::CL,68558
54738 :: CALL :: call :: Z :: v98 = p0 $this .initFromURL(v96)::CL,68581
54745 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
54750 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v11)::
54755 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
54766 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
54774 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v84.append(v87)::
54779 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
54791 :: CALL :: call :: Z :: v24 = p0 $this .initFromScop(v22)::JM,54796:CL,68212
54796 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 408::CD,54801:CD,54806
54801 :: CALL :: call :: Z :: v27 = p0 $this .initFromCATH(v25)::JM,54806:CL,68323
54806 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 420::CD,54811:CD,54816
54811 :: CALL :: call :: Z :: v30 = p0 $this .initFromECOD(v28)::JM,54816:CL,68423
54816 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 432::CD,54821:CD,54826
54821 :: CALL :: call :: Z :: v33 = p0 $this .initFromURL(v31)::JM,54826:CL,68581
54826 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 442::CF,54828:CD,54832:CD,54840:CD,54844
54828 :: NORM :: declaration :: Ljava/io/File :: v34 = new java.io.File::JM,54869:JM,54912
54832 :: CALL :: call :: Ljava/lang/String :: v37 = expandUserHome(v35)::CL,38940
54840 :: CALL :: call :: Z :: v40 = v34.canRead()::JM,54844
54844 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 577::CD,54845:CD,54849:CD,54945
54845 :: CALL :: call :: Z :: v42 = v34.isDirectory()::JM,54849
54849 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 577::CD,54853:CD,54858:CD,54937:CD,54945
54853 :: CALL :: call :: Z :: v49 = v46.matches(#(\d\w\w\w))::JM,54858
54858 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 531::CD,54869:CD,54873:CD,54912:CD,54916
54869 :: CALL :: call :: Ljava/io/File :: v68 = v34.getAbsoluteFile()::JM,54869
54873 :: CALL :: call :: Ljava/lang/String :: v70 = v68.getParent()::
54912 :: CALL :: call :: Ljava/io/File :: v56 = v34.getAbsoluteFile()::JM,54912
54916 :: CALL :: call :: Ljava/lang/String :: v58 = v56.getParent()::
54937 :: CALL :: call :: Z :: v76 = p0 $this .initFromFile()::CL,68558
54945 :: CALL :: call :: Z :: v45 = p0 $this .initFromPDB(v43)::CL,68476
55048 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,55053:CD,55057
55053 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v5 = p0 $this .getBaseIdentifier()::CL,68676
55057 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.loadStructure(p1 $cache )::CL,69105:CL,69420:CL,69396:CL,69153:CL,69137:CL,69088:CL,69121
55065 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.reduce(org.biojava.nbio.structure.Structure)::CD,55070:CD,55074
55070 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v5 = p0 $this .getBaseIdentifier()::CL,68676
55074 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,70040:CL,70057:CL,70023:CL,70006:CL,69441:CL,69989
55331 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains()::CE,55332:CD,55335:CD,55340
55332 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains()::JM,66349:JM,66496:JM,82113:JM,82266:JM,82473:JM,82619:JM,92444:JM,93555
55335 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(#(0))::JM,55340:CL,70080
55340 :: NORM :: compound :: Ljava/util/List :: return v5::DD,55332
55702 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::CE,55703:CD,55709
55703 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::JM,60077:JM,82070:JM,82075:JM,82223:JM,82228:JM,82356:JM,107276:JM,107304
55706 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .residueNumber::DD,55709
55709 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,55703
55711 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toString()::CE,55712:CD,55715:CD,55722:CD,55726:CD,55734:CD,55755:CD,55759
55712 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.toString()::JM,60214:JM,67662:JM,67722:JM,86435:JM,86455:JM,92326
55715 :: NORM :: declaration :: Ljava/io/StringWriter :: v3 = new java.io.StringWriter::JM,55759
55722 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
55726 :: CALL :: call :: Ljava/io/StringWriter :: v9 = v3.append(v7)::
55731 :: EXPR :: reference :: Ljava/lang/Character :: v10 = p0 $this .insCode::DD,55734
55734 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 52::CD,55738:CD,55742:JM,55759
55735 :: EXPR :: reference :: Ljava/lang/Character :: v12 = p0 $this .insCode::JM,55742
55738 :: CALL :: call :: C :: v14 = v12.charValue()::JM,55742
55742 :: PRED :: IF :: Z :: if (v14 == #(32)) goto 52::CD,55746:CD,55750:JM,55759
55743 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::
55746 :: CALL :: call :: C :: v18 = v16.charValue()::
55750 :: CALL :: call :: Ljava/io/StringWriter :: v20 = v3.append(v18)::
55755 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,55759
55759 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,55712
55773 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChain()::CE,55774:CD,55780
55774 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.HetatomImpl.getChain()::JM,48078:JM,124239
55777 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .parent::DD,55780
55780 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::CF,55774
55791 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBCode()::CE,55792:CD,55798
55792 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.StructureImpl.getPDBCode()::
55795 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_id::DD,55798
55798 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,55792
57823 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getX()::CE,57824:CD,57834
57824 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getX()::JM,88452
57827 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
57830 :: EXPR :: reference :: D :: v5 = v3[#(0)]::DD,57834
57834 :: NORM :: compound :: D :: return v5::CF,57824
57837 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getY()::CE,57838:CD,57848
57838 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getY()::JM,88461
57841 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
57844 :: EXPR :: reference :: D :: v5 = v3[#(1)]::DD,57848
57848 :: NORM :: compound :: D :: return v5::CF,57838
57851 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getZ()::CE,57852:CD,57862
57852 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getZ()::JM,88470
57855 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
57858 :: EXPR :: reference :: D :: v5 = v3[#(2)]::DD,57862
57862 :: NORM :: compound :: D :: return v5::CF,57852
59928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::CF,59929:CD,59932:CD,59934
59929 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::JM,47383:JM,47320
59932 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_SPLIT_DIR::CF,59934
59934 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,59929
59936 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::CF,59937:CD,59940:CD,59942
59937 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::JM,47383:JM,47320
59940 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_SPLIT_DIR::CF,59942
59942 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,59937
59944 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::CF,59945:CD,59948:CD,59950
59945 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::JM,47409:JM,47343
59948 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_OBSOLETE_DIR::CF,59950
59950 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,59945
59952 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::CF,59953:CD,59956:CD,59958
59953 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::JM,47409:JM,47343
59956 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_OBSOLETE_DIR::CF,59958
59958 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,59953
59967 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = #(null)::
59970 :: EXPR :: reference :: Ljava/lang/String :: v5 = org.biojava.nbio.structure.ChainImpl.DEFAULT_CHAIN_ID::DD,59972
59972 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = v5::
59975 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,59979
59979 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v6::
59982 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,59986
59986 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = v8::
59989 :: NORM :: declaration :: Ljava/util/HashMap :: v10 = new java.util.HashMap::DD,59993
59993 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbResnumMap = v10::
59996 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = #(null)::
60013 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setChainID(java.lang.String)::JM,60018
60018 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = p1 $nam ::
60024 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getChainID()::CE,60025:CD,60031
60025 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ChainImpl.getChainID()::JM,47703:JM,47740:JM,60297:JM,67630:JM,67690:JM,69760:JM,69858:JM,80391:JM,86333:JM,92119:JM,107208:JM,107427:JM,120731:JM,120782:JM,123923:JM,123918:JM,123959
60028 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainID::DD,60031
60031 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,60025
60033 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.addGroup(org.biojava.nbio.structure.Group)::CD,60038:CD,60042:CD,60046:CD,60060:CD,60064:CD,60068:CD,60073:CD,60077:CD,60082:CD,60214:JM,60192
60038 :: CALL :: call :: V :: p1 $group .setChain(p0 $this )::CL,60997
60042 :: CALL :: call :: Ljava/util/List :: v6 = p1 $group .getAltLocs()::JM,60064:CL,75032
60046 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,60064
60051 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,60064
60056 :: CALL :: call :: V :: v14.setChain(p0 $this )::CL,60997
60060 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,60064
60064 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,60051:CD,60056:CD,60060:JM,60064
60065 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .groups::
60068 :: CALL :: call :: Z :: v18 = v16.add(p1 $group )::JM,60192
60073 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v21 = p1 $group .getResidueNumber()::JM,60077:CL,55702
60077 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 78::CF,60214:CD,60078
60078 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,60214:CL,55711
60082 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 252::CD,60086:CD,60090:CD,60091:CD,60098:CD,60103
60083 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .groups::JM,60090
60086 :: CALL :: call :: I :: v27 = v25.size()::JM,60090
60090 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 - #(1)::
60091 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
60098 :: CALL :: call :: Z :: v34 = v32.containsKey(v24)::JM,60103
60103 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 240::CD,60133:CD,60138:CD,60139:CD,60143:CD,60163:CD,60168:CD,60169:CD,60173:CD,60192:CD,60193:CD,60207
60127 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .groups::
60133 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v24)::JM,60138
60138 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::
60139 :: CALL :: call :: I :: v54 = v52.intValue()::
60143 :: CALL :: call :: Ljava/lang/Object :: v56 = v48.get(v54)::
60157 :: EXPR :: reference :: Ljava/util/List :: v61 = p0 $this .groups::
60163 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v24)::JM,60168
60168 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::
60169 :: CALL :: call :: I :: v67 = v65.intValue()::
60173 :: CALL :: call :: Ljava/lang/Object :: v69 = v61.get(v67)::
60192 :: EXPR :: assign :: Z :: v74=p1 $group  INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,60193
60193 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 252::CD,60197
60197 :: CALL :: call :: Ljava/lang/Object :: v77 = v75.put(v24, v31)::
60207 :: CALL :: call :: Ljava/lang/Object :: v37 = v35.put(v24, v31)::
60214 :: EXPR :: assign :: null :: PHI v24 = #(null), v23::DD,60082
60275 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::CE,60276:CD,60300:CD,60304:CD,60306:JM,60297:JM,60287
60276 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::JM,47730:JM,48516:JM,48909:JM,48993:JM,49159:JM,53733
60282 :: CALL :: call :: Ljava/lang/Object :: v9 = p2 $chains .get(v17)::JM,60304:JM,60297:JM,60287
60287 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,60298
60288 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getChainID()::JM,60297:CL,60024
60292 :: CALL :: call :: Z :: v14 = p1 $chainID .equals(v12)::JM,60304:JM,60297:JM,60287
60297 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CD,60298:CD,60299:CD,60300:CD,60304:CD,60306
60298 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v10::DD,60276
60299 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,60306
60300 :: CALL :: call :: I :: v7 = p2 $chains .size()::JM,60304:JM,60297:JM,60287
60304 :: PRED :: IF :: Z :: if (v17 < v7) goto 7::CD,60282:CD,60287:CD,60288:CD,60292:CD,60297:CD,60305:JM,60304
60305 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,60276
60306 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::JM,60297:JM,60287:DD,60299:DD,60304
60331 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
60334 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p2 $residueNumber ::
60337 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p3 $insCode ::
60348 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::CE,60349:CD,60352:CD,60356:CD,60393:CD,60395
60349 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::JM,47868:JM,51871
60352 :: CALL :: call :: Ljava/lang/Character :: v4 = get1LetterCodeAmino(p1 $groupCode3 )::JM,60356:JM,60395:CL,75062
60356 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 71::CF,60395:CD,60357:CD,60361:CD,60365
60357 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $groupCode3 .trim()::
60361 :: CALL :: call :: Z :: v9 = isNucleotide(v7)::JM,60365:CL,75077
60365 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 66::CD,60368:CD,60373:CD,60374:CD,60383:CD,60389:CD,60394:CD,60395
60368 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.get(v7)::JM,60373
60373 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::DD,60374:DD,60394
60374 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 52::CF,60394:CD,60377:CD,60382
60377 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.get(v7)::JM,60382
60382 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,60394
60383 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 71::CF,60395:CD,60384
60384 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(88))::JM,60395
60389 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(88))::JM,60395
60393 :: NORM :: compound :: Ljava/lang/Character :: return v26::DD,60349
60394 :: EXPR :: assign :: null :: PHI v22 = v17, v21::DD,60383:DD,60395
60395 :: EXPR :: assign :: null :: PHI v26 = v4, v22, v24, v13::CF,60393
60417 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::CE,60418:CD,60424:CD,60428:JM,60439:JM,60444
60418 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::JM,48946:JM,60937
60424 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = getGroupFromChemCompDictionary(p3 $aminoCode3 )::JM,60438:JM,60428:CL,75113
60428 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 28::CD,60429:CD,60433:CD,60437:CD,60439:CD,60468:CD,60469
60429 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v10 = v7.getChemComp()::CL,75346
60433 :: CALL :: call :: Z :: v12 = v10.isEmpty()::JM,60437:CL,75406
60437 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,60438:CD,60439:CD,60468:CD,60469
60438 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,60418
60439 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 40::CF,60445:CD,60440:CD,60444:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,60469
60440 :: CALL :: call :: C :: v16 = p2 $aminoCode1 .charValue()::JM,60444
60444 :: PRED :: IF :: Z :: if (#(88) != v16) goto 53::CF,60445:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,60450:CD,60454:CD,60469
60445 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v24 = new org.biojava.nbio.structure.HetatomImpl::DD,60469
60450 :: CALL :: call :: Z :: v18 = isNucleotide(p3 $aminoCode3 )::JM,60454:CL,75077
60454 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 75::CF,60460:CF,60455:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,60464:CD,60469
60455 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v22 = new org.biojava.nbio.structure.NucleotideImpl::DD,60469
60460 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v19 = new org.biojava.nbio.structure.AminoAcidImpl::DD,60469
60464 :: CALL :: call :: V :: v19.setAminoType(p2 $aminoCode1 )::CL,75547
60468 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v26::DD,60418
60469 :: EXPR :: assign :: null :: PHI v26 = v24, v22, v19::CF,60468
60495 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBName(java.lang.String)::JM,60513
60513 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
60526 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setPDBName(java.lang.String)::JM,60531
60531 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
60537 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setResidueNumber(org.biojava.nbio.structure.ResidueNumber)::JM,60542
60542 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = p1 $residueNumber ::
60548 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addTohetGroupsDecider(org.biojava.nbio.structure.Group)::CD,60553:CD,60557:CD,60562:JM,60604
60553 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $group .getPDBName()::JM,60562:CL,75053
60557 :: CALL :: call :: Z :: v9 = v6.equals(#(HOH))::JM,60562
60562 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,60564:CD,60568:CD,60591:CD,60618
60564 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = p1 $group .getChemComp()::JM,60568:CL,75346
60568 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 48::CD,60569:CD,60573:CD,60575:CD,60580:CD,60582:CD,60586:CD,60590:CD,60618
60569 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v19 = p1 $group .getType()::JM,60580:JM,60575:CL,70174:CL,70190:CL,70182
60573 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v20 = org.biojava.nbio.structure.GroupType.HETATM::JM,60580:JM,60575
60575 :: CALL :: call :: Z :: v22 = v19.equals(v20)::JM,60580:JM,60575
60580 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 62::CF,60618
60582 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v14 = p1 $group .getChemComp()::CL,75346
60586 :: CALL :: call :: Z :: v16 = v14.isStandard()::JM,60590:CL,75558
60590 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 62::CF,60618
60591 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 99::CD,60595:CD,60599:CD,60604
60595 :: CALL :: call :: Ljava/util/List :: v26 = v24.getHetGroups()::JM,60604:CL,75567
60599 :: CALL :: call :: Z :: v28 = v26.contains(p1 $group )::JM,60604
60604 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 99::CD,60608:CD,60612
60608 :: CALL :: call :: Ljava/util/List :: v31 = v29.getHetGroups()::CL,75567
60612 :: CALL :: call :: Z :: v33 = v31.add(p1 $group )::JM,60604
60618 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1), #(0), #(1)::DD,60591
60642 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.trimToSize()::CD,60649:CD,60650:CD,60661:CD,60662:CD,60670:CD,60674:CD,60697:CD,60711
60646 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,60649
60649 :: EXPR :: assign :: Z :: v4=v3 INSTANCEOF java.util.ArrayList::DD,60650
60650 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 23::CD,60654:CD,60655
60651 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::DD,60654
60654 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
60655 :: CALL :: call :: V :: v7.trimToSize()::
60658 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .altLocs::DD,60661
60661 :: EXPR :: assign :: Z :: v10=v9 INSTANCEOF java.util.ArrayList::DD,60662
60662 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 45::CD,60666:CD,60667
60663 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .altLocs::DD,60666
60666 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::
60667 :: CALL :: call :: V :: v12.trimToSize()::
60670 :: CALL :: call :: Z :: v15 = p0 $this .hasAltLoc()::JM,60674:CL,75576
60674 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 90::CD,60675:CD,60679:CD,60692:CD,60696:CF,60697
60675 :: CALL :: call :: Ljava/util/List :: v17 = p0 $this .getAltLocs()::JM,60696:CL,75032
60679 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,60696
60684 :: CALL :: call :: Ljava/lang/Object :: v23 = v19.next()::JM,60696
60689 :: CALL :: call :: V :: v24.trimToSize()::CL,60642
60692 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,60696
60696 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 65::CD,60684:CD,60689:CD,60692:JM,60696:CF,60697
60697 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,60705
60705 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v26::
60708 :: EXPR :: reference :: Ljava/util/Map :: v29 = p0 $this .atomNameLookup::DD,60711
60711 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 126::CD,60712
60712 :: NORM :: declaration :: Ljava/util/HashMap :: v31 = new java.util.HashMap::DD,60720
60720 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v31::
60751 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::CE,60752:CD,60762:CD,60766:CD,60770:JM,60786:JM,60836:JM,60860
60752 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::JM,48520
60762 :: CALL :: call :: Ljava/util/List :: v9 = v7.getAtoms()::JM,60770:CL,75639
60766 :: CALL :: call :: I :: v11 = v9.size()::JM,60770
60770 :: PRED :: IF :: Z :: if (v11 <= #(0)) goto 54::CD,60771:CD,60777:CD,60781:CD,60786:CD,60794:CD,60798:CD,60843:CD,60847:JM,60770
60771 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,60770
60777 :: CALL :: call :: Ljava/lang/Character :: v17 = v15.getAltLoc()::JM,60786:CL,75648
60781 :: CALL :: call :: Z :: v19 = v17.equals(p1 $altLoc )::JM,60786:JM,60836
60786 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 54::CD,60790:CD,60794:CD,60798:CD,60843:CD,60847
60787 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,60790
60790 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,60752
60794 :: CALL :: call :: Ljava/util/List :: v22 = v20.getAltLocs()::JM,60807:JM,60847:CL,75032
60798 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,60807:JM,60847
60803 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,60807:JM,60847
60807 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::DD,60837
60808 :: CALL :: call :: Ljava/util/List :: v31 = v29.getAtoms()::JM,60816:JM,60842:CL,75639
60812 :: CALL :: call :: I :: v33 = v31.size()::JM,60816:JM,60842
60816 :: PRED :: IF :: Z :: if (v33 <= #(0)) goto 160::CD,60817:CD,60838:CD,60842:CD,60843:CD,60847:JM,60816:JM,60807
60817 :: CALL :: call :: Ljava/util/Iterator :: v36 = v31.iterator()::JM,60816:JM,60842
60822 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,60842
60827 :: CALL :: call :: Ljava/lang/Character :: v43 = v41.getAltLoc()::JM,60836:CL,75648
60831 :: CALL :: call :: Z :: v45 = v43.equals(p1 $altLoc )::JM,60836:JM,60786
60836 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 150::CD,60837:CD,60838:CD,60842
60837 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v29::DD,60752
60838 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,60842
60842 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 121::CD,60822:CD,60827:CD,60831:CD,60836:CD,60843:CD,60847:JM,60842:JM,60807
60843 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,60807:JM,60847
60847 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 78::CD,60803:CD,60807:CD,60808:CD,60812:CD,60816:CD,60851:CD,60855:CD,60860:JM,60847
60851 :: CALL :: call :: Ljava/lang/String :: v48 = v46.getPDBName()::JM,60860:CL,75053
60855 :: CALL :: call :: Z :: v50 = p4 $groupCode3 .equals(v48)::JM,60860
60860 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 266::CD,60864:CD,60868:CD,60872:CD,60908:CD,60915:CD,60926:CD,60933:CD,60937
60864 :: CALL :: call :: Ljava/util/List :: v62 = v60.getAtoms()::JM,60872:CL,75639
60868 :: CALL :: call :: I :: v64 = v62.size()::JM,60872
60872 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,60876:CD,60880:CD,60884:CD,60885:CD,60889:CD,60893:CD,60897:CD,60903:CD,60907
60873 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v77 = p0 $this .current_group::DD,60876
60876 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v77::DD,60752
60880 :: CALL :: call :: Ljava/lang/Object :: v67 = v65.clone()::JM,60884:CL,75669:CL,75811:CL,75986
60884 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::DD,60907:CF,60885
60885 :: NORM :: declaration :: Ljava/util/ArrayList :: v69 = new java.util.ArrayList::
60889 :: CALL :: call :: V :: v68.setAtoms(v69)::CL,76142
60893 :: CALL :: call :: Ljava/util/List :: v73 = v68.getAltLocs()::CL,75032
60897 :: CALL :: call :: V :: v73.clear()::
60903 :: CALL :: call :: V :: v75.addAltLoc(v68)::CL,76228
60907 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v68::DD,60752
60908 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p4 $groupCode3 )::JM,60937:CL,60417
60915 :: CALL :: call :: V :: v52.setPDBName(p4 $groupCode3 )::CL,60526:CL,60495
60926 :: CALL :: call :: V :: v52.setResidueNumber(v56)::CL,60537
60933 :: CALL :: call :: V :: v58.addAltLoc(v52)::CL,76228
60937 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v52::DD,60752
60997 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChain(org.biojava.nbio.structure.Chain)::CD,61008:JM,61002
61002 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = p1 $chain ::
61005 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v4 = p0 $this .residueNumber::DD,61008
61008 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 25::CD,61016
61016 :: CALL :: call :: V :: v6.setChainId(v8)::CL,63047
61027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.switchCAOnly()::CD,61037:CD,61069:CD,61073:CD,61077:CD,61085
61031 :: EXPR :: modify :: Z :: p0 $this .parseCAonly = #(1)::
61037 :: CALL :: call :: Ljava/util/List :: v6 = getRepresentativeAtomsOnly(v4)::CL,76260
61048 :: CALL :: call :: Ljava/util/List :: v13 = v11.getModel(v19)::CL,70080
61053 :: CALL :: call :: Ljava/util/List :: v15 = getRepresentativeAtomsOnly(v13)::CL,76260
61060 :: CALL :: call :: V :: v16.setModel(v19, v15)::CL,76307
61065 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,61085
61069 :: CALL :: call :: I :: v10 = v8.nrModels()::JM,61073:CL,76385
61073 :: PRED :: IF :: Z :: if (v19 < v10) goto 22::CD,61048:CD,61053:CD,61060:CD,61065:CD,61069:CD,61085
61077 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getRepresentativeAtomsOnly(v20)::CL,76398
61085 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::DD,61065:DD,61073
61106 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::CE,61107:CD,61113
61107 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::JM,48232:JM,48240
61110 :: EXPR :: reference :: [Ljava/lang/String :: v3 = p0 $this .fullAtomNames::DD,61113
61113 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,61107
61122 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #(null)::
61125 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v5 = org.biojava.nbio.structure.Element.R::DD,61127
61127 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = v5::
61130 :: NORM :: declaration :: [D :: v7 = new []::DD,61131
61131 :: EXPR :: modify :: [D :: p0 $this .coords = v7::
61134 :: EXPR :: modify :: F :: p0 $this .occupancy = #(0.0 f)::
61137 :: EXPR :: modify :: F :: p0 $this .tempfactor = #(0.0 f)::
61140 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
61143 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = #(null)::
61146 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = #(null)::
61149 :: EXPR :: modify :: S :: p0 $this .charge = #(0)::
61172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setPDBserial(int)::JM,61177
61177 :: EXPR :: modify :: I :: p0 $this .pdbserial = p1 $i ::
61183 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setAltLoc(java.lang.Character)::CD,61188:JM,61197
61188 :: PRED :: IF :: Z :: if (p1 $c  != #(null)) goto 14::CD,61193:JM,61188:JM,61197
61189 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
61193 :: CALL :: call :: C :: v6 = p1 $c .charValue()::JM,61188:JM,61197
61197 :: EXPR :: modify :: C :: p0 $this .altLoc = v6::
61207 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setName(java.lang.String)::JM,61212
61212 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $s ::
61218 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCoords([])::JM,61223
61223 :: EXPR :: modify :: [D :: p0 $this .coords = p1 $c ::
61229 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setOccupancy(float)::JM,61234
61234 :: EXPR :: modify :: F :: p0 $this .occupancy = p1 $occu ::
61240 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setTempFactor(float)::JM,61245
61245 :: EXPR :: modify :: F :: p0 $this .tempfactor = p1 $temp ::
61251 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.valueOfIgnoreCase(java.lang.String)::CD,61257:CD,61261:CD,61269:CD,61270:CD,61275:CD,61280
61257 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $elementSymbol .toLowerCase()::
61261 :: CALL :: call :: Ljava/lang/Object :: v7 = v3.get(v5)::
61269 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
61270 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
61275 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(p1 $elementSymbol )::
61280 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
61295 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setElement(org.biojava.nbio.structure.Element)::JM,61300
61300 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = p1 $e ::
61306 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAtom(org.biojava.nbio.structure.Atom)::CD,61311:CD,61318:CD,61323:CD,61327:CD,61335
61311 :: CALL :: call :: V :: p1 $atom .setGroup(p0 $this )::CL,76564
61315 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::
61318 :: CALL :: call :: Z :: v7 = v5.add(p1 $atom )::
61323 :: CALL :: call :: [D :: v9 = p1 $atom .getCoords()::JM,61327:CL,76575
61327 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 33::CD,61328
61328 :: CALL :: call :: V :: p0 $this .setPDBFlag(#(1))::CL,76584
61332 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .atomNameLookup::DD,61335
61335 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 176::CD,61343:CD,61349:CD,61350
61343 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.put(v16, p1 $atom )::JM,61349
61349 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,61350
61350 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 176::CD,61351:CD,61355:CD,61359:CD,61381:CD,61386:CD,61390:CD,61395:CD,61400:CD,61405:CD,61410:CD,61414:CD,61419:CD,61424:CD,61428:CD,61433:CD,61438:CD,61447
61351 :: CALL :: call :: Ljava/lang/Character :: v22 = p1 $atom .getAltLoc()::JM,61447:JM,61359:CL,75648
61355 :: CALL :: call :: C :: v24 = v22.charValue()::JM,61447:JM,61359
61359 :: PRED :: IF :: Z :: if (v24 == #(32)) goto 107::CF,61447:CF,61360:CD,61365:CD,61370:CD,61375
61360 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::JM,61447
61365 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v24)::JM,61447
61370 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(#(')))::JM,61447
61375 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::JM,61447
61381 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
61386 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $atom .getName()::CL,61487
61390 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
61395 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( ))::
61400 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v36)::
61405 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v49.append(#( is already present i...))::
61410 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .toString()::CL,76883:CL,76785:CL,76595
61414 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
61419 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v56.append(#(. The atom with serial ))::
61424 :: CALL :: call :: I :: v61 = p1 $atom .getPDBserial()::CL,77022
61428 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v61)::
61433 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#( will be ignored in l...))::
61438 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
61447 :: EXPR :: assign :: null :: PHI v36 = #(), v35::
61487 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getName()::CE,61488:CD,61494
61488 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AtomImpl.getName()::JM,61543:JM,70239:JM,76470
61491 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,61494
61494 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,61488
61496 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::CE,61497:CD,61504:JM,61543
61497 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::JM,48502:JM,67883:JM,67889:JM,67895:JM,67901:JM,124323
61501 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,61504
61504 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 33::CD,61508:CD,61512:CD,61517:CD,61518:CD,61524:CD,61545:CD,61549
61508 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $fullName .trim()::JM,61543
61512 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,61517
61517 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,61518
61518 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 31::CD,61519:CD,61520
61519 :: NORM :: compound :: Z :: return #(1)::DD,61497
61520 :: NORM :: compound :: Z :: return #(0)::DD,61497
61521 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,61549
61524 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,61549
61529 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,61549
61534 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,61543:CL,61487
61538 :: CALL :: call :: Z :: v18 = v16.equals(p1 $fullName )::JM,61543
61543 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 71::CD,61544:CD,61545:CD,61549
61544 :: NORM :: compound :: Z :: return #(1)::DD,61497
61545 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,61549
61549 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 46::CD,61529:CD,61534:CD,61538:CD,61543:CD,61550:JM,61549
61550 :: NORM :: compound :: Z :: return #(0)::DD,61497
61571 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setRecordType(java.lang.String)::JM,61576
61576 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = p1 $recordName ::
61582 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addModel(java.util.List)::CD,61587:CD,61601:CD,61605:CD,61609
61587 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $model .iterator()::JM,61605
61592 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,61605
61597 :: CALL :: call :: V :: v11.setStructure(p0 $this )::CL,77031
61601 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,61605
61605 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,61592:CD,61597:CD,61601:JM,61605
61606 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .models::
61609 :: CALL :: call :: Z :: v15 = v13.add(p1 $model )::JM,61605
61626 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setClassification(java.lang.String)::JM,61631
61631 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classification = p1 $classification ::
61637 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDepDate(java.util.Date)::JM,61642
61642 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = p1 $depDate ::
61648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBCode(java.lang.String)::JM,61653
61653 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_id = p1 $pdb_id_ ::
61659 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setIdCode(java.lang.String)::JM,61664
61664 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
61670 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getAuthors()::CE,61671:CD,61677
61671 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getAuthors()::JM,49498:JM,127053
61674 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .authors::DD,61677
61677 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,61671
61679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setAuthors(java.lang.String)::JM,61684
61684 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authors = p1 $authors ::
61690 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getTitle()::CE,61691:CD,61697
61691 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getTitle()::JM,49602:JM,49590:JM,49596
61694 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .title::DD,61697
61697 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,61691
61699 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setTitle(java.lang.String)::JM,61704
61704 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
61710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setExperimentalTechnique(java.lang.String)::CD,61715:CD,61719
61715 :: CALL :: call :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = getByName(p1 $techniqueStr )::JM,61729:JM,61719:JM,61725:CL,77042
61719 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 12::CD,61724
61721 :: EXPR :: reference :: Ljava/util/Set :: v7 = p0 $this .techniques::DD,61724
61724 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CD,61725:JM,61729
61725 :: CALL :: call :: Ljava/util/EnumSet :: v12 = of(v5)::JM,61729:JM,61725
61729 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .techniques = v12::
61763 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setA(double)::JM,61768
61768 :: EXPR :: modify :: D :: p0 $this .a = p1 $a ::
61774 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setB(double)::JM,61779
61779 :: EXPR :: modify :: D :: p0 $this .b = p1 $b ::
61785 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setC(double)::JM,61790
61790 :: EXPR :: modify :: D :: p0 $this .c = p1 $c ::
61796 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setAlpha(double)::JM,61808:JM,61801:CD,61804
61801 :: EXPR :: modify :: D :: p0 $this .alpha = p1 $alpha ::
61804 :: CALL :: call :: D :: v5 = toRadians(p1 $alpha )::JM,61808:JM,61804
61808 :: EXPR :: modify :: D :: p0 $this .alphaRad = v5::
61816 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setBeta(double)::JM,61828:JM,61821:CD,61824
61821 :: EXPR :: modify :: D :: p0 $this .beta = p1 $beta ::
61824 :: CALL :: call :: D :: v5 = toRadians(p1 $beta )::JM,61824:JM,61828
61828 :: EXPR :: modify :: D :: p0 $this .betaRad = v5::
61836 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setGamma(double)::JM,61841:JM,61848:CD,61844
61841 :: EXPR :: modify :: D :: p0 $this .gamma = p1 $gamma ::
61844 :: CALL :: call :: D :: v5 = toRadians(p1 $gamma )::JM,61844:JM,61848
61848 :: EXPR :: modify :: D :: p0 $this .gammaRad = v5::
61856 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::CE,61857:CD,61860:CD,61864:CD,61865
61857 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::JM,50067:JM,125025
61860 :: CALL :: call :: D :: v4 = p0 $this .getA()::JM,61864:CL,77057
61864 :: EXPR :: assign :: Z :: v6 = v4 > #(10.0 d)::DD,61865
61865 :: PRED :: IF :: Z :: if (v6 >= #(0)) goto 36::CD,61866:CD,61870:CD,61871:CD,61879
61866 :: CALL :: call :: D :: v9 = p0 $this .getB()::JM,61870:CL,77066
61870 :: EXPR :: assign :: Z :: v10 = v9 > #(10.0 d)::DD,61871
61871 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 36::CD,61872:CD,61876:CD,61877:CD,61879
61872 :: CALL :: call :: D :: v12 = p0 $this .getC()::JM,61876:CL,77075
61876 :: EXPR :: assign :: Z :: v13 = v12 > #(10.0 d)::DD,61877
61877 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 36::CD,61878:CD,61879
61878 :: NORM :: compound :: Z :: return #(0)::CF,61857
61879 :: NORM :: compound :: Z :: return #(1)::CF,61857
61891 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setCrystalCell(org.biojava.nbio.structure.xtal.CrystalCell)::JM,61896
61896 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: p0 $this .cell = p1 $cell ::
61902 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::CE,61903:CD,61906:JM,61911:JM,61961:JM,61918
61903 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::JM,50091:JM,125146
61906 :: PRED :: IF :: Z :: if (p1 $shortName  == #(null)) goto 13::CD,61907:CD,61911:CD,61912:JM,61961:JM,61918
61907 :: CALL :: call :: I :: v5 = p1 $shortName .length()::JM,61911:JM,61961:JM,61918
61911 :: PRED :: IF :: Z :: if (v5 > #(2)) goto 17::CD,61912:CD,61913:CD,61918:CD,61919:CD,61920:CD,61926:CD,61934:CD,61939:CD,61943:CD,61948:CD,61954:CD,61959:CD,61960:CD,61961:JM,61911
61912 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return #(null)::DD,61903
61913 :: CALL :: call :: Z :: v9 = p1 $shortName .equals(#(P 1-))::JM,61911:JM,61961:JM,61918
61918 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 26::CF,61961
61919 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
61920 :: CALL :: call :: Ljava/lang/String :: v16 = v12.substring(#(0), #(1))::
61926 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(v16)::
61934 :: CALL :: call :: Ljava/lang/String :: v21 = v12.substring(#(1))::
61939 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toLowerCase()::
61943 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v13.append(v23)::
61948 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
61954 :: CALL :: call :: Ljava/lang/Object :: v30 = v28.get(v27)::JM,61959
61959 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::CF,61960
61960 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return v31::DD,61903
61961 :: EXPR :: assign :: null :: PHI v12 = p1 $shortName , #(P -1)::CF,61919
61981 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardSg(boolean)::JM,61986
61986 :: EXPR :: modify :: Z :: p0 $this .nonStandardSg = p1 $nonStandardSg ::
61992 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setSpaceGroup(org.biojava.nbio.structure.xtal.SpaceGroup)::JM,61997
61997 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: p0 $this .sg = p1 $spaceGroup ::
62003 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_800_Handler(java.lang.String)::CD,62011:CD,62015
62011 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,62015:CL,54222
62015 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,62017:CD,62022:CD,62027:CD,62028
62017 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(11))::
62022 :: CALL :: call :: [Ljava/lang/String :: v13 = v10.split(#(: ))::JM,62027
62027 :: EXPR :: assign :: I :: v14 = v13.length::DD,62028
62028 :: PRED :: IF :: Z :: if (v14 != #(2)) goto 389::CD,62033:CD,62038:CD,62192:CD,62197:CD,62242:CD,62247
62029 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v13[#(0)]::JM,62038
62033 :: CALL :: call :: Z :: v19 = v16.equals(#(SITE_IDENTIFIER))::JM,62038
62038 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 229::CD,62043:CD,62049:CD,62054:CD,62059:CD,62064:CD,62075:CD,62080:CD,62087
62039 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v13[#(1)]::JM,62100
62043 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::JM,62100
62049 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
62054 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v23)::JM,62100
62059 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#('))::JM,62100
62064 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
62075 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v23)::JM,62080
62080 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::DD,62081
62081 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Site :: p0 $this .site = v39::
62084 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Site :: v40 = p0 $this .site::DD,62087
62087 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 121::CD,62091:CD,62095:CD,62100:CD,62102:JM,77105:JM,77121:JM,77118:CD,62127:CD,62135:CD,62143:CD,62148:CD,62158:CD,62166:CD,62170:CD,62175:CD,62180
62091 :: CALL :: call :: Ljava/lang/String :: v44 = v42.getSiteID()::JM,62100:CL,77084
62095 :: CALL :: call :: Z :: v46 = v23.equals(v44)::JM,62100
62100 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 229::CD,62102:JM,77105:JM,77121:JM,77118:CD,62127:CD,62135:CD,62143:CD,62148:CD,62158:CD,62166:CD,62170:CD,62175:CD,62180
62102 :: NORM :: declaration :: Ljava/util/ArrayList :: v48 = new java.util.ArrayList::
62127 :: CALL :: call :: Ljava/lang/Object :: v57 = v51.put(v54, v55)::
62135 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
62143 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v62)::
62148 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::
62158 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
62163 :: EXPR :: reference :: Ljava/util/Map :: v72 = p0 $this .siteMap::
62166 :: CALL :: call :: I :: v74 = v72.size()::
62170 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v69.append(v74)::
62175 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(#( sites))::
62180 :: CALL :: call :: Ljava/lang/String :: v81 = v79.toString()::
62188 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v13[#(0)]::JM,62197
62192 :: CALL :: call :: Z :: v86 = v83.equals(#(EVIDENCE_CODE))::JM,62197
62197 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 287::CD,62202:CD,62208:CD,62213:CD,62218:CD,62223:CD,62234
62198 :: EXPR :: reference :: Ljava/lang/Object :: v87 = v13[#(1)]::
62202 :: CALL :: call :: Ljava/lang/String :: v89 = v87.trim()::
62208 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
62213 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v91.append(v89)::
62218 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v95.append(#('))::
62223 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
62234 :: CALL :: call :: V :: v101.setEvCode(v89)::CL,77138
62238 :: EXPR :: reference :: Ljava/lang/Object :: v103 = v13[#(0)]::JM,62247
62242 :: CALL :: call :: Z :: v106 = v103.equals(#(SITE_DESCRIPTION))::JM,62247
62247 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 389::CD,62252:CD,62258:CD,62263:CD,62268:CD,62273:CD,62284:CD,62290:CD,62298:CD,62302:CD,62307:CD,62320
62248 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v13[#(1)]::
62252 :: CALL :: call :: Ljava/lang/String :: v109 = v107.trim()::
62258 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
62263 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v109)::
62268 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#('))::
62273 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
62284 :: CALL :: call :: V :: v121.setDescription(v109)::CL,77149
62290 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
62298 :: CALL :: call :: Ljava/lang/String :: v129 = v127.getSiteID()::CL,77084
62302 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v124.append(v129)::
62307 :: CALL :: call :: Ljava/lang/String :: v133 = v131.toString()::
62320 :: CALL :: call :: Ljava/lang/String :: v138 = v136.remark800toPDB()::CL,77160
62404 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::CE,62405:CD,62411
62405 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::JM,50606:JM,107512
62408 :: EXPR :: reference :: Z :: v3 = p0 $this .parseBioAssembly::DD,62411
62411 :: NORM :: compound :: Z :: return v3::CF,62405
62420 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
62423 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,62427
62427 :: EXPR :: modify :: Ljava/util/List :: p0 $this .currentChainIDs = v5::
62430 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = #(null)::
62433 :: EXPR :: modify :: [D :: p0 $this .shift = #(null)::
62436 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,62440
62440 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .transformationMap = v7::
62443 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
62460 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.pdb_REMARK_350_Handler(java.lang.String)::CD,62465:CD,62470:JM,62561:JM,62521:JM,62538:JM,62555:JM,62491:JM,62572
62465 :: CALL :: call :: Z :: v6 = p1 $line .startsWith(#(REMARK 350 BIOMOLECULE:))::JM,62561:JM,62470:JM,62521:JM,62538:JM,62555:JM,62491:JM,62572
62470 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 38::CD,62471:CD,62474:CD,62479:CD,62483:CD,62487:CD,62495:CD,62500
62471 :: CALL :: call :: V :: p0 $this .initialize()::CL,77182
62474 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(24))::JM,62561:JM,62470:JM,62521:JM,62538:JM,62555:JM,62491:JM,62572
62479 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,62561:JM,62521:JM,62538:JM,62555:JM,62491:JM,62572
62483 :: CALL :: call :: I :: v51 = parseInt(v49)::JM,62491
62487 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v51)::JM,62491
62491 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = v53::
62495 :: CALL :: call :: Z :: v10 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,62500
62500 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 56::CD,62501:CD,62506:CD,62507
62501 :: CALL :: call :: Z :: v13 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,62506
62506 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 68::CD,62507:CD,62516:CD,62521:JM,62561:JM,62470:JM,62538:JM,62555:JM,62491:JM,62572
62507 :: CALL :: call :: I :: v43 = p0 $this .getMmSize(p1 $line )::JM,62512:CL,77228
62512 :: EXPR :: modify :: I :: p0 $this .currentMmSize = v43::
62516 :: CALL :: call :: Z :: v16 = p1 $line .startsWith(#(REMARK 350 APPLY THE ...))::JM,62561:JM,62470:JM,62521:JM,62538:JM,62555:JM,62491:JM,62572
62521 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 94::CD,62525:CD,62528:CD,62533:CD,62538:JM,62561:JM,62470:JM,62521:JM,62555:JM,62491:JM,62572
62522 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .currentChainIDs::
62525 :: CALL :: call :: V :: v39.clear()::
62528 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,77273
62533 :: CALL :: call :: Z :: v19 = p1 $line .startsWith(#(REMARK 350 IN ADDITIO...))::JM,62561:JM,62470:JM,62521:JM,62538:JM,62555:JM,62491:JM,62572
62538 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 120::CD,62542:CD,62545:CD,62550:CD,62555:JM,62561:JM,62470:JM,62521:JM,62538:JM,62491:JM,62572
62539 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .currentChainIDs::
62542 :: CALL :: call :: V :: v36.clear()::
62545 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,77273
62550 :: CALL :: call :: Z :: v22 = p1 $line .startsWith(#(REMARK 350))::JM,62561:JM,62470:JM,62521:JM,62538:JM,62555:JM,62491:JM,62572
62555 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 146::CD,62556:CD,62561:CD,62567:CD,62572:JM,62470:JM,62521:JM,62538:JM,62555:JM,62491
62556 :: CALL :: call :: Z :: v25 = p1 $line .contains(#(AND CHAINS:))::JM,62561:JM,62470:JM,62521:JM,62538:JM,62555:JM,62491:JM,62572
62561 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 146::CD,62562:CD,62567:CD,62572:JM,62561:JM,62470:JM,62521:JM,62538:JM,62555:JM,62491
62562 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,77273
62567 :: CALL :: call :: Z :: v28 = p1 $line .startsWith(#(REMARK 350   BIOMT))::JM,62561:JM,62470:JM,62521:JM,62538:JM,62555:JM,62491:JM,62572
62572 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 174::CD,62573:CD,62578
62573 :: CALL :: call :: Z :: v30 = p0 $this .readMatrix(p1 $line )::JM,62578:CL,77324
62578 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 174::CD,62579:CD,62585
62579 :: CALL :: call :: V :: p0 $this .saveMatrix()::CL,77480
62582 :: EXPR :: reference :: I :: v32 = p0 $this .modelNumber::DD,62585
62585 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v32 + #(1)::DD,62586
62586 :: EXPR :: modify :: I :: p0 $this .modelNumber = v34::
62673 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getResolution()::CE,62674:CD,62680
62674 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getResolution()::JM,50765:JM,50782:JM,126698:JM,126711
62677 :: EXPR :: reference :: F :: v3 = p0 $this .resolution::DD,62680
62680 :: NORM :: compound :: F :: return v3::CF,62674
62682 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setResolution(float)::JM,62687
62687 :: EXPR :: modify :: F :: p0 $this .resolution = p1 $resolution ::
62693 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::CE,62694:CD,62700:CD,62706:CD,62710:CD,62715:CD,62725:CD,62726:JM,62720
62694 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::JM,51013:JM,51020:JM,51027:JM,51034:JM,51041:JM,51048:JM,51055:JM,51062:JM,51069:JM,51076
62700 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(p2 $start , p3 $end )::JM,62720:JM,62715
62706 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,62720:JM,62715
62710 :: CALL :: call :: Z :: v14 = v9.equals(#())::JM,62720:JM,62715
62715 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 48::CF,62726:CD,62716:CD,62720:JM,62715
62716 :: CALL :: call :: I :: v17 = parseInt(v9)::JM,62720:JM,62715
62720 :: NORM :: declaration :: Ljava/lang/Integer :: v18 = new java.lang.Integer::JM,62720:DD,62726
62725 :: NORM :: compound :: Ljava/lang/Integer :: return v21::DD,62694
62726 :: EXPR :: assign :: null :: PHI v21 = #(null), v18::CF,62725
62743 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getModDate()::CE,62744:CD,62750
62744 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.PDBHeader.getModDate()::JM,51270
62747 :: EXPR :: reference :: Ljava/util/Date :: v3 = p0 $this .modDate::DD,62750
62750 :: NORM :: compound :: Ljava/util/Date :: return v3::CF,62744
62779 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setModDate(java.util.Date)::JM,62784
62784 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = p1 $modDate ::
62797 :: EXPR :: modify :: C :: p0 $this .insertBegin = #(32)::
62800 :: EXPR :: modify :: C :: p0 $this .insertEnd = #(32)::
62803 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = #(32)::
62806 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = #(32)::
62819 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdCode(java.lang.String)::JM,62824
62824 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
62830 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setChainId(java.lang.String)::JM,62835
62835 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
62887 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqBegin(int)::JM,62892
62892 :: EXPR :: modify :: I :: p0 $this .seqbegin = p1 $seqbegin ::
62898 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertBegin(char)::JM,62903
62903 :: EXPR :: modify :: C :: p0 $this .insertBegin = p1 $insertBegin ::
62909 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqEnd(int)::JM,62914
62914 :: EXPR :: modify :: I :: p0 $this .seqEnd = p1 $seqEnd ::
62920 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertEnd(char)::JM,62925
62925 :: EXPR :: modify :: C :: p0 $this .insertEnd = p1 $insertEnd ::
62931 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDatabase(java.lang.String)::JM,62936
62936 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .database = p1 $database ::
62942 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbAccession(java.lang.String)::JM,62947
62947 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbAccession = p1 $dbAccession ::
62953 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbIdCode(java.lang.String)::JM,62958
62958 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbIdCode = p1 $dbIdCode ::
62964 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqBegin(int)::JM,62969
62969 :: EXPR :: modify :: I :: p0 $this .dbSeqBegin = p1 $dbSeqBegin ::
62975 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsBegin(char)::JM,62980
62980 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = p1 $idbnsBegin ::
62986 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqEnd(int)::JM,62991
62991 :: EXPR :: modify :: I :: p0 $this .dbSeqEnd = p1 $dbSeqEnd ::
62997 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsEnd(char)::JM,63002
63002 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = p1 $idbnsEnd ::
63047 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setChainId(java.lang.String)::JM,63052
63052 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
63058 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setSeqNum(java.lang.Integer)::JM,63063
63063 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
63069 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setInsCode(java.lang.Character)::JM,63074
63074 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p1 $insCode ::
63094 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setChainID1(java.lang.String)::JM,63099
63099 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID1 = p1 $chainID1 ::
63105 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setResnum1(java.lang.String)::JM,63110
63110 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resnum1 = p1 $resnum1 ::
63116 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setChainID2(java.lang.String)::JM,63121
63121 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID2 = p1 $chainID2 ::
63127 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setResnum2(java.lang.String)::JM,63132
63132 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resnum2 = p1 $resnum2 ::
63138 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setInsCode1(java.lang.String)::JM,63143
63143 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode1 = p1 $insCode1 ::
63149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.setInsCode2(java.lang.String)::JM,63154
63154 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode2 = p1 $insCode2 ::
63181 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name1 = p1 $name1 ::
63184 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .altLoc1 = p2 $altLoc1 ::
63187 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resName1 = p3 $resName1 ::
63190 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID1 = p4 $chainID1 ::
63193 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resSeq1 = p5 $resSeq1 ::
63196 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .iCode1 = p6 $iCode1 ::
63199 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name2 = p7 $name2 ::
63202 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .altLoc2 = p8 $altLoc2 ::
63205 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resName2 = p9 $resName2 ::
63208 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID2 = p10 $chainID2 ::
63211 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resSeq2 = p11 $resSeq2 ::
63214 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .iCode2 = p12 $iCode2 ::
63253 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_COMPND_Handler(java.lang.String)::CD,63260:CD,63268:CD,63273:CD,63283:CD,63291:CD,63296:CD,63306:CD,63314:CD,63319:CD,63329:CD,63337:CD,63342:CD,63353:CD,63360:CD,63364:CD,63370:CD,63374:CD,63379:CD,63380:CD,63700
63260 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
63265 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .previousContinuationField::
63268 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v5.append(v8)::
63273 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
63283 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
63288 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .continuationField::
63291 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v15.append(v18)::
63296 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
63306 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
63311 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .continuationString::
63314 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v25.append(v28)::
63319 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
63329 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
63337 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v35.append(v38)::
63342 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
63350 :: EXPR :: reference :: Z :: v44 = p0 $this .isLegacyFormat::DD,63353
63353 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 131::CF,63700:CD,63354
63354 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(0), #(72))::JM,63700
63360 :: CALL :: call :: I :: v52 = v49.length()::
63364 :: CALL :: call :: Ljava/lang/String :: v54 = v49.substring(#(10), v52)::
63370 :: CALL :: call :: Ljava/lang/String :: v56 = v54.trim()::
63374 :: CALL :: call :: [Ljava/lang/String :: v59 = v56.split(#(\s+))::JM,63379
63379 :: EXPR :: assign :: I :: v60 = v59.length::DD,63380:DD,63416
63380 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 202::CD,63381:CD,63387:CD,63392:CD,63416
63381 :: EXPR :: reference :: Ljava/util/List :: v61 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,63392
63383 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v59[#(0)]::JM,63392
63387 :: CALL :: call :: Z :: v64 = v61.contains(v62)::JM,63392
63392 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 202::CD,63403:CD,63408:CD,63416:CD,63437:CD,63443:CD,63447:CD,63661:CD,63665:CD,63669
63393 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v59[#(0)]::DD,63397
63397 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v72::
63400 :: EXPR :: reference :: Ljava/lang/String :: v73 = p0 $this .previousContinuationField::JM,63408
63403 :: CALL :: call :: Z :: v76 = v73.equals(#())::JM,63408
63408 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 231::
63409 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .continuationField::DD,63412
63412 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v77::
63416 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 231::CD,63421:CD,63426:CD,63437:CD,63443:CD,63447:CD,63661:CD,63665:CD,63669
63417 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v59[#(0)]::JM,63426
63421 :: CALL :: call :: Z :: v68 = v65.contains(#(:))::JM,63426
63426 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 231::CD,63437:CD,63443:CD,63447:CD,63661:CD,63665:CD,63669
63437 :: CALL :: call :: Ljava/lang/String :: v80 = v54.replace(v78, #())::
63443 :: CALL :: call :: Ljava/lang/String :: v82 = v80.trim()::
63447 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v83 = new java.util.StringTokenizer::JM,63611:JM,63665
63453 :: CALL :: call :: Ljava/lang/String :: v88 = v83.nextToken()::JM,63611
63457 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .previousContinuationField::JM,63465
63460 :: CALL :: call :: Z :: v91 = v89.equals(#())::JM,63465
63465 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 286::
63466 :: EXPR :: reference :: Ljava/lang/String :: v92 = p0 $this .continuationField::DD,63469
63469 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v92::
63472 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .previousContinuationField::JM,63483
63475 :: EXPR :: reference :: Ljava/lang/String :: v94 = p0 $this .continuationField::JM,63483
63478 :: CALL :: call :: Z :: v96 = v93.equals(v94)::JM,63483
63483 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 429::CD,63484:CD,63489:CD,63494
63484 :: EXPR :: reference :: Ljava/util/List :: v97 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,63494
63486 :: EXPR :: reference :: Ljava/lang/String :: v98 = p0 $this .continuationField::JM,63494
63489 :: CALL :: call :: Z :: v100 = v97.contains(v98)::JM,63494
63494 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 429::CD,63497:CD,63505:CD,63510:CD,63520:CD,63525:CD,63530:CD,63541:CD,63542:CD,63550:CD,63555:CD,63559:CD,63569:CD,63577:CD,63582
63497 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v102 = new java.lang.StringBuilder::
63502 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .continuationField::
63505 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v102.append(v105)::
63510 :: CALL :: call :: Ljava/lang/String :: v109 = v107.toString()::
63520 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v112 = new java.lang.StringBuilder::
63525 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v112.append(v88)::JM,63611
63530 :: CALL :: call :: Ljava/lang/String :: v118 = v116.toString()::
63538 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .continuationString::JM,63564
63541 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v121 = new java.lang.StringBuilder::JM,63564
63542 :: CALL :: call :: Ljava/lang/String :: v123 = valueOf(v88)::
63550 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v121.append(#( ))::JM,63564
63555 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::JM,63564
63559 :: CALL :: call :: Ljava/lang/String :: v131 = v120.concat(v129)::JM,63564
63564 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v131::
63569 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
63574 :: EXPR :: reference :: Ljava/lang/String :: v136 = p0 $this .continuationString::
63577 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(v136)::
63582 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
63590 :: EXPR :: reference :: Ljava/lang/String :: v142 = p0 $this .continuationField::JM,63601
63593 :: EXPR :: reference :: Ljava/lang/String :: v143 = p0 $this .previousContinuationField::JM,63601
63596 :: CALL :: call :: Z :: v145 = v142.equals(v143)::JM,63601
63601 :: PRED :: IF :: Z :: if (v145 != #(0)) goto 512::CD,63605:CD,63610
63602 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationString::JM,63610
63605 :: CALL :: call :: Z :: v148 = v146.equals(#())::JM,63610
63610 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 466::CD,63621:CD,63632:CD,63633:CD,63641:CD,63646
63611 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v88::
63621 :: CALL :: call :: V :: p0 $this .compndValueSetter(v149, v150)::CL,77670
63626 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationField::DD,63629
63629 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v152::
63632 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,63650
63633 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v88)::
63641 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v153.append(#( ))::JM,63650
63646 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::JM,63650
63650 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v160::
63661 :: CALL :: call :: Z :: v86 = v83.hasMoreTokens()::JM,63665
63665 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 259::CD,63453:CD,63460:CD,63465:CD,63478:CD,63483:CD,63596:CD,63601:CD,63661:JM,63611
63666 :: EXPR :: reference :: Z :: v164 = p0 $this .isLastCompndLine::DD,63669
63669 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 578::CD,63676:CD,63687
63676 :: CALL :: call :: V :: p0 $this .compndValueSetter(v165, v166)::CL,77670
63684 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v168 = p0 $this .current_compound::DD,63687
63687 :: PRED :: IF :: Z :: if (v168 == #(null)) goto 578::CD,63694
63688 :: EXPR :: reference :: Ljava/util/List :: v170 = p0 $this .compounds::
63691 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v171 = p0 $this .current_compound::
63694 :: CALL :: call :: Z :: v173 = v170.add(v171)::
63700 :: EXPR :: assign :: null :: PHI v49 = p1 $line , v48::
63823 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = #(null)::
63826 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #(null)::
63829 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = #(null)::
63832 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = #(null)::
63835 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = #(null)::
63838 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = #(null)::
63841 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = #(null)::
63844 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = #(null)::
63847 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .numRes = #(null)::
63850 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resNames = #(null)::
63853 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .headerVars = #(null)::
63856 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = #(null)::
63859 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = #(null)::
63862 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = #(null)::
63865 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = #(null)::
63868 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = #(null)::
63871 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = #(null)::
63874 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = #(null)::
63877 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = #(null)::
63880 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = #(null)::
63883 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = #(null)::
63886 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = #(null)::
63889 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = #(null)::
63892 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = #(null)::
63895 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = #(null)::
63898 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = #(null)::
63901 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = #(null)::
63904 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = #(null)::
63907 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = #(null)::
63910 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = #(null)::
63913 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = #(null)::
63916 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = #(null)::
63919 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = #(null)::
63922 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = #(null)::
63925 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = #(null)::
63928 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = #(null)::
63931 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = #(null)::
63934 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = #(null)::
63937 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = #(null)::
63940 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = #(null)::
63943 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = #(null)::
63946 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = #(null)::
63949 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = #(null)::
63952 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,63956
63956 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = v5::
63959 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,63963
63963 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .chains2pdbResNums2ResSerials = v7::
63966 :: EXPR :: modify :: I :: p0 $this .molId = #(-1)::
64063 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SOURCE_Handler(java.lang.String)::CD,64068:CD,64074:CD,64080:CD,64085:CD,64090:CD,64100:CD,64108:CD,64113:CD,64123:CD,64131:CD,64136:CD,64146:CD,64154:CD,64159:CD,64169:CD,64177:CD,64182:CD,64190:CD,64194:CD,64201:CD,64205:CD,64213:CD,64218:CD,64223:CD,64228:CD,64236:CD,64245:CD,64250:CD,64356:CD,64362:CD,64366:CD,64560:CD,64564:CD,64568:CD,64584:JM,64328
64068 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(9), #(10))::JM,64194:JM,64584:JM,64328
64074 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,64194:JM,64584:JM,64328
64080 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
64085 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v9)::JM,64328
64090 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,64328
64100 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
64105 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .previousContinuationField::
64108 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v20.append(v23)::
64113 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
64123 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
64128 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .continuationField::
64131 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::
64136 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
64146 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
64151 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .continuationString::
64154 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v40.append(v43)::
64159 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
64169 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
64177 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
64182 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
64190 :: CALL :: call :: I :: v60 = p1 $line .length()::JM,64194:JM,64584:JM,64328
64194 :: PRED :: IF :: Z :: if (v60 <= #(79)) goto 170::CF,64584:CD,64195:JM,64194:JM,64328
64195 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(0), #(79))::JM,64194:JM,64584:JM,64328
64201 :: CALL :: call :: I :: v67 = v65.length()::
64205 :: CALL :: call :: Ljava/lang/String :: v69 = v65.substring(#(10), v67)::
64213 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v71 = new java.lang.StringBuilder::
64218 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v71.append(v69)::
64223 :: CALL :: call :: Ljava/lang/StringBuilder :: v78 = v75.append(#(<))::
64228 :: CALL :: call :: Ljava/lang/String :: v80 = v78.toString()::
64236 :: CALL :: call :: [Ljava/lang/String :: v84 = v69.split(#(\s+))::JM,64286
64241 :: EXPR :: reference :: Ljava/lang/Object :: v85 = v84[#(0)]::JM,64250
64245 :: CALL :: call :: Z :: v88 = v85.equals(#())::JM,64250
64250 :: PRED :: IF :: Z :: if (v88 != #(0)) goto 274::CD,64251:CD,64257:CD,64262:CD,64286:CD,64287
64251 :: EXPR :: reference :: Ljava/util/List :: v89 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,64262
64253 :: EXPR :: reference :: Ljava/lang/Object :: v90 = v84[#(0)]::JM,64262
64257 :: CALL :: call :: Z :: v92 = v89.contains(v90)::JM,64262
64262 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 274::CD,64273:CD,64278:CD,64286:CD,64287
64263 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v84[#(0)]::DD,64267
64267 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v114::
64270 :: EXPR :: reference :: Ljava/lang/String :: v115 = p0 $this .previousContinuationField::JM,64278
64273 :: CALL :: call :: Z :: v117 = v115.equals(#())::JM,64278
64278 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 374::
64279 :: EXPR :: reference :: Ljava/lang/String :: v118 = p0 $this .continuationField::DD,64282
64282 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v118::
64286 :: EXPR :: assign :: I :: v93 = v84.length::DD,64287
64287 :: PRED :: IF :: Z :: if (v93 <= #(1)) goto 328::CD,64288:CD,64294:CD,64299:CD,64323:CD,64328
64288 :: EXPR :: reference :: Ljava/util/List :: v95 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,64299
64290 :: EXPR :: reference :: Ljava/lang/Object :: v96 = v84[#(1)]::JM,64299
64294 :: CALL :: call :: Z :: v98 = v95.contains(v96)::JM,64299
64299 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 328::CD,64310:CD,64315:CD,64323:CD,64328
64300 :: EXPR :: reference :: Ljava/lang/Object :: v109 = v84[#(1)]::DD,64304
64304 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v109::
64307 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .previousContinuationField::JM,64315
64310 :: CALL :: call :: Z :: v112 = v110.equals(#())::JM,64315
64315 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 374::
64316 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .continuationField::DD,64319
64319 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v113::
64323 :: CALL :: call :: Z :: v100 = v9.equals(#())::JM,64328
64328 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 374::CD,64341:CD,64346
64335 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = #(MOLECULE:)::
64338 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .previousContinuationField::JM,64346
64341 :: CALL :: call :: Z :: v107 = v105.equals(#())::JM,64346
64346 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 374::
64347 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .continuationField::DD,64350
64350 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v108::
64356 :: CALL :: call :: Ljava/lang/String :: v121 = v69.replace(v119, #())::
64362 :: CALL :: call :: Ljava/lang/String :: v123 = v121.trim()::
64366 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v124 = new java.util.StringTokenizer::JM,64510:JM,64564
64372 :: CALL :: call :: Ljava/lang/String :: v129 = v124.nextToken()::JM,64510
64376 :: EXPR :: reference :: Ljava/lang/String :: v130 = p0 $this .previousContinuationField::JM,64384
64379 :: CALL :: call :: Z :: v132 = v130.equals(#())::JM,64384
64384 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 429::
64385 :: EXPR :: reference :: Ljava/lang/String :: v133 = p0 $this .continuationField::DD,64388
64388 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v133::
64391 :: EXPR :: reference :: Ljava/lang/String :: v134 = p0 $this .previousContinuationField::JM,64402
64394 :: EXPR :: reference :: Ljava/lang/String :: v135 = p0 $this .continuationField::JM,64402
64397 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,64402
64402 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 546::CD,64403:CD,64408:CD,64413
64403 :: EXPR :: reference :: Ljava/util/List :: v138 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,64413
64405 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .continuationField::JM,64413
64408 :: CALL :: call :: Z :: v141 = v138.contains(v139)::JM,64413
64413 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 546::CD,64416:CD,64424:CD,64429:CD,64440:CD,64441:CD,64449:CD,64454:CD,64458:CD,64468:CD,64476:CD,64481
64416 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v143 = new java.lang.StringBuilder::
64421 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationField::
64424 :: CALL :: call :: Ljava/lang/StringBuilder :: v148 = v143.append(v146)::
64429 :: CALL :: call :: Ljava/lang/String :: v150 = v148.toString()::
64437 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationString::JM,64463
64440 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,64463
64441 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v129)::
64449 :: CALL :: call :: Ljava/lang/StringBuilder :: v159 = v153.append(#( ))::JM,64463
64454 :: CALL :: call :: Ljava/lang/String :: v161 = v159.toString()::JM,64463
64458 :: CALL :: call :: Ljava/lang/String :: v163 = v152.concat(v161)::JM,64463
64463 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v163::
64468 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
64473 :: EXPR :: reference :: Ljava/lang/String :: v168 = p0 $this .continuationString::
64476 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v165.append(v168)::
64481 :: CALL :: call :: Ljava/lang/String :: v172 = v170.toString()::
64489 :: EXPR :: reference :: Ljava/lang/String :: v174 = p0 $this .continuationField::JM,64500
64492 :: EXPR :: reference :: Ljava/lang/String :: v175 = p0 $this .previousContinuationField::JM,64500
64495 :: CALL :: call :: Z :: v177 = v174.equals(v175)::JM,64500
64500 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 629::CD,64504:CD,64509
64501 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .continuationString::JM,64509
64504 :: CALL :: call :: Z :: v180 = v178.equals(#())::JM,64509
64509 :: PRED :: IF :: Z :: if (v180 == #(0)) goto 583::CD,64520:CD,64531:CD,64532:CD,64540:CD,64545
64510 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v129::
64520 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v181, v182)::CL,78096
64525 :: EXPR :: reference :: Ljava/lang/String :: v184 = p0 $this .continuationField::DD,64528
64528 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v184::
64531 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::JM,64549
64532 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v129)::
64540 :: CALL :: call :: Ljava/lang/StringBuilder :: v190 = v185.append(#( ))::JM,64549
64545 :: CALL :: call :: Ljava/lang/String :: v192 = v190.toString()::JM,64549
64549 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v192::
64560 :: CALL :: call :: Z :: v127 = v124.hasMoreTokens()::JM,64564
64564 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 402::CD,64372:CD,64379:CD,64384:CD,64397:CD,64402:CD,64495:CD,64500:CD,64560:JM,64510
64565 :: EXPR :: reference :: Z :: v196 = p0 $this .isLastSourceLine::DD,64568
64568 :: PRED :: IF :: Z :: if (v196 == #(0)) goto 674::CD,64575
64575 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v197, v198)::CL,78096
64584 :: EXPR :: assign :: null :: PHI v65 = p1 $line , v64::
64729 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.buildjournalArticle()::JM,78800:JM,78793:CD,64746:CD,64750:CD,64754:CD,64758:CD,64762:CD,64766:CD,64770:CD,64774:CD,64781:CD,65296:CD,65300:CD,65304:CD,65308:CD,65313:CD,65320:CD,65324:CD,65329:CD,65336:CD,65340:CD,65345:JM,79426:JM,79300:JM,79431:JM,79305:JM,79593:JM,79594:JM,79338:JM,79277:JM,79470:JM,79406:JM,79411:JM,79282:JM,79602:JM,79287:JM,79607:JM,79577:JM,79386:JM,79292:JM,79391:CD,65361:CD,65368:CD,65372:CD,65377:CD,65396:CD,65407:CD,65418:CD,65425:CD,65429:CD,65433:CD,65440:CD,65444:CD,65448:CD,65455:CD,65459:CD,65463:CD,65470:CD,65474:CD,65478:CD,65485:CD,65489:CD,65493:CD,65508
64746 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
64750 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v10 = new java.lang.StringBuffer::
64754 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v12 = new java.lang.StringBuffer::
64758 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v14 = new java.lang.StringBuffer::
64762 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v16 = new java.lang.StringBuffer::
64766 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v18 = new java.lang.StringBuffer::
64770 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v20 = new java.lang.StringBuffer::
64774 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v22 = new java.lang.StringBuffer::
64778 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .journalLines::JM,65300:JM,64790
64781 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,65300:JM,64790
64786 :: CALL :: call :: Ljava/lang/Object :: v31 = v26.next()::JM,65300:JM,64790
64790 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::JM,64795:JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247:JM,65118
64791 :: CALL :: call :: I :: v34 = v32.length()::JM,64795
64795 :: PRED :: IF :: Z :: if (v34 >= #(19)) goto 162::CD,64798:CD,64803:CD,64808:CD,64817:CD,64823:CD,64828:CD,64877:CD,64882:CD,64936:CD,64941:CD,64990:CD,64995:CD,65049:CD,65054:CD,65108:CD,65113:JM,65193:JM,65247
64798 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v223 = new java.lang.StringBuilder::
64803 :: CALL :: call :: Ljava/lang/StringBuilder :: v227 = v223.append(v32)::
64808 :: CALL :: call :: Ljava/lang/String :: v229 = v227.toString()::
64817 :: CALL :: call :: Ljava/lang/String :: v39 = v32.substring(#(12), #(16))::JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
64823 :: CALL :: call :: Z :: v42 = v39.equals(#(AUTH))::JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
64828 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 237::CD,64829:CD,64833:CD,64839:CD,64843:CD,64850:CD,64855:CD,64859:CD,64864:CD,64869:JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
64829 :: CALL :: call :: I :: v44 = v32.length()::
64833 :: CALL :: call :: Ljava/lang/String :: v46 = v32.substring(#(19), v44)::
64839 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::
64843 :: CALL :: call :: Ljava/lang/StringBuffer :: v50 = v8.append(v48)::
64850 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
64855 :: CALL :: call :: Ljava/lang/String :: v56 = v8.toString()::
64859 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v52.append(v56)::
64864 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#('))::
64869 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
64877 :: CALL :: call :: Z :: v67 = v39.equals(#(TITL))::JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
64882 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 308::CD,64883:CD,64887:CD,64893:CD,64897:CD,64902:CD,64909:CD,64914:CD,64918:CD,64923:CD,64928:JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
64883 :: CALL :: call :: I :: v69 = v32.length()::
64887 :: CALL :: call :: Ljava/lang/String :: v71 = v32.substring(#(19), v69)::
64893 :: CALL :: call :: Ljava/lang/String :: v73 = v71.trim()::
64897 :: CALL :: call :: Ljava/lang/StringBuffer :: v75 = v10.append(v73)::
64902 :: CALL :: call :: Ljava/lang/StringBuffer :: v78 = v75.append(#( ))::
64909 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
64914 :: CALL :: call :: Ljava/lang/String :: v84 = v10.toString()::
64918 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v80.append(v84)::
64923 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#('))::
64928 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
64936 :: CALL :: call :: Z :: v94 = v39.equals(#(EDIT))::JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
64941 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 373::CD,64942:CD,64946:CD,64952:CD,64956:CD,64963:CD,64968:CD,64972:CD,64977:CD,64982:JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
64942 :: CALL :: call :: I :: v96 = v32.length()::
64946 :: CALL :: call :: Ljava/lang/String :: v98 = v32.substring(#(19), v96)::
64952 :: CALL :: call :: Ljava/lang/String :: v100 = v98.trim()::
64956 :: CALL :: call :: Ljava/lang/StringBuffer :: v102 = v12.append(v100)::
64963 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
64968 :: CALL :: call :: Ljava/lang/String :: v108 = v12.toString()::
64972 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(v108)::
64977 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v110.append(#('))::
64982 :: CALL :: call :: Ljava/lang/String :: v114 = v112.toString()::
64990 :: CALL :: call :: Z :: v118 = v39.equals(#(REF ))::JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
64995 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 446::CD,64996:CD,65000:CD,65006:CD,65010:CD,65015:CD,65022:CD,65027:CD,65031:CD,65036:CD,65041:JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
64996 :: CALL :: call :: I :: v120 = v32.length()::
65000 :: CALL :: call :: Ljava/lang/String :: v122 = v32.substring(#(19), v120)::
65006 :: CALL :: call :: Ljava/lang/String :: v124 = v122.trim()::
65010 :: CALL :: call :: Ljava/lang/StringBuffer :: v126 = v14.append(v124)::
65015 :: CALL :: call :: Ljava/lang/StringBuffer :: v128 = v126.append(#( ))::
65022 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v130 = new java.lang.StringBuilder::
65027 :: CALL :: call :: Ljava/lang/String :: v134 = v14.toString()::
65031 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v130.append(v134)::
65036 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(#('))::
65041 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
65049 :: CALL :: call :: Z :: v144 = v39.equals(#(PUBL))::JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
65054 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 519::CD,65055:CD,65059:CD,65065:CD,65069:CD,65074:CD,65081:CD,65086:CD,65090:CD,65095:CD,65100:JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
65055 :: CALL :: call :: I :: v146 = v32.length()::
65059 :: CALL :: call :: Ljava/lang/String :: v148 = v32.substring(#(19), v146)::
65065 :: CALL :: call :: Ljava/lang/String :: v150 = v148.trim()::
65069 :: CALL :: call :: Ljava/lang/StringBuffer :: v152 = v16.append(v150)::
65074 :: CALL :: call :: Ljava/lang/StringBuffer :: v154 = v152.append(#( ))::
65081 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v156 = new java.lang.StringBuilder::
65086 :: CALL :: call :: Ljava/lang/String :: v160 = v16.toString()::
65090 :: CALL :: call :: Ljava/lang/StringBuilder :: v162 = v156.append(v160)::
65095 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v162.append(#('))::
65100 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
65108 :: CALL :: call :: Z :: v170 = v39.equals(#(REFN))::JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
65113 :: PRED :: IF :: Z :: if (v170 == #(0)) goto 625::CD,65114:CD,65118:CD,65188:CD,65193:CD,65242:CD,65247:JM,64882:JM,64995:JM,65113:JM,64828:JM,64941:JM,65054
65114 :: CALL :: call :: I :: v172 = v32.length()::JM,65118
65118 :: PRED :: IF :: Z :: if (v172 >= #(35)) goto 572::CD,65121:CD,65126:CD,65131:CD,65140:CD,65144:CD,65150:CD,65154:CD,65161:CD,65166:CD,65170:CD,65175:CD,65180:CD,65188:CD,65193:CD,65242:CD,65247
65121 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v232 = new java.lang.StringBuilder::
65126 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v232.append(v32)::
65131 :: CALL :: call :: Ljava/lang/String :: v238 = v236.toString()::
65140 :: CALL :: call :: I :: v175 = v32.length()::
65144 :: CALL :: call :: Ljava/lang/String :: v177 = v32.substring(#(35), v175)::
65150 :: CALL :: call :: Ljava/lang/String :: v179 = v177.trim()::
65154 :: CALL :: call :: Ljava/lang/StringBuffer :: v181 = v18.append(v179)::
65161 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v183 = new java.lang.StringBuilder::
65166 :: CALL :: call :: Ljava/lang/String :: v187 = v18.toString()::
65170 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v183.append(v187)::
65175 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v189.append(#('))::
65180 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
65188 :: CALL :: call :: Z :: v197 = v39.equals(#(PMID))::JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
65193 :: PRED :: IF :: Z :: if (v197 == #(0)) goto 692::CD,65194:CD,65198:CD,65204:CD,65208:CD,65215:CD,65220:CD,65224:CD,65229:CD,65234:JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
65194 :: CALL :: call :: I :: v199 = v32.length()::
65198 :: CALL :: call :: Ljava/lang/String :: v201 = v32.substring(#(19), v199)::
65204 :: CALL :: call :: Ljava/lang/String :: v203 = v201.trim()::
65208 :: CALL :: call :: Ljava/lang/StringBuffer :: v205 = v20.append(v203)::
65215 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v207 = new java.lang.StringBuilder::
65220 :: CALL :: call :: Ljava/lang/String :: v211 = v20.toString()::
65224 :: CALL :: call :: Ljava/lang/StringBuilder :: v213 = v207.append(v211)::
65229 :: CALL :: call :: Ljava/lang/StringBuilder :: v215 = v213.append(#('))::
65234 :: CALL :: call :: Ljava/lang/String :: v217 = v215.toString()::
65242 :: CALL :: call :: Z :: v221 = v39.equals(#(DOI ))::JM,64882:JM,64995:JM,65113:JM,65193:JM,64828:JM,64941:JM,65054:JM,65247
65247 :: PRED :: IF :: Z :: if (v221 == #(0)) goto 756::CD,65248:CD,65252:CD,65258:CD,65262:CD,65269:CD,65274:CD,65278:CD,65283:CD,65288:JM,65300:JM,64790
65248 :: CALL :: call :: I :: v241 = v32.length()::
65252 :: CALL :: call :: Ljava/lang/String :: v243 = v32.substring(#(19), v241)::
65258 :: CALL :: call :: Ljava/lang/String :: v245 = v243.trim()::
65262 :: CALL :: call :: Ljava/lang/StringBuffer :: v247 = v22.append(v245)::
65269 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v249 = new java.lang.StringBuilder::
65274 :: CALL :: call :: Ljava/lang/String :: v253 = v22.toString()::
65278 :: CALL :: call :: Ljava/lang/StringBuilder :: v255 = v249.append(v253)::
65283 :: CALL :: call :: Ljava/lang/StringBuilder :: v257 = v255.append(#('))::
65288 :: CALL :: call :: Ljava/lang/String :: v259 = v257.toString()::
65296 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,65300:JM,64790
65300 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 107::CD,64786:CD,64790:CD,64791:CD,64795:CD,65296:JM,65300
65304 :: CALL :: call :: Ljava/lang/String :: v263 = v8.toString()::
65308 :: CALL :: call :: Ljava/util/List :: v265 = p0 $this .authorBuilder(v263)::CL,78853
65313 :: CALL :: call :: V :: v261.setAuthorList(v265)::CL,79229
65320 :: CALL :: call :: Ljava/lang/String :: v269 = v12.toString()::
65324 :: CALL :: call :: Ljava/util/List :: v271 = p0 $this .authorBuilder(v269)::CL,78853
65329 :: CALL :: call :: V :: v267.setEditorList(v271)::CL,79240
65336 :: CALL :: call :: Ljava/lang/String :: v275 = v14.toString()::
65340 :: CALL :: call :: V :: v273.setRef(v275)::CL,79251
65345 :: CALL :: call :: Ljava/lang/String :: v279 = v14.toString()::
65361 :: CALL :: call :: V :: v281.setJournalName(v283)::CL,79790
65368 :: CALL :: call :: Ljava/lang/String :: v287 = v285.getJournalName()::JM,65377:CL,79801
65372 :: CALL :: call :: Z :: v290 = v287.equals(#(TO BE PUBLISHED))::JM,65377
65377 :: PRED :: IF :: Z :: if (v290 != #(0)) goto 861::CD,65385
65385 :: CALL :: call :: V :: v291.setIsPublished(v294)::CL,79810
65396 :: CALL :: call :: V :: v296.setVolume(v298)::CL,79835
65407 :: CALL :: call :: V :: v300.setStartPage(v302)::CL,79856
65418 :: CALL :: call :: V :: v304.setPublicationDate(v306)::CL,79877
65425 :: CALL :: call :: Ljava/lang/String :: v310 = v16.toString()::
65429 :: CALL :: call :: Ljava/lang/String :: v312 = v310.trim()::
65433 :: CALL :: call :: V :: v308.setPublisher(v312)::CL,79888
65440 :: CALL :: call :: Ljava/lang/String :: v316 = v10.toString()::
65444 :: CALL :: call :: Ljava/lang/String :: v318 = v316.trim()::
65448 :: CALL :: call :: V :: v314.setTitle(v318)::CL,79899
65455 :: CALL :: call :: Ljava/lang/String :: v322 = v18.toString()::
65459 :: CALL :: call :: Ljava/lang/String :: v324 = v322.trim()::
65463 :: CALL :: call :: V :: v320.setRefn(v324)::CL,79910
65470 :: CALL :: call :: Ljava/lang/String :: v328 = v20.toString()::
65474 :: CALL :: call :: Ljava/lang/String :: v330 = v328.trim()::
65478 :: CALL :: call :: V :: v326.setPmid(v330)::CL,79921
65485 :: CALL :: call :: Ljava/lang/String :: v334 = v22.toString()::
65489 :: CALL :: call :: Ljava/lang/String :: v336 = v334.trim()::
65493 :: CALL :: call :: V :: v332.setDoi(v336)::CL,79932
65508 :: CALL :: call :: Ljava/lang/String :: v344 = v342.toString()::CL,79943
65693 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setJournalArticle(org.biojava.nbio.structure.JournalArticle)::JM,65698
65698 :: EXPR :: modify :: Lorg/biojava/nbio/structure/JournalArticle :: p0 $this .journalArticle = p1 $journalArticle ::
65704 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBHeader(org.biojava.nbio.structure.PDBHeader)::JM,65709
65709 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = p1 $pdbHeader ::
65715 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::CD,65723
65723 :: CALL :: call :: V :: v4.setCrystallographicInfo(p1 $crystallographicInfo )::CL,80341
65730 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setConnections(java.util.List)::JM,65735
65735 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = p1 $conns ::
65741 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setDBRefs(java.util.List)::CD,65747:CD,65753:CD,65767:CD,65771:JM,65772
65747 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
65753 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $dbrefs .iterator()::JM,65771:JM,65772
65758 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,65771
65763 :: CALL :: call :: V :: v12.setParent(p0 $this )::CL,80352
65767 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,65771
65771 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,65758:CD,65763:CD,65767:JM,65771
65772 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = p1 $dbrefs ::
65789 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::JM,53823:JM,107068
65788 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::CE,65789:CD,65795
65792 :: EXPR :: reference :: Z :: v3 = p0 $this .alignSeqRes::DD,65795
65795 :: NORM :: compound :: Z :: return v3::CF,65789
65819 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.align(org.biojava.nbio.structure.Structure,java.util.List)::CD,65825:CD,65830:CD,65852:CD,65856
65825 :: CALL :: call :: Ljava/util/List :: v7 = p1 $s .getModel(#(0))::CL,70080
65830 :: CALL :: call :: Ljava/util/Iterator :: v9 = p2 $seqResList .iterator()::JM,65856
65835 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,65856
65840 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v16 = getMatchingAtomRes(v14, v7)::JM,65845:CL,80363
65845 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 52::CD,65847
65847 :: CALL :: call :: V :: p0 $this .mapSeqresRecords(v16, v14)::CL,80454
65852 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,65856
65856 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 21::CD,65835:CD,65840:CD,65845:CD,65852:JM,65856
65875 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.storeUnAlignedSeqRes(org.biojava.nbio.structure.Structure,java.util.List,boolean)::CD,65971:CD,65975:CD,65978:JM,65897:JM,65896:JM,65963:JM,65964
65882 :: CALL :: call :: Ljava/util/List :: v9 = p1 $structure .getModel(v45)::CL,70080
65887 :: CALL :: call :: Ljava/util/Iterator :: v11 = p2 $seqResChains .iterator()::JM,65897:JM,65896:JM,65963:JM,65964
65892 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,65896:JM,65963
65897 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 86::CD,65902:CD,65906:CD,65910:CD,65914:CD,65920:CD,65925:CD,65977
65896 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::CF,65897
65902 :: CALL :: call :: V :: v16.setSeqResGroups(v18)::CL,80733
65906 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::
65910 :: CALL :: call :: V :: v16.setAtomGroups(v20)::CL,80771
65914 :: CALL :: call :: Z :: v24 = v9.add(v16)::
65920 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v26 = getMatchingAtomRes(v16, v9)::JM,65925:CL,80363
65925 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 113::CD,65930:CD,65937:CD,65942:CD,65946:CD,65951:CD,65977
65930 :: CALL :: call :: V :: v26.setSeqResGroups(v29)::CL,80733
65937 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
65942 :: CALL :: call :: Ljava/lang/String :: v36 = v16.getChainID()::CL,60024
65946 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v32.append(v36)::
65951 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
65959 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,65896:JM,65963
65963 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 27::CD,65892:CD,65896:CD,65897:CD,65959:CD,65977:JM,65963:CF,65964
65965 :: CALL :: call :: V :: p1 $structure .setChains(v46, v9)::CL,80809
65964 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 167::CD,65965:CF,65970
65971 :: CALL :: call :: I :: v7 = p1 $structure .nrModels()::JM,65975:CL,76385
65970 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v46 + #(1)::DD,65978
65975 :: PRED :: IF :: Z :: if (v45 < v7) goto 7::CD,65882:CD,65887:CD,65959:CD,65963:CD,65964:CD,65970:CD,65971:CD,65977:CD,65978
65977 :: EXPR :: assign :: null :: PHI v46 = v45, v46, v46, v46::JM,65896:JM,65963:DD,65970:DD,65977
65978 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,65975:DD,65977
66018 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkChains2Compound(org.biojava.nbio.structure.Structure)::CD,66026:CD,66111:CD,66115:CD,66119:CD,66123:CD,66173:CD,66257:CD,66261:CD,66265
66023 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,66115
66026 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,66115
66031 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,66115
66036 :: NORM :: declaration :: Ljava/util/ArrayList :: v13 = new java.util.ArrayList::
66043 :: CALL :: call :: I :: v17 = v12.getMolId()::CL,80865
66047 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
66051 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v19)::JM,66056
66057 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 61::CD,66059:CD,66102:CD,66106:CD,66107
66056 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,66057:JM,66106
66059 :: CALL :: call :: Ljava/util/Iterator :: v25 = v22.iterator()::JM,66106
66064 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,66106
66075 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p1 $s .findChain(v35)::CL,80874
66080 :: CALL :: call :: Z :: v39 = v13.add(v37)::
66102 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,66106
66107 :: CALL :: call :: V :: v12.setChains(v13)::CL,80889
66106 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 73::CD,66064:CD,66075:CD,66080:CD,66102:JM,66106
66111 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,66115
66115 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,66031:CD,66036:CD,66043:CD,66047:CD,66051:CD,66056:CD,66057:CD,66111:JM,66115
66116 :: EXPR :: reference :: Ljava/util/List :: v51 = p0 $this .compounds::JM,66123
66119 :: CALL :: call :: I :: v53 = v51.size()::JM,66123
66123 :: PRED :: IF :: Z :: if (v53 != #(1)) goto 250::CD,66127:CD,66136:CD,66140:CD,66144:CD,66149
66124 :: EXPR :: reference :: Ljava/util/List :: v55 = p0 $this .compounds::
66127 :: CALL :: call :: Ljava/lang/Object :: v57 = v55.get(#(0))::
66136 :: CALL :: call :: I :: v61 = v58.getMolId()::CL,80865
66140 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v61)::
66144 :: CALL :: call :: Ljava/lang/Object :: v65 = v59.get(v63)::JM,66149
66149 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 250::CD,66150:CD,66155:CD,66159
66150 :: CALL :: call :: Ljava/util/List :: v67 = p1 $s .getChains(#(0))::JM,66159:CL,80900
66155 :: CALL :: call :: I :: v69 = v67.size()::JM,66159
66159 :: PRED :: IF :: Z :: if (v69 != #(1)) goto 250::CD,66160:CD,66166:JM,66159
66160 :: CALL :: call :: Ljava/lang/Object :: v71 = v67.get(#(0))::JM,66159
66166 :: CALL :: call :: V :: v58.addChain(v72)::CL,80913
66170 :: EXPR :: reference :: Ljava/util/List :: v76 = p0 $this .compounds::JM,66261
66173 :: CALL :: call :: Ljava/util/Iterator :: v78 = v76.iterator()::JM,66261
66178 :: CALL :: call :: Ljava/lang/Object :: v82 = v78.next()::JM,66261
66186 :: CALL :: call :: I :: v86 = v83.getMolId()::CL,80865
66190 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v86)::
66194 :: CALL :: call :: Ljava/lang/Object :: v90 = v84.get(v88)::JM,66199
66199 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 293::CD,66204:CD,66208:CD,66212:CD,66217:CD,66218:CD,66252:CD,66256
66204 :: CALL :: call :: I :: v93 = v83.getMolId()::CL,80865
66208 :: CALL :: call :: Ljava/lang/Integer :: v95 = valueOf(v93)::
66212 :: CALL :: call :: Ljava/lang/Object :: v97 = v91.get(v95)::JM,66217
66217 :: EXPR :: assign :: Ljava/lang/Object :: v98 = CHECKCAST v97::JM,66256:JM,66227
66218 :: CALL :: call :: Ljava/util/Iterator :: v100 = v98.iterator()::JM,66256:JM,66227
66223 :: CALL :: call :: Ljava/lang/Object :: v105 = v100.next()::JM,66256:JM,66227
66227 :: EXPR :: assign :: Ljava/lang/Object :: v106 = CHECKCAST v105::JM,66233
66228 :: CALL :: call :: Z :: v108 = v106.equals(#(NULL))::JM,66233
66233 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 348::CD,66235:CD,66240
66235 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v110 = p1 $s .getChainByPDB(v106)::CL,80930
66240 :: CALL :: call :: V :: v110.setCompound(v83)::CL,80945
66252 :: CALL :: call :: Z :: v102 = v100.hasNext()::JM,66256:JM,66227
66257 :: CALL :: call :: Z :: v80 = v78.hasNext()::JM,66261
66256 :: PRED :: IF :: Z :: if (v102 != #(0)) goto 321::CD,66223:CD,66227:CD,66228:CD,66233:CD,66252:JM,66256:JM,66261
66261 :: PRED :: IF :: Z :: if (v80 != #(0)) goto 263::CD,66178:CD,66186:CD,66190:CD,66194:CD,66199:CD,66257:JM,66261
66262 :: EXPR :: reference :: Ljava/util/List :: v118 = p0 $this .compounds::DD,66265
66265 :: PRED :: IF :: Z :: if (v118 == #(null)) goto 536::CD,66269:CD,66273
66266 :: EXPR :: reference :: Ljava/util/List :: v119 = p0 $this .compounds::JM,66273
66269 :: CALL :: call :: Z :: v121 = v119.isEmpty()::JM,66273
66273 :: PRED :: IF :: Z :: if (v121 != #(0)) goto 536::CD,66274:CD,66278:CD,66345:CD,66349
66274 :: CALL :: call :: Ljava/util/List :: v123 = p1 $s .getChains()::JM,66349:CL,55331
66278 :: CALL :: call :: Ljava/util/Iterator :: v125 = v123.iterator()::JM,66349
66283 :: CALL :: call :: Ljava/lang/Object :: v129 = v125.next()::JM,66349
66288 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v132 = v130.getCompound()::JM,66292:CL,80956
66293 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v134 = new org.biojava.nbio.structure.Compound::
66292 :: PRED :: IF :: Z :: if (v132 != #(null)) goto 528::CF,66293:JM,63952:JM,63959:CD,66297:CD,66304:CD,66309:CD,66313:CD,66320:CD,66331:CD,66335:JM,66349
66297 :: CALL :: call :: V :: v134.addChain(v130)::CL,80913
66304 :: CALL :: call :: I :: v139 = findMaxCompoundId(v137)::CL,80965
66309 :: CALL :: call :: V :: v134.setMolId(v140)::CL,80986
66313 :: CALL :: call :: V :: v130.setCompound(v134)::CL,80945
66317 :: EXPR :: reference :: Ljava/util/List :: v143 = p0 $this .compounds::
66320 :: CALL :: call :: Z :: v145 = v143.add(v134)::
66331 :: CALL :: call :: I :: v151 = v134.getMolId()::CL,80865
66335 :: CALL :: call :: Ljava/lang/Integer :: v153 = valueOf(v151)::
66345 :: CALL :: call :: Z :: v127 = v125.hasNext()::JM,66349
66349 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 435::CD,66283:CD,66288:CD,66292:CD,66345:JM,66349
66455 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCompounds(java.util.List)::JM,66460
66460 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = p1 $molList ::
66466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkSitesToGroups()::CD,66473:CD,66674:CD,66679:CD,66684:CD,66689:CD,66694:CD,66702:CD,66707:CD,66712
66470 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .siteMap::DD,66473
66473 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 14::CD,66477
66474 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .siteToResidueMap::DD,66477
66477 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 29::CD,66488:CD,66492:CD,66496
66488 :: CALL :: call :: Ljava/util/List :: v8 = v6.getChains()::JM,66496:CL,55331
66492 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,66496
66497 :: NORM :: declaration :: Ljava/util/ArrayList :: v119 = new java.util.ArrayList::
66496 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 75::CF,66497:CD,66501:CD,66519:CD,66526:CD,66530:CD,66535:CD,66610:CD,66614:CD,66735:CD,66739:CD,66740:CD,66744:CD,66755
66498 :: EXPR :: reference :: Ljava/util/Map :: v120 = p0 $this .siteMap::
66501 :: CALL :: call :: Ljava/util/Collection :: v122 = v120.values()::
66516 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .siteMap::
66519 :: CALL :: call :: Ljava/util/Set :: v14 = v12.keySet()::
66523 :: EXPR :: reference :: Ljava/util/Map :: v15 = p0 $this .siteToResidueMap::
66526 :: CALL :: call :: Ljava/util/Set :: v17 = v15.keySet()::
66530 :: CALL :: call :: Z :: v19 = v14.equals(v17)::JM,66535
66535 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 183::CD,66538:CD,66546:CD,66551:CD,66556:CD,66566:CD,66573:CD,66577:CD,66582:CD,66590:CD,66594:CD,66599
66538 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
66543 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .pdbId::
66546 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v21.append(v24)::
66551 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#( header - some Sites ...))::
66556 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
66566 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
66570 :: EXPR :: reference :: Ljava/util/Map :: v36 = p0 $this .siteMap::
66573 :: CALL :: call :: Ljava/util/Set :: v38 = v36.keySet()::
66577 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v34.append(v38)::
66582 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v40.append(#( | ))::
66587 :: EXPR :: reference :: Ljava/util/Map :: v44 = p0 $this .siteToResidueMap::
66590 :: CALL :: call :: Ljava/util/Set :: v46 = v44.keySet()::
66594 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v43.append(v46)::
66599 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
66607 :: EXPR :: reference :: Ljava/util/Map :: v52 = p0 $this .siteMap::JM,66739
66610 :: CALL :: call :: Ljava/util/Set :: v54 = v52.keySet()::JM,66739
66614 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,66739
66619 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,66739
66627 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::
66636 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.get(v61)::JM,66641
66641 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,66642:JM,66734
66642 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 250::CD,66644:CD,66730:CD,66734
66644 :: CALL :: call :: Ljava/util/Iterator :: v71 = v69.iterator()::JM,66734
66649 :: CALL :: call :: Ljava/lang/Object :: v75 = v71.next()::JM,66734
66654 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::CL,55711
66658 :: CALL :: call :: Ljava/lang/String :: v80 = v76.getChainId()::CL,70860
66665 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v83 = v81.findGroup(v80, v78)::CL,80997
66674 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v86 = new java.lang.StringBuilder::
66679 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v86.append(v78)::
66684 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(#( in chain ))::
66689 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(v80)::
66694 :: CALL :: call :: Ljava/lang/StringBuilder :: v98 = v95.append(#( in order to link up ...))::
66699 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .pdbId::
66702 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v99)::
66707 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#()))::
66712 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
66721 :: CALL :: call :: Ljava/util/List :: v109 = v65.getGroups()::CL,81015
66725 :: CALL :: call :: Z :: v111 = v109.add(v83)::
66730 :: CALL :: call :: Z :: v73 = v71.hasNext()::JM,66734
66735 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,66739
66734 :: PRED :: IF :: Z :: if (v73 != #(0)) goto 262::CD,66649:CD,66654:CD,66658:CD,66665:CD,66721:CD,66725:CD,66730:JM,66734:JM,66739
66739 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 201::CF,66740:CD,66619:CD,66627:CD,66636:CD,66641:CD,66642:CD,66735:JM,66739
66741 :: EXPR :: reference :: Ljava/util/Map :: v113 = p0 $this .siteMap::
66740 :: NORM :: declaration :: Ljava/util/ArrayList :: v112 = new java.util.ArrayList::
66744 :: CALL :: call :: Ljava/util/Collection :: v115 = v113.values()::
66755 :: CALL :: call :: V :: v117.setSites(v112)::CL,81024
66833 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setBioAssemblies(java.util.Map)::JM,66838
66838 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = p1 $bioAssemblies ::
66844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNcsOperators(javax.vecmath.Matrix4d[])::JM,66849
66849 :: EXPR :: modify :: [Ljavax/vecmath/Matrix4d :: p0 $this .ncsOperators = p1 $ncsOperators ::
66855 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRfree(float)::JM,66860
66860 :: EXPR :: modify :: F :: p0 $this .rFree = p1 $rFree ::
66867 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getCompounds()::JM,122204
66866 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompounds()::CE,66867:CD,66873:CD,66938
66870 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .compounds::DD,66873
66873 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 19::CD,66877:CD,66881:CD,66887:CD,66897:CD,66930:CD,66934
66874 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .compounds::JM,66881
66877 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,66881
66881 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 113::CD,66887:CD,66897:CD,66930:CD,66934
66887 :: CALL :: call :: Ljava/util/List :: v12 = v9.findCompounds()::JM,66891:CL,81050
66891 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v12::
66894 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .compounds::JM,66934
66897 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,66934
66902 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,66934
66907 :: CALL :: call :: Ljava/util/List :: v22 = v20.getChains()::JM,66929:CL,81074
66911 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,66929
66916 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,66929
66921 :: CALL :: call :: V :: v29.setCompound(v20)::CL,80945
66925 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,66929
66929 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 75::CD,66916:CD,66921:CD,66925:JM,66929:JM,66934
66930 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,66934
66935 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .compounds::DD,66938
66934 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 50::CD,66902:CD,66907:CD,66911:CD,66925:CD,66929:CD,66930:JM,66934
66938 :: NORM :: compound :: Ljava/util/List :: return v31::DD,66867
66984 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formLinkRecordBond(org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord)::CD,66989:CD,66993:CD,66998:CD,67096
66989 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $linkRecord .getAltLoc1()::JM,66998:CL,81083
66993 :: CALL :: call :: Z :: v8 = v5.equals(#( ))::JM,66998
66999 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $linkRecord .getAltLoc2()::JM,67008:CL,81092
66998 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,66999:CD,67003:CD,67008
67003 :: CALL :: call :: Z :: v13 = v11.equals(#( ))::JM,67008
67008 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 29::CD,67034:CD,67068:JM,93894:JM,93897:JM,93900:JM,93903
67034 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v27 = p0 $this .getAtomFromRecord(v15, v17, v19, v21, v23, v25)::CL,81146
67068 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v41 = p0 $this .getAtomFromRecord(v29, v31, v33, v35, v37, v39)::CL,81146
67096 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $linkRecord .toString()::CL,81365
67140 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBonds(java.util.List)::CD,67145:CD,67149:CD,67170:CD,67174:CD,67178
67145 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
67149 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $disulfideBonds .iterator()::JM,67174
67154 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,67174
67159 :: CALL :: call :: Lorg/biojava/nbio/structure/Bond :: v15 = p0 $this .formDisulfideBond(v13)::JM,67164:CL,81883
67165 :: CALL :: call :: Z :: v18 = v4.add(v15)::
67164 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 53::CD,67165:JM,67174
67170 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,67174
67174 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,67154:CD,67159:CD,67164:CD,67170:JM,67174
67178 :: CALL :: call :: V :: v19.setSSBonds(v4)::CL,82000
67201 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.makeBonds()::CD,67205:CD,67208:CD,67211:CD,67214
67205 :: CALL :: call :: V :: p0 $this .formPeptideBonds()::CL,82011
67208 :: CALL :: call :: V :: p0 $this .formNucleotideBonds()::CL,82164
67211 :: CALL :: call :: V :: p0 $this .formIntraResidueBonds()::CL,82317
67214 :: CALL :: call :: V :: p0 $this .trimBondLists()::CL,82534
67222 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.ChargeAdder.addCharges(org.biojava.nbio.structure.Structure)::CD,67305:CD,67310:CD,67315:CD,67320:CD,67460:CD,67464:CD,67472
67227 :: CALL :: call :: Ljava/util/List :: v7 = p1 $structure .getChains(v115)::JM,67458:CL,80900
67232 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,67458
67237 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,67458
67242 :: CALL :: call :: Ljava/util/List :: v16 = v14.getAtomGroups()::JM,67453:CL,70097
67246 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,67453
67251 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,67453
67260 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v27 = getChemComp(v25)::CL,82644
67264 :: CALL :: call :: Ljava/util/List :: v29 = v27.getAtoms()::JM,67448:JM,67277:CL,82775
67268 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,67448:JM,67277
67273 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,67448:JM,67277
67277 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::JM,67297:JM,67287:JM,67291:JM,67292:JM,67336:JM,67375
67282 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v23.getAtom(v38)::JM,67406:CL,70198
67287 :: CALL :: call :: Ljava/lang/String :: v42 = v36.getCharge()::JM,67297:JM,67287:JM,67291:JM,67292
67291 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 230::CD,67292:CD,67297:CD,67370:CD,67375:CD,67379:CD,67384:CD,67389:CD,67393:CD,67398
67292 :: CALL :: call :: Z :: v46 = v42.equals(#(?))::JM,67297:JM,67292
67297 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 186::CD,67298:CD,67331:CD,67336:CD,67340:CD,67345:CD,67350:CD,67354:CD,67359:JM,67297:JM,67292
67298 :: CALL :: call :: S :: v48 = parseShort(v42)::JM,67297:JM,67292
67305 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
67310 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v51.append(v42)::JM,67297:JM,67292
67315 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(' to short))::
67320 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
67331 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
67336 :: CALL :: call :: Ljava/lang/String :: v67 = v36.getAtom_id()::JM,67336
67340 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
67345 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(#( in group ))::
67350 :: CALL :: call :: Ljava/lang/String :: v74 = v27.getId()::CL,82784
67354 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v72.append(v74)::
67359 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
67370 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
67375 :: CALL :: call :: Ljava/lang/String :: v85 = v36.getAtom_id()::JM,67375
67379 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v81.append(v85)::
67384 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v87.append(#( in group ))::
67389 :: CALL :: call :: Ljava/lang/String :: v91 = v27.getId()::CL,82784
67393 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v89.append(v91)::
67398 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::
67407 :: CALL :: call :: V :: v40.setCharge(v97)::CL,82793
67406 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 287::CD,67407
67411 :: CALL :: call :: Ljava/util/List :: v100 = v23.getAltLocs()::JM,67443:CL,75032
67415 :: CALL :: call :: Ljava/util/Iterator :: v102 = v100.iterator()::JM,67443
67420 :: CALL :: call :: Ljava/lang/Object :: v106 = v102.next()::JM,67443
67429 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = v107.getAtom(v109)::JM,67434:CL,70198
67435 :: CALL :: call :: V :: v111.setCharge(v97)::CL,82793
67434 :: PRED :: IF :: Z :: if (v111 == #(null)) goto 344::CF,67468:CD,67435
67439 :: CALL :: call :: Z :: v104 = v102.hasNext()::JM,67443
67443 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 304::CF,67469:CD,67420:CD,67429:CD,67434:CD,67439:CD,67468:JM,67443
67444 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,67448:JM,67277
67449 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,67453
67448 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 92::CF,67470:CD,67273:CD,67277:CD,67282:CD,67287:CD,67291:CD,67406:CD,67411:CD,67415:CD,67439:CD,67443:CD,67444:CD,67468:CD,67469:JM,67448
67453 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 49::CF,67471:CD,67251:CD,67260:CD,67264:CD,67268:CD,67444:CD,67448:CD,67449:CD,67469:CD,67470:JM,67453
67454 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,67458
67459 :: EXPR :: assign :: Ljava/lang/Object :: v114 = v116 + #(1)::DD,67472
67458 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 22::CD,67237:CD,67242:CD,67246:CD,67449:CD,67453:CD,67454:CD,67470:CD,67471:JM,67458:CF,67459
67460 :: CALL :: call :: I :: v5 = p1 $structure .nrModels()::JM,67464:CL,76385
67464 :: PRED :: IF :: Z :: if (v115 < v5) goto 7::CD,67227:CD,67232:CD,67454:CD,67458:CD,67459:CD,67460:CD,67471:CD,67472
67469 :: EXPR :: assign :: null :: PHI v118 = v117, v119::JM,67448:JM,67277:DD,67468:DD,67470
67468 :: EXPR :: assign :: null :: PHI v119 = v118, v119, v119::JM,67443:DD,67468:DD,67469
67471 :: EXPR :: assign :: null :: PHI v116 = v115, v117::JM,67458:DD,67459:DD,67470
67470 :: EXPR :: assign :: null :: PHI v117 = v116, v118::JM,67453:DD,67469:DD,67471
67472 :: EXPR :: assign :: null :: PHI v115 = #(0), v114::DD,67464:DD,67471
67539 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecElement(java.util.List,java.lang.String,org.biojava.nbio.structure.secstruc.SecStrucType)::CD,67546:CD,67729:CD,67733
67546 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $secList .iterator()::JM,67733
67551 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,67733
67556 :: CALL :: call :: Ljava/lang/Object :: v16 = v13.get(#(initChainId))::JM,67561
67561 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,67630
67562 :: CALL :: call :: Ljava/lang/Object :: v20 = v13.get(#(initSeqNum))::
67568 :: CALL :: call :: Ljava/lang/Object :: v24 = v13.get(#(initICode))::JM,67573
67573 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,67597:DD,67735
67574 :: CALL :: call :: Ljava/lang/Object :: v28 = v13.get(#(endChainId))::JM,67579
67579 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::JM,67690
67580 :: CALL :: call :: Ljava/lang/Object :: v32 = v13.get(#(endSeqNum))::
67586 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(endICode))::JM,67591
67591 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::JM,67603:DD,67736:JM,67597
67592 :: CALL :: call :: Z :: v40 = v25.equals(#( ))::JM,67597
67597 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 134::CF,67735
67598 :: CALL :: call :: Z :: v44 = v37.equals(#( ))::JM,67603
67603 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 145::CF,67736
67613 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = v46.next()::CL,67847
67621 :: CALL :: call :: Ljava/lang/String :: v56 = v54.getChainID()::JM,67630:CL,60024
67625 :: CALL :: call :: Z :: v58 = v56.equals(v17)::JM,67630
67631 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,67662
67630 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 240::CF,67737:CF,67631:CD,67632:CD,67640:CD,67645:CD,67653:CD,67657:CD,67662
67632 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v21)::
67640 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v42)::JM,67662
67645 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,67662
67653 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::JM,67662:CL,55711
67657 :: CALL :: call :: Z :: v72 = v70.equals(v66)::JM,67662
67663 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 280::CD,67664:CD,67668
67662 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 240::CF,67737
67664 :: CALL :: call :: Z :: v76 = v52.hasAminoAtoms()::JM,67668:CL,67874
67668 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 280::JM,67944:JM,67947:CD,67676
67676 :: CALL :: call :: V :: v52.setProperty(#(secstruc), v77)::CL,67961
67681 :: CALL :: call :: Ljava/lang/String :: v82 = v54.getChainID()::JM,67690:CL,60024
67685 :: CALL :: call :: Z :: v84 = v82.equals(v29)::JM,67690
67691 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::JM,67722
67690 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 341::CF,67738:CF,67691:CD,67692:CD,67700:CD,67705:CD,67713:CD,67717:CD,67722:CD,67724:CD,67728
67692 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v33)::
67700 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v45)::JM,67722
67705 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,67722
67713 :: CALL :: call :: Ljava/lang/String :: v96 = v94.toString()::JM,67722:CL,55711
67717 :: CALL :: call :: Z :: v98 = v92.equals(v96)::JM,67722
67722 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 341::CF,67738:CD,67724:CD,67728
67724 :: CALL :: call :: Z :: v50 = v46.hasNext()::JM,67728:CL,67981
67729 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,67733
67728 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 166::CD,67613:CD,67621:CD,67625:CD,67630:CD,67663:CD,67681:CD,67685:CD,67690:CD,67737:CD,67738:JM,67733
67733 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 13::CD,67551:CD,67556:CD,67561:CD,67562:CD,67568:CD,67573:CD,67574:CD,67579:CD,67580:CD,67586:CD,67591:CD,67592:CD,67597:CD,67598:CD,67603:CD,67724:CD,67728:CD,67729:CD,67735:CD,67736:CD,67738:JM,67733
67735 :: EXPR :: assign :: null :: PHI v42 = v25, #()::JM,67662:JM,67603
67737 :: EXPR :: assign :: null :: PHI v74 = v99, v99, #(1)::DD,67663:DD,67738
67736 :: EXPR :: assign :: null :: PHI v45 = v37, #()::JM,67722
67738 :: EXPR :: assign :: null :: PHI v99 = #(0), v74, v74::DD,67737
67847 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.next()::CD,67861
67861 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v9 = p0 $this .getNextGroup(v3, v4, v7)::CL,82804
67875 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::JM,54285:JM,67668
67874 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::CE,67875:CD,67878:CD,67883
67878 :: CALL :: call :: Z :: v5 = p0 $this .hasAtom(#(CA))::JM,67883:CL,61496
67883 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 43::CD,67884:CD,67889:CD,67903
67884 :: CALL :: call :: Z :: v9 = p0 $this .hasAtom(#(C))::JM,67889:CL,61496
67889 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 43::CD,67890:CD,67895:CD,67903
67890 :: CALL :: call :: Z :: v12 = p0 $this .hasAtom(#(N))::JM,67895:CL,61496
67895 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 43::CD,67896:CD,67901:CD,67903
67896 :: CALL :: call :: Z :: v15 = p0 $this .hasAtom(#(O))::JM,67901:CL,61496
67901 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 43::CD,67902:CD,67903
67903 :: NORM :: compound :: Z :: return #(0)::DD,67875
67902 :: NORM :: compound :: Z :: return #(1)::DD,67875
67919 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::JM,54291
67918 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::CE,67919:CD,67926:CD,67931
67926 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $key )::JM,67931
67931 :: NORM :: compound :: Ljava/lang/Object :: return v6::DD,67919
67944 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: p0 $this .type = p3 $t ::
67947 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .assignment = p2 $ass ::
67961 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setProperty(java.lang.String,java.lang.Object)::CD,67970
67970 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.put(p1 $key , p2 $value )::
67981 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasNext()::CE,67982:CD,67995:CD,68002
67982 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasNext()::JM,54310:JM,67728
67995 :: CALL :: call :: Z :: v9 = p0 $this .hasSubGroup(v3, v4, v7)::JM,68002:CL,82915
68002 :: NORM :: compound :: Z :: return v9::DD,67982
68008 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.setPath(java.lang.String)::CD,68013
68013 :: CALL :: call :: Ljava/lang/String :: v5 = expandUserHome(p1 $path )::CL,38940
68057 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::JM,54530
68056 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::CE,68057:CD,68061:CD,68066:CD,68067
68061 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::JM,68066
68067 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v6::DD,68057
68066 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,68067
68069 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CE,68070:CD,68072:CD,68074
68070 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::
68072 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source::DD,68074:DD,68075
68075 :: NORM :: compound :: [I :: return v2::DD,68070
68074 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,68075:CD,68076:CD,68079:CD,68080:CD,68081:CD,68083:CD,68092:CD,68094:CD,68103:CD,68105:CD,68114:CD,68116:CD,68125:CD,68127:CD,68136:CD,68138:CD,68147:CD,68149:CD,68158:CD,68160:CD,68171
68076 :: CALL :: call :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = values()::JM,68079:CL,83070
68079 :: EXPR :: assign :: I :: v6 = v5.length::CF,68080
68081 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v8 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::
68080 :: NORM :: declaration :: [I :: v7 = new []::DD,68171
68083 :: CALL :: call :: I :: v10 = v8.ordinal()::
68087 :: EXPR :: modify :: I :: v7[v10] = #(8)::
68092 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::
68094 :: CALL :: call :: I :: v16 = v14.ordinal()::
68098 :: EXPR :: modify :: I :: v7[v16] = #(4)::
68103 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::
68105 :: CALL :: call :: I :: v22 = v20.ordinal()::
68109 :: EXPR :: modify :: I :: v7[v22] = #(7)::
68114 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::
68116 :: CALL :: call :: I :: v28 = v26.ordinal()::
68120 :: EXPR :: modify :: I :: v7[v28] = #(6)::
68125 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v32 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::
68127 :: CALL :: call :: I :: v34 = v32.ordinal()::
68131 :: EXPR :: modify :: I :: v7[v34] = #(1)::
68136 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::
68138 :: CALL :: call :: I :: v40 = v38.ordinal()::
68142 :: EXPR :: modify :: I :: v7[v40] = #(3)::
68147 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v44 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::
68149 :: CALL :: call :: I :: v46 = v44.ordinal()::
68153 :: EXPR :: modify :: I :: v7[v46] = #(2)::
68158 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v50 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::
68160 :: CALL :: call :: I :: v52 = v50.ordinal()::
68164 :: EXPR :: modify :: I :: v7[v52] = #(5)::
68171 :: NORM :: compound :: [I :: return v7::DD,68070
68213 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::JM,54796
68212 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::CE,68213:CD,68219:CD,68224:CD,68228
68219 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,68228:JM,68251
68224 :: CALL :: call :: Z :: v8 = v6.matches()::JM,68228:JM,68251
68229 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::DD,68231
68228 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,68229:CD,68234:CD,68239:CD,68246:CD,68254:CD,68255
68231 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
68234 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,68228:JM,68251
68239 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::JM,68243
68243 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v15::
68246 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,68228:JM,68251
68251 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v18::
68255 :: NORM :: compound :: Z :: return #(0)::DD,68213
68254 :: NORM :: compound :: Z :: return #(1)::DD,68213
68271 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDP(java.lang.String)::CD,68278:CD,68283:CD,68287
68278 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,68305:JM,68287
68283 :: CALL :: call :: Z :: v8 = v6.matches()::JM,68305:JM,68287
68287 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 39::CD,68288:CD,68293:CD,68300:JM,68305:JM,68287
68288 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,68305:JM,68287
68293 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::JM,68297
68297 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v14::
68300 :: CALL :: call :: Ljava/lang/String :: v17 = v6.group(#(2))::JM,68305:JM,68287
68305 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v17::
68323 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::CE,68324:CD,68330:CD,68335:CD,68339
68324 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::JM,54806
68330 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,68339:JM,68362
68335 :: CALL :: call :: Z :: v8 = v6.matches()::JM,68339:JM,68362
68339 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,68340:CD,68345:CD,68350:CD,68357:CD,68365:CD,68366
68340 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::DD,68342
68342 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
68345 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,68339:JM,68362
68350 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::JM,68354
68354 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v15::
68357 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,68339:JM,68362
68362 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v18::
68365 :: NORM :: compound :: Z :: return #(1)::DD,68324
68366 :: NORM :: compound :: Z :: return #(0)::DD,68324
68382 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromBIO(java.lang.String)::CD,68389:CD,68394:CD,68398
68389 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,68398
68394 :: CALL :: call :: Z :: v8 = v6.matches()::JM,68398
68399 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,68398
68398 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 30::CD,68399:CD,68404:JM,68398
68404 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::JM,68408
68408 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v14::
68423 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::CE,68424:CD,68430:CD,68435:CD,68439
68424 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::JM,54816
68430 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,68439
68435 :: CALL :: call :: Z :: v8 = v6.matches()::JM,68439
68439 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 42::CD,68440:CD,68445:CD,68450:CD,68460:CD,68461
68440 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::DD,68442
68442 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
68445 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,68439
68450 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::JM,68454
68454 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v15::
68457 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
68461 :: NORM :: compound :: Z :: return #(0)::DD,68424
68460 :: NORM :: compound :: Z :: return #(1)::DD,68424
68476 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDB(java.lang.String)::CD,68481:CD,68486:JM,83105:JM,83120:JM,83189:JM,83190:JM,83114:JM,83146:JM,83132:JM,83150:CD,68494:CD,68501:CD,68505:CD,68509
68481 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v4 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::DD,68483
68483 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v4::
68486 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,68491
68491 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v5::
68494 :: CALL :: call :: Ljava/lang/String :: v8 = v5.getPdbId()::JM,68498:CL,83247
68498 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v8::
68501 :: CALL :: call :: Ljava/util/Set :: v10 = getChainIds(v5)::JM,68518:JM,68509:JM,68527:CL,83256
68505 :: CALL :: call :: I :: v12 = v10.size()::JM,68518:JM,68509:JM,68527
68509 :: PRED :: IF :: Z :: if (v12 != #(1)) goto 66::CD,68510:CD,68514:CD,68518:CD,68523:CD,68527:JM,68509
68510 :: CALL :: call :: Ljava/util/Iterator :: v19 = v10.iterator()::JM,68518:JM,68509:JM,68527
68514 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.next()::JM,68518:JM,68527
68519 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v22::
68518 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,68519
68523 :: CALL :: call :: I :: v15 = v10.size()::JM,68518:JM,68509:JM,68527
68527 :: PRED :: IF :: Z :: if (v15 <= #(1)) goto 87::
68528 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(.)::
68532 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
68558 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromFile()::CD,68562
68562 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v3 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::DD,68564
68564 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v3::
68567 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = #(null)::
68570 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
68581 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::CE,68582:CD,68595:CD,68611:CD,68621:CD,68622
68582 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::JM,54826
68595 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::DD,68597
68597 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v10::
68611 :: CALL :: call :: Ljava/lang/String :: v19 = guessPDBID(v17)::JM,68615:CL,83312
68615 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v19::
68618 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = #(null)::
68621 :: NORM :: compound :: Z :: return #(1)::DD,68582
68622 :: NORM :: compound :: Z :: return #(0)::DD,68582
68676 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getBaseIdentifier()::CD,68683:CD,68731:CD,68739:CD,68744:CD,68874:CD,68882:CD,68887:CD,68910:CD,68918:CD,68923:CD,68951:CD,68959:CD,68964:CD,69000:CD,69008:CD,69013
68680 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v3 = p0 $this .base::DD,68683
68683 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 489::CD,68684:CD,68690:CD,68698
68684 :: CALL :: call :: [I :: v6 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,68069
68687 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v7 = p0 $this .mySource::
68690 :: CALL :: call :: I :: v9 = v7.ordinal()::
68694 :: EXPR :: reference :: I :: v10 = v6[v9]::DD,68698
68699 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v132 = getCathDatabase()::CL,83347
68698 :: PRED :: IF :: null :: switch v10::CD,68699:CD,68706:CD,68715:CD,68721:CD,68758:CD,68761:CD,68772:CD,68831:CD,68847:CD,68851:CD,68857:CD,68861:JM,84218:CD,68897:JM,84257:JM,96341:CD,68941:CD,68974:JM,84545:JM,84564:JM,84569:JM,84540:JM,84556:CD,68986:JM,83105:JM,83120:JM,83189:JM,83190:JM,83114:JM,83146:JM,83132:JM,83150
68706 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v136 = v132.getDescriptionByCathId(v134)::JM,68711:CL,83375
68711 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v136::
68715 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v116 = getEcodDatabase()::CL,83407
68721 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v119 = v116.getDomainsById(v117)::JM,68726:CL,83418
68726 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v119::
68731 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v122 = new java.lang.StringBuilder::
68736 :: EXPR :: reference :: Ljava/lang/String :: v125 = p0 $this .name::
68739 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v122.append(v125)::
68744 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::
68758 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v93 = getSCOP()::CL,83559
68761 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v95 = guessScopDomain(v91, v93)::JM,68766:CL,83570
68766 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v95::
68769 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v96 = p0 $this .base::DD,68772
68773 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .chainId::JM,68781
68772 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 489::CD,68776:CD,68781
68776 :: CALL :: call :: Z :: v100 = v97.equals(#(_))::JM,68781
68781 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 185::CD,68782:JM,83105:JM,83120:JM,83189:JM,83190:JM,83114:JM,83146:JM,83132:JM,83150:CD,68794:CD,68801:JM,84092:JM,84095
68782 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v107 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,68790
68790 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v107::
68794 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v101 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,68810
68801 :: CALL :: call :: Ljava/util/List :: v105 = parseMultiple(v103)::CL,83971
68810 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v101::
68831 :: CALL :: call :: [Ljava/lang/String :: v63 = v59.split(#(:), #(2))::
68847 :: CALL :: call :: Ljava/lang/String :: v70 = expandUserHome(v68)::CL,38940
68851 :: NORM :: declaration :: Lorg/biojava/nbio/structure/URLIdentifier :: v71 = new org.biojava.nbio.structure.URLIdentifier::DD,68869
68857 :: CALL :: call :: Ljava/net/URI :: v75 = v72.toURI()::
68861 :: CALL :: call :: Ljava/net/URL :: v77 = v75.toURL()::
68869 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v71::
68874 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
68879 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .name::
68882 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v83)::
68887 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::
68897 :: NORM :: declaration :: Lorg/biojava/nbio/structure/URLIdentifier :: v45 = new org.biojava.nbio.structure.URLIdentifier::DD,68905
68905 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v45::
68910 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
68915 :: EXPR :: reference :: Ljava/lang/String :: v53 = p0 $this .name::
68918 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
68923 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
68941 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/PDPDomain :: v33 = v28.getPDPDomain(v31)::JM,68946:CL,84274
68946 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v33::
68951 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
68956 :: EXPR :: reference :: Ljava/lang/String :: v39 = p0 $this .name::
68959 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v36.append(v39)::
68964 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
68974 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BioAssemblyIdentifier :: v25 = new org.biojava.nbio.structure.BioAssemblyIdentifier::DD,68982
68982 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v25::
68986 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v21 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,68995
68995 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v21::
69000 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
69008 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v12.append(v15)::
69013 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
69088 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,69093:CD,69097
69093 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getThePdbId()::CL,84604
69097 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $cache .getStructure(v5)::CL,39358
69105 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,69113
69113 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = v4.loadStructure(p1 $cache )::CL,69396
69121 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,69129
69129 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p1 $cache .getStructureForPdbId(v4)::CL,84621
69137 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,69145
69145 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p1 $cache .getStructureForPdbId(v4)::CL,84621
69153 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,69158:CD,69163:CD,69167:CD,69172:CD,69200:CD,69208:CD,69213:CD,69222:CD,69224:CD,69236:CD,69239:CD,69247:CD,69295:CD,69347:CD,69348
69158 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v4 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,69347
69163 :: CALL :: call :: Ljava/util/Map :: v7 = parseQuery(v5)::CL,84709
69167 :: CALL :: call :: Z :: v21 = v7.containsKey(#(format))::JM,69172
69173 :: CALL :: call :: Ljava/lang/Object :: v24 = v7.get(#(format))::JM,69178
69172 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 90::CF,69347:CD,69173:CD,69178:CD,69179:CD,69184:CD,69189:CD,69193
69179 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
69178 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::CF,69179
69184 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v25)::
69189 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
69193 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v34 = guessFiletype(v32)::JM,69347:CL,84846
69200 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
69208 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
69213 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
69222 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v38 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::CF,69224
69224 :: PRED :: IF :: Z :: if (v36 != v38) goto 107::CF,69348:CD,69232
69232 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v43 = guessFiletype(v41)::JM,69348:CL,84846
69236 :: CALL :: call :: [I :: v46 = $SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::CL,84924
69239 :: CALL :: call :: I :: v48 = v44.ordinal()::
69243 :: EXPR :: reference :: I :: v49 = v46[v48]::DD,69247
69247 :: PRED :: IF :: null :: switch v49::JM,84999:JM,85029:JM,41467:JM,85022:CD,69276:CD,69280:CD,69281:CD,69290:JM,38754:JM,38758:JM,41352:JM,41416:JM,41388:JM,38738:JM,41396:JM,38742:JM,38746:JM,41338:JM,41402:JM,38750:CD,69339
69276 :: CALL :: call :: V :: v71.addMMcifConsumer(v73)::CL,85057
69281 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v80 = new java.io.InputStreamReader::
69280 :: NORM :: declaration :: Ljava/io/BufferedReader :: v79 = new java.io.BufferedReader::CF,69281
69290 :: CALL :: call :: V :: v71.parse(v79)::CL,85074
69295 :: CALL :: call :: V :: v84.printStackTrace()::
69339 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v65 = v50.getStructure(v63)::CL,86062
69347 :: EXPR :: assign :: null :: PHI v36 = v4, v34, v4::DD,69224:DD,69348
69348 :: EXPR :: assign :: null :: PHI v44 = v36, v43::
69396 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,69401:CD,69405
69401 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getPdbId()::JM,69405:CL,83247
69405 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 13::CD,69407
69407 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v8 = p1 $cache .getStructureForPdbId(v5)::CL,84621
69420 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,69431
69431 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $cache .getBiologicalAssembly(v4, v5)::CL,86089
69441 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.reduce(org.biojava.nbio.structure.Structure)::JM,47585:JM,47554:JM,47592:JM,41480:JM,41513:JM,47564:JM,47599:JM,41488:JM,41520:JM,47571:JM,47606:JM,41496:JM,47578:CD,69466:CD,69478:CD,69494:CD,69502:CD,69507:CD,69512:CD,69516:CD,69521:CD,69530:CD,69534:CD,69539:CD,69543:CD,69547:CD,69708:CD,69712:CD,69842:CD,69846:CD,69860
69466 :: CALL :: call :: Ljava/lang/String :: v13 = p0 $this .toString()::CL,86118
69478 :: CALL :: call :: V :: v4.setDBRefs(v16)::CL,65741
69494 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
69502 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v23.append(v26)::
69507 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v28.append(#( of ))::
69512 :: CALL :: call :: Ljava/lang/String :: v33 = v4.getPDBCode()::CL,55791
69516 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(v33)::
69521 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v35.append(#( ))::
69530 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getDescription()::CL,86168
69534 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
69539 :: CALL :: call :: Ljava/lang/String :: v46 = v44.toString()::
69543 :: CALL :: call :: V :: v22.setDescription(v46)::CL,86177
69547 :: CALL :: call :: Ljava/util/List :: v49 = p1 $s .getCompounds()::CL,66866
69576 :: NORM :: declaration :: Ljava/util/ArrayList :: v62 = new java.util.ArrayList::
69580 :: CALL :: call :: V :: v4.addModel(v62)::CL,61582
69584 :: CALL :: call :: Ljava/util/List :: v66 = p0 $this .getResidueRanges()::JM,69592:CL,86206
69588 :: CALL :: call :: Z :: v68 = v66.isEmpty()::JM,69592
69593 :: CALL :: call :: Ljava/util/List :: v163 = p1 $s .getCompounds()::CL,66866
69592 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 255::CD,69593:CD,69617:CD,69622:CD,69628:CD,69632:CD,69836:CD,69840:CD,69857:CD,69858:CD,69859
69617 :: CALL :: call :: Ljava/util/List :: v172 = p1 $s .getModel(v178)::CL,70080
69622 :: CALL :: call :: V :: v4.setModel(v178, v172)::CL,76307
69628 :: CALL :: call :: Ljava/util/List :: v70 = p0 $this .getResidueRanges()::JM,69840:CL,86206
69632 :: CALL :: call :: Ljava/util/Iterator :: v72 = v70.iterator()::JM,69840
69637 :: CALL :: call :: Ljava/lang/Object :: v76 = v72.next()::JM,69840
69642 :: CALL :: call :: Ljava/lang/String :: v79 = v77.getChainId()::JM,69659:CL,86215
69646 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v81 = v77.getStart()::JM,69666:JM,69733:CL,86224
69650 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v83 = v77.getEnd()::JM,69734:JM,69675:CL,86233
69654 :: CALL :: call :: Z :: v86 = v79.equals(#(_))::JM,69659
69659 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 391::CD,69660:CD,69666:CD,69675:CD,69684:CD,69701
69660 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v88 = p1 $s .getChain(v179, #(0))::CL,86242
69666 :: PRED :: IF :: Z :: if (v81 == #(null)) goto 341::CD,69671:CF,69675
69671 :: CALL :: call :: V :: v81.setChainId(v90)::CL,63047
69675 :: PRED :: IF :: Z :: if (v83 == #(null)) goto 357::CD,69680
69680 :: CALL :: call :: V :: v83.setChainId(v93)::CL,63047
69684 :: CALL :: call :: I :: v96 = p1 $s .size()::CL,86269
69701 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v104 = p1 $s .getChainByPDB(v79, v179)::CL,86303
69708 :: CALL :: call :: I :: v107 = parseInt(v79)::JM,69659
69712 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v109 = p1 $s .getChain(v179, v107)::CL,86242
69733 :: PRED :: IF :: Z :: if (v81 != #(null)) goto 482::CD,69734:CD,69740:CD,69746:CD,69853
69735 :: CALL :: call :: Ljava/util/List :: v117 = v115.getAtomGroups()::JM,69853:CL,70097
69734 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 482::CD,69735:CD,69740:CD,69746:CD,69853
69740 :: CALL :: call :: [Lorg/biojava/nbio/structure/Group :: v119 = v115.getGroupsByPDB(v81, v83)::JM,69746:JM,69853:CL,86391
69746 :: CALL :: call :: Ljava/util/List :: v121 = asList(v119)::JM,69746:JM,69853
69751 :: CALL :: call :: Ljava/lang/String :: v124 = v115.getChainID()::JM,69760:CL,60024
69750 :: PRED :: IF :: Z :: if (v160 == #(null)) goto 532::CD,69751:CD,69755:CD,69760:CD,69772:CD,69854
69755 :: CALL :: call :: Z :: v126 = v160.equals(v124)::JM,69760
69761 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v128 = v4.getChainByPDB(v160, v179)::JM,69854:CL,86303
69760 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 532::CD,69761:CD,69772:CD,69854
69772 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v132 = v4.getChainByPDB(v130, v179)::JM,69854:CL,86303
69779 :: PRED :: IF :: Z :: if (v135 != #(null)) goto 617::JM,59970:JM,59989:JM,59975:JM,59982:CD,69788:CD,69792:CD,69801
69788 :: CALL :: call :: V :: v136.setChainID(v139)::CL,60013
69792 :: CALL :: call :: V :: v4.addChain(v136, v179)::CL,86620
69801 :: CALL :: call :: V :: v136.setSeqResGroups(v143)::CL,80733
69813 :: CALL :: call :: Ljava/util/Iterator :: v150 = v122.iterator()::JM,69831
69818 :: CALL :: call :: Ljava/lang/Object :: v154 = v150.next()::JM,69831
69823 :: CALL :: call :: V :: v148.addGroup(v155)::CL,60033
69827 :: CALL :: call :: Z :: v152 = v150.hasNext()::JM,69831
69831 :: PRED :: IF :: Z :: if (v152 != #(0)) goto 629::CD,69818:CD,69823:CD,69827:CD,69856:JM,69831
69832 :: CALL :: call :: Ljava/lang/String :: v158 = v148.getChainID()::JM,69858:CL,60024
69836 :: CALL :: call :: Z :: v74 = v72.hasNext()::JM,69840
69841 :: EXPR :: assign :: Ljava/lang/Object :: v176 = v181 + #(1)::DD,69860
69840 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 270::CF,69859:CD,69637:CD,69642:CD,69646:CD,69650:CD,69654:CD,69659:CD,69733:CD,69750:CD,69779:CD,69813:CD,69827:CD,69831:CD,69832:CD,69836:CD,69853:CD,69854:CD,69856:CD,69857:CD,69858:JM,69840
69842 :: CALL :: call :: I :: v60 = p1 $s .nrModels()::JM,69846:CL,76385
69846 :: PRED :: IF :: Z :: if (v178 < v60) goto 177::CD,69576:CD,69580:CD,69584:CD,69588:CD,69592:CD,69841:CD,69842:CD,69859:CD,69860
69853 :: EXPR :: assign :: null :: PHI v122 = v117, v121::JM,69831:CF,69750
69854 :: EXPR :: assign :: null :: PHI v135 = v128, v132, #(null)::DD,69779
69857 :: EXPR :: assign :: null :: PHI v179 = v178, v180::CF,69858:DD,69856:DD,69859
69856 :: EXPR :: assign :: null :: PHI v180 = v179, v180::JM,69831:DD,69856:DD,69857
69859 :: EXPR :: assign :: null :: PHI v181 = v178, v179::DD,69841
69858 :: EXPR :: assign :: null :: PHI v160 = #(null), v158::JM,69840:DD,69750:JM,69760
69860 :: EXPR :: assign :: null :: PHI v178 = #(0), v176::DD,69846:DD,69857:DD,69859
69989 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.reduce(org.biojava.nbio.structure.Structure)::CD,69994:CD,69998
69994 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,86718
69998 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,69441
70006 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.reduce(org.biojava.nbio.structure.Structure)::CD,70011:CD,70015
70011 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,86744
70015 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,69441
70023 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.reduce(org.biojava.nbio.structure.Structure)::CD,70028:CD,70032
70028 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,86915
70032 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,69441
70040 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.reduce(org.biojava.nbio.structure.Structure)::CD,70045:CD,70049
70045 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,86941
70049 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,69441
70057 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.reduce(org.biojava.nbio.structure.Structure)::CD,70065
70065 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = v4.reduce(p1 $input )::CL,69441
70081 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getModel(int)::JM,55340:JM,80910:JM,82837:JM,82943:JM,107363:JM,107181:JM,107451:JM,122142
70080 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getModel(int)::CE,70081:CD,70088:CD,70093:CD,70094
70085 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,70093
70088 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $modelnr )::JM,70093
70093 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,70094
70094 :: NORM :: compound :: Ljava/util/List :: return v7::DD,70081
70097 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::CE,70098:CD,70104
70098 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::JM,67453:JM,69853:JM,76516:JM,76443:JM,82468:JM,82351:JM,82614:JM,92312:JM,103094:JM,107285:JM,107352:JM,121095:JM,121750:JM,121801:JM,121771
70101 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,70104
70104 :: NORM :: compound :: Ljava/util/List :: return v3::CF,70098
70175 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.NucleotideImpl.getType()::JM,60580:JM,60575:JM,91715:JM,91710:JM,102740:JM,102735:JM,102752:JM,102747:JM,103081:JM,103088:JM,115987:JM,115992:JM,116004:JM,115999:JM,132496:JM,132501:JM,132528:JM,132523
70174 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getType()::CF,70175:CD,70178:CD,70180
70178 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.NucleotideImpl.type::CF,70180
70180 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,70175
70183 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.HetatomImpl.getType()::JM,60580:JM,60575:JM,91715:JM,91710:JM,102740:JM,102735:JM,102752:JM,102747:JM,103081:JM,103088:JM,115987:JM,115992:JM,116004:JM,115999:JM,132496:JM,132501:JM,132528:JM,132523
70182 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getType()::CF,70183:CD,70186:CD,70188
70186 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.HetatomImpl.type::CF,70188
70188 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,70183
70191 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.AminoAcidImpl.getType()::JM,60580:JM,60575:JM,91715:JM,91710:JM,102740:JM,102735:JM,102752:JM,102747:JM,103081:JM,103088:JM,115987:JM,115992:JM,116004:JM,115999:JM,132496:JM,132501:JM,132528:JM,132523
70190 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getType()::CF,70191:CD,70194:CD,70196
70194 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.AminoAcidImpl.type::CF,70196
70196 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,70191
70199 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::JM,67406:JM,67434:JM,81269:JM,82441:JM,82442:JM,94294:JM,94306:JM,94318:JM,94330
70198 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::CE,70199:CD,70206:JM,70239
70203 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,70206
70206 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 22::CD,70210:CD,70215:CD,70216:CD,70220:CD,70241:CD,70245
70210 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.get(p1 $name )::JM,70215
70215 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::CF,70216
70217 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,70229:JM,70245
70216 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v22::DD,70199
70220 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,70229:JM,70245
70225 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,70229:JM,70245
70229 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,70240
70230 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,70239:CL,61487
70234 :: CALL :: call :: Z :: v18 = v16.equals(p1 $name )::JM,70239
70239 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 60::CD,70240:CD,70241:CD,70245:JM,70229
70241 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,70229:JM,70245
70240 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v14::DD,70199
70245 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 35::CD,70225:CD,70229:CD,70230:CD,70234:CD,70239:CD,70246:JM,70245
70246 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,70199
70263 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.AtomImpl.getElement()::JM,76477
70262 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getElement()::CE,70263:CD,70269
70266 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v3 = p0 $this .element::DD,70269
70269 :: NORM :: compound :: Lorg/biojava/nbio/structure/Element :: return v3::CF,70263
70271 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::CE,70272:CD,70277:CD,70488:CD,70492:CD,70493:CD,70497:CD,70505:CD,70506:JM,70287:JM,70412
70272 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::JM,102053:JM,102057:JM,102058:JM,102062
70277 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v5 = new java.lang.StringBuffer::JM,70497
70282 :: CALL :: call :: Ljava/lang/Object :: v11 = p1 $groups .get(v111)::JM,70492:JM,70287
70287 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,70288
70289 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 100::CD,70291:CD,70295:CD,70299:CD,70300:CD,70304:CD,70308:CD,70314:CD,70319:CD,70321:CD,70325:CD,70498:CD,70503:CD,70504
70288 :: EXPR :: assign :: Z :: v13=v12 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,70289
70291 :: CALL :: call :: Ljava/lang/Character :: v16 = v14.getAminoType()::JM,70498:JM,70299:CL,87069
70295 :: CALL :: call :: C :: v18 = v16.charValue()::JM,70498:JM,70299
70299 :: PRED :: IF :: Z :: if (v18 != #(63)) goto 71::CF,70498
70300 :: CALL :: call :: Ljava/lang/Integer :: v23 = valueOf(v110)::
70304 :: CALL :: call :: Ljava/lang/Integer :: v25 = valueOf(v111)::
70308 :: CALL :: call :: Ljava/lang/Object :: v27 = p2 $positionIndex .put(v23, v25)::
70314 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v5.append(v21)::
70319 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v110 + #(1)::DD,70503
70321 :: CALL :: call :: Z :: v33 = v12.isWater()::JM,70325:CL,87078
70325 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 113::CD,70327:CD,70331:CD,70503:CD,70504
70327 :: CALL :: call :: I :: v35 = v12.size()::JM,70331:CL,87095
70331 :: PRED :: IF :: Z :: if (v35 != #(1)) goto 158::CD,70332:CD,70337:CD,70349:CD,70353
70332 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v37 = v12.getAtom(#(0))::JM,70337:CL,87108
70337 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 142::CD,70343:CD,70347:CD,70503:CD,70504
70343 :: CALL :: call :: Z :: v42 = v40.isMetal()::JM,70347:CL,87140
70347 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 158::CD,70349:CD,70353:CD,70503:CD,70504
70349 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v12.getChemComp()::JM,70353:CL,75346
70353 :: PRED :: IF :: Z :: if (v44 != #(null)) goto 189::CD,70356:CD,70366:CD,70368:CD,70372:CD,70377:CD,70503:CD,70504
70356 :: CALL :: call :: Ljava/lang/String :: v48 = v12.toString()::CL,76883:CL,76785:CL,76595
70366 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::JM,70372:JM,70377
70368 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v52 = v44.getResidueType()::JM,70372:JM,70377:CL,87153
70372 :: CALL :: call :: Z :: v54 = v50.equals(v52)::JM,70372:JM,70377
70377 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 237::CD,70384:CD,70389:CD,70402:CD,70406:CD,70411:CD,70426:CD,70430:CD,70470:CD,70474:CD,70499:CD,70500:CD,70501:CD,70502:CD,70503:CD,70504
70384 :: CALL :: call :: Z :: v59 = v55.contains(v57)::JM,70389
70389 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 237::CD,70396:CD,70401:CD,70402:CD,70406:CD,70411:CD,70426:CD,70430:CD,70470:CD,70474:CD,70499:CD,70500:CD,70501:CD,70502:CD,70503:CD,70504
70396 :: CALL :: call :: Z :: v64 = v60.contains(v62)::JM,70401
70401 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 367::CD,70402:CD,70406:CD,70411:CD,70426:CD,70430:CD,70470:CD,70474:CD,70478:CD,70499:CD,70500:CD,70501:CD,70502:CD,70503:CD,70504
70402 :: CALL :: call :: Ljava/lang/String :: v66 = v44.getOne_letter_code()::JM,70499:JM,70411:CL,87171
70406 :: CALL :: call :: Z :: v69 = v66.equals(#(?))::JM,70499:JM,70411
70411 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 288::CF,70499:CD,70412
70412 :: PRED :: IF :: Z :: if (p3 $isNucleotideChain  == #(0)) goto 288::CD,70419:CD,70424:CD,70499
70419 :: CALL :: call :: Z :: v74 = v70.contains(v72)::JM,70424
70424 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 288::CD,70499
70426 :: CALL :: call :: I :: v79 = v77.length()::JM,70430
70430 :: PRED :: IF :: Z :: if (v79 <= #(1)) goto 316::CD,70433
70433 :: CALL :: call :: Ljava/lang/String :: v83 = v12.toString()::CL,76883:CL,76785:CL,76595
70444 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v99)::
70448 :: CALL :: call :: Ljava/lang/Integer :: v90 = valueOf(v112)::
70452 :: CALL :: call :: Ljava/lang/Object :: v92 = p2 $positionIndex .put(v88, v90)::
70458 :: CALL :: call :: C :: v94 = v77.charAt(v100)::
70463 :: CALL :: call :: Ljava/lang/StringBuffer :: v96 = v5.append(v94)::
70469 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v100 + #(1)::DD,70502:CF,70500
70468 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v99 + #(1)::DD,70500:CF,70469
70470 :: CALL :: call :: I :: v86 = v77.length()::JM,70474
70474 :: PRED :: IF :: Z :: if (v100 < v86) goto 322::CD,70444:CD,70448:CD,70452:CD,70458:CD,70463:CD,70468:CD,70469:CD,70470:CD,70500:CD,70501:CD,70502
70478 :: CALL :: call :: Ljava/lang/String :: v104 = v12.toString()::CL,76883:CL,76785:CL,76595
70487 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v113 + #(1)::DD,70506:CF,70505
70488 :: CALL :: call :: I :: v9 = p1 $groups .size()::JM,70492:JM,70287
70493 :: CALL :: call :: Ljava/lang/String :: v115 = v5.toString()::JM,70497
70492 :: PRED :: IF :: Z :: if (v111 < v9) goto 20::CD,70282:CD,70287:CD,70288:CD,70289:CD,70487:CD,70488:CD,70503:CD,70504:CD,70505:CD,70506:JM,70492:JM,70497
70497 :: NORM :: compound :: Ljava/lang/String :: return v115::DD,70272
70499 :: EXPR :: assign :: null :: PHI v77 = v66, #(N), #(X)::JM,70430:JM,70474
70498 :: EXPR :: assign :: null :: PHI v21 = v18, #(88)::
70501 :: EXPR :: assign :: null :: PHI v112 = v111, v112::CF,70502:DD,70501:DD,70504
70500 :: EXPR :: assign :: null :: PHI v99 = v110, v97::CF,70501:DD,70468:DD,70503
70503 :: EXPR :: assign :: null :: PHI v106 = v31, v110, v110, v110, v110, v99, v110::CF,70504:DD,70505
70502 :: EXPR :: assign :: null :: PHI v100 = #(0), v98::DD,70469:DD,70474
70505 :: EXPR :: assign :: null :: PHI v110 = #(0), v106::CF,70506:DD,70319:DD,70500:DD,70503
70504 :: EXPR :: assign :: null :: PHI v113 = v111, v111, v111, v111, v111, v112, v111::DD,70487
70506 :: EXPR :: assign :: null :: PHI v111 = #(0), v109::JM,70287:DD,70492:DD,70501:DD,70504
70861 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.getChainId()::
70860 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getChainId()::CE,70861:CD,70867
70864 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,70867
70867 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,70861
71337 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.clone()::CD,71341:JM,61125:JM,61130:CD,71349:CD,71357:CD,71371:CD,71383:CD,71391:CD,71399:CD,71407:CD,71415:CD,71423
71341 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AtomImpl :: v3 = new org.biojava.nbio.structure.AtomImpl::
71349 :: CALL :: call :: V :: v3.setOccupancy(v6)::CL,61229
71357 :: CALL :: call :: V :: v3.setTempFactor(v9)::CL,61240
71361 :: EXPR :: reference :: C :: v11 = p0 $this .altLoc::DD,71364
71364 :: EXPR :: modify :: C :: v3.altLoc = v11::
71371 :: CALL :: call :: V :: v3.setCharge(v13)::CL,82793
71383 :: CALL :: call :: V :: v3.setX(v18)::CL,87659
71391 :: CALL :: call :: V :: v3.setY(v21)::CL,87675
71399 :: CALL :: call :: V :: v3.setZ(v24)::CL,87691
71407 :: CALL :: call :: V :: v3.setPDBserial(v27)::CL,61172
71415 :: CALL :: call :: V :: v3.setName(v30)::CL,61207
71423 :: CALL :: call :: V :: v3.setElement(v33)::CL,61295
75033 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::JM,60064:JM,60696:JM,60807:JM,60847:JM,67443:JM,75893:JM,75902:JM,75930:JM,76053:JM,76062:JM,76090:JM,76723:JM,76757:JM,82390:JM,82380:JM,134355:JM,134395
75032 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::CE,75033:CD,75039
75036 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,75039
75039 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 16::CF,75040:CD,75044:CD,75048
75040 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,75044
75045 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::DD,75048
75044 :: NORM :: compound :: Ljava/util/List :: return v6::DD,75033
75048 :: NORM :: compound :: Ljava/util/List :: return v5::DD,75033
75053 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::CE,75054:CD,75060
75054 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::JM,60562:JM,60860:JM,91290:JM,91466:JM,102610:JM,102664:JM,102611:JM,103714:JM,115911:JM,115897:JM,115834:JM,115835:JM,122516:JM,122521:JM,134403:JM,134408
75057 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_name::DD,75060
75060 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,75054
75063 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::JM,60356:JM,60395:JM,123777:JM,126217
75062 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::CE,75063:CD,75068:CD,75073:CD,75074
75068 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $groupCode3 )::JM,75073
75073 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,75074
75074 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,75063
75077 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::CE,75078:CD,75081:CD,75087:CD,75092
75078 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::JM,60365:JM,60454:JM,126247:JM,134144:JM,134186
75081 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $groupCode3 .trim()::
75087 :: CALL :: call :: Z :: v7 = v5.containsKey(v4)::JM,75092
75092 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 32::CD,75095:CD,75100:CD,75102
75095 :: CALL :: call :: Z :: v11 = v9.containsKey(v4)::JM,75100
75101 :: NORM :: compound :: Z :: return #(0)::DD,75078
75100 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 32::CD,75101:CD,75102
75102 :: NORM :: compound :: Z :: return #(1)::DD,75078
75113 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::CE,75114:CD,75117:CD,75121:CD,75125:CD,75129
75114 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::JM,60438:JM,60428:JM,126192:JM,126182:JM,134118:JM,134100:JM,134133:JM,134110:JM,134126
75117 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::
75121 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::
75125 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v9 = getChemComp(v6)::JM,75129:CL,82644
75129 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 21::CD,75130:CD,75137:CD,75142:CD,75272:CD,75276:CD,75278
75130 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return #(null)::DD,75114
75137 :: CALL :: call :: Z :: v14 = v10.contains(v12)::JM,75142
75143 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v25 = new org.biojava.nbio.structure.AminoAcidImpl::DD,75278
75142 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 209::CF,75143:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,75147:CD,75151:CD,75191:CD,75257:CD,75262:CD,75277:CD,75278
75147 :: CALL :: call :: Ljava/lang/String :: v28 = v9.getOne_letter_code()::JM,75168:JM,75157:JM,75163:JM,75277:JM,75151:CL,87171
75151 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 84::CD,75152:CD,75157:CD,75169:CD,75173:CD,75277:JM,75168:JM,75163
75152 :: CALL :: call :: Z :: v31 = v28.equals(#(X))::JM,75168:JM,75157:JM,75163:JM,75277
75157 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 84::CD,75158:CD,75163:CD,75169:CD,75173:CD,75277:JM,75168:JM,75157
75158 :: CALL :: call :: Z :: v34 = v28.equals(#(?))::JM,75168:JM,75157:JM,75163:JM,75277
75163 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 84::CD,75164:CD,75168:CD,75169:CD,75173:CD,75277:JM,75157:JM,75163
75164 :: CALL :: call :: I :: v36 = v28.length()::JM,75168:JM,75157:JM,75163:JM,75277
75169 :: CALL :: call :: Ljava/lang/String :: v38 = v9.getMon_nstd_parent_comp_id()::JM,75173:JM,75174:JM,75178:CL,89864
75168 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 125::CF,75277:CD,75169:CD,75173
75173 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 125::CF,75277:CD,75174:CD,75178
75174 :: CALL :: call :: I :: v40 = v38.length()::JM,75174:JM,75178
75178 :: PRED :: IF :: Z :: if (v40 != #(3)) goto 125::CF,75277:CD,75183:CD,75187
75183 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v45 = getChemComp(v43)::CL,82644
75187 :: CALL :: call :: Ljava/lang/String :: v47 = v45.getOne_letter_code()::JM,75277:CL,87171
75191 :: PRED :: IF :: Z :: if (v48 == #(null)) goto 146::CD,75192:CD,75196:CD,75205:CD,75210:CD,75215:CD,75220:CD,75232
75192 :: CALL :: call :: I :: v50 = v48.length()::JM,75196
75197 :: CALL :: call :: Z :: v52 = v48.equals(#(?))::JM,75202
75196 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 146::CD,75197:CD,75202:CD,75205:CD,75210:CD,75215:CD,75220:CD,75232
75202 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 193::CD,75205:CD,75210:CD,75215:CD,75220:CD,75232:CD,75237:CD,75246
75205 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
75210 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v6)::
75215 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#(  Did not find one le...))::
75220 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
75232 :: CALL :: call :: V :: v25.setAminoType(v72)::CL,75547
75237 :: CALL :: call :: C :: v54 = v48.charAt(#(0))::
75246 :: CALL :: call :: V :: v25.setAminoType(v56)::CL,75547
75257 :: CALL :: call :: Z :: v20 = v16.contains(v18)::JM,75262
75263 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v23 = new org.biojava.nbio.structure.NucleotideImpl::DD,75278
75262 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 237::CF,75268:CF,75263:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,75278
75268 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v21 = new org.biojava.nbio.structure.HetatomImpl::DD,75278
75272 :: CALL :: call :: V :: v74.setChemComp(v9)::CL,89873
75277 :: EXPR :: assign :: null :: PHI v48 = v28, v28, v28, v47::DD,75191:JM,75196:JM,75202
75276 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v74::DD,75114
75278 :: EXPR :: assign :: null :: PHI v74 = v25, v23, v21::DD,75276
75347 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::JM,60568:JM,70353
75346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::CE,75347:CD,75353:CD,75394
75350 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v3 = p0 $this .chemComp::DD,75353
75353 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 54::CD,75357:CD,75367
75357 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = getChemComp(v5)::JM,75361:CL,82644
75361 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = v7::
75364 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v8 = p0 $this .chemComp::DD,75367
75367 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 54::CD,75370:CD,75378:CD,75383
75370 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
75375 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdb_name::
75378 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
75383 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
75391 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v19 = p0 $this .chemComp::DD,75394
75394 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v19::DD,75347
75407 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::JM,60437:JM,126191:JM,134109
75406 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::CE,75407:CD,75413
75410 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,75413
75413 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 30::CD,75414:CD,75418:CD,75430
75414 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getThree_letter_code()::JM,75418:CL,89884
75419 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getThree_letter_code()::JM,75428:CL,89884
75418 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 30::CD,75419:CD,75423:CD,75428:CD,75430
75423 :: CALL :: call :: Z :: v11 = v8.equals(#(???))::JM,75428
75429 :: NORM :: compound :: Z :: return #(0)::CF,75407
75428 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,75429:CD,75430
75430 :: NORM :: compound :: Z :: return #(1)::CF,75407
75447 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(0)::
75450 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = #(null)::
75453 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = #(null)::
75456 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,75460
75460 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v6::
75463 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,75467
75467 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v8::
75470 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = #(null)::
75473 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = #(null)::
75476 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = #(null)::
75479 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v10 = org.biojava.nbio.structure.HetatomImpl.performanceBehavior::DD,75483
75481 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::CF,75483
75483 :: PRED :: IF :: Z :: if (v10 != v11) goto 81::CD,75484
75484 :: NORM :: declaration :: Ljava/util/HashMap :: v12 = new java.util.HashMap::DD,75488
75488 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v12::
75492 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = #(null)::
75535 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = #(null)::
75538 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = #(ATOM)::
75547 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setAminoType(java.lang.Character)::JM,75552
75552 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = p1 $aa ::
75559 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::JM,60590
75558 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::CE,75559:CD,75565
75562 :: EXPR :: reference :: Z :: v3 = p0 $this .standard::DD,75565
75565 :: NORM :: compound :: Z :: return v3::CF,75559
75567 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::CE,75568:CD,75574
75568 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::JM,60604
75571 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .hetAtoms::DD,75574
75574 :: NORM :: compound :: Ljava/util/List :: return v3::CF,75568
75577 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::JM,60674
75576 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::CE,75577:CD,75583
75580 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,75583
75583 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,75584:CD,75588:CD,75592:CD,75594:CD,75595
75585 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::JM,75592
75584 :: NORM :: compound :: Z :: return #(0)::CF,75577
75588 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,75592
75592 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 26::CD,75595
75595 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,75594
75594 :: NORM :: compound :: Z :: return v10::CF,75577
75639 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::CE,75640:CD,75646
75640 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::JM,60770:JM,60816:JM,60842:JM,60872:JM,76511:JM,82609:JM,93824:JM,134318:JM,134390:JM,134364:JM,134420
75643 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,75646
75646 :: NORM :: compound :: Ljava/util/List :: return v3::CF,75640
75649 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::JM,60786:JM,60836:JM,61447:JM,61359:JM,93788:JM,93842:JM,134334:JM,134384
75648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::CE,75649:CD,75655
75652 :: EXPR :: reference :: C :: v3 = p0 $this .altLoc::DD,75655
75655 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 10::CD,75656:CD,75660:CD,75664
75657 :: EXPR :: reference :: C :: v5 = p0 $this .altLoc::JM,75664
75656 :: NORM :: compound :: Ljava/lang/Character :: return #(null)::DD,75649
75660 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(v5)::JM,75664
75664 :: NORM :: compound :: Ljava/lang/Character :: return v7::DD,75649
75669 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.clone()::CE,75670:CD,75673:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,75681:CD,75688:CD,75696:CD,75703:CD,75726:CD,75730:CD,75734:CD,75765:CD,75773
75670 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.clone()::JM,60884:JM,120933:JM,121735:JM,134432
75673 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v3 = new org.biojava.nbio.structure.HetatomImpl::DD,75773
75681 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,76584
75688 :: CALL :: call :: V :: v3.setResidueNumber(v8)::CL,60537
75696 :: CALL :: call :: V :: v3.setPDBName(v11)::CL,60495
75700 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .atoms::JM,75730
75703 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,75730
75708 :: CALL :: call :: Ljava/lang/Object :: v20 = v15.next()::JM,75730
75713 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.clone()::CL,71337
75718 :: CALL :: call :: V :: v3.addAtom(v24)::CL,61306
75722 :: CALL :: call :: V :: v24.setGroup(v3)::CL,76564
75726 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,75730
75731 :: EXPR :: reference :: Ljava/util/List :: v27 = p0 $this .altLocs::DD,75734
75730 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CD,75708:CD,75713:CD,75718:CD,75722:CD,75726:JM,75730
75735 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .altLocs::JM,75761
75734 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 146::CD,75738:CD,75757:CD,75761
75738 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,75761
75743 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,75761
75748 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.clone()::CL,75669:CL,75811:CL,75986
75753 :: CALL :: call :: V :: v3.addAltLoc(v39)::CL,76228
75757 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,75761
75761 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 110::CD,75743:CD,75748:CD,75753:CD,75757:JM,75761
75762 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = p0 $this .chemComp::DD,75765
75765 :: PRED :: IF :: Z :: if (v44 == #(null)) goto 161::CD,75769:CF,75773
75769 :: CALL :: call :: V :: v3.setChemComp(v45)::CL,89873
75773 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,75670
75811 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.clone()::CE,75812:CD,75815:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,75823:CD,75831:CD,75839:CD,75847:CD,75854:CD,75861:CD,75884:CD,75888:CD,75889:CD,75893:CD,75934:CD,75942
75812 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.AminoAcidImpl.clone()::JM,60884:JM,120933:JM,121735:JM,134432
75815 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v3 = new org.biojava.nbio.structure.AminoAcidImpl::DD,75942
75823 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,76584
75831 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,60537
75839 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,60526
75847 :: CALL :: call :: V :: v3.setAminoType(v15)::CL,75547
75854 :: CALL :: call :: V :: v3.setRecordType(v17)::CL,61571
75858 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .atoms::JM,75888
75861 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,75888
75866 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,75888
75871 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.clone()::CL,71337
75876 :: CALL :: call :: V :: v3.addAtom(v30)::CL,61306
75880 :: CALL :: call :: V :: v30.setGroup(v3)::CL,76564
75884 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,75888
75889 :: CALL :: call :: Ljava/util/List :: v34 = p0 $this .getAltLocs()::JM,75893:CL,75032
75888 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 62::CD,75866:CD,75871:CD,75876:CD,75880:CD,75884:JM,75888
75893 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 174::CD,75894:CD,75898:CD,75902
75894 :: CALL :: call :: Ljava/util/List :: v37 = p0 $this .getAltLocs()::JM,75902:CL,75032
75898 :: CALL :: call :: Z :: v39 = v37.isEmpty()::JM,75902
75903 :: CALL :: call :: Ljava/util/List :: v41 = p0 $this .getAltLocs()::JM,75930:CL,75032
75902 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 174::CD,75903:CD,75907:CD,75926:CD,75930
75907 :: CALL :: call :: Ljava/util/Iterator :: v43 = v41.iterator()::JM,75930
75912 :: CALL :: call :: Ljava/lang/Object :: v47 = v43.next()::JM,75930
75917 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.clone()::CL,75669:CL,75811:CL,75986
75922 :: CALL :: call :: V :: v3.addAltLoc(v51)::CL,76228
75926 :: CALL :: call :: Z :: v45 = v43.hasNext()::JM,75930
75931 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v56 = p0 $this .chemComp::DD,75934
75930 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 138::CD,75912:CD,75917:CD,75922:CD,75926:JM,75930
75934 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 189::CD,75938:CF,75942
75938 :: CALL :: call :: V :: v3.setChemComp(v57)::CL,89873
75942 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,75812
75987 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.NucleotideImpl.clone()::JM,60884:JM,120933:JM,121735:JM,134432
75986 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.clone()::CE,75987:CD,75990:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,75998:CD,76006:CD,76014:CD,76021:CD,76044:CD,76048:CD,76049:CD,76053:CD,76094:CD,76102
75990 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v3 = new org.biojava.nbio.structure.NucleotideImpl::DD,76102
75998 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,76584
76006 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,60537
76014 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,60495
76018 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .atoms::JM,76048
76021 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,76048
76026 :: CALL :: call :: Ljava/lang/Object :: v21 = v16.next()::JM,76048
76031 :: CALL :: call :: Ljava/lang/Object :: v24 = v22.clone()::CL,71337
76036 :: CALL :: call :: V :: v3.addAtom(v25)::CL,61306
76040 :: CALL :: call :: V :: v25.setGroup(v3)::CL,76564
76044 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,76048
76049 :: CALL :: call :: Ljava/util/List :: v29 = p0 $this .getAltLocs()::JM,76053:CL,75032
76048 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 46::CD,76026:CD,76031:CD,76036:CD,76040:CD,76044:JM,76048
76053 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 158::CD,76054:CD,76058:CD,76062
76054 :: CALL :: call :: Ljava/util/List :: v32 = p0 $this .getAltLocs()::JM,76062:CL,75032
76058 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,76062
76063 :: CALL :: call :: Ljava/util/List :: v36 = p0 $this .getAltLocs()::JM,76090:CL,75032
76062 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 158::CD,76063:CD,76067:CD,76086:CD,76090
76067 :: CALL :: call :: Ljava/util/Iterator :: v38 = v36.iterator()::JM,76090
76072 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,76090
76077 :: CALL :: call :: Ljava/lang/Object :: v45 = v43.clone()::CL,75669:CL,75811:CL,75986
76082 :: CALL :: call :: V :: v3.addAltLoc(v46)::CL,76228
76086 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,76090
76091 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = p0 $this .chemComp::DD,76094
76090 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 122::CD,76072:CD,76077:CD,76082:CD,76086:JM,76090
76094 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 173::CD,76098:CF,76102
76098 :: CALL :: call :: V :: v3.setChemComp(v52)::CL,89873
76102 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,75987
76142 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setAtoms(java.util.List)::CD,76150:CD,76157:CD,76188:CD,76192:CD,76196:CD,76200:JM,76193
76147 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,76150
76151 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .atomNameLookup::
76150 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 17::CD,76154:JM,76193:JM,76192:JM,76200
76154 :: CALL :: call :: V :: v6.clear()::
76157 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $atoms .iterator()::JM,76193:JM,76192:JM,76200
76162 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,76192:JM,76200
76167 :: CALL :: call :: V :: v15.setGroup(p0 $this )::CL,76564
76171 :: EXPR :: reference :: Ljava/util/Map :: v17 = p0 $this .atomNameLookup::DD,76174
76174 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 68::CD,76182:JM,76192:JM,76200
76182 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.put(v20, v15)::
76188 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,76192:JM,76200
76193 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = p1 $atoms ::
76192 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 27::CD,76162:CD,76167:CD,76174:CD,76188:JM,76192:JM,76200
76196 :: CALL :: call :: Z :: v24 = p1 $atoms .isEmpty()::JM,76192:JM,76200
76201 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(1)::
76200 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 95::
76228 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAltLoc(org.biojava.nbio.structure.Group)::CD,76236:CD,76247
76233 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .altLocs::DD,76236
76237 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,76241
76236 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 19::CD,76237
76241 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = v6::
76244 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .altLocs::
76247 :: CALL :: call :: Z :: v10 = v8.add(p1 $group )::
76260 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(java.util.List)::CD,76264:CD,76268:CD,76287:CD,76291
76264 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
76268 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $chains .iterator()::JM,76291
76273 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,76291
76278 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = getRepresentativeAtomsOnly(v12)::CL,76398
76282 :: CALL :: call :: Z :: v16 = v3.add(v14)::
76287 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,76291
76291 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 19::CD,76273:CD,76278:CD,76282:CD,76287:JM,76291
76307 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setModel(int,java.util.List)::CD,76314:CD,76320:CD,76334:CD,76338:CD,76342:CD,76346
76314 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v24 = new java.lang.IllegalArgumentException::
76320 :: CALL :: call :: Ljava/util/Iterator :: v7 = p2 $model .iterator()::JM,76338
76325 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,76338
76330 :: CALL :: call :: V :: v13.setStructure(p0 $this )::CL,77031
76334 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,76338
76339 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .models::JM,76346
76338 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 28::CD,76325:CD,76330:CD,76334:JM,76338
76342 :: CALL :: call :: Z :: v17 = v15.isEmpty()::JM,76346
76347 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .models::
76346 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 81::CD,76350:CD,76359
76350 :: CALL :: call :: Z :: v23 = v21.add(p2 $model )::JM,76338
76356 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .models::
76359 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.set(p1 $position , p2 $model )::JM,76338
76385 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.nrModels()::CE,76386:CD,76392:CD,76396
76386 :: EXIT :: exit :: I :: org.biojava.nbio.structure.StructureImpl.nrModels()::JM,61073:JM,65975:JM,67464:JM,69846:JM,82929:JM,107380:JM,107460:JM,121830:JM,122151
76389 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .models::JM,76396
76392 :: CALL :: call :: I :: v5 = v3.size()::JM,76396
76396 :: NORM :: compound :: I :: return v5::CF,76386
76399 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::
76398 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::CE,76399:CD,76402:JM,59970:JM,59989:JM,59975:JM,59982:CD,76410:CD,76418:CD,76426:CD,76430:CD,76434:CD,76512:CD,76516:CD,76517
76402 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v3 = new org.biojava.nbio.structure.ChainImpl::DD,76517
76410 :: CALL :: call :: V :: v3.setChainID(v6)::CL,60013
76418 :: CALL :: call :: V :: v3.setCompound(v9)::CL,80945
76426 :: CALL :: call :: V :: v3.setSwissprotId(v12)::CL,89958
76430 :: CALL :: call :: Ljava/util/List :: v15 = p1 $chain .getAtomGroups()::JM,76516:JM,76443:CL,70097
76434 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,76516:JM,76443
76439 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,76516:JM,76443
76443 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,76448
76444 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,76511:CL,75639
76449 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,76451:CD,76507:CD,76511
76448 :: EXPR :: assign :: Z :: v26=v23 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,76449
76451 :: CALL :: call :: Ljava/util/Iterator :: v28 = v25.iterator()::JM,76511
76456 :: CALL :: call :: Ljava/lang/Object :: v32 = v28.next()::JM,76511
76461 :: CALL :: call :: Ljava/lang/String :: v35 = v33.getName()::JM,76470:CL,61487
76465 :: CALL :: call :: Z :: v38 = v35.equals(#(CA))::JM,76470
76471 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v40 = v33.getElement()::JM,76477:CL,70262
76470 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 200::CD,76471:CD,76475:CD,76477:CD,76507:CD,76511
76475 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v41 = org.biojava.nbio.structure.Element.C::CF,76477
76477 :: PRED :: IF :: Z :: if (v40 != v41) goto 200::JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,76486:CD,76494:CD,76498:CD,76502:CD,76507:CD,76511
76486 :: CALL :: call :: V :: v42.setPDBName(v45)::CL,60526
76494 :: CALL :: call :: V :: v42.setResidueNumber(v48)::CL,60537
76498 :: CALL :: call :: V :: v42.addAtom(v33)::CL,61306
76502 :: CALL :: call :: V :: v3.addGroup(v42)::CL,60033
76507 :: CALL :: call :: Z :: v30 = v28.hasNext()::JM,76511
76511 :: PRED :: IF :: Z :: if (v30 != #(0)) goto 105::CD,76456:CD,76461:CD,76465:CD,76470:JM,76511:JM,76516:JM,76443
76512 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,76516:JM,76443
76517 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::DD,76399
76516 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 64::CD,76439:CD,76443:CD,76444:CD,76448:CD,76449:CD,76512:JM,76516:CF,76517
76564 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setGroup(org.biojava.nbio.structure.Group)::JM,76569
76569 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = p1 $parent ::
76575 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getCoords()::CE,76576:CD,76582
76576 :: EXIT :: exit :: [D :: org.biojava.nbio.structure.AtomImpl.getCoords()::JM,61327
76579 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::DD,76582
76582 :: NORM :: compound :: [D :: return v3::CF,76576
76584 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBFlag(boolean)::JM,76589
76589 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = p1 $flag ::
76595 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.toString()::CE,76596:CD,76599:CD,76607:CD,76612:CD,76620:CD,76625:CD,76633:CD,76638:CD,76646:CD,76651:CD,76659:CD,76664:CD,76672:CD,76677:CD,76684:CD,76715:CD,76719:CD,76723:CD,76755:CD,76756:CD,76757
76596 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AminoAcidImpl.toString()::
76599 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
76604 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .recordType::
76607 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
76612 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#(:))::
76617 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::
76620 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::
76625 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#( ))::
76633 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
76638 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(#( ))::
76646 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(v23)::JM,76756
76651 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#( ))::JM,76756
76656 :: EXPR :: reference :: Z :: v28 = p0 $this .pdb_flag::JM,76756
76659 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::JM,76756
76664 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v30.append(#( ))::JM,76756
76669 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .recordType::JM,76756
76672 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(v33)::JM,76756
76677 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,76756
76681 :: EXPR :: reference :: Z :: v38 = p0 $this .pdb_flag::DD,76684
76685 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::JM,76756
76684 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 120::CF,76756:CF,76685:CD,76686:CD,76694:CD,76702:CD,76706:CD,76711
76686 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v37)::
76694 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v40.append(#( atoms: ))::JM,76756
76699 :: EXPR :: reference :: Ljava/util/List :: v47 = p0 $this .atoms::JM,76756
76702 :: CALL :: call :: I :: v49 = v47.size()::JM,76756
76706 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v46.append(v49)::JM,76756
76711 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::JM,76756
76715 :: CALL :: call :: Ljava/util/List :: v56 = p0 $this .getAltLocs()::JM,76723:CL,75032
76719 :: CALL :: call :: Z :: v58 = v56.isEmpty()::JM,76723
76723 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 164::CF,76757:CF,76724:CD,76725:CD,76733:CD,76738:CD,76742:CD,76746:CD,76751
76725 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v54)::
76724 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,76757
76733 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v59.append(#( has altLocs :))::JM,76757
76738 :: CALL :: call :: Ljava/util/List :: v67 = p0 $this .getAltLocs()::JM,76757:CL,75032
76742 :: CALL :: call :: I :: v69 = v67.size()::JM,76757
76746 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::JM,76757
76751 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::JM,76757
76755 :: NORM :: compound :: Ljava/lang/String :: return v74::DD,76596
76757 :: EXPR :: assign :: null :: PHI v74 = v54, v73::CF,76755
76756 :: EXPR :: assign :: null :: PHI v54 = v37, v53::DD,76757
76785 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.toString()::CE,76786:CD,76789:CD,76797:CD,76802:CD,76810:CD,76815:CD,76823:CD,76828:CD,76835:CD,76866:CD,76867
76786 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.NucleotideImpl.toString()::
76789 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
76794 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .pdb_name::
76797 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
76802 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
76810 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,76867
76815 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,76867
76820 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,76867
76823 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,76867
76828 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,76867
76832 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,76835
76835 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 84::CF,76867:CF,76836:CD,76837:CD,76845:CD,76853:CD,76857:CD,76862
76837 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
76836 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,76867
76845 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#(atoms: ))::JM,76867
76850 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,76867
76853 :: CALL :: call :: I :: v33 = v31.size()::JM,76867
76857 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,76867
76862 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,76867
76867 :: EXPR :: assign :: null :: PHI v38 = v21, v37::CF,76866
76866 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,76786
76883 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.toString()::CE,76884:CD,76887:CD,76895:CD,76900:CD,76908:CD,76913:CD,76921:CD,76926:CD,76933:CD,76967:CD,76998:CD,76999:CD,77000
76884 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.toString()::
76887 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
76895 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,76999
76900 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::JM,76999
76905 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::JM,76999
76908 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,76999
76913 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,76999
76918 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,76999
76921 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,76999
76926 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,76999
76930 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,76933
76933 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 86::CF,76999:CF,76934:CD,76935:CD,76943:CD,76951:CD,76955:CD,76960
76935 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
76934 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,76999
76943 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#( atoms: ))::JM,76999
76948 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,76999
76951 :: CALL :: call :: I :: v33 = v31.size()::JM,76999
76955 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,76999
76960 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,76999
76964 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .altLocs::DD,76967
76967 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 126::CF,77000:CF,76968:CD,76969:CD,76977:CD,76985:CD,76989:CD,76994
76969 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v38)::
76968 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::JM,77000
76977 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v41.append(#( has altLocs :))::JM,77000
76982 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .altLocs::JM,77000
76985 :: CALL :: call :: I :: v50 = v48.size()::JM,77000
76989 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v50)::JM,77000
76994 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::JM,77000
76999 :: EXPR :: assign :: null :: PHI v38 = v21, v37::DD,77000
76998 :: NORM :: compound :: Ljava/lang/String :: return v55::DD,76884
77000 :: EXPR :: assign :: null :: PHI v55 = v38, v54::CF,76998
77023 :: EXIT :: exit :: I :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::
77022 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::CE,77023:CD,77029
77026 :: EXPR :: reference :: I :: v3 = p0 $this .pdbserial::DD,77029
77029 :: NORM :: compound :: I :: return v3::CF,77023
77031 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setStructure(org.biojava.nbio.structure.Structure)::JM,77036
77036 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $parent ::
77043 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::JM,61729:JM,61719:JM,61725
77042 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::CE,77043:CD,77048:CD,77053:CD,77054
77048 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $expTechniqueName )::JM,77053
77053 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,77054
77054 :: NORM :: compound :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v6::DD,77043
77057 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::CE,77058:CD,77064
77058 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::JM,61864
77061 :: EXPR :: reference :: D :: v3 = p0 $this .a::DD,77064
77064 :: NORM :: compound :: D :: return v3::CF,77058
77067 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::JM,61870
77066 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::CE,77067:CD,77073
77070 :: EXPR :: reference :: D :: v3 = p0 $this .b::DD,77073
77073 :: NORM :: compound :: D :: return v3::CF,77067
77075 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::CE,77076:CD,77082
77076 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::JM,61876
77079 :: EXPR :: reference :: D :: v3 = p0 $this .c::DD,77082
77082 :: NORM :: compound :: D :: return v3::CF,77076
77085 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.getSiteID()::JM,62100:JM,122488:JM,125989
77084 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getSiteID()::CE,77085:CD,77091
77088 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .siteID::DD,77091
77091 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,77085
77102 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
77105 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,77121:JM,77118:DD,77109
77109 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v7::
77112 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
77115 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
77118 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
77121 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p2 $groups ::
77138 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setEvCode(java.lang.String)::JM,77143
77143 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = p1 $evCode ::
77149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setDescription(java.lang.String)::JM,77154
77154 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
77160 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB()::CD,77164:CD,77168:CD,77172
77164 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
77168 :: CALL :: call :: V :: p0 $this .remark800toPDB(v3)::CL,89969
77172 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
77182 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.initialize()::CD,77186:CD,77193:CD,77204
77186 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,77190
77190 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transformations = v3::
77193 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v7 = identity(#(3), #(3))::JM,77198:CL,90085
77198 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v7::
77201 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
77205 :: EXPR :: modify :: [D :: p0 $this .shift = v9::
77204 :: NORM :: declaration :: [D :: v9 = new []::DD,77205
77208 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
77211 :: EXPR :: modify :: I :: p0 $this .currentMmSize = #(0)::
77229 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::JM,62512
77228 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::CE,77229:CD,77233:CD,77238:CD,77239:CD,77243:CD,77244:CD,77250:CD,77254:CD,77258:CD,77262
77233 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(58))::JM,77238:JM,77243
77239 :: CALL :: call :: I :: v10 = p1 $line .length()::JM,77238:JM,77243
77238 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,77238:JM,77243
77243 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 - #(1)::JM,77238:JM,77243
77244 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v8, v11)::JM,77238:JM,77243
77250 :: CALL :: call :: Ljava/lang/String :: v15 = v13.trim()::
77254 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toLowerCase()::
77258 :: CALL :: call :: I :: v19 = getSizefromString(v17)::JM,77262:CL,90147
77262 :: NORM :: compound :: I :: return v19::DD,77229
77273 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.addToCurrentChainList(java.lang.String)::CD,77278:CD,77283:CD,77284:CD,77289:CD,77293:CD,77301:CD,77305
77278 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(:))::JM,77283
77283 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,77283
77284 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(v8)::JM,77283
77289 :: CALL :: call :: Ljava/lang/String :: v12 = v10.trim()::
77293 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#([ ,]+))::JM,77301
77298 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .currentChainIDs::
77301 :: CALL :: call :: Ljava/util/List :: v18 = asList(v15)::JM,77301
77305 :: CALL :: call :: Z :: v20 = v16.addAll(v18)::
77325 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::JM,62578
77324 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::CE,77325:CD,77329:CD,77338:CD,77343:CD,77347:CD,77373:CD,77392:CD,77411:CD,77420:CD,77425:CD,77429:CD,77434
77329 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $line .split(#([ ]+))::
77334 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(2)]::JM,77347:JM,77434:JM,77420
77338 :: CALL :: call :: Ljava/lang/String :: v11 = v8.substring(#(5))::JM,77347:JM,77434:JM,77420
77343 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,77347:JM,77434:JM,77420
77347 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 44::CD,77348:CD,77356
77348 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v17 = identity(#(3), #(3))::JM,77353:CL,90085
77353 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v17::
77357 :: EXPR :: modify :: [D :: p0 $this .shift = v18::
77356 :: NORM :: declaration :: [D :: v18 = new []::DD,77357
77373 :: CALL :: call :: V :: v19.set(v20, #(0), v26)::CL,90424
77392 :: CALL :: call :: V :: v28.set(v29, #(1), v33)::CL,90424
77411 :: CALL :: call :: V :: v35.set(v36, #(2), v41)::CL,90424
77417 :: EXPR :: reference :: [D :: v43 = p0 $this .shift::
77421 :: EXPR :: reference :: Ljava/lang/Object :: v46 = v6[#(7)]::JM,77425:JM,77429
77420 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v13 - #(1)::
77425 :: CALL :: call :: F :: v48 = parseFloat(v46)::JM,77425:JM,77429
77429 :: EXPR :: assign :: D :: v49 = CONVERT F to D v48::DD,77430
77430 :: EXPR :: modify :: D :: v43[v44] = v49::
77435 :: NORM :: compound :: Z :: return #(1)::DD,77325
77434 :: PRED :: IF :: Z :: if (v13 != #(3)) goto 127::CD,77435:CD,77436
77436 :: NORM :: compound :: Z :: return #(0)::DD,77325
77480 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.saveMatrix()::CD,77487:CD,77542:CD,77546:CD,77553:CD,77558
77484 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .currentChainIDs::JM,77546
77487 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,77546
77492 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,77546
77497 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v12 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
77519 :: EXPR :: reference :: I :: v20 = p0 $this .modelNumber::
77522 :: CALL :: call :: Ljava/lang/String :: v22 = valueOf(v20)::
77526 :: CALL :: call :: V :: v12.setId(v22)::CL,90590
77530 :: CALL :: call :: V :: v12.setChainId(v11)::CL,90601
77534 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .transformations::
77537 :: CALL :: call :: Z :: v27 = v25.add(v12)::
77542 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,77546
77546 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,77492:CD,77497:JM,90454:CD,77522:CD,77526:CD,77530:CD,77537:CD,77542:JM,77546
77553 :: CALL :: call :: Z :: v31 = v28.containsKey(v29)::JM,77558
77558 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 173::CD,77570:CD,77591:CD,77598:CD,77608
77570 :: CALL :: call :: V :: v32.setId(v36)::CL,90621
77591 :: CALL :: call :: V :: v32.setMacromolecularSize(v43)::CL,90632
77598 :: CALL :: call :: V :: v32.setTransforms(v45)::CL,90643
77608 :: CALL :: call :: Ljava/lang/Object :: v50 = v47.put(v48, v32)::
77670 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.compndValueSetter(java.lang.String,java.lang.String)::CD,77676:CD,77680:CD,77686:CD,77691:CD,77759:JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77916
77676 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77680 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,77978
77686 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77691 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 123::CD,77692:CD,77696:CD,77708:CD,77978
77692 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,77978
77696 :: CALL :: call :: I :: v19 = v17.intValue()::JM,77978
77709 :: EXPR :: reference :: I :: v26 = p0 $this .prevMolId::DD,77712
77708 :: PRED :: IF :: Z :: if (v25 <= #(0)) goto 123::CD,77712
77713 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v27 = p0 $this .current_compound::DD,77716
77712 :: PRED :: IF :: Z :: if (v26 == v25) goto 123::CD,77716:CD,77730:CD,77739:JM,63952:JM,63959:CD,77749
77717 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .compounds::
77716 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 83::CD,77723
77720 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v30 = p0 $this .current_compound::
77723 :: CALL :: call :: Z :: v32 = v29.add(v30)::
77730 :: CALL :: call :: Ljava/lang/Integer :: v36 = valueOf(v25)::
77739 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v38 = new org.biojava.nbio.structure.Compound::DD,77743
77743 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .current_compound = v38::
77749 :: CALL :: call :: V :: v40.setMolId(v25)::CL,80986
77756 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v43 = p0 $this .current_compound::DD,77759
77759 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 133::CD,77761:CD,77766:CD,77774:CD,77779:CD,77835:CD,77840:CD,77873:CD,77878:CD,77911:CD,77916:CD,77924:CD,77929:CD,77937:CD,77942:CD,77950:CD,77955:CD,77963:CD,77968:JM,77691
77761 :: CALL :: call :: Z :: v46 = p1 $field .equals(#(MOLECULE:))::JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77766 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,77770:JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77770 :: CALL :: call :: V :: v47.setMolName(v10)::CL,90698
77774 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(CHAIN:))::JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77779 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 245::CF,77780:CD,77786:CD,77810:CD,77814:CD,77821:CD,77825:CD,77829:JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77780 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v52 = new java.util.StringTokenizer::JM,77979:JM,77804:JM,77814
77786 :: NORM :: declaration :: Ljava/util/ArrayList :: v55 = new java.util.ArrayList::
77791 :: CALL :: call :: Ljava/lang/String :: v60 = v52.nextToken()::JM,77979:JM,77804
77795 :: CALL :: call :: Ljava/lang/String :: v62 = v60.trim()::JM,77979:JM,77804
77799 :: CALL :: call :: Z :: v65 = v62.equals(#(NULL))::JM,77979:JM,77804
77805 :: CALL :: call :: Z :: v69 = v55.add(v67)::
77804 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 209::CF,77979
77810 :: CALL :: call :: Z :: v58 = v52.hasMoreTokens()::JM,77814
77814 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 181::CD,77791:CD,77795:CD,77799:CD,77804:CD,77805:CD,77810:CD,77979
77821 :: CALL :: call :: I :: v73 = v71.getMolId()::CL,80865
77825 :: CALL :: call :: Ljava/lang/Integer :: v75 = valueOf(v73)::
77829 :: CALL :: call :: Ljava/lang/Object :: v77 = v70.put(v75, v55)::
77835 :: CALL :: call :: Z :: v80 = p1 $field .equals(#(SYNONYM:))::JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77841 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v81 = new java.util.StringTokenizer::JM,77872
77840 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 306::CF,77841:CD,77847:CD,77868:CD,77872:JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77847 :: NORM :: declaration :: Ljava/util/ArrayList :: v83 = new java.util.ArrayList::
77852 :: CALL :: call :: Ljava/lang/String :: v88 = v81.nextToken()::
77856 :: CALL :: call :: Z :: v90 = v83.add(v88)::
77864 :: CALL :: call :: V :: v91.setSynonyms(v83)::CL,90709
77868 :: CALL :: call :: Z :: v86 = v81.hasMoreTokens()::JM,77872
77873 :: CALL :: call :: Z :: v95 = p1 $field .equals(#(EC:))::JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77872 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 278::CD,77852:CD,77856:CD,77864:CD,77868:JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77879 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v96 = new java.util.StringTokenizer::JM,77910
77878 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 367::CF,77879:CD,77885:CD,77906:CD,77910:JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77885 :: NORM :: declaration :: Ljava/util/ArrayList :: v98 = new java.util.ArrayList::
77890 :: CALL :: call :: Ljava/lang/String :: v103 = v96.nextToken()::
77894 :: CALL :: call :: Z :: v105 = v98.add(v103)::
77902 :: CALL :: call :: V :: v106.setEcNums(v98)::CL,90720
77906 :: CALL :: call :: Z :: v101 = v96.hasMoreTokens()::JM,77910
77911 :: CALL :: call :: Z :: v110 = p1 $field .equals(#(FRAGMENT:))::JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77910 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 339::CD,77890:CD,77894:CD,77902:CD,77906:JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77916 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 384::CD,77920:JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77920 :: CALL :: call :: V :: v111.setFragment(v10)::CL,90731
77924 :: CALL :: call :: Z :: v115 = p1 $field .equals(#(ENGINEERED:))::JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77929 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 401::CD,77933:JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77933 :: CALL :: call :: V :: v116.setEngineered(v10)::CL,90742
77937 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(MUTATION:))::JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77942 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 418::CD,77946:JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77946 :: CALL :: call :: V :: v121.setMutation(v10)::CL,90753
77950 :: CALL :: call :: Z :: v125 = p1 $field .equals(#(BIOLOGICAL_UNIT:))::JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77955 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 435::CD,77959:JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77959 :: CALL :: call :: V :: v126.setBiologicalUnit(v10)::CL,90764
77963 :: CALL :: call :: Z :: v130 = p1 $field .equals(#(OTHER_DETAILS:))::JM,77840:JM,77968:JM,77779:JM,77955:JM,77766:JM,77878:JM,77942:JM,77929:JM,77691:JM,77916
77968 :: PRED :: IF :: Z :: if (v130 == #(0)) goto 449::CD,77972
77972 :: CALL :: call :: V :: v131.setDetails(v10)::CL,90775
77979 :: EXPR :: assign :: null :: PHI v67 = v62, #( )::
77978 :: EXPR :: assign :: null :: PHI v25 = v19, #(-1)::DD,77708:DD,77712
78096 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.sourceValueSetter(java.lang.String,java.lang.String)::CD,78102:CD,78106:CD,78112:CD,78117:CD,78142:CD,78147:CD,78151:CD,78156:CD,78165:CD,78170:CD,78613:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78492:JM,78366:JM,78240:JM,78562:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78102 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78106 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,78129
78112 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78117 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 84::CD,78121:CD,78125:CD,78129:CD,78130:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78118 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .compounds::
78121 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,78129
78125 :: CALL :: call :: I :: v19 = v17.intValue()::JM,78129
78129 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 - #(1)::
78130 :: CALL :: call :: Ljava/lang/Object :: v23 = v15.get(v21)::
78142 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
78147 :: CALL :: call :: Ljava/lang/String :: v30 = v24.getMessage()::
78151 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v26.append(v30)::
78156 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
78165 :: CALL :: call :: Z :: v39 = p1 $field .equals(#(SYNTHETIC:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78170 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 104::CD,78174:CD,78179:CD,78184:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78174 :: CALL :: call :: V :: v195.setSynthetic(v10)::CL,90786
78179 :: CALL :: call :: Z :: v42 = p1 $field .equals(#(FRAGMENT:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78184 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 124::CD,78188:CD,78193:CD,78198:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78520:JM,78394:JM,78268:JM,78590
78188 :: CALL :: call :: V :: v193.setFragment(v10)::CL,90731
78193 :: CALL :: call :: Z :: v45 = p1 $field .equals(#(ORGANISM_SCIENTIFIC:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78198 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 144::CD,78202:CD,78207:CD,78212:JM,78464:JM,78338:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78202 :: CALL :: call :: V :: v191.setOrganismScientific(v10)::CL,90797
78207 :: CALL :: call :: Z :: v48 = p1 $field .equals(#(ORGANISM_TAXID:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78212 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 164::CD,78216:CD,78221:CD,78226:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78216 :: CALL :: call :: V :: v189.setOrganismTaxId(v10)::CL,90808
78221 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(ORGANISM_COMMON:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78226 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 184::CD,78230:CD,78235:CD,78240:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78230 :: CALL :: call :: V :: v187.setOrganismCommon(v10)::CL,90819
78235 :: CALL :: call :: Z :: v54 = p1 $field .equals(#(STRAIN:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78240 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 204::CD,78244:CD,78249:CD,78254:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78244 :: CALL :: call :: V :: v185.setStrain(v10)::CL,90830
78249 :: CALL :: call :: Z :: v57 = p1 $field .equals(#(VARIANT:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78254 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 224::CD,78258:CD,78263:CD,78268:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78590
78258 :: CALL :: call :: V :: v183.setVariant(v10)::CL,90841
78263 :: CALL :: call :: Z :: v60 = p1 $field .equals(#(CELL_LINE:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78268 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 244::CD,78272:CD,78277:CD,78282:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78272 :: CALL :: call :: V :: v181.setCellLine(v10)::CL,90852
78277 :: CALL :: call :: Z :: v63 = p1 $field .equals(#(ATCC:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78282 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 264::CD,78286:CD,78291:CD,78296:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78286 :: CALL :: call :: V :: v179.setAtcc(v10)::CL,90863
78291 :: CALL :: call :: Z :: v66 = p1 $field .equals(#(ORGAN:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78296 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 284::CD,78300:CD,78305:CD,78310:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78300 :: CALL :: call :: V :: v177.setOrgan(v10)::CL,90874
78305 :: CALL :: call :: Z :: v69 = p1 $field .equals(#(TISSUE:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78310 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 304::CD,78314:CD,78319:CD,78324:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78314 :: CALL :: call :: V :: v175.setTissue(v10)::CL,90885
78319 :: CALL :: call :: Z :: v72 = p1 $field .equals(#(CELL:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78324 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 324::CD,78328:CD,78333:CD,78338:JM,78464:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78328 :: CALL :: call :: V :: v173.setCell(v10)::CL,90896
78333 :: CALL :: call :: Z :: v75 = p1 $field .equals(#(ORGANELLE:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78338 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 344::CD,78342:CD,78347:CD,78352:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78342 :: CALL :: call :: V :: v171.setOrganelle(v10)::CL,90907
78347 :: CALL :: call :: Z :: v78 = p1 $field .equals(#(SECRETION:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78352 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 364::CD,78356:CD,78361:CD,78366:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78356 :: CALL :: call :: V :: v169.setSecretion(v10)::CL,90918
78361 :: CALL :: call :: Z :: v81 = p1 $field .equals(#(GENE:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78366 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 384::CD,78370:CD,78375:CD,78380:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78370 :: CALL :: call :: V :: v167.setGene(v10)::CL,90929
78375 :: CALL :: call :: Z :: v84 = p1 $field .equals(#(CELLULAR_LOCATION:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78380 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 404::CD,78384:CD,78389:CD,78394:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78268:JM,78590
78384 :: CALL :: call :: V :: v165.setCellularLocation(v10)::CL,90940
78389 :: CALL :: call :: Z :: v87 = p1 $field .equals(#(EXPRESSION_SYSTEM:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78394 :: PRED :: IF :: Z :: if (v87 == #(0)) goto 424::CD,78398:CD,78403:CD,78408:JM,78464:JM,78338:JM,78212:JM,78534:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78398 :: CALL :: call :: V :: v163.setExpressionSystem(v10)::CL,90951
78403 :: CALL :: call :: Z :: v90 = p1 $field .equals(#(EXPRESSION_SYSTEM_TAXID:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78408 :: PRED :: IF :: Z :: if (v90 == #(0)) goto 444::CD,78412:CD,78417:CD,78422:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78412 :: CALL :: call :: V :: v161.setExpressionSystemTaxId(v10)::CL,90962
78417 :: CALL :: call :: Z :: v93 = p1 $field .equals(#(EXPRESSION_SYSTEM_STRAIN:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78422 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 464::CD,78426:CD,78431:CD,78436:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78426 :: CALL :: call :: V :: v159.setExpressionSystemStrain(v10)::CL,90973
78431 :: CALL :: call :: Z :: v96 = p1 $field .equals(#(EXPRESSION_SYSTEM_VAR...))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78436 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 484::CD,78440:CD,78445:CD,78450:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78440 :: CALL :: call :: V :: v157.setExpressionSystemVariant(v10)::CL,90984
78445 :: CALL :: call :: Z :: v99 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78450 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 504::CD,78454:CD,78459:CD,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78454 :: CALL :: call :: V :: v155.setExpressionSystemCellLine(v10)::CL,90995
78459 :: CALL :: call :: Z :: v102 = p1 $field .equals(#(EXPRESSION_SYSTEM_ATC...))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78464 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 524::CD,78468:CD,78473:CD,78478:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78468 :: CALL :: call :: V :: v153.setExpressionSystemAtccNumber(v10)::CL,91006
78473 :: CALL :: call :: Z :: v105 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORGAN:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78478 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 544::CD,78482:CD,78487:CD,78492:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78482 :: CALL :: call :: V :: v151.setExpressionSystemOrgan(v10)::CL,91017
78487 :: CALL :: call :: Z :: v108 = p1 $field .equals(#(EXPRESSION_SYSTEM_TISSUE:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78492 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 564::CD,78496:CD,78501:CD,78506:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78496 :: CALL :: call :: V :: v149.setExpressionSystemTissue(v10)::CL,91028
78501 :: CALL :: call :: Z :: v111 = p1 $field .equals(#(EXPRESSION_SYSTEM_CELL:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78506 :: PRED :: IF :: Z :: if (v111 == #(0)) goto 584::CD,78510:CD,78515:CD,78520:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78394:JM,78268:JM,78590
78510 :: CALL :: call :: V :: v147.setExpressionSystemCell(v10)::CL,91039
78515 :: CALL :: call :: Z :: v114 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORG...))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78520 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 604::CD,78524:CD,78529:CD,78534:JM,78464:JM,78338:JM,78212:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78524 :: CALL :: call :: V :: v145.setExpressionSystemOrganelle(v10)::CL,91050
78529 :: CALL :: call :: Z :: v117 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78534 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 624::CD,78538:CD,78543:CD,78548:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78538 :: CALL :: call :: V :: v143.setExpressionSystemCellularLocation(v10)::CL,91061
78543 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(EXPRESSION_SYSTEM_VEC...))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78548 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 644::CD,78552:CD,78557:CD,78562:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78552 :: CALL :: call :: V :: v141.setExpressionSystemVectorType(v10)::CL,91072
78557 :: CALL :: call :: Z :: v123 = p1 $field .equals(#(EXPRESSION_SYSTEM_VECTOR:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78562 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 664::CD,78566:CD,78571:CD,78576:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78566 :: CALL :: call :: V :: v139.setExpressionSystemVector(v10)::CL,91083
78571 :: CALL :: call :: Z :: v126 = p1 $field .equals(#(EXPRESSION_SYSTEM_PLA...))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78576 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 684::CD,78580:CD,78585:CD,78590:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268
78580 :: CALL :: call :: V :: v137.setExpressionSystemPlasmid(v10)::CL,91094
78585 :: CALL :: call :: Z :: v129 = p1 $field .equals(#(EXPRESSION_SYSTEM_GENE:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78590 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 704::CD,78594:CD,78599:CD,78604:JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78594 :: CALL :: call :: V :: v135.setExpressionSystemGene(v10)::CL,91105
78599 :: CALL :: call :: Z :: v132 = p1 $field .equals(#(OTHER_DETAILS:))::JM,78464:JM,78338:JM,78212:JM,78534:JM,78408:JM,78282:JM,78604:JM,78478:JM,78352:JM,78226:JM,78548:JM,78422:JM,78296:JM,78170:JM,78492:JM,78366:JM,78240:JM,78562:JM,78117:JM,78436:JM,78310:JM,78184:JM,78506:JM,78380:JM,78254:JM,78576:JM,78450:JM,78324:JM,78198:JM,78520:JM,78394:JM,78268:JM,78590
78604 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 718::CD,78608
78608 :: CALL :: call :: V :: v133.setExpressionSystemOtherDetails(v10)::CL,91116
78613 :: EXPR :: assign :: Ljava/lang/Exception :: v24 = catch <exc>::
78793 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,78797
78797 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = v4::
78800 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,78804
78804 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = v6::
78807 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #()::
78810 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = #()::
78813 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = #()::
78816 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = #()::
78819 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = #()::
78822 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = #()::
78825 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = #()::
78828 :: EXPR :: modify :: Z :: p0 $this .published = #(0)::
78853 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.authorBuilder(java.lang.String)::CD,78858:CD,78862:CD,78867
78858 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
78862 :: CALL :: call :: Z :: v8 = p1 $authorString .equals(#())::JM,78867
78867 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,78869:CD,78874:CD,78875
78869 :: CALL :: call :: [Ljava/lang/String :: v12 = p1 $authorString .split(#(,))::JM,79125:JM,78874
78875 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 93::CF,78876:CD,78884:CD,78890:CD,78895:CD,78899:CD,78904:CD,78912:CD,79125:CD,79126:CD,79132
78874 :: EXPR :: assign :: I :: v13 = v12.length::DD,78875
78876 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v112 = new org.biojava.nbio.structure.Author::
78884 :: CALL :: call :: V :: v112.setSurname(v114)::CL,91146
78890 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v117 = new java.lang.StringBuilder::
78895 :: CALL :: call :: Ljava/lang/String :: v121 = v112.getSurname()::CL,91157
78899 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v117.append(v121)::
78904 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
78912 :: CALL :: call :: Z :: v128 = v4.add(v112)::
78919 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v12[v109]::
78925 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
78930 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v16)::
78935 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
78943 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v26 = new org.biojava.nbio.structure.Author::
78947 :: CALL :: call :: [Ljava/lang/String :: v30 = v16.split(#(\.))::JM,78993:JM,79057:JM,79089:JM,78952
78953 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 209::CD,78954:CD,78960:CD,78965:CD,78970:CD,78975:CD,78979:CD,78984:CD,78993:CD,78994:CD,79131
78952 :: EXPR :: assign :: I :: v31 = v30.length::DD,78953
78954 :: CALL :: call :: V :: v26.setSurname(v16)::CL,91146
78960 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
78965 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(#(\.))::
78970 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#(' Setting whole name ))::
78975 :: CALL :: call :: Ljava/lang/String :: v43 = v26.getSurname()::CL,91157
78979 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
78984 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
78993 :: EXPR :: assign :: I :: v49 = v30.length::DD,78994
78994 :: PRED :: IF :: Z :: if (v49 != #(1)) goto 263::CD,78999:CD,79005:CD,79010:CD,79014:CD,79019:CD,79057:CD,79058:CD,79059:CD,79062:CD,79067:CD,79072:CD,79077:CD,79085:CD,79089:CD,79090:CD,79097:CD,79102:CD,79107:CD,79115:CD,79128:CD,79129:CD,79130:CD,79131
78999 :: CALL :: call :: V :: v26.setSurname(v50)::CL,91146
79005 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
79010 :: CALL :: call :: Ljava/lang/String :: v57 = v26.getSurname()::CL,91157
79014 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
79019 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
79029 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v30[v79]::JM,79129
79033 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::JM,79129
79034 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v78)::
79042 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v66.append(v65)::JM,79129
79047 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v71.append(#(.))::JM,79129
79052 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::JM,79129
79057 :: EXPR :: assign :: I :: v63 = v30.length::DD,79058
79056 :: EXPR :: assign :: Ljava/lang/Object :: v77 = v79 + #(1)::DD,79130:CF,79128
79059 :: PRED :: IF :: Z :: if (v79 < v64) goto 270::CD,79033:CD,79034:CD,79042:CD,79047:CD,79052:CD,79056:CD,79057:CD,79058:CD,79128:CD,79129:CD,79130
79058 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v63 - #(1)::CF,79059
79062 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
79067 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v78)::
79072 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::
79077 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
79085 :: CALL :: call :: V :: v26.setInitials(v78)::CL,91166
79089 :: EXPR :: assign :: I :: v93 = v30.length::DD,79090
79091 :: EXPR :: reference :: Ljava/lang/Object :: v95 = v30[v94]::
79090 :: EXPR :: assign :: Ljava/lang/Object :: v94 = v93 - #(1)::
79097 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
79102 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v95)::
79107 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
79115 :: CALL :: call :: V :: v26.setSurname(v95)::CL,91146
79119 :: CALL :: call :: Z :: v107 = v4.add(v26)::
79125 :: EXPR :: assign :: I :: v15 = v12.length::CF,79126
79124 :: EXPR :: assign :: Ljava/lang/Object :: v108 = v111 + #(1)::DD,79132
79126 :: PRED :: IF :: Z :: if (v109 < v15) goto 99::CD,78925:CD,78930:CD,78935:CD,78943:CD,78947:CD,78952:CD,78953:CD,79119:CD,79124:CD,79125:CD,79131:CD,79132
79129 :: EXPR :: assign :: null :: PHI v78 = #(), v76::CF,79130
79128 :: EXPR :: assign :: null :: PHI v110 = v109, v110::CF,79129:DD,79128:DD,79131
79131 :: EXPR :: assign :: null :: PHI v111 = v109, v109, v110::DD,79124
79130 :: EXPR :: assign :: null :: PHI v79 = #(0), v77::DD,79056:DD,79059:CF,79057
79132 :: EXPR :: assign :: null :: PHI v109 = #(0), v108::DD,79126:DD,79128:DD,79131:CF,79125
79229 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setAuthorList(java.util.List)::JM,79234
79234 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = p1 $authorList ::
79240 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setEditorList(java.util.List)::JM,79245
79245 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = p1 $editorList ::
79251 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRef(java.lang.String)::JM,79256
79256 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = p1 $ref ::
79277 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79282 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p2 $ref )::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79287 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(#('))::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79292 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79406
79300 :: CALL :: call :: Z :: v21 = p2 $ref .equals(#(TO BE PUBLISHED ))::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79305 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 81::CD,79306:CD,79324:CD,79334:CD,79338:JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79306 :: CALL :: call :: Ljava/lang/String :: v173 = p2 $ref .trim()::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79324 :: CALL :: call :: Ljava/lang/String :: v179 = format(#(JournalParser found j...), v176)::
79334 :: CALL :: call :: I :: v24 = p2 $ref .length()::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79338 :: PRED :: IF :: Z :: if (v24 >= #(48)) goto 128::CD,79359:CD,79373:CD,79382:CD,79386:CD,79387:CD,79391:CD,79392:CD,79398:CD,79402:CD,79406:CD,79407:CD,79411:CD,79412:CD,79418:CD,79422:CD,79426:CD,79427:CD,79431:CD,79432:CD,79438:CD,79442:CD,79443:CD,79449:CD,79453:CD,79461:CD,79466:CD,79470:CD,79471:CD,79477:CD,79481:CD,79487:CD,79491:CD,79496:CD,79500:CD,79512:CD,79529:CD,79546:CD,79563:CD,79572:CD,79577:CD,79633:CD,79638:JM,79305:JM,79338
79359 :: CALL :: call :: Ljava/lang/String :: v28 = p2 $ref .substring(#(30), #(48))::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79373 :: CALL :: call :: Ljava/lang/String :: v35 = format(#(Parsing volumeInforma...), v33)::
79382 :: CALL :: call :: I :: v38 = v28.length()::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79387 :: CALL :: call :: I :: v42 = v28.length()::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79386 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 - #(5)::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79406:JM,79470
79391 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v42 - #(1)::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79392 :: CALL :: call :: Ljava/lang/String :: v45 = v28.substring(v40, v43)::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79398 :: CALL :: call :: Ljava/lang/String :: v47 = v45.trim()::JM,79411:JM,79426:JM,79431:JM,79577:JM,79406
79402 :: CALL :: call :: I :: v49 = v28.length()::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79407 :: CALL :: call :: I :: v53 = v28.length()::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79406 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v49 - #(11)::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79406:JM,79470
79411 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v53 - #(6)::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79412 :: CALL :: call :: Ljava/lang/String :: v57 = v28.substring(v51, v55)::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79418 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,79426:JM,79431:JM,79577
79422 :: CALL :: call :: I :: v61 = v28.length()::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79427 :: CALL :: call :: I :: v65 = v28.length()::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79426 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v61 - #(16)::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79406:JM,79470
79431 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v65 - #(12)::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79432 :: CALL :: call :: Ljava/lang/String :: v69 = v28.substring(v63, v67)::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79438 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::JM,79577
79443 :: CALL :: call :: Ljava/lang/String :: v75 = p2 $ref .substring(#(0), #(29))::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79442 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v72 = new java.lang.StringBuilder::JM,79639:JM,79638:JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79449 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79453 :: CALL :: call :: Ljava/lang/String :: v79 = valueOf(v77)::
79461 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v72.append(#( ))::JM,79639:JM,79638
79466 :: CALL :: call :: I :: v85 = p2 $ref .length()::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79471 :: CALL :: call :: Ljava/lang/String :: v88 = p2 $ref .substring(#(30), v86)::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79470 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v85 - #(1)::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79477 :: CALL :: call :: Ljava/lang/String :: v90 = v28.trim()::JM,79411:JM,79426:JM,79431:JM,79577:JM,79386:JM,79391:JM,79470:JM,79406
79481 :: CALL :: call :: Ljava/lang/String :: v93 = v88.replace(v90, #())::JM,79639:JM,79638
79487 :: CALL :: call :: Ljava/lang/String :: v95 = v93.trim()::JM,79639:JM,79638
79491 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v83.append(v95)::JM,79639:JM,79638
79496 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::JM,79639:JM,79638
79500 :: CALL :: call :: Ljava/lang/String :: v101 = v99.trim()::JM,79639:JM,79638
79512 :: CALL :: call :: Ljava/lang/String :: v107 = format(#(JournalParser found v...), v105)::
79529 :: CALL :: call :: Ljava/lang/String :: v114 = format(#(JournalParser found s...), v112)::
79546 :: CALL :: call :: Ljava/lang/String :: v121 = format(#(JournalParser found d...), v119)::
79563 :: CALL :: call :: Ljava/lang/String :: v128 = format(#(JournalParser found j...), v126)::
79572 :: CALL :: call :: Z :: v132 = v47.equals(#(    ))::JM,79577
79577 :: PRED :: IF :: Z :: if (v132 != #(0)) goto 431::CD,79578:JM,79577
79578 :: CALL :: call :: Ljava/lang/Integer :: v134 = valueOf(v47)::JM,79577
79593 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::JM,79411:JM,79426:JM,79431:JM,79305:JM,79577:JM,79338:JM,79386:JM,79391:JM,79470:JM,79406
79594 :: CALL :: call :: Ljava/lang/String :: v142 = valueOf(v47)::
79602 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v140.append(#( is not a valid integ...))::
79607 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::
79633 :: CALL :: call :: Z :: v156 = v101.equals(#(    ))::JM,79639:JM,79638
79639 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = v101::
79638 :: PRED :: IF :: Z :: if (v156 != #(0)) goto 502::CD,79645:CD,79653:CD,79658
79645 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
79650 :: EXPR :: reference :: Ljava/lang/String :: v162 = p0 $this .journalName::
79653 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(v162)::
79658 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
79790 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setJournalName(java.lang.String)::JM,79795
79795 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = p1 $journalName ::
79801 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.getJournalName()::CE,79802:CD,79808
79802 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.JournalArticle.getJournalName()::JM,65377
79805 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .journalName::DD,79808
79808 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,79802
79810 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setIsPublished(java.lang.Boolean)::CD,79815:JM,79819
79815 :: CALL :: call :: Z :: v5 = p1 $state .booleanValue()::JM,79819
79819 :: EXPR :: modify :: Z :: p0 $this .published = v5::
79835 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setVolume(java.lang.String)::JM,79840
79840 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .volume = p1 $volume ::
79856 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setStartPage(java.lang.String)::JM,79861
79861 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .startPage = p1 $startPage ::
79877 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublicationDate(int)::JM,79882
79882 :: EXPR :: modify :: I :: p0 $this .publicationDate = p1 $publicationDate ::
79888 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublisher(java.lang.String)::JM,79893
79893 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = p1 $publisher ::
79899 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setTitle(java.lang.String)::JM,79904
79904 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
79910 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRefn(java.lang.String)::JM,79915
79915 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = p1 $refn ::
79921 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPmid(java.lang.String)::JM,79926
79926 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = p1 $pmid ::
79932 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setDoi(java.lang.String)::JM,79937
79937 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = p1 $doi ::
79943 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.toString()::CD,79947:CD,79951:CD,79955:CD,79960:CD,79965:CD,79970:CD,79975:CD,79980:CD,79985:CD,79990:CD,79998:CD,80018:CD,80022:CD,80023:CD,80028:CD,80036:CD,80041:CD,80046:CD,80054:CD,80058:CD,80100:CD,80105:CD,80110:CD,80118:CD,80123:CD,80145:CD,80150:CD,80172:CD,80177:CD,80199:CD,80204:CD,80223
79947 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(line.separator))::JM,79947
79951 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
79955 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
79960 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
79965 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
79970 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
79975 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
79980 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
79985 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
79990 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
79995 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .authorList::JM,80022
79998 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,80022
80003 :: CALL :: call :: Ljava/lang/Object :: v39 = v34.next()::JM,80022
80008 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v8.append(v40)::
80013 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#(,))::
80018 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,80022
80023 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v6.append(v8)::
80022 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 117::CD,80003:CD,80008:CD,80013:CD,80018:JM,80022
80028 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v5)::
80033 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .title::
80036 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v11.append(v50)::
80041 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v6.append(v11)::
80046 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v54.append(v5)::
80051 :: EXPR :: reference :: Ljava/util/List :: v57 = p0 $this .editorList::JM,80058
80054 :: CALL :: call :: Z :: v59 = v57.isEmpty()::JM,80058
80059 :: EXPR :: reference :: Ljava/util/List :: v60 = p0 $this .editorList::JM,80086
80058 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 255::CD,80062:CD,80082:CD,80086:CD,80087:CD,80092
80062 :: CALL :: call :: Ljava/util/Iterator :: v62 = v60.iterator()::JM,80086
80067 :: CALL :: call :: Ljava/lang/Object :: v66 = v62.next()::JM,80086
80072 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v14.append(v67)::
80077 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v69.append(#(,))::
80082 :: CALL :: call :: Z :: v64 = v62.hasNext()::JM,80086
80087 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v6.append(v14)::
80086 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,80067:CD,80072:CD,80077:CD,80082:JM,80086
80092 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v74.append(v5)::
80097 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .ref::
80100 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v17.append(v79)::
80105 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v6.append(v17)::
80110 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v83.append(v5)::
80115 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .publisher::JM,80123
80118 :: CALL :: call :: Z :: v89 = v86.equals(#())::JM,80123
80123 :: PRED :: IF :: Z :: if (v89 != #(0)) goto 307::CD,80127:CD,80132:CD,80137
80124 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .publisher::
80127 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v20.append(v90)::
80132 :: CALL :: call :: Ljava/lang/StringBuilder :: v94 = v6.append(v20)::
80137 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v94.append(v5)::
80142 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .refn::JM,80150
80145 :: CALL :: call :: Z :: v99 = v97.equals(#())::JM,80150
80151 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .refn::
80150 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 340::CD,80154:CD,80159:CD,80164
80154 :: CALL :: call :: Ljava/lang/StringBuilder :: v102 = v23.append(v100)::
80159 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v6.append(v23)::
80164 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v5)::
80169 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .pmid::JM,80177
80172 :: CALL :: call :: Z :: v109 = v107.equals(#())::JM,80177
80177 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 373::CD,80181:CD,80186:CD,80191
80178 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .pmid::
80181 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v26.append(v110)::
80186 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v6.append(v26)::
80191 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v114.append(v5)::
80196 :: EXPR :: reference :: Ljava/lang/String :: v117 = p0 $this .doi::JM,80204
80199 :: CALL :: call :: Z :: v119 = v117.equals(#())::JM,80204
80205 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .doi::
80204 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 406::CD,80208:CD,80213:CD,80218
80208 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v29.append(v120)::
80213 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v6.append(v29)::
80218 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v124.append(v5)::
80223 :: CALL :: call :: Ljava/lang/String :: v128 = v6.toString()::
80341 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::JM,80346
80346 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = p1 $crystallographicInfo ::
80352 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setParent(org.biojava.nbio.structure.Structure)::JM,80357
80357 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $s ::
80363 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::CE,80364:CD,80368:CD,80393:CD,80397:JM,80377
80364 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::JM,65845:JM,65925:JM,121703
80368 :: CALL :: call :: Ljava/util/Iterator :: v5 = p2 $atomList .iterator()::JM,80377:JM,80397
80373 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,80377:JM,80397
80377 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,80392
80378 :: CALL :: call :: Ljava/lang/String :: v13 = v11.getChainID()::JM,80391:CL,60024
80382 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $seqRes .getChainID()::JM,80391:CL,60024
80386 :: CALL :: call :: Z :: v17 = v13.equals(v15)::JM,80391
80391 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 41::CD,80392:CD,80393:CD,80397:JM,80377
80393 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,80377:JM,80397
80392 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,80364
80397 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,80373:CD,80377:CD,80378:CD,80382:CD,80386:CD,80391:CD,80400:CD,80405:CD,80409:CD,80414:CD,80419:CD,80423:CD,80428:CD,80436:JM,80397
80400 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
80405 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $seqRes .getChainID()::CL,60024
80409 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v19.append(v23)::
80414 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(< to ATOM chains!, si...))::
80419 :: CALL :: call :: I :: v30 = p2 $atomList .size()::JM,80377:JM,80397
80423 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(v30)::JM,80377:JM,80397
80428 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
80436 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,80364
80454 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapSeqresRecords(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,80516:CD,80522
80516 :: CALL :: call :: Ljava/util/List :: v31 = p0 $this .trySimpleMatch(v6, v8)::JM,80522:CL,91220
80523 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v31)::CL,80733
80522 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 95::CD,80523:CD,80536:CD,80541:CD,80547:CD,80552:CD,80556
80536 :: CALL :: call :: Ljava/util/List :: v38 = p2 $seqRes .getAtomGroups(v36)::JM,80556:CL,91684
80541 :: CALL :: call :: I :: v40 = v38.size()::JM,80556
80547 :: CALL :: call :: Ljava/util/List :: v43 = p2 $seqRes .getAtomGroups(v41)::JM,80557:CL,91684
80552 :: CALL :: call :: I :: v45 = v43.size()::JM,80557
80557 :: PRED :: IF :: Z :: if (v45 <= #(1)) goto 177::CD,80574
80556 :: PRED :: IF :: Z :: if (v40 >= #(1)) goto 218::CD,80557:CD,80615:CD,80620:CD,80624
80574 :: CALL :: call :: V :: p0 $this .alignNucleotideChains(p2 $seqRes , p1 $atomRes )::CL,91742
80615 :: CALL :: call :: Ljava/util/List :: v48 = p1 $atomRes .getAtomGroups(v46)::JM,80624:CL,91684
80620 :: CALL :: call :: I :: v50 = v48.size()::JM,80624
80624 :: PRED :: IF :: Z :: if (v50 >= #(1)) goto 252::CD,80652:CD,80658
80652 :: CALL :: call :: Z :: v59 = p0 $this .alignProteinChains(v6, v57)::JM,80658:CL,91821
80659 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v6)::CL,80733
80658 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 293::CD,80659
80733 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqResGroups(java.util.List)::CD,80738:CD,80752:CD,80756:JM,80757
80738 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,80757:JM,80756
80743 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,80756
80748 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,60997
80752 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,80756
80757 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = p1 $groups ::
80756 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,80743:CD,80748:CD,80752:JM,80756
80771 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setAtomGroups(java.util.List)::CD,80776:CD,80790:CD,80794:JM,80795
80776 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,80795:JM,80794
80781 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,80794
80786 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,60997
80790 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,80794
80795 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $groups ::
80794 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,80781:CD,80786:CD,80790:JM,80794
80809 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setChains(int,java.util.List)::CD,80815:CD,80829:CD,80833:CD,80837:CD,80845
80815 :: CALL :: call :: Ljava/util/Iterator :: v6 = p2 $chains .iterator()::JM,80833
80820 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,80833
80825 :: CALL :: call :: V :: v12.setStructure(p0 $this )::CL,77031
80829 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,80833
80833 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,80820:CD,80825:CD,80829:JM,80833
80834 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .models::
80837 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.remove(p1 $modelnr )::JM,80833
80842 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .models::
80845 :: CALL :: call :: V :: v17.add(p1 $modelnr , p2 $chains )::JM,80833
80865 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getMolId()::CE,80866:CD,80872
80866 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Compound.getMolId()::JM,116201:JM,116233:JM,132231
80869 :: EXPR :: reference :: I :: v3 = p0 $this .molId::DD,80872
80872 :: NORM :: compound :: I :: return v3::CF,80866
80875 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::
80874 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::CE,80875:CD,80879:CD,80885
80879 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .findChain(p1 $chainId , #(0))::JM,80885:CL,92089
80885 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,80875
80889 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setChains(java.util.List)::JM,80894
80894 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = p1 $chains ::
80901 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains(int)::JM,66159:JM,67458:JM,86323:JM,92109
80900 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains(int)::CE,80901:CD,80905:CD,80910
80905 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(p1 $modelnr )::JM,80910:CL,70080
80910 :: NORM :: compound :: Ljava/util/List :: return v5::DD,80901
80913 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.addChain(org.biojava.nbio.structure.Chain)::CD,80921
80918 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .chains::
80921 :: CALL :: call :: Z :: v6 = v4.add(p1 $chain )::
80931 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::JM,122362
80930 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::CE,80931:CD,80935:CD,80941
80935 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChainByPDB(p1 $chainId , #(0))::JM,80941:CL,86303
80941 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,80931
80945 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setCompound(org.biojava.nbio.structure.Compound)::JM,80950
80950 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .mol = p1 $mol ::
80957 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.ChainImpl.getCompound()::JM,66292
80956 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getCompound()::CE,80957:CD,80963
80960 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v3 = p0 $this .mol::DD,80963
80963 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v3::CF,80957
80965 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.findMaxCompoundId(java.util.List)::CD,80973
80973 :: CALL :: call :: Ljava/lang/Object :: v6 = max(p1 $compounds , v3)::
80986 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolId(int)::JM,80991
80991 :: EXPR :: modify :: I :: p0 $this .molId = p1 $molId ::
80997 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::CE,80998:CD,81003:CD,81010
80998 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::
81003 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = p0 $this .findGroup(p1 $chainName , p2 $pdbResnum , #(0))::JM,81010:CL,92236
81010 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,80998
81015 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getGroups()::CE,81016:CD,81022
81016 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Site.getGroups()::JM,122592:JM,122507
81019 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,81022
81022 :: NORM :: compound :: Ljava/util/List :: return v3::CF,81016
81024 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSites(java.util.List)::JM,81029
81029 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = p1 $sites ::
81051 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::JM,66891
81050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::CE,81051:CD,81054:CD,81058:CD,81062:CD,81066
81054 :: CALL :: call :: Ljava/util/TreeMap :: v4 = p0 $this .findCompoundsFromAlignment()::CL,92383
81058 :: CALL :: call :: Ljava/util/List :: v6 = findUniqueCompounds(v4)::JM,81066:CL,93430
81062 :: CALL :: call :: V :: p0 $this .createPurelyNonPolyCompounds(v6)::CL,93507
81066 :: NORM :: compound :: Ljava/util/List :: return v6::DD,81051
81075 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Compound.getChains()::JM,66929
81074 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getChains()::CE,81075:CD,81081
81078 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .chains::DD,81081
81081 :: NORM :: compound :: Ljava/util/List :: return v3::CF,81075
81083 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::CE,81084:CD,81090
81084 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::JM,66998
81087 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc1::DD,81090
81090 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,81084
81093 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::JM,67008
81092 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::CE,81093:CD,81099
81096 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc2::DD,81099
81099 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,81093
81147 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::JM,132905:JM,132939
81146 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::CE,81147:CD,81156:CD,81165:CD,81171:CD,81175:CD,81179:CD,81184:JM,60337:JM,60331:JM,60334:CD,81194:CD,81199:CD,81203:CD,81220:CD,81225:CD,81230:CD,81235:CD,81240:CD,81245:CD,81250:CD,81255:CD,81264:CD,81269:CD,81270:JM,81157:JM,81161
81157 :: CALL :: call :: Z :: v11 = p6 $iCode .isEmpty()::JM,81157:JM,81156:JM,81270:JM,81161
81156 :: PRED :: IF :: Z :: if (p6 $iCode  == #(null)) goto 19::CD,81157:CD,81161:CD,81270:JM,81156
81161 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 19::CF,81270
81165 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v17 = v15.getChainByPDB(p4 $chainID )::CL,80930
81171 :: CALL :: call :: I :: v20 = parseInt(p5 $resSeq )::JM,81157:JM,81156:JM,81270:JM,81161
81175 :: CALL :: call :: Ljava/lang/Integer :: v22 = valueOf(v20)::JM,81161
81179 :: CALL :: call :: C :: v24 = v14.charAt(#(0))::
81184 :: CALL :: call :: Ljava/lang/Character :: v26 = valueOf(v24)::
81194 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = v17.getGroupByPDB(v18)::CL,93683
81199 :: CALL :: call :: Z :: v31 = p2 $altLoc .isEmpty()::JM,81203:JM,81199
81203 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 158::CD,81204:CD,81213:JM,81203:JM,81199
81204 :: CALL :: call :: C :: v33 = p2 $altLoc .charAt(#(0))::JM,81203:JM,81199
81213 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v37 = v29.getAltLocGroup(v35)::CL,93767
81220 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
81225 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p2 $altLoc )::JM,81203:JM,81199
81230 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in group ))::
81235 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v49.append(p5 $resSeq )::JM,81157:JM,81156:JM,81270:JM,81161
81240 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(v14)::JM,81161
81245 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v53.append(#( of chain ))::
81250 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p4 $chainID )::JM,81157:JM,81156:JM,81270:JM,81161
81255 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::JM,81161
81264 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v38.getAtom(p1 $name )::JM,81269:CL,70198
81269 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v40::DD,81147
81270 :: EXPR :: assign :: null :: PHI v14 = p6 $iCode , #( )::
81365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.toString()::CD,81369:CD,81370:CD,81378:CD,81383:CD,81387:CD,81388:CD,81396:CD,81404:CD,81409:CD,81414:CD,81418:CD,81419:CD,81427:CD,81435:CD,81440:CD,81445:CD,81449:CD,81450:CD,81458:CD,81466:CD,81471:CD,81476:CD,81480:CD,81481:CD,81489:CD,81497:CD,81502:CD,81507:CD,81511:CD,81512:CD,81520:CD,81528:CD,81533:CD,81538:CD,81542:CD,81543:CD,81551:CD,81559:CD,81564:CD,81569:CD,81573:CD,81574:CD,81582:CD,81587:CD,81591:CD,81592:CD,81600:CD,81608:CD,81613:CD,81618:CD,81622:CD,81623:CD,81631:CD,81639:CD,81644:CD,81649:CD,81653:CD,81654:CD,81662:CD,81670:CD,81675:CD,81680:CD,81684:CD,81685:CD,81693:CD,81701:CD,81706:CD,81711:CD,81715:CD,81716:CD,81724:CD,81732:CD,81737:CD,81742:CD,81746:CD,81747:CD,81755:CD,81763:CD,81768:CD,81773:CD,81777:CD,81778:CD,81786:CD,81791
81369 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
81370 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([LINK Record:))::
81378 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
81383 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
81387 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
81388 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
81396 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Name: ))::
81401 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .name1::
81404 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
81409 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
81414 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
81419 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
81418 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
81427 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Alt Loc: ))::
81432 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .altLoc1::
81435 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
81440 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
81445 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
81449 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
81450 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
81458 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Res name: ))::
81463 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .resName1::
81466 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
81471 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
81476 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
81481 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
81480 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
81489 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(	Chain ID: ))::
81494 :: EXPR :: reference :: Ljava/lang/String :: v63 = p0 $this .chainID1::
81497 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(v63)::
81502 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(#())::
81507 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toString()::
81511 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
81512 :: CALL :: call :: Ljava/lang/String :: v72 = valueOf(v69)::
81520 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v70.append(#(	Res Seq: ))::
81525 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .resSeq1::
81528 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(v77)::
81533 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#())::
81538 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
81543 :: CALL :: call :: Ljava/lang/String :: v86 = valueOf(v83)::
81542 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
81551 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v84.append(#(	Ins Code: ))::
81556 :: EXPR :: reference :: Ljava/lang/String :: v91 = p0 $this .iCode1::
81559 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(v91)::
81564 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(#())::
81569 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
81573 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
81574 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v97)::
81582 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(#(Atom 2:))::
81587 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
81591 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v107 = new java.lang.StringBuilder::
81592 :: CALL :: call :: Ljava/lang/String :: v109 = valueOf(v106)::
81600 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v107.append(#(	Name: ))::
81605 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .name2::
81608 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v112.append(v113)::
81613 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#())::
81618 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
81623 :: CALL :: call :: Ljava/lang/String :: v122 = valueOf(v119)::
81622 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
81631 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v120.append(#(	Alt Loc: ))::
81636 :: EXPR :: reference :: Ljava/lang/String :: v126 = p0 $this .altLoc2::
81639 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v125.append(v126)::
81644 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v128.append(#())::
81649 :: CALL :: call :: Ljava/lang/String :: v132 = v130.toString()::
81653 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
81654 :: CALL :: call :: Ljava/lang/String :: v135 = valueOf(v132)::
81662 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(#(	Res name: ))::
81667 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .resName2::
81670 :: CALL :: call :: Ljava/lang/StringBuilder :: v141 = v138.append(v139)::
81675 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v141.append(#())::
81680 :: CALL :: call :: Ljava/lang/String :: v145 = v143.toString()::
81685 :: CALL :: call :: Ljava/lang/String :: v148 = valueOf(v145)::
81684 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v146 = new java.lang.StringBuilder::
81693 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v146.append(#(	Chain ID: ))::
81698 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .chainID2::
81701 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(v152)::
81706 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(#())::
81711 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
81715 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
81716 :: CALL :: call :: Ljava/lang/String :: v161 = valueOf(v158)::
81724 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(#(	Res Seq: ))::
81729 :: EXPR :: reference :: Ljava/lang/String :: v165 = p0 $this .resSeq2::
81732 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v164.append(v165)::
81737 :: CALL :: call :: Ljava/lang/StringBuilder :: v169 = v167.append(#())::
81742 :: CALL :: call :: Ljava/lang/String :: v171 = v169.toString()::
81747 :: CALL :: call :: Ljava/lang/String :: v174 = valueOf(v171)::
81746 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v172 = new java.lang.StringBuilder::
81755 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v172.append(#(	Ins Code: ))::
81760 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .iCode2::
81763 :: CALL :: call :: Ljava/lang/StringBuilder :: v180 = v177.append(v178)::
81768 :: CALL :: call :: Ljava/lang/StringBuilder :: v182 = v180.append(#())::
81773 :: CALL :: call :: Ljava/lang/String :: v184 = v182.toString()::
81777 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::
81778 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v184)::
81786 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v185.append(#(]))::
81791 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
81883 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::CE,81884:CD,81900:CD,81922:CD,81932:JM,93894:JM,93897:JM,93900:JM,93903:CD,81942:CD,81946:CD,81957:CD,81973
81884 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Bond :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::JM,67164
81900 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v14 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v8, v10, v12)::CL,81146
81922 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v22 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v16, v18, v20)::CL,81146
81932 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v37 = new org.biojava.nbio.structure.BondImpl::DD,81946
81942 :: CALL :: call :: V :: v40.addSSBond(v37)::CL,93972
81946 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return v37::DD,81884
81957 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $disulfideBond .toString()::CL,93989
81973 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return #(null)::DD,81884
82000 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSSBonds(java.util.List)::JM,82005
82005 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = p1 $ssbonds ::
82011 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formPeptideBonds()::CD,82018:CD,82022:CD,82109:CD,82113
82018 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,82113:CL,55331
82022 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,82113
82027 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,82113
82032 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,82050:JM,82107:JM,82042:CL,86689
82037 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,82050:JM,82107:JM,82042
82043 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,82044:CD,82045:CD,82050:CD,82051:CF,82102
82042 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,82043
82045 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,82050:JM,82107:JM,82042
82044 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,82050:JM,82107:JM,82042
82051 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,82053:CD,82059:CD,82060:CD,82066:CD,82070:JM,82050:JM,82107:JM,82042
82050 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,82051
82053 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,82050:JM,82107:JM,82042
82059 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,82050:JM,82107:JM,82042
82060 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,82050:JM,82107:JM,82042
82066 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,82070:CL,55702
82071 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,82075:CL,55702
82070 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,82071:CD,82075:CF,82102
82075 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,82077:CD,82081:CD,82085
82077 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v29.getC()::JM,82085:CL,94285
82081 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v33.getN()::JM,82086:CL,94297
82085 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,82086:CF,82102
82086 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,82088:CD,82093:CD,82094
82088 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,82093:CL,88439
82093 :: EXPR :: assign :: Z :: v46 = v44 > #(1.8 d)::DD,82094
82094 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,93894:JM,93897:JM,93900:JM,93903:CF,82102
82103 :: CALL :: call :: I :: v17 = v15.size()::JM,82050:JM,82107:JM,82042
82102 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,82115
82107 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,82108
82109 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,82113
82108 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,82037:CD,82042:CD,82043:CD,82102:CD,82103:CD,82107:CD,82115:JM,82050:JM,82113
82113 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,82027:CD,82032:CD,82103:CD,82107:CD,82108:CD,82109:CD,82115:JM,82113
82115 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,82050:JM,82107:JM,82042:DD,82044:DD,82059:DD,82102:DD,82108
82164 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formNucleotideBonds()::CD,82171:CD,82175:CD,82262:CD,82266
82171 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,82266:CL,55331
82175 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,82266
82180 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,82266
82185 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,82195:JM,82260:JM,82203:CL,86689
82190 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,82195:JM,82260:JM,82203
82195 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,82196
82197 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,82195:JM,82260:JM,82203
82196 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,82197:CD,82198:CD,82203:CD,82204:CF,82255
82198 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,82195:JM,82260:JM,82203
82203 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,82204
82204 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,82206:CD,82212:CD,82213:CD,82219:CD,82223:JM,82195:JM,82260:JM,82203
82206 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,82195:JM,82260:JM,82203
82213 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,82195:JM,82260:JM,82203
82212 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,82195:JM,82260:JM,82203
82219 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,82223:CL,55702
82223 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,82224:CD,82228:CF,82255
82224 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,82228:CL,55702
82228 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,82230:CD,82234:CD,82238
82230 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v33.getP()::JM,82238:CL,94309
82234 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v29.getO3Prime()::JM,82239:CL,94321
82239 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,82241:CD,82246:CD,82247
82238 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,82239:CF,82255
82241 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,82246:CL,88439
82247 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,93894:JM,93897:JM,93900:JM,93903:CF,82255
82246 :: EXPR :: assign :: Z :: v46 = v44 > #(2.1 d)::DD,82247
82255 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,82268
82256 :: CALL :: call :: I :: v17 = v15.size()::JM,82195:JM,82260:JM,82203
82261 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,82190:CD,82195:CD,82196:CD,82255:CD,82256:CD,82260:CD,82268:JM,82203:JM,82266
82260 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,82261
82262 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,82266
82266 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,82180:CD,82185:CD,82256:CD,82260:CD,82261:CD,82262:CD,82268:JM,82266
82268 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,82195:JM,82260:JM,82203:DD,82197:DD,82212:DD,82255:DD,82261
82317 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formIntraResidueBonds()::CD,82324:CD,82328:CD,82469:CD,82473
82324 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,82473:CL,55331
82328 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,82473
82333 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,82473
82338 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,82468:JM,82351:CL,70097
82342 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,82468:JM,82351
82347 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,82468:JM,82351
82351 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::
82352 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v24 = v22.getResidueNumber()::JM,82356:CL,55702
82356 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 71::CF,82358:CD,82362:CD,82367:CD,82371:CD,82386:CD,82390:CD,82391:CD,82459:CD,82463
82358 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::JM,82463
82362 :: CALL :: call :: Z :: v29 = v26.add(v22)::
82367 :: CALL :: call :: Ljava/util/List :: v31 = v22.getAltLocs()::JM,82390:JM,82380:CL,75032
82371 :: CALL :: call :: Ljava/util/Iterator :: v33 = v31.iterator()::JM,82390:JM,82380
82376 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,82390:JM,82380
82381 :: CALL :: call :: Z :: v40 = v26.add(v38)::
82380 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::
82386 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,82390:JM,82380
82391 :: CALL :: call :: Ljava/util/Iterator :: v42 = v26.iterator()::JM,82463
82390 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 109::CD,82376:CD,82380:CD,82381:CD,82386:JM,82390:JM,82463
82396 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,82463
82405 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = getChemComp(v49)::CL,82644
82409 :: CALL :: call :: Ljava/util/List :: v53 = v51.getBonds()::JM,82458:CL,94333
82413 :: CALL :: call :: Ljava/util/Iterator :: v55 = v53.iterator()::JM,82458
82418 :: CALL :: call :: Ljava/lang/Object :: v59 = v55.next()::JM,82458
82427 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v64 = v47.getAtom(v62)::JM,82441:CL,70198
82436 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v68 = v47.getAtom(v66)::JM,82442:CL,70198
82441 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 261::CD,82442:JM,82458
82442 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 261::JM,93894:JM,93897:JM,93900:JM,93903:JM,82458
82454 :: CALL :: call :: Z :: v57 = v55.hasNext()::JM,82458
82459 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,82463
82458 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 192::CD,82418:CD,82427:CD,82436:CD,82441:CD,82454:JM,82458:JM,82463
82463 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 153::CD,82396:CD,82405:CD,82409:CD,82413:CD,82454:CD,82458:CD,82459:JM,82463:JM,82468:JM,82351
82464 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,82468:JM,82351
82469 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,82473
82468 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 48::CD,82347:CD,82351:CD,82352:CD,82356:CD,82464:JM,82468:JM,82473
82473 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,82333:CD,82338:CD,82342:CD,82464:CD,82468:CD,82469:JM,82473
82534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.trimBondLists()::CD,82541:CD,82545:CD,82615:CD,82619
82541 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,82619:CL,55331
82545 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,82619
82550 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,82619
82555 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,82614:CL,70097
82559 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,82614
82564 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,82614
82569 :: CALL :: call :: Ljava/util/List :: v24 = v22.getAtoms()::JM,82609:CL,75639
82573 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,82609
82578 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.next()::JM,82609
82583 :: CALL :: call :: Ljava/util/List :: v33 = v31.getBonds()::JM,82587:CL,94342
82587 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 123::CD,82588:CD,82592:CD,82596:JM,82609
82588 :: CALL :: call :: Ljava/util/List :: v36 = v31.getBonds()::JM,82596:CL,94342
82592 :: CALL :: call :: I :: v38 = v36.size()::JM,82596
82597 :: CALL :: call :: Ljava/util/List :: v40 = v31.getBonds()::JM,82601:CL,94342
82596 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 123::CD,82597:CD,82601:CD,82602:JM,82609
82601 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
82602 :: CALL :: call :: V :: v41.trimToSize()::
82605 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,82609
82609 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 73::CD,82578:CD,82583:CD,82587:CD,82605:JM,82609:JM,82614
82610 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,82614
82615 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,82619
82614 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 46::CD,82564:CD,82569:CD,82573:CD,82605:CD,82609:CD,82610:JM,82614:JM,82619
82619 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,82550:CD,82555:CD,82559:CD,82610:CD,82614:CD,82615:JM,82619
82645 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::JM,75129:JM,75361
82644 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::CE,82645:CD,82648:CD,82652:CD,82656:CD,82658:CD,82663:CD,82664
82648 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::JM,82658:JM,82663
82652 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::JM,82658:JM,82663
82656 :: EXPR :: reference :: Lorg/biojava/nbio/core/util/SoftHashMap :: v7 = org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.cache::JM,82658:JM,82663
82658 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,82658:JM,82663
82663 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,82664:JM,82672:DD,82694
82664 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 57::CD,82667:CD,82672:CD,82676:CD,82681:CD,82686:CD,82694:CD,82697:CD,82702:CD,82707:CD,82718:CD,82722:CD,82727:CD,82737:CD,82750
82667 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
82672 :: CALL :: call :: Ljava/lang/String :: v41 = v10.getThree_letter_code()::JM,82672
82676 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v38.append(v41)::
82681 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#( read from cache))::
82686 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
82694 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v10::DD,82645
82697 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
82702 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(v6)::JM,82658:JM,82663
82707 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( read from provider ))::
82718 :: CALL :: call :: Ljava/lang/String :: v25 = v23.getCanonicalName()::
82722 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::
82727 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
82737 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v33 = v31.getChemComp(v6)::JM,82750:CL,94466
82750 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v33::DD,82645
82775 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::CE,82776:CD,82782
82776 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::JM,67448:JM,67277
82779 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,82782
82782 :: NORM :: compound :: Ljava/util/List :: return v3::CF,82776
82785 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::JM,144154:JM,144180
82784 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::CE,82785:CD,82791
82788 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,82791
82791 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,82785
82793 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCharge(short)::JM,82798
82798 :: EXPR :: modify :: S :: p0 $this .charge = p1 $inputCharge ::
82804 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.getNextGroup(int,int,int)::CD,82819:CD,82828:CD,82833:CD,82837:JM,82857
82819 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v30 = new java.util.NoSuchElementException::
82828 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,82837:CL,70080
82833 :: CALL :: call :: I :: v13 = v11.size()::JM,82837
82837 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 59::CD,82839:CD,82847:CD,82853:CD,82857:JM,82837
82839 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = p0 $this .getNextGroup(v27, #(0), #(0))::CL,82804
82847 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,82837:JM,82857
82853 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,82857:CL,94684
82857 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 92::CD,82859:CD,82879
82859 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v26 = p0 $this .getNextGroup(p1 $tmp_model , v23, #(0))::CL,82804
82879 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v21 = v16.getAtomGroup(v19)::CL,94697
82915 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::CE,82916:CD,82925:CD,82929:JM,82963:JM,82943
82916 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::JM,68002:JM,82952:JM,82972
82925 :: CALL :: call :: I :: v8 = v6.nrModels()::JM,82929:CL,76385
82929 :: PRED :: IF :: Z :: if (p1 $tmp_model  < v8) goto 16::CD,82930:CD,82934:CD,82939:CD,82943
82930 :: NORM :: compound :: Z :: return #(0)::DD,82916
82934 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,82943:CL,70080
82939 :: CALL :: call :: I :: v13 = v11.size()::JM,82943
82943 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 51::CD,82945:CD,82952:CD,82953:CD,82959:CD,82963:JM,82943
82945 :: CALL :: call :: Z :: v26 = p0 $this .hasSubGroup(v24, #(0), #(0))::JM,82952:CL,82915
82953 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,82943:JM,82963
82952 :: NORM :: compound :: Z :: return v26::DD,82916
82959 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,82963:CL,94684
82963 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 87::CD,82965:CD,82972:CD,82974
82965 :: CALL :: call :: Z :: v23 = p0 $this .hasSubGroup(p1 $tmp_model , v20, #(0))::JM,82972:CL,82915
82973 :: NORM :: compound :: Z :: return #(0)::DD,82916
82972 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 87::CD,82973:CD,82974
82974 :: NORM :: compound :: Z :: return #(1)::DD,82916
83071 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::JM,68079
83070 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::CF,83071:CD,83073:CD,83075:CD,83076:CD,83084
83073 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = org.biojava.nbio.structure.align.client.StructureName$Source.ENUM$VALUES::DD,83075
83075 :: EXPR :: assign :: I :: v4 = v2.length::DD,83076
83076 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::DD,83084
83084 :: NORM :: compound :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v5::CF,83071
83105 :: CALL :: call :: [Ljava/lang/String :: v7 = p1 $id .split(#(\.))::JM,83189
83114 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v36 = new java.lang.IllegalArgumentException::
83120 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getSimpleName()::
83132 :: CALL :: call :: Ljava/lang/String :: v44 = format(#(Malformed %s: %s), v38)::
83142 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v7[#(0)]::JM,83150
83146 :: CALL :: call :: I :: v15 = v13.length()::JM,83150
83151 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v7[#(0)]::DD,83155
83150 :: PRED :: IF :: Z :: if (v15 == #(4)) goto 101::CD,83168:CD,83182
83155 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v20::
83168 :: CALL :: call :: Ljava/lang/String :: v26 = format(#(Unrecognized PDB code %s), v23)::
83182 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toUpperCase()::JM,83186
83186 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v19::
83189 :: EXPR :: assign :: I :: v28 = v7.length::DD,83190
83191 :: EXPR :: reference :: Ljava/lang/Object :: v31 = v7[#(1)]::
83190 :: PRED :: IF :: Z :: if (v28 != #(2)) goto 133::CD,83195:CD,83199:CD,83207
83195 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::
83199 :: CALL :: call :: Ljava/util/List :: v35 = parseMultiple(v33)::JM,83203:CL,83971
83203 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v35::
83207 :: NORM :: declaration :: Ljava/util/LinkedList :: v29 = new java.util.LinkedList::DD,83211
83211 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v29::
83247 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getPdbId()::CE,83248:CD,83254
83248 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.SubstructureIdentifier.getPdbId()::JM,68498:JM,69405
83251 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,83254
83254 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,83248
83257 :: EXIT :: exit :: Ljava/util/Set :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::JM,68518:JM,68509:JM,68527
83256 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::CE,83257:CD,83260:CD,83264:CD,83268:CD,83288:CD,83292:CD,83293
83260 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::DD,83293
83264 :: CALL :: call :: Ljava/util/List :: v6 = p1 $si .getResidueRanges()::JM,83292:CL,86206
83268 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,83292
83273 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,83292
83278 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainId()::JM,83282:CL,86215
83283 :: CALL :: call :: Z :: v19 = v3.add(v16)::
83282 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 57::CD,83283:JM,83292
83288 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,83292
83293 :: NORM :: compound :: Ljava/util/Set :: return v3::DD,83257
83292 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 26::CD,83273:CD,83278:CD,83282:CD,83288:JM,83292:CF,83293
83313 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.URLIdentifier.guessPDBID(java.lang.String)::JM,68615
83312 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.guessPDBID(java.lang.String)::CE,83313:CD,83318:CD,83323:CD,83327
83318 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $name )::JM,83327
83323 :: CALL :: call :: Z :: v7 = v5.matches()::JM,83327
83327 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 25::CD,83328:CD,83333:CD,83337:CD,83338:JM,83327
83328 :: CALL :: call :: Ljava/lang/String :: v12 = v5.group(#(1))::JM,83327
83333 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::JM,83337
83337 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,83313
83338 :: NORM :: compound :: Ljava/lang/String :: return #(null)::DD,83313
83347 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.getCathDatabase()::CD,83350:CD,83352
83350 :: EXPR :: reference :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v2 = org.biojava.nbio.structure.cath.CathFactory.cath::DD,83352
83352 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 16::JM,117184:JM,117222:JM,117192:JM,117229:JM,117200:JM,40533:JM,117236:JM,117174:JM,117208:JM,117178:JM,40540:JM,117181:JM,117246
83375 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDescriptionByCathId(java.lang.String)::CE,83376:CD,83383:CD,83394:CD,83399:CD,83400
83376 :: EXIT :: exit :: Lorg/biojava/nbio/structure/cath/CathDomain :: org.biojava.nbio.structure.cath.CathInstallation.getDescriptionByCathId(java.lang.String)::JM,68711
83380 :: EXPR :: reference :: Z :: v4 = p0 $this .useCathDomainDescriptionFile::DD,83383
83383 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 15::CD,83384:CD,83388
83384 :: CALL :: call :: V :: p0 $this .ensureDomainDescriptionInstalled()::CL,94990
83388 :: CALL :: call :: V :: p0 $this .ensureDomallInstalled()::CL,95073
83394 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $cathId )::JM,83399
83399 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,83400
83400 :: NORM :: compound :: Lorg/biojava/nbio/structure/cath/CathDomain :: return v11::DD,83376
83407 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase()::CD,83412
83412 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v4 = getEcodDatabase(v2)::CL,95180
83419 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsById(java.lang.String)::JM,68726
83418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsById(java.lang.String)::CE,83419:CD,83423:JM,83424:JM,83428:JM,83497
83423 :: PRED :: IF :: Z :: if (p1 $ecodId  == #(null)) goto 12::CD,83424:CD,83428:CD,83429:JM,83497
83424 :: CALL :: call :: Z :: v6 = p1 $ecodId .isEmpty()::JM,83424:JM,83428:JM,83497
83429 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return #(null)::DD,83419
83428 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 13::CD,83429:CD,83432:CD,83437:CD,83441:CD,83447:CD,83452
83432 :: CALL :: call :: Ljava/util/regex/Matcher :: v10 = v8.matcher(p1 $ecodId )::JM,83441
83437 :: CALL :: call :: Z :: v12 = v10.matches()::JM,83441
83441 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 38::CD,83442:JM,83441
83442 :: CALL :: call :: Ljava/lang/String :: v15 = v10.group(#(1))::JM,83441
83447 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getDomainsForPdb(v16)::JM,83452:JM,83487:JM,83503:CL,95408
83452 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 62::CD,83461:CD,83464:CD,83468:CD,83478:CD,83499:CD,83503
83461 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return #(null)::DD,83419
83464 :: CALL :: call :: I :: v22 = v18.size()::JM,83487:JM,83503
83468 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,83487:JM,83503
83478 :: CALL :: call :: Ljava/util/Iterator :: v27 = v18.iterator()::JM,83487:JM,83503
83483 :: CALL :: call :: Ljava/lang/Object :: v31 = v27.next()::JM,83487:JM,83503
83487 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::DD,83498
83488 :: CALL :: call :: Ljava/lang/String :: v34 = v32.getDomainId()::JM,83497:CL,95610
83492 :: CALL :: call :: Z :: v36 = p1 $ecodId .equals(v34)::JM,83424:JM,83428:JM,83497
83497 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 125::CD,83498:CD,83499:CD,83503:JM,83487
83499 :: CALL :: call :: Z :: v29 = v27.hasNext()::JM,83487:JM,83503
83498 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return v32::DD,83419
83503 :: PRED :: IF :: Z :: if (v29 != #(0)) goto 98::CD,83483:CD,83487:CD,83488:CD,83492:CD,83497:CD,83504:JM,83503
83504 :: NORM :: compound :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: return #(null)::DD,83419
83559 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP()::CD,83564
83564 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v4 = getSCOP(v2)::CL,95619
83571 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::JM,68766
83570 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::CE,83571:CD,83575:CD,83579:CD,83584
83575 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,83760:JM,83847:JM,83755:JM,83804
83579 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v7 = p2 $scopDB .getDomainByScopID(p1 $name )::JM,83585:JM,83584:CL,95693:CL,95631
83585 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v7::DD,83571
83584 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 22::CD,83585:CD,83588:CD,83593:CD,83598:CD,83608:CD,83613:CD,83617:CD,83747:CD,83751:CD,83755
83588 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
83593 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v10.append(p1 $name )::
83598 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
83608 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v18.matcher(p1 $name )::JM,83617:JM,83680:JM,83719:JM,83686:JM,83674:JM,83725
83613 :: CALL :: call :: Z :: v22 = v20.matches()::JM,83617:JM,83680:JM,83719:JM,83686:JM,83674:JM,83725
83617 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 265::CD,83618:CD,83623:CD,83628:CD,83633:CD,83638:CD,83742:CD,83746:JM,83617:JM,83680:JM,83719:JM,83686:JM,83674:JM,83725:JM,83760:JM,83847:JM,83755:JM,83804
83618 :: CALL :: call :: Ljava/lang/String :: v26 = v20.group(#(1))::JM,83617:JM,83680:JM,83719:JM,83686:JM,83674:JM,83725
83623 :: CALL :: call :: Ljava/lang/String :: v29 = v20.group(#(2))::JM,83617:JM,83680:JM,83719:JM,83686:JM,83674:JM,83725
83628 :: CALL :: call :: Ljava/lang/String :: v32 = v20.group(#(3))::JM,83617:JM,83680:JM,83719:JM,83686:JM,83674:JM,83725
83633 :: CALL :: call :: Ljava/util/List :: v34 = p2 $scopDB .getDomainsForPDB(v26)::JM,83746:JM,83647:CL,95798:CL,95908
83638 :: CALL :: call :: Ljava/util/Iterator :: v36 = v34.iterator()::JM,83746:JM,83647
83643 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,83746:JM,83647
83647 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
83654 :: CALL :: call :: Ljava/util/regex/Matcher :: v46 = v42.matcher(v44)::JM,83697:JM,83719:JM,83736:JM,83674:JM,83708:JM,83663
83659 :: CALL :: call :: Z :: v48 = v46.matches()::JM,83697:JM,83719:JM,83736:JM,83674:JM,83708:JM,83663
83663 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 256::CD,83664:CD,83669:CD,83674:JM,83697:JM,83719:JM,83736:JM,83708:JM,83663:JM,83746:JM,83647
83664 :: CALL :: call :: Ljava/lang/String :: v50 = v46.group(#(2))::JM,83697:JM,83719:JM,83736:JM,83674:JM,83708:JM,83663
83669 :: CALL :: call :: Z :: v52 = v29.equals(v50)::JM,83680:JM,83719:JM,83686:JM,83674:JM,83725:JM,83697:JM,83736:JM,83708
83675 :: CALL :: call :: Z :: v55 = v29.equals(#(_))::JM,83680:JM,83719:JM,83686:JM,83674:JM,83725
83674 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 210::CD,83675:CD,83680:CD,83709:CD,83714:CD,83719:JM,83686:JM,83674:JM,83725:JM,83697:JM,83736:JM,83708:JM,83663
83681 :: CALL :: call :: Z :: v58 = v29.equals(#(.))::JM,83680:JM,83719:JM,83686:JM,83674:JM,83725
83680 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 210::CD,83681:CD,83686:CD,83709:CD,83714:CD,83719:JM,83680:JM,83674:JM,83725:JM,83697:JM,83736:JM,83708:JM,83663
83687 :: CALL :: call :: Ljava/lang/String :: v60 = v46.group(#(2))::JM,83697:JM,83719:JM,83736:JM,83674:JM,83708:JM,83663
83686 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 210::CD,83687:CD,83692:CD,83697:CD,83709:CD,83714:CD,83719:JM,83736:JM,83674:JM,83708:JM,83663
83692 :: CALL :: call :: Z :: v62 = v60.equals(#(_))::JM,83697:JM,83719:JM,83736:JM,83674:JM,83708
83697 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 210::CD,83698:CD,83703:CD,83708:CD,83709:CD,83714:CD,83719:JM,83697:JM,83736:JM,83674:JM,83663
83698 :: CALL :: call :: Ljava/lang/String :: v64 = v46.group(#(2))::JM,83697:JM,83719:JM,83736:JM,83674:JM,83708:JM,83663
83703 :: CALL :: call :: Z :: v66 = v64.equals(#(.))::JM,83697:JM,83719:JM,83736:JM,83674:JM,83708
83709 :: CALL :: call :: Ljava/lang/String :: v68 = v46.group(#(3))::JM,83697:JM,83719:JM,83736:JM,83674:JM,83708:JM,83663
83708 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 256::CD,83709:CD,83714:CD,83719:JM,83697:JM,83736:JM,83674:JM,83708:JM,83663:JM,83746:JM,83647
83714 :: CALL :: call :: Z :: v70 = v32.equals(v68)::JM,83680:JM,83719:JM,83686:JM,83674:JM,83725:JM,83697:JM,83736:JM,83708
83719 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 248::CD,83720:CD,83725:CD,83737:JM,83680:JM,83719:JM,83686:JM,83674
83720 :: CALL :: call :: Z :: v72 = v32.equals(#(_))::JM,83680:JM,83719:JM,83686:JM,83674:JM,83725
83725 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 248::CD,83726:CD,83731:CD,83736:CD,83737:JM,83697:JM,83719:JM,83674:JM,83708:JM,83663
83726 :: CALL :: call :: Ljava/lang/String :: v74 = v46.group(#(3))::JM,83697:JM,83719:JM,83736:JM,83674:JM,83708:JM,83663
83731 :: CALL :: call :: Z :: v76 = v74.equals(#(_))::JM,83697:JM,83719:JM,83736:JM,83674:JM,83708
83737 :: CALL :: call :: Z :: v78 = v4.add(v41)::
83736 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 256::CD,83737:JM,83746:JM,83647
83742 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,83746:JM,83647
83747 :: CALL :: call :: Ljava/util/Iterator :: v80 = v4.iterator()::JM,83760:JM,83847:JM,83755:JM,83804
83746 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 108::CD,83643:CD,83647:CD,83654:CD,83659:CD,83663:CD,83742:JM,83746:JM,83760:JM,83847:JM,83755:JM,83804
83751 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,83760:JM,83847:JM,83755:JM,83804
83755 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 446::CD,83756:CD,83760:CD,83761:CD,83763:CD,83767:CD,83867:CD,83868:JM,83847:JM,83755:JM,83804
83756 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,83760:JM,83847:JM,83755:JM,83804
83761 :: EXPR :: reference :: Lorg/slf4j/Logger :: v86 = org.biojava.nbio.structure.align.client.StructureName.logger::JM,83763:JM,83767
83760 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,83867
83763 :: CALL :: call :: Z :: v88 = v86.isWarnEnabled()::JM,83763:JM,83767
83767 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 444::CF,83768:CD,83772:CD,83777:CD,83781:CD,83786:CD,83791:CD,83795:CD,83800:CD,83804:CD,83848:CD,83852:CD,83859:CF,83867
83768 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v89 = new java.lang.StringBuilder::
83772 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
83777 :: CALL :: call :: Ljava/lang/String :: v95 = v85.getScopId()::CL,96055
83781 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v91.append(v95)::
83786 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v97.append(#(.))::
83791 :: CALL :: call :: Ljava/lang/String :: v101 = v99.toString()::
83795 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v89.append(v101)::
83800 :: CALL :: call :: Z :: v105 = v80.hasNext()::JM,83760:JM,83847:JM,83755:JM,83804
83805 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v89.append(#( Other possibilities: ))::
83804 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 422::CD,83805:CD,83843:CD,83847:JM,83848
83811 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::JM,83760:JM,83847:JM,83755:JM,83804
83812 :: CALL :: call :: Ljava/lang/Object :: v113 = v80.next()::JM,83760:JM,83847:JM,83755:JM,83804
83821 :: CALL :: call :: Ljava/lang/String :: v118 = valueOf(v116)::
83829 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v111.append(#( ))::
83834 :: CALL :: call :: Ljava/lang/String :: v124 = v122.toString()::
83838 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v89.append(v124)::
83843 :: CALL :: call :: Z :: v110 = v80.hasNext()::JM,83760:JM,83847:JM,83755:JM,83804
83847 :: PRED :: IF :: Z :: if (v110 != #(0)) goto 371::CD,83811:CD,83812:CD,83821:CD,83829:CD,83834:CD,83838:CD,83843:JM,83848
83848 :: CALL :: call :: Ljava/lang/String :: v129 = getProperty(#(line.separator))::JM,83848
83852 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v89.append(v129)::
83859 :: CALL :: call :: Ljava/lang/String :: v134 = v89.toString()::
83867 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v85::DD,83571
83868 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,83571
83971 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::CE,83972:CD,83975:CD,83979:CD,83984:CD,83990:CD,83995:CD,84007:CD,84012:CD,84013:CD,84018:CD,84034:CD,84035:CD,84036:CD,84038
83972 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::JM,83203
83975 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $s .trim()::JM,83984:JM,84036
83979 :: CALL :: call :: Z :: v7 = v4.startsWith(#(())::JM,83984:JM,84036
83985 :: CALL :: call :: Ljava/lang/String :: v11 = v4.substring(#(1))::JM,83984:JM,84036
83984 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 23::CF,84036:CD,83985:JM,83984
83990 :: CALL :: call :: Z :: v15 = v12.endsWith(#()))::JM,83995
83995 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 44::CD,83996:CD,84000:CD,84001
83996 :: CALL :: call :: I :: v17 = v12.length()::JM,84000
84001 :: CALL :: call :: Ljava/lang/String :: v20 = v12.substring(#(0), v18)::
84000 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v17 - #(1)::
84007 :: CALL :: call :: [Ljava/lang/String :: v24 = v21.split(#(,))::JM,84018:JM,84013
84013 :: EXPR :: assign :: I :: v26 = v24.length::
84012 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,84035:CF,84013
84018 :: EXPR :: assign :: I :: v28 = v24.length::DD,84034
84024 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v31 = parse(v29)::CL,96064
84028 :: CALL :: call :: Z :: v33 = v25.add(v31)::
84033 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v35 + #(1)::DD,84038
84035 :: NORM :: compound :: Ljava/util/List :: return v25::DD,83972
84034 :: PRED :: IF :: Z :: if (v35 < v28) goto 75::CD,84024:CD,84028:CD,84033:CD,84038:CF,84035
84036 :: EXPR :: assign :: null :: PHI v12 = v4, v11::JM,83995:JM,84000
84038 :: EXPR :: assign :: null :: PHI v35 = #(0), v34::DD,84033:DD,84034
84092 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
84095 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p2 $ranges ::
84197 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .toString()::
84218 :: EXPR :: modify :: Ljava/net/URL :: p0 $this .url = p1 $url ::
84257 :: PRED :: IF :: Z :: if (p1 $useCache  != #(0)) goto 25::CD,84262
84262 :: CALL :: call :: V :: p0 $this .loadRepresentativeDomains()::CL,96364
84275 :: EXIT :: exit :: Lorg/biojava/nbio/structure/domain/PDPDomain :: org.biojava.nbio.structure.domain.RemotePDPProvider.getPDPDomain(java.lang.String)::JM,68946
84274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.getPDPDomain(java.lang.String)::CE,84275:CD,84282:CD,84301:CD,84306:CD,84366:CD,84371:CD,84376:CD,84386:CD,84391:CD,84396:CD,84406:CD,84410:CD,84456:CD,84460:CD,84461:JM,96899:JM,96915:JM,96904:JM,96920:JM,96891:JM,84092:JM,84095:CD,84467:CD,84469:CD,84470
84279 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .serializedCache::DD,84282
84282 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 38::CF,84469:CD,84286:CD,84291
84286 :: CALL :: call :: Z :: v8 = v6.containsKey(p1 $pdpDomainName )::JM,84291
84291 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 38::CF,84469:CD,84295:CD,84300
84295 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p1 $pdpDomainName )::JM,84300
84301 :: CALL :: call :: Z :: v16 = p0 $this .checkDomainRanges(v14)::JM,84306:CL,96594
84300 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,84469
84306 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 186::CF,84470:CD,84308:CD,84312:CD,84320:CD,84325:CD,84330:CD,84345:CD,84349:CD,84353:CD,84357
84308 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
84312 :: CALL :: call :: Ljava/lang/String :: v21 = valueOf(v19)::
84320 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v18.append(#(getPDPDomain?pdpId=))::
84325 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(p1 $pdpDomainName )::
84330 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
84345 :: CALL :: call :: Ljava/io/InputStream :: v35 = getInputStream(v17)::CL,96646
84349 :: CALL :: call :: Ljava/lang/String :: v56 = convertStreamToString(v35)::CL,96660
84353 :: CALL :: call :: Ljava/util/SortedSet :: v58 = getDomainRangesFromXML(v56)::JM,84357:JM,84470:CL,96768
84357 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 186::CF,84470:CD,84358
84358 :: CALL :: call :: V :: p0 $this .cache(p1 $pdpDomainName , v58)::CL,96820
84366 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
84371 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v38.append(p1 $pdpDomainName )::
84376 :: CALL :: call :: Ljava/lang/String :: v44 = v42.toString()::
84386 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
84391 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v47.append(p1 $pdpDomainName )::
84396 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::
84406 :: NORM :: declaration :: Ljava/util/ArrayList :: v61 = new java.util.ArrayList::
84410 :: CALL :: call :: Ljava/util/Iterator :: v64 = v60.iterator()::JM,84460
84415 :: CALL :: call :: Ljava/lang/Object :: v68 = v64.next()::JM,84460
84447 :: CALL :: call :: Ljava/util/List :: v80 = v70.getResidueRanges()::CL,86206
84451 :: CALL :: call :: Z :: v82 = v61.addAll(v80)::
84456 :: CALL :: call :: Z :: v66 = v64.hasNext()::JM,84460
84461 :: NORM :: declaration :: Lorg/biojava/nbio/structure/domain/PDPDomain :: v84 = new org.biojava.nbio.structure.domain.PDPDomain::DD,84467
84460 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 208::CF,84461:CD,84415:JM,83105:JM,83120:JM,83189:JM,83190:JM,83114:JM,83146:JM,83132:JM,83150:CD,84447:CD,84451:CD,84456:JM,84460
84467 :: NORM :: compound :: Lorg/biojava/nbio/structure/domain/PDPDomain :: return v84::DD,84275
84469 :: EXPR :: assign :: null :: PHI v14 = #(null), #(null), v13::DD,84470
84470 :: EXPR :: assign :: null :: PHI v60 = v14, v58, v58::JM,84460:CF,84406
84540 :: CALL :: call :: Ljava/util/regex/Matcher :: v7 = v5.matcher(p1 $name )::JM,84561:JM,84579:JM,84569
84545 :: CALL :: call :: Z :: v9 = v7.matches()::JM,84561:JM,84579:JM,84569
84556 :: CALL :: call :: Ljava/lang/String :: v13 = v7.group(#(1))::JM,84561:JM,84579:JM,84569
84561 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbCode = v13::
84564 :: CALL :: call :: Ljava/lang/String :: v16 = v7.group(#(2))::JM,84561:JM,84579:JM,84569
84569 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 63::CD,84570:CD,84575:JM,84561:JM,84579:JM,84569
84570 :: CALL :: call :: Ljava/lang/String :: v19 = v7.group(#(2))::JM,84561:JM,84579:JM,84569
84575 :: CALL :: call :: I :: v21 = parseInt(v19)::JM,84579
84579 :: EXPR :: modify :: I :: p0 $this .biolNr = v21::
84583 :: EXPR :: modify :: I :: p0 $this .biolNr = #(1)::
84604 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getThePdbId()::CD,84611
84608 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::
84611 :: CALL :: call :: Ljava/lang/String :: v7 = v3.substring(#(0), #(4))::
84621 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructureForPdbId(java.lang.String)::CD,84626:CD,84634:CD,84639:CD,84644
84626 :: PRED :: IF :: Z :: if (p1 $pdbId  != #(null)) goto 7::CD,84667:CD,84672:CD,84676
84634 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
84639 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(p1 $pdbId )::
84644 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
84667 :: CALL :: call :: Z :: v9 = p0 $this .checkLoading(p1 $pdbId )::JM,84672:CL,96945
84673 :: EXPR :: reference :: Z :: v19 = p0 $this .useMmCif::DD,84676
84672 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 42::CD,84667
84677 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v23 = p0 $this .loadStructureFromCifByPdbId(p1 $pdbId )::CL,96961
84676 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 87::CD,84677:CD,84683
84683 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v21 = p0 $this .loadStructureFromPdbByPdbId(p1 $pdbId )::CL,97037
84709 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.parseQuery(java.net.URL)::CD,84713:CD,84717:CD,84721:JM,84737:JM,84722:JM,84726:JM,84732
84713 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v3 = new java.util.LinkedHashMap::
84717 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $url .getQuery()::JM,84721:JM,84737:JM,84722:JM,84726:JM,84732
84721 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 25::CD,84722:CD,84726:JM,84737:JM,84732
84722 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,84737:JM,84722:JM,84726:JM,84732
84726 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 27::CD,84728:CD,84732:CD,84737:CD,84789:CD,84793:JM,84721:JM,84722:JM,84726
84728 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $url .getQuery()::JM,84721:JM,84737:JM,84722:JM,84726:JM,84732
84732 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#(&))::JM,84737:JM,84722:JM,84726:JM,84732
84737 :: EXPR :: assign :: I :: v16 = v15.length::DD,84789
84782 :: CALL :: call :: Ljava/lang/Object :: v40 = v3.put(v38, v36)::
84789 :: PRED :: IF :: Z :: if (v42 < v16) goto 54::CD,84782:CD,84788:CD,84793
84788 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,84793
84793 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,84788:DD,84789
84847 :: EXIT :: exit :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO.guessFiletype(java.lang.String)::JM,69347:JM,69348
84846 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.guessFiletype(java.lang.String)::CE,84847:CD,84850:CD,84854:CD,84857:CD,84894:CD,84899
84850 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $filename .toLowerCase()::JM,84886
84854 :: CALL :: call :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v6 = values()::JM,84857:CL,97113
84857 :: EXPR :: assign :: I :: v7 = v6.length::DD,84894
84859 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v6[v25]::JM,84867:JM,84872:JM,84888:JM,84876:JM,84892:JM,84863:DD,84887
84863 :: CALL :: call :: Ljava/util/List :: v11 = v9.getExtensions()::JM,84867:JM,84872:JM,84888:JM,84876:JM,84892:JM,84863
84867 :: CALL :: call :: Ljava/util/Iterator :: v13 = v11.iterator()::JM,84867:JM,84872:JM,84888:JM,84876:JM,84892
84872 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.next()::JM,84872:JM,84888:JM,84876:JM,84892
84877 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toLowerCase()::JM,84886:JM,84877
84876 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,84886:JM,84877
84881 :: CALL :: call :: Z :: v22 = v4.endsWith(v20)::JM,84886
84887 :: NORM :: compound :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v9::DD,84847
84886 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 66::CF,84898:CD,84887:CD,84888:CD,84892
84888 :: CALL :: call :: Z :: v15 = v13.hasNext()::JM,84872:JM,84888:JM,84876:JM,84892
84893 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v26 + #(1)::DD,84899
84892 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 40::CD,84872:CD,84876:CD,84877:CD,84881:CD,84886:CD,84893:CD,84894:CD,84899:CD,84898:JM,84888:JM,84892
84895 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::CF,84897
84894 :: PRED :: IF :: Z :: if (v25 < v7) goto 22::CD,84863:CD,84867:CD,84888:CD,84892:CD,84895:CD,84897:CD,84898
84897 :: NORM :: compound :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v27::DD,84847
84899 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,84894:DD,84898
84898 :: EXPR :: assign :: null :: PHI v26 = v25, v26::JM,84872:JM,84888:JM,84876:JM,84892:DD,84893:DD,84898
84925 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::
84924 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::CE,84925:CD,84927:CD,84929
84927 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype::DD,84929:DD,84930
84929 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,84930:CD,84931:CD,84934:CD,84935:CD,84936:CD,84938:CD,84947:CD,84949:CD,84958:CD,84960:CD,84971
84931 :: CALL :: call :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v5 = values()::JM,84934:CL,97113
84930 :: NORM :: compound :: [I :: return v2::DD,84925
84935 :: NORM :: declaration :: [I :: v7 = new []::DD,84971
84934 :: EXPR :: assign :: I :: v6 = v5.length::CF,84935
84936 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v8 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::
84938 :: CALL :: call :: I :: v10 = v8.ordinal()::
84942 :: EXPR :: modify :: I :: v7[v10] = #(2)::
84947 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v14 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::
84949 :: CALL :: call :: I :: v16 = v14.ordinal()::
84953 :: EXPR :: modify :: I :: v7[v16] = #(1)::
84958 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v20 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::
84960 :: CALL :: call :: I :: v22 = v20.ordinal()::
84964 :: EXPR :: modify :: I :: v7[v22] = #(3)::
84971 :: NORM :: compound :: [I :: return v7::DD,84925
84999 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
85022 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: v4 = new org.biojava.nbio.structure.io.FileParsingParameters::DD,85026
85026 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: p0 $this .params = v4::
85029 :: CALL :: call :: V :: p0 $this .documentStart()::CL,97140
85046 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setFileParsingParameters(org.biojava.nbio.structure.io.FileParsingParameters)::JM,85051
85051 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: p0 $this .params = p1 $params ::
85057 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.addMMcifConsumer(org.biojava.nbio.structure.io.mmcif.MMcifConsumer)::CD,85065
85062 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::
85065 :: CALL :: call :: Z :: v6 = v4.add(p1 $consumer )::
85074 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.parse(java.io.BufferedReader)::CD,85079:CD,85082:CD,85089:CD,85093:CD,85097:CD,85101:CD,85105:JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85079 :: CALL :: call :: V :: p0 $this .triggerDocumentStart()::CL,97340
85082 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v5 = new org.biojava.nbio.structure.io.mmcif.model.Struct::DD,85086
85086 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v5::
85089 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,85436:JM,85671
85093 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,85704
85097 :: NORM :: declaration :: Ljava/util/HashSet :: v13 = new java.util.HashSet::
85101 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $buf .readLine()::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85105:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85105 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 70::CD,85106:CD,85111:CD,85114:CD,85119:CD,85124:CD,85129:CD,85137:CD,85702:CD,85703:CD,85704:CD,85705:JM,85187:JM,85218:JM,85346:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85145:JM,85656:JM,85151
85106 :: CALL :: call :: Z :: v19 = v16.startsWith(#(data_))::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85111 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 988::CF,85702:CD,85114:CD,85119:CD,85124:CD,85129:CD,85137:CD,85652:CD,85656:CD,85703:CD,85704:CD,85705
85114 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v238 = new java.lang.StringBuilder::
85119 :: CALL :: call :: Ljava/lang/StringBuilder :: v242 = v238.append(v16)::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85124 :: CALL :: call :: Ljava/lang/StringBuilder :: v244 = v242.append(#('))::JM,85201:JM,85489:JM,85187:JM,85218:JM,85346:JM,85145:JM,85705:JM,85261:JM,85151:JM,85551
85129 :: CALL :: call :: Ljava/lang/String :: v246 = v244.toString()::JM,85346
85137 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,97382
85141 :: CALL :: call :: Z :: v23 = v21.isEmpty()::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85145 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 988::CF,85702:CD,85146:CD,85151:CD,85652:CD,85656:CD,85703:CD,85704:CD,85705:JM,85187:JM,85218:JM,85346:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145
85146 :: CALL :: call :: Z :: v27 = v21.startsWith(#(#))::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85151 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 123::CD,85155:CD,85156:CD,85164:CD,85169:CD,85174:CD,85182:CD,85187:CD,85195:CD,85652:CD,85656:CD,85700:CD,85701:CD,85702:CD,85703:CD,85704:CD,85705
85155 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::JM,85156
85156 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(v75)::JM,85156
85164 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#( ))::
85169 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(v21)::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85174 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,85201:JM,85489:JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551
85182 :: CALL :: call :: Z :: v42 = v21.startsWith(#(data_))::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85187 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 187::CF,85700:CD,85188:CD,85701
85189 :: CALL :: call :: V :: v154.clear()::
85188 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 187::CF,85700:CD,85189:CD,85192
85192 :: CALL :: call :: V :: v9.clear()::
85195 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 692::CD,85196:CD,85201:CD,85484:CD,85489:JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85196 :: CALL :: call :: Z :: v47 = v21.startsWith(#(loop_))::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85201 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 217::CD,85202:CD,85206:CD,85211:CD,85652:CD,85656:CD,85702:CD,85703:CD,85704:CD,85705
85202 :: CALL :: call :: V :: v9.clear()::
85206 :: CALL :: call :: Z :: v50 = v21.matches(#(\s*_\w+.*))::JM,85211
85211 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 555::CD,85212:CD,85395:CD,85404:CD,85408:CD,85419:CD,85428:CD,85432:CD,85436:CD,85473:CD,85480:CD,85652:CD,85656:CD,85702:CD,85703:CD,85704:CD,85705
85213 :: CALL :: call :: Z :: v53 = v21.startsWith(#(_))::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85212 :: PRED :: IF :: Z :: if (v155 == #(0)) goto 445::CD,85213:CD,85218:CD,85337:CD,85341:CD,85346:CD,85652:CD,85656:CD,85702:CD,85703:CD,85704:CD,85705:JM,85187:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85151
85218 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 445::CD,85225:CD,85228:CD,85235:CD,85239:CD,85337:CD,85341:CD,85346:CD,85652:CD,85656:CD,85702:CD,85703:CD,85704:CD,85705:JM,85187:JM,85218:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85151
85225 :: CALL :: call :: V :: v9.clear()::
85228 :: CALL :: call :: Ljava/util/List :: v82 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,85249:JM,85239:JM,85306:CL,97415
85235 :: CALL :: call :: I :: v84 = v82.size()::JM,85249:JM,85239:JM,85306
85239 :: PRED :: IF :: Z :: if (v84 >= #(1)) goto 292::CD,85240:CD,85244:CD,85249:CD,85250:CD,85255:CD,85652:CD,85656:CD,85702:CD,85703:CD,85704:CD,85705:JM,85239:JM,85306
85240 :: CALL :: call :: V :: v154.clear()::
85244 :: CALL :: call :: Ljava/lang/Object :: v87 = v82.get(#(0))::JM,85249:JM,85239:JM,85306
85249 :: EXPR :: assign :: Ljava/lang/Object :: v88 = CHECKCAST v87::JM,85255:JM,85705:JM,85307
85250 :: CALL :: call :: I :: v91 = v88.indexOf(#(.))::JM,85255:JM,85705:JM,85307
85255 :: PRED :: IF :: Z :: if (v91 >= #(0)) goto 377::CD,85256:CD,85261:CD,85295:CD,85301:CD,85306:CD,85307:CD,85308:CD,85312:CD,85318:CD,85323:CD,85652:CD,85656:CD,85702:CD,85703:CD,85704:CD,85705:JM,85187:JM,85218:JM,85346:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85151
85256 :: CALL :: call :: Z :: v93 = v21.startsWith(#(data_))::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85261 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 364::CD,85264:CD,85269:CD,85274:CD,85279:CD,85287:CD,85291:CD,85652:CD,85656:CD,85702:CD,85703:CD,85704:CD,85705
85264 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v227 = new java.lang.StringBuilder::
85269 :: CALL :: call :: Ljava/lang/StringBuilder :: v230 = v227.append(v21)::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85274 :: CALL :: call :: Ljava/lang/StringBuilder :: v232 = v230.append(#('))::JM,85489:JM,85346:JM,85705:JM,85551
85279 :: CALL :: call :: Ljava/lang/String :: v234 = v232.toString()::JM,85346
85287 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,97382
85291 :: CALL :: call :: V :: v154.clear()::
85295 :: CALL :: call :: Ljava/lang/String :: v96 = v88.substring(#(0), v91)::JM,85705:JM,85307
85301 :: CALL :: call :: Ljava/lang/Object :: v98 = v82.get(#(1))::JM,85249:JM,85239:JM,85306
85307 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v91 + #(1)::
85306 :: EXPR :: assign :: Ljava/lang/Object :: v99 = CHECKCAST v98::CF,85307
85308 :: CALL :: call :: I :: v102 = v88.length()::
85312 :: CALL :: call :: Ljava/lang/String :: v104 = v88.substring(v100, v102)::
85318 :: CALL :: call :: Z :: v106 = v9.add(v104)::
85323 :: CALL :: call :: Z :: v108 = v154.add(v99)::
85337 :: CALL :: call :: Ljava/lang/String :: v55 = v21.trim()::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85341 :: CALL :: call :: I :: v58 = v55.indexOf(#(46))::JM,85489:JM,85346:JM,85705:JM,85551
85347 :: CALL :: call :: [Ljava/lang/String :: v62 = v55.split(#(\.))::JM,85373
85346 :: PRED :: IF :: Z :: if (v58 <= #(-1)) goto 534::CD,85347:CD,85360:CD,85373:CD,85374:CD,85702:CD,85703:CD,85704:CD,85705
85352 :: EXPR :: reference :: Ljava/lang/Object :: v63 = v62[#(0)]::DD,85705
85356 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v62[#(1)]::
85360 :: CALL :: call :: Z :: v67 = v9.add(v65)::
85373 :: EXPR :: assign :: I :: v71 = v62.length::DD,85374
85374 :: PRED :: IF :: Z :: if (v71 <= #(2)) goto 988::CF,85702:CD,85703:CD,85704:CD,85705
85395 :: CALL :: call :: Ljava/util/List :: v121 = p0 $this .processLine(v21, p1 $buf , v119)::JM,85704:JM,85436:CL,97415
85404 :: CALL :: call :: I :: v125 = v121.size()::JM,85704:JM,85436
85408 :: CALL :: call :: Ljava/lang/Integer :: v127 = valueOf(v125)::JM,85436
85419 :: CALL :: call :: Ljava/lang/String :: v132 = v121.toString()::
85428 :: CALL :: call :: I :: v135 = v121.size()::JM,85704:JM,85436
85432 :: CALL :: call :: I :: v137 = v9.size()::JM,85436
85436 :: PRED :: IF :: Z :: if (v135 == v137) goto 673::CD,85440:CD,85444:CD,85452:CD,85456
85440 :: CALL :: call :: I :: v143 = v9.size()::
85444 :: CALL :: call :: Ljava/lang/Integer :: v145 = valueOf(v143)::
85452 :: CALL :: call :: I :: v147 = v121.size()::JM,85704:JM,85436
85456 :: CALL :: call :: Ljava/lang/Integer :: v149 = valueOf(v147)::
85473 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v121, v13)::CL,97731
85480 :: CALL :: call :: V :: v121.clear()::JM,85704:JM,85436
85484 :: CALL :: call :: Z :: v157 = v21.startsWith(#(loop_))::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85489 :: PRED :: IF :: Z :: if (v157 == #(0)) goto 749::CD,85490:CD,85498:CD,85518:CD,85525:CD,85529:CD,85652:CD,85656:CD,85702:CD,85703:CD,85704:CD,85705
85491 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,97731
85490 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 722::CD,85491
85498 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,99152
85518 :: CALL :: call :: Ljava/util/List :: v167 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,85539:JM,85622:JM,85529:CL,97415
85525 :: CALL :: call :: I :: v169 = v167.size()::JM,85539:JM,85622:JM,85529
85529 :: PRED :: IF :: Z :: if (v169 >= #(1)) goto 795::CD,85530:CD,85534:CD,85539:CD,85540:CD,85545:CD,85652:CD,85656:CD,85702:CD,85703:CD,85704:CD,85705:JM,85622:JM,85529
85530 :: CALL :: call :: V :: v154.clear()::
85534 :: CALL :: call :: Ljava/lang/Object :: v172 = v167.get(#(0))::JM,85539:JM,85622:JM,85529
85539 :: EXPR :: assign :: Ljava/lang/Object :: v173 = CHECKCAST v172::JM,85623:JM,85545:JM,85705:JM,85597
85540 :: CALL :: call :: I :: v175 = v173.indexOf(#(.))::JM,85623:JM,85545:JM,85705:JM,85597
85545 :: PRED :: IF :: Z :: if (v175 >= #(0)) goto 877::CD,85546:CD,85551:CD,85585:CD,85611:CD,85617:CD,85622:CD,85623:CD,85624:CD,85628:CD,85634:CD,85639:CD,85652:CD,85656:CD,85702:CD,85703:CD,85704:CD,85705:JM,85187:JM,85218:JM,85346:JM,85261:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85151
85546 :: CALL :: call :: Z :: v177 = v21.startsWith(#(data_))::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85551 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 867::CD,85554:CD,85559:CD,85564:CD,85569:CD,85577:CD,85581:CD,85652:CD,85656:CD,85702:CD,85703:CD,85704:CD,85705
85554 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v214 = new java.lang.StringBuilder::
85559 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v214.append(v21)::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85564 :: CALL :: call :: Ljava/lang/StringBuilder :: v221 = v218.append(#('))::JM,85346
85569 :: CALL :: call :: Ljava/lang/String :: v223 = v221.toString()::
85577 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,97382
85581 :: CALL :: call :: V :: v154.clear()::
85585 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 923::CD,85586:CD,85592:CD,85597:JM,85705
85586 :: CALL :: call :: Ljava/lang/String :: v180 = v173.substring(#(0), v175)::JM,85597:JM,85623:JM,85705
85592 :: CALL :: call :: Z :: v182 = v180.equals(v73)::JM,85705:JM,85597
85597 :: PRED :: IF :: Z :: if (v182 != #(0)) goto 923::CD,85598:CD,85605:JM,85705
85598 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,97731
85605 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,99152
85611 :: CALL :: call :: Ljava/lang/String :: v186 = v173.substring(#(0), v175)::JM,85705:JM,85623:JM,85597
85617 :: CALL :: call :: Ljava/lang/Object :: v188 = v167.get(#(1))::JM,85539:JM,85622:JM,85529
85623 :: EXPR :: assign :: Ljava/lang/Object :: v190 = v175 + #(1)::
85622 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::CF,85623
85624 :: CALL :: call :: I :: v192 = v173.length()::
85628 :: CALL :: call :: Ljava/lang/String :: v194 = v173.substring(v190, v192)::
85634 :: CALL :: call :: Z :: v196 = v9.add(v194)::
85639 :: CALL :: call :: Z :: v198 = v154.add(v189)::
85652 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $buf .readLine()::JM,85187:JM,85218:JM,85346:JM,85705:JM,85261:JM,85551:JM,85105:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151
85657 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 1051::CD,85658:CD,85662
85656 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 105::CD,85141:CD,85145:CD,85657:CD,85688:CD,85696:CD,85702:CD,85703:CD,85704:CD,85705:JM,85187:JM,85218:JM,85346:JM,85261:JM,85551:JM,85201:JM,85489:JM,85111:JM,85656:JM,85151
85658 :: CALL :: call :: I :: v202 = v154.size()::JM,85662
85663 :: CALL :: call :: I :: v204 = v154.size()::JM,85671
85662 :: PRED :: IF :: Z :: if (v202 <= #(0)) goto 1051::CD,85663:CD,85667:CD,85671
85667 :: CALL :: call :: I :: v206 = v9.size()::JM,85671
85671 :: PRED :: IF :: Z :: if (v204 != v206) goto 1051::CD,85672:CD,85679
85672 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,97731
85679 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,99152
85685 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v209 = p0 $this .struct::DD,85688
85688 :: PRED :: IF :: Z :: if (v209 == #(null)) goto 1066::CD,85692
85692 :: CALL :: call :: V :: p0 $this .triggerStructData(v210)::CL,99172
85696 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,97382
85701 :: EXPR :: assign :: null :: PHI v155 = v153, v153, #(0)::DD,85212:DD,85703:CF,85195
85700 :: EXPR :: assign :: null :: PHI v76 = v75, v75, #(0)::CF,85701:DD,85195:DD,85702
85703 :: EXPR :: assign :: null :: PHI v153 = #(0), v153, v153, #(0), #(0), #(0), #(0), v155, v155, v155, #(1), #(0), v155, v155, v155::CF,85704:DD,85701:DD,85703
85702 :: EXPR :: assign :: null :: PHI v75 = #(0), v75, v75, #(1), #(0), #(0), #(0), v76, v76, v76, v76, #(1), #(0), #(0), #(0)::CF,85703:JM,85156:DD,85188:DD,85700:DD,85702
85705 :: EXPR :: assign :: null :: PHI v73 = #(null), v73, v73, v73, v73, #(null), v96, v63, v63, v55, v73, #(null), v73, #(null), v186::JM,85187:JM,85218:JM,85346:JM,85261:JM,85551:JM,85105:JM,85201:JM,85489:JM,85141:JM,85111:JM,85145:JM,85656:JM,85151:DD,85490:DD,85585:JM,85597:DD,85657:DD,85705
85704 :: EXPR :: assign :: null :: PHI v154 = v11, v154, v154, v154, v154, v154, v154, v154, v154, v154, v121, v154, v154, v154, v154::CF,85705:JM,85662:JM,85671:DD,85704
86062 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructure(java.net.URL)::CD,86076
86076 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p0 $this .getStructure(v7)::CL,99208
86089 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getBiologicalAssembly(java.lang.String,int)::CD,86095
86095 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getBiologicalAssembly(p1 $pdbId , p2 $bioAssemblyId , #(1))::CL,99239
86109 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::CE,86110:CD,86116
86110 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBHeader :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::JM,110450:JM,124579:JM,124730:JM,126650
86113 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBHeader :: v3 = p0 $this .pdbHeader::DD,86116
86116 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBHeader :: return v3::CF,86110
86118 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.toString()::CD,86122
86122 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getIdentifier()::CL,99307
86139 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::CE,86140:CD,86146
86140 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::JM,125767:JM,125799
86143 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .dbrefs::DD,86146
86146 :: NORM :: compound :: Ljava/util/List :: return v3::CF,86140
86169 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getDescription()::
86168 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getDescription()::CE,86169:CD,86175
86172 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .description::DD,86175
86175 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,86169
86177 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDescription(java.lang.String)::JM,86182
86182 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
86197 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getSites()::CE,86198:CD,86204
86198 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getSites()::JM,122295:JM,122583:JM,125961:JM,126030
86201 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .sites::DD,86204
86204 :: NORM :: compound :: Ljava/util/List :: return v3::CF,86198
86207 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::JM,69592:JM,69840:JM,83292
86206 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::CE,86207:CD,86213
86210 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .ranges::DD,86213
86213 :: NORM :: compound :: Ljava/util/List :: return v3::CF,86207
86215 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getChainId()::CE,86216:CD,86222
86216 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueRange.getChainId()::JM,69659:JM,83282
86219 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chain::DD,86222
86222 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,86216
86225 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueRange.getStart()::JM,69666:JM,69733
86224 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getStart()::CE,86225:CD,86231
86228 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .start::DD,86231
86231 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,86225
86233 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getEnd()::CE,86234:CD,86240
86234 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueRange.getEnd()::JM,69734:JM,69675
86237 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .end::DD,86240
86240 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,86234
86243 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::JM,103051
86242 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::CE,86243:CD,86251:CD,86256:CD,86257:CD,86262:CD,86263
86248 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .models::JM,86256
86251 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.get(p1 $modelnr )::JM,86256:JM,86262
86257 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p2 $number )::JM,86262:JM,86256
86256 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::JM,86262
86263 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,86243
86262 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,86263
86269 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.size()::CD,86276:CD,86280
86273 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,86280
86276 :: CALL :: call :: Z :: v6 = v4.isEmpty()::JM,86280
86281 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .models::
86280 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 34::CD,86284
86284 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(#(0))::
86303 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::CE,86304:CD,86309:CD,86314:CD,86319:CD,86323:CD,86324:CD,86328:CD,86333:CD,86334:CD,86335:CD,86341:CD,86346:CD,86351:CD,86356:CD,86364:CD,86369
86304 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::JM,69854:JM,80941
86309 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,86323:CL,80900
86314 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,86323
86319 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,86323
86323 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,86334
86324 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,86333:CL,60024
86328 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,86333
86333 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,86319:CD,86323:CD,86324:CD,86328:CD,86335:CF,86334
86335 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,86323
86334 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,86304
86341 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
86346 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,86333
86351 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#('))::
86356 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#( for PDB id ))::
86361 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdb_id::
86364 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(v31)::
86369 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
86391 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupsByPDB(org.biojava.nbio.structure.ResidueNumber,org.biojava.nbio.structure.ResidueNumber)::CE,86392:CD,86397:CD,86401:CD,86405:CD,86412:CD,86458:CD,86463:CD,86468:CD,86476:CD,86481:CD,86491:CD,86495:CD,86498:CD,86503:CD,86508:CD,86516:CD,86521:CD,86532:CD,86537:CD,86542:CD,86550:CD,86555:CD,86564:CD,86568:CD,86569:CD,86574:CD,86575:CD,86578
86392 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupsByPDB(org.biojava.nbio.structure.ResidueNumber,org.biojava.nbio.structure.ResidueNumber)::JM,69746:JM,69853
86397 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $start .toString()::JM,86435:CL,55711
86401 :: CALL :: call :: Ljava/lang/String :: v8 = p2 $end .toString()::JM,86455:CL,55711
86405 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,86568:JM,86574
86409 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .groups::JM,86421:JM,86495
86412 :: CALL :: call :: Ljava/util/Iterator :: v13 = v11.iterator()::JM,86421:JM,86495
86417 :: CALL :: call :: Ljava/lang/Object :: v18 = v13.next()::JM,86421:JM,86495
86421 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::
86426 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,86435:CL,55711
86430 :: CALL :: call :: Z :: v25 = v23.equals(v6)::JM,86435
86435 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 77::CF,86576
86437 :: CALL :: call :: Z :: v30 = v9.add(v19)::
86436 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,86437
86446 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,86455:CL,55711
86450 :: CALL :: call :: Z :: v36 = v34.equals(v8)::JM,86455
86455 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 159::CF,86578:CD,86491:CD,86495
86458 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v77 = new java.lang.StringBuilder::
86463 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(v6)::JM,86435
86468 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v80.append(#( in chain ))::
86473 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .chainID::
86476 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v82.append(v83)::
86481 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::
86491 :: CALL :: call :: Z :: v16 = v13.hasNext()::JM,86421:JM,86495
86495 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 42::CD,86417:CD,86421:CD,86426:CD,86430:CD,86435:CD,86436:CD,86446:CD,86450:CD,86455:CD,86576:CD,86578:JM,86495
86498 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
86503 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v63.append(v6)::JM,86435
86508 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v67.append(#( in chain ))::
86513 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .chainID::
86516 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(v70)::
86521 :: CALL :: call :: Ljava/lang/String :: v74 = v72.toString()::
86532 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v48 = new java.lang.StringBuilder::
86537 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v48.append(v8)::JM,86455
86542 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( in chain ))::
86547 :: EXPR :: reference :: Ljava/lang/String :: v56 = p0 $this .chainID::
86550 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(v56)::
86555 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
86564 :: CALL :: call :: I :: v42 = v9.size()::JM,86568
86569 :: CALL :: call :: [Ljava/lang/Object :: v45 = v9.toArray(v43)::JM,86574
86568 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Group :: v43 = new org.biojava.nbio.structure.Group[]::JM,86574
86575 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Group :: return v46::DD,86392
86574 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::CF,86575
86576 :: EXPR :: assign :: null :: PHI v27 = v37, #(1)::DD,86436:DD,86578
86578 :: EXPR :: assign :: null :: PHI v37 = #(0), v27::DD,86576
86620 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addChain(org.biojava.nbio.structure.Chain,int)::CD,86633:CD,86637:JM,86664
86630 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .models::JM,86637
86633 :: CALL :: call :: Z :: v8 = v6.isEmpty()::JM,86637
86637 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 50::CF,86638:CD,86642:CD,86650:CD,86659:CD,86664:CD,86665
86638 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::
86642 :: CALL :: call :: Z :: v19 = v16.add(p1 $chain )::JM,86664
86647 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .models::
86650 :: CALL :: call :: Z :: v22 = v20.add(v16)::
86656 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .models::JM,86664
86659 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p2 $modelnr )::JM,86664
86665 :: CALL :: call :: Z :: v15 = v13.add(p1 $chain )::JM,86664
86664 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::
86689 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::CE,86690:CD,86696
86690 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::JM,82050:JM,82107:JM,82042:JM,82195:JM,82260:JM,82203:JM,107313
86693 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .seqResGroups::DD,86696
86696 :: NORM :: compound :: Ljava/util/List :: return v3::CF,86690
86707 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqMisMatches(java.util.List)::JM,86712
86712 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = p1 $seqMisMatches ::
86718 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.toCanonical()::CD,86731:JM,84092:JM,84095
86731 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,83971
86744 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.toCanonical()::CD,86754:CD,86758:CD,86763:CD,86770:CD,86775:CD,86818:CD,86826:CD,86831:CD,86840:JM,84092:JM,84095:CD,86871:CD,86872
86754 :: CALL :: call :: Ljava/util/Map :: v8 = parseQuery(v6)::CL,84709
86758 :: CALL :: call :: Z :: v22 = v8.containsKey(#(pdbid))::JM,86763
86763 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 40::CF,86871:CD,86764:CD,86769
86764 :: CALL :: call :: Ljava/lang/Object :: v25 = v8.get(#(pdbid))::JM,86769
86769 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::DD,86871
86770 :: CALL :: call :: Z :: v30 = v8.containsKey(#(residues))::JM,86775
86775 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 69::CD,86776:CD,86782:CD,86787:CD,86792:CD,86872
86776 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.get(#(residues))::
86782 :: CALL :: call :: Ljava/util/List :: v47 = parseMultiple(v45)::CL,83971
86787 :: CALL :: call :: Z :: v33 = v8.containsKey(#(chainid))::JM,86792
86793 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ResidueRange :: v35 = new org.biojava.nbio.structure.ResidueRange[]::JM,86811:CF,86794
86792 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 141::CF,86872:CD,86793:CD,86794:CD,86795:JM,99392:JM,99395:JM,99398:CD,86811
86795 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.get(#(chainid))::
86794 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v36 = new org.biojava.nbio.structure.ResidueRange::DD,86807
86807 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
86811 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,86811
86818 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
86826 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
86831 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
86840 :: PRED :: IF :: Z :: if (v49 != #(null)) goto 168::CD,86859
86859 :: CALL :: call :: Ljava/lang/String :: v62 = guessPDBID(v60)::CL,83312
86871 :: EXPR :: assign :: null :: PHI v27 = #(null), v26::DD,86872
86872 :: EXPR :: assign :: null :: PHI v49 = v27, v27, v27, #(null)::DD,86840
86915 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.toCanonical()::CD,86928:JM,84092:JM,84095
86928 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,99427
86941 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.toCanonical()::CD,86945:CD,86949:CD,86953:CD,86957:CD,86961:CD,86962:CD,86967:CD,86971:CD,86975:CD,87005:CD,87009:CD,87011:JM,84092:JM,84095
86945 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
86949 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getDomainName()::CL,99483
86953 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getDomainName()::JM,86961:CL,99483
86957 :: CALL :: call :: I :: v10 = v8.length()::JM,86961
86961 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 - #(3)::
86962 :: CALL :: call :: C :: v14 = v6.charAt(v12)::
86967 :: CALL :: call :: Ljava/lang/String :: v16 = valueOf(v14)::
86971 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getSegments()::JM,87009:CL,99492
86975 :: CALL :: call :: Ljava/util/Iterator :: v20 = v18.iterator()::JM,87009
86980 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.next()::JM,87009
86985 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v27 = new org.biojava.nbio.structure.ResidueRange::
87000 :: CALL :: call :: Z :: v34 = v3.add(v27)::
87005 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,87009
87009 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 44::CD,86980:CD,86985:JM,99556:JM,99542:JM,99529:JM,99546:JM,99532:CD,87000:CD,87005:JM,87009
87011 :: CALL :: call :: Ljava/lang/String :: v37 = p0 $this .getThePdbId()::CL,84604
87069 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::CE,87070:CD,87076
87070 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::JM,70498:JM,70299
87073 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .amino_char::DD,87076
87076 :: NORM :: compound :: Ljava/lang/Character :: return v3::CF,87070
87079 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.isWater()::JM,70325:JM,91243:JM,128502
87078 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.isWater()::CE,87079:CD,87082:CD,87087:CD,87092
87082 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.GroupType.WATERNAMES::JM,87092
87084 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .pdb_name::JM,87092
87087 :: CALL :: call :: Z :: v6 = v3.contains(v4)::JM,87092
87092 :: NORM :: compound :: Z :: return v6::CF,87079
87095 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.size()::CE,87096:CD,87102:CD,87106
87096 :: EXIT :: exit :: I :: org.biojava.nbio.structure.HetatomImpl.size()::JM,70331
87099 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::JM,87106
87102 :: CALL :: call :: I :: v5 = v3.size()::JM,87106
87106 :: NORM :: compound :: I :: return v5::CF,87096
87109 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::JM,70337:JM,93777:JM,93831
87108 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::CE,87109:CD,87113:JM,87121:JM,87131
87113 :: PRED :: IF :: Z :: if (p1 $position  < #(0)) goto 18::CD,87117:CD,87121:CD,87122
87114 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::JM,87121
87117 :: CALL :: call :: I :: v7 = v5.size()::JM,87121
87121 :: PRED :: IF :: Z :: if (p1 $position  < v7) goto 20::CD,87122:CD,87126:CD,87131:CD,87132
87123 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .atoms::JM,87131
87122 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,87109
87126 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $position )::JM,87131:JM,87113
87131 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,87132
87132 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v11::DD,87109
87141 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Element.isMetal()::JM,70347
87140 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.isMetal()::CE,87141:CD,87147:CD,87151
87147 :: CALL :: call :: Z :: v5 = v3.isMetal()::JM,87151:CL,99572
87151 :: NORM :: compound :: Z :: return v5::CF,87141
87153 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::CE,87154:CD,87160
87154 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::JM,70372:JM,70377
87157 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v3 = p0 $this .residueType::DD,87160
87160 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v3::CF,87154
87163 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::JM,141606:JM,141594:JM,141614:JM,141597
87162 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::CE,87163:CD,87169
87166 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v3 = p0 $this .polymerType::DD,87169
87169 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v3::CF,87163
87171 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::CE,87172:CD,87178
87172 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::JM,70499:JM,70411:JM,75168:JM,75157:JM,75163:JM,75277:JM,75151:JM,141585:JM,141591
87175 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .one_letter_code::DD,87178
87178 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,87172
87659 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setX(double)::JM,87667
87664 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
87667 :: EXPR :: modify :: D :: v4[#(0)] = p1 $x ::
87675 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setY(double)::JM,87683
87680 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
87683 :: EXPR :: modify :: D :: v4[#(1)] = p1 $y ::
87691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setZ(double)::JM,87699
87696 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
87699 :: EXPR :: modify :: D :: v4[#(2)] = p1 $z ::
88439 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::CE,88440:CD,88444:CD,88448:CD,88452:CD,88453:CD,88457:CD,88461:CD,88462:CD,88466:CD,88470:CD,88471:CD,88472:CD,88473:CD,88474:CD,88475:CD,88476:CD,88480
88440 :: EXIT :: exit :: D :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,82093:JM,82246
88444 :: CALL :: call :: D :: v5 = p1 $a .getX()::JM,88452:CL,57823
88448 :: CALL :: call :: D :: v7 = p2 $b .getX()::JM,88452:CL,57823
88453 :: CALL :: call :: D :: v10 = p1 $a .getY()::JM,88461:CL,57837
88452 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 - v7::DD,88471
88457 :: CALL :: call :: D :: v12 = p2 $b .getY()::JM,88461:CL,57837
88461 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v10 - v12::DD,88472
88462 :: CALL :: call :: D :: v15 = p1 $a .getZ()::JM,88470:CL,57851
88466 :: CALL :: call :: D :: v17 = p2 $b .getZ()::JM,88470:CL,57851
88471 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v8 * v8::DD,88473:CF,88472
88470 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 - v17::DD,88474:CF,88471
88473 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 + v20::DD,88475:CF,88474
88472 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v13 * v13::CF,88473
88475 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 + v22::JM,88480:JM,88476
88474 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v18 * v18::CF,88475
88476 :: CALL :: call :: D :: v25 = sqrt(v23)::JM,88480:JM,88476
88480 :: NORM :: compound :: D :: return v25::CF,88440
89421 :: EXPR :: modify :: I :: p0 $this .port = #(-1)::
89424 :: EXPR :: modify :: I :: p0 $this .hashCode = #(-1)::
89427 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,89428:CD,89431:JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89428 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,89431
89431 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,89432:JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89432 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
89436 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89441 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,89700
89443 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89442 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,89701:CD,89443:CD,89444:CD,89449
89444 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89449 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,89441:CD,89442:CD,89700:CD,89701
89451 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,89701
89453 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89452 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,89453:CD,89458:JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89459 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89458 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,89451:CD,89452:CD,89701:JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89469 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,89702
89468 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,89702:CD,89469
89470 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89475 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89474 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,89703:CD,89475:CD,89480:JM,89474:JM,89509:JM,89700:JM,89449:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89480 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,89703
89483 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89482 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,89483:CD,89489:CD,89493:CD,89498:CD,89501:CD,89502:CD,89704:CD,89705:CD,89706:JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89468
89489 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,89706:JM,89498
89493 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,89498:JM,89706
89499 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,89705
89498 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,89705:CD,89499:CD,89706
89501 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,89704
89503 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,89705:CD,89504:CD,89509:CD,89706:JM,89474:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89502 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,89705:CD,89503:CD,89706
89504 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89509 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,89705:CD,89482
89510 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .protocol = v52::
89513 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,89709:CD,89514
89515 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,89523
89514 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,89518:CD,89523:CD,89524:CD,89531:CD,89541:CD,89707:CD,89708:CD,89709:CD,89710
89518 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,89523
89523 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,89709:CD,89524:CD,89531:CD,89541:CD,89707:CD,89708:CD,89710
89525 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,89707
89524 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,89707
89528 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,89531
89531 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,89708:CD,89535:CD,89540
89532 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,89540:JM,89535
89535 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,89540:JM,89535
89541 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,89709:CD,89710
89540 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,89708
89542 :: EXPR :: reference :: Ljava/lang/String :: v64 = p1 $context .protocol::DD,89545
89545 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .protocol = v64::
89548 :: EXPR :: reference :: Ljava/lang/String :: v65 = p1 $context .authority::DD,89551
89551 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authority = v65::
89554 :: EXPR :: reference :: Ljava/lang/String :: v66 = p1 $context .userInfo::DD,89557
89557 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .userInfo = v66::
89560 :: EXPR :: reference :: Ljava/lang/String :: v67 = p1 $context .host::DD,89563
89563 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .host = v67::
89566 :: EXPR :: reference :: I :: v68 = p1 $context .port::DD,89569
89569 :: EXPR :: modify :: I :: p0 $this .port = v68::
89572 :: EXPR :: reference :: Ljava/lang/String :: v69 = p1 $context .file::DD,89575
89575 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .file = v69::
89578 :: EXPR :: reference :: Ljava/lang/String :: v70 = p1 $context .path::DD,89581
89581 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .path = v70::
89589 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
89588 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
89594 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89599 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,89649:JM,89712:JM,89650:JM,89657:JM,89498
89608 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CF,89711:CD,89612
89612 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::JM,89711
89617 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
89618 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
89623 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
89626 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
89631 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
89640 :: EXPR :: modify :: Ljava/net/URLStreamHandler :: p0 $this .handler = v78::
89643 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89649 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CF,89712:CD,89650:CD,89651
89651 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89707:JM,89482:JM,89709:JM,89649:JM,89712:JM,89427:JM,89458:JM,89650:JM,89524:JM,89657:JM,89498:JM,89468
89650 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89482:JM,89649:JM,89712:JM,89458:JM,89650:JM,89657:JM,89498:JM,89468:JM,89707:JM,89709:JM,89427:JM,89524
89657 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = v83::
89661 :: PRED :: IF :: Z :: if (v51 != v84) goto 498::CD,89671
89660 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 498::CD,89661
89662 :: EXPR :: reference :: Ljava/lang/String :: v85 = p1 $context .query::DD,89665
89665 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .query = v85::
89668 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .ref::DD,89671
89671 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 498::
89672 :: EXPR :: reference :: Ljava/lang/String :: v87 = p1 $context .ref::DD,89675
89675 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = v87::
89687 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
89688 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
89701 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,89451:DD,89452:JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89482:JM,89649:JM,89712:JM,89458:JM,89650:JM,89657:JM,89498:JM,89468:DD,89469:DD,89702
89700 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,89441:DD,89442:DD,89443:DD,89452:DD,89503:JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89482:JM,89649:JM,89458:JM,89650:JM,89657:JM,89498:JM,89468:DD,89712
89703 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,89502
89702 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89482:JM,89649:JM,89712:JM,89458:JM,89650:JM,89657:JM,89498:JM,89468:DD,89704:DD,89705:JM,89707:JM,89709:JM,89427:JM,89524
89705 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,89706:JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89482:JM,89649:JM,89712:JM,89458:JM,89650:JM,89657:JM,89498:JM,89468:DD,89661
89704 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,89474:JM,89509:JM,89700:JM,89449:JM,89480:JM,89482:JM,89649:JM,89712:JM,89458:JM,89650:JM,89657:JM,89498:JM,89468:DD,89499:DD,89501:DD,89503:CF,89502
89707 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,89709
89706 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,89510:DD,89514:JM,89523:DD,89708
89709 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::CF,89710:DD,89608:DD,89711
89708 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,89541
89711 :: EXPR :: assign :: null :: PHI v78 = v71, v77::DD,89640
89710 :: EXPR :: assign :: null :: PHI v73 = #(0), #(0), #(0), #(1)::DD,89660
89712 :: EXPR :: assign :: null :: PHI v84 = v21, v80::DD,89661:CF,89660
89865 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::JM,75173:JM,75174:JM,75178:JM,141584:JM,141578:JM,141579
89864 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::CE,89865:CD,89871
89868 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .mon_nstd_parent_comp_id::DD,89871
89871 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,89865
89873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,89878
89878 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = p1 $cc ::
89885 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::JM,75418:JM,75428
89884 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::CE,89885:CD,89891
89888 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .three_letter_code::DD,89891
89891 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,89885
89958 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSwissprotId(java.lang.String)::JM,89963
89963 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .swissprot_id = p1 $sp_id ::
89969 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB(java.lang.StringBuffer)::CD,89990:CD,89996:CD,90017:CD,90023:CD,90044:CD,90050
89990 :: CALL :: call :: Ljava/lang/String :: v13 = format(v4, #(REMARK 800 SITE_IDENT...), v7)::
89996 :: CALL :: call :: Ljava/lang/StringBuffer :: v15 = p1 $stringBuffer .append(v13)::
90017 :: CALL :: call :: Ljava/lang/String :: v22 = format(v16, #(REMARK 800 EVIDENCE_C...), v18)::
90023 :: CALL :: call :: Ljava/lang/StringBuffer :: v24 = p1 $stringBuffer .append(v22)::
90044 :: CALL :: call :: Ljava/lang/String :: v31 = format(v25, #(REMARK 800 SITE_DESCR...), v27)::
90050 :: CALL :: call :: Ljava/lang/StringBuffer :: v33 = p1 $stringBuffer .append(v31)::
90085 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::CE,90086:CD,90090:JM,100673:JM,100676:JM,100679:CD,90096:CD,90115:CD,90116:CD,90120:JM,90113
90086 :: EXIT :: exit :: Lorg/biojava/nbio/structure/jama/Matrix :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::JM,77198:JM,77353
90090 :: NORM :: declaration :: Lorg/biojava/nbio/structure/jama/Matrix :: v4 = new org.biojava.nbio.structure.jama.Matrix::DD,90116
90096 :: CALL :: call :: [[D :: v7 = v4.getArray()::CL,90497
90102 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v7[v18]::
90106 :: PRED :: IF :: Z :: if (v18 != v15) goto 45::CD,90117
90108 :: EXPR :: modify :: D :: v9[v15] = v12::
90113 :: PRED :: IF :: Z :: if (v15 < p2 $n ) goto 30::CD,90106:CD,90112:CD,90117:CD,90118:CD,90119:CF,90114
90112 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,90119:CF,90118
90115 :: PRED :: IF :: Z :: if (v17 < p1 $m ) goto 24::CD,90113:CD,90114:CD,90118:CD,90119:CD,90120:CF,90116
90114 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,90120
90117 :: EXPR :: assign :: null :: PHI v12 = #(1.0 d), #(0.0 d)::DD,90108
90116 :: NORM :: compound :: Lorg/biojava/nbio/structure/jama/Matrix :: return v4::DD,90086
90119 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,90106:DD,90112:DD,90113
90118 :: EXPR :: assign :: null :: PHI v18 = v17, v18::CF,90119:DD,90106:DD,90114:DD,90118
90120 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,90115:DD,90118
90147 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::CE,90148:CD,90151:CD,90155:CD,90160:CD,90311:CD,90312
90148 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::JM,77262
90151 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $oligomer .toLowerCase()::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90155 :: CALL :: call :: Z :: v8 = v5.equals(#(monomeric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90160 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 26::CD,90162:CD,90167:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90162 :: CALL :: call :: Z :: v11 = v5.equals(#(dimeric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90167 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 41::CD,90169:CD,90174:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237
90169 :: CALL :: call :: Z :: v14 = v5.equals(#(trimeric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90174 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,90176:CD,90181:CD,90312:JM,90209:JM,90272:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90176 :: CALL :: call :: Z :: v17 = v5.equals(#(tetrameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90181 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 71::CD,90183:CD,90188:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90183 :: CALL :: call :: Z :: v20 = v5.equals(#(pentameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90188 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 86::CD,90190:CD,90195:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90190 :: CALL :: call :: Z :: v23 = v5.equals(#(hexameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90195 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 102::CD,90197:CD,90202:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90237:JM,90174
90197 :: CALL :: call :: Z :: v26 = v5.equals(#(heptameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90202 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 118::CD,90204:CD,90209:CD,90312:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90204 :: CALL :: call :: Z :: v29 = v5.equals(#(octameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90209 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 134::CD,90211:CD,90216:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90211 :: CALL :: call :: Z :: v32 = v5.equals(#(nonameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90216 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 150::CD,90218:CD,90223:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90218 :: CALL :: call :: Z :: v35 = v5.equals(#(decameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90223 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 166::CD,90225:CD,90230:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90265:JM,90202:JM,90237:JM,90174
90225 :: CALL :: call :: Z :: v38 = v5.equals(#(undecameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90230 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 182::CD,90232:CD,90237:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90174
90232 :: CALL :: call :: Z :: v41 = v5.equals(#(dodecameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90237 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 198::CD,90239:CD,90244:CD,90312:JM,90209:JM,90272:JM,90181:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90239 :: CALL :: call :: Z :: v44 = v5.equals(#(tridecameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90244 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 214::CD,90246:CD,90251:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90246 :: CALL :: call :: Z :: v47 = v5.equals(#(tetradecameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90251 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 230::CD,90253:CD,90258:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90253 :: CALL :: call :: Z :: v50 = v5.equals(#(pentadecameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90258 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 246::CD,90260:CD,90265:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90202:JM,90237:JM,90174
90260 :: CALL :: call :: Z :: v53 = v5.equals(#(hexadecameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90265 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 262::CD,90267:CD,90272:CD,90312:JM,90209:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90267 :: CALL :: call :: Z :: v56 = v5.equals(#(heptadecameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90272 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 278::CD,90274:CD,90279:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90274 :: CALL :: call :: Z :: v59 = v5.equals(#(octadecameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90279 :: PRED :: IF :: Z :: if (v59 == #(0)) goto 294::CD,90281:CD,90286:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90281 :: CALL :: call :: Z :: v62 = v5.equals(#(nonadecameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90286 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 310::CD,90288:CD,90293:CD,90312:JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90288 :: CALL :: call :: Z :: v65 = v5.equals(#(eicosameric))::JM,90209:JM,90272:JM,90181:JM,90244:JM,90279:JM,90216:JM,90251:JM,90188:JM,90223:JM,90286:JM,90160:JM,90195:JM,90258:JM,90293:JM,90167:JM,90230:JM,90265:JM,90202:JM,90237:JM,90174
90293 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 326::CD,90295:CD,90300:CD,90312
90295 :: CALL :: call :: Z :: v68 = v5.matches(#((\d+).*))::JM,90300
90301 :: CALL :: call :: Ljava/lang/String :: v71 = v5.replaceAll(#((\d+).*), #($1))::JM,90312
90300 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 347::CF,90312:CD,90301:CD,90307
90307 :: CALL :: call :: I :: v73 = parseInt(v71)::JM,90312
90311 :: NORM :: compound :: I :: return v94::DD,90148
90312 :: EXPR :: assign :: null :: PHI v94 = #(1), #(2), #(3), #(4), #(5), #(6), #(7), #(8), #(9), #(10), #(11), #(12), #(13), #(14), #(15), #(16), #(17), #(18), #(19), #(20), #(0), v73::CF,90311
90424 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.set(int,int,double)::JM,90438
90431 :: EXPR :: reference :: [[D :: v6 = p0 $this .A::
90434 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[p1 $i ]::
90438 :: EXPR :: modify :: D :: v7[p2 $j ] = p3 $s ::
90454 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,90474
90474 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v4::
90497 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getArray()::CE,90498:CD,90504
90498 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.jama.Matrix.getArray()::
90501 :: EXPR :: reference :: [[D :: v3 = p0 $this .A::DD,90504
90504 :: NORM :: compound :: [[D :: return v3::CF,90498
90590 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setId(java.lang.String)::JM,90595
90595 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
90601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setChainId(java.lang.String)::JM,90606
90606 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
90621 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setId(int)::JM,90626
90626 :: EXPR :: modify :: I :: p0 $this .id = p1 $id ::
90632 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setMacromolecularSize(int)::JM,90637
90637 :: EXPR :: modify :: I :: p0 $this .macromolecularSize = p1 $macromolecularSize ::
90643 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setTransforms(java.util.List)::JM,90648
90648 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transforms = p1 $transforms ::
90698 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolName(java.lang.String)::JM,90703
90703 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = p1 $molName ::
90709 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynonyms(java.util.List)::JM,90714
90714 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = p1 $synonyms ::
90720 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEcNums(java.util.List)::JM,90725
90725 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = p1 $ecNums ::
90731 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setFragment(java.lang.String)::JM,90736
90736 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = p1 $fragment ::
90742 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEngineered(java.lang.String)::JM,90747
90747 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = p1 $engineered ::
90753 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMutation(java.lang.String)::JM,90758
90758 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = p1 $mutation ::
90764 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setBiologicalUnit(java.lang.String)::JM,90769
90769 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = p1 $biologicalUnit ::
90775 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setDetails(java.lang.String)::JM,90780
90780 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
90786 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynthetic(java.lang.String)::JM,90791
90791 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = p1 $synthetic ::
90797 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismScientific(java.lang.String)::JM,90802
90802 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = p1 $organismScientific ::
90808 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismTaxId(java.lang.String)::JM,90813
90813 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = p1 $organismTaxId ::
90819 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismCommon(java.lang.String)::JM,90824
90824 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = p1 $organismCommon ::
90830 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setStrain(java.lang.String)::JM,90835
90835 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = p1 $strain ::
90841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setVariant(java.lang.String)::JM,90846
90846 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = p1 $variant ::
90852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellLine(java.lang.String)::JM,90857
90857 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = p1 $cellLine ::
90863 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setAtcc(java.lang.String)::JM,90868
90868 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = p1 $atcc ::
90874 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrgan(java.lang.String)::JM,90879
90879 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = p1 $organ ::
90885 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setTissue(java.lang.String)::JM,90890
90890 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = p1 $tissue ::
90896 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCell(java.lang.String)::JM,90901
90901 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = p1 $cell ::
90907 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganelle(java.lang.String)::JM,90912
90912 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = p1 $organelle ::
90918 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSecretion(java.lang.String)::JM,90923
90923 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = p1 $secretion ::
90929 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setGene(java.lang.String)::JM,90934
90934 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = p1 $gene ::
90940 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellularLocation(java.lang.String)::JM,90945
90945 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = p1 $cellularLocation ::
90951 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystem(java.lang.String)::JM,90956
90956 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = p1 $expressionSystem ::
90962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTaxId(java.lang.String)::JM,90967
90967 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = p1 $expressionSystemTaxId ::
90973 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemStrain(java.lang.String)::JM,90978
90978 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = p1 $expressionSystemStrain ::
90984 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVariant(java.lang.String)::JM,90989
90989 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = p1 $expressionSystemVariant ::
90995 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellLine(java.lang.String)::JM,91000
91000 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = p1 $expressionSystemCellLine ::
91006 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemAtccNumber(java.lang.String)::JM,91011
91011 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = p1 $expressionSystemAtccNumber ::
91017 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrgan(java.lang.String)::JM,91022
91022 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = p1 $expressionSystemOrgan ::
91028 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTissue(java.lang.String)::JM,91033
91033 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = p1 $expressionSystemTissue ::
91039 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCell(java.lang.String)::JM,91044
91044 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = p1 $expressionSystemCell ::
91050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrganelle(java.lang.String)::JM,91055
91055 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = p1 $expressionSystemOrganelle ::
91061 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellularLocation(java.lang.String)::JM,91066
91066 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = p1 $expressionSystemCellularLocation ::
91072 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVectorType(java.lang.String)::JM,91077
91077 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = p1 $expressionSystemVectorType ::
91083 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVector(java.lang.String)::JM,91088
91088 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = p1 $expressionSystemVector ::
91094 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemPlasmid(java.lang.String)::JM,91099
91099 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = p1 $expressionSystemPlasmid ::
91105 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemGene(java.lang.String)::JM,91110
91110 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = p1 $expressionSystemGene ::
91116 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOtherDetails(java.lang.String)::JM,91121
91121 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = p1 $expressionSystemOtherDetails ::
91134 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = #()::
91137 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = #()::
91146 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setSurname(java.lang.String)::JM,91151
91151 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = p1 $surname ::
91157 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.getSurname()::CE,91158:CD,91164
91158 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Author.getSurname()::
91161 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .surname::DD,91164
91164 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,91158
91166 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setInitials(java.lang.String)::JM,91171
91171 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = p1 $initials ::
91221 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::JM,80522
91220 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::CE,91221:CD,91226:CD,91227:CD,91231:CD,91564:CD,91568:CD,91573:CD,91574:JM,91316:JM,91415:JM,91238
91227 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.clone()::JM,91231
91226 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST p1 $seqResGroups ::JM,91231
91231 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,91569
91233 :: CALL :: call :: Ljava/lang/Object :: v14 = p2 $atmResGroups .get(v90)::JM,91568:JM,91316:JM,91415:JM,91238
91239 :: CALL :: call :: Z :: v17 = v15.isWater()::JM,91243:CL,87078
91238 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,91317:DD,91364:DD,91436
91243 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 48::CD,91249:CD,91253:CD,91257:CD,91563:CD,91564:CD,91568:CD,91572:CD,91573:CD,91574
91249 :: CALL :: call :: Ljava/lang/Integer :: v21 = v19.getSeqNum()::JM,91571:JM,91270:JM,91257:JM,91310:CL,102018
91253 :: CALL :: call :: I :: v23 = v21.intValue()::JM,91571:JM,91270:JM,91257:JM,91310
91257 :: PRED :: IF :: Z :: if (v23 >= #(0)) goto 89::CD,91269:CD,91270:CD,91570
91269 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,91221
91271 :: CALL :: call :: Ljava/lang/Object :: v25 = p1 $seqResGroups .get(#(0))::JM,91568:JM,91316:JM,91415:JM,91238
91270 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 158::CF,91570:CD,91271:CD,91277:CD,91281:CD,91285:CD,91290:CD,91309:CD,91311:CD,91571:JM,91568:JM,91316:JM,91415:JM,91238
91277 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getPDBName()::JM,91290:CL,75053
91281 :: CALL :: call :: Ljava/lang/String :: v30 = v15.getPDBName()::JM,91290:CL,75053
91285 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,91290
91290 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 130::CD,91308:CD,91309:CD,91311:CD,91570:CD,91571
91309 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 166::CF,91571:CD,91310
91308 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,91221
91311 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 301::CD,91312:CD,91316:CD,91411:CD,91415:JM,91568:JM,91238
91310 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v23 + #(-1)::DD,91571
91312 :: CALL :: call :: I :: v38 = p1 $seqResGroups .size()::JM,91568:JM,91316:JM,91415:JM,91238
91317 :: EXPR :: assign :: Z :: v39=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,91318
91316 :: PRED :: IF :: Z :: if (v36 < v38) goto 301::CD,91317:CD,91318:CD,91411:CD,91415:JM,91568:JM,91316:JM,91238
91318 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 241::CD,91321:CD,91326:CD,91331:CD,91336:CD,91340:CD,91345:CD,91350:CD,91355:CD,91363:CD,91364:CD,91365:CD,91572
91321 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::
91326 :: CALL :: call :: Ljava/lang/StringBuilder :: v144 = v140.append(v36)::
91331 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v144.append(#( > seqres! ))::
91336 :: CALL :: call :: I :: v148 = p1 $seqResGroups .size()::JM,91568:JM,91316:JM,91415:JM,91238
91340 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v146.append(v148)::JM,91568:JM,91415:JM,91238
91345 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(#( ))::
91350 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v152.append(v15)::
91355 :: CALL :: call :: Ljava/lang/String :: v156 = v154.toString()::
91363 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,91221
91365 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 511::CF,91572:CD,91368:CD,91373:CD,91378:CD,91383:CD,91387:CD,91392:CD,91397:CD,91402:CD,91410:CD,91563:CD,91564:CD,91568:CD,91573:CD,91574
91364 :: EXPR :: assign :: Z :: v40=v15 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,91365
91368 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
91373 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v119.append(v36)::
91378 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v123.append(#( > seqres! ))::
91383 :: CALL :: call :: I :: v128 = p1 $seqResGroups .size()::JM,91568:JM,91316:JM,91415:JM,91238
91387 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v126.append(v128)::JM,91568:JM,91415:JM,91238
91392 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v130.append(#( ))::
91397 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v15)::
91402 :: CALL :: call :: Ljava/lang/String :: v137 = v135.toString()::
91411 :: CALL :: call :: I :: v42 = p1 $seqResGroups .size()::JM,91568:JM,91316:JM,91415:JM,91238
91410 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,91221
91415 :: PRED :: IF :: Z :: if (v36 < v42) goto 347::CD,91418:CD,91423:CD,91428:CD,91436:CD,91437:CD,91439:CD,91445:CD,91449:CD,91453:CD,91457:CD,91461:CD,91466:CD,91572:JM,91568:JM,91316:JM,91415:JM,91238
91418 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
91423 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v36)::
91428 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
91437 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 511::CF,91572:CD,91438:CD,91563:CD,91564:CD,91568:CD,91573:CD,91574
91436 :: EXPR :: assign :: Z :: v52=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,91437
91439 :: CALL :: call :: Ljava/lang/Object :: v54 = p1 $seqResGroups .get(v36)::JM,91568:JM,91316:JM,91415:JM,91238
91438 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,91221
91445 :: CALL :: call :: Ljava/lang/String :: v57 = v55.getPDBName()::JM,91466:CL,75053
91449 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,91466
91453 :: CALL :: call :: Ljava/lang/String :: v61 = v15.getPDBName()::JM,91466:CL,75053
91457 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,91466
91461 :: CALL :: call :: Z :: v65 = v59.equals(v63)::JM,91466
91466 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 438::CD,91469:CD,91474:CD,91479:CD,91484:CD,91489:CD,91494:CD,91499:CD,91507:CD,91508:CD,91518:CD,91563:CD,91564:CD,91568:CD,91572:CD,91573:CD,91574
91469 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
91474 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v36)::
91479 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v104.append(#( and ATOM record: ))::
91484 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v107.append(v15)::
91489 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v109.append(#( | ))::
91494 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v112.append(v55)::
91499 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::
91507 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,91221
91508 :: CALL :: call :: Ljava/lang/Object :: v67 = v8.set(v36, v15)::
91518 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v36)::
91563 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v90 + #(1)::DD,91574:CF,91573
91564 :: CALL :: call :: I :: v12 = p2 $atmResGroups .size()::JM,91568:JM,91316:JM,91415:JM,91238
91569 :: NORM :: compound :: Ljava/util/List :: return v8::DD,91221
91568 :: PRED :: IF :: Z :: if (v90 < v12) goto 23::CD,91233:CD,91238:CD,91239:CD,91243:CD,91569:JM,91568:JM,91316:JM,91415
91571 :: EXPR :: assign :: null :: PHI v36 = v23, v35::DD,91316:DD,91415:JM,91568:JM,91238:CF,91311
91570 :: EXPR :: assign :: null :: PHI v33 = v89, #(0)::DD,91309:DD,91311:DD,91572
91573 :: EXPR :: assign :: null :: PHI v89 = #(1), v87::CF,91574:DD,91570:DD,91572
91572 :: EXPR :: assign :: null :: PHI v87 = v89, v33, v33, v33::DD,91573:CF,91563
91574 :: EXPR :: assign :: null :: PHI v90 = #(0), v88::JM,91316:JM,91415:JM,91238:DD,91563:DD,91568
91685 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::JM,80556:JM,80557:JM,80624:JM,91759:JM,103834:JM,128512:JM,128544:JM,128536:JM,128605:JM,128510:JM,128537:JM,128520:JM,128616:JM,128509:JM,128508
91684 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::CE,91685:CD,91689:CD,91696:CD,91721:CD,91725:CD,91726:JM,91715:JM,91710
91689 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,91726
91693 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .groups::JM,91705:JM,91725
91696 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,91705:JM,91725
91701 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,91705:JM,91725
91705 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::
91706 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v16 = v14.getType()::JM,91715:JM,91710:CL,70174:CL,70190:CL,70182
91710 :: CALL :: call :: Z :: v18 = v16.equals(p1 $type )::JM,91715:JM,91710
91715 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 56::CD,91716:JM,91705:JM,91725
91716 :: CALL :: call :: Z :: v20 = v4.add(v14)::
91721 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,91705:JM,91725
91725 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,91701:CD,91705:CD,91706:CD,91710:CD,91715:CD,91721:JM,91725:CF,91726
91726 :: NORM :: compound :: Ljava/util/List :: return v4::DD,91685
91742 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideChains(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,91750:CD,91755:CD,91759
91750 :: CALL :: call :: Ljava/util/List :: v7 = p2 $atomRes .getAtomGroups(v5)::JM,91759:CL,91684
91755 :: CALL :: call :: I :: v9 = v7.size()::JM,91759
91759 :: PRED :: IF :: Z :: if (v9 >= #(1)) goto 35::CD,91791:CD,91797
91791 :: CALL :: call :: Z :: v21 = p0 $this .alignNucleotideGroups(v17, v19)::JM,91797:CL,102027
91797 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,91798
91798 :: CALL :: call :: V :: p2 $atomRes .setSeqResGroups(v17)::CL,80733
91821 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::CE,91822:CD,91827:CD,91831:CD,91835:CD,91841:CD,91849:CD,91854:CD,91858:CD,91863:CD,91868:CD,91873:CD,91883:CD,91888:CD,91892:CD,91897:CD,91902:CD,91907:CD,91915:CD,91920:CD,91937:CD,91938:CD,91941:CD,91947:CD,91948:CD,91956:CD,91960
91822 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::JM,80658
91827 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
91831 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
91835 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(0))::CL,70271
91841 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(0))::CL,70271
91849 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
91854 :: CALL :: call :: I :: v19 = v11.length()::
91858 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v15.append(v19)::
91863 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#(): ))::
91868 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v24.append(v11)::
91873 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
91883 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
91888 :: CALL :: call :: I :: v35 = v13.length()::
91892 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(v35)::
91897 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#(): ))::
91902 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(v13)::
91907 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
91915 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v45 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,91956:JM,91961:JM,91960:JM,91965:JM,91948:JM,91998
91920 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v47 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,91956:JM,91961:JM,91960:JM,91965:JM,91948:JM,91998
91937 :: NORM :: compound :: Z :: return #(1)::DD,91822
91938 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v57 = getBlosum65()::JM,91956:JM,91961:JM,91960:JM,91965:JM,91948:JM,91998
91941 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v58 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,91956:JM,91961:JM,91960:JM,91965:JM,91948:JM,91998
91947 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v61 = LOCAL::JM,91956:JM,91961:JM,91960:JM,91965:JM,91948:JM,91998
91948 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v63 = getPairwiseAligner(v45, v47, v61, v58, v57)::JM,91956:JM,91961:JM,91960:JM,91965:JM,91948:JM,91998
91956 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v65 = v63.getPair()::JM,91956:JM,91961:JM,91960:JM,91965:JM,91948:JM,91998
91961 :: CALL :: call :: I :: v68 = v65.getLength()::JM,91961:JM,91965:JM,91998
91960 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 216::CD,91961:CD,91965:CD,91990:JM,91998
91965 :: PRED :: IF :: Z :: if (v68 != #(0)) goto 260::CD,91990:CD,91993:CD,91998:CD,92003:CD,92008:CD,92016:CD,92025
91990 :: NORM :: compound :: Z :: return #(1)::DD,91822
91993 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
91998 :: CALL :: call :: Ljava/lang/String :: v75 = v65.toString(#(100))::JM,91961:JM,91965:JM,91998
92003 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v70.append(v75)::
92008 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
92016 :: CALL :: call :: Z :: v82 = p0 $this .mapChains(p1 $seqRes , p2 $atomRes , v65, v5, v7)::JM,92025:CL,102424
92025 :: NORM :: compound :: Z :: return v82::DD,91822
92089 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::CE,92090:CD,92095:CD,92100:CD,92105:CD,92109:CD,92110:CD,92114:CD,92119:CD,92120:CD,92121:CD,92127:CD,92132:CD,92137:CD,92145:CD,92150
92090 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::JM,80885
92095 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,92109:CL,80900
92100 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,92109
92105 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,92109
92109 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,92120
92110 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,92119:CL,60024
92114 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,92119
92119 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,92105:CD,92109:CD,92110:CD,92114:CD,92121:CF,92120
92121 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,92109
92120 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,92090
92127 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
92132 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,92119
92137 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#(' for PDB id ))::
92142 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .pdb_id::
92145 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::
92150 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
92237 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::JM,81010
92236 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::CE,92237:CD,92252:CD,92257:CD,92262:CD,92270:CD,92274:CD,92279:CD,92284:CD,92293:CD,92299:CD,92303:CD,92308:CD,92312:CD,92317:CD,92321:CD,92326:CD,92327:CD,92328:CD,92334:CD,92339:CD,92344:CD,92349:CD,92354
92252 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
92257 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p3 $modelnr )::JM,92326
92262 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in this structure. (...))::
92267 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .models::
92270 :: CALL :: call :: I :: v52 = v50.size()::
92274 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v49.append(v52)::
92279 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#()))::
92284 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
92293 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v10 = p0 $this .findChain(p1 $chainId , p3 $modelnr )::CL,92089
92299 :: CALL :: call :: Ljava/util/List :: v12 = v10.getAtomGroups()::JM,92312:CL,70097
92303 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,92312
92308 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,92312
92312 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::DD,92327
92317 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,92326:CL,55711
92321 :: CALL :: call :: Z :: v26 = v24.equals(p2 $pdbResnum )::JM,92326
92327 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v20::DD,92237
92326 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 129::CD,92308:CD,92312:CD,92317:CD,92321:CD,92328:CF,92327
92328 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,92312
92334 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
92339 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(p2 $pdbResnum )::JM,92326
92344 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#( in chain ))::
92349 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(p1 $chainId )::JM,92326
92354 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,92326
92383 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompoundsFromAlignment()::CD,92387:CD,92391:CD,92436:CD,92440:CD,92444:CD,92445:CD,92449:CD,93052:CD,93056:CD,93057:CD,93123:CD,93127:CD,93129
92387 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::JM,93056:JM,92458:JM,92472:JM,93051:JM,93045:JM,93127
92391 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
92399 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v15 = v13.getChain(v29)::CL,103040
92404 :: CALL :: call :: Z :: v17 = isChainPureNonPolymer(v15)::JM,92408:CL,103057
92408 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 59::CD,92412:CD,92417:CD,92423:CD,92427
92412 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = v18.getChain(v29)::CL,103040
92417 :: CALL :: call :: Z :: v22 = v5.add(v20)::
92423 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v29)::
92427 :: CALL :: call :: Z :: v26 = v3.add(v24)::
92432 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,93129
92436 :: CALL :: call :: Ljava/util/List :: v10 = v8.getChains()::JM,92444:CL,55331
92440 :: CALL :: call :: I :: v12 = v10.size()::JM,92444
92445 :: NORM :: declaration :: Ljava/util/TreeMap :: v30 = new java.util.TreeMap::JM,93045
92444 :: PRED :: IF :: Z :: if (v29 < v12) goto 22::CF,92445:CD,92399:CD,92404:CD,92408:CD,92432:CD,92436:CD,92440:CD,93129
92449 :: CALL :: call :: Ljava/util/Iterator :: v33 = v3.iterator()::JM,93056:JM,92458
92454 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,93056:JM,92458
92459 :: CALL :: call :: I :: v40 = v38.intValue()::JM,92477
92458 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,92477
92463 :: CALL :: call :: Ljava/util/Iterator :: v42 = v3.iterator()::JM,92472:JM,93051
92468 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,92472:JM,93051
92473 :: CALL :: call :: I :: v49 = v47.intValue()::JM,92477
92472 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::JM,92477
92477 :: PRED :: IF :: Z :: if (v49 > v40) goto 163::CD,92482:CD,92490:CD,92495:CD,92499:CD,92507:CD,92517:CD,92523:CD,92528:CD,93047:CD,93051
92482 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v52 = v50.getChain(v40)::CL,103040
92490 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v55 = v53.getChain(v49)::CL,103040
92495 :: NORM :: declaration :: Ljava/util/HashMap :: v56 = new java.util.HashMap::
92499 :: NORM :: declaration :: Ljava/util/HashMap :: v58 = new java.util.HashMap::
92507 :: CALL :: call :: Ljava/lang/String :: v63 = getFullAtomSequence(v61, v56, #(0))::CL,70271
92517 :: CALL :: call :: Ljava/lang/String :: v67 = getFullAtomSequence(v65, v58, #(0))::CL,70271
92523 :: CALL :: call :: Z :: v70 = p0 $this .isProteinSequence(v63)::JM,92528:CL,103108
92529 :: CALL :: call :: Z :: v72 = p0 $this .isProteinSequence(v67)::JM,92534:CL,103108
92528 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 309::CD,92529:CD,92534:CD,92560:CD,92565
92535 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v74 = p0 $this .getProteinSequence(v63)::JM,92545:JM,93130:CL,103124
92534 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 309::CD,92535:CD,92540:CD,92545:CD,92549:CD,92553:CD,92560:CD,92565:CD,92641:CD,92645:CD,92649:CD,92653:CD,92657:CD,92658:CD,92662:CD,92663:CD,92664:CD,92665:CD,92666:CD,92667:CD,92668:CD,92669:CD,92670:CD,92691:CD,92699:CD,92709:CD,92717:CD,92727:CD,92735:CD,92751:CD,92756:CD,92761:CD,92766:CD,92774:CD,92775:CD,92958:CD,92959:CD,93037:CD,93041:CD,93045:CD,93130:CD,93131:CD,93132
92540 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v76 = p0 $this .getProteinSequence(v67)::JM,92549:JM,93131:CL,103124
92545 :: CALL :: call :: I :: v78 = v74.getLength()::JM,92545:JM,93130
92549 :: CALL :: call :: I :: v80 = v76.getLength()::JM,92549:JM,93131
92553 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v82 = p0 $this .alignProtein(v74, v76)::JM,93132:CL,103149
92560 :: CALL :: call :: Z :: v84 = p0 $this .isDNASequence(v63)::JM,92565:CL,103189
92565 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 370::CD,92566:CD,92571:CD,92597:CD,92602
92566 :: CALL :: call :: Z :: v86 = p0 $this .isDNASequence(v67)::JM,92571:CL,103189
92571 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 370::CD,92572:CD,92577:CD,92582:CD,92586:CD,92590:CD,92597:CD,92602:CD,92641:CD,92645:CD,92649:CD,92653:CD,92657:CD,92658:CD,92662:CD,92663:CD,92664:CD,92665:CD,92666:CD,92667:CD,92668:CD,92669:CD,92670:CD,92691:CD,92699:CD,92709:CD,92717:CD,92727:CD,92735:CD,92751:CD,92756:CD,92761:CD,92766:CD,92774:CD,92775:CD,92958:CD,92959:CD,93037:CD,93041:CD,93045:CD,93130:CD,93131:CD,93132
92572 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v88 = p0 $this .getDNASequence(v63)::JM,92582:JM,93130:CL,103205
92577 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v90 = p0 $this .getDNASequence(v67)::JM,93131:JM,92586:CL,103205
92582 :: CALL :: call :: I :: v92 = v88.getLength()::JM,92582:JM,93130
92586 :: CALL :: call :: I :: v94 = v90.getLength()::JM,93131:JM,92586
92590 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v96 = p0 $this .alignDNA(v88, v90)::JM,93132:CL,103230
92597 :: CALL :: call :: Z :: v98 = p0 $this .isRNASequence(v63)::JM,92602:CL,103270
92603 :: CALL :: call :: Z :: v100 = p0 $this .isRNASequence(v67)::JM,92608:CL,103270
92602 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 428::CD,92603:CD,92608:CD,93047:CD,93051
92609 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v102 = p0 $this .getRNASequence(v63)::JM,92619:JM,93130:CL,103286
92608 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 428::CD,92609:CD,92614:CD,92619:CD,92623:CD,92627:CD,92641:CD,92645:CD,92649:CD,92653:CD,92657:CD,92658:CD,92662:CD,92663:CD,92664:CD,92665:CD,92666:CD,92667:CD,92668:CD,92669:CD,92670:CD,92691:CD,92699:CD,92709:CD,92717:CD,92727:CD,92735:CD,92751:CD,92756:CD,92761:CD,92766:CD,92774:CD,92775:CD,92958:CD,92959:CD,93037:CD,93041:CD,93045:CD,93047:CD,93051:CD,93130:CD,93131:CD,93132
92614 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v104 = p0 $this .getRNASequence(v67)::JM,93131:JM,92623:CL,103286
92619 :: CALL :: call :: I :: v106 = v102.getLength()::JM,92619:JM,93130
92623 :: CALL :: call :: I :: v108 = v104.getLength()::JM,93131:JM,92623
92627 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v110 = p0 $this .alignRNA(v102, v104)::JM,93132:CL,103311
92641 :: CALL :: call :: I :: v117 = getNumGaps(v113)::JM,92657:CL,103351
92645 :: CALL :: call :: I :: v119 = getNumGapsQuery(v113)::JM,92665:CL,103387
92649 :: CALL :: call :: I :: v121 = getNumGapsTarget(v113)::JM,92668:CL,103434
92653 :: CALL :: call :: I :: v123 = v113.getLength()::JM,92657:JM,92653
92657 :: EXPR :: assign :: Ljava/lang/Object :: v124 = v123 - v117::DD,92663:JM,92658:JM,92662
92658 :: CALL :: call :: I :: v126 = v113.getNumIdenticals()::JM,92658:JM,92662
92663 :: EXPR :: assign :: D :: v128 = CONVERT I to D v124::CF,92664
92662 :: EXPR :: assign :: D :: v127 = CONVERT I to D v126::DD,92664:CF,92663
92665 :: EXPR :: assign :: D :: v130 = CONVERT I to D v119::DD,92667:CF,92666
92664 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v127 / v128::JM,92691:DD,92774:DD,92958:JM,92999:CF,92665
92667 :: EXPR :: assign :: Ljava/lang/Object :: v132 = v130 / v131::JM,92709:DD,92776:CF,92668
92666 :: EXPR :: assign :: D :: v131 = CONVERT I to D v111::CF,92667
92669 :: EXPR :: assign :: D :: v134 = CONVERT I to D v112::CF,92670
92668 :: EXPR :: assign :: D :: v133 = CONVERT I to D v121::DD,92670:CF,92669
92670 :: EXPR :: assign :: Ljava/lang/Object :: v135 = v133 / v134::JM,92727:DD,92778
92691 :: CALL :: call :: Ljava/lang/Double :: v148 = valueOf(v129)::JM,92691
92699 :: CALL :: call :: Ljava/lang/String :: v150 = format(#(%4.2f), v146)::
92709 :: CALL :: call :: Ljava/lang/Double :: v154 = valueOf(v132)::JM,92709
92717 :: CALL :: call :: Ljava/lang/String :: v156 = format(#(%4.2f), v152)::
92727 :: CALL :: call :: Ljava/lang/Double :: v160 = valueOf(v135)::JM,92727
92735 :: CALL :: call :: Ljava/lang/String :: v162 = format(#(%4.2f), v158)::
92751 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
92756 :: CALL :: call :: Ljava/lang/String :: v170 = v113.toString(#(100))::JM,92756
92761 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v165.append(v170)::
92766 :: CALL :: call :: Ljava/lang/String :: v174 = v172.toString()::
92775 :: PRED :: IF :: Z :: if (v177 <= #(0)) goto 952::CD,92776:CD,92777
92774 :: EXPR :: assign :: Z :: v177 = v129 < #(0.99999 d)::DD,92775
92777 :: PRED :: IF :: Z :: if (v179 >= #(0)) goto 952::CD,92778:CD,92779
92776 :: EXPR :: assign :: Z :: v179 = v132 > #(0.3 d)::DD,92777
92779 :: PRED :: IF :: Z :: if (v180 >= #(0)) goto 952::CD,92784:CD,92789:CD,92936
92778 :: EXPR :: assign :: Z :: v180 = v135 > #(0.3 d)::DD,92779
92784 :: CALL :: call :: Z :: v184 = v30.containsKey(v182)::JM,92789
92789 :: PRED :: IF :: Z :: if (v184 != #(0)) goto 785::CD,92794:CD,92799:CD,92858:CD,92863:CD,92864
92794 :: CALL :: call :: Z :: v188 = v30.containsKey(v186)::JM,92799
92799 :: PRED :: IF :: Z :: if (v188 != #(0)) goto 785::JM,63952:JM,63959:CD,92820:CD,92824:CD,92829:CD,92837:CD,92847:CD,92858:CD,92863:CD,92864
92820 :: CALL :: call :: V :: v196.addChain(v52)::CL,80913
92824 :: CALL :: call :: V :: v196.addChain(v55)::CL,80913
92829 :: CALL :: call :: V :: v196.setMolId(v290)::CL,80986
92837 :: CALL :: call :: Ljava/lang/Object :: v205 = v30.put(v203, v196)::
92847 :: CALL :: call :: Ljava/lang/Object :: v209 = v30.put(v207, v196)::
92858 :: CALL :: call :: Ljava/lang/Object :: v213 = v30.get(v211)::JM,92863
92863 :: EXPR :: assign :: Ljava/lang/Object :: v214 = CHECKCAST v213::DD,92864
92864 :: PRED :: IF :: Z :: if (v214 != #(null)) goto 868::CD,92885:CD,92891:CD,92899:CD,92922:CD,92930
92885 :: CALL :: call :: Ljava/lang/Object :: v225 = v30.get(v223)::
92891 :: CALL :: call :: V :: v226.addChain(v52)::CL,80913
92899 :: CALL :: call :: Ljava/lang/Object :: v231 = v30.put(v229, v226)::
92922 :: CALL :: call :: V :: v214.addChain(v55)::CL,80913
92930 :: CALL :: call :: Ljava/lang/Object :: v242 = v30.put(v240, v214)::
92936 :: CALL :: call :: Z :: v246 = areResNumbersAligned(v52, v55)::CL,103651
92959 :: PRED :: IF :: Z :: if (v256 <= #(0)) goto 1054::CD,92979:CD,92983:CD,92991:CD,92999:CD,93014:CD,93019:CD,93024:CD,93029:JM,93045
92958 :: EXPR :: assign :: Z :: v256 = v129 < #(1.0 d)::DD,92959
92979 :: CALL :: call :: I :: v265 = v113.getNumIdenticals()::JM,92979
92983 :: CALL :: call :: Ljava/lang/Integer :: v267 = valueOf(v265)::
92991 :: CALL :: call :: Ljava/lang/Integer :: v269 = valueOf(v124)::
92999 :: CALL :: call :: Ljava/lang/Double :: v271 = valueOf(v129)::JM,92999
93014 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v274 = new java.lang.StringBuilder::
93019 :: CALL :: call :: Ljava/lang/String :: v277 = v113.toString(#(100))::JM,93019
93024 :: CALL :: call :: Ljava/lang/StringBuilder :: v279 = v274.append(v277)::
93029 :: CALL :: call :: Ljava/lang/String :: v281 = v279.toString()::
93037 :: CALL :: call :: I :: v284 = v30.size()::JM,93045
93041 :: CALL :: call :: I :: v286 = v3.size()::JM,93045
93045 :: PRED :: IF :: Z :: if (v284 != v286) goto 1071::CD,93047:CD,93051
93047 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,92472:JM,93051
93051 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 139::CD,92468:CD,92472:CD,92473:CD,92477:CD,93052:CD,93056:JM,93051
93052 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,93056:JM,92458
93057 :: CALL :: call :: Ljava/util/Iterator :: v294 = v3.iterator()::JM,93127
93056 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 113::CD,92454:CD,92458:CD,92459:CD,92463:CD,93047:CD,93051:JM,93056
93062 :: CALL :: call :: Ljava/lang/Object :: v298 = v294.next()::JM,93127
93074 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v304 = v302.getChain(v301)::CL,103040
93083 :: CALL :: call :: Z :: v308 = v30.containsKey(v306)::JM,93088
93088 :: PRED :: IF :: Z :: if (v308 != #(0)) goto 1202::JM,63952:JM,63959:CD,93104:CD,93109:CD,93117
93104 :: CALL :: call :: V :: v316.addChain(v304)::CL,80913
93109 :: CALL :: call :: V :: v316.setMolId(v325)::CL,80986
93117 :: CALL :: call :: Ljava/lang/Object :: v324 = v30.put(v322, v316)::
93123 :: CALL :: call :: Z :: v296 = v294.hasNext()::JM,93127
93127 :: PRED :: IF :: Z :: if (v296 != #(0)) goto 1102::CD,93062:CD,93074:CD,93083:CD,93088:CD,93123:JM,93127
93129 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,92432:DD,92444
93131 :: EXPR :: assign :: null :: PHI v112 = v80, v94, v108::CF,93132:DD,92669
93130 :: EXPR :: assign :: null :: PHI v111 = v78, v92, v106::CF,93131:DD,92666
93132 :: EXPR :: assign :: null :: PHI v113 = v82, v96, v110::JM,92657:JM,92653:JM,92658:JM,92662:JM,92756:JM,92979:JM,93019
93431 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::JM,81066
93430 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::CE,93431:CD,93434:CD,93438:CD,93442:CD,93475:CD,93479:CD,93480:JM,93451
93434 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,93461:JM,93468:DD,93480
93438 :: CALL :: call :: Ljava/util/Collection :: v6 = p1 $chainIds2entities .values()::JM,93479:JM,93451
93442 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,93479:JM,93451
93447 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,93479:JM,93451
93451 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,93462:JM,93461:JM,93468
93452 :: CALL :: call :: Ljava/util/Iterator :: v16 = v3.iterator()::JM,93461:JM,93468
93457 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,93461:JM,93468
93461 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,93462
93462 :: PRED :: IF :: Z :: if (v21 != v14) goto 71::CD,93464:CD,93468:CD,93481:JM,93461
93464 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,93461:JM,93468
93469 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 93::CD,93470:JM,93479:JM,93451
93468 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,93481:CD,93457:CD,93461:CD,93462:JM,93468
93470 :: CALL :: call :: Z :: v25 = v3.add(v14)::
93475 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,93479:JM,93451
93479 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,93447:CD,93451:CD,93452:CD,93464:CD,93468:CD,93469:CD,93475:CD,93481:JM,93479:CF,93480
93481 :: EXPR :: assign :: null :: PHI v23 = #(1), #(0)::DD,93469
93480 :: NORM :: compound :: Ljava/util/List :: return v3::DD,93431
93507 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.createPurelyNonPolyCompounds(java.util.List)::CD,93512:CD,93547:CD,93551:CD,93555:CD,93556:CD,93560:CD,93632:JM,93565
93512 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,93560:JM,93630
93520 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = v12.getChain(v24)::CL,103040
93525 :: CALL :: call :: Z :: v16 = isChainPureNonPolymer(v14)::JM,93529:CL,103057
93529 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 46::CD,93533:CD,93538:CF,93543
93533 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v19 = v17.getChain(v24)::CL,103040
93538 :: CALL :: call :: Z :: v21 = v4.add(v19)::
93543 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,93632
93547 :: CALL :: call :: Ljava/util/List :: v9 = v7.getChains()::JM,93555:CL,55331
93551 :: CALL :: call :: I :: v11 = v9.size()::JM,93555
93555 :: PRED :: IF :: Z :: if (v24 < v11) goto 14::CD,93520:CD,93525:CD,93529:CD,93543:CD,93547:CD,93551:CD,93632:JM,93560
93556 :: CALL :: call :: Z :: v26 = v4.isEmpty()::JM,93560
93561 :: CALL :: call :: Z :: v28 = p1 $compounds .isEmpty()::JM,93565
93560 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 201::CD,93561:CD,93565:CD,93581:CD,93582:CD,93626:CD,93630:CD,93633
93565 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 108::CD,93571:CF,93581
93571 :: CALL :: call :: Ljava/lang/Object :: v32 = max(p1 $compounds , v29)::
93581 :: EXPR :: assign :: Ljava/lang/Object :: v36 = #(0) + #(1)::DD,93633:JM,93630
93582 :: CALL :: call :: Ljava/util/Iterator :: v38 = v4.iterator()::JM,93630
93587 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,93630
93592 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v44 = new org.biojava.nbio.structure.Compound::JM,93565
93596 :: CALL :: call :: V :: v44.addChain(v43)::CL,80913
93600 :: CALL :: call :: V :: v44.setMolId(v58)::CL,80986
93610 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v58)::
93621 :: CALL :: call :: Z :: v57 = p1 $compounds .add(v44)::JM,93565
93620 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v58 + #(1)::DD,93633:JM,93565
93626 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,93630
93630 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 124::CD,93587:CD,93592:JM,63952:JM,63959:CD,93596:CD,93600:CD,93610:CD,93620:CD,93621:CD,93626:CD,93633:JM,93630
93633 :: EXPR :: assign :: null :: PHI v58 = v36, v55::JM,93630:DD,93620
93632 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::DD,93543:DD,93555
93683 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::CE,93684:CD,93688:CD,93695:CD,93704:CD,93709:CD,93713:CD,93717:CD,93722:CD,93723:CD,93725:CD,93730:CD,93735:CD,93743:CD,93748
93684 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::JM,122588
93688 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $resNum .toString()::CL,55711
93695 :: CALL :: call :: Z :: v8 = v6.containsKey(v5)::
93704 :: CALL :: call :: Ljava/lang/Object :: v27 = v25.get(v5)::JM,93709
93709 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::JM,93722
93710 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .groups::JM,93722
93713 :: CALL :: call :: I :: v31 = v28.intValue()::JM,93722
93717 :: CALL :: call :: Ljava/lang/Object :: v33 = v29.get(v31)::JM,93722
93723 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v34::DD,93684
93722 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::CF,93723
93725 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
93730 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v5)::
93735 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#( in chain ))::
93740 :: EXPR :: reference :: Ljava/lang/String :: v19 = p0 $this .chainID::
93743 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(v19)::
93748 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
93767 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocGroup(java.lang.Character)::CD,93772:CD,93777:JM,93842:JM,93788
93772 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .getAtom(#(0))::JM,93777:CL,87108
93777 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 13::CD,93779:CD,93783:CD,93788
93779 :: CALL :: call :: Ljava/lang/Character :: v9 = v6.getAltLoc()::JM,93788:CL,75648
93783 :: CALL :: call :: Z :: v11 = v9.equals(p1 $altLoc )::JM,93788:JM,93842
93788 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 28::CD,93793
93790 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .altLocs::DD,93793
93793 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 47::CD,93797:CD,93801
93794 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .altLocs::JM,93801
93797 :: CALL :: call :: Z :: v15 = v13.isEmpty()::JM,93801
93801 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 49::CD,93806:CD,93844:CD,93848
93803 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .altLocs::JM,93848
93806 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,93848
93811 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,93848
93816 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,93824:CL,75639
93820 :: CALL :: call :: Z :: v27 = v25.isEmpty()::JM,93824
93824 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,93826:CD,93831:CD,93844:CD,93848
93826 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v29 = v23.getAtom(#(0))::JM,93831:CL,87108
93831 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 109::CD,93833:CD,93837:CD,93842:CD,93844:CD,93848
93833 :: CALL :: call :: Ljava/lang/Character :: v31 = v29.getAltLoc()::JM,93842:CL,75648
93837 :: CALL :: call :: Z :: v33 = v31.equals(p1 $altLoc )::JM,93842:JM,93788
93842 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 125::CD,93844:CD,93848
93844 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,93848
93848 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 64::CD,93811:CD,93816:CD,93820:CD,93824:JM,93848
93894 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomA = p1 $atomA ::
93897 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomB = p2 $atomB ::
93900 :: EXPR :: modify :: I :: p0 $this .bondOrder = p3 $bondOrder ::
93903 :: PRED :: IF :: Z :: if (p4 $addSelfToAtoms  == #(0)) goto 28::CD,93904
93904 :: CALL :: call :: V :: p0 $this .addSelfToAtoms()::CL,103922
93972 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addSSBond(org.biojava.nbio.structure.Bond)::CD,93980
93977 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .ssbonds::
93980 :: CALL :: call :: Z :: v6 = v4.add(p1 $ssbond )::
93989 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.toString()::CD,93993:CD,93994:CD,94002:CD,94007:CD,94011:CD,94012:CD,94020:CD,94028:CD,94033:CD,94038:CD,94042:CD,94043:CD,94051:CD,94059:CD,94064:CD,94069:CD,94073:CD,94074:CD,94082:CD,94090:CD,94095:CD,94100:CD,94104:CD,94105:CD,94113:CD,94118:CD,94122:CD,94123:CD,94131:CD,94139:CD,94144:CD,94149:CD,94153:CD,94154:CD,94162:CD,94170:CD,94175:CD,94180:CD,94184:CD,94185:CD,94193:CD,94201:CD,94206:CD,94211:CD,94215:CD,94216:CD,94224:CD,94229
93993 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
93994 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([SSBOND:))::
94002 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
94007 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
94011 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
94012 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
94020 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Chain: ))::
94025 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .chainID1::
94028 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
94033 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
94038 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
94043 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
94042 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
94051 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Residue #: ))::
94056 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::
94059 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
94064 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
94069 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
94073 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
94074 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
94082 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Ins. Code: ))::
94087 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .insCode1::
94090 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
94095 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
94100 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
94105 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
94104 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
94113 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(Atom 2:))::
94118 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
94123 :: CALL :: call :: Ljava/lang/String :: v67 = valueOf(v64)::
94122 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
94131 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(#(	Chain: ))::
94136 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .chainID2::
94139 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v70.append(v71)::
94144 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v73.append(#())::
94149 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
94153 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::
94154 :: CALL :: call :: Ljava/lang/String :: v80 = valueOf(v77)::
94162 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v78.append(#(	Residue #: ))::
94167 :: EXPR :: reference :: Ljava/lang/String :: v84 = p0 $this .resnum2::
94170 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v83.append(v84)::
94175 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#())::
94180 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
94185 :: CALL :: call :: Ljava/lang/String :: v93 = valueOf(v90)::
94184 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
94193 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v91.append(#(	Ins. Code: ))::
94198 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .insCode2::
94201 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(v97)::
94206 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(#())::
94211 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
94215 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
94216 :: CALL :: call :: Ljava/lang/String :: v106 = valueOf(v103)::
94224 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(#(]))::
94229 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
94285 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getC()::CE,94286:CD,94289:CD,94294
94286 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getC()::JM,82085
94289 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(C))::JM,94294:CL,70198
94294 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,94286
94297 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getN()::CE,94298:CD,94301:CD,94306
94298 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getN()::JM,82086
94301 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(N))::JM,94306:CL,70198
94306 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,94298
94309 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getP()::CE,94310:CD,94313:CD,94318
94310 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getP()::JM,82238
94313 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(P))::JM,94318:CL,70198
94318 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,94310
94321 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::CE,94322:CD,94325:CD,94330
94322 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::JM,82239
94325 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(O3'))::JM,94330:CL,70198
94330 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,94322
94333 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::CE,94334:CD,94340
94334 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::JM,82458
94337 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,94340
94340 :: NORM :: compound :: Ljava/util/List :: return v3::CF,94334
94343 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.AtomImpl.getBonds()::JM,82587:JM,82596:JM,82601:JM,103995:JM,103933
94342 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getBonds()::CE,94343:CD,94349
94346 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,94349
94349 :: NORM :: compound :: Ljava/util/List :: return v3::CF,94343
94467 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::JM,82750
94466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::CE,94467:CD,94471:CD,94475:CD,94479:CD,94484
94471 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::JM,94484
94475 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::JM,94484
94479 :: CALL :: call :: Z :: v11 = v7.equals(#(?))::JM,94484
94485 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return #(null)::DD,94467
94484 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 23::CD,94485:CD,94486:CD,94490:CD,94494:CD,94498:CD,94503:CD,94630
94486 :: CALL :: call :: Z :: v14 = fileExists(v7)::JM,94490:CL,104024
94491 :: CALL :: call :: V :: p0 $this .checkDoFirstInstall()::CL,104048
94490 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 34::CD,94491
94494 :: CALL :: call :: Z :: v17 = fileExists(v7)::JM,94498:CL,104024
94499 :: CALL :: call :: Z :: v19 = downloadChemCompRecord(v7)::JM,94630:CL,104137
94498 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CF,94630:CD,94499
94503 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 268::CD,94504:JM,84999:JM,117026:JM,117012:JM,104585:JM,117019:CD,94525:CD,94529:CD,94530:CD,94539:CD,94547:CD,94564:CD,94619:CD,94624
94504 :: CALL :: call :: Ljava/lang/String :: v22 = getLocalFileName(v7)::CL,104445
94525 :: CALL :: call :: V :: v28.addMMcifConsumer(v30)::CL,85057
94529 :: NORM :: declaration :: Ljava/io/BufferedReader :: v33 = new java.io.BufferedReader::CF,94530
94530 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v34 = new java.io.InputStreamReader::
94539 :: CALL :: call :: V :: v28.parse(v33)::CL,85074
94547 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v61 = v59.getChemComp(v7)::JM,94564:CL,104605
94564 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v61::DD,94467
94619 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v57 = v54.getChemComp(v7)::JM,94624:CL,104639
94624 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v57::DD,94467
94630 :: EXPR :: assign :: null :: PHI v20 = #(1), v19::DD,94503
94685 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::JM,82857:JM,82963
94684 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::CE,94685:CD,94691:CD,94695
94688 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::JM,94695
94691 :: CALL :: call :: I :: v5 = v3.size()::JM,94695
94695 :: NORM :: compound :: I :: return v5::CF,94685
94697 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::CE,94698:CD,94705:CD,94710:CD,94711
94698 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::JM,120953
94702 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .groups::JM,94710
94705 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $position )::JM,94710
94711 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,94698
94710 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,94711
94990 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainDescriptionInstalled()::CD,94997:CD,95001:CD,95014:CD,95026:CD,95037:CD,95049
94994 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainDescription::JM,95001
94997 :: CALL :: call :: Z :: v5 = v3.get()::JM,95001
95001 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,95003:CD,95007:CD,95031:CD,95057
95003 :: CALL :: call :: Z :: v8 = p0 $this .domainDescriptionFileAvailable()::JM,95007:CL,104951
95007 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,95008
95008 :: CALL :: call :: V :: p0 $this .downloadDomainDescriptionFile()::CL,104975
95014 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
95023 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainDescription::
95026 :: CALL :: call :: V :: v16.set(#(0))::
95031 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile()::CL,105018
95037 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
95046 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainDescription::
95049 :: CALL :: call :: V :: v24.set(#(0))::
95054 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainDescription::JM,95057
95057 :: CALL :: call :: V :: v26.set(#(1))::JM,95057
95073 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomallInstalled()::CD,95077:CD,95083:CD,95087:CD,95116:CD,95128:CD,95139:CD,95151
95077 :: CALL :: call :: V :: p0 $this .ensureDomainListInstalled()::CL,105067
95080 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v4 = p0 $this .installedDomainList::JM,95087
95083 :: CALL :: call :: Z :: v6 = v4.get()::JM,95087
95087 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 24::CD,95091:CD,95099:CD,95103
95088 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v33 = p0 $this .installedDomall::JM,95091
95091 :: CALL :: call :: V :: v33.set(#(0))::JM,95091
95096 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedDomall::JM,95103
95099 :: CALL :: call :: Z :: v10 = v8.get()::JM,95103
95103 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 35::CD,95105:CD,95109:CD,95133:CD,95159
95105 :: CALL :: call :: Z :: v12 = p0 $this .domallFileAvailable()::JM,95109:CL,105150
95109 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 74::CD,95110
95110 :: CALL :: call :: V :: p0 $this .downloadDomallFile()::CL,105174
95116 :: CALL :: call :: Ljava/lang/String :: v18 = v14.getMessage()::
95125 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v20 = p0 $this .installedDomall::
95128 :: CALL :: call :: V :: v20.set(#(0))::
95133 :: CALL :: call :: V :: p0 $this .parseCathDomall()::CL,105217
95139 :: CALL :: call :: Ljava/lang/String :: v26 = v23.getMessage()::
95148 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v28 = p0 $this .installedDomall::
95151 :: CALL :: call :: V :: v28.set(#(0))::
95156 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v30 = p0 $this .installedDomall::JM,95159
95159 :: CALL :: call :: V :: v30.set(#(1))::JM,95159
95180 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase(java.lang.String)::CD,95184:CD,95189:CD,95194:CD,95199:CD,95212:CD,95217:CD,95222:CD,95230:CD,95234:CD,95238:CD,95243:CD,95244:CD,95250:CD,95335:CD,95340:CD,95345:CD,95359:CD,95360
95185 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.ecod.EcodFactory.defaultVersion::DD,95359
95184 :: PRED :: IF :: Z :: if (p1 $version  != #(null)) goto 8::CF,95359:CD,95185
95189 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
95194 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(v5)::
95199 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
95212 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
95217 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(v5)::
95222 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
95230 :: CALL :: call :: V :: releaseReferences()::CL,105266
95234 :: CALL :: call :: Ljava/lang/String :: v28 = v5.toLowerCase()::
95238 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,95243
95243 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,95244:JM,95249
95245 :: CALL :: call :: Ljava/lang/Object :: v33 = v31.get()::JM,95249
95244 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 96::CF,95360:CD,95245:CD,95249
95249 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::DD,95360
95250 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 210::CD,95254:JM,40533:JM,40540:CD,95272:JM,105349:JM,105356:JM,105359:CD,95280:CD,95284:CD,95289:CD,95297:CD,95301:CD,95305:CD,95310
95254 :: CALL :: call :: Ljava/lang/String :: v40 = v38.getSimpleName()::
95272 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodInstallation :: v46 = new org.biojava.nbio.structure.ecod.EcodInstallation::
95280 :: CALL :: call :: Ljava/lang/String :: v50 = v5.toLowerCase()::
95284 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v51 = new java.lang.ref.SoftReference::
95289 :: CALL :: call :: Ljava/lang/Object :: v54 = v48.put(v50, v51)::
95297 :: CALL :: call :: Ljava/lang/String :: v57 = v46.getVersion()::CL,105416
95301 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toLowerCase()::
95305 :: CALL :: call :: Z :: v61 = v55.containsKey(v59)::JM,95310
95310 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 210::CD,95313:CD,95317:CD,95321:CD,95326
95313 :: CALL :: call :: Ljava/lang/String :: v65 = v46.getVersion()::CL,105416
95317 :: CALL :: call :: Ljava/lang/String :: v68 = v65.toLowerCase()::
95321 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v69 = new java.lang.ref.SoftReference::
95326 :: CALL :: call :: Ljava/lang/Object :: v72 = v63.put(v68, v69)::
95335 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::
95340 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v76.append(v5)::
95345 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
95359 :: EXPR :: assign :: null :: PHI v5 = p1 $version , v4::
95360 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,95250
95409 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::JM,83452:JM,83487:JM,83503
95408 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::CE,95409:CD,95468:CD,95469:CD,95477:CD,95482:CD,95483
95446 :: CALL :: call :: V :: p0 $this .indexDomains()::CL,105440
95465 :: EXPR :: reference :: Ljava/util/Map :: v11 = p0 $this .domainMap::DD,95468
95469 :: PRED :: IF :: Z :: if (p1 $pdbId  == #(null)) goto 96::CD,95470
95468 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 27::CD,95446:CF,95469
95470 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $pdbId .toLowerCase()::
95477 :: CALL :: call :: Ljava/lang/Object :: v32 = v30.get(v29)::JM,95482
95483 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 139::CF,95501:CD,95500:CD,95502:CD,95510:CD,95530:CD,95534:CD,95551
95482 :: EXPR :: assign :: Ljava/lang/Object :: v33 = CHECKCAST v32::DD,95483:JM,95534
95501 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,95551
95500 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,95409
95502 :: CALL :: call :: I :: v36 = v33.size()::
95510 :: CALL :: call :: Ljava/util/Iterator :: v39 = v33.iterator()::JM,95534
95515 :: CALL :: call :: Ljava/lang/Object :: v44 = v39.next()::JM,95534
95520 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v46 = new org.biojava.nbio.structure.ecod.EcodDomain::
95525 :: CALL :: call :: Z :: v49 = v34.add(v46)::
95530 :: CALL :: call :: Z :: v41 = v39.hasNext()::JM,95534
95534 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 166::CD,95515:CD,95520:JM,105753:CD,95525:CD,95530:JM,95534
95551 :: NORM :: compound :: Ljava/util/List :: return v34::DD,95409
95611 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::JM,83497:JM,105499:JM,105498:JM,105503
95610 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::CE,95611:CD,95617
95614 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainId::DD,95617
95617 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,95611
95619 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String)::CD,95623
95623 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v5 = getSCOP(p1 $version , #(0))::CL,105803
95631 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::CE,95632:CD,95636:CD,95641:CD,95642:CD,95643:CD,95651:CD,95656:CD,95661:CD,95666:CD,95671:CD,95675:CD,95680:CD,95690
95632 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::JM,83585:JM,83584
95636 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = p0 $this .requestRemoteDomainByScopID(p1 $scopId )::JM,95641:CL,105923
95641 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v5::DD,95632
95643 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
95642 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v7 = new java.lang.RuntimeException::
95648 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .server::
95651 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(v11)::
95656 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(getDomainByScopID?scopId=))::
95661 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(p1 $scopId )::
95666 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#(&version=))::
95671 :: CALL :: call :: Ljava/lang/String :: v23 = p0 $this .getScopVersion()::CL,106018
95675 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v23)::
95680 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
95690 :: EXPR :: assign :: Ljava/lang/Exception :: v6 = catch <exc>::
95693 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::CE,95694:CD,95698:CD,95714:CD,95719:CD,95724:CD,95733:CD,95739:CD,95744:JM,95765
95694 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::JM,83585:JM,83584
95698 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,106128
95714 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
95719 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(p1 $scopId )::JM,95765
95724 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,95765
95733 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $scopId .substring(#(1), #(5))::JM,95765
95739 :: CALL :: call :: Ljava/util/List :: v16 = p0 $this .getDomainsForPDB(v14)::JM,95744:JM,95755:JM,95771:CL,95798
95745 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,95694
95744 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 71::CD,95745:CD,95746:CD,95767:CD,95771:JM,95755
95746 :: CALL :: call :: Ljava/util/Iterator :: v19 = v16.iterator()::JM,95755:JM,95771
95751 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,95755:JM,95771
95755 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,95766
95756 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getScopId()::JM,95765:CL,96055
95760 :: CALL :: call :: Z :: v29 = v27.equalsIgnoreCase(p1 $scopId )::JM,95765
95765 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 110::CD,95766:CD,95767:CD,95771:JM,95755
95767 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,95755:JM,95771
95766 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v25::DD,95694
95771 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,95751:CD,95755:CD,95756:CD,95760:CD,95765:CD,95772:JM,95771
95772 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,95694
95799 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::JM,83746:JM,83647:JM,95744:JM,95755:JM,95771
95798 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::CE,95799:CD,95803:CD,95816:CD,95820:CD,95825:CD,95826:CD,95830:CD,95853:CD,95854:CD,95859:CD,95864:CD,95869:CD,95886
95803 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,106128
95816 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .toLowerCase()::
95820 :: CALL :: call :: Ljava/lang/Object :: v12 = v8.get(v10)::JM,95825
95825 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,95830:JM,95883:CF,95826
95826 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,95831:DD,95884
95831 :: NORM :: compound :: Ljava/util/List :: return v14::DD,95799
95830 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 49::CD,95831:CD,95832:CD,95879:CD,95883:CD,95884
95832 :: CALL :: call :: Ljava/util/Iterator :: v18 = v13.iterator()::JM,95883
95837 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.next()::JM,95883
95842 :: CALL :: call :: Ljava/lang/Object :: v26 = v24.clone()::JM,95846:CL,106192
95847 :: CALL :: call :: Z :: v29 = v14.add(v27)::
95846 :: EXPR :: assign :: Ljava/lang/Object :: v27 = CHECKCAST v26::
95853 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v31 = new java.lang.RuntimeException::
95854 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
95859 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v32.append(v34)::
95864 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( subclass does not su...))::
95869 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
95879 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,95883
95883 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 61::CD,95837:CD,95842:CD,95846:CD,95847:CD,95879:JM,95883:CF,95884
95884 :: NORM :: compound :: Ljava/util/List :: return v14::DD,95799
95886 :: EXPR :: assign :: Ljava/lang/Exception :: v30 = catch <exc>::
95909 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::JM,83746:JM,83647
95908 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::CE,95909:CD,95914:CD,95918:CD,95926:CD,95931:CD,95936:CD,95941:CD,95945:CD,95950:CD,95958:CD,95962:CD,95966:CD,95970:CD,95974:CD,95984:CD,95985:CD,95993:CD,95998:CD,96003:CD,96008:CD,96013:CD,96017:CD,96022:CD,96032:CD,96033:CD,96034
95914 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
95918 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
95926 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getDomainsForPDB?pdbId=))::
95931 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p1 $pdbId )::
95936 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(&version=))::
95941 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getScopVersion()::CL,106018
95945 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
95950 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
95958 :: CALL :: call :: Ljava/io/InputStream :: v27 = getInputStream(v5)::CL,96646
95962 :: CALL :: call :: Ljava/lang/String :: v29 = convertStreamToString(v27)::JM,95970:JM,95974:CL,96660
95966 :: CALL :: call :: Ljava/lang/String :: v31 = v29.trim()::JM,95970:JM,95974
95970 :: CALL :: call :: Z :: v33 = v31.isEmpty()::JM,95970:JM,95974
95975 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: v36 = fromXML(v29)::JM,96034:JM,95979:CL,106330
95974 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 139::CF,96034:CD,95975:CD,95979
95979 :: CALL :: call :: Ljava/util/List :: v38 = v36.getScopDomain()::JM,96034:JM,95979
95985 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
95984 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v40 = new java.lang.RuntimeException::
95990 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .server::
95993 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(v44)::
95998 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v46.append(#(getDomainsForPDB?pdbId=))::
96003 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v48.append(p1 $pdbId )::
96008 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v50.append(#(&version=))::
96013 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .getScopVersion()::CL,106018
96017 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
96022 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::
96033 :: EXPR :: assign :: Ljava/lang/Exception :: v39 = catch <exc>::
96032 :: NORM :: compound :: Ljava/util/List :: return v60::DD,95909
96034 :: EXPR :: assign :: null :: PHI v60 = #(null), v38::CF,96032
96055 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::CE,96056:CD,96062
96056 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::JM,95765
96059 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .scopId::DD,96062
96062 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,96056
96065 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueRange :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::JM,99454
96064 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::CE,96065:CD,96070:CD,96075:CD,96079:CD,96132:CD,96133:CD,96138:CD,96143:CD,96148:CD,96178:CD,96179:CD,96184:CD,96189:CD,96198
96070 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $s )::JM,96090:JM,96109:JM,96079
96075 :: CALL :: call :: Z :: v7 = v5.matches()::JM,96090:JM,96109:JM,96079
96079 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 125::CD,96080:CD,96085:CD,96090:CD,96124:JM,99392:JM,99395:JM,99398:CD,96131:CD,96160:CD,96165:CD,96170:CD,96177:JM,96109:JM,96079
96080 :: CALL :: call :: Ljava/lang/String :: v28 = v5.group(#(1))::JM,96090:JM,96109:JM,96079
96085 :: CALL :: call :: Ljava/lang/String :: v31 = v5.group(#(2))::JM,96090:JM,96109:JM,96079
96091 :: CALL :: call :: Ljava/lang/String :: v33 = v5.group(#(2))::JM,96090:JM,96109:JM,96079
96090 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 80::CD,96091:CD,96096:CD,96100:CD,96104:CD,96109:JM,96090:JM,96079
96096 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = fromString(v33)::CL,99581
96100 :: CALL :: call :: V :: v35.setChainId(v28)::CL,63047
96104 :: CALL :: call :: Ljava/lang/String :: v39 = v5.group(#(3))::JM,96090:JM,96109:JM,96079
96109 :: PRED :: IF :: Z :: if (v39 != #(null)) goto 67::CD,96111:CD,96116:CD,96120:JM,96090:JM,96109:JM,96079
96111 :: CALL :: call :: Ljava/lang/String :: v41 = v5.group(#(3))::JM,96090:JM,96109:JM,96079
96116 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v43 = fromString(v41)::CL,99581
96120 :: CALL :: call :: V :: v43.setChainId(v28)::CL,63047
96124 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v47 = new org.biojava.nbio.structure.ResidueRange::DD,96131
96131 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v47::DD,96065
96133 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
96132 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v53 = new java.lang.IllegalArgumentException::
96138 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v54.append(p1 $s )::
96143 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#( was not valid))::
96148 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
96160 :: CALL :: call :: Ljava/util/regex/Matcher :: v11 = v9.matcher(p1 $s )::
96165 :: CALL :: call :: Z :: v13 = v11.matches()::
96170 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v23 = new org.biojava.nbio.structure.ResidueRange::DD,96177
96177 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v23::DD,96065
96179 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
96178 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
96184 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v15.append(p1 $s )::
96189 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
96198 :: EXPR :: assign :: Ljava/lang/Exception :: v49 = catch <exc>::
96341 :: PRED :: IF :: Z :: if (p1 $cacheFileName  == #(null)) goto 18::CD,96342
96342 :: CALL :: call :: Ljava/util/Map :: v7 = p0 $this .reloadFromFile()::CL,106396
96364 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.loadRepresentativeDomains()::CD,96369:CD,96373:CD,96381:CD,96386:CD,96401:CD,96405:CD,96409:CD,96413:CD,96419:CD,96423:CD,96432:CD,96436:CD,96483:CD,96487:CD,96491:CD,96499:CD,96504:CD,96514:CD,96522:CD,96527
96369 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
96373 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
96381 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v5.append(#(getRepresentativePDPD...))::
96386 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
96401 :: CALL :: call :: Ljava/io/InputStream :: v20 = getInputStream(v4)::CL,96646
96405 :: CALL :: call :: Ljava/lang/String :: v22 = convertStreamToString(v20)::CL,96660
96409 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: v24 = fromXML(v22)::JM,96432:JM,96419:JM,96451:JM,96483:JM,96436:JM,96487:JM,96441:JM,96413:JM,96445:JM,96446:CL,106592
96413 :: CALL :: call :: Ljava/util/Map :: v26 = v24.getAssignments()::JM,96432:JM,96419:JM,96451:JM,96483:JM,96436:JM,96487:JM,96441:JM,96413:JM,96445:JM,96446
96419 :: CALL :: call :: I :: v30 = v26.size()::JM,96432:JM,96419:JM,96451:JM,96483:JM,96436:JM,96487:JM,96441:JM,96445:JM,96446
96423 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,96451:JM,96483:JM,96436:JM,96487:JM,96441:JM,96445
96432 :: CALL :: call :: Ljava/util/Set :: v35 = v26.keySet()::JM,96432:JM,96419:JM,96451:JM,96483:JM,96436:JM,96487:JM,96441:JM,96445:JM,96446
96436 :: CALL :: call :: Ljava/util/Iterator :: v37 = v35.iterator()::JM,96451:JM,96483:JM,96436:JM,96487:JM,96441:JM,96445
96441 :: CALL :: call :: Ljava/lang/Object :: v42 = v37.next()::JM,96483:JM,96487:JM,96441:JM,96445
96445 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::JM,96451:JM,96483:JM,96436:JM,96487:JM,96441:JM,96445:JM,96446:JM,96432:JM,96419
96446 :: CALL :: call :: Ljava/lang/Object :: v45 = v26.get(v43)::JM,96432:JM,96419:JM,96451:JM,96483:JM,96436:JM,96487:JM,96441:JM,96445:JM,96446
96451 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::JM,96452:JM,96461
96452 :: CALL :: call :: [Ljava/lang/String :: v49 = v46.split(#(,))::JM,96452:JM,96461
96457 :: NORM :: declaration :: Ljava/util/TreeSet :: v50 = new java.util.TreeSet::
96461 :: EXPR :: assign :: I :: v52 = v49.length::DD,96473
96467 :: CALL :: call :: Z :: v55 = v50.add(v53)::
96473 :: PRED :: IF :: Z :: if (v58 < v52) goto 165::CD,96467:CD,96472:CD,96539
96472 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v58 + #(1)::DD,96539
96477 :: CALL :: call :: Ljava/lang/Object :: v61 = v59.put(v43, v50)::
96483 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,96483:JM,96487:JM,96441:JM,96445
96487 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 105::CD,96441:CD,96445:CD,96446:CD,96451:CD,96452:CD,96457:CD,96461:CD,96473:CD,96477:CD,96483:CD,96539:JM,96487
96491 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
96496 :: EXPR :: reference :: Ljava/lang/String :: v68 = p0 $this .server::
96499 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(v68)::
96504 :: CALL :: call :: Ljava/lang/String :: v72 = v70.toString()::
96514 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
96519 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .server::
96522 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v78)::
96527 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
96539 :: EXPR :: assign :: null :: PHI v58 = #(0), v57::DD,96472:DD,96473
96595 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::JM,84306
96594 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::CE,96595:CD,96599:JM,96627:JM,96615:JM,96604
96599 :: PRED :: IF :: Z :: if (p1 $domainRanges  == #(null)) goto 14::CD,96600:CD,96604:CD,96605:JM,96627:JM,96599:JM,96615
96600 :: CALL :: call :: I :: v6 = p1 $domainRanges .size()::JM,96627:JM,96599:JM,96615:JM,96604
96605 :: NORM :: compound :: Z :: return #(1)::DD,96595
96604 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 16::CD,96605:CD,96606:CD,96623:CD,96627:JM,96599:JM,96615:JM,96604
96606 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $domainRanges .iterator()::JM,96627:JM,96599:JM,96615:JM,96604
96611 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,96627:JM,96615
96615 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,96616:JM,96621
96617 :: CALL :: call :: I :: v16 = v14.length()::JM,96621
96616 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 49::CD,96617:CD,96621:CD,96623:CD,96627:JM,96615
96621 :: PRED :: IF :: Z :: if (v16 <= #(0)) goto 49::CD,96622:CD,96623:CD,96627:JM,96615
96623 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,96627:JM,96615
96622 :: NORM :: compound :: Z :: return #(0)::DD,96595
96627 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 26::CD,96611:CD,96615:CD,96616:CD,96628:JM,96627
96628 :: NORM :: compound :: Z :: return #(1)::DD,96595
96646 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL)::CD,96650
96650 :: CALL :: call :: Ljava/io/InputStream :: v6 = getInputStream(p1 $url , #(1), #(15000))::CL,106634
96661 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::JM,95970:JM,95974:JM,105989:JM,105993:JM,106060
96660 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::CE,96661:CD,96664:CD,96665:CD,96674:CD,96691:CD,96695:CD,96739:CD,96743
96665 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
96664 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,96695:CF,96665
96674 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::JM,96743
96679 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,96695
96684 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.align.client.JFatCatClient.newline::
96686 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
96691 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,96695
96695 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,96679:CD,96684:CD,96686:CD,96691
96739 :: CALL :: call :: Ljava/lang/String :: v33 = v7.toString()::JM,96743
96743 :: NORM :: compound :: Ljava/lang/String :: return v33::DD,96661
96769 :: EXIT :: exit :: Ljava/util/SortedSet :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::JM,84357:JM,84470
96768 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::CE,96769:CD,96772:CD,96774:CD,96778:CD,96779:CD,96787:CD,96792:CD,96793:CD,96798:CD,96805:CD,96806
96772 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextStringSortedSet::JM,96787:JM,96774:JM,96792
96774 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,96787:JM,96774:JM,96792
96779 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
96778 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,96787:JM,96792
96787 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,96787:JM,96792
96793 :: CALL :: call :: Ljava/util/TreeSet :: v15 = v13.getData()::JM,96805:JM,96793
96792 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,96805:JM,96793
96798 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v17 = new java.lang.RuntimeException::
96805 :: NORM :: compound :: Ljava/util/SortedSet :: return v15::DD,96769
96806 :: EXPR :: assign :: Ljava/lang/Exception :: v16 = catch <exc>::
96820 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.cache(java.lang.Object,java.lang.Object)::CD,96826
96826 :: PRED :: IF :: Z :: if (p2 $data  != #(null)) goto 6::CD,96831
96828 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .serializedCache::DD,96831
96831 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 61::CD,96843:CD,96852:CD,96856:CD,96860:CD,96861
96843 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.put(p1 $name , p2 $data )::
96849 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .serializedCache::JM,96860
96852 :: CALL :: call :: Ljava/util/Set :: v15 = v13.keySet()::JM,96860
96856 :: CALL :: call :: I :: v17 = v15.size()::JM,96860
96861 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 61::CD,96862
96860 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 % #(1000)::DD,96861
96862 :: CALL :: call :: V :: p0 $this .flushCache()::CL,106701
96891 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .identifier = p1 $pdpDomainName ::
96899 :: CALL :: call :: Ljava/util/regex/Matcher :: v9 = v6.matcher(v7)::
96904 :: CALL :: call :: Z :: v11 = v9.matches()::
96915 :: CALL :: call :: Ljava/lang/String :: v15 = v9.group(#(1))::
96920 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v16 = new org.biojava.nbio.structure.SubstructureIdentifier::DD,96926
96926 :: EXPR :: modify :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: p0 $this .canonical = v16::
96945 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.checkLoading(java.lang.String)::CE,96946:CD,96953:CD,96958
96946 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.util.AtomCache.checkLoading(java.lang.String)::JM,84672
96953 :: CALL :: call :: Z :: v6 = v4.contains(p1 $name )::JM,96958
96958 :: NORM :: compound :: Z :: return v6::DD,96946
96961 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.loadStructureFromCifByPdbId(java.lang.String)::CD,96966:JM,38786:JM,41396:JM,38790:JM,41352:JM,41416:JM,38794:JM,41338:JM,41402:JM,41467:JM,41388:JM,38798:CD,96999:CD,97003:CD,97009:CD,97014
96966 :: CALL :: call :: V :: p0 $this .flagLoading(p1 $pdbId )::CL,106771
96999 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $pdbId .toLowerCase()::
97003 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v17 = v5.getStructureById(v15)::CL,106800
97009 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,106821
97014 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,106821
97037 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.loadStructureFromPdbByPdbId(java.lang.String)::CD,97042:JM,38754:JM,38758:JM,41352:JM,41416:JM,41388:JM,38738:JM,41396:JM,38742:JM,38746:JM,41338:JM,41402:JM,41467:JM,38750:CD,97075:CD,97079:CD,97085:CD,97090
97042 :: CALL :: call :: V :: p0 $this .flagLoading(p1 $pdbId )::CL,106771
97075 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $pdbId .toLowerCase()::
97079 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v17 = v5.getStructureById(v15)::CL,106800
97085 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,106821
97090 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,106821
97113 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.values()::CF,97114:CD,97116:CD,97118:CD,97119:CD,97127
97114 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO.StructureFiletype.values()::JM,84857:JM,84934
97116 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = org.biojava.nbio.structure.StructureIO$StructureFiletype.ENUM$VALUES::DD,97118
97119 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v5 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::DD,97127
97118 :: EXPR :: assign :: I :: v4 = v2.length::DD,97119
97127 :: NORM :: compound :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v5::CF,97114
97140 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentStart()::CD,97144:JM,47585:JM,47554:JM,47592:JM,41480:JM,41513:JM,47564:JM,47599:JM,41488:JM,41520:JM,47571:JM,47606:JM,41496:JM,47578:CD,97160:CD,97167:CD,97174:CD,97181:CD,97188:CD,97195:CD,97202:CD,97209:CD,97216:CD,97223:CD,97230:CD,97237:CD,97244:CD,97251:CD,97258:CD,97265:CD,97272:CD,97279:CD,97286
97144 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureImpl :: v3 = new org.biojava.nbio.structure.StructureImpl::DD,97148
97148 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .structure = v3::
97151 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
97154 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
97157 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = #(null)::
97160 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,97164
97164 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v6::
97167 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,97171
97171 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entities = v8::
97174 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::DD,97178
97178 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucRefs = v10::
97181 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,97185
97185 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResChains = v12::
97188 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,97192
97192 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entityChains = v14::
97195 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::DD,97199
97199 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structAsyms = v16::
97202 :: NORM :: declaration :: Ljava/util/HashMap :: v18 = new java.util.HashMap::DD,97206
97206 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v18::
97209 :: NORM :: declaration :: Ljava/util/HashMap :: v20 = new java.util.HashMap::DD,97213
97213 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v20::
97216 :: NORM :: declaration :: Ljava/util/HashMap :: v22 = new java.util.HashMap::DD,97220
97220 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2entityId = v22::
97223 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::DD,97227
97227 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structOpers = v24::
97230 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::DD,97234
97234 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblies = v26::
97237 :: NORM :: declaration :: Ljava/util/ArrayList :: v28 = new java.util.ArrayList::DD,97241
97241 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblyGens = v28::
97244 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::DD,97248
97248 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcGens = v30::
97251 :: NORM :: declaration :: Ljava/util/ArrayList :: v32 = new java.util.ArrayList::DD,97255
97255 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcNats = v32::
97258 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,97262
97262 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcSyns = v34::
97265 :: NORM :: declaration :: Ljava/util/ArrayList :: v36 = new java.util.ArrayList::DD,97269
97269 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structConn = v36::
97272 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::DD,97276
97276 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structNcsOper = v38::
97279 :: NORM :: declaration :: Ljava/util/ArrayList :: v40 = new java.util.ArrayList::DD,97283
97283 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sequenceDifs = v40::
97286 :: NORM :: declaration :: Ljava/util/ArrayList :: v42 = new java.util.ArrayList::DD,97290
97290 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structSiteGens = v42::
97340 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentStart()::CD,97347:CD,97360:CD,97364
97344 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,97364
97347 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,97364
97352 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,97364
97357 :: CALL :: call :: V :: v11.documentStart()::CL,97140
97360 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,97364
97364 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,97352:CD,97357:CD,97360:JM,97364
97382 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentEnd()::CD,97389:CD,97402:CD,97406
97386 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,97406
97389 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,97406
97394 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,97406
97399 :: CALL :: call :: V :: v11.documentEnd()::CL,106848
97402 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,97406
97406 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,97394:CD,97399:CD,97402:JM,97406
97415 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::CE,97416:CD,97422:CD,97426:CD,97431:CD,97497:CD,97501:CD,97569:CD,97570:CD,97571:CD,97575:CD,97576:CD,97577:JM,97561:JM,97567
97416 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::JM,85249:JM,85239:JM,85306:JM,85704:JM,85436:JM,85539:JM,85622:JM,85529
97422 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,97501:DD,97556:JM,97561:DD,97562:DD,97568
97426 :: CALL :: call :: Z :: v12 = v48.startsWith(#(;))::JM,97431
97431 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 96::CD,97432:CD,97465
97433 :: CALL :: call :: I :: v26 = v48.length()::JM,97437
97432 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 76::CD,97433:CD,97437:CD,97455:CD,97459:CD,97575:CD,97576:CD,97577
97437 :: PRED :: IF :: Z :: if (v26 <= #(1)) goto 57::CF,97449:CF,97438:CD,97439:CD,97575:CD,97576:CD,97577
97439 :: CALL :: call :: Ljava/lang/String :: v29 = v48.substring(#(1))::
97438 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::DD,97577
97449 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::DD,97577
97455 :: CALL :: call :: Ljava/lang/String :: v35 = v50.toString()::
97459 :: CALL :: call :: Z :: v37 = v6.add(v35)::
97465 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 111::CD,97466:CD,97472:CD,97477:CD,97492:CD,97496:CD,97572:CD,97573:CD,97574:CD,97575:CD,97576:CD,97577
97466 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v50.append(v48)::
97472 :: CALL :: call :: Ljava/util/List :: v14 = p0 $this .processSingleLine(v48)::JM,97496:JM,97486:CL,108201
97477 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,97496:JM,97486
97482 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,97496:JM,97486
97487 :: CALL :: call :: Z :: v23 = v6.add(v21)::
97486 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::
97492 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,97496:JM,97486
97497 :: CALL :: call :: I :: v43 = v6.size()::JM,97501
97496 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 130::CF,97575:CD,97482:CD,97486:CD,97487:CD,97492:CD,97572:CD,97573:CD,97574:JM,97496
97501 :: PRED :: IF :: Z :: if (v43 <= p3 $fieldLength ) goto 238::CD,97504:CD,97509:CD,97513:CD,97518:CD,97523:CD,97528:CD,97533:CD,97538:CD,97543:CD,97548:CD,97556:CD,97557:CD,97561
97504 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
97509 :: CALL :: call :: I :: v60 = v6.size()::
97513 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(v60)::
97518 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(#() should be ())::
97523 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(p3 $fieldLength )::JM,97569:JM,97561:JM,97567
97528 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v67.append(#() at line ))::
97533 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(v54)::
97538 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( got lineData: ))::
97543 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v6)::
97548 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
97557 :: CALL :: call :: I :: v45 = v6.size()::JM,97561
97556 :: NORM :: compound :: Ljava/util/List :: return v6::DD,97416
97561 :: PRED :: IF :: Z :: if (v45 != p3 $fieldLength ) goto 251::CD,97562:CD,97563:CD,97567:CD,97569:CD,97570:CD,97571:JM,97561:JM,97501
97563 :: CALL :: call :: Ljava/lang/String :: v47 = p2 $buf .readLine()::JM,97569:JM,97561:JM,97501:JM,97567
97562 :: NORM :: compound :: Ljava/util/List :: return v6::DD,97416
97567 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 18::CF,97569:CD,97426:CD,97431:CD,97497:CD,97501:CD,97568:CD,97570:CD,97571:CD,97575:CD,97576:CD,97577
97569 :: EXPR :: assign :: null :: PHI v48 = v47, p1 $line ::CF,97570:JM,97431:JM,97437:DD,97572:DD,97575
97568 :: NORM :: compound :: Ljava/util/List :: return v6::DD,97416
97571 :: EXPR :: assign :: null :: PHI v50 = v41, #(null)::DD,97574:DD,97577:JM,97431
97570 :: EXPR :: assign :: null :: PHI v49 = v40, #(0)::CF,97571:DD,97432:DD,97465:DD,97573:DD,97576
97573 :: EXPR :: assign :: null :: PHI v52 = v49, v52::CF,97574:DD,97573:DD,97576
97572 :: EXPR :: assign :: null :: PHI v51 = v48, v51::CF,97573:DD,97572:DD,97575
97575 :: EXPR :: assign :: null :: PHI v54 = v48, v48, v48, v48, v51::CF,97576
97574 :: EXPR :: assign :: null :: PHI v53 = v50, v53::JM,97496:JM,97486:DD,97574:DD,97577
97577 :: EXPR :: assign :: null :: PHI v41 = v27, v31, #(null), v50, v53::JM,97501:DD,97571
97576 :: EXPR :: assign :: null :: PHI v40 = #(1), #(1), #(0), v49, v52::CF,97577:DD,97570
97731 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.endLineChecks(java.lang.String,java.util.List,java.util.List,java.util.Set)::CD,97741:CD,97766:CD,97767:CD,97772:CD,97776:CD,97781:CD,97786:CD,97790:CD,97795:CD,97800:CD,97805:CD,97810:CD,97815:CD,97820:CD,97825:CD,97834:CD,97839:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97741 :: CALL :: call :: Ljava/lang/String :: v10 = p2 $loopFields .toString()::
97767 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v394 = new java.lang.StringBuilder::
97766 :: NORM :: declaration :: Ljava/io/IOException :: v393 = new java.io.IOException::
97772 :: CALL :: call :: I :: v398 = p3 $lineData .size()::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97776 :: CALL :: call :: Ljava/lang/StringBuilder :: v400 = v394.append(v398)::
97781 :: CALL :: call :: Ljava/lang/StringBuilder :: v403 = v400.append(#() != fields length ())::
97786 :: CALL :: call :: I :: v405 = p2 $loopFields .size()::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97790 :: CALL :: call :: Ljava/lang/StringBuilder :: v407 = v403.append(v405)::
97795 :: CALL :: call :: Ljava/lang/StringBuilder :: v410 = v407.append(#() category: ))::
97800 :: CALL :: call :: Ljava/lang/StringBuilder :: v412 = v410.append(p1 $category )::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97805 :: CALL :: call :: Ljava/lang/StringBuilder :: v415 = v412.append(#( fields: ))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97810 :: CALL :: call :: Ljava/lang/StringBuilder :: v417 = v415.append(p2 $loopFields )::
97815 :: CALL :: call :: Ljava/lang/StringBuilder :: v420 = v417.append(#( DATA: ))::
97820 :: CALL :: call :: Ljava/lang/StringBuilder :: v422 = v420.append(p3 $lineData )::
97825 :: CALL :: call :: Ljava/lang/String :: v424 = v422.toString()::
97834 :: CALL :: call :: Z :: v18 = p1 $category .equals(#(_entity))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97839 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 159::CD,97845:CD,97854:CD,97859:CD,97864:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97845 :: CALL :: call :: Ljava/lang/Object :: v386 = p0 $this .buildObject(v384, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
97854 :: CALL :: call :: V :: p0 $this .triggerNewEntity(v387)::CL,109094
97859 :: CALL :: call :: Z :: v22 = p1 $category .equals(#(_struct))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97864 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 192::CD,97870:CD,97878:CD,97883:CD,97888:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97870 :: CALL :: call :: Ljava/lang/Object :: v380 = p0 $this .buildObject(v378, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::JM,97878:CL,108691
97879 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v381::
97878 :: EXPR :: assign :: Ljava/lang/Object :: v381 = CHECKCAST v380::DD,97879
97883 :: CALL :: call :: Z :: v25 = p1 $category .equals(#(_atom_site))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97888 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 230::CD,97894:CD,97903:CD,97908:CD,97913:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,98488:JM,98363:JM,98238
97894 :: CALL :: call :: Ljava/lang/Object :: v373 = p0 $this .buildObject(v371, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
97903 :: CALL :: call :: V :: p0 $this .triggerNewAtomSite(v374)::CL,109130
97908 :: CALL :: call :: Z :: v28 = p1 $category .equals(#(_database_PDB_rev))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97913 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 268::CD,97919:CD,97928:CD,97933:CD,97938:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97919 :: CALL :: call :: Ljava/lang/Object :: v366 = p0 $this .buildObject(v364, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
97928 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrev(v367)::CL,109166
97933 :: CALL :: call :: Z :: v31 = p1 $category .equals(#(_database_PDB_rev_record))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97938 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 306::CD,97944:CD,97953:CD,97958:CD,97963:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97944 :: CALL :: call :: Ljava/lang/Object :: v359 = p0 $this .buildObject(v357, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
97953 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrevRecord(v360)::CL,109202
97958 :: CALL :: call :: Z :: v34 = p1 $category .equals(#(_database_PDB_remark))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97963 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 344::CD,97969:CD,97978:CD,97983:CD,97988:JM,98113:JM,98688:JM,98563:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97969 :: CALL :: call :: Ljava/lang/Object :: v352 = p0 $this .buildObject(v350, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
97978 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBremark(v353)::CL,109238
97983 :: CALL :: call :: Z :: v37 = p1 $category .equals(#(_exptl))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97988 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 382::CD,97994:CD,98003:CD,98008:CD,98013:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
97994 :: CALL :: call :: Ljava/lang/Object :: v345 = p0 $this .buildObject(v343, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98003 :: CALL :: call :: V :: p0 $this .triggerExptl(v346)::CL,109274
98008 :: CALL :: call :: Z :: v40 = p1 $category .equals(#(_cell))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98013 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 420::CD,98019:CD,98028:CD,98033:CD,98038:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,97913:JM,98488:JM,98363:JM,98238
98019 :: CALL :: call :: Ljava/lang/Object :: v338 = p0 $this .buildObject(v336, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98028 :: CALL :: call :: V :: p0 $this .triggerNewCell(v339)::CL,109310
98033 :: CALL :: call :: Z :: v43 = p1 $category .equals(#(_symmetry))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98038 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 458::CD,98044:CD,98053:CD,98058:CD,98063:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98044 :: CALL :: call :: Ljava/lang/Object :: v331 = p0 $this .buildObject(v329, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98053 :: CALL :: call :: V :: p0 $this .triggerNewSymmetry(v332)::CL,109346
98058 :: CALL :: call :: Z :: v46 = p1 $category .equals(#(_struct_ncs_oper))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98063 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 496::CD,98069:CD,98078:CD,98083:CD,98088:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98069 :: CALL :: call :: Ljava/lang/Object :: v324 = p0 $this .buildObject(v322, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98078 :: CALL :: call :: V :: p0 $this .triggerNewStructNcsOper(v325)::CL,109382
98083 :: CALL :: call :: Z :: v49 = p1 $category .equals(#(_atom_sites))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98088 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 534::CD,98094:CD,98103:CD,98108:CD,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98094 :: CALL :: call :: Ljava/lang/Object :: v317 = p0 $this .buildObject(v315, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98103 :: CALL :: call :: V :: p0 $this .triggerNewAtomSites(v318)::CL,109418
98108 :: CALL :: call :: Z :: v52 = p1 $category .equals(#(_struct_ref))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98113 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 572::CD,98119:CD,98128:CD,98133:CD,98138:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98119 :: CALL :: call :: Ljava/lang/Object :: v310 = p0 $this .buildObject(v308, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98128 :: CALL :: call :: V :: p0 $this .triggerNewStrucRef(v311)::CL,109454
98133 :: CALL :: call :: Z :: v55 = p1 $category .equals(#(_struct_ref_seq))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98138 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 610::CD,98144:CD,98153:CD,98158:CD,98163:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98144 :: CALL :: call :: Ljava/lang/Object :: v303 = p0 $this .buildObject(v301, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98153 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeq(v304)::CL,109490
98158 :: CALL :: call :: Z :: v58 = p1 $category .equals(#(_struct_ref_seq_dif))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98163 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 648::CD,98169:CD,98178:CD,98183:CD,98188:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98169 :: CALL :: call :: Ljava/lang/Object :: v296 = p0 $this .buildObject(v294, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98178 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeqDif(v297)::CL,109526
98183 :: CALL :: call :: Z :: v61 = p1 $category .equals(#(_struct_site_gen))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98188 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 686::CD,98194:CD,98203:CD,98208:CD,98213:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98194 :: CALL :: call :: Ljava/lang/Object :: v289 = p0 $this .buildObject(v287, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98203 :: CALL :: call :: V :: p0 $this .triggerNewStructSiteGen(v290)::CL,109562
98208 :: CALL :: call :: Z :: v64 = p1 $category .equals(#(_struct_site))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98213 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 724::CD,98219:CD,98228:CD,98233:CD,98238:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363
98219 :: CALL :: call :: Ljava/lang/Object :: v282 = p0 $this .buildObject(v280, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98228 :: CALL :: call :: V :: p0 $this .triggerNewStructSite(v283)::CL,109598
98233 :: CALL :: call :: Z :: v67 = p1 $category .equals(#(_entity_poly_seq))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98238 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 762::CD,98244:CD,98253:CD,98258:CD,98263:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98244 :: CALL :: call :: Ljava/lang/Object :: v275 = p0 $this .buildObject(v273, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98253 :: CALL :: call :: V :: p0 $this .triggerNewEntityPolySeq(v276)::CL,109634
98258 :: CALL :: call :: Z :: v70 = p1 $category .equals(#(_entity_src_gen))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98263 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 800::CD,98269:CD,98278:CD,98283:CD,98288:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98269 :: CALL :: call :: Ljava/lang/Object :: v268 = p0 $this .buildObject(v266, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98278 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcGen(v269)::CL,109670
98283 :: CALL :: call :: Z :: v73 = p1 $category .equals(#(_entity_src_nat))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98288 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 838::CD,98294:CD,98303:CD,98308:CD,98313:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98294 :: CALL :: call :: Ljava/lang/Object :: v261 = p0 $this .buildObject(v259, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98303 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcNat(v262)::CL,109706
98308 :: CALL :: call :: Z :: v76 = p1 $category .equals(#(_pdbx_entity_src_syn))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98313 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 876::CD,98319:CD,98328:CD,98333:CD,98338:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98319 :: CALL :: call :: Ljava/lang/Object :: v254 = p0 $this .buildObject(v252, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98328 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcSyn(v255)::CL,109742
98333 :: CALL :: call :: Z :: v79 = p1 $category .equals(#(_struct_asym))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98338 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 914::CD,98344:CD,98353:CD,98358:CD,98363:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98238
98344 :: CALL :: call :: Ljava/lang/Object :: v247 = p0 $this .buildObject(v245, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98353 :: CALL :: call :: V :: p0 $this .triggerNewStructAsym(v248)::CL,109778
98358 :: CALL :: call :: Z :: v82 = p1 $category .equals(#(_pdbx_poly_seq_scheme))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98363 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 952::CD,98369:CD,98378:CD,98383:CD,98388:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98369 :: CALL :: call :: Ljava/lang/Object :: v240 = p0 $this .buildObject(v238, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98378 :: CALL :: call :: V :: p0 $this .triggerNewPdbxPolySeqScheme(v241)::CL,109814
98383 :: CALL :: call :: Z :: v85 = p1 $category .equals(#(_pdbx_nonpoly_scheme))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98388 :: PRED :: IF :: Z :: if (v85 == #(0)) goto 990::CD,98394:CD,98403:CD,98408:CD,98413:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98394 :: CALL :: call :: Ljava/lang/Object :: v233 = p0 $this .buildObject(v231, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98403 :: CALL :: call :: V :: p0 $this .triggerNewPdbxNonPolyScheme(v234)::CL,109850
98408 :: CALL :: call :: Z :: v88 = p1 $category .equals(#(_pdbx_entity_nonpoly))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98413 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 1028::CD,98419:CD,98428:CD,98433:CD,98438:JM,98113:JM,98688:JM,98563:JM,97988:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98419 :: CALL :: call :: Ljava/lang/Object :: v226 = p0 $this .buildObject(v224, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98428 :: CALL :: call :: V :: p0 $this .triggerNewPdbxEntityNonPoly(v227)::CL,109886
98433 :: CALL :: call :: Z :: v91 = p1 $category .equals(#(_struct_keywords))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98438 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 1066::CD,98444:CD,98453:CD,98458:CD,98463:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98444 :: CALL :: call :: Ljava/lang/Object :: v219 = p0 $this .buildObject(v217, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98453 :: CALL :: call :: V :: p0 $this .triggerNewStructKeywords(v220)::CL,109922
98458 :: CALL :: call :: Z :: v94 = p1 $category .equals(#(_refine))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98463 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 1104::CD,98469:CD,98478:CD,98483:CD,98488:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98363:JM,98238
98469 :: CALL :: call :: Ljava/lang/Object :: v212 = p0 $this .buildObject(v210, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98478 :: CALL :: call :: V :: p0 $this .triggerNewRefine(v213)::CL,109958
98483 :: CALL :: call :: Z :: v97 = p1 $category .equals(#(_chem_comp))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98488 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 1142::CD,98494:CD,98503:CD,98508:CD,98513:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98494 :: CALL :: call :: Ljava/lang/Object :: v205 = p0 $this .buildObject(v203, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98503 :: CALL :: call :: V :: p0 $this .triggerNewChemComp(v206)::CL,109994
98508 :: CALL :: call :: Z :: v100 = p1 $category .equals(#(_audit_author))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98513 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 1180::CD,98519:CD,98528:CD,98533:CD,98538:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98519 :: CALL :: call :: Ljava/lang/Object :: v198 = p0 $this .buildObject(v196, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98528 :: CALL :: call :: V :: p0 $this .triggerNewAuditAuthor(v199)::CL,110030
98533 :: CALL :: call :: Z :: v103 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98538 :: PRED :: IF :: Z :: if (v103 == #(0)) goto 1218::CD,98544:CD,98553:CD,98558:CD,98563:JM,98113:JM,98688:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98544 :: CALL :: call :: Ljava/lang/Object :: v191 = p0 $this .buildObject(v189, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98553 :: CALL :: call :: V :: p0 $this .triggerNewChemCompDescriptor(v192)::CL,110066
98558 :: CALL :: call :: Z :: v106 = p1 $category .equals(#(_pdbx_struct_oper_list))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98563 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 1256::CD,98569:CD,98578:CD,98583:CD,98588:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98569 :: CALL :: call :: Ljava/lang/Object :: v184 = p0 $this .buildObject(v182, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98578 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructOper(v185)::CL,110102
98583 :: CALL :: call :: Z :: v109 = p1 $category .equals(#(_pdbx_struct_assembly))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98588 :: PRED :: IF :: Z :: if (v109 == #(0)) goto 1294::CD,98594:CD,98603:CD,98608:CD,98613:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98594 :: CALL :: call :: Ljava/lang/Object :: v177 = p0 $this .buildObject(v175, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98603 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssembly(v178)::CL,110138
98608 :: CALL :: call :: Z :: v112 = p1 $category .equals(#(_pdbx_struct_assembly_gen))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98613 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 1332::CD,98619:CD,98628:CD,98633:CD,98638:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98619 :: CALL :: call :: Ljava/lang/Object :: v170 = p0 $this .buildObject(v168, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98628 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssemblyGen(v171)::CL,110174
98633 :: CALL :: call :: Z :: v115 = p1 $category .equals(#(_chem_comp_atom))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98638 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 1370::CD,98644:CD,98653:CD,98658:CD,98663:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98644 :: CALL :: call :: Ljava/lang/Object :: v163 = p0 $this .buildObject(v161, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98653 :: CALL :: call :: V :: p0 $this .triggerNewChemCompAtom(v164)::CL,110210
98658 :: CALL :: call :: Z :: v118 = p1 $category .equals(#(_chem_comp_bond))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98663 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 1408::CD,98669:CD,98678:CD,98683:CD,98688:JM,98113:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98669 :: CALL :: call :: Ljava/lang/Object :: v156 = p0 $this .buildObject(v154, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98678 :: CALL :: call :: V :: p0 $this .triggerNewChemCompBond(v157)::CL,110246
98683 :: CALL :: call :: Z :: v121 = p1 $category .equals(#(_pdbx_chem_comp_ident...))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98688 :: PRED :: IF :: Z :: if (v121 == #(0)) goto 1446::CD,98694:CD,98703:CD,98708:CD,98713:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98694 :: CALL :: call :: Ljava/lang/Object :: v149 = p0 $this .buildObject(v147, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98703 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompIdentifier(v150)::CL,110282
98708 :: CALL :: call :: Z :: v123 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98713 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 1484::CD,98719:CD,98728:CD,98733:CD,98738:JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98719 :: CALL :: call :: Ljava/lang/Object :: v142 = p0 $this .buildObject(v140, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98728 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompDescriptor(v143)::CL,110318
98733 :: CALL :: call :: Z :: v126 = p1 $category .equals(#(_struct_conn))::JM,98113:JM,98688:JM,98563:JM,97988:JM,98438:JM,98313:JM,97864:JM,98188:JM,98063:JM,98638:JM,98513:JM,97938:JM,98388:JM,98263:JM,98713:JM,98138:JM,98013:JM,98588:JM,98463:JM,97888:JM,98338:JM,98213:JM,98663:JM,98088:JM,97963:JM,98538:JM,98413:JM,97839:JM,98288:JM,98163:JM,98738:JM,98613:JM,98038:JM,97913:JM,98488:JM,98363:JM,98238
98738 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 1518::CD,98744:CD,98753:CD,98765
98744 :: CALL :: call :: Ljava/lang/Object :: v135 = p0 $this .buildObject(v133, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,108691
98753 :: CALL :: call :: V :: p0 $this .triggerNewStructConn(v136)::CL,110354
98765 :: CALL :: call :: V :: p0 $this .triggerGeneric(p1 $category , p2 $loopFields , p3 $lineData )::CL,110390
99152 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.resetBuffers(java.util.List,java.util.List,java.util.Set)::CD,99159:CD,99162:CD,99165
99159 :: CALL :: call :: V :: p1 $loopFields .clear()::
99162 :: CALL :: call :: V :: p2 $lineData .clear()::
99165 :: CALL :: call :: V :: p3 $loopWarnings .clear()::
99172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerStructData(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,99180:CD,99194:CD,99198
99177 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,99198
99180 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,99198
99185 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,99198
99190 :: CALL :: call :: V :: v12.setStruct(p1 $struct )::CL,110438
99194 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,99198
99198 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,99185:CD,99190:CD,99194:JM,99198
99208 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getStructure(java.io.InputStream)::JM,39075:JM,39110:JM,39174:JM,41480:JM,39241:JM,41513:JM,39082:JM,39181:JM,41488:JM,41520:JM,39089:JM,39061:JM,39191:JM,39096:JM,39160:JM,41496:JM,41467:JM,39068:JM,39133:JM,39103:JM,39167:CD,99225
99225 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v10 = v4.parsePDBFile(p1 $inStream )::CL,39322
99239 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getBiologicalAssembly(java.lang.String,int,boolean)::CD,99248:CD,99253:CD,99258:CD,99263:CD,99268:CD,99277:CD,99283:JM,99284
99248 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
99253 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(p1 $pdbId )::JM,99284
99258 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( bioAssemblyId ))::
99263 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(p2 $bioAssemblyId )::JM,99284
99268 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
99277 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v8 = getBiologicalAssembly(p1 $pdbId , p2 $bioAssemblyId , p0 $this )::JM,99283:CL,110542
99283 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 63::CD,99284
99285 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v11 = getBiologicalAssembly(p1 $pdbId , #(0), p0 $this )::CL,110542
99284 :: PRED :: IF :: Z :: if (p3 $bioAssemblyFallback  == #(0)) goto 63::CD,99285
99307 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getIdentifier()::CD,99314:CD,99318
99311 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .ranges::JM,99318
99314 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,99318
99318 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 17::CF,99323:CD,99327:CD,99335:CD,99343:CD,99347:CD,99352
99323 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
99327 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
99335 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(.))::
99343 :: CALL :: call :: Ljava/lang/String :: v17 = toString(v15)::CL,110605
99347 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v14.append(v17)::
99352 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
99365 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::JM,105493
99364 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::CE,99365:CD,99371
99368 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,99371
99371 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,99365
99392 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chain = p1 $chain ::
99395 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .start = p2 $start ::
99398 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .end = p3 $end ::
99427 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.util.List)::CD,99431:CD,99432:CD,99440:CD,99460:CD,99464
99431 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,99464
99432 :: CALL :: call :: I :: v5 = p1 $ranges .size()::JM,99464
99440 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $ranges .iterator()::JM,99464
99445 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,99464
99450 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v16 = parse(v14)::JM,99454:CL,96064
99455 :: CALL :: call :: Z :: v19 = v3.add(v16)::
99454 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 55::CD,99455:JM,99464
99460 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,99464
99464 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,99445:CD,99450:CD,99454:CD,99460:JM,99464
99483 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::CE,99484:CD,99490
99484 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::JM,86961
99487 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::DD,99490
99490 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,99484
99493 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::JM,87009
99492 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::CE,99493:CD,99499
99496 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .segments::DD,99499
99499 :: NORM :: compound :: Ljava/util/List :: return v3::CF,99493
99529 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chain = p1 $chain ::
99532 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v8 = fromString(p2 $start )::JM,99536:CL,99581
99536 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .start = v8::
99542 :: CALL :: call :: V :: v9.setChainId(p1 $chain )::CL,63047
99546 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v12 = fromString(p3 $end )::JM,99550:CL,99581
99550 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .end = v12::
99556 :: CALL :: call :: V :: v13.setChainId(p1 $chain )::CL,63047
99573 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ElementType.isMetal()::JM,87151
99572 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.isMetal()::CE,99573:CD,99579
99576 :: EXPR :: reference :: Z :: v3 = p0 $this .metal::DD,99579
99579 :: NORM :: compound :: Z :: return v3::CF,99573
99581 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.fromString(java.lang.String)::CE,99582:CD,99585:CD,99600:CD,99611
99582 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueNumber.fromString(java.lang.String)::JM,99536:JM,99550
99585 :: PRED :: IF :: Z :: if (p1 $pdb_code  != #(null)) goto 6::CF,99587:CD,99586:CD,99591:CD,99595:CD,99623:CD,99627:CD,99651:CD,99654
99587 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v4 = new org.biojava.nbio.structure.ResidueNumber::DD,99651
99586 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return #(null)::DD,99582
99591 :: CALL :: call :: I :: v7 = parseInt(p1 $pdb_code )::JM,99585
99595 :: CALL :: call :: Ljava/lang/Integer :: v9 = valueOf(v7)::
99600 :: CALL :: call :: [Ljava/lang/String :: v13 = p1 $pdb_code .split(#((?<=\d)(?=\D)|(?<=\D)...))::
99607 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v13[#(0)]::
99611 :: CALL :: call :: I :: v19 = parseInt(v17)::
99619 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v13[#(1)]::DD,99654
99623 :: CALL :: call :: V :: v4.setSeqNum(v25)::CL,63058
99627 :: PRED :: IF :: Z :: if (v26 != #(null)) goto 80::CD,99628:CD,99633:CD,99637
99628 :: CALL :: call :: V :: v4.setInsCode(#(null))::CL,63069
99633 :: CALL :: call :: I :: v29 = v26.length()::JM,99637
99637 :: PRED :: IF :: Z :: if (v29 <= #(0)) goto 99::CD,99638:CD,99647:CF,99651
99638 :: CALL :: call :: C :: v31 = v26.charAt(#(0))::
99647 :: CALL :: call :: V :: v4.setInsCode(v33)::CL,63069
99651 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v4::DD,99582
99654 :: EXPR :: assign :: null :: PHI v26 = #(null), #(null), v23::DD,99627:JM,99637
100673 :: EXPR :: modify :: I :: p0 $this .m = p1 $m ::
100676 :: EXPR :: modify :: I :: p0 $this .n = p2 $n ::
100679 :: NORM :: declaration :: [[D :: v6 = new [][]::DD,100680
100680 :: EXPR :: modify :: [[D :: p0 $this .A = v6::
100817 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::
100816 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::CE,100817:CD,100822:CD,100827
100822 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,100827:CL,114836
100827 :: NORM :: compound :: I :: return v6::CF,100817
100831 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::
100830 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::CE,100831:CD,100836:CD,100841
100836 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,100841:CL,115050
100841 :: NORM :: compound :: I :: return v6::DD,100831
101485 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
101492 :: EXIT :: exit :: Ljava/net/URLStreamHandler :: java.net.URL.getURLStreamHandler(java.lang.String)::JM,89711
101495 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,101502
101497 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,101502:JM,101682:JM,101509:JM,101653:JM,101606:JM,101643:JM,101676:JM,101679
101503 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CF,101684:CD,101504:CD,101506:CD,101514:CD,101636:CD,101638:CD,101643:CD,101644:CD,101672:CD,101676:CD,101677:CD,101681
101502 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,101503:DD,101676:DD,101684
101504 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,101506
101507 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,101509:JM,101676
101506 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,101676:CD,101507:CD,101509:CD,101677
101509 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,101509:JM,101676:JM,101682:JM,101653:JM,101606:JM,101643:JM,101679:JM,101502
101514 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CF,101681:CD,101521:CD,101525:CD,101526:CD,101545:CD,101546:CD,101554:CD,101559:CD,101563:CD,101627:CD,101680
101521 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,101525
101525 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,101526
101527 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
101526 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,101527:CD,101528:CD,101536:CD,101541
101528 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
101536 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
101541 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
101545 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
101546 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
101554 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
101559 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
101563 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,101632
101570 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
101574 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
101579 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
101578 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,101606:JM,101679
101587 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,101606:JM,101679
101592 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,101606:JM,101679:JM,101682:JM,101509:JM,101653:JM,101643:JM,101676:JM,101502
101597 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,101682:JM,101606:JM,101643:JM,101679
101602 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,101606:JM,101679
101606 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,101606:JM,101679
101611 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,101679
101615 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,101679:JM,101606
101621 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,101621:JM,101625
101620 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,101680:CD,101621:CD,101625
101625 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,101680
101627 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CF,101681:CD,101628:CD,101632
101628 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,101632
101632 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CF,101681:CD,101570:CD,101574:CD,101578:CD,101579:CD,101587:CD,101592:CD,101597:CD,101602:CD,101606:CD,101620:CD,101627:CD,101679:CD,101680
101636 :: EXPR :: reference :: Ljava/util/Hashtable :: v82 = java.net.URL.handlers::JM,101643
101638 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(p1 $protocol )::JM,101643:JM,101682:JM,101509:JM,101653:JM,101606:JM,101676:JM,101679:JM,101502
101643 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,101644:DD,101646:DD,101682
101644 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 265::CD,101646:CD,101647:CD,101658:CD,101659:CD,101672:CD,101682:CD,101683:CD,101684
101647 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 287::CF,101682:CD,101648:CD,101650
101646 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v85::DD,101492
101648 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v86 = java.net.URL.factory::DD,101650
101651 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v87 = java.net.URL.factory::JM,101682:JM,101653
101650 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 287::CF,101682:CD,101651:CD,101653
101653 :: CALL :: call :: Ljava/net/URLStreamHandler :: v89 = v87.createURLStreamHandler(p1 $protocol )::JM,101682:JM,101653:JM,101509:JM,101606:JM,101643:JM,101676:JM,101679:JM,101502
101659 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 307::CD,101660:CD,101662
101658 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 294::CF,101683
101660 :: EXPR :: reference :: Ljava/util/Hashtable :: v92 = java.net.URL.handlers::
101662 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.put(p1 $protocol , v91)::JM,101682:JM,101509:JM,101653:JM,101606:JM,101643:JM,101676:JM,101679:JM,101502
101672 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v96::DD,101492
101677 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::DD,101647:CF,101514
101676 :: EXPR :: assign :: null :: PHI v14 = v6, v12::CF,101677:DD,101514:DD,101680:DD,101681
101679 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,101620:JM,101621:JM,101625
101681 :: EXPR :: assign :: null :: PHI v80 = v14, v77, v77::DD,101683
101680 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,101627:DD,101680:DD,101681
101683 :: EXPR :: assign :: null :: PHI v91 = v80, v90::DD,101659:JM,101682:JM,101606:JM,101643:JM,101676:JM,101679:JM,101502:DD,101684
101682 :: EXPR :: assign :: null :: PHI v90 = v85, v85, v89::DD,101658:DD,101683
101684 :: EXPR :: assign :: null :: PHI v96 = v6, v91::CF,101672
102019 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::JM,91571:JM,91270:JM,91257:JM,91310:JM,121789
102018 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::CE,102019:CD,102025
102022 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .seqNum::DD,102025
102025 :: NORM :: compound :: Ljava/lang/Integer :: return v3::CF,102019
102027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::CE,102028:CD,102033:CD,102037:CD,102041:CD,102047:CD,102053:CD,102057:CD,102190:CD,102195:CD,102200:CD,102208:CD,102234:CD,102239:CD,102244:CD,102252
102028 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::JM,91797
102033 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
102037 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
102041 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(1))::JM,102053:JM,102057:CL,70271
102047 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(1))::JM,102058:JM,102062:CL,70271
102053 :: CALL :: call :: Z :: v15 = v11.isEmpty()::JM,102053:JM,102057
102057 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 50::CD,102058:CD,102062:CD,102069
102058 :: CALL :: call :: Z :: v18 = v13.isEmpty()::JM,102058:JM,102062
102062 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 63::CD,102069:CD,102072:CD,102077:CD,102081:CD,102086:CD,102091:CD,102096:CD,102106:CD,102111:CD,102115:CD,102120:CD,102125:CD,102130:CD,102138:CD,102143:CD,102148
102069 :: NORM :: compound :: Z :: return #(1)::DD,102028
102072 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
102077 :: CALL :: call :: I :: v24 = v11.length()::JM,102053:JM,102057
102081 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
102086 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#() ))::
102091 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v29.append(v11)::JM,102053:JM,102057
102096 :: CALL :: call :: Ljava/lang/String :: v33 = v31.toString()::
102106 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
102111 :: CALL :: call :: I :: v40 = v13.length()::JM,102058:JM,102062
102115 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v36.append(v40)::
102120 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v42.append(#() ))::
102125 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v13)::JM,102058:JM,102062
102130 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
102138 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v51 = p0 $this .getNucleotideSequence(v11)::JM,102177:JM,102339:JM,102338:JM,102165:JM,102148:JM,102164:JM,102151:JM,102172:JM,102159:CL,115574
102143 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v53 = p0 $this .getNucleotideSequence(v13)::JM,102209:JM,102149:JM,102340:JM,102164:JM,102216:JM,102155:JM,102221:JM,102159:CL,115574
102149 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 173::CD,102150:CD,102151:CD,102155:CD,102159:CD,102164:CD,102253:CD,102256:CD,102262:CD,102263:CD,102271:CD,102275:CD,102339:CD,102340:JM,102177:JM,102338:JM,102165:JM,102172
102148 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 170::CD,102149:CD,102150
102151 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v56 = v51.getCompoundSet()::JM,102177:JM,102339:JM,102338:JM,102165:JM,102164:JM,102151:JM,102172:JM,102159
102150 :: NORM :: compound :: Z :: return #(1)::DD,102028
102155 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v58 = v53.getCompoundSet()::JM,102209:JM,102340:JM,102164:JM,102216:JM,102155:JM,102221:JM,102159
102159 :: CALL :: call :: Z :: v60 = v56.equals(v58)::JM,102177:JM,102164:JM,102172:JM,102159:JM,102216:JM,102221
102165 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v62 = v51.getCompoundSet()::JM,102177:JM,102339:JM,102338:JM,102165:JM,102164:JM,102151:JM,102172:JM,102159
102164 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 317::CF,102339:CD,102165:CD,102169:CD,102172:CD,102177:CD,102209:CD,102213:CD,102216:CD,102221:CD,102338:CD,102340:JM,102164:JM,102151:JM,102159
102169 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v64 = getRNACompoundSet()::JM,102177:JM,102172
102172 :: CALL :: call :: Z :: v66 = v62.equals(v64)::JM,102177:JM,102164:JM,102172:JM,102159
102177 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 256::CF,102338:CF,102178
102178 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v67 = new org.biojava.nbio.core.sequence.RNASequence::DD,102338
102190 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
102195 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v73.append(v11)::JM,102053:JM,102057
102200 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
102209 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v83 = v53.getCompoundSet()::JM,102209:JM,102340:JM,102164:JM,102216:JM,102155:JM,102221:JM,102159
102208 :: NORM :: compound :: Z :: return #(1)::DD,102028
102213 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v85 = getRNACompoundSet()::JM,102216:JM,102221
102216 :: CALL :: call :: Z :: v87 = v83.equals(v85)::JM,102164:JM,102216:JM,102221:JM,102159
102221 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 317::CF,102339:CF,102222:CD,102340
102222 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v88 = new org.biojava.nbio.core.sequence.RNASequence::DD,102340
102234 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v94 = new java.lang.StringBuilder::
102239 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v94.append(v13)::JM,102058:JM,102062
102244 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
102253 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v104 = getNuc4_4()::JM,102275:JM,102308:JM,102263:JM,102271
102252 :: NORM :: compound :: Z :: return #(1)::DD,102028
102256 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v105 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,102275:JM,102308:JM,102263:JM,102271
102263 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v110 = getPairwiseAligner(v101, v102, v108, v105, v104)::JM,102275:JM,102308:JM,102263:JM,102271
102262 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v108 = LOCAL::JM,102275:JM,102308:JM,102263:JM,102271
102271 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v112 = v110.getPair()::JM,102275:JM,102308:JM,102263:JM,102271
102275 :: PRED :: IF :: Z :: if (v112 != #(null)) goto 408::CD,102300:CD,102303:CD,102308:CD,102313:CD,102318:CD,102326:CD,102335
102300 :: NORM :: compound :: Z :: return #(1)::DD,102028
102303 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v114 = new java.lang.StringBuilder::
102308 :: CALL :: call :: Ljava/lang/String :: v119 = v112.toString(#(100))::JM,102308
102313 :: CALL :: call :: Ljava/lang/StringBuilder :: v121 = v114.append(v119)::
102318 :: CALL :: call :: Ljava/lang/String :: v123 = v121.toString()::
102326 :: CALL :: call :: Z :: v126 = p0 $this .mapDNAChains(p1 $seqRes , p2 $atomRes , v112, v5, v7)::JM,102335:CL,115648
102335 :: NORM :: compound :: Z :: return v126::DD,102028
102339 :: EXPR :: assign :: null :: PHI v101 = v51, v81, v81::CF,102340:JM,102275:JM,102308:JM,102263:JM,102271
102338 :: EXPR :: assign :: null :: PHI v81 = v51, v67::JM,102209:JM,102340:JM,102164:JM,102216:JM,102155:JM,102221:JM,102159:DD,102339
102340 :: EXPR :: assign :: null :: PHI v102 = v53, v53, v88::CF,102253:JM,102275:JM,102308:JM,102263:JM,102271
102425 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,92025
102424 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,102425:CD,102433:CD,102437:CD,102440:CD,102823:CD,102833:CD,102834:JM,102464:JM,102528:JM,102469:JM,102470:JM,102475:JM,102508:JM,102476:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463
102433 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,102433:JM,102464:JM,102528:JM,102469:JM,102823:JM,102470:JM,102475:JM,102476:JM,102508:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463
102437 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompoundSet :: v12 = getAminoAcidCompoundSet()::JM,102481:JM,102470:JM,102440:JM,102475:JM,102476
102440 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompound :: v15 = v12.getCompoundForString(#(-))::JM,102481:JM,102470:JM,102440:JM,102475:JM,102476
102446 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v172)::JM,102433:JM,102464:JM,102528:JM,102469:JM,102823:JM,102470:JM,102475:JM,102476:JM,102508:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463
102452 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v172)::JM,102433:JM,102464:JM,102528:JM,102469:JM,102823:JM,102470:JM,102475:JM,102476:JM,102508:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463
102458 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v172)::JM,102433:JM,102464:JM,102528:JM,102469:JM,102823:JM,102470:JM,102475:JM,102476:JM,102508:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463
102463 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,102433:JM,102464:JM,102528:JM,102469:JM,102823:JM,102470:JM,102475:JM,102476:JM,102508:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463
102464 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v172)::JM,102433:JM,102464:JM,102528:JM,102469:JM,102823:JM,102470:JM,102475:JM,102476:JM,102508:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463
102469 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,102481:JM,102483:JM,102469:JM,102452:JM,102470:JM,102488:JM,102475:JM,102476:JM,102463
102470 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,102481:JM,102483:JM,102469:JM,102452:JM,102470:JM,102488:JM,102475:JM,102476:JM,102463
102475 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 552::CF,102832:CD,102476:CD,102481:CD,102822:CD,102823:CD,102833:CD,102834:JM,102483:JM,102469:JM,102470:JM,102488:JM,102475:JM,102463
102476 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,102481:JM,102483:JM,102469:JM,102470:JM,102488:JM,102475:JM,102476:JM,102463
102481 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,102483:CD,102488:CD,102822:CD,102823:CD,102832:CD,102833:CD,102834:JM,102481:JM,102469:JM,102452:JM,102470:JM,102475:JM,102476:JM,102463
102483 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,102481:JM,102483:JM,102469:JM,102452:JM,102470:JM,102488:JM,102475:JM,102476:JM,102463
102489 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
102488 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 552::CF,102832:CD,102489:CD,102493:CD,102498:CD,102499:CD,102503:CD,102508:CD,102509:CD,102513:CD,102518:CD,102519:CD,102523:CD,102528:CD,102529:CD,102822:CD,102823:CD,102833:CD,102834
102493 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,102498
102499 :: CALL :: call :: I :: v40 = v38.intValue()::JM,102508
102498 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,102508
102503 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,102433:JM,102464:JM,102528:JM,102469:JM,102823:JM,102470:JM,102475:JM,102508:JM,102476:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463
102509 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
102508 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,102529
102513 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,102518
102519 :: CALL :: call :: I :: v50 = v48.intValue()::JM,102528
102518 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,102528
102523 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,102433:JM,102464:JM,102528:JM,102469:JM,102823:JM,102470:JM,102475:JM,102476:JM,102508:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463
102529 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,102530:CD,102533:CD,102538:CD,102543:CD,102548:CD,102553:CD,102558:CD,102563:CD,102568:CD,102573:CD,102578:CD,102583:CD,102588:CD,102593:CD,102822:CD,102823:CD,102832:CD,102833:CD,102834
102528 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,102530:JM,102433:JM,102464:JM,102528:JM,102469:JM,102823:JM,102470:JM,102475:JM,102508:JM,102476:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463:CF,102529
102530 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,102533:CD,102538:CD,102543:CD,102548:CD,102553:CD,102558:CD,102563:CD,102568:CD,102573:CD,102578:CD,102583:CD,102588:CD,102593:CD,102602:CD,102606:CD,102610:CD,102822:CD,102823:CD,102832:CD,102833:CD,102834
102533 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
102538 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v172)::
102543 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
102548 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
102553 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
102558 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
102563 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
102568 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
102573 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
102578 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
102583 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
102588 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
102593 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
102602 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,102610:JM,102664:CL,75053
102606 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,102611:JM,102664:CL,75053
102611 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 340::CD,102650:CD,102651:CD,102655:CD,102659:CD,102664:CD,102802:CD,102806:CD,102811:CD,102812:CD,102816:CD,102822:CD,102823:CD,102832:CD,102833:CD,102834
102610 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,102611:CD,102650
102651 :: CALL :: call :: Ljava/lang/String :: v92 = v90.trim()::JM,102664
102650 :: NORM :: compound :: Z :: return #(1)::DD,102425
102655 :: CALL :: call :: Ljava/lang/String :: v94 = v88.trim()::JM,102664
102659 :: CALL :: call :: Z :: v96 = v92.equals(v94)::JM,102664
102665 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
102664 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 527::CF,102665:CD,102670:CD,102675:CD,102680:CD,102685:CD,102690:CD,102695:CD,102700:CD,102705:CD,102710:CD,102715:CD,102720:CD,102725:CD,102729:CD,102733:CD,102735:CD,102740
102670 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v43)::
102675 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(' (position ))::
102680 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v23)::
102685 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v106.append(#() does not align with '))::
102690 :: CALL :: call :: Ljava/lang/StringBuilder :: v111 = v109.append(v53)::
102695 :: CALL :: call :: Ljava/lang/StringBuilder :: v113 = v111.append(#(' (position ))::
102700 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v113.append(v26)::
102705 :: CALL :: call :: Ljava/lang/StringBuilder :: v118 = v115.append(#(), should be: ))::
102710 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v118.append(v17)::
102715 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#( : ))::
102720 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v20)::
102725 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
102729 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v129 = v43.getType()::JM,102740:JM,102735:CL,70174:CL,70190:CL,70182
102733 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v130 = org.biojava.nbio.structure.HetatomImpl.type::JM,102740:JM,102735
102735 :: CALL :: call :: Z :: v132 = v129.equals(v130)::JM,102740:JM,102735
102741 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v134 = v53.getType()::JM,102752:JM,102747:CL,70174:CL,70190:CL,70182
102740 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 493::CD,102741:CD,102745:CD,102747:CD,102752:CD,102780:CD,102781:CD,102789:CD,102794
102745 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v135 = org.biojava.nbio.structure.HetatomImpl.type::JM,102752:JM,102747
102747 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,102752:JM,102747
102752 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 493::CD,102755:CD,102756:CD,102764:CD,102769:CD,102780:CD,102781:CD,102789:CD,102794
102755 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
102756 :: CALL :: call :: Ljava/lang/String :: v141 = valueOf(v127)::
102764 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v139.append(#(. They seem to be het...))::
102769 :: CALL :: call :: Ljava/lang/String :: v147 = v145.toString()::
102781 :: CALL :: call :: Ljava/lang/String :: v152 = valueOf(v127)::
102780 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v150 = new java.lang.StringBuilder::
102789 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v150.append(#(. This could be a pro...))::
102794 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
102802 :: CALL :: call :: Ljava/lang/Integer :: v161 = valueOf(v23)::
102806 :: CALL :: call :: Ljava/lang/Object :: v163 = p4 $seqresIndexPosition .get(v161)::JM,102811
102811 :: EXPR :: assign :: Ljava/lang/Object :: v164 = CHECKCAST v163::
102812 :: CALL :: call :: I :: v166 = v164.intValue()::
102816 :: CALL :: call :: Ljava/lang/Object :: v168 = p1 $seqResGroups .set(v166, v53)::JM,102433:JM,102464:JM,102528:JM,102469:JM,102823:JM,102470:JM,102475:JM,102508:JM,102476:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463
102823 :: PRED :: IF :: Z :: if (v172 <= v9) goto 32::CD,102446:CD,102452:CD,102458:CD,102463:CD,102464:CD,102469:CD,102470:CD,102475:CD,102831:CD,102832:JM,102433:JM,102528:JM,102823:JM,102476:JM,102508:JM,102481:JM,102483:JM,102488
102822 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v172 + #(1)::DD,102834:CF,102833
102831 :: NORM :: compound :: Z :: return v171::DD,102425
102833 :: EXPR :: assign :: null :: PHI v171 = #(1), v169::CF,102834:DD,102831:DD,102832
102832 :: EXPR :: assign :: null :: PHI v169 = v171, v171, v171, v171, #(0)::DD,102833:CF,102822
102834 :: EXPR :: assign :: null :: PHI v172 = #(1), v170::JM,102464:JM,102528:JM,102469:JM,102470:JM,102475:JM,102476:JM,102446:JM,102481:JM,102483:JM,102452:JM,102488:JM,102458:JM,102463:JM,102508:DD,102822:DD,102823
103004 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(java.lang.Object,java.lang.Object)::CD,103012
103012 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,116195
103022 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(java.lang.Object,java.lang.Object)::CD,103030
103030 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,116227
103041 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int)::
103040 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int)::CE,103041:CD,103045:CD,103051
103045 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChain(#(0), p1 $number )::JM,103051:CL,86242
103051 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,103041
103057 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::CE,103058:CD,103061:CD,103065:CD,103090:CD,103094
103058 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::JM,92408:JM,93529
103061 :: CALL :: call :: Ljava/util/List :: v4 = p1 $c .getAtomGroups()::JM,103094:CL,70097
103065 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,103094
103070 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,103094
103075 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v14 = v12.getType()::JM,103081:CL,70174:CL,70190:CL,70182
103079 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v15 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,103081
103081 :: PRED :: IF :: Z :: if (v14 == v15) goto 50::CD,103082:CD,103086:CD,103088:CD,103089
103082 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v17 = v12.getType()::JM,103088:CL,70174:CL,70190:CL,70182
103086 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v18 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,103088
103089 :: NORM :: compound :: Z :: return #(0)::DD,103058
103088 :: PRED :: IF :: Z :: if (v17 != v18) goto 52::CD,103089:CD,103090:CD,103094
103090 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,103094
103095 :: NORM :: compound :: Z :: return #(1)::DD,103058
103094 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 16::CD,103070:CD,103075:CD,103079:CD,103081:CD,103095:JM,103094
103109 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::JM,92528:JM,92534
103108 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::CF,103109:CF,103119:CD,103120
103119 :: NORM :: compound :: Z :: return #(0)::CF,103109
103120 :: NORM :: compound :: Z :: return #(1)::CF,103109
103125 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::JM,92545:JM,93130:JM,92549:JM,93131
103124 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::CF,103125:CF,103142:CD,103129:CD,103134
103129 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v4 = new org.biojava.nbio.core.sequence.ProteinSequence::DD,103134
103134 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return v4::CF,103125
103142 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return #(null)::CF,103125
103149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::CF,103150:CD,103155:CD,103158:CD,103164:CD,103165:CD,103173:CD,103177
103150 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::JM,93132
103155 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getIdentity()::JM,103173:JM,103177:JM,103165
103158 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,103173:JM,103177:JM,103165
103165 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,103155:JM,103173:JM,103177:JM,103165
103164 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,103173:JM,103177:JM,103165:JM,103155
103173 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,103173:JM,103177:JM,103165
103177 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,103150
103189 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::CF,103190:CF,103200:CD,103201
103190 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::JM,92565:JM,92571
103201 :: NORM :: compound :: Z :: return #(1)::CF,103190
103200 :: NORM :: compound :: Z :: return #(0)::CF,103190
103205 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::CF,103206:CF,103223:CD,103210:CD,103215
103206 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/DNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::JM,92582:JM,93130:JM,93131:JM,92586
103210 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v4 = new org.biojava.nbio.core.sequence.DNASequence::DD,103215
103215 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return v4::CF,103206
103223 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return #(null)::CF,103206
103231 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::JM,93132
103230 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::CF,103231:CD,103236:CD,103239:CD,103245:CD,103246:CD,103254:CD,103258
103236 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,103254:JM,103258:JM,103246
103239 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,103254:JM,103258:JM,103246
103245 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,103254:JM,103258:JM,103246:JM,103236
103246 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,103236:JM,103254:JM,103258:JM,103246
103254 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,103254:JM,103258:JM,103246
103258 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,103231
103271 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::JM,92602:JM,92608
103270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::CF,103271:CF,103281:CD,103282
103281 :: NORM :: compound :: Z :: return #(0)::CF,103271
103282 :: NORM :: compound :: Z :: return #(1)::CF,103271
103287 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/RNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::JM,92619:JM,93130:JM,93131:JM,92623
103286 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::CF,103287:CF,103304:CD,103291:CD,103296
103291 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v4 = new org.biojava.nbio.core.sequence.RNASequence::DD,103296
103296 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return v4::CF,103287
103304 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return #(null)::CF,103287
103311 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::CF,103312:CD,103317:CD,103320:CD,103326:CD,103327:CD,103335:CD,103339
103312 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::JM,93132
103317 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,103335:JM,103339:JM,103327
103320 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,103335:JM,103339:JM,103327
103327 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,103317:JM,103335:JM,103339:JM,103327
103326 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,103335:JM,103339:JM,103327:JM,103317
103335 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,103335:JM,103339:JM,103327
103339 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,103312
103351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,103361:JM,103356:CF,103352:CD,103364:CD,103368:CD,103369:CD,103371:CD,103372
103352 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,92657
103356 :: CALL :: call :: Z :: v8 = p1 $pair .hasGap(v13)::JM,103361:JM,103364:JM,103368:JM,103356
103361 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 20::CF,103370:CD,103362
103363 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v13 + #(1)::DD,103372:CF,103371
103362 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v12 + #(1)::DD,103370
103364 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,103361:JM,103364:JM,103368:JM,103356
103369 :: NORM :: compound :: I :: return v12::CF,103352
103368 :: PRED :: IF :: Z :: if (v13 <= v6) goto 9::CD,103356:CD,103361:CD,103363:CD,103364:CD,103370:CD,103371:CD,103372:JM,103368:CF,103369
103371 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,103372:DD,103362:DD,103369:DD,103370
103370 :: EXPR :: assign :: null :: PHI v10 = v12, v9::DD,103371:CF,103363
103372 :: EXPR :: assign :: null :: PHI v13 = #(1), v11::JM,103361:JM,103364:JM,103356:DD,103363:DD,103368
103387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,103392:JM,103397:CF,103388:CD,103410:CD,103414:CD,103415:CD,103417:CD,103418
103388 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,92665
103392 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInQueryAt(v19)::JM,103392:JM,103410:JM,103397:JM,103414
103397 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,103398:JM,103402:JM,103407
103398 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,103398:JM,103402:JM,103407
103402 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,103402:JM,103407
103407 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,103416:CD,103408
103409 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,103418:CF,103417
103408 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,103416
103410 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,103392:JM,103410:JM,103397:JM,103414
103415 :: NORM :: compound :: I :: return v18::CF,103388
103414 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,103392:CD,103397:CD,103398:CD,103402:CD,103407:CD,103409:CD,103410:CD,103416:CD,103417:CD,103418:JM,103414:CF,103415
103417 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,103418:DD,103408:DD,103415:DD,103416
103416 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,103417:CF,103409
103418 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,103392:JM,103410:JM,103397:DD,103409:DD,103414
103435 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,92668
103434 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,103444:JM,103439:CF,103435:CD,103457:CD,103461:CD,103462:CD,103464:CD,103465
103439 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInTargetAt(v19)::JM,103457:JM,103461:JM,103444:JM,103439
103445 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,103445:JM,103449:JM,103454
103444 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,103445:JM,103449:JM,103454
103449 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,103449:JM,103454
103455 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,103463
103454 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,103463:CD,103455
103457 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,103457:JM,103461:JM,103444:JM,103439
103456 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,103465:CF,103464
103461 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,103439:CD,103444:CD,103445:CD,103449:CD,103454:CD,103456:CD,103457:CD,103463:CD,103464:CD,103465:JM,103461:CF,103462
103463 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,103464:CF,103456
103462 :: NORM :: compound :: I :: return v18::CF,103435
103465 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,103457:JM,103444:JM,103439:DD,103456:DD,103461
103464 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,103465:DD,103455:DD,103462:DD,103463
103651 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.areResNumbersAligned(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,103656:CD,103660:CD,103664
103656 :: CALL :: call :: Z :: v5 = isProtein(p1 $c1 )::JM,103664:JM,103666:CL,116259
103660 :: CALL :: call :: Z :: v7 = isProtein(p2 $c2 )::JM,103664:CL,116259
103664 :: PRED :: IF :: Z :: if (v5 == v7) goto 21::CD,103666:CD,103682:CD,103765:CD,103769:CD,103834
103666 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 39::CD,103669:CD,103677:CD,103834
103669 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c1 .getAtomGroups(v13)::JM,103834:CL,91684
103677 :: CALL :: call :: Ljava/util/List :: v12 = p1 $c1 .getAtomGroups(v10)::JM,103834:CL,91684
103682 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,103769
103687 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,103769
103696 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v27 = p2 $c2 .getGroupByPDB(v25)::CL,93683
103701 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getPDBName()::JM,103714:CL,75053
103705 :: CALL :: call :: Ljava/lang/String :: v31 = v23.getPDBName()::JM,103714:CL,75053
103709 :: CALL :: call :: Z :: v33 = v29.equals(v31)::JM,103714
103714 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 182::CD,103765:CD,103769
103765 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,103769
103769 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 66::CD,103687:CD,103696:CD,103701:CD,103705:CD,103709:CD,103714:JM,103769
103834 :: EXPR :: assign :: null :: PHI v16 = v15, v12::JM,103769
103922 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.addSelfToAtoms()::CD,103929:CD,103933:CD,103946:CD,103974:CD,103978:CD,103979:CD,103995:CD,103996
103929 :: CALL :: call :: Ljava/util/List :: v5 = v3.getBonds()::JM,103995:JM,103933:CL,94342
103933 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 36::CF,103995:CF,103934:CD,103942
103934 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,103995
103942 :: CALL :: call :: V :: v10.setBonds(v7)::CL,116276
103946 :: CALL :: call :: Ljava/util/Iterator :: v15 = v12.iterator()::JM,103978
103951 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,103978
103959 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v23 = v20.getOther(v21)::JM,103972:JM,103967:CL,116287
103964 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v24 = p0 $this .atomB::JM,103972:JM,103967
103967 :: CALL :: call :: Z :: v26 = v23.equals(v24)::JM,103972:JM,103967
103972 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 84::CD,103974:CD,103978:CD,103996
103974 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,103978
103979 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 116::CD,103983:CD,103990
103978 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 48::CF,103996:CD,103951:CD,103959:CD,103967:CD,103972:JM,103978
103983 :: CALL :: call :: V :: v29.addBond(p0 $this )::CL,116326
103990 :: CALL :: call :: V :: v31.addBond(p0 $this )::CL,116326
103995 :: EXPR :: assign :: null :: PHI v12 = v5, v7::JM,103978
103996 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,103979
104025 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::JM,94490:JM,94498
104024 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::CE,104025:CD,104028:CD,104032:CD,104037:CD,104041
104028 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,104445
104032 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
104037 :: CALL :: call :: Z :: v8 = v5.exists()::JM,104041
104041 :: NORM :: compound :: Z :: return v8::DD,104025
104048 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.checkDoFirstInstall()::CD,104055
104052 :: EXPR :: reference :: Z :: v3 = p0 $this .downloadAll::DD,104055
104055 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 8::CF,104057:CD,104058:CD,104065:CD,104071:CD,104075
104057 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
104058 :: EXPR :: reference :: Ljava/io/File :: v6 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
104065 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
104071 :: CALL :: call :: Z :: v13 = v9.exists()::JM,104075
104075 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 46::CD,104076:CD,104085:CD,104090:CD,104091
104076 :: CALL :: call :: V :: p0 $this .downloadAllDefinitions()::CL,116360
104085 :: CALL :: call :: [Ljava/lang/String :: v17 = v5.list(v14)::JM,104090
104091 :: PRED :: IF :: Z :: if (v18 >= #(500)) goto 99::CD,104092
104090 :: EXPR :: assign :: I :: v18 = v17.length::DD,104091
104092 :: CALL :: call :: V :: p0 $this .split()::CL,116633
104137 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::CE,104138:CD,104141:CD,104145:CD,104150:CD,104155:CD,104159:CD,104176:CD,104177:CD,104182:CD,104187:CD,104192:CD,104198:CD,104203:CD,104208:CD,104216:CD,104221:CD,104225:CD,104240:CD,104241:CD,104259:CD,104263:CD,104264:CD,104267:CD,104273:CD,104277:CD,104290:CD,104324:CD,104327:CD,104332:CD,104336:CD,104341:CD,104346:CD,104351:CD,104356:CD,104360:CD,104365:CD,104373:CD,104377:CD,104382:CD,104387
104138 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::JM,94630
104141 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,104445
104145 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
104150 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $recordName )::
104155 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
104159 :: CALL :: call :: Ljava/io/File :: v14 = createTempFile(v11, #(cif))::
104177 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
104176 :: NORM :: compound :: Z :: return #(0)::DD,104138
104182 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(p1 $recordName )::
104187 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(.cif))::
104192 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
104198 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
104203 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v32)::
104208 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
104216 :: NORM :: declaration :: Ljava/net/URL :: v43 = new java.net.URL::DD,104387
104221 :: CALL :: call :: Ljava/net/HttpURLConnection :: v46 = openHttpURLConnection(v43)::CL,116876
104225 :: NORM :: declaration :: Ljava/io/PrintWriter :: v47 = new java.io.PrintWriter::DD,104277
104241 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v54 = new java.io.InputStreamReader::
104240 :: NORM :: declaration :: Ljava/io/BufferedReader :: v53 = new java.io.BufferedReader::JM,104263:DD,104267:CF,104241
104255 :: CALL :: call :: V :: v47.println(v60)::
104259 :: CALL :: call :: Ljava/lang/String :: v60 = v53.readLine()::JM,104263
104263 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 177::CD,104255:CD,104259
104264 :: CALL :: call :: V :: v47.flush()::
104267 :: PRED :: IF :: Z :: if (v53 == #(null)) goto 226::CD,104268:CF,104277
104268 :: CALL :: call :: V :: v53.close()::
104273 :: CALL :: call :: V :: v53.close()::
104277 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 310::CD,104278
104278 :: CALL :: call :: V :: v47.close()::
104290 :: CALL :: call :: V :: v47.close()::
104324 :: NORM :: compound :: Z :: return #(1)::DD,104138
104327 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
104332 :: CALL :: call :: Ljava/lang/String :: v94 = v88.toString()::
104336 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
104341 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( OR store locally to ))::
104346 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v4)::
104351 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( Error =))::
104356 :: CALL :: call :: Ljava/lang/String :: v106 = v87.getMessage()::
104360 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v104.append(v106)::
104365 :: CALL :: call :: Ljava/lang/String :: v110 = v108.toString()::
104373 :: CALL :: call :: Z :: v113 = v14.delete()::
104377 :: NORM :: compound :: Z :: return #(0)::DD,104138
104382 :: EXPR :: assign :: Ljava/lang/Exception :: v87 = catch <exc>::
104387 :: EXPR :: assign :: null :: PHI v88 = #(null), v43, v43, v43, v43, v43, v43::
104445 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::CE,104446:CD,104449:CD,104451:CD,104456:CD,104471:CD,104473:CD,104474:CD,104481:CD,104485:CD,104518:CD,104519:CD,104520:CD,104528:CD,104533:CD,104542:CD,104546
104446 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::
104449 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::JM,104456
104451 :: CALL :: call :: Z :: v5 = v3.contains(p1 $recordName )::JM,104456
104457 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
104456 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 30::CF,104457:CD,104462:CD,104467
104462 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $recordName )::JM,104456
104467 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
104471 :: CALL :: call :: V :: initPath()::CL,37799
104473 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::
104474 :: EXPR :: reference :: Ljava/io/File :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
104481 :: CALL :: call :: Z :: v21 = v16.exists()::JM,104485
104485 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 99::CF,104518:CD,104488:CD,104493:CD,104498:CD,104506
104488 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
104493 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v16)::
104498 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
104506 :: CALL :: call :: Z :: v32 = v16.mkdir()::
104519 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
104518 :: NORM :: declaration :: Ljava/io/File :: v36 = new java.io.File::JM,104546:CF,104519
104520 :: CALL :: call :: Ljava/lang/String :: v39 = valueOf(v14)::
104528 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v37.append(#(.cif.gz))::
104533 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::
104542 :: CALL :: call :: Ljava/lang/String :: v48 = v36.toString()::JM,104546
104546 :: NORM :: compound :: Ljava/lang/String :: return v48::DD,104446
104585 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: v4 = new org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary::DD,104589
104589 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: p0 $this .dictionary = v4::
104605 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::CE,104606:CD,104613:CD,104618:CD,104619
104606 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::JM,94564:JM,104769
104613 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::JM,104618
104619 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v7::DD,104606
104618 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,104619
104639 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::CE,104640:CD,104644:CD,104648:CD,104656:CD,104661:CD,104666:CD,104671:CD,104675:CD,104682:CD,104687:CD,104692:CD,104697:CD,104705:CD,104798:CD,104801:CD,104805
104640 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::JM,94624
104644 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::
104648 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::
104656 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
104661 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v7)::
104666 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(.cif.gz))::
104671 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
104675 :: CALL :: call :: Ljava/io/InputStream :: v22 = v10.getResourceAsStream(v20)::JM,104705
104682 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
104687 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v24.append(v7)::
104692 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(#(.cif.gz))::
104697 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
104705 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 112::CD,104713:CD,104716:CD,104724:JM,84999:JM,117026:JM,117012:JM,104585:JM,117019:CD,104733:CD,104737:CD,104738:CD,104752:CD,104760:CD,104769
104713 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v55 = getEmptyChemComp()::JM,104724:CL,117041
104716 :: CALL :: call :: V :: v55.setId(v7)::CL,117080
104724 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v55::DD,104640
104733 :: CALL :: call :: V :: v34.addMMcifConsumer(v36)::CL,85057
104737 :: NORM :: declaration :: Ljava/io/BufferedReader :: v39 = new java.io.BufferedReader::CF,104738
104738 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v40 = new java.io.InputStreamReader::
104752 :: CALL :: call :: V :: v34.parse(v39)::CL,85074
104760 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v49 = v47.getChemComp(v7)::JM,104769:CL,104605
104769 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v49::DD,104640
104798 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v73 = getEmptyChemComp()::JM,104805:CL,117041
104801 :: CALL :: call :: V :: v73.setId(v7)::CL,117080
104805 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v73::DD,104640
104951 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::CE,104952:CD,104955:CD,104964:CD,104968
104952 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::JM,95007
104955 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainDescriptionFileName()::CL,117288
104964 :: CALL :: call :: Z :: v8 = v5.exists()::JM,104968
104968 :: NORM :: compound :: Z :: return v8::DD,104952
104975 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainDescriptionFile()::CD,104980:CD,104989:CD,104998
104980 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-descripti...))::CL,117323
104989 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainDescriptionFileName()::CL,117288
104998 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,117402
105018 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile()::CD,105023:CD,105035:CD,105036:CD,105050
105023 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainDescriptionFileName()::CL,117288
105035 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,105036
105036 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
105050 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile(v9)::CL,117619
105067 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainListInstalled()::CD,105074:CD,105078:CD,105091:CD,105103:CD,105114:CD,105126
105071 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainList::JM,105078
105074 :: CALL :: call :: Z :: v5 = v3.get()::JM,105078
105078 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,105080:CD,105084:CD,105108:CD,105134
105080 :: CALL :: call :: Z :: v8 = p0 $this .domainListFileAvailable()::JM,105084:CL,118347
105085 :: CALL :: call :: V :: p0 $this .downloadDomainListFile()::CL,118371
105084 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,105085
105091 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
105100 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainList::
105103 :: CALL :: call :: V :: v16.set(#(0))::
105108 :: CALL :: call :: V :: p0 $this .parseCathDomainList()::CL,118414
105114 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
105123 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainList::
105126 :: CALL :: call :: V :: v24.set(#(0))::
105131 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainList::JM,105134
105134 :: CALL :: call :: V :: v26.set(#(1))::JM,105134
105151 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::JM,95109
105150 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::CE,105151:CD,105154:CD,105163:CD,105167
105154 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomallFileName()::CL,118463
105163 :: CALL :: call :: Z :: v8 = v5.exists()::JM,105167
105167 :: NORM :: compound :: Z :: return v8::DD,105151
105174 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomallFile()::CD,105179:CD,105188:CD,105197
105179 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-boundarie...))::CL,117323
105188 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomallFileName()::CL,118463
105197 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,117402
105217 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall()::CD,105222:CD,105234:CD,105235:CD,105249
105222 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomallFileName()::CL,118463
105235 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
105234 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,105235
105249 :: CALL :: call :: V :: p0 $this .parseCathDomall(v9)::CL,118498
105266 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.releaseReferences()::CD,105272:CD,105274:CD,105278:CD,105312:CD,105316
105272 :: EXPR :: reference :: Ljava/util/Map :: v3 = org.biojava.nbio.structure.ecod.EcodFactory.versionedEcodDBs::JM,105316:JM,105287
105274 :: CALL :: call :: Ljava/util/Set :: v5 = v3.entrySet()::JM,105316:JM,105287
105278 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,105316:JM,105287
105283 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,105316:JM,105287
105287 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,105292
105288 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.getValue()::JM,105292
105293 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.get()::JM,105297
105292 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,105297
105297 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 73::CD,105309:JM,105316:JM,105287
105309 :: CALL :: call :: V :: v7.remove()::
105312 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,105316:JM,105287
105316 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 24::CD,105283:CD,105287:CD,105288:CD,105292:CD,105293:CD,105297:CD,105312:JM,105316
105349 :: NORM :: declaration :: Ljava/util/concurrent/locks/ReentrantReadWriteLock :: v6 = new java.util.concurrent.locks.ReentrantReadWriteLock::DD,105353
105353 :: EXPR :: modify :: Ljava/util/concurrent/locks/ReadWriteLock :: p0 $this .domainsFileLock = v6::
105356 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheLocation = p1 $cacheLocation ::
105359 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .requestedVersion = p2 $version ::
105362 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .url = #(http://prodata.swmed.edu)::
105365 :: EXPR :: modify :: Ljava/util/List :: p0 $this .allDomains = #(null)::
105416 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getVersion()::CD,105420
105420 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,119264
105440 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.indexDomains()::CD,105463:CD,105467:CD,105479:CD,105553:CD,105557
105460 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,105463
105463 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::CD,105464:CF,105467
105464 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,119264
105467 :: NORM :: declaration :: Ljava/util/HashMap :: v13 = new java.util.HashMap::DD,105473
105473 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v13::
105476 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .allDomains::JM,105488:JM,105557
105479 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,105488:JM,105557
105484 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,105488:JM,105557
105489 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getPdbId()::JM,105493:CL,99364
105488 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::
105493 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 122::CD,105494:CD,105498
105494 :: CALL :: call :: Ljava/lang/String :: v29 = v25.getDomainId()::JM,105499:JM,105498:JM,105503:CL,95610
105499 :: CALL :: call :: Z :: v31 = v29.isEmpty()::JM,105499:JM,105503
105498 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 122::CD,105499:CD,105503
105503 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 122::CD,105506:CD,105511
105506 :: CALL :: call :: Ljava/util/regex/Matcher :: v34 = v32.matcher(v29)::
105511 :: CALL :: call :: Ljava/lang/String :: v37 = v34.group(#(1))::
105519 :: CALL :: call :: Z :: v41 = v39.containsKey(v38)::JM,105524
105524 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 152::CF,105535:CD,105528:CD,105533:CD,105542:CD,105595
105528 :: CALL :: call :: Ljava/lang/Object :: v44 = v42.get(v38)::JM,105533
105533 :: EXPR :: assign :: Ljava/lang/Object :: v45 = CHECKCAST v44::DD,105595
105535 :: NORM :: declaration :: Ljava/util/LinkedList :: v46 = new java.util.LinkedList::DD,105595
105542 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.put(v38, v46)::
105548 :: CALL :: call :: Z :: v53 = v51.add(v25)::
105553 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,105488:JM,105557
105557 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 67::CD,105484:CD,105488:CD,105489:CD,105493:CD,105519:CD,105524:CD,105548:CD,105553:CD,105595:JM,105557
105595 :: EXPR :: assign :: null :: PHI v51 = v45, v46::
105651 :: EXPR :: reference :: Ljava/lang/Long :: v5 = p1 $o .uid::DD,105654
105654 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .uid = v5::
105657 :: EXPR :: reference :: Ljava/lang/String :: v6 = p1 $o .domainId::DD,105660
105660 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .domainId = v6::
105663 :: EXPR :: reference :: Ljava/lang/Boolean :: v7 = p1 $o .manual::DD,105666
105666 :: EXPR :: modify :: Ljava/lang/Boolean :: p0 $this .manual = v7::
105669 :: EXPR :: reference :: Ljava/lang/Integer :: v8 = p1 $o .xGroup::DD,105672
105672 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .xGroup = v8::
105675 :: EXPR :: reference :: Ljava/lang/Integer :: v9 = p1 $o .hGroup::DD,105678
105678 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .hGroup = v9::
105681 :: EXPR :: reference :: Ljava/lang/Integer :: v10 = p1 $o .tGroup::DD,105684
105684 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .tGroup = v10::
105687 :: EXPR :: reference :: Ljava/lang/Integer :: v11 = p1 $o .fGroup::DD,105690
105690 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .fGroup = v11::
105693 :: EXPR :: reference :: Ljava/lang/String :: v12 = p1 $o .pdbId::DD,105696
105696 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v12::
105699 :: EXPR :: reference :: Ljava/lang/String :: v13 = p1 $o .chainId::DD,105702
105702 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v13::
105705 :: EXPR :: reference :: Ljava/lang/String :: v14 = p1 $o .range::DD,105708
105708 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .range = v14::
105711 :: EXPR :: reference :: Ljava/lang/String :: v15 = p1 $o .seqIdRange::DD,105714
105714 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .seqIdRange = v15::
105717 :: EXPR :: reference :: Ljava/lang/String :: v16 = p1 $o .architectureName::DD,105720
105720 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .architectureName = v16::
105723 :: EXPR :: reference :: Ljava/lang/String :: v17 = p1 $o .xGroupName::DD,105726
105726 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .xGroupName = v17::
105729 :: EXPR :: reference :: Ljava/lang/String :: v18 = p1 $o .hGroupName::DD,105732
105732 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .hGroupName = v18::
105735 :: EXPR :: reference :: Ljava/lang/String :: v19 = p1 $o .tGroupName::DD,105738
105738 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tGroupName = v19::
105741 :: EXPR :: reference :: Ljava/lang/String :: v20 = p1 $o .fGroupName::DD,105744
105744 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fGroupName = v20::
105747 :: EXPR :: reference :: Ljava/lang/Long :: v21 = p1 $o .assemblyId::DD,105750
105750 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .assemblyId = v21::
105753 :: NORM :: declaration :: Ljava/util/HashSet :: v22 = new java.util.HashSet::DD,105761
105761 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .ligands = v22::
105803 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String,boolean)::CD,105813:CD,105818:CD,105819
105813 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,105818
105819 :: PRED :: IF :: Z :: if (p2 $forceLocalData  == #(0)) goto 81::CD,105820:CD,105854
105818 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,105820:DD,105821:DD,105854:CF,105819
105821 :: EXPR :: assign :: Z :: v25=v10 INSTANCEOF org.biojava.nbio.structure.scop.LocalScopDatabase::DD,105822
105820 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 36::CD,105821:CD,105822:CD,105826:JM,136451:JM,136580:JM,119435:JM,136585:JM,136590:JM,136461:JM,136589:JM,136465:JM,136598:JM,40533:JM,119447:JM,136475:JM,136603:JM,40540:JM,136607:JM,119455:JM,136482:JM,136419:JM,136608:JM,136423:JM,136490:JM,136616:JM,136621:JM,136626:JM,136433:JM,136497:JM,136625:JM,130550:JM,136437:JM,136634:JM,136571:JM,136504:JM,136447:JM,136639:JM,136572:CD,105840:CD,105846
105822 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 79::CD,105826:JM,136451:JM,136580:JM,119435:JM,136585:JM,136590:JM,136461:JM,136589:JM,136465:JM,136598:JM,40533:JM,119447:JM,136475:JM,136603:JM,40540:JM,136607:JM,119455:JM,136482:JM,136419:JM,136608:JM,136423:JM,136490:JM,136616:JM,136621:JM,136626:JM,136433:JM,136497:JM,136625:JM,130550:JM,136437:JM,136634:JM,136571:JM,136504:JM,136447:JM,136639:JM,136572:CD,105840:CD,105846
105826 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getSimpleName()::
105840 :: CALL :: call :: V :: v31.setScopVersion(v6)::CL,119472
105846 :: CALL :: call :: Ljava/lang/Object :: v36 = v34.put(v6, v31)::
105854 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 127::CD,105858:CD,105878
105858 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getSimpleName()::
105878 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.put(v6, v18)::
105923 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::CE,105924:CD,105928:CD,105933:CD,105937:CD,105945:CD,105950:CD,105955:CD,105960:CD,105964:CD,105969:CD,105977:CD,105981:CD,105985:CD,105989:CD,105993
105924 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::JM,95641
105928 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $scopId .trim()::
105933 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
105937 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
105945 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(getDomainByScopID?scopId=))::
105950 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(v5)::
105955 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#(&version=))::
105960 :: CALL :: call :: Ljava/lang/String :: v21 = p0 $this .getScopVersion()::CL,106018
105964 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v19.append(v21)::
105969 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
105977 :: CALL :: call :: Ljava/io/InputStream :: v28 = getInputStream(v6)::CL,96646
105981 :: CALL :: call :: Ljava/lang/String :: v30 = convertStreamToString(v28)::JM,105989:JM,105993:CL,96660
105985 :: CALL :: call :: Ljava/lang/String :: v32 = v30.trim()::JM,105989:JM,105993
105989 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,105989:JM,105993
105993 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 80::CD,105994:CD,105998:CD,105999
105994 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v38 = getScopDomainFromXML(v30)::JM,105998:CL,119571
105999 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,105924
105998 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v38::DD,105924
106019 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::
106018 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::CE,106019:CD,106025:CD,106078:CD,106079:CD,106087:CD,106092:CD,106097:CD,106110:CD,106111
106022 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .version::DD,106025
106025 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 106::CD,106027:CD,106031:CD,106039:CD,106044:CD,106052:CD,106056:CD,106066
106027 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
106031 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
106039 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getScopVersion))::
106044 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
106052 :: CALL :: call :: Ljava/io/InputStream :: v18 = getInputStream(v5)::CL,96646
106056 :: CALL :: call :: Ljava/lang/String :: v20 = convertStreamToString(v18)::JM,106060:CL,96660
106060 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v20::
106063 :: EXPR :: reference :: Ljava/lang/String :: v21 = p0 $this .version::DD,106066
106067 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .version::JM,106074
106066 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 106::CD,106070
106070 :: CALL :: call :: Ljava/lang/String :: v24 = v22.trim()::JM,106074
106074 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v24::
106079 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
106078 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v26 = new java.lang.RuntimeException::
106084 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .server::
106087 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v27.append(v30)::
106092 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v32.append(#(getScopVersion))::
106097 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
106107 :: EXPR :: reference :: Ljava/lang/String :: v38 = p0 $this .version::DD,106110
106111 :: EXPR :: assign :: Ljava/lang/Exception :: v25 = catch <exc>::
106110 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,106019
106128 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.ensureClaInstalled()::CD,106135:CD,106139
106132 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedCla::JM,106139
106135 :: CALL :: call :: Z :: v5 = v3.get()::JM,106139
106139 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,106141:CD,106145:CD,106149:CD,106155
106141 :: CALL :: call :: Z :: v8 = p0 $this .claFileAvailable()::JM,106145:CL,119617
106145 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 23::CD,106146
106146 :: CALL :: call :: V :: p0 $this .downloadClaFile()::CL,119655
106149 :: CALL :: call :: V :: p0 $this .parseClassification()::CL,119747
106152 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedCla::JM,106155
106155 :: CALL :: call :: V :: v11.set(#(1))::JM,106155
106193 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.scop.ScopDomain.clone()::JM,95846
106192 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.clone()::CE,106193:CD,106196:CD,106200:CD,106208:CD,106216:CD,106224:CD,106232:CD,106240:CD,106248:CD,106256:CD,106264:CD,106272:CD,106280:CD,106288:CD,106296:CD,106300
106196 :: CALL :: call :: Ljava/lang/Object :: v4 = p0 $this .clone()::
106200 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = new org.biojava.nbio.structure.scop.ScopDomain::DD,106300
106208 :: CALL :: call :: V :: v5.setClassId(v8)::CL,119814
106216 :: CALL :: call :: V :: v5.setClassificationId(v11)::CL,119834
106224 :: CALL :: call :: V :: v5.setDomainId(v14)::CL,119854
106232 :: CALL :: call :: V :: v5.setFamilyId(v17)::CL,119874
106240 :: CALL :: call :: V :: v5.setFoldId(v20)::CL,119894
106248 :: CALL :: call :: V :: v5.setPdbId(v23)::CL,119905
106256 :: CALL :: call :: V :: v5.setPx(v26)::CL,119925
106264 :: CALL :: call :: V :: v5.setRanges(v29)::CL,119936
106272 :: CALL :: call :: V :: v5.setScopId(v32)::CL,119947
106280 :: CALL :: call :: V :: v5.setSpeciesId(v35)::CL,119967
106288 :: CALL :: call :: V :: v5.setSunid(v38)::CL,119987
106296 :: CALL :: call :: V :: v5.setSuperfamilyId(v41)::CL,120007
106300 :: NORM :: compound :: Ljava/lang/Object :: return v5::DD,106193
106331 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::JM,96034:JM,95979
106330 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::CE,106331:CD,106334:CD,106336:CD,106340:CD,106341:CD,106349:CD,106354:CD,106356:CD,106357:CD,106363:CD,106368:CD,106373:CD,106383:CD,106384
106334 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.ScopDomains.jaxbContext::JM,106336:JM,106354:JM,106349
106336 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,106336:JM,106354:JM,106349
106341 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
106340 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,106354:JM,106349
106349 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,106354:JM,106349
106354 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,106383
106357 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
106356 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
106363 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(v19)::
106368 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( from XML))::
106373 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
106383 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: return v13::DD,106331
106384 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
106396 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.reloadFromFile()::CD,106400:CD,106404:CD,106411:CD,106415
106400 :: CALL :: call :: Ljava/io/File :: v4 = p0 $this .getCacheFile()::JM,106451:JM,106423:CL,120018
106404 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
106411 :: CALL :: call :: Z :: v8 = v4.exists()::JM,106415
106415 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 55::CD,106418:CD,106423:CD,106427:CD,106432:CD,106446:CD,106451:CD,106455:CD,106460:CD,106473:CD,106478:CD,106482:CD,106486:CD,106508:CD,106513:CD,106517:CD,106522:CD,106530:CD,106534:CD,106538:CD,106543:CD,106548
106418 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
106423 :: CALL :: call :: Ljava/lang/String :: v67 = v4.getAbsolutePath()::JM,106451:JM,106423
106427 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
106432 :: CALL :: call :: Ljava/lang/String :: v71 = v69.toString()::
106446 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
106451 :: CALL :: call :: Ljava/lang/String :: v15 = v4.getAbsolutePath()::JM,106451:JM,106423
106455 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v11.append(v15)::
106460 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
106473 :: NORM :: declaration :: Ljava/io/ObjectInputStream :: v23 = new java.io.ObjectInputStream::
106478 :: CALL :: call :: Ljava/lang/Object :: v26 = v23.readObject()::JM,106482
106483 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .serializedCache = v32::
106482 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v26::DD,106483
106486 :: CALL :: call :: V :: v23.close()::
106508 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
106513 :: CALL :: call :: Ljava/lang/String :: v42 = v4.getName()::JM,106451:JM,106423
106517 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
106522 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( size: ))::
106527 :: EXPR :: reference :: Ljava/util/Map :: v48 = p0 $this .serializedCache::
106530 :: CALL :: call :: Ljava/util/Set :: v50 = v48.keySet()::
106534 :: CALL :: call :: I :: v52 = v50.size()::
106538 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v47.append(v52)::
106543 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#( cached records.))::
106548 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
106593 :: EXIT :: exit :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::JM,96432:JM,96419:JM,96451:JM,96483:JM,96436:JM,96487:JM,96441:JM,96413:JM,96445:JM,96446
106592 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::CE,106593:CD,106596:CD,106598:CD,106602:CD,106603:CD,106611:CD,106616:CD,106618:CD,106621:CD,106623
106596 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.domain.AssignmentXMLSerializer.jaxbContext::JM,106611:JM,106598:JM,106616
106598 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,106611:JM,106598:JM,106616
106603 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
106602 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,106611:JM,106616
106611 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,106611:JM,106616
106616 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,106623
106618 :: CALL :: call :: V :: v14.printStackTrace()::
106621 :: NORM :: compound :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: return v17::DD,106593
106623 :: EXPR :: assign :: null :: PHI v17 = v13, #(null)::CF,106621
106634 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL,boolean,int)::CD,106640
106640 :: CALL :: call :: Ljava/net/HttpURLConnection :: v7 = openHttpURLConnection(p1 $url , p3 $timeout )::CL,120281
106701 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.flushCache()::CD,106708
106705 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .serializedCache::DD,106708
106708 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 9::CD,106714:CD,106723:CD,106731:CD,106735
106714 :: CALL :: call :: Ljava/io/File :: v7 = p0 $this .getCacheFile()::CL,120018
106723 :: NORM :: declaration :: Ljava/io/ObjectOutputStream :: v10 = new java.io.ObjectOutputStream::
106728 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .serializedCache::
106731 :: CALL :: call :: V :: v10.writeObject(v12)::
106735 :: CALL :: call :: V :: v10.close()::
106771 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.flagLoading(java.lang.String)::CD,106779:CD,106784
106779 :: CALL :: call :: Z :: v6 = v4.contains(p1 $name )::JM,106784
106784 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 24::CD,106788
106788 :: CALL :: call :: Z :: v10 = v8.add(p1 $name )::
106800 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructureById(java.lang.String)::CD,106805:CD,106810
106805 :: CALL :: call :: Ljava/io/InputStream :: v5 = p0 $this .getInputStream(p1 $pdbId )::CL,120551
106810 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getStructure(v5)::CL,99208:CL,120639
106821 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.flagLoadingFinished(java.lang.String)::CD,106829
106829 :: CALL :: call :: Z :: v6 = v4.remove(p1 $name )::
106848 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentEnd()::CD,106855:CD,106914:CD,106921:CD,107042:CD,107046:CD,107064:CD,107068:CD,107114:CD,107118:CD,107134:CD,107138:CD,107154:CD,107158:CD,107464:CD,107468:CD,107491:CD,107497:CD,107501:CD,107508:CD,107512:CD,107692:CD,107695:CD,107698:CD,107705:CD,107812:CD,107816:CD,107817:CD,107821:CD,107852:CD,107857:CD,107862:CD,107870:CD,107874
106852 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .current_chain::DD,106855
106855 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 57::CD,106862:CD,106876:CD,106881
106862 :: CALL :: call :: V :: v12.addGroup(v13)::CL,60033
106876 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = isKnownChain(v17, v18)::JM,106881:CL,120710
106881 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 78::CD,106888
106882 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .current_model::
106885 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v22 = p0 $this .current_chain::
106888 :: CALL :: call :: Z :: v24 = v21.add(v22)::
106914 :: CALL :: call :: V :: v25.addModel(v26)::CL,61582
106918 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .structAsyms::JM,106930:JM,107046
106921 :: CALL :: call :: Ljava/util/Iterator :: v30 = v28.iterator()::JM,106930:JM,107046
106926 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,106930:JM,107046
106930 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,107006
106958 :: CALL :: call :: Ljava/lang/Object :: v49 = v43.put(v45, v47)::
106968 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v53 = p0 $this .getEntityChain(v51)::CL,120755
106973 :: CALL :: call :: Ljava/lang/Object :: v55 = v53.clone()::CL,120824
106978 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .removeSeqResHeterogeneity(v56)::CL,121005
106987 :: CALL :: call :: V :: v58.setChainID(v60)::CL,60013
106991 :: EXPR :: reference :: Ljava/util/List :: v62 = p0 $this .seqResChains::
106994 :: CALL :: call :: Z :: v64 = v62.add(v58)::
107001 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
107006 :: CALL :: call :: Ljava/lang/String :: v70 = v35.getId()::JM,107006
107010 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
107015 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( ))::
107020 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v58)::
107025 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(#(<))::
107030 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
107038 :: CALL :: call :: V :: p0 $this .addCompounds(v35)::CL,121126
107042 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,106930:JM,107046
107046 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 104::CD,106926:CD,106930:CD,106958:CD,106968:CD,106973:CD,106978:CD,106987:CD,106994:CD,107001:CD,107006:CD,107010:CD,107015:CD,107020:CD,107025:CD,107030:CD,107038:CD,107042:JM,107046
107064 :: CALL :: call :: Z :: v93 = v91.isAlignSeqRes()::JM,107068:CL,65788
107068 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 321::CD,107072:CD,107076:CD,107106
107072 :: CALL :: call :: Z :: v96 = v94.isHeaderOnly()::JM,107076:CL,54222
107076 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 321::CD,107083:CD,107106
107083 :: CALL :: call :: V :: p0 $this .alignSeqRes()::CL,121666
107106 :: CALL :: call :: V :: storeUnAlignedSeqRes(v100, v101, v104)::CL,65875
107111 :: EXPR :: reference :: Ljava/util/Map :: v110 = p0 $this .asymStrandId::JM,107118
107114 :: CALL :: call :: Z :: v112 = v110.isEmpty()::JM,107118
107118 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 382::
107125 :: EXPR :: reference :: Ljava/util/Map :: v116 = p0 $this .asymId2StrandIdFromAtomSites::DD,107128
107128 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v116::
107131 :: EXPR :: reference :: Ljava/util/Map :: v117 = p0 $this .asymId2StrandIdFromAtomSites::JM,107138
107134 :: CALL :: call :: Z :: v119 = v117.isEmpty()::JM,107138
107138 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 413::
107145 :: EXPR :: reference :: Ljava/util/Map :: v123 = p0 $this .asymStrandId::DD,107148
107148 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v123::
107154 :: CALL :: call :: Z :: v126 = v124.isUseInternalChainId()::JM,107158:CL,121908
107158 :: PRED :: IF :: Z :: if (v126 != #(0)) goto 845::CD,107376:CD,107380:CD,107456:CD,107460:CD,107884:CD,107887
107163 :: CALL :: call :: Ljava/util/List :: v170 = v168.getModel(v257)::JM,107363:JM,107181:CL,70080
107168 :: NORM :: declaration :: Ljava/util/ArrayList :: v171 = new java.util.ArrayList::
107172 :: CALL :: call :: Ljava/util/Iterator :: v174 = v170.iterator()::JM,107363:JM,107181
107177 :: CALL :: call :: Ljava/lang/Object :: v178 = v174.next()::JM,107363:JM,107181
107181 :: EXPR :: assign :: Ljava/lang/Object :: v179 = CHECKCAST v178::
107182 :: EXPR :: reference :: Ljava/util/Map :: v180 = p0 $this .asymId2StrandIdFromAtomSites::JM,107198:JM,107358
107185 :: CALL :: call :: Ljava/util/Set :: v182 = v180.keySet()::JM,107198:JM,107358
107189 :: CALL :: call :: Ljava/util/Iterator :: v184 = v182.iterator()::JM,107198:JM,107358
107194 :: CALL :: call :: Ljava/lang/Object :: v188 = v184.next()::JM,107198:JM,107358
107199 :: CALL :: call :: Ljava/lang/String :: v191 = v179.getChainID()::JM,107208:CL,60024
107198 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::JM,107208
107203 :: CALL :: call :: Z :: v193 = v191.equals(v189)::JM,107208
107208 :: PRED :: IF :: Z :: if (v193 == #(0)) goto 795::CF,107882:CD,107212:CD,107225:CD,107229:CD,107233:CD,107250:CD,107254:CD,107258:CD,107262:CD,107281:CD,107285:CD,107286:CD,107290:CD,107309:CD,107313:CD,107318:CD,107323:CD,107354:CD,107358:CD,107879:CD,107880:CD,107883
107212 :: CALL :: call :: Ljava/lang/Object :: v196 = v194.get(v189)::
107225 :: CALL :: call :: Ljava/util/List :: v203 = v179.getAtomGroups()::CL,70097
107229 :: CALL :: call :: I :: v205 = v203.size()::
107233 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
107250 :: CALL :: call :: V :: v179.setChainID(v197)::CL,60013
107254 :: CALL :: call :: V :: v179.setInternalChainID(v189)::CL,121917
107258 :: CALL :: call :: Ljava/util/List :: v213 = v179.getAtomGroups()::JM,107285:CL,70097
107262 :: CALL :: call :: Ljava/util/Iterator :: v215 = v213.iterator()::JM,107285
107267 :: CALL :: call :: Ljava/lang/Object :: v219 = v215.next()::JM,107285
107272 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v222 = v220.getResidueNumber()::JM,107276:CL,55702
107277 :: CALL :: call :: V :: v222.setChainId(v197)::CL,63047
107276 :: PRED :: IF :: Z :: if (v222 == #(null)) goto 644::CF,107879:CD,107277
107281 :: CALL :: call :: Z :: v217 = v215.hasNext()::JM,107285
107285 :: PRED :: IF :: Z :: if (v217 != #(0)) goto 611::CD,107267:CD,107272:CD,107276:CD,107281:CD,107879:JM,107285
107286 :: CALL :: call :: Ljava/util/List :: v225 = v179.getSeqResGroups()::JM,107313:CL,86689
107290 :: CALL :: call :: Ljava/util/Iterator :: v227 = v225.iterator()::JM,107313
107295 :: CALL :: call :: Ljava/lang/Object :: v231 = v227.next()::JM,107313
107300 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v234 = v232.getResidueNumber()::JM,107304:CL,55702
107305 :: CALL :: call :: V :: v234.setChainId(v197)::CL,63047
107304 :: PRED :: IF :: Z :: if (v234 == #(null)) goto 704::CF,107880:CD,107305
107309 :: CALL :: call :: Z :: v229 = v227.hasNext()::JM,107313
107313 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 671::CD,107295:CD,107300:CD,107304:CD,107309:CD,107880:JM,107313
107318 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v240 = isKnownChain(v238, v171)::JM,107323:CL,120710
107323 :: PRED :: IF :: Z :: if (v240 != #(null)) goto 744::CD,107324:CD,107330:CD,107334:CD,107348:CD,107352:CD,107881:CD,107883
107324 :: CALL :: call :: Z :: v242 = v171.add(v179)::
107330 :: CALL :: call :: Ljava/util/List :: v244 = v179.getAtomGroups()::JM,107352:CL,70097
107334 :: CALL :: call :: Ljava/util/Iterator :: v246 = v244.iterator()::JM,107352
107339 :: CALL :: call :: Ljava/lang/Object :: v250 = v246.next()::JM,107352
107344 :: CALL :: call :: V :: v240.addGroup(v251)::CL,60033
107348 :: CALL :: call :: Z :: v248 = v246.hasNext()::JM,107352
107352 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 761::CD,107339:CD,107344:CD,107348:CD,107881:JM,107352
107354 :: CALL :: call :: Z :: v186 = v184.hasNext()::JM,107198:JM,107358
107359 :: CALL :: call :: Z :: v176 = v174.hasNext()::JM,107363:JM,107181
107358 :: PRED :: IF :: Z :: if (v186 != #(0)) goto 490::CF,107883:CD,107194:CD,107198:CD,107199:CD,107203:CD,107208:CD,107882:JM,107358
107363 :: PRED :: IF :: Z :: if (v176 != #(0)) goto 459::CD,107177:CD,107181:CD,107185:CD,107189:CD,107354:CD,107358:CD,107359:CD,107882:CD,107883:JM,107363
107367 :: CALL :: call :: V :: v254.setModel(v259, v171)::CL,76307
107372 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v259 + #(1)::DD,107884
107376 :: CALL :: call :: I :: v167 = v165.nrModels()::JM,107380:CL,76385
107380 :: PRED :: IF :: Z :: if (v257 < v167) goto 428::CD,107163:CD,107168:CD,107172:CD,107359:CD,107363:CD,107367:CD,107372:CD,107376:CD,107883:CD,107884
107386 :: CALL :: call :: Ljava/util/List :: v132 = v130.getModel(v161)::JM,107451:CL,70080
107391 :: CALL :: call :: Ljava/util/Iterator :: v134 = v132.iterator()::JM,107451
107396 :: CALL :: call :: Ljava/lang/Object :: v138 = v134.next()::JM,107451
107401 :: EXPR :: reference :: Ljava/util/Map :: v140 = p0 $this .asymId2StrandIdFromAtomSites::JM,107446:JM,107417
107404 :: CALL :: call :: Ljava/util/Set :: v142 = v140.keySet()::JM,107446:JM,107417
107408 :: CALL :: call :: Ljava/util/Iterator :: v144 = v142.iterator()::JM,107446:JM,107417
107413 :: CALL :: call :: Ljava/lang/Object :: v148 = v144.next()::JM,107446:JM,107417
107417 :: EXPR :: assign :: Ljava/lang/Object :: v149 = CHECKCAST v148::JM,107427
107418 :: CALL :: call :: Ljava/lang/String :: v151 = v139.getChainID()::JM,107427:CL,60024
107422 :: CALL :: call :: Z :: v153 = v151.equals(v149)::JM,107427
107427 :: PRED :: IF :: Z :: if (v153 == #(0)) goto 955::CF,107885:CD,107431:CD,107437:CD,107442:CD,107446:CD,107886
107431 :: CALL :: call :: Ljava/lang/Object :: v156 = v154.get(v149)::
107437 :: CALL :: call :: V :: v139.setInternalChainID(v157)::CL,121917
107442 :: CALL :: call :: Z :: v146 = v144.hasNext()::JM,107446:JM,107417
107447 :: CALL :: call :: Z :: v136 = v134.hasNext()::JM,107451
107446 :: PRED :: IF :: Z :: if (v146 != #(0)) goto 902::CF,107886:CD,107413:CD,107417:CD,107418:CD,107422:CD,107427:CD,107885:JM,107446
107451 :: PRED :: IF :: Z :: if (v136 != #(0)) goto 872::CD,107396:CD,107404:CD,107408:CD,107442:CD,107446:CD,107447:CD,107885:CD,107886:JM,107451:CF,107452
107452 :: EXPR :: assign :: Ljava/lang/Object :: v160 = v163 + #(1)::DD,107887
107456 :: CALL :: call :: I :: v129 = v127.nrModels()::JM,107460:CL,76385
107460 :: PRED :: IF :: Z :: if (v161 < v129) goto 849::CD,107386:CD,107391:CD,107447:CD,107451:CD,107452:CD,107456:CD,107886:CD,107887
107464 :: CALL :: call :: Z :: v268 = v266.isHeaderOnly()::JM,107468:CL,54222
107468 :: PRED :: IF :: Z :: if (v268 != #(0)) goto 1028::CD,107472:CD,107476:CD,107483:CD,107487
107472 :: CALL :: call :: Z :: v271 = v269.shouldCreateAtomBonds()::JM,107476:CL,54128
107477 :: CALL :: call :: V :: p0 $this .addBonds()::CL,121928
107476 :: PRED :: IF :: Z :: if (v271 == #(0)) goto 1014::CD,107477
107483 :: CALL :: call :: Z :: v275 = v273.shouldCreateAtomCharges()::JM,107487:CL,54201
107487 :: PRED :: IF :: Z :: if (v275 == #(0)) goto 1028::CD,107488
107488 :: CALL :: call :: V :: p0 $this .addCharges()::CL,121962
107491 :: CALL :: call :: V :: p0 $this .linkCompounds()::CL,121974
107497 :: CALL :: call :: Z :: v280 = v278.isHeaderOnly()::JM,107501:CL,54222
107501 :: PRED :: IF :: Z :: if (v280 != #(0)) goto 1046::CD,107502
107502 :: CALL :: call :: V :: p0 $this .addSites()::CL,122284
107508 :: CALL :: call :: Z :: v284 = v282.isParseBioAssembly()::JM,107512:CL,62404
107513 :: NORM :: declaration :: Ljava/util/HashMap :: v285 = new java.util.HashMap::
107512 :: PRED :: IF :: Z :: if (v284 == #(0)) goto 1349::CF,107513:CD,107520:CD,107676:CD,107680:CD,107688
107517 :: EXPR :: reference :: Ljava/util/List :: v287 = p0 $this .strucAssemblies::JM,107680:JM,107529
107520 :: CALL :: call :: Ljava/util/Iterator :: v289 = v287.iterator()::JM,107680:JM,107529
107525 :: CALL :: call :: Ljava/lang/Object :: v293 = v289.next()::JM,107680:JM,107529
107529 :: EXPR :: assign :: Ljava/lang/Object :: v294 = CHECKCAST v293::JM,107552:JM,107556:JM,107561:JM,107888:JM,107586:JM,107606:CF,107530
107530 :: NORM :: declaration :: Ljava/util/ArrayList :: v295 = new java.util.ArrayList::
107535 :: EXPR :: reference :: Ljava/util/List :: v297 = p0 $this .strucAssemblyGens::JM,107571:JM,107547
107538 :: CALL :: call :: Ljava/util/Iterator :: v299 = v297.iterator()::JM,107571:JM,107547
107543 :: CALL :: call :: Ljava/lang/Object :: v303 = v299.next()::JM,107571:JM,107547
107547 :: EXPR :: assign :: Ljava/lang/Object :: v304 = CHECKCAST v303::JM,107556:JM,107561:JM,107548
107548 :: CALL :: call :: Ljava/lang/String :: v306 = v304.getAssembly_id()::JM,107556:JM,107561:JM,107548
107552 :: CALL :: call :: Ljava/lang/String :: v308 = v294.getId()::JM,107552:JM,107556:JM,107561
107556 :: CALL :: call :: Z :: v310 = v306.equals(v308)::JM,107556:JM,107561
107561 :: PRED :: IF :: Z :: if (v310 == #(0)) goto 1149::CD,107562:JM,107571:JM,107547
107562 :: CALL :: call :: Z :: v312 = v295.add(v304)::
107567 :: CALL :: call :: Z :: v301 = v299.hasNext()::JM,107571:JM,107547
107571 :: PRED :: IF :: Z :: if (v301 != #(0)) goto 1112::CD,107543:CD,107547:CD,107548:CD,107552:CD,107556:CD,107561:CD,107567:JM,107571
107579 :: CALL :: call :: Ljava/util/ArrayList :: v317 = v313.getBioUnitTransformationList(v294, v295, v315)::CL,122717
107586 :: CALL :: call :: Ljava/lang/String :: v320 = v294.getId()::JM,107888:JM,107586
107590 :: CALL :: call :: I :: v322 = parseInt(v320)::JM,107888
107606 :: CALL :: call :: Ljava/lang/String :: v332 = v294.getOligomeric_count()::JM,107606
107610 :: CALL :: call :: I :: v334 = parseInt(v332)::
107649 :: PRED :: IF :: Z :: if (v330 == #(-1)) goto 1327::CD,107654:CD,107658:CD,107662:CD,107666:CD,107670:JM,107680:JM,107529
107654 :: CALL :: call :: V :: v354.setId(v330)::CL,90621
107658 :: CALL :: call :: V :: v354.setMacromolecularSize(v350)::CL,90632
107662 :: CALL :: call :: V :: v354.setTransforms(v317)::CL,90643
107666 :: CALL :: call :: Ljava/lang/Integer :: v360 = valueOf(v330)::
107670 :: CALL :: call :: Ljava/lang/Object :: v362 = v285.put(v360, v354)::
107676 :: CALL :: call :: Z :: v291 = v289.hasNext()::JM,107680:JM,107529
107680 :: PRED :: IF :: Z :: if (v291 != #(0)) goto 1077::CD,107525:CD,107529:CD,107530:CD,107538:CD,107567:CD,107571:JM,122709:JM,122702:CD,107579:CD,107586:CD,107590:CD,107606:CD,107610:CD,107649:CD,107676:CD,107888:JM,107680
107688 :: CALL :: call :: V :: v365.setBioAssemblies(v285)::CL,66833
107692 :: CALL :: call :: V :: p0 $this .setStructNcsOps()::CL,122841
107695 :: CALL :: call :: V :: p0 $this .setCrystallographicInfoMetadata()::CL,123215
107698 :: NORM :: declaration :: Ljava/util/HashMap :: v372 = new java.util.HashMap::JM,107874:JM,107830
107702 :: EXPR :: reference :: Ljava/util/List :: v374 = p0 $this .sequenceDifs::JM,107816
107705 :: CALL :: call :: Ljava/util/Iterator :: v376 = v374.iterator()::JM,107816
107710 :: CALL :: call :: Ljava/lang/Object :: v380 = v376.next()::JM,107816
107715 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SeqMisMatchImpl :: v382 = new org.biojava.nbio.structure.SeqMisMatchImpl::
107723 :: CALL :: call :: V :: v382.setDetails(v385)::CL,123277
107738 :: CALL :: call :: V :: v382.setInsCode(v392)::CL,123288
107746 :: CALL :: call :: V :: v382.setOrigGroup(v395)::CL,123299
107754 :: CALL :: call :: V :: v382.setPdbGroup(v398)::CL,123310
107762 :: CALL :: call :: V :: v382.setPdbResNum(v401)::CL,123321
107770 :: CALL :: call :: V :: v382.setUniProtId(v404)::CL,123332
107778 :: CALL :: call :: V :: v382.setSeqNum(v407)::CL,123343
107786 :: CALL :: call :: Ljava/lang/Object :: v412 = v372.get(v410)::JM,107791
107791 :: EXPR :: assign :: Ljava/lang/Object :: v413 = CHECKCAST v412::DD,107792:DD,107891
107793 :: NORM :: declaration :: Ljava/util/ArrayList :: v414 = new java.util.ArrayList::DD,107891
107792 :: PRED :: IF :: Z :: if (v413 != #(null)) goto 1542::CF,107891:CF,107793:CD,107801
107801 :: CALL :: call :: Ljava/lang/Object :: v419 = v372.put(v417, v414)::
107807 :: CALL :: call :: Z :: v422 = v420.add(v382)::
107812 :: CALL :: call :: Z :: v378 = v376.hasNext()::JM,107816
107817 :: CALL :: call :: Ljava/util/Set :: v425 = v372.keySet()::JM,107874:JM,107830
107816 :: PRED :: IF :: Z :: if (v378 != #(0)) goto 1378::CD,107710:CD,107715:CD,107723:CD,107738:CD,107746:CD,107754:CD,107762:CD,107770:CD,107778:CD,107786:CD,107791:CD,107792:CD,107807:CD,107812:CD,107891:JM,107816:JM,107874:JM,107830
107821 :: CALL :: call :: Ljava/util/Iterator :: v427 = v425.iterator()::JM,107874:JM,107830
107826 :: CALL :: call :: Ljava/lang/Object :: v431 = v427.next()::JM,107874:JM,107830
107830 :: EXPR :: assign :: Ljava/lang/Object :: v432 = CHECKCAST v431::
107834 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v435 = v433.getChainByPDB(v432)::CL,80930
107839 :: CALL :: call :: Ljava/lang/Object :: v437 = v372.get(v432)::
107845 :: CALL :: call :: V :: v435.setSeqMisMatches(v438)::CL,86707
107852 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v443 = new java.lang.StringBuilder::
107857 :: CALL :: call :: Ljava/lang/StringBuilder :: v447 = v443.append(v432)::
107862 :: CALL :: call :: Ljava/lang/String :: v449 = v447.toString()::
107870 :: CALL :: call :: Z :: v429 = v427.hasNext()::JM,107874:JM,107830
107874 :: PRED :: IF :: Z :: if (v429 != #(0)) goto 1573::CD,107826:CD,107830:CD,107834:CD,107839:CD,107845:CD,107870:JM,107874
107879 :: EXPR :: assign :: null :: PHI v261 = v260, v261, v261::JM,107285:DD,107879:DD,107880
107881 :: EXPR :: assign :: null :: PHI v263 = v262, v263::JM,107352:DD,107881:DD,107883
107880 :: EXPR :: assign :: null :: PHI v262 = v261, v262, v262::JM,107313:DD,107880:DD,107881:DD,107883
107883 :: EXPR :: assign :: null :: PHI v259 = v257, v262, v263, v260::JM,107363:JM,107181:DD,107372:DD,107882
107882 :: EXPR :: assign :: null :: PHI v260 = v259, v260::JM,107198:JM,107358:DD,107879:DD,107882:DD,107883
107885 :: EXPR :: assign :: null :: PHI v164 = v163, v164::JM,107446:JM,107417:DD,107885:DD,107886
107884 :: EXPR :: assign :: null :: PHI v257 = #(0), v256::DD,107380:DD,107883
107887 :: EXPR :: assign :: null :: PHI v161 = #(0), v160::DD,107460:DD,107886
107886 :: EXPR :: assign :: null :: PHI v163 = v161, v164, v164::JM,107451:DD,107452:DD,107885
107888 :: EXPR :: assign :: null :: PHI v330 = v322, #(-1)::JM,107606:DD,107649
107891 :: EXPR :: assign :: null :: PHI v420 = v413, v414::
108201 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::CE,108202:CD,108206:CD,108210:CD,108214:CD,108218:JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108318:JM,108398
108202 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::JM,97496:JM,97486
108206 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,108219:DD,108235:DD,108513
108210 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .trim()::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108214 :: CALL :: call :: I :: v9 = v7.length()::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108219 :: NORM :: compound :: Ljava/util/List :: return v4::DD,108202
108218 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,108219:CD,108220:CD,108224:CD,108228:JM,108497:JM,108515:JM,108514:JM,108277:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108220 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .trim()::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108224 :: CALL :: call :: I :: v14 = v12.length()::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108229 :: CALL :: call :: Z :: v18 = p1 $line .startsWith(#(;))::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108228 :: PRED :: IF :: Z :: if (v14 != #(1)) goto 58::CD,108229:CD,108234:CD,108493:CD,108497:CD,108498:CD,108502:CD,108507:CD,108513:CD,108525:CD,108526:CD,108527:CD,108528:CD,108529:JM,108515:JM,108514:JM,108277:JM,108228:JM,108250:JM,108218:JM,108318:JM,108398
108235 :: NORM :: compound :: Ljava/util/List :: return v4::DD,108202
108234 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 58::CD,108235:CD,108493:CD,108497:CD,108498:CD,108502:CD,108507:CD,108513:CD,108525:CD,108526:CD,108527:CD,108528:CD,108529
108237 :: CALL :: call :: C :: v23 = p1 $line .charAt(v145)::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108242 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(v23)::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108250:JM,108218:JM,108318:JM,108398
108246 :: CALL :: call :: I :: v28 = p1 $line .length()::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108251 :: PRED :: IF :: Z :: if (v145 >= v29) goto 104::CF,108514:CD,108252:CD,108253:CD,108258
108250 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 - #(1)::CF,108251
108253 :: CALL :: call :: C :: v32 = p1 $line .charAt(v30)::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108252 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v145 + #(1)::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108258 :: CALL :: call :: Ljava/lang/Character :: v34 = valueOf(v32)::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108218:JM,108318:JM,108398
108263 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v145 - #(1)::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108262 :: PRED :: IF :: Z :: if (v145 <= #(0)) goto 122::CF,108515:CD,108263:CD,108264:CD,108269
108264 :: CALL :: call :: C :: v38 = p1 $line .charAt(v36)::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108269 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(v38)::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108218:JM,108318:JM,108398
108273 :: CALL :: call :: C :: v43 = v25.charValue()::JM,108515:JM,108514:JM,108277:JM,108318:JM,108398
108277 :: PRED :: IF :: Z :: if (v43 != #(32)) goto 192::CD,108278:CD,108314:CD,108318:JM,108515:JM,108514:JM,108277:JM,108398
108279 :: CALL :: call :: Z :: v46 = v144.equals(#())::JM,108284
108278 :: PRED :: IF :: Z :: if (v141 != #(0)) goto 165::CF,108295:CD,108279:CD,108284:CD,108296:CD,108304:CD,108309:CD,108520:CD,108521:CD,108522:CD,108523:CD,108524
108285 :: CALL :: call :: Ljava/lang/String :: v48 = v144.trim()::
108284 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 162::CD,108285:CD,108289
108289 :: CALL :: call :: Z :: v50 = v4.add(v48)::
108295 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
108296 :: CALL :: call :: Ljava/lang/String :: v53 = valueOf(v144)::
108304 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v51.append(v25)::JM,108523
108309 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::JM,108523
108314 :: CALL :: call :: C :: v60 = v25.charValue()::JM,108515:JM,108514:JM,108277:JM,108318:JM,108398
108319 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 302::CD,108320:CD,108332:CD,108368:CD,108516:CD,108517
108318 :: PRED :: IF :: Z :: if (v60 != #(39)) goto 350::CD,108319:CD,108394:CD,108398:JM,108515:JM,108514:JM,108277:JM,108318
108321 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 228::CD,108322:CD,108326:CD,108330:CD,108331:CD,108516:CD,108517
108320 :: PRED :: IF :: Z :: if (v143 != #(0)) goto 236::CF,108516:CD,108321
108322 :: CALL :: call :: C :: v63 = v35.charValue()::JM,108330
108326 :: CALL :: call :: Z :: v65 = isWhitespace(v63)::JM,108330
108331 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v145 + #(1)::DD,108516
108330 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 236::CF,108516:CD,108331:CD,108517
108333 :: CALL :: call :: Z :: v70 = v144.equals(#())::JM,108338
108332 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 275::CF,108349:CD,108333:CD,108338:CD,108350:CD,108358:CD,108363:CD,108520:CD,108521:CD,108522:CD,108523:CD,108524
108339 :: CALL :: call :: Ljava/lang/String :: v72 = v144.trim()::
108338 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 272::CD,108339:CD,108343
108343 :: CALL :: call :: Z :: v74 = v4.add(v72)::
108349 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
108350 :: CALL :: call :: Ljava/lang/String :: v77 = valueOf(v144)::
108358 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v25)::JM,108523
108363 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::JM,108523
108369 :: CALL :: call :: C :: v84 = v41.charValue()::JM,108373
108368 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 320::CD,108369:CD,108373:CD,108520:CD,108521:CD,108522:CD,108523:CD,108524
108373 :: PRED :: IF :: Z :: if (v84 != #(32)) goto 323::CF,108375:CD,108376:CD,108384:CD,108389:CD,108520:CD,108521:CD,108522:CD,108523:CD,108524
108375 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
108376 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v144)::
108384 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v25)::JM,108523
108389 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,108523
108394 :: CALL :: call :: C :: v94 = v25.charValue()::JM,108515:JM,108514:JM,108277:JM,108318:JM,108398
108399 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 460::CD,108400:CD,108412:CD,108448:CD,108518:CD,108519
108398 :: PRED :: IF :: Z :: if (v94 != #(34)) goto 506::CF,108474:CD,108399:CD,108475:CD,108483:CD,108488:CD,108520:CD,108521:CD,108522:CD,108523:CD,108524
108401 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 386::CD,108402:CD,108406:CD,108410:CD,108411:CD,108518:CD,108519
108400 :: PRED :: IF :: Z :: if (v142 != #(0)) goto 394::CF,108518:CD,108401
108402 :: CALL :: call :: C :: v97 = v35.charValue()::JM,108410
108406 :: CALL :: call :: Z :: v99 = isWhitespace(v97)::JM,108410
108411 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v145 + #(1)::DD,108518
108410 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 394::CF,108518:CD,108411:CD,108519
108413 :: CALL :: call :: Z :: v104 = v144.equals(#())::JM,108418
108412 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 433::CF,108429:CD,108413:CD,108418:CD,108430:CD,108438:CD,108443:CD,108520:CD,108521:CD,108522:CD,108523:CD,108524
108419 :: CALL :: call :: Ljava/lang/String :: v106 = v144.trim()::
108418 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 430::CD,108419:CD,108423
108423 :: CALL :: call :: Z :: v108 = v4.add(v106)::
108429 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v109 = new java.lang.StringBuilder::
108430 :: CALL :: call :: Ljava/lang/String :: v111 = valueOf(v144)::
108438 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v109.append(v25)::JM,108523
108443 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::JM,108523
108449 :: CALL :: call :: C :: v118 = v41.charValue()::JM,108453
108448 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 478::CD,108449:CD,108453:CD,108520:CD,108521:CD,108522:CD,108523:CD,108524
108453 :: PRED :: IF :: Z :: if (v118 != #(32)) goto 481::CF,108455:CD,108456:CD,108464:CD,108469:CD,108520:CD,108521:CD,108522:CD,108523:CD,108524
108455 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
108456 :: CALL :: call :: Ljava/lang/String :: v121 = valueOf(v144)::
108464 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v119.append(v25)::JM,108523
108469 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::JM,108523
108475 :: CALL :: call :: Ljava/lang/String :: v129 = valueOf(v144)::
108474 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v127 = new java.lang.StringBuilder::
108483 :: CALL :: call :: Ljava/lang/StringBuilder :: v132 = v127.append(v25)::JM,108523
108488 :: CALL :: call :: Ljava/lang/String :: v134 = v132.toString()::JM,108523
108493 :: CALL :: call :: I :: v21 = p1 $line .length()::JM,108497:JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398
108492 :: EXPR :: assign :: Ljava/lang/Object :: v140 = v139 + #(1)::DD,108529:CF,108525
108497 :: PRED :: IF :: Z :: if (v145 < v21) goto 64::CD,108237:CD,108242:CD,108246:CD,108250:CD,108251:CD,108262:CD,108273:CD,108277:CD,108492:CD,108493:CD,108514:CD,108515:CD,108520:CD,108521:CD,108522:CD,108523:CD,108524:CD,108525:CD,108526:CD,108527:CD,108528:CD,108529:JM,108497:JM,108228:JM,108234:JM,108218:JM,108318:JM,108398:JM,108507
108498 :: CALL :: call :: Ljava/lang/String :: v147 = v144.trim()::JM,108507
108502 :: CALL :: call :: Z :: v149 = v147.equals(#())::JM,108507
108507 :: PRED :: IF :: Z :: if (v149 != #(0)) goto 564::CD,108508:CF,108513
108508 :: CALL :: call :: Z :: v151 = v4.add(v144)::
108513 :: NORM :: compound :: Ljava/util/List :: return v4::DD,108202
108515 :: EXPR :: assign :: null :: PHI v41 = #(null), v40::JM,108515:JM,108514:JM,108277:JM,108318:JM,108398:DD,108368:JM,108373:DD,108448:JM,108453
108514 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,108321:JM,108330:DD,108401:JM,108410:CF,108262
108517 :: EXPR :: assign :: null :: PHI v68 = #(0), #(0), #(1)::DD,108332
108516 :: EXPR :: assign :: null :: PHI v67 = v145, v145, v66::CF,108517:DD,108524
108519 :: EXPR :: assign :: null :: PHI v102 = #(0), #(0), #(1)::DD,108412
108518 :: EXPR :: assign :: null :: PHI v101 = v145, v145, v100::CF,108519:DD,108524
108521 :: EXPR :: assign :: null :: PHI v136 = v142, v142, #(0), v142, #(1), v142, v142, v142, v142, v142, v142::CF,108522:DD,108526
108520 :: EXPR :: assign :: null :: PHI v135 = v141, v141, #(0), v141, #(1), v141, #(0), v141, #(1), v141, v141::CF,108521:DD,108525
108523 :: EXPR :: assign :: null :: PHI v138 = #(), v58, #(), v82, v144, v92, #(), v116, v144, v126, v134::CF,108524:DD,108528
108522 :: EXPR :: assign :: null :: PHI v137 = v143, v143, v143, v143, v143, v143, #(0), v143, #(1), v143, v143::CF,108523:DD,108527
108525 :: EXPR :: assign :: null :: PHI v141 = #(0), v135::CF,108526:DD,108278:DD,108319:DD,108399:DD,108520
108524 :: EXPR :: assign :: null :: PHI v139 = v145, v145, v67, v67, v145, v145, v101, v101, v145, v145, v145::DD,108492
108527 :: EXPR :: assign :: null :: PHI v143 = #(0), v137::CF,108528:DD,108320:DD,108522
108526 :: EXPR :: assign :: null :: PHI v142 = #(0), v136::CF,108527:DD,108400:DD,108521
108529 :: EXPR :: assign :: null :: PHI v145 = #(0), v140::JM,108515:JM,108514:JM,108277:JM,108228:JM,108234:JM,108250:JM,108218:JM,108318:JM,108398:DD,108251:DD,108252:DD,108262:DD,108263:DD,108331:DD,108411:DD,108497:DD,108516:DD,108518:DD,108524
108528 :: EXPR :: assign :: null :: PHI v144 = #(), v138::CF,108529:JM,108284:JM,108338:JM,108418:JM,108507:DD,108523
108691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::CE,108692:CD,108699:CD,108703:CD,108720:CD,108721:CD,108729:CD,108733:CD,108737:CD,108754:CD,108755:CD,108775:CD,108776:CD,108777:CD,108963:CD,108967:CD,108968:CD,108971:CD,108972:CD,108973:JM,108793
108692 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::JM,97878
108699 :: CALL :: call :: Ljava/lang/Class :: v9 = forName(p1 $className )::JM,108967:JM,108793:JM,108968:JM,108699:JM,108703
108703 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.newInstance()::JM,108967:JM,108793:JM,108968:JM,108703
108721 :: CALL :: call :: [Ljava/lang/reflect/Field :: v20 = getFields(v9)::JM,108775:CL,123354
108720 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,108692
108729 :: CALL :: call :: [Ljava/lang/reflect/Method :: v24 = v9.getMethods()::JM,108737
108733 :: NORM :: declaration :: Ljava/util/HashMap :: v25 = new java.util.HashMap::
108737 :: EXPR :: assign :: I :: v27 = v24.length::DD,108754
108747 :: CALL :: call :: Ljava/lang/Object :: v33 = v25.put(v31, v29)::
108753 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v36 + #(1)::DD,108971
108755 :: NORM :: declaration :: Ljava/util/HashMap :: v37 = new java.util.HashMap::
108754 :: PRED :: IF :: Z :: if (v36 < v27) goto 91::CF,108755:CD,108747:CD,108753:CD,108971
108768 :: CALL :: call :: Ljava/lang/Object :: v43 = v37.put(v40, v41)::
108775 :: EXPR :: assign :: I :: v39 = v20.length::CF,108776
108774 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v45 + #(1)::DD,108972
108777 :: CALL :: call :: Ljava/util/Iterator :: v48 = p2 $loopFields .iterator()::JM,108967:JM,108793:JM,108968:JM,108699:JM,108703
108776 :: PRED :: IF :: Z :: if (v45 < v39) goto 140::CD,108768:CD,108774:CD,108775:CD,108972:JM,108967:JM,108793:JM,108968:JM,108699:JM,108703
108782 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.next()::JM,108967:JM,108793:JM,108968:JM,108703
108787 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v97 + #(1)::JM,108967:JM,108793:JM,108968:JM,108703:DD,108973
108788 :: CALL :: call :: Ljava/lang/Object :: v56 = p3 $lineData .get(v54)::JM,108967:JM,108793:JM,108968:JM,108703
108793 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::DD,108898:JM,108904:JM,108910
108794 :: CALL :: call :: Ljava/lang/Object :: v59 = v37.get(v53)::JM,108799
108799 :: EXPR :: assign :: Ljava/lang/Object :: v60 = CHECKCAST v59::DD,108800:JM,108818:JM,108824:JM,108814:JM,108833:JM,108845:JM,108837:JM,108841
108801 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,123531
108800 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 239::CF,108809:CD,108801:CD,108814:CD,108818:CD,108824:CD,108828:CD,108833:CD,108837:CD,108841:CD,108845:CD,108851:CD,108856:CD,108860:CD,108865:CD,108866:CD,108973
108809 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
108814 :: CALL :: call :: Ljava/lang/String :: v65 = v60.getName()::JM,108818:JM,108824:JM,108814
108818 :: CALL :: call :: Ljava/lang/String :: v67 = v65.substring(#(0), #(1))::JM,108818:JM,108824
108824 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,108824
108828 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v61.append(v69)::
108833 :: CALL :: call :: Ljava/lang/String :: v73 = v60.getName()::JM,108833:JM,108845
108837 :: CALL :: call :: Ljava/lang/String :: v75 = v60.getName()::JM,108837:JM,108841:JM,108845
108841 :: CALL :: call :: I :: v77 = v75.length()::JM,108841:JM,108845
108845 :: CALL :: call :: Ljava/lang/String :: v79 = v73.substring(#(1), v77)::JM,108845
108851 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v71.append(v79)::
108856 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
108860 :: CALL :: call :: Ljava/lang/Object :: v85 = v25.get(v83)::JM,108865
108865 :: EXPR :: assign :: Ljava/lang/Object :: v86 = CHECKCAST v85::DD,108866:JM,108875
108867 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,123531
108866 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 326::CD,108867:CD,108875:CD,108883:CD,108887:CD,108888:CD,108892:CD,108897:CD,108973
108875 :: CALL :: call :: [Ljava/lang/Class :: v88 = v86.getParameterTypes()::JM,108875
108879 :: EXPR :: reference :: Ljava/lang/Object :: v89 = v88[#(0)]::JM,108897:JM,108883:JM,108892
108883 :: CALL :: call :: Ljava/lang/String :: v91 = v89.getName()::JM,108897:JM,108883:JM,108892
108887 :: EXPR :: assign :: Ljava/lang/Class :: v92 = metadata <Application,Ljava/lang/Integer>-><Primordial,Ljava/lang/Class>::JM,108897:JM,108888:JM,108892
108888 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getName()::JM,108897:JM,108888:JM,108892
108892 :: CALL :: call :: Z :: v96 = v91.equals(v94)::JM,108897:JM,108892
108897 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 411::CD,108898:CD,108973
108899 :: CALL :: call :: Z :: v101 = v57.equals(#(?))::JM,108904
108898 :: PRED :: IF :: Z :: if (v57 == #(null)) goto 459::CF,108973:CD,108899:CD,108904
108905 :: CALL :: call :: Z :: v104 = v57.equals(#(.))::JM,108910
108904 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 459::CF,108973:CD,108905:CD,108910
108911 :: CALL :: call :: I :: v108 = parseInt(v57)::
108910 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 459::CF,108973:CD,108911:CD,108915
108915 :: CALL :: call :: Ljava/lang/Integer :: v110 = valueOf(v108)::
108963 :: CALL :: call :: Z :: v50 = v48.hasNext()::JM,108967:JM,108793:JM,108968:JM,108703
108967 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 179::CD,108782:CD,108787:CD,108788:CD,108793:CD,108794:CD,108799:CD,108800:CD,108963:CD,108973:JM,108967:JM,108703:CF,108968
108968 :: NORM :: compound :: Ljava/lang/Object :: return v11::DD,108692
108971 :: EXPR :: assign :: null :: PHI v36 = #(0), v35::DD,108753:DD,108754
108973 :: EXPR :: assign :: null :: PHI v97 = #(-1), v54, v54, v54, v54, v54, v54, v54, v54::JM,108967:JM,108793:JM,108968:JM,108703:DD,108787
108972 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,108774:DD,108776:CF,108775
109094 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,109102:CD,109116:CD,109120
109099 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109120
109102 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109120
109107 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109120
109112 :: CALL :: call :: V :: v12.newEntity(p1 $entity )::CL,123681
109116 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109120
109120 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109107:CD,109112:CD,109116:JM,109120
109130 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,109138:CD,109152:CD,109156
109135 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109156
109138 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109156
109143 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109156
109148 :: CALL :: call :: V :: v12.newAtomSite(p1 $atom )::CL,123724
109152 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109156
109156 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109143:CD,109148:CD,109152:JM,109156
109166 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,109174:CD,109188:CD,109192
109171 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109192
109174 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109192
109179 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109192
109184 :: CALL :: call :: V :: v12.newDatabasePDBrev(p1 $dbrev )::CL,124559
109188 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109192
109192 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109179:CD,109184:CD,109188:JM,109192
109202 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,109210:CD,109224:CD,109228
109207 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109228
109210 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109228
109215 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109228
109220 :: CALL :: call :: V :: v12.newDatabasePDBrevRecord(p1 $dbrev )::CL,124718
109224 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109228
109228 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109215:CD,109220:CD,109224:JM,109228
109238 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,109246:CD,109260:CD,109264
109243 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109264
109246 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109264
109251 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109264
109256 :: CALL :: call :: V :: v12.newDatabasePDBremark(p1 $remark )::CL,124792
109260 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109264
109264 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109251:CD,109256:CD,109260:JM,109264
109274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,109282:CD,109296:CD,109300
109279 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109300
109282 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109300
109287 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109300
109292 :: CALL :: call :: V :: v12.newExptl(p1 $exptl )::CL,124893
109296 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109300
109300 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109287:CD,109292:CD,109296:JM,109300
109310 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,109318:CD,109332:CD,109336
109315 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109336
109318 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109336
109323 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109336
109328 :: CALL :: call :: V :: v12.newCell(p1 $cell )::CL,124934
109332 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109336
109336 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109323:CD,109328:CD,109332:JM,109336
109346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,109354:CD,109368:CD,109372
109351 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109372
109354 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109372
109359 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109372
109364 :: CALL :: call :: V :: v12.newSymmetry(p1 $symmetry )::CL,125133
109368 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109372
109372 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109359:CD,109364:CD,109368:JM,109372
109382 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,109390:CD,109404:CD,109408
109387 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109408
109390 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109408
109395 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109408
109400 :: CALL :: call :: V :: v12.newStructNcsOper(p1 $sNcsOper )::CL,125242
109404 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109408
109408 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109395:CD,109400:CD,109404:JM,109408
109418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,109426:CD,109440:CD,109444
109423 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109444
109426 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109444
109431 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109444
109436 :: CALL :: call :: V :: v12.newAtomSites(p1 $atomSites )::CL,125265
109440 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109444
109444 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109431:CD,109436:CD,109440:JM,109444
109454 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,109462:CD,109476:CD,109480
109459 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109480
109462 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109480
109467 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109480
109472 :: CALL :: call :: V :: v12.newStructRef(p1 $sref )::CL,125445
109476 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109480
109480 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109467:CD,109472:CD,109476:JM,109480
109490 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,109498:CD,109512:CD,109516
109495 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109516
109498 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109516
109503 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109516
109508 :: CALL :: call :: V :: v12.newStructRefSeq(p1 $sref )::CL,125486
109512 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109516
109516 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109503:CD,109508:CD,109512:JM,109516
109526 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,109534:CD,109548:CD,109552
109531 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109552
109534 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109552
109539 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109552
109544 :: CALL :: call :: V :: v12.newStructRefSeqDif(p1 $sref )::CL,125888
109548 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109552
109552 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109539:CD,109544:CD,109548:JM,109552
109562 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,109570:CD,109584:CD,109588
109567 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109588
109570 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109588
109575 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109588
109580 :: CALL :: call :: V :: v12.newStructSiteGen(p1 $id )::CL,125917
109584 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109588
109588 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109575:CD,109580:CD,109584:JM,109588
109598 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,109606:CD,109620:CD,109624
109603 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109624
109606 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109624
109611 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109624
109616 :: CALL :: call :: V :: v12.newStructSite(p1 $id )::CL,125940
109620 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109624
109624 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109611:CD,109616:CD,109620:JM,109624
109634 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,109642:CD,109656:CD,109660
109639 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109660
109642 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109660
109647 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109660
109652 :: CALL :: call :: V :: v12.newEntityPolySeq(p1 $epolseq )::CL,126071
109656 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109660
109660 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109647:CD,109652:CD,109656:JM,109660
109670 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,109678:CD,109692:CD,109696
109675 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109696
109678 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109696
109683 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109696
109688 :: CALL :: call :: V :: v12.newEntitySrcGen(p1 $entitySrcGen )::CL,126376
109692 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109696
109696 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109683:CD,109688:CD,109692:JM,109696
109706 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,109714:CD,109728:CD,109732
109711 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109732
109714 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109732
109719 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109732
109724 :: CALL :: call :: V :: v12.newEntitySrcNat(p1 $entitySrcNat )::CL,126393
109728 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109732
109732 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109719:CD,109724:CD,109728:JM,109732
109742 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,109750:CD,109764:CD,109768
109747 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109768
109750 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109768
109755 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109768
109760 :: CALL :: call :: V :: v12.newEntitySrcSyn(p1 $entitySrcSyn )::CL,126422
109764 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109768
109768 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109755:CD,109760:CD,109764:JM,109768
109778 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,109786:CD,109800:CD,109804
109783 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109804
109786 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109804
109791 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109804
109796 :: CALL :: call :: V :: v12.newStructAsym(p1 $sasym )::CL,126445
109800 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109804
109804 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109791:CD,109796:CD,109800:JM,109804
109814 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,109822:CD,109836:CD,109840
109819 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109840
109822 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109840
109827 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109840
109832 :: CALL :: call :: V :: v12.newPdbxPolySeqScheme(p1 $ppss )::CL,126468
109836 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109840
109840 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109827:CD,109832:CD,109836:JM,109840
109850 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,109858:CD,109872:CD,109876
109855 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109876
109858 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109876
109863 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109876
109868 :: CALL :: call :: V :: v12.newPdbxNonPolyScheme(p1 $ppss )::CL,126541
109872 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109876
109876 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109863:CD,109868:CD,109872:JM,109876
109886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxEntityNonPoly(org.biojava.nbio.structure.io.mmcif.model.PdbxEntityNonPoly)::CD,109894:CD,109908:CD,109912
109891 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109912
109894 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109912
109899 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109912
109908 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109912
109912 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109899:CD,109908:JM,109912
109922 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,109930:CD,109944:CD,109948
109927 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109948
109930 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109948
109935 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109948
109940 :: CALL :: call :: V :: v12.newStructKeywords(p1 $kw )::CL,126638
109944 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109948
109948 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109935:CD,109940:CD,109944:JM,109948
109958 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,109966:CD,109980:CD,109984
109963 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,109984
109966 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,109984
109971 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,109984
109976 :: CALL :: call :: V :: v12.newRefine(p1 $r )::CL,126682
109980 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,109984
109984 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,109971:CD,109976:CD,109980:JM,109984
109994 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,110002:CD,110016:CD,110020
109999 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,110020
110002 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110020
110007 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110020
110012 :: CALL :: call :: V :: v12.newChemComp(p1 $cc )::CL,126892
110016 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110020
110020 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110007:CD,110012:CD,110016:JM,110020
110030 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,110038:CD,110052:CD,110056
110035 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,110056
110038 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110056
110043 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110056
110048 :: CALL :: call :: V :: v12.newAuditAuthor(p1 $aa )::CL,126983
110052 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110056
110056 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110043:CD,110048:CD,110052:JM,110056
110066 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,110074:CD,110088:CD,110092
110071 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,110092
110074 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110092
110079 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110092
110084 :: CALL :: call :: V :: v12.newChemCompDescriptor(p1 $ccd )::CL,127161
110088 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110092
110092 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110079:CD,110084:CD,110088:JM,110092
110102 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructOper(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,110110:CD,110124:CD,110128
110107 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,110128
110110 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110128
110115 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110128
110120 :: CALL :: call :: V :: v12.newPdbxStructOperList(p1 $structOper )::CL,127199
110124 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110128
110128 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110115:CD,110120:CD,110124:JM,110128
110138 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,110146:CD,110160:CD,110164
110143 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,110164
110146 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110164
110151 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110164
110156 :: CALL :: call :: V :: v12.newPdbxStrucAssembly(p1 $sa )::CL,127228
110160 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110164
110164 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110151:CD,110156:CD,110160:JM,110164
110174 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,110182:CD,110196:CD,110200
110179 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,110200
110182 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110200
110187 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110200
110192 :: CALL :: call :: V :: v12.newPdbxStrucAssemblyGen(p1 $sa )::CL,127245
110196 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110200
110200 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110187:CD,110192:CD,110196:JM,110200
110210 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,110218:CD,110232:CD,110236
110215 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,110236
110218 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110236
110223 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110236
110228 :: CALL :: call :: V :: v12.newChemCompAtom(p1 $atom )::CL,127274
110232 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110236
110236 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110223:CD,110228:CD,110232:JM,110236
110246 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,110254:CD,110268:CD,110272
110251 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,110272
110254 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110272
110259 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110272
110264 :: CALL :: call :: V :: v12.newChemCompBond(p1 $bond )::CL,127310
110268 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110272
110272 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110259:CD,110264:CD,110268:JM,110272
110282 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompIdentifier(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompIdentifier)::CD,110290:CD,110304:CD,110308
110287 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,110308
110290 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110308
110295 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110308
110304 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110308
110308 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110295:CD,110304:JM,110308
110318 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompDescriptor)::CD,110326:CD,110340:CD,110344
110323 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,110344
110326 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110344
110331 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110344
110340 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110344
110344 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110331:CD,110340:JM,110344
110354 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,110362:CD,110376:CD,110380
110359 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,110380
110362 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,110380
110367 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,110380
110372 :: CALL :: call :: V :: v12.newStructConn(p1 $id )::CL,127370
110376 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,110380
110380 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,110367:CD,110372:CD,110376:JM,110380
110390 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerGeneric(java.lang.String,java.util.List,java.util.List)::CD,110400:CD,110416:CD,110420
110397 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .consumers::JM,110420
110400 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,110420
110405 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,110420
110416 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,110420
110420 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 16::CD,110405:CD,110416:JM,110420
110438 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStruct(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,110446:CD,110450:CD,110459:CD,110467:CD,110474:CD,110485
110446 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,110450:CL,86109
110450 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513
110459 :: CALL :: call :: V :: v10.setTitle(v12)::CL,61699
110467 :: CALL :: call :: V :: v10.setIdCode(v15)::CL,61659
110474 :: CALL :: call :: V :: v17.setPDBHeader(v10)::CL,65704
110485 :: CALL :: call :: V :: v19.setPDBCode(v21)::CL,61648
110543 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache)::JM,99283
110542 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache)::CE,110543:CD,110558:CD,110574
110558 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v12 = getBiologicalAssembly(p1 $pdbId , p2 $biolAssemblyNr , p3 $cache , v10)::JM,110574:CL,127452
110574 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v12::DD,110543
110605 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.toString(java.util.List)::CE,110606:CD,110609:CD,110636:CD,110640:CD,110641:CD,110645:CD,110646:JM,110628
110606 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueRange.toString(java.util.List)::
110609 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,110645
110614 :: CALL :: call :: Ljava/lang/Object :: v9 = p1 $ranges .get(v20)::JM,110640:JM,110628
110619 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v3.append(v9)::
110624 :: CALL :: call :: I :: v13 = p1 $ranges .size()::JM,110640:JM,110628
110629 :: PRED :: IF :: Z :: if (v20 >= v15) goto 44::CD,110630:CF,110635
110628 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 - #(1)::CF,110629
110630 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v3.append(#(,))::
110635 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,110646
110636 :: CALL :: call :: I :: v7 = p1 $ranges .size()::JM,110640:JM,110628
110641 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,110645
110640 :: PRED :: IF :: Z :: if (v20 < v7) goto 16::CD,110614:CD,110619:CD,110624:CD,110628:CD,110629:CD,110635:CD,110636:CD,110646:JM,110640:JM,110645
110645 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,110606
110646 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::JM,110628:DD,110629:DD,110635:DD,110640
114837 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::JM,100827
114836 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::CE,114837:CD,114844
114841 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .chainId::DD,114844
114845 :: EXPR :: reference :: Ljava/lang/String :: v6 = p1 $other .chainId::DD,114848
114844 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 41::CD,114848:CD,114876
114849 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .chainId::JM,114860
114848 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 41::CD,114855:CD,114860:CD,114876
114852 :: EXPR :: reference :: Ljava/lang/String :: v8 = p1 $other .chainId::JM,114860
114855 :: CALL :: call :: Z :: v10 = v7.equals(v8)::JM,114860
114861 :: EXPR :: reference :: Ljava/lang/String :: v46 = p0 $this .chainId::JM,114872
114860 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 41::CD,114867:CD,114872:CD,114876
114864 :: EXPR :: reference :: Ljava/lang/String :: v47 = p1 $other .chainId::JM,114872
114867 :: CALL :: call :: I :: v49 = v46.compareTo(v47)::JM,114872
114873 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .chainId::DD,114876
114872 :: NORM :: compound :: I :: return v49::CF,114837
114877 :: EXPR :: reference :: Ljava/lang/String :: v13 = p1 $other .chainId::DD,114880
114876 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 57::CD,114880:CD,114885
114881 :: NORM :: compound :: I :: return #(1)::CF,114837
114880 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 57::CD,114881:CD,114885
114882 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .chainId::DD,114885
114885 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 73::CD,114889:CD,114894
114886 :: EXPR :: reference :: Ljava/lang/String :: v15 = p1 $other .chainId::DD,114889
114889 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 73::CD,114890:CD,114894
114891 :: EXPR :: reference :: Ljava/lang/Integer :: v16 = p0 $this .seqNum::DD,114894
114890 :: NORM :: compound :: I :: return #(-1)::CF,114837
114895 :: EXPR :: reference :: Ljava/lang/Integer :: v17 = p1 $other .seqNum::DD,114898
114894 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 113::CD,114898:CD,114926
114899 :: EXPR :: reference :: Ljava/lang/Integer :: v18 = p0 $this .seqNum::JM,114910
114898 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 113::CD,114905:CD,114910:CD,114926
114902 :: EXPR :: reference :: Ljava/lang/Integer :: v19 = p1 $other .seqNum::JM,114910
114905 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,114910
114911 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .seqNum::JM,114922
114910 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 113::CD,114917:CD,114922:CD,114926
114914 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p1 $other .seqNum::JM,114922
114917 :: CALL :: call :: I :: v45 = v42.compareTo(v43)::JM,114922
114923 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,114926
114922 :: NORM :: compound :: I :: return v45::CF,114837
114927 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p1 $other .seqNum::DD,114930
114926 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 129::CD,114930:CD,114935
114931 :: NORM :: compound :: I :: return #(1)::CF,114837
114930 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 129::CD,114931:CD,114935
114932 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::DD,114935
114935 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 145::CD,114939:CD,114944
114936 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = p1 $other .seqNum::DD,114939
114939 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 145::CD,114940:CD,114944
114941 :: EXPR :: reference :: Ljava/lang/Character :: v26 = p0 $this .insCode::DD,114944
114940 :: NORM :: compound :: I :: return #(-1)::CF,114837
114945 :: EXPR :: reference :: Ljava/lang/Character :: v27 = p1 $other .insCode::DD,114948
114944 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 185::CD,114948:CD,114976
114949 :: EXPR :: reference :: Ljava/lang/Character :: v28 = p0 $this .insCode::JM,114960
114948 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 185::CD,114955:CD,114960:CD,114976
114952 :: EXPR :: reference :: Ljava/lang/Character :: v29 = p1 $other .insCode::JM,114960
114955 :: CALL :: call :: Z :: v31 = v28.equals(v29)::JM,114960
114961 :: EXPR :: reference :: Ljava/lang/Character :: v38 = p0 $this .insCode::JM,114972
114960 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 185::CD,114967:CD,114972:CD,114976
114964 :: EXPR :: reference :: Ljava/lang/Character :: v39 = p1 $other .insCode::JM,114972
114967 :: CALL :: call :: I :: v41 = v38.compareTo(v39)::JM,114972
114973 :: EXPR :: reference :: Ljava/lang/Character :: v32 = p0 $this .insCode::DD,114976
114972 :: NORM :: compound :: I :: return v41::CF,114837
114977 :: EXPR :: reference :: Ljava/lang/Character :: v33 = p1 $other .insCode::DD,114980
114976 :: PRED :: IF :: Z :: if (v32 == #(null)) goto 201::CD,114980:CD,114985
114981 :: NORM :: compound :: I :: return #(1)::CF,114837
114980 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 201::CD,114981:CD,114985
114982 :: EXPR :: reference :: Ljava/lang/Character :: v34 = p0 $this .insCode::DD,114985
114985 :: PRED :: IF :: Z :: if (v34 != #(null)) goto 217::CD,114989:CD,114991
114986 :: EXPR :: reference :: Ljava/lang/Character :: v35 = p1 $other .insCode::DD,114989
114989 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 217::CD,114990:CD,114991
114991 :: NORM :: compound :: I :: return #(0)::CF,114837
114990 :: NORM :: compound :: I :: return #(-1)::CF,114837
115051 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::JM,100841
115050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::CE,115051:CD,115055:CD,115059:CD,115063:CD,115068
115055 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .toString()::JM,115068:CL,127795
115059 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $other .toString()::JM,115068:CL,127795
115063 :: CALL :: call :: I :: v9 = v5.compareTo(v7)::JM,115068
115068 :: NORM :: compound :: I :: return v9::DD,115051
115575 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/template/Sequence :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::JM,102177:JM,102339:JM,102338:JM,102165:JM,102148:JM,102164:JM,102151:JM,102172:JM,102159:JM,102209:JM,102149:JM,102340:JM,102216:JM,102155:JM,102221
115574 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::CE,115575:CD,115579:CD,115589:CD,115599:CD,115618:CD,115623:CD,115628:CD,115636:CD,115637:CD,115641
115579 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v5 = new org.biojava.nbio.core.sequence.DNASequence::DD,115641
115589 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v10 = new org.biojava.nbio.core.sequence.RNASequence::DD,115641
115599 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v15 = new org.biojava.nbio.core.sequence.DNASequence::DD,115641
115618 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
115623 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(p1 $seq )::
115628 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
115637 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return v34::DD,115575
115636 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return #(null)::DD,115575
115641 :: EXPR :: assign :: null :: PHI v34 = v5, v10, v15::CF,115637
115649 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,102335
115648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,115649:CD,115657:CD,115661:CD,115664:CD,116063:CD,116071:CD,116073:CD,116074:JM,115712:JM,115682:JM,115687:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115732:JM,115700:JM,115670:JM,115705:JM,115707:JM,115676
115657 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,115712:JM,115682:JM,115687:JM,115657:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115700:JM,115732:JM,115670:JM,115705:JM,115707:JM,115676:JM,116063
115661 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/DNACompoundSet :: v12 = getDNACompoundSet()::JM,115664:JM,115699:JM,115700:JM,115705:JM,115694
115664 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v15 = v12.getCompoundForString(#(-))::JM,115664:JM,115699:JM,115700:JM,115705:JM,115694
115670 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v194)::JM,115712:JM,115682:JM,115687:JM,115657:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115700:JM,115732:JM,115670:JM,115705:JM,115707:JM,115676:JM,116063
115676 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v194)::JM,115712:JM,115682:JM,115687:JM,115657:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115700:JM,115732:JM,115670:JM,115705:JM,115707:JM,115676:JM,116063
115682 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v194)::JM,115712:JM,115682:JM,115687:JM,115657:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115700:JM,115732:JM,115670:JM,115705:JM,115707:JM,115676:JM,116063
115687 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,115712:JM,115682:JM,115687:JM,115657:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115700:JM,115732:JM,115670:JM,115705:JM,115707:JM,115676:JM,116063
115688 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v194)::JM,115712:JM,115682:JM,115687:JM,115657:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115700:JM,115732:JM,115670:JM,115705:JM,115707:JM,115676:JM,116063
115693 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,115712:JM,115699:JM,115700:JM,115687:JM,115705:JM,115707:JM,115693:JM,115676:JM,115694
115694 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,115712:JM,115699:JM,115700:JM,115687:JM,115705:JM,115707:JM,115693:JM,115676:JM,115694
115699 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 567::CF,116072:CD,115700:CD,115705:JM,115712:JM,115699:JM,115687:JM,115707:JM,115693:JM,115694
115700 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,115712:JM,115699:JM,115700:JM,115687:JM,115705:JM,115707:JM,115693:JM,115694
115705 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,115707:CD,115712:CD,116072:JM,115699:JM,115700:JM,115687:JM,115705:JM,115693:JM,115676:JM,115694
115707 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,115712:JM,115699:JM,115700:JM,115687:JM,115705:JM,115707:JM,115693:JM,115676:JM,115694
115713 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
115712 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 567::CF,116072:CD,115713:CD,115717:CD,115722:CD,115723:CD,115727:CD,115732:CD,115733:CD,115737:CD,115742:CD,115743:CD,115747:CD,115752:CD,115753
115717 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,115722
115723 :: CALL :: call :: I :: v40 = v38.intValue()::JM,115732
115722 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,115732
115727 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,115712:JM,115682:JM,115687:JM,115657:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115732:JM,115700:JM,115670:JM,115705:JM,115707:JM,115676:JM,116063
115733 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
115732 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,115753
115737 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,115742
115743 :: CALL :: call :: I :: v50 = v48.intValue()::JM,115752
115742 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,115752
115747 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,115712:JM,115682:JM,115687:JM,115657:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115700:JM,115732:JM,115670:JM,115705:JM,115707:JM,115676:JM,116063
115753 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,115754:CD,115757:CD,115762:CD,115767:CD,115772:CD,115777:CD,115782:CD,115787:CD,115792:CD,115797:CD,115802:CD,115807:CD,115812:CD,115817:CD,116072
115752 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,115754:JM,115712:JM,115682:JM,115687:JM,115657:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115732:JM,115700:JM,115670:JM,115705:JM,115707:JM,115676:JM,116063:CF,115753
115754 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,115757:CD,115762:CD,115767:CD,115772:CD,115777:CD,115782:CD,115787:CD,115792:CD,115797:CD,115802:CD,115807:CD,115812:CD,115817:CD,115826:CD,115830:CD,115834:CD,115892:CD,115897:CD,116042:CD,116046:CD,116051:CD,116052:CD,116056:CD,116072
115757 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
115762 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v194)::
115767 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
115772 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
115777 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
115782 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
115787 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
115792 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
115797 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
115802 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
115807 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
115812 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
115817 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
115826 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,115911:JM,115897:JM,115834:CL,75053
115830 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,115911:JM,115897:JM,115835:CL,75053
115835 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 357::CD,115838:CD,115843:CD,115848:CD,115853:CD,115858:CD,115863:CD,115868:CD,115873:CD,115878:JM,115911:JM,115897
115834 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,115835:CD,115838:CD,115843:CD,115848:CD,115853:CD,115858:CD,115863:CD,115868:CD,115873:CD,115878
115838 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v92 = new java.lang.StringBuilder::
115843 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v92.append(v23)::
115848 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( when trying to align ))::
115853 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v43)::
115858 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( and ))::
115863 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v53)::
115868 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v106.append(#( ))::
115873 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v108.append(v26)::
115878 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
115892 :: CALL :: call :: Z :: v118 = v90.equals(v88)::JM,115911:JM,115897
115897 :: PRED :: IF :: Z :: if (v118 != #(0)) goto 542::CD,115898:CD,115902:CD,115906:CD,115911:JM,115897
115898 :: CALL :: call :: Ljava/lang/String :: v120 = v90.trim()::JM,115911:JM,115897
115902 :: CALL :: call :: Ljava/lang/String :: v122 = v88.trim()::JM,115911:JM,115897
115906 :: CALL :: call :: Z :: v124 = v120.equals(v122)::JM,115911
115911 :: PRED :: IF :: Z :: if (v124 != #(0)) goto 542::CD,115914:CD,115918:CD,115923:CD,115928:CD,115933:CD,115938:CD,115943:CD,115948:CD,115953:CD,115958:CD,115963:CD,115968:CD,115973:CD,115981:CD,115985:CD,115987:CD,115992
115914 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v126 = new java.lang.StringBuilder::
115918 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v126.append(v43)::
115923 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(#( ))::
115928 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v131.append(v23)::
115933 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v133.append(#( does not align with ))::
115938 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(v53)::
115943 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v138.append(#( ))::
115948 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v140.append(v26)::
115953 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( should be: ))::
115958 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(v17)::
115963 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v147.append(#( : ))::
115968 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(v20)::
115973 :: CALL :: call :: Ljava/lang/String :: v154 = v152.toString()::
115981 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v157 = v43.getType()::JM,115987:JM,115992:CL,70174:CL,70190:CL,70182
115985 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v158 = org.biojava.nbio.structure.HetatomImpl.type::JM,115987:JM,115992
115987 :: CALL :: call :: Z :: v160 = v157.equals(v158)::JM,115987:JM,115992
115993 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v162 = v53.getType()::JM,116004:JM,115999:CL,70174:CL,70190:CL,70182
115992 :: PRED :: IF :: Z :: if (v160 == #(0)) goto 501::CD,115993:CD,115997:CD,115999:CD,116004:CD,116014:CD,116019:CD,116024:CD,116029:CD,116034
115997 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v163 = org.biojava.nbio.structure.HetatomImpl.type::JM,116004:JM,115999
115999 :: CALL :: call :: Z :: v165 = v162.equals(v163)::JM,116004:JM,115999
116004 :: PRED :: IF :: Z :: if (v165 == #(0)) goto 501::CD,116014:CD,116019:CD,116024:CD,116029:CD,116034
116014 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
116019 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v43)::
116024 :: CALL :: call :: Ljava/lang/StringBuilder :: v176 = v174.append(#( ))::
116029 :: CALL :: call :: Ljava/lang/StringBuilder :: v178 = v176.append(v53)::
116034 :: CALL :: call :: Ljava/lang/String :: v180 = v178.toString()::
116042 :: CALL :: call :: Ljava/lang/Integer :: v183 = valueOf(v23)::
116046 :: CALL :: call :: Ljava/lang/Object :: v185 = p4 $seqresIndexPosition .get(v183)::JM,116051
116051 :: EXPR :: assign :: Ljava/lang/Object :: v186 = CHECKCAST v185::
116052 :: CALL :: call :: I :: v188 = v186.intValue()::
116056 :: CALL :: call :: Ljava/lang/Object :: v190 = p1 $seqResGroups .set(v188, v53)::JM,115712:JM,115682:JM,115687:JM,115657:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115732:JM,115700:JM,115670:JM,115705:JM,115707:JM,115676:JM,116063
116063 :: PRED :: IF :: Z :: if (v194 <= v9) goto 32::CD,115670:CD,115676:CD,115682:CD,115687:CD,115688:CD,115693:CD,115694:CD,115699:CD,116062:CD,116072:CD,116073:CD,116074:JM,115712:JM,115657:JM,115752:JM,115700:JM,115732:JM,115705:JM,115707:JM,116063
116062 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v194 + #(1)::DD,116074:CF,116073
116071 :: NORM :: compound :: Z :: return v193::DD,115649
116073 :: EXPR :: assign :: null :: PHI v193 = #(1), v191::CF,116074:DD,116071:DD,116072
116072 :: EXPR :: assign :: null :: PHI v191 = v193, v193, v193, v193, #(0)::DD,116073:CF,116062
116074 :: EXPR :: assign :: null :: PHI v194 = #(1), v192::JM,115712:JM,115682:JM,115687:JM,115688:JM,115752:JM,115693:JM,115694:JM,115699:JM,115700:JM,115670:JM,115705:JM,115707:JM,115676:JM,115732:DD,116062:DD,116063
116195 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,116201:CD,116202:CD,116210:CD,116214
116201 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,116201
116202 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,116201:CL,80865
116210 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,80865
116214 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
116227 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,116233:CD,116234:CD,116242:CD,116246
116233 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,116233
116234 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,116233:CL,80865
116242 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,80865
116246 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
116259 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::CE,116260:CD,116263:CD,116267:CD,116269
116260 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::JM,103664:JM,103666
116263 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v4 = getPredominantGroupType(p1 $c )::JM,116269:CL,128451
116267 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v5 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,116269
116269 :: PRED :: IF :: Z :: if (v4 != v5) goto 13::CD,116270:CD,116271
116271 :: NORM :: compound :: Z :: return #(0)::DD,116260
116270 :: NORM :: compound :: Z :: return #(1)::DD,116260
116276 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setBonds(java.util.List)::JM,116281
116281 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = p1 $bonds ::
116287 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::CE,116288:CD,116300:CD,116309
116288 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::JM,103972:JM,103967
116300 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::
116306 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .atomA::DD,116309
116309 :: PRED :: IF :: Z :: if (p1 $exclude  != v6) goto 40::CD,116313:CD,116317
116310 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v8 = p0 $this .atomB::DD,116313
116313 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v8::DD,116288
116314 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v7 = p0 $this .atomA::DD,116317
116317 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v7::DD,116288
116326 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.addBond(org.biojava.nbio.structure.Bond)::CD,116334:CD,116346
116331 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .bonds::DD,116334
116335 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,116340
116334 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 20::CD,116335
116340 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
116343 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .bonds::
116346 :: CALL :: call :: Z :: v11 = v9.add(p1 $bond )::
116360 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadAllDefinitions()::CD,116377:CD,116379:CD,116383:CD,116390:CD,116395:CD,116399:CD,116404:CD,116454:CD,116456:CD,116476:CD,116478:CD,116520
116377 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v10 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,116383
116379 :: CALL :: call :: Z :: v12 = v10.get()::JM,116383
116383 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 79::CD,116419:CD,116421:CD,116425:CD,116440:CD,116461:CD,116483:CD,116488:CD,116493:CD,116494:CD,116495:CD,116500:CD,116505:CD,116513:CD,116515
116390 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
116395 :: CALL :: call :: Ljava/lang/String :: v69 = v63.getMessage()::
116399 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::
116404 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::
116419 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,116421
116421 :: CALL :: call :: V :: v13.set(#(1))::JM,116421
116425 :: CALL :: call :: J :: v17 = currentTimeMillis()::JM,116493
116440 :: CALL :: call :: V :: downloadFile()::CL,128720
116454 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v31 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
116456 :: CALL :: call :: V :: v31.set(#(0))::
116461 :: CALL :: call :: V :: p0 $this .split()::CL,116633
116476 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v40 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
116478 :: CALL :: call :: V :: v40.set(#(0))::
116483 :: CALL :: call :: J :: v43 = currentTimeMillis()::JM,116493
116488 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
116493 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v43 - v17::DD,116494
116495 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v45.append(v50)::
116494 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v48 / #(1000 l)::
116500 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( sec.))::
116505 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
116513 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v59 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,116515
116515 :: CALL :: call :: V :: v59.set(#(0))::JM,116515
116520 :: EXPR :: assign :: Ljava/lang/Exception :: v63 = catch <exc>::
116633 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.split()::CD,116643:CD,116644:CD,116651:CD,116661:CD,116662:CD,116676:CD,116680:CD,116727:CD,116728:CD,116732:CD,116737:CD,116738:CD,116744:CD,116758:CD,116763:CD,116768:CD,116773:CD,116788:CD,116789:CD,116790:CD,116791
116643 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::
116644 :: EXPR :: reference :: Ljava/io/File :: v7 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
116651 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
116661 :: NORM :: declaration :: Ljava/io/BufferedReader :: v17 = new java.io.BufferedReader::JM,116789:DD,116738:CF,116662
116662 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v18 = new java.io.InputStreamReader::
116676 :: CALL :: call :: Ljava/lang/String :: v24 = v17.readLine()::JM,116789
116680 :: NORM :: declaration :: Ljava/io/StringWriter :: v25 = new java.io.StringWriter::DD,116790
116685 :: CALL :: call :: Z :: v29 = v52.startsWith(#(data_))::JM,116690
116691 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 130::CF,116784:CD,116692:CD,116696:CD,116701
116690 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 148::CF,116785:CD,116691:CD,116702:CD,116707:CD,116784:CD,116786:CD,116787
116692 :: CALL :: call :: Ljava/lang/String :: v31 = v53.toString()::
116696 :: CALL :: call :: V :: p0 $this .writeID(v31, v54)::CL,128824
116701 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v51 + #(1)::DD,116784
116702 :: CALL :: call :: Ljava/lang/String :: v38 = v52.substring(#(5))::JM,116787
116707 :: NORM :: declaration :: Ljava/io/StringWriter :: v39 = new java.io.StringWriter::DD,116786
116711 :: CALL :: call :: Ljava/io/StringWriter :: v45 = v42.append(v52)::
116716 :: EXPR :: reference :: Ljava/lang/String :: v46 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.NEWLINE::
116718 :: CALL :: call :: Ljava/io/StringWriter :: v48 = v42.append(v46)::
116723 :: CALL :: call :: Ljava/lang/String :: v50 = v17.readLine()::JM,116789
116727 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 102::CD,116685:CD,116690:CD,116711:CD,116716:CD,116718:CD,116723:CD,116785:CD,116786:CD,116787:CD,116788:CD,116789:CD,116790:CD,116791
116728 :: CALL :: call :: Ljava/lang/String :: v56 = v53.toString()::
116732 :: CALL :: call :: V :: p0 $this .writeID(v56, v54)::CL,128824
116737 :: EXPR :: assign :: Ljava/lang/Object :: v58 = v51 + #(1)::CF,116738
116739 :: CALL :: call :: V :: v17.close()::
116738 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 246::CD,116739
116744 :: CALL :: call :: V :: v17.close()::
116758 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
116763 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v61.append(v58)::
116768 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( chemical component f...))::
116773 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
116785 :: EXPR :: assign :: null :: PHI v41 = v51, v35::CF,116786:DD,116788
116784 :: EXPR :: assign :: null :: PHI v35 = v51, v34::DD,116785:JM,116787
116787 :: EXPR :: assign :: null :: PHI v43 = v54, v38::DD,116791
116786 :: EXPR :: assign :: null :: PHI v42 = v53, v39::CF,116787:DD,116790
116789 :: EXPR :: assign :: null :: PHI v52 = v24, v50::CF,116790:JM,116690:JM,116787:DD,116727
116788 :: EXPR :: assign :: null :: PHI v51 = #(0), v41::CF,116789:DD,116701:DD,116737:DD,116784:DD,116785
116791 :: EXPR :: assign :: null :: PHI v54 = #(null), v43::DD,116691:DD,116787:CF,116727
116790 :: EXPR :: assign :: null :: PHI v53 = v25, v42::CF,116791:DD,116786
116876 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL)::CD,116880
116880 :: CALL :: call :: Ljava/net/HttpURLConnection :: v5 = openHttpURLConnection(p1 $url , #(15000))::CL,120281
117012 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::DD,117016
117016 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .dictionary = v4::
117019 :: NORM :: declaration :: Ljava/util/HashMap :: v6 = new java.util.HashMap::DD,117023
117023 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .replaces = v6::
117026 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,117030
117030 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .isreplacedby = v8::
117041 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::CE,117042:CD,117044:JM,129170:JM,129177:JM,129163:CD,117048:CD,117052:CD,117058:CD,117064:CD,117068
117042 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::JM,104724:JM,104805
117044 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v2 = new org.biojava.nbio.structure.io.mmcif.model.ChemComp::DD,117068
117048 :: CALL :: call :: V :: v2.setOne_letter_code(#(?))::CL,129192
117052 :: CALL :: call :: V :: v2.setThree_letter_code(#(???))::CL,129207
117058 :: CALL :: call :: V :: v2.setPolymerType(v8)::CL,129218
117064 :: CALL :: call :: V :: v2.setResidueType(v10)::CL,129229
117068 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v2::DD,117042
117080 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setId(java.lang.String)::JM,117085
117085 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
117174 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,129341
117178 :: EXPR :: modify :: Z :: p0 $this .useCathDomainDescriptionFile = p2 $usingCDDF ::
117181 :: EXPR :: modify :: Z :: p0 $this .parseCathFragments = p3 $parseCF ::
117184 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::JM,117178:JM,117181:DD,117189
117189 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainDescription = v8::
117192 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,117178:JM,117181:DD,117197
117197 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainList = v11::
117200 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = new java.util.concurrent.atomic.AtomicBoolean::JM,117178:JM,117181:DD,117205
117205 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedNodeList = v13::
117208 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,117178:JM,117181:DD,117213
117213 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomall = v15::
117216 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathVersion = #(4_1_0)::
117219 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathDownloadUrl = #(http://download.cathd...)::
117222 :: NORM :: declaration :: Ljava/util/HashMap :: v19 = new java.util.HashMap::JM,117178:JM,117181:DD,117226
117226 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbMap = v19::
117229 :: NORM :: declaration :: Ljava/util/HashMap :: v21 = new java.util.HashMap::JM,117178:JM,117181:DD,117233
117233 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v21::
117236 :: NORM :: declaration :: Ljava/util/HashMap :: v23 = new java.util.HashMap::JM,117178:JM,117181:DD,117240
117240 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .cathTree = v23::
117243 :: EXPR :: reference :: Z :: v25 = p0 $this .parseCathFragments::DD,117246
117247 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,117251
117246 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 130::CD,117247
117251 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .fragmentMap = v26::
117288 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainDescriptionFileName()::CD,117292:CD,117296:CD,117304:CD,117309:CD,117314
117292 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
117296 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
117304 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-descripti...))::CL,129386
117309 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::
117314 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
117323 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildUrl(java.lang.String)::CD,117328:CD,117333:CD,117337:CD,117345:CD,117350:CD,117358:CD,117363:CD,117368:CD,117373:CD,117378:CD,117383
117328 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .buildFileName(p1 $remoteFileName )::CL,129386
117333 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
117337 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
117345 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(#(all-releases))::
117350 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(/v))::
117355 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cathVersion::
117358 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
117363 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(#(/))::
117368 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#(cath-classification-data))::
117373 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#(/))::
117378 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v27.append(v5)::
117383 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
117402 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,117408:CD,117415:CD,117420:CD,117424:CD,117429:CD,117433:CD,117467:CD,117471:CD,117475:CD,117479:CD,117480:CD,117481:CD,117482:CD,117484:CD,117494:CD,117496:CD,117504:CD,117509:CD,117517:CD,117522:CD,117534:CD,117535:CD,117536:CD,117550:CD,117551
117408 :: CALL :: call :: J :: v6 = currentTimeMillis()::JM,117534
117415 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
117420 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $localFile )::CL,129442
117424 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
117429 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
117433 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
117467 :: CALL :: call :: V :: copy(v19, p2 $localFile )::CL,129480
117471 :: CALL :: call :: Z :: v35 = v19.delete()::
117475 :: CALL :: call :: J :: v37 = p2 $localFile .length()::JM,117479
117479 :: EXPR :: assign :: D :: v38 = CONVERT J to D v37::DD,117480
117481 :: EXPR :: assign :: Z :: v42 = v40 < #(1024.0 d)::DD,117482
117480 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 / #(1024.0 d)::DD,117481:DD,117483:DD,117550
117483 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v40 / #(1024.0 d)::DD,117550
117482 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CF,117550:CD,117483:CD,117551
117484 :: CALL :: call :: J :: v48 = currentTimeMillis()::JM,117534
117494 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
117496 :: CALL :: call :: Ljava/lang/Double :: v58 = valueOf(v45)::JM,117496
117504 :: CALL :: call :: Ljava/lang/String :: v60 = format(#(%.1f), v56)::
117509 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v60)::
117517 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v54.append(v46)::
117522 :: CALL :: call :: Ljava/lang/String :: v67 = v65.toString()::
117535 :: EXPR :: assign :: Ljava/lang/Object :: v72 = v70 / #(1000 l)::
117534 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v48 - v6::DD,117535
117536 :: CALL :: call :: Ljava/lang/Long :: v74 = valueOf(v72)::
117551 :: EXPR :: assign :: null :: PHI v46 = #( kB), #( MB)::CF,117484
117550 :: EXPR :: assign :: null :: PHI v45 = v40, v44::CF,117551:JM,117496
117619 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile(java.io.BufferedReader)::CD,118122:CD,118126:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117630 :: CALL :: call :: Z :: v12 = v9.startsWith(#(#))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117635 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 58::CD,117637:CD,117642:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117637 :: CALL :: call :: Z :: v16 = v9.startsWith(#(FORMAT))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117643 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v68 = new org.biojava.nbio.structure.cath.CathDomain::DD,118130
117642 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 127::CF,117643:CD,117647:CD,117652:CD,117656:CD,117660:CD,117664:CD,117668:CD,117673:CD,117678:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117647 :: CALL :: call :: Ljava/lang/String :: v72 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117652 :: CALL :: call :: V :: v68.setFormat(v72)::CL,129596
117656 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::DD,118131
117660 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::DD,118132
117664 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::DD,118133
117668 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::DD,118134
117673 :: CALL :: call :: Z :: v19 = v9.startsWith(#(DOMAIN))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117679 :: CALL :: call :: Ljava/lang/String :: v88 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117678 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 151::CD,117679:CD,117684:CD,117689:CD,117694:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951
117684 :: CALL :: call :: V :: v82.setDomainName(v88)::CL,129607
117689 :: CALL :: call :: Z :: v22 = v9.startsWith(#(VERSION))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117695 :: CALL :: call :: Ljava/lang/String :: v91 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117694 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 175::CD,117695:CD,117700:CD,117705:CD,117710:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117700 :: CALL :: call :: V :: v82.setVersion(v91)::CL,129618
117705 :: CALL :: call :: Z :: v25 = v9.startsWith(#(VERDATE))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117711 :: CALL :: call :: Ljava/lang/String :: v94 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117710 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 223::CD,117711:CD,117721:CD,117738:CD,117743:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117721 :: CALL :: call :: V :: v82.setDate(v96)::CL,129629
117738 :: CALL :: call :: Z :: v28 = v9.startsWith(#(NAME))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117743 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 248::CD,117744:CD,117749:CD,117755:CD,117760:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117744 :: CALL :: call :: Ljava/lang/String :: v104 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117749 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v83.append(v104)::JM,117793:JM,117985:JM,117760:JM,117888:JM,117927:JM,117862:JM,118025:JM,117834:JM,117901:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951
117755 :: CALL :: call :: Z :: v31 = v9.startsWith(#(SOURCE))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117761 :: CALL :: call :: Ljava/lang/String :: v108 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117760 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 273::CD,117761:CD,117766:CD,117772:CD,117777:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117766 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v84.append(v108)::JM,117793:JM,117985:JM,117888:JM,117927:JM,117862:JM,118025:JM,117834:JM,117901:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951
117772 :: CALL :: call :: Z :: v34 = v9.startsWith(#(CATHCODE))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117777 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 297::CD,117778:CD,117783:CD,117788:CD,117793:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117778 :: CALL :: call :: Ljava/lang/String :: v112 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117783 :: CALL :: call :: V :: v82.setCATH(v112)::CL,129640
117788 :: CALL :: call :: Z :: v37 = v9.startsWith(#(DLENGTH))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117793 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 327::CD,117794:CD,117799:CD,117803:CD,117807:CD,117812:CD,117817:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117881:JM,117851:JM,117951:JM,117694
117794 :: CALL :: call :: Ljava/lang/String :: v115 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117799 :: CALL :: call :: I :: v117 = parseInt(v115)::JM,117985:JM,117888:JM,117927:JM,117862:JM,118025:JM,117834:JM,117901:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951
117803 :: CALL :: call :: Ljava/lang/Integer :: v119 = valueOf(v117)::JM,118134
117807 :: CALL :: call :: V :: v82.setLength(v119)::CL,129730
117812 :: CALL :: call :: Z :: v40 = v9.startsWith(#(DSEQH))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117817 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 352::CD,117818:CD,117823:CD,117829:CD,117834:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117818 :: CALL :: call :: Ljava/lang/String :: v122 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117823 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v85.append(v122)::JM,117985:JM,117888:JM,117968:JM,117927:JM,117862:JM,118134:JM,117881:JM,118025:JM,117851:JM,117834:JM,117901:JM,117951
117829 :: CALL :: call :: Z :: v43 = v9.startsWith(#(DSEQS))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117835 :: CALL :: call :: Ljava/lang/String :: v126 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117834 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 378::CD,117835:CD,117840:CD,117846:CD,117851:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117951:JM,117694
117840 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v86.append(v126)::JM,118134:JM,117985:JM,117888:JM,117968:JM,117927:JM,117862:JM,117881:JM,118025:JM,117851:JM,117901:JM,117951
117846 :: CALL :: call :: Z :: v46 = v9.startsWith(#(NSEGMENTS))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117851 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 400::CF,117852:CD,117857:CD,117862:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117852 :: NORM :: declaration :: Ljava/util/ArrayList :: v129 = new java.util.ArrayList::DD,118135
117857 :: CALL :: call :: Z :: v49 = v9.startsWith(#(SEGMENT))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117863 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v132 = new org.biojava.nbio.structure.cath.CathSegment::DD,118136
117862 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 440::CF,117863:CD,117867:CD,117871:CD,117876:CD,117881:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117851:JM,117951:JM,117694
117867 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v134 = new java.lang.StringBuilder::DD,118137
117871 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::DD,118138
117876 :: CALL :: call :: Z :: v52 = v9.startsWith(#(SRANGE))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117881 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 514::CD,117882:CD,117888:CD,117889:CD,117895:CD,117901:CD,117902:CD,117908:CD,117912:CD,117917:CD,117922:CD,117927:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117635:JM,117862:JM,118025:JM,117642:JM,117834:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117882 :: CALL :: call :: I :: v143 = v9.indexOf(#(=), #(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117889 :: CALL :: call :: I :: v148 = v9.indexOf(#( ), #(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117888 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v143 + #(1)::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694:JM,118126
117895 :: CALL :: call :: I :: v150 = v9.indexOf(#(=), v148)::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117901 :: EXPR :: assign :: Ljava/lang/Object :: v151 = v150 + #(1)::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694:JM,118126
117902 :: CALL :: call :: Ljava/lang/String :: v153 = v9.substring(v145, v148)::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117908 :: CALL :: call :: V :: v138.setStart(v153)::CL,129750
117912 :: CALL :: call :: Ljava/lang/String :: v156 = v9.substring(v151)::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117917 :: CALL :: call :: V :: v138.setStop(v156)::CL,129761
117922 :: CALL :: call :: Z :: v55 = v9.startsWith(#(SLENGTH))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117927 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 544::CD,117928:CD,117933:CD,117937:CD,117941:CD,117946:CD,117951:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117694
117928 :: CALL :: call :: Ljava/lang/String :: v159 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117933 :: CALL :: call :: I :: v161 = parseInt(v159)::JM,117985:JM,117968:JM,118134:JM,118025:JM,117951
117937 :: CALL :: call :: Ljava/lang/Integer :: v163 = valueOf(v161)::
117941 :: CALL :: call :: V :: v138.setLength(v163)::CL,129772
117946 :: CALL :: call :: Z :: v58 = v9.startsWith(#(SSEQH))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117951 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 569::CD,117952:CD,117957:CD,117963:CD,117968:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117952 :: CALL :: call :: Ljava/lang/String :: v166 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117957 :: CALL :: call :: Ljava/lang/StringBuilder :: v168 = v139.append(v166)::JM,117985:JM,117968:JM,118134:JM,118025
117963 :: CALL :: call :: Z :: v61 = v9.startsWith(#(SSEQS))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117969 :: CALL :: call :: Ljava/lang/String :: v170 = v9.substring(#(10))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117968 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 594::CD,117969:CD,117974:CD,117980:CD,117985:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117974 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v140.append(v170)::JM,117985:JM,118134:JM,118025
117980 :: CALL :: call :: Z :: v64 = v9.startsWith(#(ENDSEG))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117985 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 652::CD,117986:CD,117991:CD,117995:CD,117999:CD,118003:CD,118007:CD,118011:CD,118015:CD,118020:CD,118025:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
117986 :: CALL :: call :: Z :: v174 = v131.add(v138)::
117991 :: CALL :: call :: I :: v176 = v131.size()::
117995 :: CALL :: call :: Ljava/lang/Integer :: v178 = valueOf(v176)::
117999 :: CALL :: call :: V :: v138.setSegmentId(v178)::CL,129783
118003 :: CALL :: call :: Ljava/lang/String :: v181 = v139.toString()::
118007 :: CALL :: call :: V :: v138.setSequenceHeader(v181)::CL,129794
118011 :: CALL :: call :: Ljava/lang/String :: v184 = v140.toString()::
118015 :: CALL :: call :: V :: v138.setSequence(v184)::CL,129805
118020 :: CALL :: call :: Z :: v67 = v9.startsWith(#(//))::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
118025 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 801::CF,118130:CD,118026:CD,118030:CD,118034:CD,118038:CD,118042:CD,118046:CD,118050:CD,118054:CD,118058:CD,118062:CD,118066:CD,118075:CD,118080:CD,118104:CD,118116:CD,118129:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138
118026 :: CALL :: call :: Ljava/lang/String :: v187 = v83.toString()::
118030 :: CALL :: call :: V :: v82.setName(v187)::CL,129816
118034 :: CALL :: call :: Ljava/lang/String :: v190 = v84.toString()::
118038 :: CALL :: call :: V :: v82.setSource(v190)::CL,129827
118042 :: CALL :: call :: Ljava/lang/String :: v193 = v85.toString()::
118046 :: CALL :: call :: V :: v82.setSequenceHeader(v193)::CL,129838
118050 :: CALL :: call :: Ljava/lang/String :: v196 = v86.toString()::
118054 :: CALL :: call :: V :: v82.setSequence(v196)::CL,129849
118058 :: CALL :: call :: V :: v82.setSegments(v131)::CL,129860
118062 :: CALL :: call :: Ljava/lang/String :: v200 = v82.getPdbIdAndChain()::CL,129871
118066 :: CALL :: call :: Ljava/lang/String :: v203 = v200.substring(#(0), #(4))::
118075 :: CALL :: call :: Z :: v206 = v204.containsKey(v203)::JM,118080
118080 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 750::CF,118091:CD,118084:CD,118089:CD,118098:CD,118129
118084 :: CALL :: call :: Ljava/lang/Object :: v209 = v207.get(v203)::JM,118089
118089 :: EXPR :: assign :: Ljava/lang/Object :: v210 = CHECKCAST v209::DD,118129
118091 :: NORM :: declaration :: Ljava/util/ArrayList :: v211 = new java.util.ArrayList::DD,118129
118098 :: CALL :: call :: Ljava/lang/Object :: v215 = v213.put(v203, v211)::
118104 :: CALL :: call :: Z :: v218 = v216.add(v82)::
118116 :: CALL :: call :: Ljava/lang/Object :: v223 = v219.put(v221, v82)::
118122 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $bufferedReader .readLine()::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
118126 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 45::CD,117630:CD,117635:CD,118122:CD,118130:CD,118131:CD,118132:CD,118133:CD,118134:CD,118135:CD,118136:CD,118137:CD,118138:JM,117793:JM,117985:JM,117760:JM,117888:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694
118129 :: EXPR :: assign :: null :: PHI v216 = v210, v211::
118131 :: EXPR :: assign :: null :: PHI v83 = #(null), v83, v74, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83::CF,118132:DD,118131
118130 :: EXPR :: assign :: null :: PHI v82 = #(null), v82, v68, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82::CF,118131:DD,118130
118133 :: EXPR :: assign :: null :: PHI v85 = #(null), v85, v78, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85::CF,118134:DD,118133
118132 :: EXPR :: assign :: null :: PHI v84 = #(null), v84, v76, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84::CF,118133:DD,118132
118135 :: EXPR :: assign :: null :: PHI v131 = #(null), v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v129, v131, v131, v131, v131, v131, v131, v131, v131::CF,118136:DD,118135
118134 :: EXPR :: assign :: null :: PHI v86 = #(null), v86, v80, v86, v86, v86, v86, v86, v86, v86, v86, v86, v128, v86, v86, v86, v86, v86, v86, v86, v86, v86::CF,118135:DD,118134
118137 :: EXPR :: assign :: null :: PHI v139 = #(null), v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v134, v139, v139, v139, v139, v139, v139, v139::CF,118138:DD,118137
118136 :: EXPR :: assign :: null :: PHI v138 = #(null), v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v132, v138, v138, v138, v138, v138, v138, v138::CF,118137:DD,118136
118138 :: EXPR :: assign :: null :: PHI v140 = #(null), v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v136, v140, v140, v140, v140, v140, v140, v140::JM,117793:JM,117985:JM,117760:JM,117888:JM,117635:JM,117927:JM,117862:JM,118025:JM,117642:JM,117834:JM,117901:JM,117743:JM,118126:JM,117678:JM,117710:JM,117777:JM,117968:JM,118134:JM,117817:JM,117881:JM,117851:JM,117951:JM,117694:DD,118138
118347 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::CE,118348:CD,118351:CD,118360:CD,118364
118348 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::JM,105084
118351 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainListFileName()::CL,129958
118360 :: CALL :: call :: Z :: v8 = v5.exists()::JM,118364
118364 :: NORM :: compound :: Z :: return v8::DD,118348
118371 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainListFile()::CD,118376:CD,118385:CD,118394
118376 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-list-v%s.txt))::CL,117323
118385 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainListFileName()::CL,129958
118394 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,117402
118414 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList()::CD,118419:CD,118431:CD,118432:CD,118446
118419 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainListFileName()::CL,129958
118431 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,118432
118432 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
118446 :: CALL :: call :: V :: p0 $this .parseCathDomainList(v9)::CL,129993
118463 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomallFileName()::CD,118467:CD,118471:CD,118479:CD,118484:CD,118489
118467 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
118471 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
118479 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-boundarie...))::CL,129386
118484 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::
118489 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
118498 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall(java.io.BufferedReader)::CD,119034:CD,119038:JM,118515:JM,118509
118504 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,118515:JM,118509:JM,119038
118509 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 17::CD,118511:CD,118515:JM,118509:JM,119038
118511 :: CALL :: call :: I :: v12 = v5.length()::JM,118515:JM,118509:JM,119038
118515 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 30::CD,118517:CD,118530:CD,118535:CD,118539:CD,118547:CD,118552:CD,118556:CD,118865:CD,118869:CD,118873:CD,119049:CD,119050
118517 :: CALL :: call :: [Ljava/lang/String :: v15 = v5.split(#(\s+))::
118526 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v15[#(1)]::JM,118869:JM,118570
118530 :: CALL :: call :: Ljava/lang/String :: v20 = v18.substring(#(1))::JM,118869:JM,118570
118535 :: CALL :: call :: I :: v22 = parseInt(v20)::JM,118869:JM,118570
118539 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,118869:JM,118570
118543 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v15[#(2)]::JM,119024
118547 :: CALL :: call :: Ljava/lang/String :: v28 = v26.substring(#(1))::JM,119024
118552 :: CALL :: call :: I :: v30 = parseInt(v28)::JM,119024
118556 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,119024
118561 :: NORM :: declaration :: Ljava/text/DecimalFormat :: v36 = new java.text.DecimalFormat::JM,118637
118566 :: CALL :: call :: I :: v40 = v24.intValue()::JM,118869:JM,118570
118571 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
118570 :: PRED :: IF :: Z :: if (v40 != #(1)) goto 185::CF,118627:CF,118571:CD,118572:CD,118580:CD,118585:CD,118592:CD,118597:CD,118598:CD,118628:CD,118636:CD,118637:CD,118642:CD,118647:CD,118654:CD,118659:CD,119040
118572 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v16)::
118580 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(#(00))::
118585 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
118592 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v48)::JM,118597
118597 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::DD,118598:DD,119040
118599 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
118598 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 232::CF,119040:CF,118599:CD,118600:CD,118608:CD,118613:CD,118620:CD,118625
118600 :: CALL :: call :: Ljava/lang/String :: v55 = valueOf(v16)::
118608 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(#(01))::
118613 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
118620 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::JM,118625
118625 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::DD,119040
118627 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
118628 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v16)::
118637 :: CALL :: call :: Ljava/lang/String :: v72 = v36.format(v70)::JM,118637
118636 :: EXPR :: assign :: J :: v70 = CONVERT I to J v186::JM,118637
118642 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v66.append(v72)::
118647 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::
118654 :: CALL :: call :: Ljava/lang/Object :: v79 = v77.get(v76)::JM,118659
118659 :: EXPR :: assign :: Ljava/lang/Object :: v80 = CHECKCAST v79::DD,119040
118660 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v15[v185]::JM,118677:JM,118852:JM,118861
118664 :: CALL :: call :: I :: v85 = parseInt(v83)::JM,118677:JM,118852:JM,118861
118668 :: CALL :: call :: Ljava/lang/Integer :: v87 = valueOf(v85)::JM,118677:JM,118852:JM,118861
118673 :: CALL :: call :: I :: v90 = v87.intValue()::JM,118677:JM,118852:JM,118861
118672 :: PRED :: IF :: Z :: if (v82 != #(null)) goto 264::CF,118681:CD,118673:CD,118677:CD,118678:CD,118679:CD,118682:CD,118848:CD,118852:CD,118853:CD,118857:CD,118861:CD,118862:CD,118863:CD,119043:CD,119044:CD,119045:CD,119046:CD,119047:CD,119048
118677 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(6) * v90::DD,118678
118679 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v185 + v92::DD,119047
118678 :: EXPR :: assign :: Ljava/lang/Object :: v92 = v91 + #(1)::CF,118679
118681 :: NORM :: declaration :: Ljava/util/ArrayList :: v94 = new java.util.ArrayList::JM,118677:JM,118852:JM,118861
118682 :: CALL :: call :: I :: v96 = v87.intValue()::JM,118677:JM,118852:JM,118861
118691 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v100 = new org.biojava.nbio.structure.cath.CathSegment::
118695 :: CALL :: call :: Ljava/lang/Integer :: v103 = valueOf(v176)::
118699 :: CALL :: call :: V :: v100.setSegmentId(v103)::CL,129783
118703 :: EXPR :: assign :: Ljava/lang/Object :: v105 = v187 + v175::DD,118704
118705 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v15[v106]::JM,118832
118704 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v105 + #(1)::
118709 :: CALL :: call :: I :: v109 = parseInt(v107)::JM,118832
118713 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v109)::JM,118832
118717 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v187 + v175::DD,118718
118719 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v15[v113]::JM,118728:DD,119041
118718 :: EXPR :: assign :: Ljava/lang/Object :: v113 = v112 + #(2)::
118723 :: CALL :: call :: Z :: v117 = v114.equals(#(-))::JM,118728
118728 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 357::CD,119041
118730 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
118734 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(v111)::
118739 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v119)::
118744 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
118748 :: CALL :: call :: V :: v100.setStart(v127)::CL,129750
118753 :: EXPR :: assign :: Ljava/lang/Object :: v131 = v129 + #(4)::
118752 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v187 + v175::DD,118753
118754 :: EXPR :: reference :: Ljava/lang/Object :: v132 = v15[v131]::JM,118827
118758 :: CALL :: call :: I :: v134 = parseInt(v132)::JM,118827
118762 :: CALL :: call :: Ljava/lang/Integer :: v136 = valueOf(v134)::JM,118827
118767 :: EXPR :: assign :: Ljava/lang/Object :: v139 = v137 + #(5)::
118766 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v187 + v175::DD,118767
118768 :: EXPR :: reference :: Ljava/lang/Object :: v140 = v15[v139]::JM,118777:DD,119042
118772 :: CALL :: call :: Z :: v142 = v140.equals(#(-))::JM,118777
118777 :: PRED :: IF :: Z :: if (v142 == #(0)) goto 431::CD,119042
118779 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v144 = new java.lang.StringBuilder::
118783 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v144.append(v111)::
118788 :: CALL :: call :: Ljava/lang/StringBuilder :: v149 = v147.append(v119)::
118793 :: CALL :: call :: Ljava/lang/String :: v151 = v149.toString()::
118797 :: CALL :: call :: V :: v100.setStart(v151)::CL,129750
118801 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::
118805 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v153.append(v136)::
118810 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v156.append(v143)::
118815 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::
118819 :: CALL :: call :: V :: v100.setStop(v160)::CL,129761
118823 :: CALL :: call :: I :: v163 = v136.intValue()::JM,118827
118827 :: EXPR :: assign :: Ljava/lang/Object :: v164 = #(1) + v163::DD,118832
118828 :: CALL :: call :: I :: v166 = v111.intValue()::JM,118832
118833 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v167)::
118832 :: EXPR :: assign :: Ljava/lang/Object :: v167 = v164 - v166::
118837 :: CALL :: call :: V :: v100.setLength(v169)::CL,129772
118841 :: CALL :: call :: Z :: v172 = v94.add(v100)::
118847 :: EXPR :: assign :: Ljava/lang/Object :: v174 = v176 + #(1)::DD,119046:CF,119043
118846 :: EXPR :: assign :: Ljava/lang/Object :: v173 = v175 + #(6)::DD,119044:CF,118847
118848 :: CALL :: call :: I :: v99 = v87.intValue()::JM,118677:JM,118852:JM,118861
118853 :: CALL :: call :: V :: v82.setSegments(v94)::CL,129860
118852 :: PRED :: IF :: Z :: if (v176 <= v99) goto 287::CF,118691:CD,118695:CD,118699:CD,118703:CD,118704:CD,118709:CD,118713:CD,118717:CD,118718:CD,118723:CD,118728:CD,118730:CD,118734:CD,118739:CD,118744:CD,118748:CD,118752:CD,118753:CD,118758:CD,118762:CD,118766:CD,118767:CD,118772:CD,118777:CD,118779:CD,118783:CD,118788:CD,118793:CD,118797:CD,118801:CD,118805:CD,118810:CD,118815:CD,118819:CD,118823:CD,118827:CD,118828:CD,118832:CD,118833:CD,118837:CD,118841:CD,118846:CD,118847:CD,118848:CD,119041:CD,119042:CD,119043:CD,119044:CD,119045:CD,119046
118857 :: CALL :: call :: I :: v179 = v87.intValue()::JM,118677:JM,118852:JM,118861
118861 :: EXPR :: assign :: Ljava/lang/Object :: v180 = #(6) * v179::DD,118862
118863 :: EXPR :: assign :: Ljava/lang/Object :: v182 = v187 + v181::DD,119047
118862 :: EXPR :: assign :: Ljava/lang/Object :: v181 = v180 + #(1)::CF,118863
118865 :: CALL :: call :: I :: v35 = v24.intValue()::JM,118869:JM,118570
118864 :: EXPR :: assign :: Ljava/lang/Object :: v184 = v189 + #(1)::DD,119050:CF,119049
118869 :: PRED :: IF :: Z :: if (v186 <= v35) goto 78::CF,118561:CD,118566:CD,118570:CD,118664:CD,118668:CD,118672:CD,118864:CD,118865:CD,119040:CD,119047:CD,119048:CD,119049:CD,119050
118870 :: EXPR :: reference :: Z :: v190 = p0 $this .parseCathFragments::DD,118873
118873 :: PRED :: IF :: Z :: if (v190 == #(0)) goto 815::CF,118874:CD,118875:CD,119020:CD,119024:CD,119028:CD,119053:CD,119054:JM,118515:JM,118509:JM,119038
118875 :: CALL :: call :: I :: v193 = v32.intValue()::JM,119024
118874 :: NORM :: declaration :: Ljava/util/ArrayList :: v191 = new java.util.ArrayList::JM,119024
118884 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathFragment :: v197 = new org.biojava.nbio.structure.cath.CathFragment::
118888 :: CALL :: call :: Ljava/lang/Integer :: v200 = valueOf(v258)::
118897 :: EXPR :: reference :: Ljava/lang/Object :: v203 = v15[v202]::
118896 :: EXPR :: assign :: Ljava/lang/Object :: v202 = v257 + #(1)::
118901 :: CALL :: call :: I :: v205 = parseInt(v203)::
118905 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
118909 :: EXPR :: assign :: Ljava/lang/Object :: v208 = v257 + #(2)::
118910 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v15[v208]::JM,118919:DD,119051
118914 :: CALL :: call :: Z :: v211 = v209.equals(#(-))::JM,118919
118919 :: PRED :: IF :: Z :: if (v211 == #(0)) goto 652::CD,119051
118921 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v213 = new java.lang.StringBuilder::
118925 :: CALL :: call :: Ljava/lang/StringBuilder :: v216 = v213.append(v207)::
118930 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v216.append(v212)::
118935 :: CALL :: call :: Ljava/lang/String :: v220 = v218.toString()::
118943 :: EXPR :: assign :: Ljava/lang/Object :: v222 = v257 + #(4)::
118944 :: EXPR :: reference :: Ljava/lang/Object :: v223 = v15[v222]::
118948 :: CALL :: call :: I :: v225 = parseInt(v223)::
118952 :: CALL :: call :: Ljava/lang/Integer :: v227 = valueOf(v225)::
118957 :: EXPR :: reference :: Ljava/lang/Object :: v229 = v15[v228]::JM,118966:DD,119052
118956 :: EXPR :: assign :: Ljava/lang/Object :: v228 = v257 + #(5)::
118961 :: CALL :: call :: Z :: v231 = v229.equals(#(-))::JM,118966
118966 :: PRED :: IF :: Z :: if (v231 == #(0)) goto 720::CD,119052
118968 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v233 = new java.lang.StringBuilder::
118972 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v233.append(v227)::
118977 :: CALL :: call :: Ljava/lang/StringBuilder :: v238 = v236.append(v232)::
118982 :: CALL :: call :: Ljava/lang/String :: v240 = v238.toString()::
118995 :: CALL :: call :: Ljava/lang/String :: v246 = v243.replaceAll(#([^0-9]), #())::
119001 :: CALL :: call :: I :: v248 = parseInt(v246)::
119005 :: CALL :: call :: Ljava/lang/Integer :: v250 = valueOf(v248)::
119013 :: CALL :: call :: Z :: v253 = v191.add(v197)::
119019 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v258 + #(1)::DD,119054:CF,119053
119018 :: EXPR :: assign :: Ljava/lang/Object :: v255 = v257 + #(7)::DD,119053:CF,119019
119020 :: CALL :: call :: I :: v196 = v32.intValue()::JM,119024
119024 :: PRED :: IF :: Z :: if (v258 <= v196) goto 588::CF,118884:CD,118888:CD,118896:CD,118901:CD,118905:CD,118909:CD,118914:CD,118919:CD,118921:CD,118925:CD,118930:CD,118935:CD,118943:CD,118948:CD,118952:CD,118956:CD,118961:CD,118966:CD,118968:CD,118972:CD,118977:CD,118982:CD,118995:CD,119001:CD,119005:CD,119013:CD,119018:CD,119019:CD,119020:CD,119051:CD,119052:CD,119053:CD,119054
119028 :: CALL :: call :: Ljava/lang/Object :: v261 = v259.put(v16, v191)::
119034 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,118515:JM,118509:JM,119038
119038 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,118504:CD,118509:CD,119034:JM,118515:JM,119038
119041 :: EXPR :: assign :: null :: PHI v119 = #(), v114::CF,118730
119040 :: EXPR :: assign :: null :: PHI v82 = v52, v65, v80::DD,118672
119043 :: EXPR :: assign :: null :: PHI v187 = v185, v187::CF,119044:DD,118703:DD,118717:DD,118752:DD,118766:DD,118863:DD,119043
119042 :: EXPR :: assign :: null :: PHI v143 = #(), v140::CF,118779
119045 :: EXPR :: assign :: null :: PHI v188 = v186, v188::CF,119046:DD,119045:DD,119048
119044 :: EXPR :: assign :: null :: PHI v175 = #(1), v173::CF,119045:DD,118703:DD,118717:DD,118752:DD,118766:DD,118846
119047 :: EXPR :: assign :: null :: PHI v183 = v93, v182::CF,119048:DD,119049
119046 :: EXPR :: assign :: null :: PHI v176 = #(1), v174::DD,118847:DD,118852:JM,118677:JM,118861
119049 :: EXPR :: assign :: null :: PHI v185 = #(3), v183::CF,119050:DD,118679:DD,119043:DD,119053
119048 :: EXPR :: assign :: null :: PHI v189 = v186, v188::DD,118864
119051 :: EXPR :: assign :: null :: PHI v212 = #(), v209::CF,118921
119050 :: EXPR :: assign :: null :: PHI v186 = #(1), v184::DD,118636:DD,118869:DD,119045:DD,119048:JM,118570
119053 :: EXPR :: assign :: null :: PHI v257 = v185, v255::CF,119054:DD,118896:DD,118909:DD,118943:DD,118956:DD,119018
119052 :: EXPR :: assign :: null :: PHI v232 = #(), v229::CF,118968
119054 :: EXPR :: assign :: null :: PHI v258 = #(1), v256::DD,119019:DD,119024
119264 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.ensureDomainsFileInstalled()::CD,119287
119284 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,119287
119287 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 83::CD,119354:CD,119358:CD,119362
119354 :: CALL :: call :: Z :: v34 = p0 $this .domainsAvailable()::JM,119358:CL,130163
119359 :: CALL :: call :: V :: p0 $this .downloadDomains()::CL,130250
119358 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 144::CD,119359
119362 :: CALL :: call :: V :: p0 $this .parseDomains()::CL,130431
119435 :: CALL :: call :: V :: p0 $this .setScopVersion(v6)::CL,119472
119447 :: CALL :: call :: V :: p0 $this .addMirror(v8)::CL,130558
119455 :: CALL :: call :: V :: p0 $this .addMirror(v12)::CL,130558
119472 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setScopVersion(java.lang.String)::CD,119478:CD,119487:CD,119492
119478 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v17 = new java.lang.NullPointerException::
119484 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .scopVersion::JM,119492
119487 :: CALL :: call :: Z :: v7 = v5.equals(p1 $scopVersion )::JM,119492
119492 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 29::CD,119500:CD,119507:CD,119514:CD,119521
119497 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v9 = p0 $this .installedCla::JM,119500
119500 :: CALL :: call :: V :: v9.set(#(0))::JM,119500
119504 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedDes::JM,119507
119507 :: CALL :: call :: V :: v11.set(#(0))::JM,119507
119511 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedHie::JM,119514
119514 :: CALL :: call :: V :: v13.set(#(0))::JM,119514
119518 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = p0 $this .installedCom::JM,119521
119521 :: CALL :: call :: V :: v15.set(#(0))::JM,119521
119571 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::CE,119572:CD,119575:CD,119577:CD,119581:CD,119582:CD,119590:CD,119595:CD,119597:CD,119604:CD,119605
119572 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::JM,105998
119575 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextScopDomain::JM,119590:JM,119577:JM,119595
119577 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,119590:JM,119577:JM,119595
119581 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,119590:JM,119595
119582 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
119590 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,119590:JM,119595
119595 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,119604
119597 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
119605 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
119604 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v13::DD,119572
119617 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::CE,119618:CD,119621:CD,119630:CD,119634
119618 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::JM,106145
119621 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getClaFilename()::CL,130586
119630 :: CALL :: call :: Z :: v8 = v5.exists()::JM,119634
119635 :: CALL :: call :: J :: v11 = v5.length()::JM,119639
119634 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 33::CD,119635:CD,119639:CD,119640:CD,119642
119639 :: EXPR :: assign :: Z :: v13 = v11 == #(0 l)::DD,119640
119641 :: NORM :: compound :: Z :: return #(1)::DD,119618
119640 :: PRED :: IF :: Z :: if (v13 <= #(0)) goto 33::CD,119641:CD,119642
119642 :: NORM :: compound :: Z :: return #(0)::DD,119618
119655 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadClaFile()::CD,119662:CD,119666:CD,119673:CD,119678:CD,119687:CD,119696:CD,119705:CD,119711:CD,119716:CD,119723:CD,119724
119659 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,119666
119662 :: CALL :: call :: I :: v5 = v3.size()::JM,119666
119667 :: CALL :: call :: V :: p0 $this .initScopURLs()::CL,130624
119666 :: PRED :: IF :: Z :: if (v5 >= #(1)) goto 20::CD,119667
119670 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .mirrors::
119673 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::
119678 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::
119687 :: CALL :: call :: Ljava/lang/String :: v21 = v17.getClaURL(v19)::CL,130708:CL,130684
119696 :: CALL :: call :: Ljava/lang/String :: v24 = p0 $this .getClaFilename()::CL,130586
119705 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v18, v25)::CL,130746
119711 :: CALL :: call :: Z :: v13 = v11.hasNext()::
119716 :: NORM :: declaration :: Ljava/io/IOException :: v31 = new java.io.IOException::
119723 :: EXPR :: assign :: Ljava/lang/Exception :: v28 = catch <exc>::DD,119724
119724 :: EXPR :: assign :: null :: PHI v30 = #(null), v28::
119747 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification()::CD,119752:CD,119764:CD,119765:CD,119779
119752 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getClaFilename()::CL,130586
119765 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
119764 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,119765
119779 :: CALL :: call :: V :: p0 $this .parseClassification(v9)::CL,130795
119814 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassId(int)::JM,119819
119819 :: EXPR :: modify :: I :: p0 $this .classId = p1 $classId ::
119834 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassificationId(java.lang.String)::JM,119839
119839 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classificationId = p1 $classificationId ::
119854 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setDomainId(int)::JM,119859
119859 :: EXPR :: modify :: I :: p0 $this .domainId = p1 $domainId ::
119874 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFamilyId(int)::JM,119879
119879 :: EXPR :: modify :: I :: p0 $this .familyId = p1 $familyId ::
119894 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFoldId(int)::JM,119899
119899 :: EXPR :: modify :: I :: p0 $this .foldId = p1 $foldId ::
119905 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPdbId(java.lang.String)::JM,119910
119910 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
119925 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPx(int)::JM,119930
119930 :: EXPR :: modify :: I :: p0 $this .px = p1 $px ::
119936 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setRanges(java.util.List)::JM,119941
119941 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p1 $ranges ::
119947 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setScopId(java.lang.String)::JM,119952
119952 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .scopId = p1 $scopId ::
119967 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSpeciesId(int)::JM,119972
119972 :: EXPR :: modify :: I :: p0 $this .speciesId = p1 $speciesId ::
119987 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSunid(java.lang.Integer)::JM,119992
119992 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .sunid = p1 $sunid ::
120007 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSuperfamilyId(int)::JM,120012
120012 :: EXPR :: modify :: I :: p0 $this .superfamilyId = p1 $superfamilyId ::
120019 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::JM,106451:JM,106423
120018 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::CE,120019:JM,54400:JM,54353:JM,54372:JM,40533:JM,54357:JM,54405:JM,54374:JM,54425:JM,54379:JM,40540:CD,120030:CD,120031:CD,120032:CD,120040:CD,120044:CD,120052:CD,120057:CD,120075
120031 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
120030 :: NORM :: declaration :: Ljava/io/File :: v7 = new java.io.File::DD,120075:CF,120031
120032 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v6)::
120040 :: CALL :: call :: Ljava/lang/String :: v14 = getProperty(#(file.separator))::JM,120040
120044 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v8.append(v14)::
120049 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cacheFileName::
120052 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
120057 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
120075 :: NORM :: compound :: Ljava/io/File :: return v7::DD,120019
120281 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL,int)::CD,120286:CD,120290:CD,120296:CD,120300:CD,120305:CD,120309:CD,120314:CD,120318:CD,120323:CD,120327:CD,120343:CD,120349:CD,120359:CD,120372:CD,120378:CD,120388:CD,120395
120286 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,120290
120290 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
120296 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
120300 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(p2 $timeout )::JM,120290
120305 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
120309 :: CALL :: call :: Ljava/lang/String :: v19 = setProperty(#(sun.net.client.defaul...), v17)::
120314 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
120318 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(p2 $timeout )::JM,120290
120323 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
120327 :: CALL :: call :: Ljava/lang/String :: v28 = setProperty(#(sun.net.client.defaul...), v26)::
120343 :: CALL :: call :: Ljava/lang/reflect/Method :: v38 = v31.getMethod(#(setConnectTimeout), v34)::
120349 :: NORM :: declaration :: [Ljava/lang/Object :: v39 = new java.lang.Object[]::
120359 :: CALL :: call :: Ljava/lang/Object :: v43 = v38.invoke(v7, v39)::
120372 :: CALL :: call :: Ljava/lang/reflect/Method :: v48 = v31.getMethod(#(setReadTimeout), v45)::
120378 :: NORM :: declaration :: [Ljava/lang/Object :: v49 = new java.lang.Object[]::
120388 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.invoke(v7, v49)::
120395 :: CALL :: call :: V :: v54.printStackTrace()::
120551 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getInputStream(java.lang.String)::CD,120562:CD,120567:CD,120572:CD,120581:CD,120586:CD,120592:CD,120597:CD,120602:CD,120607
120562 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
120567 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v29.append(p1 $pdbId )::
120572 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
120581 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .downloadStructure(p1 $pdbId )::CL,131846
120586 :: CALL :: call :: Z :: v10 = v8.exists()::
120592 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
120597 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $pdbId )::
120602 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( not found and unable...))::
120607 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
120639 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getStructure(java.io.InputStream)::JM,84999:JM,85029:JM,41467:JM,85022:CD,120662:CD,120669:CD,120673:CD,120674:CD,120683
120662 :: CALL :: call :: V :: v8.setFileParsingParameters(v10)::CL,85046
120669 :: CALL :: call :: V :: v4.addMMcifConsumer(v12)::CL,85057
120673 :: NORM :: declaration :: Ljava/io/BufferedReader :: v14 = new java.io.BufferedReader::CF,120674
120674 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v15 = new java.io.InputStreamReader::
120683 :: CALL :: call :: V :: v4.parse(v14)::CL,85074
120711 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::JM,106881:JM,107323:JM,124337:JM,123949
120710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::CE,120711:CD,120734:CD,120738:CD,120740:JM,120721:JM,120731
120716 :: CALL :: call :: Ljava/lang/Object :: v8 = p2 $chains .get(v16)::JM,120721:JM,120738:JM,120731
120721 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,120732
120722 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getChainID()::JM,120731:CL,60024
120726 :: CALL :: call :: Z :: v13 = p1 $chainID .equals(v11)::JM,120721:JM,120738:JM,120731
120731 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 31::CD,120732:CD,120733:CD,120734:CD,120738:CD,120740
120733 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,120740
120732 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v9::DD,120711
120734 :: CALL :: call :: I :: v6 = p2 $chains .size()::JM,120721:JM,120738:JM,120731
120739 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,120711
120738 :: PRED :: IF :: Z :: if (v16 < v6) goto 7::CD,120716:CD,120721:CD,120722:CD,120726:CD,120731:CD,120739:JM,120738
120740 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::JM,120721:JM,120731:DD,120733:DD,120738
120755 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntityChain(java.lang.String)::CD,120763:CD,120784:CD,120788:JM,120782
120760 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entityChains::JM,120788
120763 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,120788
120768 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,120788
120773 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getChainID()::JM,120782:CL,60024
120777 :: CALL :: call :: Z :: v16 = v14.equals(p1 $entity_id )::JM,120782
120782 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 39::CD,120784:CD,120788
120784 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,120788
120789 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v17 = new org.biojava.nbio.structure.ChainImpl::
120788 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CF,120789:CD,120768:CD,120773:CD,120777:CD,120782:JM,59970:JM,59989:JM,59975:JM,59982:CD,120793:CD,120800:JM,120788
120793 :: CALL :: call :: V :: v17.setChainID(p1 $entity_id )::CL,60013
120797 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .entityChains::
120800 :: CALL :: call :: Z :: v22 = v20.add(v17)::
120824 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.clone()::JM,59970:JM,59989:JM,59975:JM,59982:CD,120836:CD,120844:CD,120851:CD,120858:CD,120865:CD,120888:CD,120892:CD,120896
120836 :: CALL :: call :: V :: v3.setChainID(v6)::CL,60013
120844 :: CALL :: call :: V :: v3.setSwissprotId(v9)::CL,89958
120851 :: CALL :: call :: V :: v3.setCompound(v11)::CL,80945
120858 :: CALL :: call :: V :: v3.setInternalChainID(v13)::CL,121917
120862 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::JM,120892
120865 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,120892
120870 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,120892
120875 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.clone()::CL,75669:CL,75811:CL,75986
120880 :: CALL :: call :: V :: v3.addGroup(v26)::CL,60033
120884 :: CALL :: call :: V :: v26.setChain(v3)::CL,60997
120888 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,120892
120893 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .seqResGroups::DD,120896
120892 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 54::CD,120870:CD,120875:CD,120880:CD,120884:CD,120888:JM,120892
120897 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::
120896 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 211::CF,120897:CD,120904:CD,120943:CD,120947:CD,120948
120901 :: EXPR :: reference :: Ljava/util/List :: v33 = p0 $this .seqResGroups::JM,120947
120904 :: CALL :: call :: Ljava/util/Iterator :: v35 = v33.iterator()::JM,120947
120909 :: CALL :: call :: Ljava/lang/Object :: v39 = v35.next()::JM,120947
120917 :: CALL :: call :: I :: v43 = findMathingGroupIndex(v41, v40)::JM,120922:CL,132101
120923 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v46 = v3.getAtomGroup(v43)::JM,120953:CL,94697
120922 :: PRED :: IF :: Z :: if (v43 == #(-1)) goto 168::CD,120923:CD,120929:CD,120933:CD,120953
120929 :: CALL :: call :: Ljava/lang/Object :: v48 = v40.clone()::JM,120933:CL,75669:CL,75811:CL,75986
120933 :: EXPR :: assign :: Ljava/lang/Object :: v49 = CHECKCAST v48::DD,120953
120934 :: CALL :: call :: V :: v50.setChain(v3)::CL,60997
120938 :: CALL :: call :: Z :: v53 = v31.add(v50)::
120943 :: CALL :: call :: Z :: v37 = v35.hasNext()::JM,120947
120947 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 128::CD,120909:CD,120917:CD,120922:CD,120934:CD,120938:CD,120943:CD,120953:JM,120947
120948 :: CALL :: call :: V :: v3.setSeqResGroups(v31)::CL,80733
120953 :: EXPR :: assign :: null :: PHI v50 = v46, v49::
121005 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::CE,121006:CD,121010:JM,59970:JM,59989:JM,59975:JM,59982:CD,121014:CD,121018:CD,121091:CD,121095:CD,121096:CD,121097
121006 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::
121010 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v4 = new org.biojava.nbio.structure.ChainImpl::DD,121096
121014 :: CALL :: call :: Ljava/util/List :: v8 = p1 $c .getAtomGroups()::JM,121095:CL,70097
121018 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,121095
121023 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.next()::JM,121095
121028 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = new org.biojava.nbio.structure.ResidueNumber::DD,121097
121059 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 93::CD,121060:CD,121065:CD,121066
121060 :: CALL :: call :: Z :: v32 = v43.equals(v17)::JM,121065:CL,36962
121065 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 101::CD,121066:CD,121073:CD,121078:CD,121083
121066 :: CALL :: call :: V :: v4.addGroup(v16)::CL,60033
121073 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
121078 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v16)::
121083 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
121091 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,121095
121095 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,121023:CD,121028:JM,60337:JM,60331:JM,60334:CD,121059:CD,121091:CD,121097:JM,121095:CF,121096
121097 :: EXPR :: assign :: null :: PHI v43 = #(null), v17::JM,121095:DD,121059
121096 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v4::DD,121006
121126 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCompounds(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,121131:CD,121135:CD,121151:CD,121159:CD,121291:CD,121295:CD,121299:CD,121381:CD,121385:CD,121389:CD,121471:CD,121475:CD,121479:CD,121484:CD,121537:JM,121313:JM,121173:JM,121317:JM,121412:JM,121177:JM,121403:JM,121322:JM,121407:JM,121182
121131 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $asym .getEntity_id()::JM,121313:JM,121537:JM,121173:JM,121317:JM,121412:JM,121177:JM,121131:JM,121403:JM,121322:JM,121407:JM,121182
121135 :: CALL :: call :: I :: v8 = parseInt(v6)::JM,121537:JM,121317:JM,121412:JM,121177:JM,121322:JM,121407:JM,121182
121151 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v18 = p0 $this .getEntity(v16)::JM,121251:JM,121252:JM,121193:JM,121256:JM,121194:JM,121261:JM,121423:JM,121198:JM,121424:JM,121203:JM,121333:JM,121493:JM,121428:JM,121334:JM,121494:JM,121433:JM,121242:JM,121338:JM,121498:JM,121343:JM,121503:JM,121246:CL,132149
121156 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .entitySrcGens::JM,121168:JM,121295
121159 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,121168:JM,121295
121164 :: CALL :: call :: Ljava/lang/Object :: v25 = v21.next()::JM,121168:JM,121295
121169 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getEntity_id()::JM,121169:JM,121177:JM,121182
121168 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::JM,121169:JM,121177:JM,121182:JM,121269
121173 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $asym .getEntity_id()::JM,121313:JM,121537:JM,121173:JM,121317:JM,121412:JM,121177:JM,121131:JM,121403:JM,121322:JM,121407:JM,121182
121177 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,121177:JM,121182:JM,121537:JM,121317:JM,121412:JM,121322:JM,121407
121182 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 80::CD,121187:CD,121192
121187 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v35 = v33.getCompoundById(v16)::JM,121192:CL,132209
121193 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 228::CD,121194:CD,121198:CD,121203:JM,121251:JM,121252:JM,121256:JM,121261:JM,121423:JM,121424:JM,121333:JM,121493:JM,121428:JM,121334:JM,121494:JM,121433:JM,121242:JM,121338:JM,121498:JM,121343:JM,121503:JM,121246:JM,121168:JM,121295
121192 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 228::CD,121193:JM,121168:JM,121295
121194 :: CALL :: call :: Ljava/lang/String :: v38 = v18.getType()::JM,121251:JM,121252:JM,121256:JM,121194:JM,121261:JM,121423:JM,121198:JM,121424:JM,121203:JM,121333:JM,121493:JM,121428:JM,121334:JM,121494:JM,121433:JM,121242:JM,121338:JM,121498:JM,121343:JM,121503:JM,121246
121198 :: CALL :: call :: Z :: v41 = v38.equals(#(polymer))::JM,121203:JM,121251:JM,121428:JM,121433:JM,121256:JM,121338:JM,121498:JM,121261:JM,121343:JM,121503:JM,121198:JM,121246
121203 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 166::CD,121204:CD,121214:CD,121221:CD,121227:CD,121242:CD,121246:CD,121251:JM,121252:JM,121256:JM,121194:JM,121261:JM,121423:JM,121198:JM,121424:JM,121203:JM,121333:JM,121493:JM,121428:JM,121334:JM,121494:JM,121433:JM,121338:JM,121498:JM,121343:JM,121503
121204 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v53 = p0 $this .createNewCompoundFromESG(v26, v16)::CL,132249
121214 :: CALL :: call :: V :: v53.setMolName(v55)::CL,90698
121221 :: CALL :: call :: V :: v57.addCompound(v53)::CL,132339
121227 :: CALL :: call :: Ljava/lang/Integer :: v62 = valueOf(v16)::
121242 :: CALL :: call :: Ljava/lang/String :: v43 = v18.getType()::JM,121251:JM,121252:JM,121256:JM,121194:JM,121261:JM,121423:JM,121198:JM,121424:JM,121203:JM,121333:JM,121493:JM,121428:JM,121334:JM,121494:JM,121433:JM,121242:JM,121338:JM,121498:JM,121343:JM,121503:JM,121246
121246 :: CALL :: call :: Z :: v46 = v43.equals(#(non-solvent))::JM,121203:JM,121251:JM,121428:JM,121433:JM,121256:JM,121338:JM,121498:JM,121261:JM,121343:JM,121503:JM,121198:JM,121246
121251 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 228::CD,121252:CD,121256:CD,121261:JM,121251:JM,121194:JM,121423:JM,121198:JM,121424:JM,121203:JM,121333:JM,121493:JM,121428:JM,121334:JM,121494:JM,121433:JM,121242:JM,121338:JM,121498:JM,121343:JM,121503:JM,121246:JM,121168:JM,121295
121252 :: CALL :: call :: Ljava/lang/String :: v48 = v18.getType()::JM,121251:JM,121252:JM,121256:JM,121194:JM,121261:JM,121423:JM,121198:JM,121424:JM,121203:JM,121333:JM,121493:JM,121428:JM,121334:JM,121494:JM,121433:JM,121242:JM,121338:JM,121498:JM,121343:JM,121503:JM,121246
121256 :: CALL :: call :: Z :: v51 = v48.equals(#(water))::JM,121203:JM,121251:JM,121428:JM,121433:JM,121256:JM,121338:JM,121498:JM,121261:JM,121343:JM,121503:JM,121198:JM,121246
121261 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 228::CD,121264:CD,121269:CD,121273:CD,121278:CD,121283:JM,121168:JM,121295
121264 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v67 = new java.lang.StringBuilder::
121269 :: CALL :: call :: Ljava/lang/String :: v71 = v26.getEntity_id()::JM,121269
121273 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v67.append(v71)::
121278 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v73.append(#( that has unknown _en...))::
121283 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
121291 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,121168:JM,121295
121295 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 51::CD,121164:CD,121168:CD,121169:CD,121173:CD,121177:CD,121182:CD,121291:JM,121295
121296 :: EXPR :: reference :: Ljava/util/List :: v80 = p0 $this .entitySrcNats::JM,121385:JM,121308
121299 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,121385:JM,121308
121304 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,121385:JM,121308
121309 :: CALL :: call :: Ljava/lang/String :: v89 = v87.getEntity_id()::JM,121317:JM,121322:JM,121309
121308 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,121317:JM,121322:JM,121309
121313 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $asym .getEntity_id()::JM,121313:JM,121537:JM,121173:JM,121317:JM,121412:JM,121177:JM,121131:JM,121403:JM,121322:JM,121407:JM,121182
121317 :: CALL :: call :: Z :: v93 = v89.equals(v91)::JM,121317:JM,121322:JM,121537:JM,121412:JM,121177:JM,121407:JM,121182
121322 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 281::CD,121327:CD,121332
121327 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v96 = v94.getCompoundById(v16)::JM,121332:CL,132209
121333 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 365::CD,121334:CD,121338:CD,121343:JM,121251:JM,121252:JM,121256:JM,121194:JM,121261:JM,121423:JM,121198:JM,121424:JM,121203:JM,121493:JM,121428:JM,121494:JM,121433:JM,121242:JM,121498:JM,121503:JM,121246:JM,121385:JM,121308
121332 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 365::CD,121333:JM,121385:JM,121308
121334 :: CALL :: call :: Ljava/lang/String :: v99 = v18.getType()::JM,121251:JM,121252:JM,121256:JM,121194:JM,121261:JM,121423:JM,121198:JM,121424:JM,121203:JM,121493:JM,121428:JM,121334:JM,121494:JM,121433:JM,121242:JM,121338:JM,121498:JM,121343:JM,121503:JM,121246
121338 :: CALL :: call :: Z :: v101 = v99.equals(#(polymer))::JM,121203:JM,121251:JM,121428:JM,121433:JM,121256:JM,121338:JM,121498:JM,121261:JM,121343:JM,121503:JM,121198:JM,121246
121343 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 365::CD,121344:CD,121354:CD,121361:CD,121367:JM,121385:JM,121308
121344 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v103 = p0 $this .createNewCompoundFromESN(v87, v16)::CL,132365
121354 :: CALL :: call :: V :: v103.setMolName(v105)::CL,90698
121361 :: CALL :: call :: V :: v107.addCompound(v103)::CL,132339
121367 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v16)::
121381 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,121385:JM,121308
121385 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 252::CD,121304:CD,121308:CD,121309:CD,121313:CD,121317:CD,121322:CD,121381:JM,121385
121386 :: EXPR :: reference :: Ljava/util/List :: v115 = p0 $this .entitySrcSyns::JM,121475:JM,121398
121389 :: CALL :: call :: Ljava/util/Iterator :: v117 = v115.iterator()::JM,121475:JM,121398
121394 :: CALL :: call :: Ljava/lang/Object :: v121 = v117.next()::JM,121475:JM,121398
121399 :: CALL :: call :: Ljava/lang/String :: v124 = v122.getEntity_id()::JM,121412:JM,121399:JM,121407
121398 :: EXPR :: assign :: Ljava/lang/Object :: v122 = CHECKCAST v121::JM,121412:JM,121399:JM,121407
121403 :: CALL :: call :: Ljava/lang/String :: v126 = p1 $asym .getEntity_id()::JM,121313:JM,121537:JM,121173:JM,121317:JM,121412:JM,121177:JM,121131:JM,121403:JM,121322:JM,121407:JM,121182
121407 :: CALL :: call :: Z :: v128 = v124.equals(v126)::JM,121412:JM,121407:JM,121537:JM,121317:JM,121177:JM,121322:JM,121182
121412 :: PRED :: IF :: Z :: if (v128 != #(0)) goto 418::CD,121417:CD,121422
121417 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v131 = v129.getCompoundById(v16)::JM,121422:CL,132209
121423 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 502::CD,121424:CD,121428:CD,121433:JM,121251:JM,121252:JM,121256:JM,121194:JM,121261:JM,121198:JM,121203:JM,121493:JM,121334:JM,121494:JM,121242:JM,121338:JM,121498:JM,121343:JM,121503:JM,121246:JM,121475:JM,121398
121422 :: PRED :: IF :: Z :: if (v131 != #(null)) goto 502::CD,121423:JM,121475:JM,121398
121424 :: CALL :: call :: Ljava/lang/String :: v134 = v18.getType()::JM,121251:JM,121252:JM,121256:JM,121194:JM,121261:JM,121198:JM,121424:JM,121203:JM,121493:JM,121428:JM,121334:JM,121494:JM,121433:JM,121242:JM,121338:JM,121498:JM,121343:JM,121503:JM,121246
121428 :: CALL :: call :: Z :: v136 = v134.equals(#(polymer))::JM,121203:JM,121251:JM,121428:JM,121433:JM,121256:JM,121338:JM,121498:JM,121261:JM,121343:JM,121503:JM,121198:JM,121246
121433 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 502::CD,121434:CD,121444:CD,121451:CD,121457:JM,121475:JM,121398
121434 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v138 = p0 $this .createNewCompoundFromESS(v122, v16)::CL,132435
121444 :: CALL :: call :: V :: v138.setMolName(v140)::CL,90698
121451 :: CALL :: call :: V :: v142.addCompound(v138)::CL,132339
121457 :: CALL :: call :: Ljava/lang/Integer :: v146 = valueOf(v16)::
121471 :: CALL :: call :: Z :: v119 = v117.hasNext()::JM,121475:JM,121398
121475 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 389::CD,121394:CD,121398:CD,121399:CD,121403:CD,121407:CD,121412:CD,121471:JM,121475
121479 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v152 = v150.getCompoundById(v16)::JM,121484:CL,132209
121484 :: PRED :: IF :: Z :: if (v152 != #(null)) goto 599::JM,63952:JM,63959:CD,121489:CD,121493
121489 :: CALL :: call :: V :: v153.setMolId(v16)::CL,80986
121493 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 599::CD,121494:CD,121498:CD,121503:JM,121251:JM,121252:JM,121256:JM,121194:JM,121261:JM,121198:JM,121424:JM,121203:JM,121428:JM,121334:JM,121433:JM,121242:JM,121338:JM,121343:JM,121246
121494 :: CALL :: call :: Ljava/lang/String :: v157 = v18.getType()::JM,121251:JM,121252:JM,121256:JM,121194:JM,121261:JM,121198:JM,121424:JM,121203:JM,121428:JM,121334:JM,121494:JM,121433:JM,121242:JM,121338:JM,121498:JM,121343:JM,121503:JM,121246
121498 :: CALL :: call :: Z :: v159 = v157.equals(#(polymer))::JM,121203:JM,121251:JM,121428:JM,121433:JM,121256:JM,121338:JM,121498:JM,121261:JM,121343:JM,121503:JM,121198:JM,121246
121503 :: PRED :: IF :: Z :: if (v159 == #(0)) goto 599::CD,121508:CD,121515
121508 :: CALL :: call :: V :: v153.setMolName(v161)::CL,90698
121515 :: CALL :: call :: V :: v163.addCompound(v153)::CL,132339
121537 :: EXPR :: assign :: null :: PHI v16 = v8, #(0)::
121666 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.alignSeqRes()::CD,121826:CD,121830:CD,121840
121680 :: CALL :: call :: Ljava/util/List :: v12 = v10.getModel(v79)::CL,70080
121685 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .seqResChains::JM,121821
121688 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,121821
121693 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,121821
121698 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getMatchingAtomRes(v20, v12)::JM,121703:CL,80363
121703 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 84::CF,121716:CD,121742:CD,121746:CD,121750:CD,121808:CD,121812:CD,121813:CD,121832:CD,121833:CD,121837:CD,121838:CD,121839
121716 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::JM,121812
121721 :: CALL :: call :: Ljava/util/List :: v36 = v20.getAtomGroups()::CL,70097
121725 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v47)::
121731 :: CALL :: call :: Ljava/lang/Object :: v41 = v39.clone()::JM,121735:CL,75669:CL,75811:CL,75986
121735 :: EXPR :: assign :: Ljava/lang/Object :: v42 = CHECKCAST v41::
121736 :: CALL :: call :: Z :: v44 = v29.add(v42)::
121741 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v47 + #(1)::DD,121833:CF,121832
121742 :: CALL :: call :: Ljava/util/List :: v32 = v20.getAtomGroups()::JM,121750:CL,70097
121746 :: CALL :: call :: I :: v34 = v32.size()::JM,121750
121750 :: PRED :: IF :: Z :: if (v47 < v34) goto 102::CD,121721:CD,121725:CD,121731:CD,121735:CD,121736:CD,121741:CD,121742:CD,121746:CD,121832:CD,121833
121752 :: CALL :: call :: Ljava/lang/Object :: v51 = v29.get(v75)::
121758 :: CALL :: call :: Ljava/util/List :: v54 = v22.getAtomGroups()::JM,121801:JM,121771:CL,70097
121762 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,121801:JM,121771
121767 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,121801:JM,121771
121771 :: EXPR :: assign :: Ljava/lang/Object :: v61 = CHECKCAST v60::
121772 :: CALL :: call :: I :: v63 = p0 $this .getInternalNr(v61)::JM,121789:CL,132485
121781 :: CALL :: call :: Ljava/lang/Integer :: v67 = v65.getSeqNum()::JM,121789:CL,102018
121785 :: CALL :: call :: I :: v69 = v67.intValue()::JM,121789
121789 :: PRED :: IF :: Z :: if (v69 != v63) goto 248::CF,121834:CD,121790:CD,121797:CD,121801:CD,121835:CD,121836
121790 :: CALL :: call :: Ljava/lang/Object :: v71 = v29.set(v76, v61)::
121797 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,121801:JM,121771
121801 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 192::CF,121836:CD,121767:CD,121771:CD,121772:CD,121781:CD,121785:CD,121789:CD,121834:CD,121835:JM,121801
121803 :: CALL :: call :: V :: v52.setResidueNumber(#(null))::CL,60537
121802 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 269::CD,121803:CF,121807
121807 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v76 + #(1)::DD,121838:CF,121837
121808 :: CALL :: call :: I :: v49 = v29.size()::JM,121812
121813 :: CALL :: call :: V :: v22.setSeqResGroups(v29)::CL,80733
121812 :: PRED :: IF :: Z :: if (v75 < v49) goto 160::CD,121752:CD,121758:CD,121762:CD,121797:CD,121801:CD,121802:CD,121807:CD,121808:CD,121834:CD,121835:CD,121836:CD,121837:CD,121838
121817 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,121821
121821 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 43::CD,121693:CD,121698:CD,121703:CD,121817:CD,121839:JM,121821:CF,121822
121822 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v80 + #(1)::DD,121840
121826 :: CALL :: call :: I :: v9 = v7.nrModels()::JM,121830:CL,76385
121830 :: PRED :: IF :: Z :: if (v79 < v9) goto 17::CD,121680:CD,121688:CD,121817:CD,121821:CD,121822:CD,121826:CD,121839:CD,121840
121833 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::DD,121741:DD,121750
121832 :: EXPR :: assign :: null :: PHI v81 = v80, v81::CF,121833:DD,121832:DD,121837
121835 :: EXPR :: assign :: null :: PHI v76 = v75, v76::JM,121801:JM,121771:DD,121807:DD,121835
121834 :: EXPR :: assign :: null :: PHI v83 = v82, v83::CF,121835:DD,121834:DD,121837
121837 :: EXPR :: assign :: null :: PHI v82 = v81, v83::CF,121838:DD,121834:DD,121839
121836 :: EXPR :: assign :: null :: PHI v72 = #(1), #(0)::DD,121802
121839 :: EXPR :: assign :: null :: PHI v80 = v79, v80, v82::JM,121821:DD,121822:DD,121832:DD,121839
121838 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::DD,121812:DD,121835
121840 :: EXPR :: assign :: null :: PHI v79 = #(0), v78::DD,121830:DD,121839
121909 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::JM,107158:JM,122004:JM,122329
121908 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::CE,121909:CD,121915
121912 :: EXPR :: reference :: Z :: v3 = p0 $this .useInternalChainId::DD,121915
121915 :: NORM :: compound :: Z :: return v3::CF,121909
121917 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setInternalChainID(java.lang.String)::JM,121922
121922 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = p1 $internalChainID ::
121928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addBonds()::CD,121944:CD,121950
121944 :: CALL :: call :: V :: v3.makeBonds()::CL,67201
121950 :: CALL :: call :: V :: v3.formBondsFromStructConn(v8)::CL,132577
121962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCharges()::CD,121969
121969 :: CALL :: call :: V :: addCharges(v3)::CL,67222
121974 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.linkCompounds()::CD,122147:CD,122151:CD,122155:CD,122159:CD,122200:CD,122204:CD,122208
121982 :: CALL :: call :: Ljava/util/List :: v9 = v7.getModel(v74)::JM,122142:CL,70080
121987 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,122142
121992 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,122142
122000 :: CALL :: call :: Z :: v19 = v17.isUseInternalChainId()::JM,122004:CL,121908
122004 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 68::CD,122012:CD,122017:CD,122026:CD,122031:CD,122206
122012 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,122017
122017 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,122206
122026 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,122031
122031 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,122206
122032 :: PRED :: IF :: Z :: if (v32 != #(null)) goto 114::CD,122045:CD,122052:CD,122057:CD,122207
122045 :: CALL :: call :: I :: v40 = parseInt(v32)::
122052 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v43 = v41.getCompoundById(v40)::JM,122057:CL,132209
122057 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 203::CD,122060:JM,63952:JM,63959:CD,122078:CD,122082:CD,122086:CD,122093:CD,122117:CD,122130:CD,122134:CD,122207
122060 :: CALL :: call :: Ljava/lang/Integer :: v47 = valueOf(v40)::
122078 :: CALL :: call :: V :: v51.setMolId(v40)::CL,80986
122082 :: CALL :: call :: V :: v51.addChain(v16)::CL,80913
122086 :: CALL :: call :: V :: v16.setCompound(v51)::CL,80945
122093 :: CALL :: call :: V :: v56.addCompound(v51)::CL,132339
122117 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v40)::
122130 :: CALL :: call :: V :: v43.addChain(v16)::CL,80913
122134 :: CALL :: call :: V :: v16.setCompound(v43)::CL,80945
122138 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,122142
122143 :: EXPR :: assign :: Ljava/lang/Object :: v73 = v75 + #(1)::DD,122208
122142 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 25::CD,121992:CD,122000:CD,122004:CD,122032:CD,122138:CD,122206:CD,122207:JM,122142:CF,122143
122147 :: CALL :: call :: I :: v6 = v4.nrModels()::JM,122151:CL,76385
122151 :: PRED :: IF :: Z :: if (v74 < v6) goto 6::CD,121982:CD,121987:CD,122138:CD,122142:CD,122143:CD,122147:CD,122207:CD,122208
122155 :: CALL :: call :: Ljava/util/List :: v78 = v76.getCompounds()::JM,122204:CL,66866
122159 :: CALL :: call :: Ljava/util/Iterator :: v80 = v78.iterator()::JM,122204
122164 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,122204
122200 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,122204
122204 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 304::CD,122164:CD,122200:JM,122204
122207 :: EXPR :: assign :: null :: PHI v75 = v74, v75, v75, v75::JM,122142:DD,122143:DD,122207
122206 :: EXPR :: assign :: null :: PHI v32 = v25, v31::DD,122032
122208 :: EXPR :: assign :: null :: PHI v74 = #(0), v73::DD,122151:DD,122207
122284 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addSites()::CD,122291:CD,122295:CD,122303:CD,122401:CD,122406:CD,122411:CD,122416:CD,122427:CD,122432:CD,122436:CD,122441:CD,122446:CD,122450:CD,122455:CD,122568:CD,122572:CD,122576:CD,122582:CD,122583
122291 :: CALL :: call :: Ljava/util/List :: v5 = v3.getSites()::JM,122295:JM,122583:CL,86197
122295 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 23::CF,122583:CF,122296
122296 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,122583
122300 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .structSiteGens::JM,122312:JM,122572
122303 :: CALL :: call :: Ljava/util/Iterator :: v12 = v10.iterator()::JM,122312:JM,122572
122308 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.next()::JM,122312:JM,122572
122313 :: CALL :: call :: Ljava/lang/String :: v20 = v18.getSite_id()::JM,122313:JM,122584:JM,122317
122312 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,122313:JM,122584:JM,122317:JM,122516:JM,122521:JM,122318:JM,122585:JM,122330:JM,122335:JM,122339:JM,122353:JM,122343:JM,122347:JM,122586:JM,122348
122317 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 62::CF,122584
122318 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getLabel_comp_id()::JM,122516:JM,122521:JM,122318
122325 :: CALL :: call :: Z :: v27 = v25.isUseInternalChainId()::JM,122329:CL,121908
122329 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 87::CD,122330:CD,122335:CD,122585
122330 :: CALL :: call :: Ljava/lang/String :: v29 = v18.getLabel_asym_id()::JM,122585:JM,122330
122335 :: CALL :: call :: Ljava/lang/String :: v31 = v18.getAuth_asym_id()::JM,122585:JM,122335
122339 :: CALL :: call :: Ljava/lang/String :: v34 = v18.getAuth_seq_id()::JM,122339
122343 :: CALL :: call :: Ljava/lang/String :: v36 = v18.getPdbx_auth_ins_code()::JM,122353:JM,122343:JM,122347:JM,122586:JM,122348
122347 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 127::CF,122586:CD,122348:CD,122353
122348 :: CALL :: call :: Z :: v39 = v36.equals(#(?))::JM,122353:JM,122586:JM,122348
122353 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 127::CF,122586
122357 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v43 = v41.getChainByPDB(v32)::JM,122362:CL,80930
122363 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,122364:CD,122368
122362 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 289::CF,122588:CD,122363:CD,122379:CD,122383:JM,60337:JM,60331:JM,60334:CD,122393
122364 :: CALL :: call :: I :: v45 = v40.length()::JM,122368:JM,122364
122369 :: CALL :: call :: C :: v47 = v40.charAt(#(0))::JM,122369
122368 :: PRED :: IF :: Z :: if (v45 <= #(0)) goto 173::CD,122369:CD,122374
122374 :: CALL :: call :: Ljava/lang/Character :: v49 = valueOf(v47)::
122379 :: CALL :: call :: I :: v53 = parseInt(v34)::
122383 :: CALL :: call :: Ljava/lang/Integer :: v55 = valueOf(v53)::
122393 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v58 = v43.getGroupByPDB(v51)::JM,122588:CL,93683
122401 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v62 = new java.lang.StringBuilder::
122406 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v62.append(v32)::
122411 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v66.append(v34)::
122416 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
122427 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::
122432 :: CALL :: call :: Ljava/lang/String :: v78 = v18.getSite_id()::
122436 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v74.append(v78)::
122441 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v80.append(#( - ))::
122446 :: CALL :: call :: Ljava/lang/String :: v85 = v72.getMessage()::
122450 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v83.append(v85)::
122455 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
122469 :: CALL :: call :: Ljava/util/Iterator :: v98 = v9.iterator()::JM,122493:JM,122478
122468 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 480::CD,122469:CD,122489:CD,122493:CD,122494:CD,122503:CD,122507:CD,122512:CD,122516:CD,122521:CD,122562:CD,122589:CD,122590:CD,122591:CD,122592:JM,122478:JM,122312:JM,122572
122474 :: CALL :: call :: Ljava/lang/Object :: v102 = v98.next()::JM,122493:JM,122478
122479 :: CALL :: call :: Ljava/lang/String :: v105 = v103.getSiteID()::JM,122488:CL,77084
122478 :: EXPR :: assign :: Ljava/lang/Object :: v103 = CHECKCAST v102::DD,122589
122483 :: CALL :: call :: Z :: v107 = v22.equals(v105)::JM,122488
122489 :: CALL :: call :: Z :: v100 = v98.hasNext()::JM,122493:JM,122478
122488 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 337::CF,122589
122493 :: PRED :: IF :: Z :: if (v100 != #(0)) goto 308::CD,122474:CD,122478:CD,122479:CD,122483:CD,122488:CD,122489:CD,122589:JM,122493:CF,122494
122495 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v110 = new org.biojava.nbio.structure.Site::DD,122590
122494 :: PRED :: IF :: Z :: if (v108 != #(null)) goto 374::CF,122590:CD,122495:JM,133222:CD,122499
122499 :: CALL :: call :: V :: v110.setSiteID(v22)::CL,133245
122503 :: CALL :: call :: Ljava/util/List :: v116 = v113.getGroups()::JM,122592:JM,122507:CL,81015
122507 :: PRED :: IF :: Z :: if (v116 != #(null)) goto 397::CF,122592:CF,122508
122508 :: NORM :: declaration :: Ljava/util/ArrayList :: v117 = new java.util.ArrayList::DD,122592
122512 :: CALL :: call :: Ljava/lang/String :: v121 = v94.getPDBName()::JM,122516:JM,122521:CL,75053
122516 :: CALL :: call :: Z :: v123 = v24.equals(v121)::JM,122516:JM,122521
122521 :: PRED :: IF :: Z :: if (v123 != #(0)) goto 452::CD,122524:CD,122529:CD,122534:CD,122539:CD,122544:CD,122553:CD,122558
122524 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v125 = new java.lang.StringBuilder::
122529 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v125.append(v32)::
122534 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(v34)::
122539 :: CALL :: call :: Ljava/lang/StringBuilder :: v134 = v131.append(#( - skipping))::
122544 :: CALL :: call :: Ljava/lang/String :: v136 = v134.toString()::
122553 :: CALL :: call :: Z :: v139 = v119.add(v94)::
122558 :: CALL :: call :: V :: v113.setGroups(v119)::CL,133256
122563 :: CALL :: call :: Z :: v142 = v9.add(v113)::
122562 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 480::CD,122563:JM,122312:JM,122572
122568 :: CALL :: call :: Z :: v14 = v12.hasNext()::JM,122312:JM,122572
122572 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 36::CD,122308:CD,122312:CD,122313:CD,122317:CD,122318:CD,122325:CD,122329:CD,122339:CD,122343:CD,122347:CD,122357:CD,122362:CD,122468:CD,122568:CD,122584:CD,122585:CD,122586:CD,122588:JM,122572
122576 :: CALL :: call :: V :: v143.setSites(v9)::CL,81024
122583 :: EXPR :: assign :: null :: PHI v9 = v5, v7::JM,122493:JM,122478
122582 :: EXPR :: assign :: Ljava/lang/Exception :: v72 = catch <exc>::
122585 :: EXPR :: assign :: null :: PHI v32 = v29, v31::JM,122339
122584 :: EXPR :: assign :: null :: PHI v22 = v20, #()::JM,122516:JM,122521:JM,122318:JM,122488
122586 :: EXPR :: assign :: null :: PHI v40 = v36, v36, #(null)::DD,122363:JM,122368:JM,122364:JM,122369
122589 :: EXPR :: assign :: null :: PHI v108 = #(null), v108, v103::JM,122493:JM,122478:DD,122494:DD,122589:DD,122590
122588 :: EXPR :: assign :: null :: PHI v94 = #(null), v58, #(null), #(null)::DD,122468
122591 :: EXPR :: assign :: null :: PHI v114 = #(0), #(1)::DD,122562
122590 :: EXPR :: assign :: null :: PHI v113 = v108, v110::CF,122591
122592 :: EXPR :: assign :: null :: PHI v119 = v116, v117::
122702 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
122709 :: CALL :: call :: V :: p0 $this .init()::CL,133267
122717 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly,java.util.List,java.util.List)::CD,122724:CD,122730:CD,122780:CD,122784:CD,122789:CD,122798:CD,122803:CD,122808
122724 :: CALL :: call :: V :: p0 $this .init()::CL,133267
122730 :: CALL :: call :: Ljava/util/Iterator :: v8 = p3 $operators .iterator()::JM,122784
122735 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,122784
122740 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v15 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
122748 :: CALL :: call :: V :: v15.setId(v18)::CL,90590
122772 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .modelTransformations::
122775 :: CALL :: call :: Z :: v30 = v28.add(v15)::
122780 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,122784
122784 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,122735:CD,122740:JM,90454:CD,122748:CD,122775:CD,122780:JM,122784
122789 :: CALL :: call :: Ljava/util/ArrayList :: v34 = p0 $this .getBioUnitTransformationsListUnaryOperators(v32)::CL,133292
122798 :: CALL :: call :: Ljava/util/ArrayList :: v38 = p0 $this .getBioUnitTransformationsListBinaryOperators(v36)::CL,133458
122803 :: CALL :: call :: Z :: v40 = v34.addAll(v38)::
122808 :: CALL :: call :: V :: v34.trimToSize()::
122841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStructNcsOps()::CD,122845:CD,122852:CD,123080:CD,123085:CD,123086:CD,123095:CD,123099:CD,123100:CD,123104
122845 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,123104:JM,123116
122849 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .structNcsOper::JM,123099:JM,122861
122852 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,123099:JM,122861
122857 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,123099:JM,122861
122861 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,122866:JM,122871:JM,122862:JM,123085
122862 :: CALL :: call :: Ljava/lang/String :: v15 = v13.getCode()::JM,122866:JM,122871:JM,122862
122866 :: CALL :: call :: Z :: v18 = v15.equals(#(generate))::JM,122866:JM,122871
122871 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,122873:CD,123069
122873 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v19 = new javax.vecmath.Matrix4d::
123069 :: CALL :: call :: Z :: v91 = v3.add(v19)::
123077 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .structNcsOper::JM,123085
123080 :: CALL :: call :: I :: v97 = v95.indexOf(v13)::JM,123085
123085 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v97 + #(1)::
123086 :: CALL :: call :: Ljava/lang/Integer :: v100 = valueOf(v98)::
123095 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,123099:JM,122861
123099 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 22::CD,122857:CD,122861:CD,122862:CD,122866:CD,122871:CD,123095:JM,123099:JM,123104
123100 :: CALL :: call :: I :: v104 = v3.size()::JM,123104
123104 :: PRED :: IF :: Z :: if (v104 <= #(0)) goto 336::CD,123112:CD,123116:CD,123117:CD,123123
123112 :: CALL :: call :: I :: v109 = v3.size()::JM,123116
123117 :: CALL :: call :: [Ljava/lang/Object :: v112 = v3.toArray(v110)::
123116 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v110 = new javax.vecmath.Matrix4d[]::
123123 :: CALL :: call :: V :: v107.setNcsOperators(v113)::CL,66844
123215 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setCrystallographicInfoMetadata()::CD,123222
123219 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v3 = p0 $this .parsedScaleMatrix::DD,123222
123222 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 47::CD,123230:CD,123234:CD,123248
123230 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v10 = v7.getCrystalCell()::JM,123234:CL,133665
123234 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 44::CD,123242
123242 :: CALL :: call :: Z :: v15 = v12.checkScaleMatrix(v13)::CL,133674
123248 :: CALL :: call :: V :: v7.setNonStandardCoordFrameConvention(v17)::CL,133768
123277 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setDetails(java.lang.String)::JM,123282
123282 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
123288 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setInsCode(java.lang.String)::JM,123293
123293 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode = p1 $insCode ::
123299 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setOrigGroup(java.lang.String)::JM,123304
123304 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .origGroup = p1 $origGroup ::
123310 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbGroup(java.lang.String)::JM,123315
123315 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbGroup = p1 $pdbGroup ::
123321 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbResNum(java.lang.String)::JM,123326
123326 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbResNum = p1 $pdbResNum ::
123332 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setUniProtId(java.lang.String)::JM,123337
123337 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .uniProtId = p1 $uniProtId ::
123343 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setSeqNum(java.lang.Integer)::JM,123348
123348 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
123355 :: EXIT :: exit :: [Ljava/lang/reflect/Field :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::JM,108775
123354 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::CE,123355:CD,123358:CD,123362:CD,123363:CD,123364:CD,123388:CD,123389:CD,123394:CD,123395:CD,123397:CD,123398
123358 :: CALL :: call :: [Ljava/lang/reflect/Field :: v4 = p1 $c .getDeclaredFields()::JM,123362:JM,123364
123363 :: NORM :: declaration :: [Ljava/lang/reflect/Field :: v6 = new java.lang.reflect.Field[]::JM,123394:JM,123389:CF,123364
123362 :: EXPR :: assign :: I :: v5 = v4.length::CF,123363
123364 :: EXPR :: assign :: I :: v8 = v4.length::DD,123388
123366 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v4[v21]::JM,123380:JM,123375
123375 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v14 = v9.getAnnotation(v12)::JM,123380:JM,123375
123374 :: EXPR :: assign :: Ljava/lang/Class :: v12 = metadata <Application,Lorg/biojava/nbio/structure/io/mmcif/model/IgnoreField>-><Primordial,Ljava/lang/Class>::JM,123380:JM,123375
123381 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 64::CF,123396:CD,123386
123380 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,123381
123387 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,123398:CF,123397
123386 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v20 + #(1)::DD,123396
123389 :: CALL :: call :: [Ljava/lang/Object :: v23 = copyOf(v6, v20)::JM,123394:JM,123389
123388 :: PRED :: IF :: Z :: if (v21 < v8) goto 30::CD,123374:CD,123375:CD,123380:CD,123381:CD,123387:CD,123396:CD,123397:CD,123398:JM,123394:JM,123389
123395 :: NORM :: compound :: [Ljava/lang/reflect/Field :: return v24::DD,123355
123394 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::CF,123395
123397 :: EXPR :: assign :: null :: PHI v20 = #(0), v18::CF,123398:DD,123386:JM,123394:JM,123389:DD,123396
123396 :: EXPR :: assign :: null :: PHI v18 = v20, v17::DD,123397:CF,123387
123398 :: EXPR :: assign :: null :: PHI v21 = #(0), v19::DD,123387:DD,123388
123531 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.produceWarning(java.lang.String,java.lang.String,java.lang.Class,java.util.Set)::CD,123539:CD,123544:CD,123549:CD,123554:CD,123558:CD,123563:CD,123568:CD,123573:CD,123578:CD,123582:CD,123583:CD,123591:CD,123596:CD,123600:CD,123605:CD,123609:CD,123614:CD,123641:JM,123621:JM,123620
123539 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
123544 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $key )::JM,123554:JM,123621:JM,123620:JM,123641:JM,123596:JM,123614
123549 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(#( in ))::JM,123620:JM,123614
123554 :: CALL :: call :: Ljava/lang/String :: v16 = p3 $c .getName()::JM,123554:JM,123621:JM,123620:JM,123641:JM,123596:JM,123614
123558 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v14.append(v16)::
123563 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#( found in file, but n...))::
123568 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v21.append(p2 $val )::JM,123554:JM,123621:JM,123620:JM,123641:JM,123596:JM,123614
123573 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(#()))::JM,123620:JM,123614
123578 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
123583 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(p1 $key )::
123582 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
123591 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#(-))::
123596 :: CALL :: call :: Ljava/lang/String :: v37 = p3 $c .getName()::JM,123554:JM,123621:JM,123620:JM,123641:JM,123596:JM,123614
123600 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v37)::
123605 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
123609 :: CALL :: call :: Z :: v44 = p2 $val .equals(#(?))::JM,123554:JM,123621:JM,123620:JM,123641:JM,123596:JM,123614
123615 :: CALL :: call :: Z :: v48 = p2 $val .equals(#(.))::JM,123554:JM,123621:JM,123620:JM,123641:JM,123596:JM,123614
123614 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 113::CD,123615:CD,123620:JM,123554:JM,123621:JM,123641:JM,123596:JM,123614
123621 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 126::CD,123622
123620 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 113::CD,123621
123622 :: CALL :: call :: Z :: v51 = p4 $warnings .contains(v41)::
123641 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 151::CD,123642
123642 :: CALL :: call :: Z :: v57 = p4 $warnings .add(v41)::
123681 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,123700
123697 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .entities::
123700 :: CALL :: call :: Z :: v11 = v9.add(p1 $entity )::
123724 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,123732:CD,123736:JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,124265:JM,123816:JM,124072:JM,124264:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
123732 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,123736:CL,54222
123736 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,123738:CD,123742:CD,123746:CD,123750:CD,123754:CD,123762:CD,123767:CD,123788:CD,123792:CD,123797:CD,123807:CD,123811:CD,123816:CD,123823:CD,123830:CD,123835:CD,123885:CD,123914:CD,123918:CD,123923:JM,60337:JM,60331:JM,60334:CD,124020:CD,124046:CD,124072:CD,124076:CD,124080:CD,124084:CD,124115:CD,124120:CD,124250:CD,124254:CD,124336:CD,124338:CD,124339:CD,124340:JM,124103:JM,123798:JM,124255:JM,124259:JM,124265:JM,124264:JM,124269:JM,123824:JM,124274:JM,124085:JM,123959:JM,123836
123738 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $atom .getLabel_asym_id()::JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,124265:JM,123816:JM,124072:JM,124264:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
123742 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $atom .getGroup_PDB()::JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,124265:JM,123816:JM,124072:JM,124264:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
123746 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $atom .getAuth_seq_id()::JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,124265:JM,123816:JM,124072:JM,124264:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
123750 :: CALL :: call :: I :: v15 = parseInt(v13)::JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,123824:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123798:JM,123835:JM,123836
123754 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::JM,124339:JM,124274:JM,123797:JM,124084:JM,124103:JM,124264:JM,123835
123762 :: CALL :: call :: Z :: v23 = v11.equals(#(ATOM))::JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,123824:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123798:JM,123835:JM,123836
123767 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 71::CD,123768:CD,123773:CD,123777
123768 :: CALL :: call :: Ljava/lang/Character :: v32 = get1LetterCodeAmino(v19)::CL,75062
123773 :: CALL :: call :: Ljava/lang/Character :: v25 = get1LetterCodeAmino(v19)::JM,123777:CL,75062
123777 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 98::CD,123778
123778 :: CALL :: call :: Ljava/lang/Character :: v28 = valueOf(#(88))::
123788 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $atom .getPdbx_PDB_ins_code()::JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,124265:JM,123816:JM,124072:JM,124264:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
123792 :: CALL :: call :: Z :: v38 = v35.equals(#(?))::JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,123824:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123798:JM,123835:JM,123836
123797 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 134::CD,123798:CD,123803:JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,123824:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
123798 :: CALL :: call :: C :: v40 = v35.charAt(#(0))::JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,123824:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123798:JM,123835:JM,123836
123803 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(v40)::JM,124339:JM,124274:JM,124084:JM,124103:JM,124264:JM,123835
123807 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $atom .getLabel_seq_id()::JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,124265:JM,123816:JM,124072:JM,124264:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
123811 :: CALL :: call :: J :: v48 = parseLong(v46)::JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,123824:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123798:JM,123835:JM,123836
123816 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $atom .getPdbx_PDB_model_num()::JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,124265:JM,123816:JM,124072:JM,124264:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
123820 :: EXPR :: reference :: Ljava/lang/String :: v54 = p0 $this .current_nmr_model::DD,123823
123823 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 167::
123824 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
123827 :: EXPR :: reference :: Ljava/lang/String :: v55 = p0 $this .current_nmr_model::JM,123830:JM,123835
123830 :: CALL :: call :: Z :: v57 = v55.equals(v53)::JM,123830:JM,123835:JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123798:JM,123836
123835 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 248::CD,123842:CD,123865:CD,123869
123836 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
123839 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .current_chain::DD,123842
123842 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 214::CD,123849:CD,123856
123849 :: CALL :: call :: V :: v59.addGroup(v60)::CL,60033
123856 :: CALL :: call :: V :: v62.trimToSize()::CL,60642
123865 :: CALL :: call :: V :: v64.addModel(v65)::CL,61582
123869 :: NORM :: declaration :: Ljava/util/ArrayList :: v67 = new java.util.ArrayList::DD,123873
123873 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v67::
123876 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
123879 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
123882 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v69 = p0 $this .current_chain::DD,123885
123885 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 293::CF,124336:CD,123886:JM,59970:JM,59989:JM,59975:JM,59982:CD,123896:CD,123906
123886 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v70 = new org.biojava.nbio.structure.ChainImpl::DD,123890
123890 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v70::
123896 :: CALL :: call :: V :: v72.setChainID(v9)::CL,60013
123900 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .current_model::
123903 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v75 = p0 $this .current_chain::
123906 :: CALL :: call :: Z :: v77 = v74.add(v75)::
123914 :: CALL :: call :: Ljava/lang/String :: v82 = v80.getChainID()::JM,123923:JM,123918:CL,60024
123918 :: CALL :: call :: Z :: v84 = v9.equals(v82)::JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,123824:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123798:JM,123835:JM,123836
123923 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 434::CF,124338:CD,123930:CD,123944:CD,123949:CD,123968:CD,123993:CD,123998:CD,124337
123930 :: CALL :: call :: V :: v85.addGroup(v86)::CL,60033
123944 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v93 = isKnownChain(v90, v91)::JM,124337:JM,123949:CL,120710
123949 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 361::CD,123950:CD,123954:CD,123959:CD,123963:CD,124337
123950 :: CALL :: call :: Ljava/lang/String :: v95 = v93.getChainID()::JM,123959:CL,60024
123954 :: CALL :: call :: Z :: v97 = v95.equals(v9)::JM,123959:JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,123824:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123767:JM,123830:JM,123798:JM,123835:JM,123836
123959 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 371::CF,124337:CD,123963
123963 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v100 = isKnownChain(v9, v98)::JM,124337:CL,120710
123969 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v102 = new org.biojava.nbio.structure.ChainImpl::DD,123973
123968 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 401::CD,123969:JM,59970:JM,59989:JM,59975:JM,59982:CD,123979
123973 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v102::
123979 :: CALL :: call :: V :: v104.setChainID(v9)::CL,60013
123984 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v101::
123987 :: EXPR :: reference :: Ljava/util/List :: v106 = p0 $this .current_model::JM,123998
123990 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v107 = p0 $this .current_chain::JM,123998
123993 :: CALL :: call :: Z :: v109 = v106.contains(v107)::JM,123998
123999 :: EXPR :: reference :: Ljava/util/List :: v110 = p0 $this .current_model::
123998 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 434::CF,124338:CD,124005
124002 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v111 = p0 $this .current_chain::
124005 :: CALL :: call :: Z :: v113 = v110.add(v111)::
124017 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v117 = p0 $this .current_group::DD,124020
124021 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v119 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,124029:CL,134088
124020 :: PRED :: IF :: Z :: if (v117 != #(null)) goto 494::CD,124021:CD,124035:CD,124042:CF,124046
124029 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v119::
124035 :: CALL :: call :: V :: v120.setResidueNumber(v115)::CL,60537
124042 :: CALL :: call :: V :: v122.setPDBName(v19)::CL,60526:CL,60495
124047 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v125 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,124055:CL,134088
124046 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 539::CD,124047:CD,124061:CD,124068:JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,124265:JM,123816:JM,124072:JM,124264:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
124055 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v125::
124061 :: CALL :: call :: V :: v126.setResidueNumber(v115)::CL,60537
124068 :: CALL :: call :: V :: v128.setPDBName(v19)::CL,60526:CL,60495
124072 :: CALL :: call :: Ljava/lang/String :: v131 = p1 $atom .getLabel_alt_id()::JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,124265:JM,123816:JM,124072:JM,124264:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
124076 :: CALL :: call :: Ljava/lang/Character :: v134 = valueOf(#(32))::JM,124339
124080 :: CALL :: call :: I :: v136 = v131.length()::JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123798:JM,123835
124085 :: CALL :: call :: C :: v138 = v131.charAt(#(0))::JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123798:JM,123835
124084 :: PRED :: IF :: Z :: if (v136 <= #(0)) goto 593::CF,124339:CD,124085:CD,124090:CD,124094:CD,124098:CD,124103:JM,124259:JM,124264:JM,124269:JM,123918:JM,124080:JM,123792:JM,123923:JM,123762:JM,124274:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123798:JM,123835
124090 :: CALL :: call :: Ljava/lang/Character :: v140 = valueOf(v138)::JM,124339:JM,124274:JM,124103:JM,124264
124094 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(46))::JM,124103
124098 :: CALL :: call :: Z :: v145 = v140.equals(v143)::JM,124339:JM,124103
124103 :: PRED :: IF :: Z :: if (v145 == #(0)) goto 593::CF,124339:CD,124104
124104 :: CALL :: call :: Ljava/lang/Character :: v147 = valueOf(#(32))::JM,124339
124115 :: CALL :: call :: Z :: v153 = v115.equals(v151)::JM,124120:CL,36962
124120 :: PRED :: IF :: Z :: if (v153 != #(0)) goto 674::CD,124127:CD,124134:CD,124137:CD,124151:CD,124158:CD,124163:CD,124167:CD,124172:CD,124340
124127 :: CALL :: call :: V :: v187.addGroup(v188)::CL,60033
124134 :: CALL :: call :: V :: v190.trimToSize()::CL,60642
124137 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v193 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,124145:CL,134088
124145 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v193::
124151 :: CALL :: call :: V :: v194.setPDBName(v19)::CL,60526:CL,60495
124158 :: CALL :: call :: V :: v196.setResidueNumber(v115)::CL,60537
124163 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(32))::JM,124172
124167 :: CALL :: call :: Z :: v157 = v148.equals(v155)::JM,124172
124173 :: CALL :: call :: Ljava/lang/Character :: v159 = valueOf(#(46))::JM,124182
124172 :: PRED :: IF :: Z :: if (v157 != #(0)) goto 784::CF,124340:CD,124173:CD,124177:CD,124182
124177 :: CALL :: call :: Z :: v161 = v148.equals(v159)::JM,124182
124182 :: PRED :: IF :: Z :: if (v161 != #(0)) goto 784::CF,124340:CD,124185:CD,124190:CD,124195:CD,124203:CD,124208:CD,124213:CD,124218:CD,124226:CD,124235:CD,124239
124185 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v163 = new java.lang.StringBuilder::
124190 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v163.append(v148)::
124195 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v167.append(#( ))::
124203 :: CALL :: call :: Ljava/lang/StringBuilder :: v173 = v170.append(v171)::
124208 :: CALL :: call :: Ljava/lang/StringBuilder :: v175 = v173.append(#( ))::
124213 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v175.append(#(null))::
124218 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
124226 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v182 = p0 $this .getCorrectAltLocGroup(v148, v11, v33, v19, v51)::JM,124340:CL,134298
124235 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v184 = v182.getChain()::JM,124239:CL,55773
124239 :: PRED :: IF :: Z :: if (v184 != #(null)) goto 784::CF,124340:CD,124243
124243 :: CALL :: call :: V :: v182.setChain(v185)::CL,60997
124250 :: CALL :: call :: Z :: v201 = v199.isParseCAOnly()::JM,124254:CL,47633
124255 :: CALL :: call :: Ljava/lang/String :: v203 = p1 $atom .getLabel_atom_id()::JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,124265:JM,123816:JM,124072:JM,124264:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
124254 :: PRED :: IF :: Z :: if (v201 == #(0)) goto 821::CD,124255:CD,124259:CD,124264:CD,124287:CD,124293:CD,124298:CD,124318:CD,124323:JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,123742:JM,123746:JM,124265:JM,123816:JM,124072:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
124259 :: CALL :: call :: Z :: v206 = v203.equals(#(CA))::JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123798:JM,123835
124265 :: CALL :: call :: Ljava/lang/String :: v208 = p1 $atom .getType_symbol()::JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,124265:JM,123816:JM,124072:JM,124264:JM,124269:JM,123824:JM,124080:JM,124339:JM,123762:JM,124274:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
124264 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 819::CD,124265:CD,124269:CD,124274:JM,124103:JM,123788:JM,123918:JM,123792:JM,123923:JM,123797:JM,123798:JM,123738:JM,123807:JM,124255:JM,123742:JM,124259:JM,123746:JM,123816:JM,124072:JM,124264:JM,123824:JM,124080:JM,124339:JM,123762:JM,124085:JM,124084:JM,123959:JM,123767:JM,123830:JM,123835:JM,123836
124269 :: CALL :: call :: Z :: v211 = v208.equals(#(C))::JM,124259:JM,124103:JM,124264:JM,124269:JM,123918:JM,124080:JM,123792:JM,123923:JM,124339:JM,123762:JM,124274:JM,124085:JM,123797:JM,124084:JM,123959:JM,123767:JM,123830:JM,123798:JM,123835
124274 :: PRED :: IF :: Z :: if (v211 != #(0)) goto 821::CD,124287:CD,124293:CD,124298:CD,124318:CD,124323
124287 :: CALL :: call :: Ljava/lang/Object :: v218 = v212.put(v214, v216)::
124293 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v220 = p0 $this .convertAtom(p1 $atom )::CL,134547
124299 :: CALL :: call :: V :: v198.addAtom(v220)::CL,61306
124298 :: PRED :: IF :: Z :: if (v198 == #(null)) goto 866::CD,124299:CD,124307
124307 :: CALL :: call :: V :: v221.addAtom(v220)::CL,61306
124318 :: CALL :: call :: Z :: v229 = v225.hasAtom(v227)::JM,124323:CL,61496
124323 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 906::CD,124327
124327 :: CALL :: call :: V :: v230.addAtom(v220)::CL,61306
124337 :: EXPR :: assign :: null :: PHI v101 = v93, v100::DD,123968:DD,123984
124336 :: EXPR :: assign :: null :: PHI v79 = #(0), #(1)::DD,124338
124339 :: EXPR :: assign :: null :: PHI v148 = v134, v140, v147::JM,124172:JM,124182
124338 :: EXPR :: assign :: null :: PHI v114 = v79, #(1), #(1)::DD,124046
124340 :: EXPR :: assign :: null :: PHI v198 = #(null), #(null), #(null), v182, v182::DD,124298
124559 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,124575:CD,124579:CD,124584:CD,124588:CD,124593:CD,124673
124575 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v10 = v8.getPDBHeader()::JM,124579:CL,86109
124579 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513
124584 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $dbrev .getNum()::JM,124593:JM,124584:JM,124588
124588 :: CALL :: call :: Z :: v19 = v16.equals(#(1))::JM,124593:JM,124588
124593 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 126::CD,124603:CD,124628:CD,124654
124603 :: CALL :: call :: V :: v14.setDepDate(v35)::CL,61637
124628 :: CALL :: call :: V :: v14.setModDate(v48)::CL,62779
124654 :: CALL :: call :: V :: v14.setModDate(v24)::CL,62779
124673 :: CALL :: call :: V :: v58.setPDBHeader(v14)::CL,65704
124718 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,124726:CD,124730:CD,124742:CD,124746:CD,124755:CD,124762
124726 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,124730:CL,86109
124730 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 33::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513:CD,124738
124738 :: CALL :: call :: V :: v10.setPDBHeader(v8)::CL,65704
124742 :: CALL :: call :: Ljava/util/List :: v14 = v12.getRevisionRecords()::JM,124746:JM,124762:CL,134761
124747 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::DD,124762
124746 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 56::CF,124762:CF,124747:CD,124751
124751 :: CALL :: call :: V :: v12.setRevisionRecords(v15)::CL,134770
124755 :: CALL :: call :: Z :: v20 = v18.add(p1 $record )::
124762 :: EXPR :: assign :: null :: PHI v18 = v14, v15::
124792 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,124797:CD,124801:CD,124806:CD,124835:CD,124840:CD,124845:JM,124816:JM,124807:JM,124811
124797 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $remark .getId()::JM,124801:JM,124816:JM,124807:JM,124806:JM,124811:JM,124797
124801 :: CALL :: call :: Z :: v8 = v5.equals(#(2))::JM,124801:JM,124816:JM,124806:JM,124811
124807 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $remark .getText()::JM,124801:JM,124816:JM,124807:JM,124806:JM,124811:JM,124797
124806 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 111::CD,124807:CD,124811:CD,124816:JM,124801:JM,124806:JM,124797
124811 :: CALL :: call :: I :: v14 = v11.indexOf(#(ANGSTROM))::JM,124801:JM,124816:JM,124806:JM,124811
124816 :: PRED :: IF :: Z :: if (v14 <= #(5)) goto 111::CD,124861
124835 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
124840 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v11)::JM,124801:JM,124816:JM,124806:JM,124811
124845 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
124861 :: CALL :: call :: V :: v36.setResolution(v23)::CL,62682
124893 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,124909
124909 :: CALL :: call :: Z :: v10 = v6.setExperimentalTechnique(v8)::CL,61710
124934 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,124992:CD,124997:CD,125002:CD,125007:CD,125012:CD,125017:CD,125021:CD,125025:CD,125065:CD,125071:CD,125076:CD,125080:CD,125085:CD,125090:CD,125099
124992 :: CALL :: call :: V :: v28.setA(v30)::CL,61763
124997 :: CALL :: call :: V :: v28.setB(v32)::CL,61774
125002 :: CALL :: call :: V :: v28.setC(v34)::CL,61785
125007 :: CALL :: call :: V :: v28.setAlpha(v36)::CL,61796
125012 :: CALL :: call :: V :: v28.setBeta(v38)::CL,61816
125017 :: CALL :: call :: V :: v28.setGamma(v40)::CL,61836
125021 :: CALL :: call :: Z :: v43 = v28.isCellReasonable()::JM,125025:CL,61856
125025 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 134::CD,125028:CD,125049
125028 :: CALL :: call :: Ljava/lang/Double :: v55 = valueOf(#(10.0 d))::JM,125028
125049 :: CALL :: call :: V :: v49.setCrystalCell(v28)::CL,61891
125065 :: CALL :: call :: V :: v62.setCrystalCell(#(null))::CL,61891
125071 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
125076 :: CALL :: call :: Ljava/lang/String :: v70 = v57.getMessage()::
125080 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
125085 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#(), ignoring _cell ))::
125090 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
125099 :: EXPR :: assign :: Ljava/lang/Exception :: v57 = catch <exc>::
125133 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,125138:CD,125142:CD,125146
125138 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $symmetry .getSpace_group_name_H_M()::JM,125138
125142 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v7 = getSpaceGroup(v5)::JM,125146:CL,61902
125146 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 65::CD,125149:CD,125154:CD,125159:CD,125164:CD,125183:CD,125199:CD,125214
125149 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
125154 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v5)::
125159 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(' not recognised as a...))::
125164 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
125183 :: CALL :: call :: V :: v38.setNonStandardSg(#(1))::CL,61981
125199 :: CALL :: call :: V :: v13.setSpaceGroup(v7)::CL,61992
125214 :: CALL :: call :: V :: v19.setNonStandardSg(#(0))::CL,61981
125242 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,125250
125247 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structNcsOper::
125250 :: CALL :: call :: Z :: v6 = v4.add(p1 $sNcsOper )::
125265 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,125270:CD,125412
125270 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,125386
125386 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .parsedScaleMatrix = v4::
125412 :: CALL :: call :: V :: v66.setNonStandardCoordFrameConvention(#(0))::CL,133768
125445 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,125463
125460 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .strucRefs::
125463 :: CALL :: call :: Z :: v10 = v8.add(p1 $sref )::
125486 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,125491:CD,125499:CD,125507:CD,125515:CD,125523:CD,125531:CD,125536:CD,125588:CD,125592:CD,125596:CD,125600:CD,125604:CD,125605:CD,125609:CD,125618:CD,125619:CD,125623:CD,125632:CD,125636:CD,125641:CD,125645:CD,125650:CD,125658:CD,125662:CD,125670:CD,125674:CD,125678:CD,125682:CD,125686:CD,125690:CD,125691:CD,125695:CD,125704:CD,125705:CD,125709:CD,125718:CD,125722:CD,125727:CD,125731:CD,125736:CD,125744:CD,125748:CD,125756:CD,125763:CD,125767:CD,125772:CD,125779:CD,125790:CD,125799:JM,125544
125491 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v4 = new org.biojava.nbio.structure.DBRef::
125499 :: CALL :: call :: V :: v4.setIdCode(v7)::CL,62819
125507 :: CALL :: call :: V :: v4.setDbAccession(v10)::CL,62942
125515 :: CALL :: call :: V :: v4.setDbIdCode(v13)::CL,62953
125523 :: CALL :: call :: V :: v4.setChainId(v16)::CL,62830
125531 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: v21 = p0 $this .getStructRef(v19)::JM,125536:CL,134790
125536 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 96::CD,125539:CD,125544:CD,125548:CD,125553:CD,125558:CD,125563:CD,125576:CD,125584
125539 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
125544 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $sref .getRef_id()::JM,125605:JM,125604:JM,125705:JM,125609:JM,125544:JM,125704:JM,125674:JM,125709:JM,125619:JM,125682:JM,125618:JM,125588:JM,125623:JM,125691:JM,125690:JM,125596:JM,125695
125548 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v30.append(v34)::JM,125618:JM,125604:JM,125623:JM,125609:JM,125704:JM,125690:JM,125709:JM,125695
125553 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( for StructRefSeq ))::JM,125618:JM,125604:JM,125704:JM,125690
125558 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(p1 $sref )::
125563 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
125576 :: CALL :: call :: V :: v4.setDatabase(v24)::CL,62931
125584 :: CALL :: call :: V :: v4.setDbIdCode(v27)::CL,62953
125588 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $sref .getPdbx_auth_seq_align_beg()::JM,125605:JM,125604:JM,125705:JM,125609:JM,125544:JM,125704:JM,125674:JM,125709:JM,125619:JM,125682:JM,125618:JM,125588:JM,125623:JM,125691:JM,125690:JM,125596:JM,125695
125592 :: CALL :: call :: I :: v48 = parseInt(v46)::JM,125618:JM,125604:JM,125623:JM,125609:JM,125704:JM,125690:JM,125709:JM,125695
125596 :: CALL :: call :: Ljava/lang/String :: v50 = p1 $sref .getPdbx_auth_seq_align_end()::JM,125605:JM,125604:JM,125705:JM,125609:JM,125544:JM,125704:JM,125674:JM,125709:JM,125619:JM,125682:JM,125618:JM,125588:JM,125623:JM,125691:JM,125690:JM,125596:JM,125695
125600 :: CALL :: call :: I :: v52 = parseInt(v50)::JM,125618:JM,125604:JM,125623:JM,125609:JM,125704:JM,125690:JM,125709:JM,125695
125605 :: CALL :: call :: Ljava/lang/String :: v55 = p1 $sref .getPdbx_seq_align_beg_ins_code()::JM,125605:JM,125604:JM,125705:JM,125609:JM,125544:JM,125704:JM,125674:JM,125709:JM,125619:JM,125682:JM,125618:JM,125588:JM,125623:JM,125691:JM,125690:JM,125596:JM,125695
125604 :: NORM :: declaration :: Ljava/lang/Character :: v53 = new java.lang.Character::JM,125618:JM,125604:JM,125704:JM,125690:JM,125636:JM,125605:JM,125705:JM,125609:JM,125544:JM,125674:JM,125709:JM,125619:JM,125682:JM,125588:JM,125623:JM,125691:JM,125596:JM,125695
125609 :: CALL :: call :: C :: v58 = v55.charAt(#(0))::JM,125618:JM,125604:JM,125623:JM,125609:JM,125704:JM,125690:JM,125709:JM,125695
125619 :: CALL :: call :: Ljava/lang/String :: v62 = p1 $sref .getPdbx_seq_align_end_ins_code()::JM,125605:JM,125604:JM,125705:JM,125609:JM,125544:JM,125704:JM,125674:JM,125709:JM,125619:JM,125682:JM,125618:JM,125588:JM,125623:JM,125691:JM,125690:JM,125596:JM,125695
125618 :: NORM :: declaration :: Ljava/lang/Character :: v60 = new java.lang.Character::JM,125618:JM,125604:JM,125704:JM,125690:JM,125645:JM,125605:JM,125705:JM,125609:JM,125544:JM,125674:JM,125709:JM,125619:JM,125682:JM,125588:JM,125623:JM,125691:JM,125596:JM,125695
125623 :: CALL :: call :: C :: v64 = v62.charAt(#(0))::JM,125618:JM,125604:JM,125623:JM,125609:JM,125704:JM,125690:JM,125709:JM,125695
125632 :: CALL :: call :: C :: v67 = v53.charValue()::JM,125636
125637 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(32))::
125636 :: PRED :: IF :: Z :: if (v67 != #(63)) goto 181::CD,125637
125641 :: CALL :: call :: C :: v74 = v60.charValue()::JM,125645
125645 :: PRED :: IF :: Z :: if (v74 != #(63)) goto 199::CD,125646
125646 :: CALL :: call :: Ljava/lang/Character :: v76 = valueOf(#(32))::
125650 :: CALL :: call :: V :: v4.setSeqBegin(v48)::CL,62887
125658 :: CALL :: call :: V :: v4.setInsertBegin(v80)::CL,62898
125662 :: CALL :: call :: V :: v4.setSeqEnd(v52)::CL,62909
125670 :: CALL :: call :: V :: v4.setInsertEnd(v84)::CL,62920
125674 :: CALL :: call :: Ljava/lang/String :: v87 = p1 $sref .getDb_align_beg()::JM,125605:JM,125604:JM,125705:JM,125609:JM,125544:JM,125704:JM,125674:JM,125709:JM,125619:JM,125682:JM,125618:JM,125588:JM,125623:JM,125691:JM,125690:JM,125596:JM,125695
125678 :: CALL :: call :: I :: v89 = parseInt(v87)::JM,125618:JM,125604:JM,125623:JM,125609:JM,125704:JM,125690:JM,125709:JM,125695
125682 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $sref .getDb_align_end()::JM,125605:JM,125604:JM,125705:JM,125609:JM,125544:JM,125704:JM,125674:JM,125709:JM,125619:JM,125682:JM,125618:JM,125588:JM,125623:JM,125691:JM,125690:JM,125596:JM,125695
125686 :: CALL :: call :: I :: v93 = parseInt(v91)::JM,125618:JM,125604:JM,125623:JM,125609:JM,125704:JM,125690:JM,125709:JM,125695
125691 :: CALL :: call :: Ljava/lang/String :: v96 = p1 $sref .getPdbx_db_align_beg_ins_code()::JM,125605:JM,125604:JM,125705:JM,125609:JM,125544:JM,125704:JM,125674:JM,125709:JM,125619:JM,125682:JM,125618:JM,125588:JM,125623:JM,125691:JM,125690:JM,125596:JM,125695
125690 :: NORM :: declaration :: Ljava/lang/Character :: v94 = new java.lang.Character::JM,125618:JM,125604:JM,125704:JM,125690:JM,125722:JM,125605:JM,125705:JM,125609:JM,125544:JM,125674:JM,125709:JM,125619:JM,125682:JM,125588:JM,125623:JM,125691:JM,125596:JM,125695
125695 :: CALL :: call :: C :: v98 = v96.charAt(#(0))::JM,125618:JM,125604:JM,125623:JM,125609:JM,125704:JM,125690:JM,125709:JM,125695
125705 :: CALL :: call :: Ljava/lang/String :: v102 = p1 $sref .getPdbx_db_align_end_ins_code()::JM,125605:JM,125604:JM,125705:JM,125609:JM,125544:JM,125704:JM,125674:JM,125709:JM,125619:JM,125682:JM,125618:JM,125588:JM,125623:JM,125691:JM,125690:JM,125596:JM,125695
125704 :: NORM :: declaration :: Ljava/lang/Character :: v100 = new java.lang.Character::JM,125618:JM,125604:JM,125704:JM,125690:JM,125731:JM,125605:JM,125705:JM,125609:JM,125544:JM,125674:JM,125709:JM,125619:JM,125682:JM,125588:JM,125623:JM,125691:JM,125596:JM,125695
125709 :: CALL :: call :: C :: v104 = v102.charAt(#(0))::JM,125618:JM,125604:JM,125623:JM,125609:JM,125704:JM,125690:JM,125709:JM,125695
125718 :: CALL :: call :: C :: v107 = v94.charValue()::JM,125722
125723 :: CALL :: call :: Ljava/lang/Character :: v109 = valueOf(#(32))::
125722 :: PRED :: IF :: Z :: if (v107 != #(63)) goto 297::CD,125723
125727 :: CALL :: call :: C :: v112 = v100.charValue()::JM,125731
125731 :: PRED :: IF :: Z :: if (v112 != #(63)) goto 315::CD,125732
125732 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(32))::
125736 :: CALL :: call :: V :: v4.setDbSeqBegin(v89)::CL,62964
125744 :: CALL :: call :: V :: v4.setIdbnsBegin(v118)::CL,62975
125748 :: CALL :: call :: V :: v4.setDbSeqEnd(v93)::CL,62986
125756 :: CALL :: call :: V :: v4.setIdbnsEnd(v122)::CL,62997
125763 :: CALL :: call :: Ljava/util/List :: v126 = v124.getDBRefs()::JM,125767:JM,125799:CL,86139
125767 :: PRED :: IF :: Z :: if (v126 != #(null)) goto 370::CF,125799:CF,125768
125768 :: NORM :: declaration :: Ljava/util/ArrayList :: v127 = new java.util.ArrayList::DD,125799
125772 :: CALL :: call :: Z :: v131 = v129.add(v4)::
125779 :: CALL :: call :: Ljava/lang/String :: v134 = v4.toPDB()::CL,134836
125790 :: CALL :: call :: V :: v136.setDBRefs(v129)::CL,65741
125799 :: EXPR :: assign :: null :: PHI v129 = v126, v127::
125888 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,125896
125893 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .sequenceDifs::
125896 :: CALL :: call :: Z :: v6 = v4.add(p1 $sref )::
125917 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,125925
125922 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structSiteGens::
125925 :: CALL :: call :: Z :: v6 = v4.add(p1 $siteGen )::
125940 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,125948:CD,125952:JM,125989:JM,125980
125948 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,125952:CL,54222
125952 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,125957:CD,125961:CD,125966:CD,125990:CD,125994:CD,125995:CD,126004:CD,126012:CD,126016:CD,126025:CD,126030:CD,126031:CD,126032:CD,126033
125957 :: CALL :: call :: Ljava/util/List :: v10 = v8.getSites()::JM,125961:JM,126030:CL,86197
125961 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 36::CF,126030:CF,125962
125962 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,126030
125966 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,125975:JM,125994
125971 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,125975:JM,125994
125975 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,126031
125976 :: CALL :: call :: Ljava/lang/String :: v23 = v21.getSiteID()::JM,125989:CL,77084
125980 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $structSite .getId()::JM,125989:JM,125980
125984 :: CALL :: call :: Z :: v27 = v23.equals(v25)::JM,125989
125989 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 78::CF,126031
125990 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,125975:JM,125994
125995 :: PRED :: IF :: Z :: if (v28 != #(null)) goto 106::CF,126032:CF,125996:JM,133222:CD,126033
125994 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 48::CD,125971:CD,125975:CD,125976:CD,125980:CD,125984:CD,125989:CD,125990:CD,126031:JM,125994:CF,125995
125996 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v29 = new org.biojava.nbio.structure.Site::DD,126032
126004 :: CALL :: call :: V :: v32.setSiteID(v35)::CL,133245
126012 :: CALL :: call :: V :: v32.setDescription(v38)::CL,77149
126017 :: CALL :: call :: Z :: v41 = v14.add(v32)::
126016 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 134::CD,126017
126025 :: CALL :: call :: V :: v42.setSites(v14)::CL,81024
126031 :: EXPR :: assign :: null :: PHI v28 = #(null), v28, v21::JM,125975:JM,125994:DD,125995:DD,126031:DD,126032
126030 :: EXPR :: assign :: null :: PHI v14 = v10, v12::JM,125975:JM,125994
126033 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::DD,126016
126032 :: EXPR :: assign :: null :: PHI v32 = v28, v29::CF,126033
126071 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,126078:CD,126083:CD,126088:CD,126096:CD,126100:CD,126107:CD,126112:CD,126116:CD,126121:CD,126129:CD,126134:CD,126298:JM,126208:JM,126200:JM,126204:JM,126142
126078 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
126083 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $epolseq )::
126088 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
126096 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $epolseq .getEntity_id()::JM,126096:JM,126208:JM,126200:JM,126204:JM,126142
126100 :: CALL :: call :: I :: v17 = parseInt(v15)::JM,126208:JM,126204
126107 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
126112 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
126116 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
126121 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
126129 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v33 = p0 $this .getEntity(v31)::JM,126134:CL,132149
126134 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 114::CD,126137:CD,126142:CD,126146:CD,126151:CD,126156:CD,126169:CD,126178:CD,126182:CD,126277:CD,126281:CD,126289:CD,126293
126137 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v95 = new java.lang.StringBuilder::
126142 :: CALL :: call :: Ljava/lang/String :: v99 = p1 $epolseq .getEntity_id()::JM,126096:JM,126208:JM,126200:JM,126204:JM,126142
126146 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v95.append(v99)::JM,126208:JM,126204
126151 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(. Can not match seque...))::JM,126208
126156 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
126169 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v38 = p0 $this .getEntityChain(v36)::CL,120755
126178 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v42 = getGroupFromChemCompDictionary(v40)::JM,126192:JM,126182:CL,75113
126183 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v42.getChemComp()::CL,75346
126182 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 176::CD,126183:CD,126187:CD,126191:CD,126200:CD,126204:CD,126208:JM,126096:JM,126142
126187 :: CALL :: call :: Z :: v46 = v44.isEmpty()::JM,126191:CL,75406
126191 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 176::CD,126192:CD,126193:CD,126200:CD,126204:CD,126208:JM,126096:JM,126142
126193 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 297::CD,126195
126192 :: EXPR :: assign :: Z :: v81=v42 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,126193
126195 :: CALL :: call :: V :: v82.setRecordType(#(SEQRES))::CL,61571
126200 :: CALL :: call :: Ljava/lang/String :: v49 = p1 $epolseq .getMon_id()::JM,126096:JM,126208:JM,126200:JM,126204:JM,126142
126204 :: CALL :: call :: I :: v51 = v49.length()::JM,126208:JM,126204
126208 :: PRED :: IF :: Z :: if (v51 != #(3)) goto 237::CD,126213:CD,126217:CD,126243:CD,126247
126213 :: CALL :: call :: Ljava/lang/Character :: v56 = get1LetterCodeAmino(v54)::JM,126217:CL,75062
126217 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 237::JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,126222:CD,126230:CD,126234:CD,126243:CD,126247
126222 :: CALL :: call :: V :: v72.setRecordType(#(SEQRES))::CL,61571
126230 :: CALL :: call :: Ljava/lang/Character :: v79 = get1LetterCodeAmino(v77)::CL,75062
126234 :: CALL :: call :: V :: v72.setAminoType(v79)::CL,75547
126243 :: CALL :: call :: Z :: v60 = isNucleotide(v58)::JM,126247:CL,75077
126247 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 262::JM,75456:JM,75463:JM,75479:JM,75481:JM,75483
126277 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v88 = fromString(v86)::CL,99581
126281 :: CALL :: call :: V :: v84.setResidueNumber(v88)::CL,60537
126289 :: CALL :: call :: V :: v84.setPDBName(v91)::CL,60526:CL,60495
126293 :: CALL :: call :: V :: v38.addGroup(v84)::CL,60033
126298 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
126376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,126384
126381 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcGens::
126384 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcGen )::
126393 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,126401
126398 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcNats::
126401 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcNat )::
126422 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,126430
126427 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcSyns::
126430 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcSyn )::
126445 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,126453
126450 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structAsyms::
126453 :: CALL :: call :: Z :: v6 = v4.add(p1 $sasym )::
126468 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,126480:CD,126485:JM,126487:JM,126491
126480 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,126485
126485 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,126487:CD,126491
126487 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,126487:JM,126491
126491 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,126503:CD,126521
126503 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
126521 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
126541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,126553:CD,126558:JM,126560:JM,126564
126553 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,126558
126558 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,126560:CD,126564
126560 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,126560:JM,126564
126564 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,126576:CD,126594
126576 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
126594 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
126638 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,126646:CD,126650:CD,126659:CD,126667
126646 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,126650:CL,86109
126650 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,41488:JM,41520:JM,41480:JM,41496:JM,41513
126659 :: CALL :: call :: V :: v10.setDescription(v12)::CL,86177
126667 :: CALL :: call :: V :: v10.setClassification(v15)::CL,61626
126682 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,126694:CD,126698:CD,126699:CD,126738:CD,126745:CD,126750:CD,126754:CD,126759:CD,126764:CD,126768:CD,126773:CD,126781:CD,126785:CD,126786:CD,126817:CD,126821:CD,126854
126694 :: CALL :: call :: F :: v8 = v6.getResolution()::JM,126698:CL,62673
126699 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 58::CD,126707:CD,126711:CD,126719
126698 :: EXPR :: assign :: Z :: v10 = v8 < #(99.0 f)::DD,126699
126707 :: CALL :: call :: F :: v20 = v6.getResolution()::JM,126711:CL,62673
126711 :: CALL :: call :: Ljava/lang/Float :: v22 = valueOf(v20)::JM,126711
126719 :: CALL :: call :: Ljava/lang/String :: v24 = format(#(%4.2f), v18)::
126738 :: CALL :: call :: V :: v6.setResolution(v29)::CL,62682
126745 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
126750 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $r .getLs_d_res_high()::JM,126817:JM,126821
126754 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::JM,126821
126759 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v39.append(#( ))::
126764 :: CALL :: call :: Ljava/lang/String :: v44 = v31.getMessage()::
126768 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(v44)::
126773 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
126781 :: CALL :: call :: F :: v52 = v6.getRfree()::JM,126785:CL,134858
126785 :: EXPR :: assign :: Z :: v54 = v52 < #(1.0 f)::DD,126786
126786 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 157::CD,126794:CD,126798:CD,126806:JM,126817:JM,126821
126794 :: CALL :: call :: F :: v61 = v6.getRfree()::JM,126798:CL,134858
126798 :: CALL :: call :: Ljava/lang/Float :: v63 = valueOf(v61)::JM,126798
126806 :: CALL :: call :: Ljava/lang/String :: v65 = format(#(%4.2f), v59)::
126817 :: CALL :: call :: Ljava/lang/String :: v68 = p1 $r .getLs_R_factor_R_free()::JM,126817:JM,126821
126821 :: PRED :: IF :: Z :: if (v68 != #(null)) goto 179::CD,126837
126837 :: CALL :: call :: V :: v6.setRfree(v73)::CL,66855
126854 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
126892 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,126897:CD,126901:CD,126922:CD,126932:JM,126926
126897 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $c .getId()::JM,126897:JM,126901:JM,126922:JM,126926
126901 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 33::CD,126904:CD,126909:CD,126914:JM,126897:JM,126901:JM,126922:JM,126926
126904 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
126909 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p1 $c )::
126914 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
126922 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $c .getId()::JM,126897:JM,126901:JM,126922:JM,126926
126926 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .latestChemCompId = v17::
126932 :: CALL :: call :: V :: v18.addChemComp(p1 $c )::CL,134867
126983 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,126988:CD,126992:CD,126996:CD,127000:CD,127004:CD,127027:CD,127028:CD,127032:CD,127037:CD,127049:CD,127053:CD,127096:CD,127097
126988 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $aa .getName()::JM,127000:JM,126988:JM,127004
126992 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v6 = new java.lang.StringBuffer::
126996 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
127000 :: CALL :: call :: [C :: v12 = v5.toCharArray()::JM,127000:JM,127004
127004 :: EXPR :: assign :: I :: v13 = v12.length::DD,127027
127006 :: EXPR :: reference :: C :: v14 = v12[v25]::DD,127010:DD,127012
127010 :: PRED :: IF :: Z :: if (v14 != #(32)) goto 62::CD,127012:CD,127095
127012 :: PRED :: IF :: Z :: if (v14 != #(44)) goto 73::CD,127014:CD,127095
127015 :: CALL :: call :: Ljava/lang/StringBuffer :: v19 = v8.append(v14)::
127014 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 90::CD,127015:CD,127021:CD,127095
127021 :: CALL :: call :: Ljava/lang/StringBuffer :: v21 = v6.append(v14)::
127027 :: PRED :: IF :: Z :: if (v25 < v13) goto 45::CF,127028:CD,127010:CD,127026:CD,127095:CD,127096:CD,127097
127026 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v25 + #(1)::DD,127097:CF,127096
127028 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v26 = new java.lang.StringBuffer::
127032 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v26.append(v8)::
127037 :: CALL :: call :: Ljava/lang/StringBuffer :: v31 = v26.append(v6)::
127049 :: CALL :: call :: Ljava/lang/String :: v36 = v34.getAuthors()::JM,127053:CL,61670
127053 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 164::CF,127063:CD,127054:CD,127058:CD,127064:CD,127072:CD,127077:CD,127081:CD,127086:CD,127090
127054 :: CALL :: call :: Ljava/lang/String :: v53 = v26.toString()::
127058 :: CALL :: call :: V :: v34.setAuthors(v53)::CL,61679
127063 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
127064 :: CALL :: call :: Ljava/lang/String :: v40 = valueOf(v36)::
127072 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(#(,))::
127077 :: CALL :: call :: Ljava/lang/String :: v46 = v26.toString()::
127081 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v46)::
127086 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
127090 :: CALL :: call :: V :: v34.setAuthors(v50)::CL,61679
127095 :: EXPR :: assign :: null :: PHI v22 = v24, #(1), v24, v24::DD,127096:CF,127026
127097 :: EXPR :: assign :: null :: PHI v25 = #(0), v23::DD,127026:DD,127027
127096 :: EXPR :: assign :: null :: PHI v24 = #(0), v22::CF,127097:DD,127014:DD,127095
127161 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,127172
127172 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,104605
127199 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStructOperList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,127207
127204 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structOpers::
127207 :: CALL :: call :: Z :: v6 = v4.add(p1 $structOper )::
127228 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,127236
127233 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblies::
127236 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
127245 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,127253
127250 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblyGens::
127253 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
127274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,127285
127285 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,104605
127310 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,127321
127321 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,104605
127370 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,127378
127375 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structConn::
127378 :: CALL :: call :: Z :: v6 = v4.add(p1 $structConn )::
127453 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache,org.biojava.nbio.structure.quaternary.io.BioUnitDataProvider)::JM,110574
127452 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache,org.biojava.nbio.structure.quaternary.io.BioUnitDataProvider)::CE,127453:CD,127459:CD,127463:CD,127468:CD,127514:CD,127519:CD,127524:CD,127529:CD,127534:CD,127572:CD,127577:CD,127582:CD,127587:CD,127592:JM,127494
127459 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $pdbId .toLowerCase()::JM,127463:JM,127494
127463 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p4 $provider .getAsymUnit(v7)::JM,127463:JM,127494
127468 :: PRED :: IF :: Z :: if (p2 $biolAssemblyNr  != #(0)) goto 52::CD,127471:CD,127476:CD,127481:CD,127486:CD,127494:JM,122709:JM,122702:CD,127605:CD,127611
127471 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
127476 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v65.append(v7)::JM,127463:JM,127494
127481 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(#(, returning asymmetri...))::
127486 :: CALL :: call :: Ljava/lang/String :: v74 = v72.toString()::
127494 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v9::DD,127453
127514 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
127519 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(p2 $biolAssemblyNr )::
127524 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(#( of ))::
127529 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v58.append(v7)::JM,127463:JM,127494
127534 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
127572 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
127577 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v38.append(p2 $biolAssemblyNr )::
127582 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#( of ))::
127587 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v45.append(v7)::JM,127463:JM,127494
127592 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::
127605 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v36 = v33.rebuildQuaternaryStructure(v9, v29)::JM,127611:CL,134960
127611 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v36::DD,127453
127795 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.toString()::CE,127796:CD,127799:CD,127807:CD,127812:CD,127820:CD,127824:CD,127829:CD,127837:CD,127878:CD,127882:CD,127883:CD,127885:CD,127890:CD,127894
127796 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.toString()::JM,115068
127799 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,127894
127804 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::
127807 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
127812 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
127817 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .groups::
127820 :: CALL :: call :: I :: v14 = v12.size()::
127824 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
127829 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(#( ))::
127834 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::JM,127882
127837 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,127882
127842 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,127882
127860 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toPDB()::CL,135177
127868 :: CALL :: call :: Ljava/lang/String :: v39 = format(#(%s %s), v30)::
127873 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v3.append(v39)::
127878 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,127882
127883 :: EXPR :: reference :: Ljava/lang/String :: v42 = org.biojava.nbio.structure.Site.lineEnd::
127882 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 55::CD,127842:CD,127860:CD,127868:CD,127873:CD,127878:JM,127882
127885 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v3.append(v42)::
127890 :: CALL :: call :: Ljava/lang/String :: v46 = v3.toString()::JM,127894
127894 :: NORM :: compound :: Ljava/lang/String :: return v46::DD,127796
128451 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::CE,128452:CD,128457:CD,128462:CD,128468:CD,128473:CD,128479:CD,128484:CD,128488:CD,128504:CD,128508:CD,128509:CD,128510:CD,128511:CD,128512:CD,128513:CD,128514:CD,128515:CD,128516:CD,128633
128452 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::JM,116269
128457 :: CALL :: call :: Ljava/util/List :: v5 = p1 $c .getAtomGroups(v3)::JM,128512:JM,128544:JM,128536:JM,128605:JM,128510:CL,91684
128462 :: CALL :: call :: I :: v7 = v5.size()::JM,128512:JM,128544:JM,128536:JM,128605:JM,128510
128468 :: CALL :: call :: Ljava/util/List :: v10 = p1 $c .getAtomGroups(v8)::JM,128537:JM,128520:JM,128536:JM,128616:JM,128510:CL,91684
128473 :: CALL :: call :: I :: v12 = v10.size()::JM,128537:JM,128520:JM,128536:JM,128616:JM,128510
128479 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c .getAtomGroups(v13)::JM,128509:JM,128508:CL,91684
128484 :: CALL :: call :: I :: v17 = v15.size()::JM,128509:JM,128508
128488 :: CALL :: call :: Ljava/util/Iterator :: v20 = v15.iterator()::JM,128509:JM,128508
128493 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,128508
128498 :: CALL :: call :: Z :: v27 = v25.isWater()::JM,128502:CL,87078
128503 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,128633
128502 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 89::CF,128633:CD,128503
128504 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,128508
128509 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v17 - v30::DD,128511:DD,128528:DD,128537:DD,128544:CF,128510
128508 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 64::CD,128493:CD,128498:CD,128502:CD,128504:CD,128633:JM,128508:CF,128509
128511 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v32 + v31::DD,128513:DD,128521:DD,128529:DD,128606:DD,128617:CF,128512
128510 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v7 + v12::DD,128511
128513 :: EXPR :: assign :: D :: v35 = CONVERT I to D v33::CF,128514
128512 :: EXPR :: assign :: D :: v34 = CONVERT I to D v7::DD,128514:CF,128513
128515 :: EXPR :: assign :: Z :: v38 = v36 < #(0.95 d)::DD,128516
128514 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 / v35::DD,128515
128517 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v88 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,128519
128516 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 130::CD,128517:CD,128519:CD,128520:CD,128521:CD,128522:CD,128523:CD,128524
128519 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v88::DD,128452
128521 :: EXPR :: assign :: D :: v40 = CONVERT I to D v33::CF,128522
128520 :: EXPR :: assign :: D :: v39 = CONVERT I to D v12::DD,128522:CF,128521
128523 :: EXPR :: assign :: Z :: v42 = v41 < #(0.95 d)::DD,128524
128522 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v39 / v40::DD,128523
128525 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v87 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,128527
128524 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CD,128525:CD,128527:CD,128528:CD,128529:CD,128530:CD,128531:CD,128532
128527 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v87::DD,128452
128529 :: EXPR :: assign :: D :: v44 = CONVERT I to D v33::CF,128530
128528 :: EXPR :: assign :: D :: v43 = CONVERT I to D v31::DD,128530:CF,128529
128531 :: EXPR :: assign :: Z :: v46 = v45 < #(0.95 d)::DD,128532
128530 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v43 / v44::DD,128531
128533 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v86 = org.biojava.nbio.structure.GroupType.HETATM::CF,128535
128532 :: PRED :: IF :: Z :: if (v46 <= #(0)) goto 166::CD,128533:CD,128535:CD,128536:CD,128561:CD,128573:CD,128581:CD,128589:CD,128597:CD,128605:CD,128606:CD,128607:CD,128608:CD,128616:CD,128617:CD,128618:CD,128619:CD,128632:CD,128634
128535 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v86::DD,128452
128537 :: PRED :: IF :: Z :: if (v12 <= v31) goto 183::CD,128538:CD,128541:CD,128634
128536 :: PRED :: IF :: Z :: if (v12 <= v7) goto 194::CD,128537:CD,128544
128538 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v50 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,128634
128541 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v49 = org.biojava.nbio.structure.GroupType.HETATM::DD,128634
128545 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v48 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,128634
128544 :: PRED :: IF :: Z :: if (v7 <= v31) goto 205::CD,128545:CD,128548:CD,128634
128548 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v47 = org.biojava.nbio.structure.GroupType.HETATM::DD,128634
128561 :: CALL :: call :: Ljava/lang/Double :: v59 = valueOf(#(0.95 d))::JM,128561
128573 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v7)::JM,128605
128581 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v12)::JM,128616
128589 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v31)::
128597 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v30)::
128605 :: EXPR :: assign :: D :: v74 = CONVERT I to D v7::DD,128607:CF,128606
128607 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v74 / v75::JM,128608
128606 :: EXPR :: assign :: D :: v75 = CONVERT I to D v33::CF,128607
128608 :: CALL :: call :: Ljava/lang/Double :: v78 = valueOf(v76)::JM,128608
128617 :: EXPR :: assign :: D :: v81 = CONVERT I to D v33::CF,128618
128616 :: EXPR :: assign :: D :: v80 = CONVERT I to D v12::DD,128618:CF,128617
128619 :: CALL :: call :: Ljava/lang/Double :: v84 = valueOf(v82)::JM,128619
128618 :: EXPR :: assign :: Ljava/lang/Object :: v82 = v80 / v81::JM,128619
128633 :: EXPR :: assign :: null :: PHI v30 = #(0), v30, v29::JM,128508:DD,128503:DD,128509:DD,128633
128632 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v51::DD,128452
128634 :: EXPR :: assign :: null :: PHI v51 = v50, v49, v48, v47::DD,128632
128720 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFile()::CD,128723:CD,128725:CD,128727:CD,128730:CD,128733:CD,128741:CD,128746:CD,128751:CD,128765
128723 :: CALL :: call :: V :: initPath()::CL,135430
128725 :: CALL :: call :: V :: initServerName()::CL,135453
128727 :: CALL :: call :: Ljava/lang/String :: v5 = getLocalFileName()::CL,135468
128730 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
128733 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
128741 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(/))::
128746 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(pub/pdb/data/monomers...))::
128751 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
128765 :: CALL :: call :: V :: downloadFileFromRemote(v19, v21)::CL,135526
128811 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::
128810 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::CF,128811:CD,128816:CD,128821
128816 :: CALL :: call :: Z :: v7 = p2 $file .endsWith(#(.cif.gz))::JM,128816:JM,128821
128821 :: NORM :: compound :: Z :: return v7::CF,128811
128824 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.writeID(java.lang.String,java.lang.String)::CD,128830:CD,128834:CD,128853:CD,128857:CD,128860:CD,128866
128830 :: CALL :: call :: Ljava/lang/String :: v6 = getLocalFileName(p2 $currentID )::CL,104445
128834 :: NORM :: declaration :: Ljava/io/PrintWriter :: v8 = new java.io.PrintWriter::DD,128860
128853 :: CALL :: call :: V :: v8.print(v15)::
128857 :: CALL :: call :: V :: v8.flush()::
128861 :: CALL :: call :: V :: v8.close()::
128860 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 108::CD,128861
128866 :: CALL :: call :: V :: v8.close()::
129163 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,129167
129167 :: EXPR :: modify :: Ljava/util/List :: p0 $this .descriptors = v4::
129170 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,129174
129174 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
129177 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,129181
129181 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v8::
129192 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setOne_letter_code(java.lang.String)::CD,129200:JM,129197
129197 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .one_letter_code = p1 $one_letter_code ::
129200 :: CALL :: call :: V :: p0 $this .setStandardFlag()::CL,135863
129207 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setThree_letter_code(java.lang.String)::JM,129212
129212 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .three_letter_code = p1 $three_letter_code ::
129218 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setPolymerType(org.biojava.nbio.structure.io.mmcif.chem.PolymerType)::JM,129223
129223 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p1 $polymerType ::
129229 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setResidueType(org.biojava.nbio.structure.io.mmcif.chem.ResidueType)::JM,129234
129234 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: p0 $this .residueType = p1 $residueType ::
129341 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.setCacheLocation(java.lang.String)::CD,129346:CD,129348:CD,129353:CD,129378
129346 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,129378:JM,129353
129348 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,129378:JM,129353
129353 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,129378:CF,129354:CD,129355:CD,129363:CD,129365:CD,129370
129355 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
129354 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,129378
129363 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,129378
129365 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::JM,129378
129370 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::JM,129378
129374 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheLocation = v17::
129378 :: EXPR :: assign :: null :: PHI v17 = p1 $cacheLocation , v16::DD,129374
129387 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::
129386 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::CE,129387:CD,129399:CD,129404
129399 :: CALL :: call :: Ljava/lang/String :: v9 = format(p1 $fileNameTemplate , v5)::JM,129404
129404 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,129387
129443 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::
129442 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::CE,129443:CD,129446:CD,129450:CD,129455:CD,129456:CD,129460:CD,129466
129446 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $f .getName()::JM,129456:JM,129460:JM,129450:JM,129466:JM,129455
129450 :: CALL :: call :: I :: v8 = v4.lastIndexOf(#(.))::JM,129456:JM,129460:JM,129450:JM,129466:JM,129455
129455 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 + #(1)::JM,129460:JM,129450:JM,129466:JM,129455:JM,129456
129456 :: CALL :: call :: I :: v12 = v4.length()::JM,129456:JM,129460:JM,129450:JM,129466:JM,129455
129460 :: CALL :: call :: Ljava/lang/String :: v14 = v4.substring(v10, v12)::JM,129456:JM,129460:JM,129450:JM,129466:JM,129455
129466 :: NORM :: compound :: Ljava/lang/String :: return v14::CF,129443
129480 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.copy(java.io.File,java.io.File)::
129596 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setFormat(java.lang.String)::JM,129601
129601 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .format = p1 $format ::
129607 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setDomainName(java.lang.String)::JM,129612
129612 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .domainName = p1 $domainName ::
129618 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setVersion(java.lang.String)::JM,129623
129623 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = p1 $version ::
129629 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setDate(java.util.Date)::JM,129634
129634 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .date = p1 $date ::
129640 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setCATH(java.lang.String)::CD,129645:CD,129654:CD,129658:CD,129662:CD,129670:CD,129674:CD,129678:CD,129686:CD,129690:CD,129694:CD,129702:CD,129710
129645 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $cathCode .split(#([.]))::
129650 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(0)]::
129654 :: CALL :: call :: I :: v10 = parseInt(v8)::
129658 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
129662 :: CALL :: call :: V :: p0 $this .setClassId(v12)::CL,135877
129666 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v6[#(1)]::
129670 :: CALL :: call :: I :: v17 = parseInt(v15)::
129674 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
129678 :: CALL :: call :: V :: p0 $this .setArchitectureId(v19)::CL,135888
129682 :: EXPR :: reference :: Ljava/lang/Object :: v22 = v6[#(2)]::
129686 :: CALL :: call :: I :: v24 = parseInt(v22)::
129690 :: CALL :: call :: Ljava/lang/Integer :: v26 = valueOf(v24)::
129694 :: CALL :: call :: V :: p0 $this .setTopologyId(v26)::CL,135899
129698 :: EXPR :: reference :: Ljava/lang/Object :: v29 = v6[#(3)]::
129702 :: CALL :: call :: I :: v31 = parseInt(v29)::
129710 :: CALL :: call :: V :: p0 $this .setHomologyId(v33)::CL,135910
129730 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setLength(java.lang.Integer)::JM,129735
129735 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .length = p1 $length ::
129750 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setStart(java.lang.String)::JM,129755
129755 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .start = p1 $start ::
129761 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setStop(java.lang.String)::JM,129766
129766 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .stop = p1 $stop ::
129772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setLength(java.lang.Integer)::JM,129777
129777 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .length = p1 $length ::
129783 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setSegmentId(java.lang.Integer)::JM,129788
129788 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .segmentId = p1 $segmentId ::
129794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setSequenceHeader(java.lang.String)::JM,129799
129799 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequenceHeader = p1 $sequenceHeader ::
129805 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathSegment.setSequence(java.lang.String)::JM,129810
129810 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequence = p1 $sequence ::
129816 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setName(java.lang.String)::JM,129821
129821 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $name ::
129827 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSource(java.lang.String)::JM,129832
129832 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .source = p1 $source ::
129838 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSequenceHeader(java.lang.String)::JM,129843
129843 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequenceHeader = p1 $sequenceHeader ::
129849 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSequence(java.lang.String)::JM,129854
129854 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .sequence = p1 $sequence ::
129860 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSegments(java.util.List)::JM,129865
129865 :: EXPR :: modify :: Ljava/util/List :: p0 $this .segments = p1 $segments ::
129871 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::CE,129872:CD,129875:CD,129879:CD,129885:CD,129896:CD,129902:CD,129907:CD,129932:CD,129937:CD,129941:CD,129942
129872 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::
129875 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,129941
129876 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .domainName::
129879 :: CALL :: call :: Ljava/lang/String :: v8 = v4.substring(#(0), #(4))::
129885 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
129893 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .domainName::JM,129907
129896 :: CALL :: call :: Ljava/lang/String :: v15 = v12.substring(#(4), #(5))::JM,129907
129902 :: CALL :: call :: Z :: v18 = v15.equals(#(0))::JM,129907
129907 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 65::CF,129908:CD,129916:CD,129922:CD,129927:CD,129942
129908 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::JM,129942
129913 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainName::JM,129942
129916 :: CALL :: call :: Ljava/lang/String :: v25 = v23.substring(#(4), #(5))::JM,129942
129922 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::JM,129942
129927 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::JM,129942
129932 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v3.append(v30)::JM,129941
129937 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,129941
129941 :: NORM :: compound :: Ljava/lang/String :: return v34::DD,129872
129942 :: EXPR :: assign :: null :: PHI v30 = v29, #()::JM,129941
129958 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainListFileName()::CD,129962:CD,129966:CD,129974:CD,129979:CD,129984
129962 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
129966 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
129974 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-list-v%s.txt))::CL,129386
129979 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::
129984 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
129993 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList(java.io.BufferedReader)::CD,130071:CD,130075:JM,130004
129999 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,130004:JM,130075
130004 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 18::CD,130006:CD,130011:CD,130015:CD,130024:CD,130029:CD,130053:CD,130065:CD,130077
130006 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v12 = p0 $this .parseCathListFileLine(v5)::CL,135921
130011 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getPdbIdAndChain()::CL,129871
130015 :: CALL :: call :: Ljava/lang/String :: v17 = v14.substring(#(0), #(4))::
130024 :: CALL :: call :: Z :: v20 = v18.containsKey(v17)::JM,130029
130029 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 66::CF,130040:CD,130033:CD,130038:CD,130047:CD,130077
130033 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v17)::JM,130038
130038 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,130077
130040 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,130077
130047 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.put(v17, v25)::
130053 :: CALL :: call :: Z :: v32 = v30.add(v12)::
130065 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.put(v35, v12)::
130071 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,130004:JM,130075
130075 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,129999:CD,130004:CD,130071:JM,130075
130077 :: EXPR :: assign :: null :: PHI v30 = v24, v25::
130163 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::CE,130164:CD,130183:CD,130187:CD,130191:CD,130215:CD,130234
130164 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::JM,119358
130183 :: CALL :: call :: Ljava/io/File :: v11 = p0 $this .getDomainFile()::CL,136162
130187 :: CALL :: call :: Z :: v13 = v11.exists()::JM,130191
130191 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 51::CD,130192:CD,130196:CD,130197:CD,130234
130192 :: CALL :: call :: J :: v16 = v11.length()::JM,130196
130197 :: PRED :: IF :: Z :: if (v26 <= #(0)) goto 51::CD,130234
130196 :: EXPR :: assign :: Z :: v26 = v16 == #(0 l)::DD,130197
130215 :: NORM :: compound :: Z :: return v28::DD,130164
130234 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,130215
130250 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.downloadDomains()::CD,130271:CD,130275:CD,130283:CD,130288:CD,130292:CD,130297:CD,130305:CD,130317:CD,130324:CD,130332:CD,130337:CD,130342:CD,130346:CD,130351
130271 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
130275 :: CALL :: call :: Ljava/lang/String :: v14 = valueOf(v12)::
130283 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v11.append(#(/ecod/distributions/))::
130288 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getDomainFilename()::CL,136184
130292 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
130297 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
130305 :: CALL :: call :: Ljava/io/File :: v27 = p0 $this .getDomainFile()::CL,136162
130317 :: CALL :: call :: V :: downloadFile(v10, v27)::CL,136207
130324 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
130329 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .url::
130332 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v34.append(v37)::
130337 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(#(/ecod/distributions/))::
130342 :: CALL :: call :: Ljava/lang/String :: v43 = p0 $this .getDomainFilename()::CL,136184
130346 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
130351 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
130431 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.parseDomains()::CD,130452:JM,141763:JM,144214:CD,130460:CD,130467
130452 :: CALL :: call :: Ljava/io/File :: v12 = p0 $this .getDomainFile()::CL,136162
130460 :: CALL :: call :: Ljava/util/List :: v15 = v10.getDomains()::JM,130464:CL,136393
130464 :: EXPR :: modify :: Ljava/util/List :: p0 $this .allDomains = v15::
130467 :: CALL :: call :: Ljava/lang/String :: v17 = v10.getVersion()::JM,130471:CL,136402
130471 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .parsedVersion = v17::
130550 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .rootURL = p1 $url ::
130558 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.addMirror(org.biojava.nbio.structure.scop.ScopMirror)::CD,130566
130563 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .mirrors::
130566 :: CALL :: call :: Z :: v6 = v4.add(p1 $scopURLs )::
130586 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getClaFilename()::CD,130590:CD,130594:CD,130602:CD,130610:CD,130615
130590 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
130594 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
130602 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v3.append(#(dir.cla.scop.txt_))::
130607 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .scopVersion::
130610 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(v11)::
130615 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
130624 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.initScopURLs()::CD,130631:CD,130635
130628 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,130635
130631 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,130635
130635 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 13::CF,130637:JM,136608:JM,136580:JM,136616:JM,136585:JM,136590:JM,136589:JM,136621:JM,136626:JM,136625:JM,136598:JM,136634:JM,136571:JM,136603:JM,136607:JM,136639:JM,136572:CD,130641:CD,130653:CD,130661
130637 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v7 = new org.biojava.nbio.structure.scop.ScopMirror::
130641 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v9 = new org.biojava.nbio.structure.scop.ScopMirror::
130650 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .mirrors::
130653 :: CALL :: call :: Z :: v18 = v16.add(v7)::
130658 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .mirrors::
130661 :: CALL :: call :: Z :: v21 = v19.add(v9)::
130684 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopMirror.getClaURL(java.lang.String)::CD,130697
130697 :: CALL :: call :: Ljava/lang/String :: v9 = format(v4, v6)::
130708 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getClaURL(java.lang.String)::CD,130713:CD,130717:CD,130725:CD,130731:CD,130736
130713 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
130717 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
130725 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(#(cla), p1 $scopVersion )::CL,136669
130731 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v4.append(v11)::
130736 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
130746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,130754:CD,130759:CD,130764:CD,130769:CD,130774:CD,130782
130754 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
130759 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(p1 $remoteURL )::
130764 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#( to: ))::
130769 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p2 $localFile )::
130774 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
130782 :: CALL :: call :: V :: downloadFile(p1 $remoteURL , p2 $localFile )::CL,136207
130795 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification(java.io.BufferedReader)::CD,130815:CD,130816:CD,130821:CD,130826:CD,130904:CD,130905:CD,130910:CD,130915:CD,131080:CD,131084:JM,130806
130801 :: CALL :: call :: Z :: v10 = v7.startsWith(#(#))::JM,130806:JM,131084
130806 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 24::CD,130808:CD,130856:CD,130860:CD,130868:CD,130872:CD,130876:CD,130880:CD,130885:CD,130889:CD,130893:CD,130897:CD,130928:CD,130933:CD,130941:CD,130946:CD,130954:CD,130959:CD,130967:CD,130972:CD,130980:CD,130985:CD,130993:CD,130998:CD,131006:CD,131011:CD,131015:CD,131019:CD,131023:CD,131027:CD,131031:CD,131035:CD,131039:CD,131046:CD,131051:CD,131075:CD,131097
130808 :: CALL :: call :: [Ljava/lang/String :: v14 = v7.split(#(	))::
130815 :: NORM :: declaration :: Ljava/io/IOException :: v119 = new java.io.IOException::
130816 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
130821 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v120.append(v7)::JM,130806:JM,131084
130826 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::
130852 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v14[#(4)]::
130856 :: CALL :: call :: I :: v28 = parseInt(v26)::
130860 :: CALL :: call :: Ljava/lang/Integer :: v30 = valueOf(v28)::
130868 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v33 = new org.biojava.nbio.structure.scop.ScopDomain::
130872 :: CALL :: call :: V :: v33.setScopId(v19)::CL,119947
130876 :: CALL :: call :: V :: v33.setPdbId(v20)::CL,119905
130880 :: CALL :: call :: Ljava/util/List :: v38 = p0 $this .extractRanges(v22)::CL,136839
130885 :: CALL :: call :: V :: v33.setRanges(v38)::CL,119936
130889 :: CALL :: call :: V :: v33.setClassificationId(v24)::CL,119834
130893 :: CALL :: call :: V :: v33.setSunid(v30)::CL,119987
130897 :: CALL :: call :: [Ljava/lang/String :: v44 = v32.split(#(,))::
130905 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
130904 :: NORM :: declaration :: Ljava/io/IOException :: v110 = new java.io.IOException::
130910 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v7)::JM,130806:JM,131084
130915 :: CALL :: call :: Ljava/lang/String :: v117 = v115.toString()::
130924 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v44[#(0)]::
130928 :: CALL :: call :: Ljava/lang/String :: v49 = v47.substring(#(3))::
130933 :: CALL :: call :: I :: v51 = parseInt(v49)::
130937 :: EXPR :: reference :: Ljava/lang/Object :: v52 = v44[#(1)]::
130941 :: CALL :: call :: Ljava/lang/String :: v54 = v52.substring(#(3))::
130946 :: CALL :: call :: I :: v56 = parseInt(v54)::
130950 :: EXPR :: reference :: Ljava/lang/Object :: v57 = v44[#(2)]::
130954 :: CALL :: call :: Ljava/lang/String :: v59 = v57.substring(#(3))::
130959 :: CALL :: call :: I :: v61 = parseInt(v59)::
130963 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v44[#(3)]::
130967 :: CALL :: call :: Ljava/lang/String :: v64 = v62.substring(#(3))::
130972 :: CALL :: call :: I :: v66 = parseInt(v64)::
130976 :: EXPR :: reference :: Ljava/lang/Object :: v67 = v44[#(4)]::
130980 :: CALL :: call :: Ljava/lang/String :: v69 = v67.substring(#(3))::
130985 :: CALL :: call :: I :: v71 = parseInt(v69)::
130989 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v44[#(5)]::
130993 :: CALL :: call :: Ljava/lang/String :: v74 = v72.substring(#(3))::
130998 :: CALL :: call :: I :: v76 = parseInt(v74)::
131002 :: EXPR :: reference :: Ljava/lang/Object :: v77 = v44[#(6)]::
131006 :: CALL :: call :: Ljava/lang/String :: v79 = v77.substring(#(3))::
131011 :: CALL :: call :: I :: v81 = parseInt(v79)::
131015 :: CALL :: call :: V :: v33.setClassId(v51)::CL,119814
131019 :: CALL :: call :: V :: v33.setFoldId(v56)::CL,119894
131023 :: CALL :: call :: V :: v33.setSuperfamilyId(v61)::CL,120007
131027 :: CALL :: call :: V :: v33.setFamilyId(v66)::CL,119874
131031 :: CALL :: call :: V :: v33.setDomainId(v71)::CL,119854
131035 :: CALL :: call :: V :: v33.setSpeciesId(v76)::CL,119967
131039 :: CALL :: call :: V :: v33.setPx(v81)::CL,119925
131046 :: CALL :: call :: Z :: v91 = v89.containsKey(v20)::JM,131051
131051 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 372::CF,131062:CD,131055:CD,131060:CD,131069:CD,131097
131055 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.get(v20)::JM,131060
131060 :: EXPR :: assign :: Ljava/lang/Object :: v95 = CHECKCAST v94::DD,131097
131062 :: NORM :: declaration :: Ljava/util/ArrayList :: v96 = new java.util.ArrayList::DD,131097
131069 :: CALL :: call :: Ljava/lang/Object :: v100 = v98.put(v20, v96)::
131075 :: CALL :: call :: Z :: v103 = v101.add(v33)::
131080 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $buffer .readLine()::JM,130806:JM,131084
131084 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 11::CD,130801:CD,130806:CD,131080:JM,131084
131097 :: EXPR :: assign :: null :: PHI v101 = v95, v96::
131846 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String)::CD,131857:CD,131862:CD,131867:CD,131876:CD,131881:CD,131887:CD,131895:CD,131911
131857 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
131862 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v69.append(p1 $pdbId )::
131867 :: CALL :: call :: Ljava/lang/String :: v75 = v73.toString()::
131876 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getLocalFile(p1 $pdbId )::JM,131922:JM,131957:CL,137964
131881 :: CALL :: call :: [I :: v10 = $SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CL,138176
131887 :: CALL :: call :: I :: v13 = v11.ordinal()::
131884 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v11 = p0 $this .fetchBehavior::
131891 :: EXPR :: reference :: I :: v14 = v10[v13]::DD,131895
131895 :: PRED :: IF :: null :: switch v14::CD,131922:CD,131957:CD,131979:CD,131981
131911 :: CALL :: call :: Ljava/lang/String :: v66 = format(#(Structure %s not foun...), v62)::
131922 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,131927:CD,131931:CD,131979:CD,131981
131927 :: CALL :: call :: Z :: v28 = v26.isUpdateRemediatedFiles()::JM,131931:CL,138287
131931 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 175::CD,131932:CD,131936:CD,131938:CD,131939
131932 :: CALL :: call :: J :: v30 = v8.lastModified()::JM,131938
131938 :: EXPR :: assign :: Z :: v32 = v30 == v31::DD,131939
131939 :: PRED :: IF :: Z :: if (v32 >= #(0)) goto 175::CD,131979:CD,131981
131936 :: EXPR :: reference :: J :: v31 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,131938
131958 :: CALL :: call :: J :: v17 = v8.lastModified()::JM,131964
131957 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,131958:CD,131962:CD,131964:CD,131965:CD,131979:CD,131981
131962 :: EXPR :: reference :: J :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,131964
131964 :: EXPR :: assign :: Z :: v19 = v17 == v18::DD,131965
131965 :: PRED :: IF :: Z :: if (v19 >= #(0)) goto 216::CD,131979:CD,131981
131979 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v40 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::CF,131981
131976 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v39 = p0 $this .obsoleteBehavior::DD,131981
131982 :: CALL :: call :: Ljava/lang/String :: v54 = getCurrent(p1 $pdbId )::CL,138326
131981 :: PRED :: IF :: Z :: if (v39 != v40) goto 253::CD,131982:CD,131990:CD,132002:CD,132004
131990 :: CALL :: call :: Ljava/io/File :: v58 = p0 $this .downloadStructure(v55, v56, #(0), v38)::CL,138361
131999 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v41 = p0 $this .obsoleteBehavior::DD,132004
132002 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v42 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,132004
132004 :: PRED :: IF :: Z :: if (v41 != v42) goto 287::CD,132005:CD,132009:CD,132011:CD,132027
132005 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = getStatus(p1 $pdbId )::JM,132011:CL,138572
132011 :: PRED :: IF :: Z :: if (v44 != v45) goto 287::CD,132015:CD,132027
132009 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v45 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::CF,132011
132015 :: CALL :: call :: Ljava/io/File :: v52 = p0 $this .downloadStructure(p1 $pdbId , v49, #(1), v38)::CL,138361
132027 :: CALL :: call :: Ljava/io/File :: v48 = p0 $this .downloadStructure(p1 $pdbId , v46, #(0), v38)::CL,138361
132102 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::JM,120922
132101 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::CE,132102:CD,132106:CD,132119:CD,132123:CD,132125:JM,132115:JM,132116
132106 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $atomGroups .iterator()::JM,132115:JM,132116:JM,132123
132111 :: CALL :: call :: Ljava/lang/Object :: v10 = v6.next()::JM,132115:JM,132123
132115 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,132116
132118 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v14 + #(1)::DD,132125
132119 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,132115:JM,132123
132116 :: PRED :: IF :: Z :: if (p2 $g  != v11) goto 31::CD,132117:CD,132118:CD,132119:CD,132123:CD,132125
132117 :: NORM :: compound :: I :: return v14::DD,132102
132123 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 15::CD,132111:CD,132115:CD,132116:CD,132124:JM,132123
132124 :: NORM :: compound :: I :: return #(-1)::DD,132102
132125 :: EXPR :: assign :: null :: PHI v14 = #(0), v13::JM,132115:JM,132123:DD,132117:DD,132118
132150 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::JM,121251:JM,121252:JM,121193:JM,121256:JM,121194:JM,121261:JM,121423:JM,121198:JM,121424:JM,121203:JM,121333:JM,121493:JM,121428:JM,121334:JM,121494:JM,121433:JM,121242:JM,121338:JM,121498:JM,121343:JM,121503:JM,121246:JM,126134
132149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::CE,132150:CD,132157:CD,132177:CD,132181:JM,132175
132154 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entities::JM,132166:JM,132181
132157 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,132166:JM,132181
132162 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,132166:JM,132181
132166 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,132167:JM,132175:DD,132176
132167 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,132167:JM,132175
132171 :: CALL :: call :: I :: v16 = parseInt(v14)::JM,132175
132175 :: PRED :: IF :: Z :: if (v16 != p1 $entity_id ) goto 41::CD,132176:CD,132177:CD,132181:JM,132166
132176 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return v12::CF,132150
132177 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,132166:JM,132181
132181 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,132162:CD,132166:CD,132167:CD,132171:CD,132175:CD,132194:JM,132181
132194 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return #(null)::CF,132150
132210 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::JM,121192:JM,121332:JM,121422:JM,121484:JM,122057
132209 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::CE,132210:CD,132217:CD,132233:CD,132237:JM,132231
132214 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,132226:JM,132237
132217 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,132226:JM,132237
132222 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,132226:JM,132237
132226 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,132232
132227 :: CALL :: call :: I :: v14 = v12.getMolId()::JM,132231:CL,80865
132231 :: PRED :: IF :: Z :: if (v14 != p1 $molId ) goto 34::CD,132232:CD,132233:CD,132237:JM,132226
132232 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v12::DD,132210
132233 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,132226:JM,132237
132238 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return #(null)::DD,132210
132237 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,132222:CD,132226:CD,132227:CD,132231:CD,132238:JM,132237
132249 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESG(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen,int)::JM,63952:JM,63959:CD,132259:CD,132267:CD,132275:CD,132283:CD,132291:CD,132299:CD,132307:CD,132315
132259 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,80986
132267 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,90863
132275 :: CALL :: call :: V :: v5.setCell(v12)::CL,90896
132283 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,90819
132291 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,90797
132299 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,90808
132307 :: CALL :: call :: V :: v5.setExpressionSystemTaxId(v24)::CL,90962
132315 :: CALL :: call :: V :: v5.setExpressionSystem(v27)::CL,90951
132339 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addCompound(org.biojava.nbio.structure.Compound)::CD,132347
132347 :: CALL :: call :: Z :: v6 = v4.add(p1 $compound )::
132344 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::
132365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESN(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat,int)::JM,63952:JM,63959:CD,132375:CD,132383:CD,132391:CD,132399:CD,132407:CD,132415
132375 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,80986
132383 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,90863
132391 :: CALL :: call :: V :: v5.setCell(v12)::CL,90896
132399 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,90819
132407 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,90797
132415 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,90808
132435 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESS(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn,int)::JM,63952:JM,63959:CD,132445:CD,132453:CD,132461:CD,132469
132445 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,80986
132453 :: CALL :: call :: V :: v5.setOrganismCommon(v9)::CL,90819
132461 :: CALL :: call :: V :: v5.setOrganismScientific(v12)::CL,90797
132469 :: CALL :: call :: V :: v5.setOrganismTaxId(v15)::CL,90808
132486 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::JM,121789
132485 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::CE,132486:CD,132490:CD,132494:CD,132496:CD,132501
132490 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v5 = p1 $atomG .getType()::JM,132496:JM,132501:CL,70174:CL,70190:CL,70182
132494 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v6 = org.biojava.nbio.structure.GroupType.AMINOACID::JM,132496:JM,132501
132496 :: CALL :: call :: Z :: v8 = v5.equals(v6)::JM,132496:JM,132501
132503 :: NORM :: declaration :: Ljava/lang/Long :: v30 = new java.lang.Long::JM,132503:JM,132516
132501 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 36::CD,132503:CD,132504:CD,132512:CD,132516:CD,132517:CD,132521:CD,132523:CD,132528
132504 :: CALL :: call :: J :: v32 = v29.getId()::JM,132503:CL,138616
132512 :: CALL :: call :: I :: v35 = v30.intValue()::JM,132516
132516 :: NORM :: compound :: I :: return v35::DD,132486
132517 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v11 = p1 $atomG .getType()::JM,132528:JM,132523:CL,70174:CL,70190:CL,70182
132523 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,132528:JM,132523
132521 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v12 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::JM,132528:JM,132523
132530 :: NORM :: declaration :: Ljava/lang/Long :: v23 = new java.lang.Long::JM,132530:JM,132543
132531 :: CALL :: call :: J :: v25 = v22.getId()::JM,132530:CL,138616
132528 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 71::CD,132530:CD,132531:CD,132539:CD,132543:CD,132545:CD,132546:CD,132554:CD,132558
132539 :: CALL :: call :: I :: v28 = v23.intValue()::JM,132543
132543 :: NORM :: compound :: I :: return v28::DD,132486
132546 :: CALL :: call :: J :: v18 = v15.getId()::JM,132545:CL,138616
132545 :: NORM :: declaration :: Ljava/lang/Long :: v16 = new java.lang.Long::JM,132545:JM,132558
132554 :: CALL :: call :: I :: v21 = v16.intValue()::JM,132558
132558 :: NORM :: compound :: I :: return v21::DD,132486
132577 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formBondsFromStructConn(java.util.List)::CD,132582:CD,132586:CD,132995:CD,132999:CD,133003:JM,132595
132582 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
132586 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $structConn .iterator()::JM,132595:JM,132999
132591 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,132595:JM,132999
132595 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,132690:JM,132695:JM,132686:JM,133014:JM,132696:JM,132704:JM,132709:JM,132700:JM,132710:JM,133015:JM,132723:JM,132714:JM,132718:JM,132724:JM,132728:JM,132733:JM,132980:JM,132984:JM,132989
132602 :: CALL :: call :: Z :: v19 = v15.contains(v17)::JM,132607
132607 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 55::CD,132686:CD,132690:CD,132695:CD,132700:CD,132704:CD,132709:CD,132714:CD,132718:CD,132723:CD,133014:CD,133015
132686 :: CALL :: call :: Ljava/lang/String :: v62 = v14.getPdbx_ptnr1_label_alt_id()::JM,132690:JM,132695:JM,132686
132690 :: CALL :: call :: Z :: v64 = v62.equals(#(?))::JM,132690:JM,132695
132695 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 218::CF,133014:CD,132696
132696 :: CALL :: call :: Ljava/lang/String :: v66 = v14.getPdbx_ptnr1_label_alt_id()::JM,133014:JM,132696
132700 :: CALL :: call :: Ljava/lang/String :: v69 = v14.getPdbx_ptnr2_label_alt_id()::JM,132704:JM,132709:JM,132700
132704 :: CALL :: call :: Z :: v71 = v69.equals(#(?))::JM,132704:JM,132709
132710 :: CALL :: call :: Ljava/lang/String :: v73 = v14.getPdbx_ptnr2_label_alt_id()::JM,132710:JM,133015
132709 :: PRED :: IF :: Z :: if (v71 != #(0)) goto 239::CF,133015:CD,132710
132714 :: CALL :: call :: Ljava/lang/String :: v76 = v14.getPtnr1_symmetry()::JM,132723:JM,132714:JM,132718
132718 :: CALL :: call :: Z :: v78 = v76.equals(#(1_555))::JM,132723:JM,132718
132723 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 265::CD,132724:CD,132728:CD,132733
132724 :: CALL :: call :: Ljava/lang/String :: v80 = v14.getPtnr2_symmetry()::JM,132724:JM,132728:JM,132733
132728 :: CALL :: call :: Z :: v82 = v80.equals(#(1_555))::JM,132728:JM,132733
132733 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 316::CD,132767:CD,132771:CD,132792:CD,132796:CD,132817:CD,132861:CD,132905
132767 :: CALL :: call :: Z :: v84 = v67.isEmpty()::JM,132771:JM,132767
132771 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 327::CF,132773:CD,132778:CD,132783:CD,132788
132773 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
132778 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v85.append(v67)::
132783 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v89.append(#()))::
132788 :: CALL :: call :: Ljava/lang/String :: v94 = v92.toString()::
132792 :: CALL :: call :: Z :: v97 = v74.isEmpty()::JM,132792:JM,132796
132798 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
132796 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 366::CF,132798:CD,132803:CD,132808:CD,132813
132803 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v74)::
132808 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v101.append(#()))::
132813 :: CALL :: call :: Ljava/lang/String :: v105 = v103.toString()::
132817 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v109 = p0 $this .getAtomFromRecord(v58, v67, v54, v31, v50, v41)::JM,132905:CL,81146
132861 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = p0 $this .getAtomFromRecord(v60, v74, v56, v32, v52, v48)::JM,132939:CL,81146
132905 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 598::CD,132939
132939 :: PRED :: IF :: Z :: if (v111 != #(null)) goto 650::CF,132973:JM,93894:JM,93897:JM,93900:JM,93903:CD,132980:CD,132984:CD,132989
132973 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v112 = new org.biojava.nbio.structure.BondImpl::
132980 :: CALL :: call :: Ljava/lang/String :: v116 = v14.getConn_type_id()::JM,132980:JM,132984:JM,132989
132984 :: CALL :: call :: Z :: v119 = v116.equals(#(disulf))::JM,132984:JM,132989
132990 :: CALL :: call :: Z :: v146 = v5.add(v112)::
132989 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 688::CD,132990:JM,132595:JM,132999
132995 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,132595:JM,132999
132999 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,132591:CD,132595:CD,132602:CD,132607:CD,132995:JM,132999
133003 :: CALL :: call :: V :: v147.setSSBonds(v5)::CL,82000
133014 :: EXPR :: assign :: null :: PHI v67 = #(), v66::JM,132771:JM,132767:JM,132704:JM,132709:JM,132700
133015 :: EXPR :: assign :: null :: PHI v74 = #(), v73::JM,132723:JM,132714:JM,132718:JM,132792:JM,132796
133219 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
133222 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,133226
133226 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v5::
133229 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
133232 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
133245 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setSiteID(java.lang.String)::JM,133250
133250 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
133256 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setGroups(java.util.List)::JM,133261
133261 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $residues ::
133267 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.init()::CD,133278
133278 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,133283
133283 :: EXPR :: modify :: Ljava/util/List :: p0 $this .modelTransformations = v5::
133292 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::CE,133293:CD,133297:CD,133304:CD,133408:CD,133412:CD,133413:JM,133318:JM,133323
133293 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::
133297 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,133413
133301 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .psags::JM,133313:JM,133412
133304 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,133313:JM,133412
133309 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,133313:JM,133412
133314 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getAssembly_id()::JM,133314:JM,133318:JM,133323
133313 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,133314:JM,133318:JM,133323:JM,133346:JM,133351:JM,133342:JM,133407
133318 :: CALL :: call :: Z :: v18 = v16.equals(p1 $assemblyId )::JM,133318:JM,133323
133323 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 189::CD,133331:CD,133338:CD,133342:CD,133346:CD,133351:CD,133355:CD,133403:CD,133407:JM,133313:JM,133412
133331 :: CALL :: call :: V :: v19.parseOperatorExpressionString(v21)::CL,138648
133338 :: CALL :: call :: Ljava/util/List :: v25 = v23.getUnaryOperators()::JM,133402:CL,138696
133342 :: CALL :: call :: Ljava/lang/String :: v27 = v14.getAsym_id_list()::JM,133346:JM,133351:JM,133342:JM,133407
133346 :: CALL :: call :: [Ljava/lang/String :: v30 = v27.split(#(,))::JM,133346:JM,133351:JM,133407
133351 :: CALL :: call :: Ljava/util/List :: v32 = asList(v30)::JM,133351:JM,133407
133355 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,133407
133360 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,133407
133365 :: CALL :: call :: Ljava/util/Iterator :: v41 = v25.iterator()::JM,133402
133370 :: CALL :: call :: Ljava/lang/Object :: v45 = v41.next()::JM,133402
133375 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v48 = p0 $this .getModelTransformationMatrix(v46)::CL,138705
133380 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v49 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
133385 :: CALL :: call :: V :: v49.setChainId(v39)::CL,90601
133389 :: CALL :: call :: V :: v49.setId(v46)::CL,90590
133393 :: CALL :: call :: Z :: v54 = v4.add(v49)::
133398 :: CALL :: call :: Z :: v43 = v41.hasNext()::JM,133402
133402 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 117::CD,133370:CD,133375:CD,133380:JM,138787:JM,138805:JM,138798:CD,133385:CD,133389:CD,133393:CD,133398:JM,133402:JM,133407
133403 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,133407
133407 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 93::CD,133360:CD,133365:CD,133398:CD,133402:CD,133403:JM,133407:JM,133313:JM,133412
133408 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,133313:JM,133412
133412 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,133309:CD,133313:CD,133314:CD,133318:CD,133323:CD,133408:JM,133412:CF,133413
133413 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,133293
133458 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::CE,133459:CD,133463:CD,133470:CD,133477:CD,133594:CD,133598:CD,133599:JM,133491:JM,133496
133459 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::
133463 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,133599
133470 :: CALL :: call :: Ljava/util/List :: v8 = v6.getBinaryOperators()::JM,133588:CL,138821
133474 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .psags::JM,133486:JM,133598
133477 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,133486:JM,133598
133482 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::JM,133486:JM,133598
133486 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,133491:JM,133496:JM,133487:JM,133506:JM,133497:JM,133593:JM,133501
133487 :: CALL :: call :: Ljava/lang/String :: v19 = v17.getAssembly_id()::JM,133491:JM,133496:JM,133487
133491 :: CALL :: call :: Z :: v21 = v19.equals(p1 $assemblyId )::JM,133491:JM,133496
133496 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 218::CD,133497:CD,133501:CD,133506:CD,133517:CD,133521:CD,133589:CD,133593:JM,133486:JM,133598
133497 :: CALL :: call :: Ljava/lang/String :: v23 = v17.getAsym_id_list()::JM,133506:JM,133497:JM,133593:JM,133501
133501 :: CALL :: call :: [Ljava/lang/String :: v26 = v23.split(#(,))::JM,133506:JM,133593:JM,133501
133506 :: CALL :: call :: Ljava/util/List :: v28 = asList(v26)::JM,133506:JM,133593
133517 :: CALL :: call :: V :: v29.parseOperatorExpressionString(v31)::CL,138648
133521 :: CALL :: call :: Ljava/util/Iterator :: v34 = v28.iterator()::JM,133593
133526 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,133593
133531 :: CALL :: call :: Ljava/util/Iterator :: v42 = v8.iterator()::JM,133588
133536 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,133588
133546 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v52 = p0 $this .getModelTransformationMatrix(v50)::CL,138705
133556 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v57 = p0 $this .getModelTransformationMatrix(v55)::CL,138705
133561 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v59 = combine(v52, v57)::CL,138848
133566 :: CALL :: call :: V :: v59.setChainId(v39)::CL,90601
133570 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v67)::
133574 :: CALL :: call :: V :: v59.setId(v62)::CL,90590
133578 :: CALL :: call :: Z :: v65 = v4.add(v59)::
133583 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v67 + #(1)::DD,133600
133584 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,133588
133588 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 122::CD,133536:CD,133546:CD,133556:CD,133561:CD,133566:CD,133570:CD,133574:CD,133578:CD,133583:CD,133584:CD,133600:JM,133588:JM,133593
133589 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,133593
133594 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,133486:JM,133598
133593 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 96::CD,133526:CD,133531:CD,133584:CD,133588:CD,133589:CD,133600:JM,133593:JM,133486:JM,133598
133598 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 32::CD,133482:CD,133486:CD,133487:CD,133491:CD,133496:CD,133594:JM,133598:CF,133599
133599 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,133459
133600 :: EXPR :: assign :: null :: PHI v67 = #(1), v66::JM,133588:DD,133583
133666 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::JM,123234
133665 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::CE,133666:CD,133672
133669 :: EXPR :: reference :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v3 = p0 $this .cell::DD,133672
133674 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.checkScaleMatrix(javax.vecmath.Matrix4d)::CD,133679
133672 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: return v3::CF,133666
133679 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v5 = p0 $this .getMTranspose()::CL,138887
133768 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardCoordFrameConvention(boolean)::JM,133773
133773 :: EXPR :: modify :: Z :: p0 $this .nonStandardCoordFrameConvention = p1 $nonStandardCoordFrameConvention ::
134088 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::CE,134089:CD,134096:CD,134100:JM,134134:JM,134196:JM,134154:JM,134139:JM,134159
134089 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::JM,124029:JM,124055:JM,124145:JM,134486
134096 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v8 = getGroupFromChemCompDictionary(p4 $null )::JM,134118:JM,134100:JM,134133:JM,134110:JM,134126:CL,75113
134100 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 100::CD,134101:CD,134105:CD,134109:CD,134134:CD,134139:CD,134218:CD,134219:JM,134196:JM,134154:JM,134159
134101 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = v8.getChemComp()::CL,75346
134105 :: CALL :: call :: Z :: v13 = v11.isEmpty()::JM,134109:CL,75406
134110 :: EXPR :: assign :: Z :: v47=v8 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,134111
134111 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 51::CD,134113:CD,134118:CD,134119
134109 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 100::CD,134110:CD,134111:CD,134133:CD,134134:CD,134139:CD,134218:CD,134219:JM,134196:JM,134154:JM,134159
134113 :: CALL :: call :: V :: v54.setId(p3 $seq_id )::CL,138995
134118 :: EXPR :: assign :: Z :: v48=v8 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,134119
134119 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 75::CD,134121:CD,134126:CD,134127
134121 :: CALL :: call :: V :: v52.setId(p3 $seq_id )::CL,138995
134126 :: EXPR :: assign :: Z :: v49=v8 INSTANCEOF org.biojava.nbio.structure.HetatomImpl::DD,134127
134127 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 96::CD,134129:CF,134133
134129 :: CALL :: call :: V :: v50.setId(p3 $seq_id )::CL,138995
134134 :: CALL :: call :: Z :: v17 = p1 $recordName .equals(#(ATOM))::JM,134134:JM,134196:JM,134154:JM,134139:JM,134159
134133 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v8::DD,134089
134139 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 201::CD,134140:CD,134144:CD,134182:CD,134186
134140 :: CALL :: call :: Z :: v31 = isNucleotide(p4 $null )::JM,134144:CL,75077
134144 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 137::CF,134145:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,134149:CD,134154:CD,134219
134145 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v42 = new org.biojava.nbio.structure.NucleotideImpl::DD,134219
134149 :: CALL :: call :: V :: v42.setId(p3 $seq_id )::CL,138995
134154 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 149::CF,134160:CD,134155:CD,134159:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,134164:CD,134219:JM,134134:JM,134196:JM,134139
134155 :: CALL :: call :: C :: v33 = p2 $aminoCode1 .charValue()::JM,134134:JM,134196:JM,134139:JM,134159
134159 :: PRED :: IF :: Z :: if (v33 != #(88)) goto 171::CF,134169:CF,134160:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,134164:CD,134173:CD,134177:CD,134219
134160 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v39 = new org.biojava.nbio.structure.HetatomImpl::DD,134219
134164 :: CALL :: call :: V :: v39.setId(p3 $seq_id )::CL,138995
134169 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v35 = new org.biojava.nbio.structure.AminoAcidImpl::DD,134219
134173 :: CALL :: call :: V :: v35.setAminoType(p2 $aminoCode1 )::CL,75547
134177 :: CALL :: call :: V :: v35.setId(p3 $seq_id )::CL,138995
134182 :: CALL :: call :: Z :: v19 = isNucleotide(p4 $null )::JM,134186:CL,75077
134186 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 230::CF,134187:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,134191:CD,134196:CD,134219
134187 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v27 = new org.biojava.nbio.structure.NucleotideImpl::DD,134219
134191 :: CALL :: call :: V :: v27.setId(p3 $seq_id )::CL,138995
134196 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 261::CF,134210:CF,134197:JM,75456:JM,75463:JM,75479:JM,75481:JM,75483:CD,134201:CD,134205:CD,134214:CD,134219
134197 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v23 = new org.biojava.nbio.structure.AminoAcidImpl::DD,134219
134201 :: CALL :: call :: V :: v23.setAminoType(p2 $aminoCode1 )::CL,75547
134205 :: CALL :: call :: V :: v23.setId(p3 $seq_id )::CL,138995
134210 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v20 = new org.biojava.nbio.structure.HetatomImpl::DD,134219
134214 :: CALL :: call :: V :: v20.setId(p3 $seq_id )::CL,138995
134218 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v45::DD,134089
134219 :: EXPR :: assign :: null :: PHI v45 = v42, v39, v35, v27, v23, v20::CF,134218
134298 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::CE,134299:CD,134310:CD,134314:CD,134318:JM,134384:JM,134334:JM,134403:JM,134408
134299 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::JM,124340
134310 :: CALL :: call :: Ljava/util/List :: v10 = v8.getAtoms()::JM,134318:CL,75639
134314 :: CALL :: call :: I :: v12 = v10.size()::JM,134318
134318 :: PRED :: IF :: Z :: if (v12 <= #(0)) goto 54::CD,134319:CD,134325:CD,134329:CD,134334:CD,134342:CD,134346:CD,134391:CD,134395:JM,134318
134319 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.get(#(0))::JM,134318
134325 :: CALL :: call :: Ljava/lang/Character :: v18 = v16.getAltLoc()::JM,134334:CL,75648
134329 :: CALL :: call :: Z :: v20 = v18.equals(p1 $altLoc )::JM,134334:JM,134384
134334 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 54::CD,134338:CD,134342:CD,134346:CD,134391:CD,134395
134335 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v79 = p0 $this .current_group::DD,134338
134338 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v79::DD,134299
134342 :: CALL :: call :: Ljava/util/List :: v23 = v21.getAltLocs()::JM,134355:JM,134395:CL,75032
134346 :: CALL :: call :: Ljava/util/Iterator :: v25 = v23.iterator()::JM,134355:JM,134395
134351 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,134355:JM,134395
134355 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,134385
134356 :: CALL :: call :: Ljava/util/List :: v32 = v30.getAtoms()::JM,134390:JM,134364:CL,75639
134360 :: CALL :: call :: I :: v34 = v32.size()::JM,134390:JM,134364
134364 :: PRED :: IF :: Z :: if (v34 <= #(0)) goto 160::CD,134365:CD,134386:CD,134390:CD,134391:CD,134395:JM,134364:JM,134355
134365 :: CALL :: call :: Ljava/util/Iterator :: v37 = v32.iterator()::JM,134390:JM,134364
134370 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.next()::JM,134390
134375 :: CALL :: call :: Ljava/lang/Character :: v44 = v42.getAltLoc()::JM,134384:CL,75648
134379 :: CALL :: call :: Z :: v46 = v44.equals(p1 $altLoc )::JM,134384:JM,134334
134386 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,134390
134384 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,134385:CD,134386:CD,134390
134385 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v30::DD,134299
134390 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 121::CD,134370:CD,134375:CD,134379:CD,134384:CD,134391:CD,134395:JM,134390:JM,134355
134391 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,134355:JM,134395
134395 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 78::CD,134351:CD,134355:CD,134356:CD,134360:CD,134364:CD,134399:CD,134403:CD,134408:JM,134395
134399 :: CALL :: call :: Ljava/lang/String :: v49 = v47.getPDBName()::JM,134403:JM,134408:CL,75053
134403 :: CALL :: call :: Z :: v51 = p4 $groupCode3 .equals(v49)::JM,134403:JM,134408
134408 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 268::CD,134412:CD,134416:CD,134420:CD,134456:CD,134464:CD,134475:CD,134482:CD,134486
134412 :: CALL :: call :: Ljava/util/List :: v63 = v61.getAtoms()::JM,134420:CL,75639
134416 :: CALL :: call :: I :: v65 = v63.size()::JM,134420
134420 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 208::CD,134424:CD,134428:CD,134432:CD,134433:CD,134437:CD,134441:CD,134445:CD,134451:CD,134455
134421 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,134424
134424 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,134299
134428 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.clone()::JM,134432:CL,75669:CL,75811:CL,75986
134432 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,134455:CF,134433
134433 :: NORM :: declaration :: Ljava/util/ArrayList :: v70 = new java.util.ArrayList::
134437 :: CALL :: call :: V :: v69.setAtoms(v70)::CL,76142
134441 :: CALL :: call :: Ljava/util/List :: v74 = v69.getAltLocs()::CL,75032
134445 :: CALL :: call :: V :: v74.clear()::
134451 :: CALL :: call :: V :: v76.addAltLoc(v69)::CL,76228
134455 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v69::DD,134299
134456 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v53 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p5 $seq_id , p4 $groupCode3 )::JM,134486:CL,134088
134464 :: CALL :: call :: V :: v53.setPDBName(p4 $groupCode3 )::CL,60526:CL,60495
134475 :: CALL :: call :: V :: v53.setResidueNumber(v57)::CL,60537
134482 :: CALL :: call :: V :: v59.addAltLoc(v53)::CL,76228
134486 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v53::DD,134299
134547 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.convertAtom(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::JM,61125:JM,61130:CD,134556:CD,134560:CD,134564:CD,134572:CD,134600:CD,134604:CD,134608:CD,134620:CD,134632:CD,134636:CD,134640:CD,134682:CD,134705:JM,134641:JM,134646:JM,134645:JM,134651
134556 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $atom .getId()::JM,134640:JM,134641:JM,134646:JM,134645:JM,134651:JM,134556:JM,134636
134560 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,134640:JM,134641:JM,134646:JM,134645:JM,134651
134564 :: CALL :: call :: V :: v4.setPDBserial(v9)::CL,61172
134572 :: CALL :: call :: V :: v4.setName(v12)::CL,61207
134600 :: CALL :: call :: V :: v4.setX(v17)::CL,87659
134604 :: CALL :: call :: V :: v4.setY(v21)::CL,87675
134608 :: CALL :: call :: V :: v4.setZ(v25)::CL,87691
134620 :: CALL :: call :: V :: v4.setOccupancy(v32)::CL,61229
134632 :: CALL :: call :: V :: v4.setTempFactor(v37)::CL,61240
134636 :: CALL :: call :: Ljava/lang/String :: v40 = p1 $atom .getLabel_alt_id()::JM,134640:JM,134641:JM,134646:JM,134645:JM,134651:JM,134556:JM,134636
134640 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 167::CD,134641:CD,134645:CD,134672:JM,134646:JM,134651
134641 :: CALL :: call :: I :: v43 = v40.length()::JM,134641:JM,134646:JM,134645:JM,134651
134646 :: CALL :: call :: Z :: v47 = v40.equals(#(.))::JM,134641:JM,134646:JM,134645:JM,134651
134645 :: PRED :: IF :: Z :: if (v43 <= #(0)) goto 167::CD,134646:CD,134651:CD,134672:JM,134641:JM,134645
134651 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 167::CD,134662:CD,134672
134662 :: CALL :: call :: V :: v4.setAltLoc(v52)::CL,61183
134672 :: CALL :: call :: V :: v4.setAltLoc(v48)::CL,61183
134682 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v61 = valueOfIgnoreCase(v59)::CL,61251
134705 :: CALL :: call :: V :: v4.setElement(v72)::CL,61295
134762 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::JM,124746:JM,124762
134761 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::CE,134762:CD,134768
134765 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .revisionRecords::DD,134768
134770 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRevisionRecords(java.util.List)::JM,134775
134768 :: NORM :: compound :: Ljava/util/List :: return v3::CF,134762
134775 :: EXPR :: modify :: Ljava/util/List :: p0 $this .revisionRecords = p1 $revisionRecords ::
134790 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::CE,134791:CD,134798:CD,134819:CD,134823:JM,134817:JM,134812
134791 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::JM,125536
134795 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucRefs::JM,134807:JM,134823
134798 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,134807:JM,134823
134803 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,134807:JM,134823
134807 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,134817:JM,134808:JM,134812:DD,134818
134808 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,134817:JM,134808:JM,134812
134812 :: CALL :: call :: Z :: v16 = v14.equals(p1 $ref_id )::JM,134817:JM,134812
134818 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return v12::DD,134791
134819 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,134807:JM,134823
134817 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,134818:CD,134819:CD,134823:JM,134807
134823 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,134803:CD,134807:CD,134808:CD,134812:CD,134817:CD,134824:JM,134823
134824 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return #(null)::DD,134791
134836 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB()::CD,134840:CD,134844:CD,134848
134840 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
134844 :: CALL :: call :: V :: p0 $this .toPDB(v3)::CL,139006
134848 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
134858 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRfree()::CE,134859:CD,134865
134859 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getRfree()::JM,126785:JM,126798
134862 :: EXPR :: reference :: F :: v3 = p0 $this .rFree::DD,134865
134867 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.addChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,134879:CD,134885:CD,134889:CD,134909:CD,134913:JM,134914:JM,134919:JM,134890:JM,134895
134865 :: NORM :: compound :: F :: return v3::CF,134859
134879 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $comp )::
134885 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $comp .getPdbx_replaces()::JM,134914:JM,134913:JM,134919:JM,134885:JM,134890:JM,134889:JM,134895:JM,134909
134890 :: CALL :: call :: Z :: v14 = v10.equals(#(?))::JM,134914:JM,134913:JM,134919:JM,134890:JM,134895
134889 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,134890:CD,134895:JM,134914:JM,134913:JM,134919:JM,134885:JM,134889:JM,134909
134895 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 49::CD,134903:JM,134914:JM,134913:JM,134919:JM,134885:JM,134890:JM,134889:JM,134895:JM,134909
134903 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.put(v18, v10)::
134909 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $comp .getPdbx_replaced_by()::JM,134914:JM,134913:JM,134919:JM,134885:JM,134890:JM,134889:JM,134895:JM,134909
134914 :: CALL :: call :: Z :: v24 = v22.equals(#(?))::JM,134914:JM,134919:JM,134890:JM,134895
134913 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 81::CD,134914:CD,134919:JM,134890:JM,134895
134919 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 81::CD,134927
134927 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.put(v27, v22)::
134960 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.rebuildQuaternaryStructure(org.biojava.nbio.structure.Structure,java.util.List)::CE,134961:CD,134966:CD,134971:CD,134978:CD,135111:CD,135115:CD,135120:JM,135106:JM,135110:JM,134983:JM,134987:JM,134988:JM,134992:JM,134997:JM,135001
134961 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.rebuildQuaternaryStructure(org.biojava.nbio.structure.Structure,java.util.List)::JM,127611
134966 :: CALL :: call :: V :: p0 $this .orderTransformationsByChainId(p1 $asymUnit , p2 $transformations )::CL,139217
134971 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $asymUnit .clone()::JM,134978:JM,135106:JM,135110:JM,134983:JM,135111:JM,134987:JM,135115:JM,134988:JM,135120:JM,134992:JM,134997:JM,134971:JM,135001
134978 :: CALL :: call :: Ljava/util/Iterator :: v10 = p2 $transformations .iterator()::JM,134978:JM,135106:JM,135110:JM,134983:JM,135111:JM,134987:JM,135115:JM,134988:JM,135120:JM,134992:JM,134997:JM,134971:JM,135001
134983 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.next()::JM,135106:JM,134992:JM,135110:JM,134983:JM,135111:JM,134997:JM,134987:JM,135115:JM,135001
134987 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,135044:JM,135035:JM,135039:JM,134978:JM,135106:JM,135110:JM,134983:JM,135111:JM,134987:JM,135115:JM,134988:JM,135120:JM,134992:JM,134997:JM,134971:JM,135001
134988 :: CALL :: call :: Ljava/util/List :: v18 = p1 $asymUnit .getChains()::JM,134978:JM,135106:JM,135110:JM,134983:JM,135111:JM,134987:JM,135115:JM,134988:JM,135120:JM,134992:JM,134997:JM,134971:JM,135001
134992 :: CALL :: call :: Ljava/util/Iterator :: v20 = v18.iterator()::JM,135106:JM,134992:JM,135110:JM,134983:JM,135111:JM,134997:JM,134987:JM,135115:JM,135001
134997 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,135106:JM,135110:JM,134997:JM,134987:JM,135115:JM,135001
135002 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getInternalChainID()::JM,135121:JM,135002:JM,135006
135001 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,135121:JM,135002:JM,135006:JM,135014:JM,135031
135006 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 125::CF,135121:CD,135009:CD,135014:CD,135018:CD,135023:CD,135031
135009 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
135014 :: CALL :: call :: Ljava/lang/String :: v34 = v25.getChainID()::JM,135014
135018 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v30.append(v34)::
135023 :: CALL :: call :: Ljava/lang/String :: v38 = v36.toString()::
135031 :: CALL :: call :: Ljava/lang/String :: v41 = v25.getChainID()::JM,135121:JM,135031
135035 :: CALL :: call :: Ljava/lang/String :: v44 = v16.getChainId()::JM,135044:JM,135035:JM,135039
135039 :: CALL :: call :: Z :: v46 = v44.equals(v42)::JM,135044:JM,135039
135044 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 256::CD,135100:JM,135106:JM,135110:JM,134997:JM,134987:JM,135115:JM,135001
135100 :: CALL :: call :: V :: p0 $this .addChainAndModel(v7, v49, v72)::CL,139246
135106 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,135106:JM,135110:JM,134997:JM,134987:JM,135115:JM,135001
135110 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 60::CD,134997:CD,135001:CD,135002:CD,135006:CD,135035:CD,135039:CD,135044:CD,135106:CD,135121:JM,135110:JM,134987:JM,135115:JM,134992:JM,134983:JM,135111
135111 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,135106:JM,134992:JM,135110:JM,134983:JM,135111:JM,134997:JM,134987:JM,135115:JM,135001
135115 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 32::CD,134983:CD,134987:CD,134988:CD,134992:CD,135106:CD,135110:CD,135111:JM,134997:JM,135115:JM,135001
135120 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,134961
135121 :: EXPR :: assign :: null :: PHI v42 = v27, v41::JM,135044:JM,135035:JM,135039
135177 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toPDB()::CD,135184:CD,135221
135181 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .insCode::DD,135184
135184 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 34::CF,135185:CD,135192:CD,135197
135185 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
135192 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(v8)::
135197 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
135221 :: CALL :: call :: Ljava/lang/String :: v23 = format(#(%s%4d%-2s), v16)::
135430 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initPath()::CD,135433:CD,135435
135435 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 21::JM,40533:JM,40540
135433 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::DD,135435
135453 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initServerName()::CD,135456:CD,135458
135458 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 12::CD,135459
135459 :: CALL :: call :: Ljava/lang/String :: v5 = getServerName()::CL,47190
135456 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.serverName::DD,135458
135468 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::CD,135479:CD,135483
135479 :: CALL :: call :: Z :: v7 = v2.exists()::JM,135483
135483 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 39::CD,135495
135495 :: CALL :: call :: Z :: v15 = v2.mkdir()::
135526 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFileFromRemote(java.net.URL,java.io.File)::CD,135533:CD,135538:CD,135543:CD,135548:CD,135553
135533 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
135538 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $remoteURL )::
135543 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v9.append(#( to: ))::
135548 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v12.append(p2 $localFile )::
135553 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
135863 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setStandardFlag()::CD,135867
135867 :: CALL :: call :: Z :: v4 = isStandardChemComp(p0 $this )::JM,135871:CL,141562
135871 :: EXPR :: modify :: Z :: p0 $this .standard = v4::
135877 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setClassId(java.lang.Integer)::JM,135882
135882 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .classId = p1 $classId ::
135888 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setArchitectureId(java.lang.Integer)::JM,135893
135893 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .architectureId = p1 $architectureId ::
135899 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setTopologyId(java.lang.Integer)::JM,135904
135904 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .topologyId = p1 $topologyId ::
135910 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setHomologyId(java.lang.Integer)::JM,135915
135915 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .homologyId = p1 $homologyId ::
135922 :: EXIT :: exit :: Lorg/biojava/nbio/structure/cath/CathDomain :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::
135921 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::CE,135922:CD,135926:CD,135930:CD,135939:CD,135947:CD,135951:CD,135955:CD,135963:CD,135967:CD,135971:CD,135979:CD,135983:CD,135987:CD,135995:CD,135999:CD,136003:CD,136011:CD,136015:CD,136019:CD,136027:CD,136031:CD,136035:CD,136043:CD,136047:CD,136051:CD,136059:CD,136063:CD,136067:CD,136075:CD,136079:CD,136083:CD,136091:CD,136099:CD,136115:CD,136119
135926 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v4 = new org.biojava.nbio.structure.cath.CathDomain::DD,136119
135930 :: CALL :: call :: [Ljava/lang/String :: v8 = p1 $line .split(#(\s+))::
135939 :: CALL :: call :: V :: v4.setDomainName(v10)::CL,129607
135943 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v8[#(1)]::
135947 :: CALL :: call :: I :: v15 = parseInt(v13)::
135951 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::
135955 :: CALL :: call :: V :: v4.setClassId(v17)::CL,135877
135959 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v8[#(2)]::
135963 :: CALL :: call :: I :: v22 = parseInt(v20)::
135967 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::
135971 :: CALL :: call :: V :: v4.setArchitectureId(v24)::CL,135888
135975 :: EXPR :: reference :: Ljava/lang/Object :: v27 = v8[#(3)]::
135979 :: CALL :: call :: I :: v29 = parseInt(v27)::
135983 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
135987 :: CALL :: call :: V :: v4.setTopologyId(v31)::CL,135899
135991 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v8[#(4)]::
135995 :: CALL :: call :: I :: v36 = parseInt(v34)::
135999 :: CALL :: call :: Ljava/lang/Integer :: v38 = valueOf(v36)::
136003 :: CALL :: call :: V :: v4.setHomologyId(v38)::CL,135910
136007 :: EXPR :: reference :: Ljava/lang/Object :: v41 = v8[#(5)]::
136011 :: CALL :: call :: I :: v43 = parseInt(v41)::
136015 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v43)::
136019 :: CALL :: call :: V :: v4.setSequenceFamilyId(v45)::CL,141652
136023 :: EXPR :: reference :: Ljava/lang/Object :: v48 = v8[#(6)]::
136027 :: CALL :: call :: I :: v50 = parseInt(v48)::
136031 :: CALL :: call :: Ljava/lang/Integer :: v52 = valueOf(v50)::
136035 :: CALL :: call :: V :: v4.setOrthologousSequenceFamilyId(v52)::CL,141663
136039 :: EXPR :: reference :: Ljava/lang/Object :: v55 = v8[#(7)]::
136043 :: CALL :: call :: I :: v57 = parseInt(v55)::
136047 :: CALL :: call :: Ljava/lang/Integer :: v59 = valueOf(v57)::
136051 :: CALL :: call :: V :: v4.setLikeSequenceFamilyId(v59)::CL,141674
136055 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v8[#(8)]::
136059 :: CALL :: call :: I :: v64 = parseInt(v62)::
136063 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v64)::
136067 :: CALL :: call :: V :: v4.setIdenticalSequenceFamilyId(v66)::CL,141685
136071 :: EXPR :: reference :: Ljava/lang/Object :: v69 = v8[#(9)]::
136075 :: CALL :: call :: I :: v71 = parseInt(v69)::
136079 :: CALL :: call :: Ljava/lang/Integer :: v73 = valueOf(v71)::
136083 :: CALL :: call :: V :: v4.setDomainCounter(v73)::CL,141696
136087 :: EXPR :: reference :: Ljava/lang/Object :: v76 = v8[#(10)]::
136091 :: CALL :: call :: I :: v78 = parseInt(v76)::
136099 :: CALL :: call :: V :: v4.setLength(v80)::CL,129730
136115 :: CALL :: call :: V :: v4.setResolution(v87)::CL,141707
136119 :: NORM :: compound :: Lorg/biojava/nbio/structure/cath/CathDomain :: return v4::DD,135922
136162 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFile()::CD,136171
136171 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .getDomainFilename()::CL,136184
136184 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::CE,136185:CD,136196:CD,136201
136185 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::
136196 :: CALL :: call :: Ljava/lang/String :: v9 = format(#(ecod.%s.domains.txt), v5)::JM,136201
136201 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,136185
136207 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.downloadFile(java.net.URL,java.io.File)::CD,136216:CD,136221:CD,136225:CD,136230:CD,136234:CD,136243:CD,136313:CD,136317
136216 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
136221 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $destination )::CL,129442
136225 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
136230 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
136234 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
136243 :: CALL :: call :: Ljava/net/URLConnection :: v24 = prepareURLConnection(v22, #(60000))::CL,141727
136313 :: CALL :: call :: V :: copy(v19, p2 $destination )::CL,129480
136317 :: CALL :: call :: Z :: v63 = v19.delete()::
136394 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::JM,130464
136393 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::CE,136394:CD,136400
136397 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .domains::DD,136400
136402 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getVersion()::CE,136403:CD,136409
136403 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getVersion()::JM,130471
136400 :: NORM :: compound :: Ljava/util/List :: return v3::CF,136394
136406 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .version::DD,136409
136409 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,136403
136419 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,141776
136423 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v6 = new java.util.concurrent.atomic.AtomicBoolean::JM,136608:JM,136580:JM,136616:JM,136585:JM,136590:JM,136589:JM,136621:JM,136626:JM,136625:JM,136598:JM,136634:JM,136571:JM,136603:JM,136607:JM,136639:JM,136572:DD,136427
136427 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCla = v6::
136430 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedCla::JM,136433
136433 :: CALL :: call :: V :: v8.set(#(0))::JM,136433
136437 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,136608:JM,136580:JM,136616:JM,136585:JM,136590:JM,136589:JM,136621:JM,136626:JM,136625:JM,136598:JM,136634:JM,136571:JM,136603:JM,136607:JM,136639:JM,136572:DD,136441
136441 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDes = v11::
136447 :: CALL :: call :: V :: v13.set(#(0))::JM,136447
136444 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedDes::JM,136447
136451 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,136608:JM,136580:JM,136616:JM,136585:JM,136590:JM,136589:JM,136621:JM,136626:JM,136625:JM,136598:JM,136634:JM,136571:JM,136603:JM,136607:JM,136639:JM,136572:DD,136455
136455 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedHie = v15::
136458 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v17 = p0 $this .installedHie::JM,136461
136461 :: CALL :: call :: V :: v17.set(#(0))::JM,136461
136465 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v19 = new java.util.concurrent.atomic.AtomicBoolean::JM,136608:JM,136580:JM,136616:JM,136585:JM,136590:JM,136589:JM,136621:JM,136626:JM,136625:JM,136598:JM,136634:JM,136571:JM,136603:JM,136607:JM,136639:JM,136572:DD,136469
136469 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCom = v19::
136475 :: CALL :: call :: V :: v21.set(#(0))::JM,136475
136472 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v21 = p0 $this .installedCom::JM,136475
136482 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::JM,136608:JM,136580:JM,136616:JM,136585:JM,136590:JM,136589:JM,136621:JM,136626:JM,136625:JM,136598:JM,136634:JM,136571:JM,136603:JM,136607:JM,136639:JM,136572
136490 :: NORM :: declaration :: Ljava/util/HashMap :: v27 = new java.util.HashMap::JM,136608:JM,136580:JM,136616:JM,136585:JM,136590:JM,136589:JM,136621:JM,136626:JM,136625:JM,136598:JM,136634:JM,136571:JM,136603:JM,136607:JM,136639:JM,136572
136497 :: NORM :: declaration :: Ljava/util/HashMap :: v29 = new java.util.HashMap::JM,136608:JM,136580:JM,136616:JM,136585:JM,136590:JM,136589:JM,136621:JM,136626:JM,136625:JM,136598:JM,136634:JM,136571:JM,136603:JM,136607:JM,136639:JM,136572
136504 :: NORM :: declaration :: Ljava/util/TreeMap :: v31 = new java.util.TreeMap::JM,136608:JM,136580:JM,136616:JM,136585:JM,136590:JM,136589:JM,136621:JM,136626:JM,136625:JM,136598:JM,136634:JM,136571:JM,136603:JM,136607:JM,136639:JM,136572
136571 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,136571
136572 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $url )::
136580 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(p2 $claURL )::JM,136571
136585 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
136590 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(p1 $url )::
136589 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::JM,136571
136598 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(p3 $desURL )::JM,136571
136603 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
136607 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,136571
136608 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(p1 $url )::
136616 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v24.append(p4 $hieURL )::JM,136571
136621 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
136626 :: CALL :: call :: Ljava/lang/String :: v34 = valueOf(p1 $url )::
136625 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::JM,136571
136634 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v32.append(p5 $comURL )::JM,136571
136639 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
136670 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::
136669 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::CE,136670:CD,136675:CD,136677:CD,136681:CD,136716:CD,136720:CD,136721:CD,136730:CD,136734:CD,136797:JM,136794:JM,136764
136675 :: EXPR :: reference :: Ljava/util/Map :: v5 = org.biojava.nbio.structure.scop.BerkeleyScopInstallation.EQUIVALENT_VERSIONS::JM,136690:JM,136720
136677 :: CALL :: call :: Ljava/util/Set :: v7 = v5.entrySet()::JM,136690:JM,136720
136681 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,136690:JM,136720
136686 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,136690:JM,136720
136690 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,136695:JM,136712
136691 :: CALL :: call :: Ljava/lang/Object :: v17 = v15.getValue()::JM,136695
136695 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,136696
136698 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v18[v25]::JM,136707
136696 :: EXPR :: assign :: I :: v19 = v18.length::DD,136715
136702 :: CALL :: call :: Z :: v22 = v30.equals(v20)::JM,136707
136707 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 79::CD,136708:CD,136712:CD,136714:CD,136715:CD,136795:CD,136796:CD,136797
136708 :: CALL :: call :: Ljava/lang/Object :: v27 = v15.getKey()::JM,136712
136714 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,136796:CF,136795
136715 :: PRED :: IF :: Z :: if (v25 < v19) goto 54::CF,136797:CD,136702:CD,136707
136712 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::DD,136797
136716 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,136690:JM,136720
136720 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 20::CD,136686:CD,136690:CD,136691:CD,136695:CD,136696:CD,136715:CD,136716:CD,136795:CD,136796:CD,136797:JM,136720
136721 :: CALL :: call :: [Ljava/lang/String :: v33 = v29.split(#(\.))::
136726 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v33[#(0)]::JM,136734
136730 :: CALL :: call :: I :: v36 = parseInt(v34)::JM,136734
136734 :: PRED :: IF :: Z :: if (v36 != #(1)) goto 147::CF,136765:CF,136735:CD,136740:CD,136745:CD,136750:CD,136755:CD,136760:CD,136764:CD,136770:CD,136775:CD,136780:CD,136785:CD,136790:CD,136794
136735 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::JM,136764
136740 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(p1 $fileType )::JM,136764:JM,136794:JM,136797
136745 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(.scop.))::JM,136794:JM,136764
136750 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v58.append(v29)::JM,136794:JM,136764
136755 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(.txt))::JM,136794:JM,136764
136760 :: CALL :: call :: Ljava/lang/String :: v65 = v63.toString()::JM,136794:JM,136764
136764 :: NORM :: compound :: Ljava/lang/String :: return v65::DD,136670
136765 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::JM,136794
136770 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v37.append(p1 $fileType )::JM,136794:JM,136764:JM,136797
136775 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v41.append(#(.scope.))::JM,136794:JM,136764
136780 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v29)::JM,136794:JM,136764
136785 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#(-stable.txt))::JM,136794:JM,136764
136790 :: CALL :: call :: Ljava/lang/String :: v51 = v49.toString()::JM,136794:JM,136764
136794 :: NORM :: compound :: Ljava/lang/String :: return v51::DD,136670
136795 :: EXPR :: assign :: null :: PHI v30 = v29, v30::CF,136796:JM,136707:DD,136795:DD,136797
136796 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,136714:DD,136715
136797 :: EXPR :: assign :: null :: PHI v29 = p2 $version , v28, v30::JM,136690:JM,136720:JM,136794:JM,136764:DD,136795
136839 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.extractRanges(java.lang.String)::CD,136844:CD,136852:CD,136857:CD,136896
136844 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $range .split(#(,))::JM,136896:JM,136894
136849 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .scopVersion::JM,136857
136852 :: CALL :: call :: I :: v10 = v7.compareTo(#(1.73))::JM,136857
136859 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v6[v29]::JM,136867:JM,136874:JM,136889
136857 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 89::CD,136894:CD,136895:CD,136901:JM,136896
136863 :: CALL :: call :: I :: v15 = v13.length()::JM,136867
136867 :: PRED :: IF :: Z :: if (v15 >= #(2)) goto 48::CD,136869:CD,136874
136869 :: CALL :: call :: C :: v19 = v13.charAt(#(1))::JM,136874
136874 :: PRED :: IF :: Z :: if (v19 == #(58)) goto 78::CD,136875:CD,136880:CD,136885:CF,136893
136875 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::JM,136889
136880 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v13)::JM,136889
136885 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,136889
136889 :: EXPR :: modify :: Ljava/lang/Object :: v6[v29] = v27::
136894 :: EXPR :: assign :: I :: v12 = v6.length::CF,136895
136895 :: PRED :: IF :: Z :: if (v29 < v12) goto 30::CD,136863:CD,136867:CD,136893:CD,136894:CD,136901:JM,136896
136893 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,136901
136896 :: CALL :: call :: Ljava/util/List :: v31 = asList(v6)::JM,136896
136901 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,136893:DD,136895:CF,136894
137964 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::CE,137965:CD,137969:CD,137973:CD,137979:CD,137983:CD,137992:CD,137997:CD,138001:CD,138003:CD,138018:CD,138027:CD,138103:CD,138107
137965 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::JM,131922:JM,131957
137969 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,138036:JM,138107
137973 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $pdbId .substring(#(1), #(3))::
137979 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toLowerCase()::
137983 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
137984 :: EXPR :: reference :: Ljava/io/File :: v13 = p0 $this .splitDirPath::
137992 :: CALL :: call :: Z :: v16 = v4.add(v12)::
137997 :: CALL :: call :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = p0 $this .getObsoleteBehavior()::JM,138003:CL,142660
138003 :: PRED :: IF :: Z :: if (v18 != v19) goto 71::CF,138004:CD,138013:CF,138018
138001 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v19 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,138003
138004 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::
138005 :: EXPR :: reference :: Ljava/io/File :: v21 = p0 $this .obsoleteDirPath::
138013 :: CALL :: call :: Z :: v24 = v4.add(v20)::
138018 :: NORM :: declaration :: [Ljava/lang/String :: v26 = new java.lang.String[]::DD,138037
138027 :: CALL :: call :: Ljava/util/Iterator :: v31 = v4.iterator()::JM,138036:JM,138107
138032 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,138036:JM,138107
138036 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::CF,138037
138037 :: EXPR :: assign :: I :: v37 = v26.length::DD,138102
138043 :: CALL :: call :: Ljava/util/List :: v40 = p0 $this .getExtensions()::JM,138100:JM,138056:CL,34211
138047 :: CALL :: call :: Ljava/util/Iterator :: v42 = v40.iterator()::JM,138100:JM,138056
138052 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,138100:JM,138056
138058 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
138059 :: CALL :: call :: Ljava/lang/String :: v51 = valueOf(v38)::
138056 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::CF,138057
138057 :: NORM :: declaration :: Ljava/io/File :: v48 = new java.io.File::DD,138095:CF,138058
138067 :: CALL :: call :: Ljava/lang/String :: v54 = p1 $pdbId .toLowerCase()::
138071 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v49.append(v54)::
138076 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(v47)::
138081 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
138090 :: CALL :: call :: Z :: v63 = v48.exists()::JM,138094
138094 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 207::CF,138109:CD,138095:CD,138096:CD,138100
138095 :: NORM :: compound :: Ljava/io/File :: return v48::DD,137965
138096 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,138100:JM,138056
138102 :: PRED :: IF :: Z :: if (v65 < v37) goto 127::CD,138043:CD,138047:CD,138096:CD,138100:CD,138103:CD,138107:CD,138109:JM,138036
138103 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,138036:JM,138107
138100 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 146::CD,138052:CD,138056:CD,138057:CD,138058:CD,138059:CD,138067:CD,138071:CD,138076:CD,138081:CD,138090:CD,138094:CD,138101:CD,138102:CD,138110:CD,138109:JM,138100
138101 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v66 + #(1)::DD,138110
138107 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 99::CD,138032:CD,138036:CD,138037:CD,138102:CD,138108:CD,138110:JM,138107
138110 :: EXPR :: assign :: null :: PHI v65 = #(0), v64::DD,138102:DD,138109
138108 :: NORM :: compound :: Ljava/io/File :: return #(null)::DD,137965
138109 :: EXPR :: assign :: null :: PHI v66 = v65, v66::JM,138100:JM,138056:DD,138101:DD,138109
138179 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior::DD,138181:DD,138182
138176 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CE,138177:CD,138179:CD,138181
138177 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::
138182 :: NORM :: compound :: [I :: return v2::DD,138177
138183 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = values()::JM,138186:CL,142669
138181 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,138182:CD,138183:CD,138186:CD,138187:CD,138188:CD,138190:CD,138199:CD,138201:CD,138210:CD,138212:CD,138221:CD,138223:CD,138232:CD,138234:CD,138245
138186 :: EXPR :: assign :: I :: v6 = v5.length::CF,138187
138187 :: NORM :: declaration :: [I :: v7 = new []::DD,138245
138190 :: CALL :: call :: I :: v10 = v8.ordinal()::
138188 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v8 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::
138194 :: EXPR :: modify :: I :: v7[v10] = #(2)::
138199 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::
138201 :: CALL :: call :: I :: v16 = v14.ordinal()::
138205 :: EXPR :: modify :: I :: v7[v16] = #(3)::
138210 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v20 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::
138212 :: CALL :: call :: I :: v22 = v20.ordinal()::
138216 :: EXPR :: modify :: I :: v7[v22] = #(4)::
138223 :: CALL :: call :: I :: v28 = v26.ordinal()::
138221 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::
138227 :: EXPR :: modify :: I :: v7[v28] = #(5)::
138234 :: CALL :: call :: I :: v34 = v32.ordinal()::
138232 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v32 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::
138238 :: EXPR :: modify :: I :: v7[v34] = #(1)::
138245 :: NORM :: compound :: [I :: return v7::DD,138177
138287 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::CE,138288:CD,138294
138291 :: EXPR :: reference :: Z :: v3 = p0 $this .updateRemediatedFiles::DD,138294
138288 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::JM,131931
138294 :: NORM :: compound :: Z :: return v3::CF,138288
138326 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getCurrent(java.lang.String)::CD,138330:CD,138336
138330 :: CALL :: call :: Ljava/util/List :: v6 = getReplacement(p1 $oldPdbId , #(1), #(0))::JM,138336:JM,138341:CL,142696
138336 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,138337:CD,138341
138337 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,138341
138342 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.get(#(0))::JM,138341
138341 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 32::CD,138342:JM,138341
138361 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String,java.lang.String,boolean,java.io.File)::CD,138369:CD,138375:CD,138376:CD,138398:CD,138404:CD,138412:CD,138421:CD,138431
138369 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getDir(p1 $pdbId , p3 $obsolete )::CL,143153
138375 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
138376 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(p1 $pdbId )::CL,143251:CL,143282
138398 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $pdbId .substring(#(1), #(3))::
138404 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toLowerCase()::
138412 :: CALL :: call :: Ljava/lang/String :: v26 = p0 $this .getFilename(p1 $pdbId )::CL,143251:CL,143282
138421 :: CALL :: call :: Ljava/lang/String :: v28 = format(#(%s%s/%s/%s), v15)::
138431 :: PRED :: IF :: Z :: if (p4 $existingFile  == #(null)) goto 150::CD,138432:CD,138437:CD,138471:CD,138476:CD,138481:CD,138491:CD,138496:CD,138501:CD,138509
138432 :: CALL :: call :: Ljava/util/Date :: v33 = p0 $this .getLastModifiedTime(v29)::JM,138437:JM,138442:JM,138446:CL,143315
138438 :: CALL :: call :: J :: v38 = p4 $existingFile .lastModified()::JM,138446
138437 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 137::CD,138438:CD,138442:CD,138446:CD,138447:CD,138471:CD,138476:CD,138481:CD,138491:CD,138496:CD,138501:CD,138509
138442 :: CALL :: call :: J :: v40 = v33.getTime()::JM,138442:JM,138446
138446 :: EXPR :: assign :: Z :: v41 = v38 == v40::DD,138447
138447 :: PRED :: IF :: Z :: if (v41 < #(0)) goto 116::CD,138471:CD,138476:CD,138481:CD,138491:CD,138496:CD,138501:CD,138509
138471 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
138476 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v49.append(v28)::
138481 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
138491 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v58 = new java.lang.StringBuilder::
138496 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v58.append(v9)::
138501 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
138509 :: CALL :: call :: V :: downloadFile(v29, v9)::CL,136207
138572 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::CE,138573:CD,138581:CD,138585
138573 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::JM,132011
138581 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v7 = getStatus(v4)::JM,138585:CL,143400
138585 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 41::CD,138600:CD,138601
138596 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(0)]::DD,138600
138600 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v11::DD,138573
138601 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,138573
138616 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getId()::CE,138617:CD,138623
138617 :: EXIT :: exit :: J :: org.biojava.nbio.structure.HetatomImpl.getId()::JM,132503:JM,132530:JM,132545
138623 :: NORM :: compound :: J :: return v3::CF,138617
138620 :: EXPR :: reference :: J :: v3 = p0 $this .id::DD,138623
138648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.parseOperatorExpressionString(java.lang.String)::CD,138663:CD,138667
138663 :: CALL :: call :: Z :: v11 = isUnaryExpression(v9)::JM,138667:CL,143599
138667 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 34::CD,138668:CD,138676
138668 :: CALL :: call :: Ljava/util/List :: v16 = parseUnaryOperatorExpression(v9)::CL,143638
138676 :: CALL :: call :: Ljava/util/List :: v14 = parseBinaryOperatorExpression(v9)::CL,143648
138696 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::CE,138697:CD,138703
138697 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::JM,133402
138703 :: NORM :: compound :: Ljava/util/List :: return v3::CF,138697
138700 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .unaryOperators::DD,138703
138705 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getModelTransformationMatrix(java.lang.String)::CD,138713:CD,138734:CD,138738:JM,138732
138710 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .modelTransformations::JM,138738
138713 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,138738
138718 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,138738
138723 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,138732:CL,143746
138727 :: CALL :: call :: Z :: v16 = v14.equals(p1 $operator )::JM,138732
138734 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,138738
138732 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,138734:CD,138738
138738 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,138718:CD,138723:CD,138727:CD,138732:CD,138741:CD,138746:CD,138751:JM,90454:JM,138738
138741 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
138746 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $operator )::JM,138732
138751 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
138787 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v5 = new javax.vecmath.Matrix4d::DD,138795
138795 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v5::
138798 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $src .getId()::JM,138802:CL,143746
138802 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = v9::
138805 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $src .getChainId()::JM,138809:CL,143755
138809 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v11::
138822 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::JM,133588
138821 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::CE,138822:CD,138828
138825 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .binaryOperators::DD,138828
138828 :: NORM :: compound :: Ljava/util/List :: return v3::CF,138822
138848 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,138849:CD,138868:JM,90454:CD,138872:CD,138876
138849 :: EXIT :: exit :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::
138868 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v9 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::DD,138876
138872 :: CALL :: call :: V :: v9.setTransformationMatrix(v4)::CL,143764
138876 :: NORM :: compound :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: return v9::DD,138849
138887 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMTranspose()::CD,138894
138891 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Mtransp::DD,138894
138894 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,138899:CD,138903
138899 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v6 = p0 $this .getM()::CL,143775
138903 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v7 = new javax.vecmath.Matrix3d::DD,138907
138907 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Mtransp = v7::
138995 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setId(long)::JM,139000
139000 :: EXPR :: modify :: J :: p0 $this .id = p1 $id ::
139006 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB(java.lang.StringBuffer)::CD,139011:CD,139012:CD,139016:CD,139041:CD,139052:CD,139063:CD,139074:CD,139106:CD,139117:CD,139128:CD,139139:CD,139147:CD,139153:CD,139157:CD,139162
139011 :: NORM :: declaration :: Ljava/util/Formatter :: v4 = new java.util.Formatter::CF,139012
139012 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
139016 :: EXPR :: reference :: Ljava/util/Locale :: v7 = java.util.Locale.UK::
139038 :: EXPR :: reference :: I :: v17 = p0 $this .seqbegin::
139041 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
139049 :: EXPR :: reference :: C :: v21 = p0 $this .insertBegin::
139052 :: CALL :: call :: Ljava/lang/Character :: v23 = valueOf(v21)::
139063 :: CALL :: call :: Ljava/lang/Integer :: v27 = valueOf(v25)::
139060 :: EXPR :: reference :: I :: v25 = p0 $this .seqEnd::
139071 :: EXPR :: reference :: C :: v29 = p0 $this .insertEnd::
139074 :: CALL :: call :: Ljava/lang/Character :: v31 = valueOf(v29)::
139103 :: EXPR :: reference :: I :: v39 = p0 $this .dbSeqBegin::
139106 :: CALL :: call :: Ljava/lang/Integer :: v41 = valueOf(v39)::
139114 :: EXPR :: reference :: C :: v43 = p0 $this .idbnsBegin::
139117 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(v43)::
139125 :: EXPR :: reference :: I :: v47 = p0 $this .dbSeqEnd::
139128 :: CALL :: call :: Ljava/lang/Integer :: v49 = valueOf(v47)::
139139 :: CALL :: call :: Ljava/lang/Character :: v53 = valueOf(v51)::
139136 :: EXPR :: reference :: C :: v51 = p0 $this .idbnsEnd::
139147 :: CALL :: call :: Ljava/util/Formatter :: v55 = v4.format(#(DBREF  %4s %1s %4d%1s...), v11)::
139153 :: CALL :: call :: Ljava/lang/String :: v57 = v4.toString()::
139157 :: CALL :: call :: Ljava/lang/StringBuffer :: v59 = p1 $buf .append(v57)::
139162 :: CALL :: call :: V :: v4.close()::
139217 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.orderTransformationsByChainId(org.biojava.nbio.structure.Structure,java.util.List)::CD,139223:CD,139234
139223 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChainIds(p1 $asymUnit )::CL,143838
139234 :: CALL :: call :: V :: sort(p2 $transformations , v7)::
139246 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.addChainAndModel(org.biojava.nbio.structure.Structure,org.biojava.nbio.structure.Chain,java.lang.String)::CD,139256:CD,139260:CD,139272:CD,139277:CD,139294:CD,139326:JM,139300:JM,139304
139253 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .modelIndex::JM,139260
139256 :: CALL :: call :: I :: v8 = v6.size()::JM,139260
139260 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 25::CD,139264
139261 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .modelIndex::
139264 :: CALL :: call :: Z :: v13 = v10.add(#(PLACEHOLDER FOR ASYM UNIT))::
139269 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .modelIndex::JM,139326:JM,139277
139272 :: CALL :: call :: I :: v16 = v14.indexOf(p3 $modelId )::JM,139326:JM,139277:JM,139304
139278 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .modelIndex::
139277 :: PRED :: IF :: Z :: if (v16 != #(-1)) goto 67::CF,139326:CD,139281:CD,139289
139281 :: CALL :: call :: Z :: v20 = v18.add(p3 $modelId )::JM,139304:JM,139326:JM,139277
139286 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .modelIndex::JM,139326
139289 :: CALL :: call :: I :: v23 = v21.indexOf(p3 $modelId )::JM,139326:JM,139304:JM,139277
139294 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 83::CD,139300:CD,139304:JM,139326:JM,139277
139300 :: CALL :: call :: I :: v26 = p1 $s .nrModels()::JM,139300:JM,139304:JM,139326:JM,139277
139304 :: PRED :: IF :: Z :: if (v24 <= v26) goto 125::CF,139305:CD,139309
139305 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::
139309 :: CALL :: call :: Z :: v33 = v30.add(p2 $newChain )::JM,139300:JM,139304:JM,139326:JM,139277
139326 :: EXPR :: assign :: null :: PHI v24 = v16, v23::DD,139294:DD,139304
141562 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,141563:CD,141566:CD,141570:CD,141574:CD,141578
141563 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,135871
141566 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getMon_nstd_parent_comp_id()::JM,141584:JM,141578:JM,141579:CL,89864
141570 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $cc .getOne_letter_code()::JM,141585:JM,141591:CL,87171
141574 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v8 = p1 $cc .getPolymerType()::JM,141606:JM,141594:JM,141614:JM,141597:CL,87162
141578 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 29::CD,141579:CD,141584:CD,141585
141579 :: CALL :: call :: Z :: v12 = v4.equals(#(?))::JM,141584:JM,141579
141586 :: CALL :: call :: Z :: v15 = v6.equals(#(?))::JM,141591
141584 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 88::CD,141585:CD,141621
141585 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 88::CD,141586:CD,141591:CD,141621
141591 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 88::CD,141592:CD,141594:CD,141621
141594 :: PRED :: IF :: Z :: if (v8 == v16) goto 57::CD,141595:CD,141597:CD,141598:CD,141603
141595 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::CF,141597
141592 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v16 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::CF,141594
141598 :: CALL :: call :: Z :: v25 = performPeptideCheck(p1 $cc , v6)::JM,141603:CL,144103
141597 :: PRED :: IF :: Z :: if (v8 != v17) goto 62::CD,141598:CD,141603:CD,141604:CD,141606
141603 :: NORM :: compound :: Z :: return v25::DD,141563
141606 :: PRED :: IF :: Z :: if (v8 != v18) goto 74::CD,141607:CD,141611:CD,141612:CD,141614
141607 :: CALL :: call :: Z :: v23 = performRNACheck(p1 $cc )::JM,141611:CL,144142
141604 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v18 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::CF,141606
141611 :: NORM :: compound :: Z :: return v23::DD,141563
141614 :: PRED :: IF :: Z :: if (v8 != v19) goto 86::CD,141615:CD,141619:CD,141620
141615 :: CALL :: call :: Z :: v21 = performDNACheck(p1 $cc )::JM,141619:CL,144161
141612 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v19 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::CF,141614
141619 :: NORM :: compound :: Z :: return v21::DD,141563
141620 :: NORM :: compound :: Z :: return #(0)::DD,141563
141621 :: NORM :: compound :: Z :: return #(0)::DD,141563
141652 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setSequenceFamilyId(java.lang.Integer)::JM,141657
141657 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .sequenceFamilyId = p1 $sequenceFamilyId ::
141663 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setOrthologousSequenceFamilyId(java.lang.Integer)::JM,141668
141668 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .orthologousSequenceFamilyId = p1 $orthologousSequenceFamilyId ::
141674 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setLikeSequenceFamilyId(java.lang.Integer)::JM,141679
141679 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .likeSequenceFamilyId = p1 $likeSequenceFamilyId ::
141685 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setIdenticalSequenceFamilyId(java.lang.Integer)::JM,141690
141690 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .identicalSequenceFamilyId = p1 $identicalSequenceFamilyId ::
141696 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setDomainCounter(java.lang.Integer)::JM,141701
141701 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .domainCounter = p1 $domainCounter ::
141707 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setResolution(java.lang.Double)::JM,141712
141712 :: EXPR :: modify :: Ljava/lang/Double :: p0 $this .resolution = p1 $resolution ::
141727 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.prepareURLConnection(java.lang.String,int)::
141763 :: NORM :: declaration :: Ljava/io/BufferedReader :: v4 = new java.io.BufferedReader::JM,141763:JM,144214
141776 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setCacheLocation(java.lang.String)::CD,141781:CD,141783:CD,141788
141783 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,141788
141781 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::JM,141788
141790 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
141788 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,141789:CD,141790:CD,141798:CD,141800:CD,141805
141789 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
141798 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::
141800 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::
141805 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
142660 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::CE,142661:CD,142667
142661 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::JM,138003
142667 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: return v3::CF,142661
142664 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v3 = p0 $this .obsoleteBehavior::DD,142667
142670 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::JM,138186
142669 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::CF,142670:CD,142672:CD,142674:CD,142675:CD,142683
142674 :: EXPR :: assign :: I :: v4 = v2.length::DD,142675
142675 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::DD,142683
142672 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.ENUM$VALUES::DD,142674
142683 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: return v5::CF,142670
142696 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::CE,142697:CD,142707:CD,142711:JM,142962:JM,142865:JM,142743:JM,142853:JM,142821
142697 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::JM,138336:JM,138341
142707 :: CALL :: call :: Ljava/util/List :: v9 = getStatusIdRecords(v6)::JM,142711:JM,142716:CL,144676
142711 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 26::CD,142712:CD,142716:CD,142724
142712 :: CALL :: call :: I :: v12 = v9.size()::JM,142716
142716 :: PRED :: IF :: Z :: if (v12 == #(1)) goto 41::CD,142724:CD,142725:CD,142731:CD,142736:CD,142737:JM,142716
142724 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,142697
142725 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,142716
142731 :: CALL :: call :: Ljava/lang/Object :: v18 = v15.get(#(structureId))::JM,142736
142738 :: CALL :: call :: Z :: v21 = v19.equalsIgnoreCase(p1 $oldPdbId )::JM,142743:JM,142962:JM,142865:JM,142853:JM,142821
142736 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,142737:JM,142743
142737 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 79::CD,142738:CD,142743:CD,142751
142743 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,142751:CD,142752:CD,142757:CD,142758
142751 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,142697
142752 :: CALL :: call :: Ljava/lang/Object :: v24 = v15.get(#(status))::JM,142757
142758 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 126::CD,142766:CD,142767:CD,142771
142757 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,142758
142766 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,142697
142767 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v27 = fromString(v25)::JM,142771:CL,145046
142771 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 150::CF,142780:CD,142779:CD,142784:CD,142787:CD,142795
142779 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,142697
142780 :: NORM :: declaration :: Ljava/util/LinkedList :: v28 = new java.util.LinkedList::DD,142801:DD,142833:DD,142912:DD,142926:DD,142989
142787 :: CALL :: call :: I :: v33 = v27.ordinal()::
142784 :: CALL :: call :: [I :: v31 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,145265
142791 :: EXPR :: reference :: I :: v34 = v31[v33]::DD,142795
142795 :: PRED :: IF :: null :: switch v34::CD,142796:CD,142801:CD,142802:CD,142807:CD,142808:CD,142913:CD,142914:CD,142919:CD,142920
142796 :: CALL :: call :: Z :: v106 = v28.add(p1 $oldPdbId )::JM,142962:JM,142865:JM,142743:JM,142853:JM,142821
142802 :: CALL :: call :: Ljava/lang/Object :: v66 = v15.get(#(replacedBy))::JM,142807
142801 :: NORM :: compound :: Ljava/util/List :: return v28::DD,142697
142807 :: EXPR :: assign :: Ljava/lang/Object :: v67 = CHECKCAST v66::DD,142808
142808 :: PRED :: IF :: Z :: if (v67 != #(null)) goto 248::CD,142816:CD,142817:CD,142821:CD,142827:CD,142832
142816 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,142697
142817 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,142832
142822 :: CALL :: call :: Z :: v71 = v28.add(p1 $oldPdbId )::JM,142962:JM,142865:JM,142743:JM,142853:JM,142821
142821 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 268::CD,142822:JM,142832
142827 :: CALL :: call :: Z :: v73 = v69.equals(#(NONE))::JM,142832
142834 :: CALL :: call :: [Ljava/lang/String :: v75 = v69.split(#( ))::JM,142847
142832 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 281::CD,142833:CD,142834:CD,142843:CD,142847:CD,142911:CD,142912:CD,142990
142833 :: NORM :: compound :: Ljava/util/List :: return v28::DD,142697
142843 :: CALL :: call :: V :: sort(v75, v76)::
142847 :: EXPR :: assign :: I :: v79 = v75.length::DD,142911
142849 :: EXPR :: reference :: Ljava/lang/Object :: v80 = v75[v101]::DD,142867:DD,142898
142854 :: CALL :: call :: Ljava/util/List :: v82 = getReplacement(v80, p2 $recurse , p3 $includeObsolete )::CL,142696
142853 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 343::CD,142854:CD,142860:CD,142865
142860 :: CALL :: call :: V :: mergeReversed(v28, v82)::CL,145537
142866 :: NORM :: declaration :: [Ljava/lang/String :: v84 = new java.lang.String[]::JM,142871
142867 :: EXPR :: modify :: Ljava/lang/Object :: v84[#(0)] = v80::
142865 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 368::CD,142866:CD,142871:CD,142875:CD,142880:CD,142884:CD,142887:CD,142895
142871 :: CALL :: call :: Ljava/util/List :: v86 = asList(v84)::JM,142871
142875 :: CALL :: call :: V :: mergeReversed(v28, v86)::CL,145537
142880 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v89 = getStatus(v80)::CL,138572
142887 :: CALL :: call :: I :: v93 = v89.ordinal()::
142884 :: CALL :: call :: [I :: v91 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,145265
142891 :: EXPR :: reference :: I :: v94 = v91[v93]::DD,142895
142895 :: PRED :: IF :: null :: switch v94::CD,142897:CD,142902:CD,142906
142898 :: EXPR :: modify :: Ljava/lang/Object :: v95[#(0)] = v80::
142897 :: NORM :: declaration :: [Ljava/lang/String :: v95 = new java.lang.String[]::JM,142902
142902 :: CALL :: call :: Ljava/util/List :: v97 = asList(v95)::JM,142902
142906 :: CALL :: call :: V :: mergeReversed(v28, v97)::CL,145537
142910 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v101 + #(1)::DD,142990
142911 :: PRED :: IF :: Z :: if (v101 < v79) goto 316::CD,142853:CD,142910:CD,142990:CF,142912
142914 :: CALL :: call :: Ljava/lang/Object :: v37 = v15.get(#(replacedBy))::JM,142919
142912 :: NORM :: compound :: Ljava/util/List :: return v28::DD,142697
142913 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,142697
142919 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,142920
142920 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 470::CD,142921:CD,142926:CD,142927:CD,142931:CD,142936
142921 :: CALL :: call :: Z :: v64 = v28.add(p1 $oldPdbId )::JM,142962:JM,142865:JM,142743:JM,142853:JM,142821
142926 :: NORM :: compound :: Ljava/util/List :: return v28::DD,142697
142927 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toUpperCase()::JM,142936
142931 :: CALL :: call :: Z :: v43 = v40.equals(#(NONE))::JM,142936
142938 :: CALL :: call :: Z :: v45 = v28.add(p1 $oldPdbId )::JM,142962:JM,142865:JM,142743:JM,142853:JM,142821
142936 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 490::CD,142937:CD,142938:CD,142943:CD,142952:CD,142956:CD,142988:CD,142989:CD,142991
142937 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,142697
142943 :: CALL :: call :: [Ljava/lang/String :: v48 = v40.split(#( ))::JM,142956
142952 :: CALL :: call :: V :: sort(v48, v49)::
142958 :: EXPR :: reference :: Ljava/lang/Object :: v53 = v48[v62]::DD,142975
142956 :: EXPR :: assign :: I :: v52 = v48.length::DD,142988
142962 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 562::CD,142963:CD,142969:CD,142974:CD,142979:CD,142983
142963 :: CALL :: call :: Ljava/util/List :: v55 = getReplacement(v53, p2 $recurse , p3 $includeObsolete )::CL,142696
142969 :: CALL :: call :: V :: mergeReversed(v28, v55)::CL,145537
142974 :: NORM :: declaration :: [Ljava/lang/String :: v57 = new java.lang.String[]::JM,142979
142975 :: EXPR :: modify :: Ljava/lang/Object :: v57[#(0)] = v53::
142979 :: CALL :: call :: Ljava/util/List :: v59 = asList(v57)::JM,142979
142983 :: CALL :: call :: V :: mergeReversed(v28, v59)::CL,145537
142987 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v62 + #(1)::DD,142991
142990 :: EXPR :: assign :: null :: PHI v101 = #(0), v100::DD,142910:DD,142911
142991 :: EXPR :: assign :: null :: PHI v62 = #(0), v61::DD,142987:DD,142988
142988 :: PRED :: IF :: Z :: if (v62 < v52) goto 533::CD,142962:CD,142987:CD,142991:CF,142989
142989 :: NORM :: compound :: Ljava/util/List :: return v28::DD,142697
143154 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::
143153 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::CE,143154:CD,143159:CD,143199:CD,143203:CD,143220:CD,143221
143159 :: PRED :: IF :: Z :: if (p2 $obsolete  == #(0)) goto 37::CD,143160:CD,143166:CD,143170:CD,143180:CD,143186:CD,143190:CD,143221:JM,143159
143160 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $pdbId .substring(#(1), #(3))::JM,143159
143166 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toLowerCase()::
143170 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::DD,143221
143180 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .substring(#(1), #(3))::JM,143159
143186 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toLowerCase()::
143190 :: NORM :: declaration :: Ljava/io/File :: v13 = new java.io.File::DD,143221
143199 :: CALL :: call :: Z :: v26 = v23.exists()::JM,143203
143203 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,143204:CF,143220
143204 :: CALL :: call :: Z :: v28 = v23.mkdirs()::
143220 :: NORM :: compound :: Ljava/io/File :: return v23::DD,143154
143221 :: EXPR :: assign :: null :: PHI v23 = v20, v13::DD,143220
143251 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::CE,143252:CD,143256:CD,143257:CD,143261:CD,143269:CD,143274:CD,143278
143252 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::
143256 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,143278
143257 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $pdbId .toLowerCase()::
143261 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
143269 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v4.append(#(.cif.gz))::JM,143278
143274 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,143278
143278 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,143252
143282 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::CE,143283:CD,143287:CD,143292:CD,143296:CD,143301:CD,143306:CD,143310
143283 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::
143287 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,143310
143292 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $pdbId .toLowerCase()::JM,143310
143296 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(v8)::JM,143310
143301 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#(.ent.gz))::JM,143310
143306 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,143310
143310 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,143283
143315 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::CE,143316:CD,143320:CD,143324:CD,143341:CD,143380:CD,143383:JM,143350
143316 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::JM,138437:JM,138442:JM,138446
143320 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,143350:JM,143383:JM,143324:JM,143341
143324 :: CALL :: call :: Ljava/lang/String :: v9 = v6.getHeaderField(#(Last-Modified))::JM,143350:JM,143383:JM,143324:JM,143341
143342 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v15 = new java.text.SimpleDateFormat::JM,143350:JM,143383
143341 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 92::CF,143383:CF,143342:CD,143350
143350 :: CALL :: call :: Ljava/util/Date :: v20 = v15.parse(v9)::JM,143350:JM,143383
143383 :: EXPR :: assign :: null :: PHI v34 = #(null), v20, #(null), #(null)::CF,143380
143380 :: NORM :: compound :: Ljava/util/Date :: return v34::CF,143316
143400 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::CE,143401:CD,143404:CD,143405:CD,143406:CD,143410:JM,143523:JM,143415
143401 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::JM,138585
143406 :: CALL :: call :: Ljava/util/List :: v6 = getStatusIdRecords(p1 $pdbIds )::JM,143410:JM,143505:JM,143416:CL,144676
143404 :: EXPR :: assign :: I :: v3 = p1 $pdbIds .length::CF,143405
143405 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v4 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,143525
143410 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 26::CD,143411:CD,143415:CD,143416:CD,143419:CD,143428:JM,143505
143411 :: CALL :: call :: I :: v9 = v6.size()::JM,143505:JM,143416
143415 :: EXPR :: assign :: I :: v10 = p1 $pdbIds .length::CF,143416
143419 :: CALL :: call :: Ljava/lang/String :: v53 = toString(p1 $pdbIds )::
143416 :: PRED :: IF :: Z :: if (v9 == v10) goto 44::CD,143419:CD,143428:CD,143523:CD,143524:CD,143525:CD,143529
143430 :: CALL :: call :: Ljava/util/Iterator :: v14 = v6.iterator()::JM,143505:JM,143416
143428 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,143401
143435 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.next()::JM,143505
143440 :: CALL :: call :: Ljava/lang/Object :: v22 = v19.get(#(structureId))::JM,143445
143446 :: PRED :: IF :: Z :: if (v23 == #(null)) goto 186::CF,143527:CD,143451:CD,143456
143447 :: EXPR :: reference :: Ljava/lang/Object :: v24 = p1 $pdbIds [v49]::JM,143456
143445 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,143446:JM,143456
143451 :: CALL :: call :: Z :: v26 = v23.equalsIgnoreCase(v24)::JM,143456
143458 :: CALL :: call :: Ljava/lang/Object :: v29 = v19.get(#(status))::JM,143463
143456 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 110::CD,143458:CD,143463:CD,143464:CD,143485:CD,143526:CD,143527:CD,143528
143463 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,143464
143464 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 150::CD,143481:CD,143526
143476 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
143481 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v36 = fromString(v30)::JM,143526:CL,145046
143485 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 180::
143493 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
143497 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = v37::
143501 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,143505
143506 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 216::CF,143522
143505 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 63::CD,143435:CD,143440:CD,143445:CD,143446:CD,143501:CD,143527:CD,143528:JM,143505:CF,143506
143518 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
143522 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v49 + #(1)::DD,143529
143523 :: EXPR :: assign :: I :: v12 = p1 $pdbIds .length::CF,143524
143526 :: EXPR :: assign :: null :: PHI v37 = #(null), v36::DD,143485:DD,143497
143527 :: EXPR :: assign :: null :: PHI v49 = v48, v49, v49, v49::CF,143528:DD,143522:DD,143527
143524 :: PRED :: IF :: Z :: if (v48 < v12) goto 51::CD,143430:CD,143501:CD,143505:CD,143506:CD,143522:CD,143523:CD,143527:CD,143528:CD,143529:JM,143416:CF,143525
143525 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v4::DD,143401
143528 :: EXPR :: assign :: null :: PHI v42 = #(0), v42, v42, #(1)::JM,143505:DD,143506:DD,143528
143529 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,143524:DD,143527:CF,143523
143599 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,143616:JM,143617:JM,143614:CF,143600:CD,143603:CD,143608:CD,143613
143603 :: CALL :: call :: I :: v5 = p1 $expression .indexOf(#(())::JM,143603:JM,143616:JM,143617:JM,143608:JM,143614:JM,143613
143600 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,138667
143608 :: CALL :: call :: I :: v7 = p1 $expression .lastIndexOf(#(())::JM,143603:JM,143616:JM,143617:JM,143608:JM,143614:JM,143613
143614 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 25::CD,143615:CD,143616:CD,143619:CD,143620
143615 :: NORM :: compound :: Z :: return #(1)::CF,143600
143613 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 23::CD,143614:CD,143615
143619 :: NORM :: compound :: Z :: return v10::CF,143600
143616 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 38::CD,143617:CD,143620
143617 :: PRED :: IF :: Z :: if (v7 <= v5) goto 38::CD,143620
143620 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,143619
143638 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseUnaryOperatorExpression(java.lang.String)::CD,143642
143642 :: CALL :: call :: Ljava/util/List :: v4 = parseSubExpression(p1 $operatorExpression )::CL,145861
143648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseBinaryOperatorExpression(java.lang.String)::CD,143658:CD,143659:CD,143664:CD,143669:CD,143680:CD,143681:CD,143686:CD,143691:CD,143704:CD,143712:CD,143722
143658 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
143659 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
143664 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $expression )::
143669 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
143680 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v31 = new java.lang.IllegalArgumentException::
143681 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
143686 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(p1 $expression )::
143691 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
143704 :: CALL :: call :: Ljava/util/List :: v22 = parseSubExpression(v20)::CL,145861
143712 :: CALL :: call :: Ljava/util/List :: v26 = parseSubExpression(v24)::CL,145861
143722 :: CALL :: call :: Ljava/util/List :: v30 = v27.getOrderedPairs()::CL,146015
143746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::CE,143747:CD,143753
143747 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::JM,138732:JM,138802
143750 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,143753
143755 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::CE,143756:CD,143762
143753 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,143747
143759 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,143762
143756 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::JM,138809
143762 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,143756
143764 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setTransformationMatrix(javax.vecmath.Matrix4d)::JM,143769
143769 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = p1 $transformation ::
143775 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getM()::CD,143782
143779 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .M::DD,143782
143782 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,143787:CD,143797
143787 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,143791
143791 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .M = v5::
143797 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v9 = p0 $this .getMInv()::CL,146109
143838 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getChainIds(org.biojava.nbio.structure.Structure)::CD,143843:CD,143847:CD,143851:CD,143875:CD,143879:JM,143856:JM,143860
143843 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
143847 :: CALL :: call :: Ljava/util/List :: v7 = p1 $asymUnit .getChains()::JM,143875:JM,143856:JM,143847:JM,143879:JM,143860:JM,143851
143851 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,143875:JM,143856:JM,143879:JM,143860:JM,143851
143856 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,143875:JM,143856:JM,143879:JM,143860
143860 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,143861:JM,143865:JM,143881:JM,143866
143861 :: CALL :: call :: Ljava/lang/String :: v17 = v15.getInternalChainID()::JM,143861:JM,143865:JM,143881
143866 :: CALL :: call :: Ljava/lang/String :: v20 = v15.getChainID()::JM,143866:JM,143881
143865 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 59::CF,143881:CD,143866
143870 :: CALL :: call :: Z :: v23 = v4.add(v21)::
143875 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,143875:JM,143856:JM,143879:JM,143860
143879 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 26::CD,143856:CD,143860:CD,143861:CD,143865:CD,143870:CD,143875:CD,143881:JM,143879
143881 :: EXPR :: assign :: null :: PHI v21 = v17, v20::
144103 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::CE,144104:CD,144108:CD,144110:CD,144114:CD,144119
144104 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::JM,141603
144110 :: CALL :: call :: Ljava/lang/String :: v6 = v4.toString()::JM,144119
144108 :: EXPR :: reference :: Ljava/lang/Character :: v4 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_ONE_LETTER_CODE::JM,144119
144114 :: CALL :: call :: Z :: v8 = p2 $one .equals(v6)::JM,144119
144119 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 16::CD,144120:CD,144125:CD,144129
144120 :: NORM :: compound :: Z :: return #(0)::DD,144104
144125 :: CALL :: call :: Ljava/lang/Character :: v13 = getAminoOneLetter(v11)::JM,144129:CL,147386
144130 :: NORM :: compound :: Z :: return #(0)::DD,144104
144131 :: NORM :: compound :: Z :: return #(1)::DD,144104
144129 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 30::CD,144130:CD,144131
144142 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,144143:CD,144146:CD,144150:CD,144154
144143 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,141611
144146 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,144154:CL,82784
144150 :: CALL :: call :: I :: v6 = v4.length()::JM,144154
144154 :: PRED :: IF :: Z :: if (v6 != #(1)) goto 14::CD,144155:CD,144156
144155 :: NORM :: compound :: Z :: return #(1)::CF,144143
144156 :: NORM :: compound :: Z :: return #(0)::CF,144143
144162 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,141619
144161 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,144162:CD,144165:CD,144169:CD,144171:CD,144175:CD,144180
144165 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,144180:CL,82784
144171 :: CALL :: call :: Ljava/lang/String :: v7 = v5.toString()::JM,144180
144169 :: EXPR :: reference :: Ljava/lang/Character :: v5 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_NUCLEOTIDE::JM,144180
144175 :: CALL :: call :: Z :: v9 = v4.equals(v7)::JM,144180
144180 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,144181:CD,144186:CD,144190
144181 :: NORM :: compound :: Z :: return #(0)::DD,144162
144186 :: CALL :: call :: Ljava/lang/Character :: v14 = getDNAOneLetter(v12)::JM,144190:CL,147401
144190 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 33::CD,144191:CD,144192
144191 :: NORM :: compound :: Z :: return #(0)::DD,144162
144192 :: NORM :: compound :: Z :: return #(1)::DD,144162
144214 :: CALL :: call :: V :: p0 $this .parse(p1 $reader )::CL,147416
144676 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::CE,144677:CD,144680:CD,144681:CD,144686:CD,144690:CD,144714:CD,144725:CD,144730:CD,144786:CD,144787:CD,144791:CD,144792:CD,144797:CD,144893:CD,144907:CD,144910:CD,144924:CD,144927:CD,144941:CD,144948:CD,144949
144677 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::JM,142711:JM,142716:JM,143410:JM,143505:JM,143416
144680 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,144798:DD,144942:CF,144681
144681 :: EXPR :: assign :: I :: v4 = p1 $pdbIDs .length::
144686 :: CALL :: call :: Ljava/lang/String :: v8 = getProperty(#(PDB.SERVER))::JM,144690:JM,144686
144690 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 26::CD,144703
144703 :: CALL :: call :: Ljava/lang/String :: v17 = format(#(Got System property %s=%s), v13)::
144714 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v135 = new java.lang.IllegalArgumentException::
144725 :: CALL :: call :: Ljava/lang/String :: v25 = format(#(http://%s/pdb/rest/id...), v23)::JM,144948
144730 :: EXPR :: assign :: I :: v26 = p1 $pdbIDs .length::DD,144786
144736 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toUpperCase()::JM,144755:JM,144947:JM,144747
144742 :: CALL :: call :: Z :: v32 = v30.containsKey(v29)::JM,144747:JM,144755:JM,144947
144740 :: EXPR :: reference :: Ljava/util/Map :: v30 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,144747
144747 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 148::CF,144762:CD,144748:CD,144750:CD,144755:CD,144756:CD,144763:CD,144771:CD,144776:CD,144781:CD,144947
144750 :: CALL :: call :: Ljava/lang/Object :: v35 = v33.get(v29)::JM,144755:JM,144947:JM,144747
144748 :: EXPR :: reference :: Ljava/util/Map :: v33 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,144755
144755 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::
144756 :: CALL :: call :: Z :: v38 = v3.add(v36)::
144762 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v39 = new java.lang.StringBuilder::JM,144947
144763 :: CALL :: call :: Ljava/lang/String :: v41 = valueOf(v52)::
144771 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v39.append(v29)::JM,144947:JM,144755:JM,144747
144776 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#(,))::JM,144947
144781 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::JM,144947
144786 :: PRED :: IF :: Z :: if (v53 < v26) goto 102::CD,144736:CD,144740:CD,144742:CD,144747:CD,144785:CD,144947:CD,144948:CD,144949:JM,144791
144787 :: CALL :: call :: I :: v55 = v52.length()::JM,144791
144785 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v53 + #(1)::DD,144949:CF,144948
144791 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v55 - #(1)::JM,144797
144792 :: CALL :: call :: C :: v58 = v52.charAt(v56)::JM,144797
144798 :: NORM :: compound :: Ljava/util/List :: return v3::DD,144677
144797 :: PRED :: IF :: Z :: if (v58 != #(61)) goto 201::CD,144798:CD,144831:CD,144843:CD,144847:CD,144876:CD,144880:CD,144881:CD,144885:CD,144942
144831 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$PDBStatusXMLHandler :: v75 = new org.biojava.nbio.structure.PDBStatus$PDBStatusXMLHandler::JM,144880:JM,144852:JM,144843:JM,144856:JM,144847:JM,144876:JM,144881
144843 :: CALL :: call :: Ljava/util/List :: v80 = v75.getRecords()::JM,144880:JM,144852:JM,144843:JM,144856:JM,144847:JM,144876
144847 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,144880:JM,144852:JM,144856:JM,144847:JM,144876
144852 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,144880:JM,144852:JM,144856:JM,144876
144856 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,144857:JM,144862
144857 :: CALL :: call :: Ljava/lang/Object :: v90 = v87.get(#(structureId))::JM,144857:JM,144862
144862 :: EXPR :: assign :: Ljava/lang/Object :: v91 = CHECKCAST v90::JM,144867:JM,144863
144863 :: CALL :: call :: Ljava/lang/String :: v93 = v91.toUpperCase()::JM,144867:JM,144863
144867 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 355::CD,144868:CD,144870:JM,144880:JM,144852:JM,144856:JM,144876
144870 :: CALL :: call :: Ljava/lang/Object :: v96 = v94.put(v93, v87)::
144868 :: EXPR :: reference :: Ljava/util/Map :: v94 = org.biojava.nbio.structure.PDBStatus.recordsCache::
144876 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,144880:JM,144852:JM,144856:JM,144876
144880 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 308::CD,144852:CD,144856:CD,144857:CD,144862:CD,144863:CD,144867:CD,144876:JM,144880:JM,144881
144881 :: CALL :: call :: Ljava/util/List :: v98 = v75.getRecords()::JM,144881
144885 :: CALL :: call :: Z :: v112 = v3.addAll(v98)::
144893 :: CALL :: call :: Ljava/lang/String :: v107 = toString(p1 $pdbIDs )::
144907 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,144677
144910 :: CALL :: call :: Ljava/lang/String :: v131 = toString(p1 $pdbIDs )::
144927 :: CALL :: call :: Ljava/lang/String :: v120 = toString(p1 $pdbIDs )::
144924 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,144677
144942 :: NORM :: compound :: Ljava/util/List :: return v3::DD,144677
144941 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,144677
144947 :: EXPR :: assign :: null :: PHI v50 = v52, v49::DD,144948:CF,144785
144948 :: EXPR :: assign :: null :: PHI v52 = v25, v50::CF,144949:JM,144791:JM,144797:DD,144947
144949 :: EXPR :: assign :: null :: PHI v53 = #(0), v51::DD,144785:DD,144786
145046 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::CE,145047:CD,145050:CD,145054:CD,145059:CD,145171:CD,145172:CD,145177:CD,145182:CD,145187:CD,145196:CD,145197
145047 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::JM,142771:JM,143526
145050 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $statusStr .toUpperCase()::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145054 :: CALL :: call :: Z :: v7 = v4.equalsIgnoreCase(#(OBSOLETE))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145059 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 24::CD,145060:CD,145063:CD,145068:CD,145197:JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145149
145063 :: CALL :: call :: Z :: v11 = v4.equalsIgnoreCase(#(CURRENT))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145060 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v69 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,145197
145068 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 40::CD,145069:CD,145072:CD,145077:CD,145197:JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145069 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,145197
145072 :: CALL :: call :: Z :: v14 = v4.equalsIgnoreCase(#(AUTH))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145078 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,145197
145077 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,145078:CD,145081:CD,145086:CD,145197:JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145068:JM,145149
145081 :: CALL :: call :: Z :: v17 = v4.equalsIgnoreCase(#(HOLD))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145086 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 72::CD,145087:CD,145090:CD,145095:CD,145197:JM,145122:JM,145059:JM,145104:JM,145158:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145087 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,145197
145090 :: CALL :: call :: Z :: v20 = v4.equalsIgnoreCase(#(HPUB))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145095 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 88::CD,145096:CD,145099:CD,145104:CD,145197:JM,145122:JM,145059:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145099 :: CALL :: call :: Z :: v23 = v4.equalsIgnoreCase(#(POLC))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145096 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,145197
145104 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 104::CD,145105:CD,145108:CD,145113:CD,145197:JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145086:JM,145068:JM,145149
145105 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,145197
145108 :: CALL :: call :: Z :: v26 = v4.equalsIgnoreCase(#(PROC))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145114 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,145197
145113 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 120::CD,145114:CD,145117:CD,145122:CD,145197:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145117 :: CALL :: call :: Z :: v29 = v4.equalsIgnoreCase(#(REFI))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145122 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 136::CD,145123:CD,145126:CD,145131:CD,145197:JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145113:JM,145086:JM,145068:JM,145149
145123 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,145197
145126 :: CALL :: call :: Z :: v32 = v4.equalsIgnoreCase(#(REPL))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145131 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 152::CD,145132:CD,145135:CD,145140:CD,145197:JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145135 :: CALL :: call :: Z :: v35 = v4.equalsIgnoreCase(#(WAIT))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145132 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,145197
145140 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 168::CD,145141:CD,145144:CD,145149:CD,145197:JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068
145141 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,145197
145144 :: CALL :: call :: Z :: v38 = v4.equalsIgnoreCase(#(WDRN))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145150 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,145197
145149 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 184::CD,145150:CD,145153:CD,145158:CD,145197:JM,145122:JM,145059:JM,145104:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145153 :: CALL :: call :: Z :: v41 = v4.equalsIgnoreCase(#(MODEL))::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145158 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 200::CD,145159:CD,145168:CD,145197
145159 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,145197
145171 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v45 = new java.lang.IllegalArgumentException::
145168 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,145197
145172 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v46 = new java.lang.StringBuilder::
145177 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v46.append(v4)::JM,145122:JM,145059:JM,145104:JM,145158:JM,145095:JM,145140:JM,145077:JM,145131:JM,145113:JM,145086:JM,145068:JM,145149
145182 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v50.append(#('.))::
145187 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
145196 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v70::DD,145047
145197 :: EXPR :: assign :: null :: PHI v70 = v69, v68, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57::CF,145196
145266 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::
145265 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CE,145266:CD,145268:CD,145270
145270 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,145271:CD,145272:CD,145275:CD,145276:CD,145277:CD,145279:CD,145288:CD,145290:CD,145299:CD,145301:CD,145310:CD,145312:CD,145321:CD,145323:CD,145332:CD,145334:CD,145343:CD,145345:CD,145354:CD,145356:CD,145365:CD,145367:CD,145376:CD,145378:CD,145387:CD,145389:CD,145398:CD,145400:CD,145409:CD,145411:CD,145422
145271 :: NORM :: compound :: [I :: return v2::DD,145266
145268 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status::DD,145270:DD,145271
145275 :: EXPR :: assign :: I :: v6 = v5.length::CF,145276
145272 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = values()::JM,145275:CL,148892
145279 :: CALL :: call :: I :: v10 = v8.ordinal()::
145276 :: NORM :: declaration :: [I :: v7 = new []::DD,145422
145277 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v8 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::
145283 :: EXPR :: modify :: I :: v7[v10] = #(3)::
145290 :: CALL :: call :: I :: v16 = v14.ordinal()::
145288 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::
145294 :: EXPR :: modify :: I :: v7[v16] = #(2)::
145299 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v20 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::
145301 :: CALL :: call :: I :: v22 = v20.ordinal()::
145305 :: EXPR :: modify :: I :: v7[v22] = #(4)::
145310 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::
145312 :: CALL :: call :: I :: v28 = v26.ordinal()::
145316 :: EXPR :: modify :: I :: v7[v28] = #(5)::
145323 :: CALL :: call :: I :: v34 = v32.ordinal()::
145321 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v32 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::
145327 :: EXPR :: modify :: I :: v7[v34] = #(12)::
145334 :: CALL :: call :: I :: v40 = v38.ordinal()::
145332 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::
145338 :: EXPR :: modify :: I :: v7[v40] = #(1)::
145343 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = org.biojava.nbio.structure.PDBStatus$Status.POLC::
145345 :: CALL :: call :: I :: v46 = v44.ordinal()::
145349 :: EXPR :: modify :: I :: v7[v46] = #(6)::
145354 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = org.biojava.nbio.structure.PDBStatus$Status.PROC::
145356 :: CALL :: call :: I :: v52 = v50.ordinal()::
145360 :: EXPR :: modify :: I :: v7[v52] = #(7)::
145367 :: CALL :: call :: I :: v58 = v56.ordinal()::
145365 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.REFI::
145371 :: EXPR :: modify :: I :: v7[v58] = #(8)::
145378 :: CALL :: call :: I :: v64 = v62.ordinal()::
145376 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REPL::
145382 :: EXPR :: modify :: I :: v7[v64] = #(9)::
145387 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::
145389 :: CALL :: call :: I :: v70 = v68.ordinal()::
145393 :: EXPR :: modify :: I :: v7[v70] = #(13)::
145398 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v74 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::
145400 :: CALL :: call :: I :: v76 = v74.ordinal()::
145404 :: EXPR :: modify :: I :: v7[v76] = #(10)::
145411 :: CALL :: call :: I :: v82 = v80.ordinal()::
145409 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v80 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::
145415 :: EXPR :: modify :: I :: v7[v82] = #(11)::
145422 :: NORM :: compound :: [I :: return v7::DD,145266
145537 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.mergeReversed(java.util.List,java.util.List)::CD,145542:CD,145546:JM,145571:JM,145552:JM,145648:JM,145591:JM,145639:JM,145620:JM,145577:JM,145614:JM,145629:JM,145597
145542 :: CALL :: call :: Z :: v5 = p2 $other .isEmpty()::JM,145571:JM,145552:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145546 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 11::CD,145548:CD,145552:JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145548 :: CALL :: call :: Z :: v8 = p1 $merged .isEmpty()::JM,145571:JM,145552:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145552 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 29::CD,145553:CD,145559:CD,145563:CD,145567:CD,145571:CD,145625:CD,145629:CD,145652:JM,145552:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145597
145553 :: CALL :: call :: Z :: v51 = p1 $merged .addAll(p2 $other )::JM,145571:JM,145552:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145559 :: CALL :: call :: Ljava/util/ListIterator :: v10 = p1 $merged .listIterator()::JM,145571:JM,145552:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145563 :: CALL :: call :: Ljava/util/ListIterator :: v12 = p2 $other .listIterator()::JM,145571:JM,145552:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145567 :: CALL :: call :: Ljava/lang/Object :: v14 = v12.next()::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145577:JM,145614:JM,145629:JM,145597
145571 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,145652
145573 :: CALL :: call :: Ljava/lang/Object :: v19 = v10.next()::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145578 :: CALL :: call :: Ljava/lang/Object :: v22 = v10.previous()::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145577 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,145603:JM,145609:JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145583 :: CALL :: call :: V :: v10.add(v31)::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145587 :: CALL :: call :: Z :: v27 = v12.hasNext()::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145577:JM,145614:JM,145629:JM,145597
145591 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 96::CD,145593:CD,145597:CD,145598:CD,145603:CD,145650:JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145577:JM,145614:JM,145629
145593 :: CALL :: call :: Ljava/lang/Object :: v29 = v12.next()::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145577:JM,145614:JM,145629:JM,145597
145598 :: CALL :: call :: I :: v24 = v31.compareTo(v20)::JM,145603
145597 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,145650
145603 :: PRED :: IF :: Z :: if (v24 > #(0)) goto 80::CD,145583:CD,145587:CD,145591:CD,145604:CD,145609:CD,145651:JM,145571:JM,145648:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145604 :: CALL :: call :: Z :: v33 = v31.equals(v20)::JM,145609
145610 :: CALL :: call :: Z :: v35 = v12.hasNext()::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145577:JM,145614:JM,145629:JM,145597
145609 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 148::CF,145651:CD,145610:CD,145614:CD,145621:CD,145625:CD,145629:CD,145652:JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145577:JM,145597
145614 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 137::CD,145616:CD,145620:CD,145621:CD,145625:CD,145629:CD,145651:CD,145652:JM,145571:JM,145648:JM,145591:JM,145639:JM,145577:JM,145614:JM,145597
145616 :: CALL :: call :: Ljava/lang/Object :: v37 = v12.next()::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145577:JM,145614:JM,145629:JM,145597
145620 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,145651
145621 :: CALL :: call :: Ljava/lang/Object :: v41 = v10.next()::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145625 :: CALL :: call :: Z :: v17 = v10.hasNext()::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145630 :: CALL :: call :: V :: v10.add(v42)::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145629 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 57::CD,145573:CD,145577:CD,145578:CD,145598:CD,145603:CD,145630:CD,145644:CD,145648:CD,145650:JM,145571:JM,145591:JM,145639:JM,145620:JM,145546:JM,145614:JM,145629:JM,145597
145635 :: CALL :: call :: Ljava/lang/Object :: v47 = v12.next()::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145577:JM,145614:JM,145629:JM,145597
145639 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145640 :: CALL :: call :: V :: v10.add(v48)::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597
145644 :: CALL :: call :: Z :: v45 = v12.hasNext()::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145577:JM,145614:JM,145629:JM,145597
145650 :: EXPR :: assign :: null :: PHI v31 = v42, v30::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145577:JM,145614:JM,145629:JM,145597:JM,145603:JM,145609:DD,145651
145651 :: EXPR :: assign :: null :: PHI v39 = v31, v38::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597:DD,145652
145648 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 176::CD,145635:CD,145639:CD,145640:CD,145644:JM,145571:JM,145648:JM,145591:JM,145620:JM,145577:JM,145614:JM,145629:JM,145597
145652 :: EXPR :: assign :: null :: PHI v42 = v15, v39::JM,145571:JM,145648:JM,145591:JM,145639:JM,145620:JM,145546:JM,145577:JM,145614:JM,145629:JM,145597:DD,145650
145861 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseSubExpression(java.lang.String)::CD,145865:CD,145871:CD,145877:CD,145882:CD,145887:CD,145888:CD,145893:CD,145898:CD,145907:CD,145911:CD,145942:CD,145946:JM,145920
145865 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $expression .replace(#((), #())::JM,145920:JM,145877:JM,145882:JM,145946:JM,145865:JM,145871
145871 :: CALL :: call :: Ljava/lang/String :: v9 = v6.replace(#()), #())::JM,145920:JM,145877:JM,145882:JM,145946:JM,145871
145877 :: CALL :: call :: [Ljava/lang/String :: v13 = v9.split(#(,))::JM,145920:JM,145877:JM,145882:JM,145946
145882 :: CALL :: call :: Ljava/util/List :: v15 = asList(v13)::JM,145920:JM,145882:JM,145946
145887 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v17 = new java.lang.IllegalArgumentException::
145888 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
145893 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $expression )::JM,145920:JM,145877:JM,145882:JM,145946:JM,145865:JM,145871
145898 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,145920:JM,145877:JM,145882:JM,145946:JM,145871
145907 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::
145911 :: CALL :: call :: Ljava/util/Iterator :: v29 = v15.iterator()::JM,145920:JM,145946
145916 :: CALL :: call :: Ljava/lang/Object :: v34 = v29.next()::JM,145920:JM,145946
145920 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,145926
145921 :: CALL :: call :: Z :: v38 = v35.contains(#(-))::JM,145926
145926 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 117::CD,145927:CD,145931:CD,145937
145927 :: CALL :: call :: Ljava/util/List :: v40 = expandRange(v35)::CL,149152
145931 :: CALL :: call :: Z :: v42 = v26.addAll(v40)::
145937 :: CALL :: call :: Z :: v44 = v26.add(v35)::
145942 :: CALL :: call :: Z :: v31 = v29.hasNext()::JM,145920:JM,145946
145946 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 79::CD,145916:CD,145920:CD,145921:CD,145926:CD,145942:JM,145946
146015 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.CartesianProduct.getOrderedPairs()::CD,146019:CD,146023:CD,146030:CD,146034:CD,146042:CD,146081:CD,146085
146019 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
146023 :: CALL :: call :: I :: v6 = v4.size()::JM,146034
146020 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .list1::JM,146034
146027 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .list2::JM,146034
146030 :: CALL :: call :: I :: v9 = v7.size()::JM,146034
146034 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v6 * v9::
146039 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .list1::JM,146085
146042 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,146085
146047 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,146085
146055 :: CALL :: call :: Ljava/util/Iterator :: v23 = v21.iterator()::JM,146080
146052 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .list2::JM,146080
146060 :: CALL :: call :: Ljava/lang/Object :: v27 = v23.next()::JM,146080
146065 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/OrderedPair :: v29 = new org.biojava.nbio.structure.quaternary.OrderedPair::
146071 :: CALL :: call :: Z :: v32 = v3.add(v29)::
146076 :: CALL :: call :: Z :: v25 = v23.hasNext()::JM,146080
146080 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 66::CD,146060:CD,146065:JM,149257:JM,149260:CD,146071:CD,146076:JM,146080:JM,146085
146081 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,146085
146085 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 41::CD,146047:CD,146055:CD,146076:CD,146080:CD,146081:JM,146085
146109 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMInv()::CD,146116
146113 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Minv::DD,146116
146116 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,146121:CD,146175
146121 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,146192
146175 :: CALL :: call :: D :: v34 = p0 $this .getCstar()::CL,149318
146192 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Minv = v5::
147386 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::CE,147387:CD,147392:CD,147397:CD,147398
147387 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::JM,144129
147392 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,147397
147398 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,147387
147397 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,147398
147402 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::JM,144190
147401 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::CE,147402:CD,147407:CD,147412:CD,147413
147407 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,147412
147412 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,147413
147413 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,147402
147416 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.parse(java.io.BufferedReader)::CD,147421:CD,147426:CD,147430:CD,147434:CD,147856:CD,147861:CD,147866:CD,147910:CD,147961:CD,147965:CD,147989:CD,147990:CD,147991:CD,147992:CD,147997:CD,147998:CD,147999:CD,148000:CD,148001
147421 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
147426 :: CALL :: call :: Ljava/util/regex/Pattern :: v9 = compile(#(^\s*#.*ECOD\s*version...))::
147430 :: CALL :: call :: Ljava/util/regex/Pattern :: v12 = compile(#(^\s*#.*))::
147434 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $in .readLine()::JM,148000:JM,147965
147439 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v9.matcher(v251)::JM,147448
147444 :: CALL :: call :: Z :: v22 = v20.matches()::JM,147448
147448 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 78::CD,147449:CD,147458:CD,147463:CD,147467:CD,147993:CD,147994:CD,147995:CD,147996:JM,147448
147449 :: CALL :: call :: Ljava/lang/String :: v38 = v20.group(#(1))::JM,147448
147458 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v12.matcher(v251)::JM,147467
147463 :: CALL :: call :: Z :: v27 = v25.matches()::JM,147467
147467 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 874::CF,147993:CD,147468:CD,147473:CD,147474
147468 :: CALL :: call :: [Ljava/lang/String :: v30 = v251.split(#(	))::JM,147475:JM,147473:JM,147477:JM,147669:JM,147497
147474 :: PRED :: IF :: Z :: if (v31 == #(13)) goto 131::CD,147475:CD,147476:CD,147479:CD,147484:CD,147488:CD,147492:CD,147497:CD,147498:CD,147539:CD,147544:CD,147549:CD,147550:CD,147594:CD,147595:CD,147609:CD,147610:CD,147624:CD,147625:CD,147639:CD,147640:CD,147654:CD,147659:CD,147664:CD,147669:CD,147670:CD,147676:CD,147685:CD,147694:CD,147703:CD,147712:CD,147721:CD,147726:CD,147731:CD,147782:CD,147787:CD,147825:JM,150274:JM,150277:JM,150250:JM,150283:JM,150280:JM,150286:JM,150253:JM,150259:JM,150256:JM,150289:JM,150262:JM,150295:JM,150292:JM,150298:JM,150265:JM,150271:JM,150268:JM,150301:CD,147847:CD,147972:CD,147974:CD,147979:CD,147981:CD,147986:CD,147987:CD,147993:CD,147994:CD,147995:CD,147996
147475 :: EXPR :: assign :: I :: v33 = v30.length::DD,147476
147473 :: EXPR :: assign :: I :: v31 = v30.length::DD,147474
147478 :: PRED :: IF :: Z :: if (v35 != #(15)) goto 826::CD,147479:CD,147484:CD,147488:CD,147492:CD,147497:CD,147498:CD,147539:CD,147544:CD,147549:CD,147550:CD,147594:CD,147595:CD,147609:CD,147610:CD,147624:CD,147625:CD,147639:CD,147640:CD,147654:CD,147659:CD,147664:CD,147669:CD,147670:CD,147676:CD,147685:CD,147694:CD,147703:CD,147712:CD,147721:CD,147726:CD,147731:CD,147782:CD,147787:CD,147825:JM,150274:JM,150277:JM,150250:JM,150283:JM,150280:JM,150286:JM,150253:JM,150259:JM,150256:JM,150289:JM,150262:JM,150295:JM,150292:JM,150298:JM,150265:JM,150271:JM,150268:JM,150301:CD,147847:CD,147876:CD,147972:CD,147974:CD,147979:CD,147981:CD,147986:CD,147987:CD,147993:CD,147994:CD,147995:CD,147996
147479 :: EXPR :: assign :: Ljava/lang/Object :: v39 = #(0) + #(1)::DD,147492
147476 :: PRED :: IF :: Z :: if (v33 == #(14)) goto 131::CD,147477:CD,147478:CD,147479:CD,147484:CD,147488:CD,147492:CD,147497:CD,147498:CD,147539:CD,147544:CD,147549:CD,147550:CD,147594:CD,147595:CD,147609:CD,147610:CD,147624:CD,147625:CD,147639:CD,147640:CD,147654:CD,147659:CD,147664:CD,147669:CD,147670:CD,147676:CD,147685:CD,147694:CD,147703:CD,147712:CD,147721:CD,147726:CD,147731:CD,147782:CD,147787:CD,147825:JM,150274:JM,150277:JM,150250:JM,150283:JM,150280:JM,150286:JM,150253:JM,150259:JM,150256:JM,150289:JM,150262:JM,150295:JM,150292:JM,150298:JM,150265:JM,150271:JM,150268:JM,150301:CD,147847:CD,147972:CD,147974:CD,147979:CD,147981:CD,147986:CD,147987:CD,147993:CD,147994:CD,147995:CD,147996
147477 :: EXPR :: assign :: I :: v35 = v30.length::DD,147478
147480 :: EXPR :: reference :: Ljava/lang/Object :: v40 = v30[#(0)]::
147484 :: CALL :: call :: J :: v42 = parseLong(v40)::
147488 :: CALL :: call :: Ljava/lang/Long :: v44 = valueOf(v42)::
147492 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v39 + #(1)::DD,147499:DD,147972
147498 :: PRED :: IF :: Z :: if (v47 < #(14)) goto 233::CF,147972:CD,147499:CD,147504:CD,147509
147499 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v45 + #(1)::DD,147972
147497 :: EXPR :: assign :: I :: v47 = v30.length::DD,147498
147500 :: EXPR :: reference :: Ljava/lang/Object :: v49 = v30[v45]::JM,147509:JM,147520
147504 :: CALL :: call :: Z :: v52 = v49.equalsIgnoreCase(#(MANUAL_REP))::JM,147509
147509 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 197::CD,147515:CD,147520:CD,147972
147515 :: CALL :: call :: Z :: v57 = v49.equalsIgnoreCase(#(AUTO_NONREP))::JM,147520
147520 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 212::CD,147529:CD,147972
147529 :: CALL :: call :: Ljava/lang/Integer :: v64 = valueOf(v252)::
147539 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v66 + #(1)::DD,147654
147544 :: CALL :: call :: [Ljava/lang/String :: v72 = v69.split(#(\.))::JM,147639:JM,147594:JM,147624:JM,147609:JM,147551:JM,147549
147550 :: PRED :: IF :: Z :: if (v73 < #(3)) goto 261::CD,147551:CD,147552:CD,147553:CD,147974
147551 :: EXPR :: assign :: I :: v76 = v72.length::CF,147552
147549 :: EXPR :: assign :: I :: v73 = v72.length::DD,147550
147552 :: PRED :: IF :: Z :: if (#(4) >= v76) goto 324::CF,147974:CD,147553
147553 :: PRED :: IF :: Z :: if (v249 <= #(1)) goto 294::CD,147562:CD,147572:CD,147574:CD,147974
147562 :: CALL :: call :: Ljava/lang/Integer :: v83 = valueOf(v252)::
147574 :: PRED :: IF :: Z :: if (v249 == #(0)) goto 324::CF,147974:CD,147583:CD,147593
147572 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v249 + #(-1)::DD,147974
147583 :: CALL :: call :: Ljava/lang/Integer :: v93 = valueOf(v252)::
147594 :: EXPR :: assign :: I :: v97 = v72.length::DD,147595
147595 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 346::CD,147600:CD,147604
147593 :: EXPR :: assign :: Ljava/lang/Object :: v95 = v249 + #(-1)::DD,147974
147596 :: EXPR :: reference :: Ljava/lang/Object :: v98 = v72[#(0)]::
147600 :: CALL :: call :: I :: v100 = parseInt(v98)::
147604 :: CALL :: call :: Ljava/lang/Integer :: v102 = valueOf(v100)::
147610 :: PRED :: IF :: Z :: if (v104 <= #(1)) goto 369::CD,147615:CD,147619
147611 :: EXPR :: reference :: Ljava/lang/Object :: v105 = v72[#(1)]::
147609 :: EXPR :: assign :: I :: v104 = v72.length::DD,147610
147615 :: CALL :: call :: I :: v107 = parseInt(v105)::
147619 :: CALL :: call :: Ljava/lang/Integer :: v109 = valueOf(v107)::
147626 :: EXPR :: reference :: Ljava/lang/Object :: v113 = v72[#(2)]::
147624 :: EXPR :: assign :: I :: v111 = v72.length::DD,147625
147625 :: PRED :: IF :: Z :: if (v111 <= #(2)) goto 392::CD,147630:CD,147634
147630 :: CALL :: call :: I :: v115 = parseInt(v113)::
147634 :: CALL :: call :: Ljava/lang/Integer :: v117 = valueOf(v115)::
147639 :: EXPR :: assign :: I :: v119 = v72.length::DD,147640
147640 :: PRED :: IF :: Z :: if (v119 <= #(3)) goto 417::CD,147645:CD,147649
147641 :: EXPR :: reference :: Ljava/lang/Object :: v120 = v72[#(3)]::
147645 :: CALL :: call :: I :: v122 = parseInt(v120)::
147649 :: CALL :: call :: Ljava/lang/Integer :: v124 = valueOf(v122)::
147654 :: EXPR :: assign :: Ljava/lang/Object :: v126 = v68 + #(1)::DD,147659
147659 :: EXPR :: assign :: Ljava/lang/Object :: v128 = v126 + #(1)::DD,147664
147664 :: EXPR :: assign :: Ljava/lang/Object :: v130 = v128 + #(1)::DD,147671:DD,147979
147670 :: PRED :: IF :: Z :: if (v132 < #(15)) goto 468::CF,147979:CD,147671
147671 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v130 + #(1)::DD,147979
147669 :: EXPR :: assign :: I :: v132 = v30.length::DD,147670
147676 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v135 + #(1)::DD,147685
147685 :: EXPR :: assign :: Ljava/lang/Object :: v141 = v137 + #(1)::DD,147694
147694 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v141 + #(1)::DD,147703
147703 :: EXPR :: assign :: Ljava/lang/Object :: v149 = v145 + #(1)::DD,147712
147712 :: EXPR :: assign :: Ljava/lang/Object :: v153 = v149 + #(1)::DD,147721
147722 :: EXPR :: reference :: Ljava/lang/Object :: v158 = v30[v153]::JM,147731:JM,147738
147721 :: EXPR :: assign :: Ljava/lang/Object :: v157 = v153 + #(1)::
147726 :: CALL :: call :: Z :: v161 = v158.equals(#(NOT_DOMAIN_ASSEMBLY))::JM,147731
147731 :: PRED :: IF :: Z :: if (v161 == #(0)) goto 563::CD,147733:CD,147738:CD,147981
147733 :: CALL :: call :: Z :: v164 = v158.equals(#(IS_DOMAIN_ASSEMBLY))::JM,147738
147738 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 624::CD,147739:CD,147769:CD,147773:CD,147981
147739 :: PRED :: IF :: Z :: if (v248 <= #(1)) goto 598::CD,147743:CD,147752:CD,147754:CD,147981
147743 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v252)::
147754 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 636::CF,147981:CD,147758:CD,147767
147752 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v248 + #(-1)::DD,147981
147758 :: CALL :: call :: Ljava/lang/Integer :: v176 = valueOf(v252)::
147767 :: EXPR :: assign :: Ljava/lang/Object :: v178 = v248 + #(-1)::DD,147981
147769 :: CALL :: call :: J :: v180 = parseLong(v158)::
147773 :: CALL :: call :: Ljava/lang/Long :: v182 = valueOf(v180)::
147778 :: EXPR :: reference :: Ljava/lang/Object :: v186 = v30[v157]::JM,147787:JM,147792:JM,147788
147782 :: CALL :: call :: Z :: v189 = v186.equals(#(NO_LIGANDS_4A))::JM,147787
147787 :: PRED :: IF :: Z :: if (v189 != #(0)) goto 663::CD,147788:CD,147792:CD,147986:CD,147987
147788 :: CALL :: call :: Z :: v191 = v186.isEmpty()::JM,147792:JM,147788
147792 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 675::CD,147797:CD,147802:CD,147803:CD,147808:CD,147824:CD,147983:CD,147984:CD,147985:CD,147986:CD,147987
147797 :: CALL :: call :: [Ljava/lang/String :: v194 = v186.split(#(,))::JM,147808:JM,147803
147802 :: NORM :: declaration :: Ljava/util/LinkedHashSet :: v195 = new java.util.LinkedHashSet::CF,147803
147803 :: EXPR :: assign :: I :: v196 = v194.length::
147808 :: EXPR :: assign :: I :: v198 = v194.length::DD,147824
147818 :: CALL :: call :: Z :: v203 = v195.add(v201)::
147823 :: EXPR :: assign :: Ljava/lang/Object :: v204 = v205 + #(1)::DD,147985:CF,147983
147824 :: PRED :: IF :: Z :: if (v205 < v198) goto 710::CF,147986:CD,147818:CD,147823:CD,147983:CD,147984:CD,147985
147825 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v209 = new org.biojava.nbio.structure.ecod.EcodDomain::
147847 :: CALL :: call :: Z :: v212 = v4.add(v209)::
147856 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v219 = new java.lang.StringBuilder::
147861 :: CALL :: call :: Ljava/lang/StringBuilder :: v223 = v219.append(v261)::
147866 :: CALL :: call :: Ljava/lang/String :: v225 = v223.toString()::
147876 :: PRED :: IF :: Z :: if (v250 <= #(1)) goto 852::CD,147880:CD,147889:CD,147891:CD,147993:CD,147994:CD,147995:CD,147996
147880 :: CALL :: call :: Ljava/lang/Integer :: v231 = valueOf(v252)::
147891 :: PRED :: IF :: Z :: if (v250 != #(0)) goto 874::CF,147993:CD,147895:CD,147904:CD,147994:CD,147995:CD,147996
147889 :: EXPR :: assign :: Ljava/lang/Object :: v233 = v250 + #(-1)::DD,147995
147895 :: CALL :: call :: Ljava/lang/Integer :: v238 = valueOf(v252)::
147904 :: EXPR :: assign :: Ljava/lang/Object :: v240 = v248 + #(-1)::DD,147993
147905 :: CALL :: call :: Ljava/lang/String :: v246 = p1 $in .readLine()::JM,148000:JM,147965
147910 :: PRED :: IF :: Z :: if (v251 != #(null)) goto 48::CD,147439:CD,147444:CD,147448:CD,147905:CD,147909:CD,147993:CD,147994:CD,147995:CD,147996:CD,147997:CD,147998:CD,147999:CD,148000:CD,148001
147909 :: EXPR :: assign :: Ljava/lang/Object :: v247 = v263 + #(1)::DD,148001:CF,147997
147961 :: CALL :: call :: V :: p1 $in .close()::JM,148000:JM,147965
147966 :: CALL :: call :: V :: p1 $in .close()::JM,148000
147965 :: PRED :: IF :: Z :: if (p1 $in  == #(null)) goto 967::CD,147966:JM,148000
147974 :: EXPR :: assign :: null :: PHI v96 = v249, v86, v249, v95::CF,147594:DD,147990:DD,147994
147972 :: EXPR :: assign :: null :: PHI v66 = v45, v48, v48, v48::DD,147539
147979 :: EXPR :: assign :: null :: PHI v135 = v130, v133::DD,147676
147983 :: EXPR :: assign :: null :: PHI v253 = v250, v253::CF,147984:DD,147983:DD,147986:DD,147991
147981 :: EXPR :: assign :: null :: PHI v183 = v248, v171, v248, v178, v248::DD,147989:DD,147993
147986 :: EXPR :: assign :: null :: PHI v256 = v250, v253::CF,147987:DD,147991:DD,147995
147987 :: EXPR :: assign :: null :: PHI v258 = v252, v255::DD,147992:DD,147996
147984 :: EXPR :: assign :: null :: PHI v255 = v252, v255::CF,147985:DD,147984:DD,147987:DD,147992
147985 :: EXPR :: assign :: null :: PHI v205 = #(0), v204::DD,147823:DD,147824
147990 :: EXPR :: assign :: null :: PHI v215 = v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96::DD,147994
147991 :: EXPR :: assign :: null :: PHI v259 = v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v253, v253, v256, v256::DD,147995
147989 :: EXPR :: assign :: null :: PHI v214 = v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v183, v183, v183, v183, v183, v183, v183, v183, v183::DD,147993
147994 :: EXPR :: assign :: null :: PHI v242 = v249, v249, v96, v215, v249, v249, v249::CF,147995:DD,147998
147995 :: EXPR :: assign :: null :: PHI v243 = v250, v250, v256, v259, v233, v250, v250::CF,147996:DD,147999
147992 :: EXPR :: assign :: null :: PHI v261 = v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v255, v255, v258, v258::DD,147996
147993 :: EXPR :: assign :: null :: PHI v241 = v248, v248, v183, v214, v248, v248, v240::CF,147994:DD,147997
147998 :: EXPR :: assign :: null :: PHI v249 = #(5), v242::CF,147999:DD,147553:DD,147572:DD,147574:DD,147593:DD,147974:DD,147990:DD,147994
147999 :: EXPR :: assign :: null :: PHI v250 = #(10), v243::CF,148000:DD,147876:DD,147889:DD,147891:DD,147983:DD,147986:DD,147991:DD,147995
147996 :: EXPR :: assign :: null :: PHI v263 = v252, v252, v258, v261, v252, v252, v252::JM,148000:JM,147965:DD,147909
147997 :: EXPR :: assign :: null :: PHI v248 = #(1), v241::CF,147998:DD,147739:DD,147752:DD,147754:DD,147767:DD,147904:DD,147981:DD,147989:DD,147993
148000 :: EXPR :: assign :: null :: PHI v251 = v17, v246::CF,148001:DD,147910
148001 :: EXPR :: assign :: null :: PHI v252 = #(1), v247::DD,147984:DD,147987:DD,147992:DD,147996:CF,147910
148895 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = org.biojava.nbio.structure.PDBStatus$Status.ENUM$VALUES::DD,148897
148892 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.values()::CF,148893:CD,148895:CD,148897:CD,148898:CD,148906
148893 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.values()::JM,145275
148898 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,148906
148897 :: EXPR :: assign :: I :: v4 = v2.length::DD,148898
148906 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v5::CF,148893
149152 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::CE,149153:CD,149156:CD,149165:CD,149173:CD,149178:CD,149179:CD,149184:CD,149189:CD,149198:CD,149199:CD,149200:CD,149216:CD,149217:CD,149219
149153 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::
149156 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $expression .split(#(-))::
149161 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[#(0)]::JM,149219:JM,149199
149165 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,149219:JM,149199
149169 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v6[#(1)]::JM,149216:JM,149199
149173 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,149216:JM,149199
149178 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v16 = new java.lang.IllegalArgumentException::
149179 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
149184 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $expression )::
149189 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
149198 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,149217:CF,149199
149199 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v13 - v9::DD,149200
149200 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v26 + #(1)::
149206 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v34)::
149210 :: CALL :: call :: Z :: v32 = v25.add(v30)::
149215 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v34 + #(1)::DD,149219
149219 :: EXPR :: assign :: null :: PHI v34 = v9, v33::DD,149215:DD,149216
149216 :: PRED :: IF :: Z :: if (v34 <= v13) goto 75::CD,149206:CD,149210:CD,149215:CD,149219:CF,149217
149217 :: NORM :: compound :: Ljava/util/List :: return v25::DD,149153
149257 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element1 = p1 $element1 ::
149260 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element2 = p2 $element2 ::
149318 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getCstar()::CD,149337
149337 :: CALL :: call :: D :: v11 = p0 $this .getVolume()::CL,150458
150250 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .uid = p1 $uid ::
150253 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .domainId = p2 $domainId ::
150259 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .xGroup = p4 $xGroup ::
150256 :: EXPR :: modify :: Ljava/lang/Boolean :: p0 $this .manual = p3 $manual ::
150262 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .hGroup = p5 $hGroup ::
150265 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .tGroup = p6 $tGroup ::
150271 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p8 $pdbId ::
150268 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .fGroup = p7 $fGroup ::
150274 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p9 $chainId ::
150277 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .range = p10 $range ::
150283 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .architectureName = p12 $architectureName ::
150280 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .seqIdRange = p11 $seqId ::
150286 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .xGroupName = p13 $xGroupName ::
150289 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .hGroupName = p14 $hGroupName ::
150295 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fGroupName = p16 $fGroupName ::
150292 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tGroupName = p15 $tGroupName ::
150298 :: EXPR :: modify :: Ljava/lang/Long :: p0 $this .assemblyId = p17 $assemblyId ::
150301 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .ligands = p18 $ligands ::
150404 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::CE,150405:CD,150412:CD,150418
150405 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::
150412 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,150418:CL,150733
150418 :: NORM :: compound :: I :: return v8::CF,150405
150422 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::CE,150423:CD,150430:CD,150436
150423 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::
150430 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,150436:CL,150788
150436 :: NORM :: compound :: I :: return v8::CF,150423
150440 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::CE,150441:CD,150448:CD,150454
150441 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::
150448 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,150454:CL,150802
150454 :: NORM :: compound :: I :: return v8::CF,150441
150458 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getVolume()::CD,150465:CD,150466
150462 :: EXPR :: reference :: D :: v3 = p0 $this .volume::DD,150465
150466 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 16::CD,150477:CD,150481:CD,150485:CD,150492:CD,150496:CD,150497:CD,150501:CD,150508:CD,150512:CD,150513:CD,150517:CD,150524:CD,150528:CD,150529:CD,150533:CD,150537:CD,150541:CD,150545:CD,150549:CD,150553:CD,150554:CD,150555:CD,150559
150465 :: EXPR :: assign :: Z :: v5 = v3 < #(0.0 d)::DD,150466
150471 :: EXPR :: reference :: D :: v7 = p0 $this .a::DD,150477
150474 :: EXPR :: reference :: D :: v8 = p0 $this .b::DD,150477
150478 :: EXPR :: reference :: D :: v10 = p0 $this .c::DD,150481
150477 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 * v8::DD,150481
150482 :: EXPR :: reference :: D :: v13 = p0 $this .alphaRad::JM,150496:JM,150485
150481 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 * v10::DD,150559
150485 :: CALL :: call :: D :: v15 = cos(v13)::JM,150496:JM,150485
150489 :: EXPR :: reference :: D :: v16 = p0 $this .alphaRad::JM,150496:JM,150492
150492 :: CALL :: call :: D :: v18 = cos(v16)::JM,150496:JM,150492
150498 :: EXPR :: reference :: D :: v21 = p0 $this .betaRad::JM,150512:JM,150501
150496 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v15 * v18::CF,150497
150497 :: EXPR :: assign :: Ljava/lang/Object :: v20 = #(1.0 d) - v19::DD,150513
150501 :: CALL :: call :: D :: v23 = cos(v21)::JM,150512:JM,150501
150505 :: EXPR :: reference :: D :: v24 = p0 $this .betaRad::JM,150512:JM,150508
150508 :: CALL :: call :: D :: v26 = cos(v24)::JM,150512:JM,150508
150514 :: EXPR :: reference :: D :: v29 = p0 $this .gammaRad::JM,150528:JM,150517
150512 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v23 * v26::CF,150513
150513 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v20 - v27::DD,150529
150517 :: CALL :: call :: D :: v31 = cos(v29)::JM,150528:JM,150517
150521 :: EXPR :: reference :: D :: v32 = p0 $this .gammaRad::JM,150528:JM,150524
150524 :: CALL :: call :: D :: v34 = cos(v32)::JM,150528:JM,150524
150530 :: EXPR :: reference :: D :: v38 = p0 $this .alphaRad::JM,150533:JM,150537
150528 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v31 * v34::CF,150529
150529 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v28 - v35::DD,150554
150533 :: CALL :: call :: D :: v40 = cos(v38)::JM,150533:JM,150537
150538 :: EXPR :: reference :: D :: v42 = p0 $this .betaRad::JM,150545:JM,150541
150537 :: EXPR :: assign :: Ljava/lang/Object :: v41 = #(2.0 d) * v40::DD,150545
150541 :: CALL :: call :: D :: v44 = cos(v42)::JM,150545:JM,150541
150546 :: EXPR :: reference :: D :: v46 = p0 $this .gammaRad::JM,150549:JM,150553
150545 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v41 * v44::DD,150553
150549 :: CALL :: call :: D :: v48 = cos(v46)::JM,150549:JM,150553
150554 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v36 + v49::JM,150555:JM,150559
150555 :: CALL :: call :: D :: v52 = sqrt(v50)::JM,150555:JM,150559
150553 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v45 * v48::CF,150554
150559 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v11 * v52::DD,150560
150560 :: EXPR :: modify :: D :: p0 $this .volume = v53::
150734 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::JM,150418
150733 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,150734:CD,150739:CD,150743:CD,150747:CD,150752:JM,150768:JM,150756:JM,150777
150739 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $t1 .getId()::JM,150739:JM,150768:JM,150752:JM,150743:JM,150756:JM,150747:JM,150777
150743 :: CALL :: call :: Ljava/lang/String :: v8 = p2 $t2 .getId()::JM,150739:JM,150768:JM,150752:JM,150743:JM,150756:JM,150747:JM,150777
150747 :: CALL :: call :: Z :: v10 = v6.equals(v8)::JM,150752:JM,150747:JM,150777
150752 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 43::CD,150756:CD,150760:CD,150768:CD,150772:CD,150777:CD,150778:CD,150779
150753 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .val$chainIds::JM,150777
150756 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $t1 .getChainId()::JM,150739:JM,150768:JM,150752:JM,150743:JM,150756:JM,150747:JM,150777
150760 :: CALL :: call :: I :: v16 = v12.indexOf(v14)::JM,150777:JM,150752:JM,150747
150765 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .val$chainIds::JM,150777
150768 :: CALL :: call :: Ljava/lang/String :: v19 = p2 $t2 .getChainId()::JM,150739:JM,150768:JM,150752:JM,150743:JM,150756:JM,150747:JM,150777
150772 :: CALL :: call :: I :: v21 = v17.indexOf(v19)::JM,150777:JM,150752:JM,150747
150778 :: NORM :: compound :: I :: return v22::CF,150734
150779 :: NORM :: compound :: I :: return #(0)::CF,150734
150777 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v16 - v21::CF,150778
150788 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::CE,150789:CD,150794:CD,150799
150789 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::JM,150436
150794 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,150799
150799 :: NORM :: compound :: I :: return v6::CF,150789
150802 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::CE,150803:CD,150808:CD,150813
150803 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::JM,150454
150808 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,150813
150813 :: NORM :: compound :: I :: return v6::CF,150803
