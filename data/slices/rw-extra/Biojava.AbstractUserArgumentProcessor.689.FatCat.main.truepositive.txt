[43768]
1 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.fatcat.FatCat.main(java.lang.String[])::CD,9:JM,32959:JM,33023
9 :: CALL :: call :: V :: v3.process(p1 $argv )::JM,32959:JM,33023:CL,32864
410 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.<clinit>()::CD,414:CD,428
414 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
428 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::
588 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.<clinit>()::CD,591:CD,597:CD,599:CD,605:CD,607:CD,613:CD,615:CD,621:CD,623:CD,629:CD,631:CD,632:CD,638:CD,644:CD,650:CD,656
591 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,597
597 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY = v2::
599 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,605
605 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES = v6::
607 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,613
613 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED = v10::
615 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,621
621 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED = v14::
623 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v18 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,629
629 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD = v18::
631 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v23 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::
632 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v24 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::DD,634
634 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(0)] = v24::
638 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v25 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::DD,640
640 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(1)] = v25::
644 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::DD,646
646 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(2)] = v26::
650 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v27 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::DD,652
652 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(3)] = v27::
656 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v28 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::DD,658
658 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(4)] = v28::
707 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.<clinit>()::CD,717:CD,725:CD,729:CD,737:CD,741:CD,749:CD,753:CD,761:CD,765:CD,773:CD,777:CD,785:CD,789:CD,797:CD,801:CD,809:CD,813:CD,821:CD,825:CD,833:CD,837:CD,845:CD,849:CD,857:CD,861:CD,869:CD,873:CD,881:CD,885:CD,893:CD,897:CD,905:CD,909:CD,917:CD,921:CD,929:CD,933:CD,941:CD,945:CD,953:CD,957:CD,965:CD,969:CD,977:CD,981:CD,989:CD,993:CD,1001:CD,1005:CD,1013:CD,1017:CD,1025:CD,1029:CD,1035:CD,1041:CD,1090:CD,1119:CD,1120:CD,1128:CD,1132:CD,1140:CD,1144:CD,1152:CD,1156:CD,1164:CD,1168:CD,1176:CD,1180:CD,1188:CD,1192:CD,1200:CD,1204:CD,1212:CD,1216:CD,1224:CD,1228:CD,1236:CD,1240:CD,1248:CD,1252:CD,1260:CD,1264:CD,1272:CD,1276:CD,1284:CD,1288:CD,1296:CD,1300:CD,1308:CD,1312:CD,1320:CD,1324:CD,1332:CD,1336:CD,1344:CD,1348:CD,1356:CD,1360:CD,1368:CD,1372:CD,1380:CD,1384:CD,1392:CD,1396:CD,1404:CD,1408:CD,1416:CD,1420:CD,1426:CD,1436:CD,1445:CD,1454:CD,1460
717 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
725 :: CALL :: call :: Ljava/lang/Character :: v11 = valueOf(#(65))::
729 :: CALL :: call :: Ljava/lang/Object :: v13 = v7.put(#(DA), v11)::
737 :: CALL :: call :: Ljava/lang/Character :: v18 = valueOf(#(67))::
741 :: CALL :: call :: Ljava/lang/Object :: v20 = v14.put(#(DC), v18)::
749 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(#(71))::
753 :: CALL :: call :: Ljava/lang/Object :: v27 = v21.put(#(DG), v25)::
761 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(84))::
765 :: CALL :: call :: Ljava/lang/Object :: v34 = v28.put(#(DT), v32)::
773 :: CALL :: call :: Ljava/lang/Character :: v39 = valueOf(#(73))::
777 :: CALL :: call :: Ljava/lang/Object :: v41 = v35.put(#(DI), v39)::
785 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(#(65))::
789 :: CALL :: call :: Ljava/lang/Object :: v47 = v42.put(#(A), v45)::
797 :: CALL :: call :: Ljava/lang/Character :: v51 = valueOf(#(71))::
801 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.put(#(G), v51)::
809 :: CALL :: call :: Ljava/lang/Character :: v57 = valueOf(#(67))::
813 :: CALL :: call :: Ljava/lang/Object :: v59 = v54.put(#(C), v57)::
821 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(85))::
825 :: CALL :: call :: Ljava/lang/Object :: v66 = v60.put(#(U), v64)::
833 :: CALL :: call :: Ljava/lang/Character :: v70 = valueOf(#(73))::
837 :: CALL :: call :: Ljava/lang/Object :: v72 = v67.put(#(I), v70)::
845 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(88))::
849 :: CALL :: call :: Ljava/lang/Object :: v79 = v73.put(#(TAF), v77)::
857 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(88))::
861 :: CALL :: call :: Ljava/lang/Object :: v85 = v80.put(#(TC1), v83)::
869 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(88))::
873 :: CALL :: call :: Ljava/lang/Object :: v91 = v86.put(#(TFE), v89)::
881 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(88))::
885 :: CALL :: call :: Ljava/lang/Object :: v97 = v92.put(#(TFO), v95)::
893 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(88))::
897 :: CALL :: call :: Ljava/lang/Object :: v103 = v98.put(#(TGP), v101)::
905 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(88))::
909 :: CALL :: call :: Ljava/lang/Object :: v109 = v104.put(#(THX), v107)::
917 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(88))::
921 :: CALL :: call :: Ljava/lang/Object :: v115 = v110.put(#(TLC), v113)::
929 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(#(88))::
933 :: CALL :: call :: Ljava/lang/Object :: v121 = v116.put(#(TLN), v119)::
941 :: CALL :: call :: Ljava/lang/Character :: v125 = valueOf(#(88))::
945 :: CALL :: call :: Ljava/lang/Object :: v127 = v122.put(#(LCG), v125)::
953 :: CALL :: call :: Ljava/lang/Character :: v131 = valueOf(#(88))::
957 :: CALL :: call :: Ljava/lang/Object :: v133 = v128.put(#(TP1), v131)::
965 :: CALL :: call :: Ljava/lang/Character :: v137 = valueOf(#(88))::
969 :: CALL :: call :: Ljava/lang/Object :: v139 = v134.put(#(CP1), v137)::
977 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(88))::
981 :: CALL :: call :: Ljava/lang/Object :: v145 = v140.put(#(TPN), v143)::
989 :: CALL :: call :: Ljava/lang/Character :: v149 = valueOf(#(88))::
993 :: CALL :: call :: Ljava/lang/Object :: v151 = v146.put(#(CPN), v149)::
1001 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(88))::
1005 :: CALL :: call :: Ljava/lang/Object :: v157 = v152.put(#(GPN), v155)::
1013 :: CALL :: call :: Ljava/lang/Character :: v161 = valueOf(#(88))::
1017 :: CALL :: call :: Ljava/lang/Object :: v163 = v158.put(#(APN), v161)::
1025 :: CALL :: call :: Ljava/lang/Character :: v167 = valueOf(#(88))::
1029 :: CALL :: call :: Ljava/lang/Object :: v169 = v164.put(#(TPC), v167)::
1035 :: NORM :: declaration :: Ljava/util/HashMap :: v170 = new java.util.HashMap::
1041 :: NORM :: declaration :: [Ljava/lang/String :: v173 = new java.lang.String[]::DD,1090
1042 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(0)] = #(C)::
1046 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(1)] = #(G)::
1050 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(2)] = #(A)::
1054 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(3)] = #(T)::
1058 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(4)] = #(U)::
1062 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(5)] = #(I)::
1066 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(6)] = #(+C)::
1070 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(7)] = #(+G)::
1074 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(8)] = #(+A)::
1078 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(9)] = #(+T)::
1082 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(10)] = #(+U)::
1086 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(11)] = #(+I)::
1090 :: EXPR :: assign :: I :: v193 = v173.length::DD,1119
1092 :: EXPR :: reference :: Ljava/lang/Object :: v194 = v173[v206]::JM,1102
1098 :: CALL :: call :: I :: v197 = v194.length()::JM,1102
1102 :: EXPR :: assign :: Ljava/lang/Object :: v198 = v197 - #(1)::
1103 :: CALL :: call :: C :: v200 = v194.charAt(v198)::
1108 :: CALL :: call :: Ljava/lang/Character :: v202 = valueOf(v200)::
1112 :: CALL :: call :: Ljava/lang/Object :: v204 = v195.put(v194, v202)::
1118 :: EXPR :: assign :: Ljava/lang/Object :: v205 = v206 + #(1)::DD,1460
1119 :: PRED :: IF :: Z :: if (v206 < v193) goto 530::CF,1120:CD,1098:CD,1102:CD,1103:CD,1108:CD,1112:CD,1118:CD,1460
1120 :: NORM :: declaration :: Ljava/util/HashMap :: v207 = new java.util.HashMap::
1128 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(71))::
1132 :: CALL :: call :: Ljava/lang/Object :: v214 = v209.put(#(GLY), v212)::
1140 :: CALL :: call :: Ljava/lang/Character :: v218 = valueOf(#(65))::
1144 :: CALL :: call :: Ljava/lang/Object :: v220 = v215.put(#(ALA), v218)::
1152 :: CALL :: call :: Ljava/lang/Character :: v225 = valueOf(#(86))::
1156 :: CALL :: call :: Ljava/lang/Object :: v227 = v221.put(#(VAL), v225)::
1164 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(76))::
1168 :: CALL :: call :: Ljava/lang/Object :: v234 = v228.put(#(LEU), v232)::
1176 :: CALL :: call :: Ljava/lang/Character :: v238 = valueOf(#(73))::
1180 :: CALL :: call :: Ljava/lang/Object :: v240 = v235.put(#(ILE), v238)::
1188 :: CALL :: call :: Ljava/lang/Character :: v245 = valueOf(#(70))::
1192 :: CALL :: call :: Ljava/lang/Object :: v247 = v241.put(#(PHE), v245)::
1200 :: CALL :: call :: Ljava/lang/Character :: v252 = valueOf(#(89))::
1204 :: CALL :: call :: Ljava/lang/Object :: v254 = v248.put(#(TYR), v252)::
1212 :: CALL :: call :: Ljava/lang/Character :: v259 = valueOf(#(87))::
1216 :: CALL :: call :: Ljava/lang/Object :: v261 = v255.put(#(TRP), v259)::
1224 :: CALL :: call :: Ljava/lang/Character :: v266 = valueOf(#(80))::
1228 :: CALL :: call :: Ljava/lang/Object :: v268 = v262.put(#(PRO), v266)::
1236 :: CALL :: call :: Ljava/lang/Character :: v273 = valueOf(#(72))::
1240 :: CALL :: call :: Ljava/lang/Object :: v275 = v269.put(#(HIS), v273)::
1248 :: CALL :: call :: Ljava/lang/Character :: v280 = valueOf(#(75))::
1252 :: CALL :: call :: Ljava/lang/Object :: v282 = v276.put(#(LYS), v280)::
1260 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(82))::
1264 :: CALL :: call :: Ljava/lang/Object :: v289 = v283.put(#(ARG), v287)::
1272 :: CALL :: call :: Ljava/lang/Character :: v294 = valueOf(#(83))::
1276 :: CALL :: call :: Ljava/lang/Object :: v296 = v290.put(#(SER), v294)::
1284 :: CALL :: call :: Ljava/lang/Character :: v300 = valueOf(#(84))::
1288 :: CALL :: call :: Ljava/lang/Object :: v302 = v297.put(#(THR), v300)::
1296 :: CALL :: call :: Ljava/lang/Character :: v307 = valueOf(#(69))::
1300 :: CALL :: call :: Ljava/lang/Object :: v309 = v303.put(#(GLU), v307)::
1308 :: CALL :: call :: Ljava/lang/Character :: v314 = valueOf(#(81))::
1312 :: CALL :: call :: Ljava/lang/Object :: v316 = v310.put(#(GLN), v314)::
1320 :: CALL :: call :: Ljava/lang/Character :: v321 = valueOf(#(68))::
1324 :: CALL :: call :: Ljava/lang/Object :: v323 = v317.put(#(ASP), v321)::
1332 :: CALL :: call :: Ljava/lang/Character :: v328 = valueOf(#(78))::
1336 :: CALL :: call :: Ljava/lang/Object :: v330 = v324.put(#(ASN), v328)::
1344 :: CALL :: call :: Ljava/lang/Character :: v334 = valueOf(#(67))::
1348 :: CALL :: call :: Ljava/lang/Object :: v336 = v331.put(#(CYS), v334)::
1356 :: CALL :: call :: Ljava/lang/Character :: v341 = valueOf(#(77))::
1360 :: CALL :: call :: Ljava/lang/Object :: v343 = v337.put(#(MET), v341)::
1368 :: CALL :: call :: Ljava/lang/Character :: v347 = valueOf(#(77))::
1372 :: CALL :: call :: Ljava/lang/Object :: v349 = v344.put(#(MSE), v347)::
1380 :: CALL :: call :: Ljava/lang/Character :: v353 = valueOf(#(85))::
1384 :: CALL :: call :: Ljava/lang/Object :: v355 = v350.put(#(CSE), v353)::
1392 :: CALL :: call :: Ljava/lang/Character :: v359 = valueOf(#(85))::
1396 :: CALL :: call :: Ljava/lang/Object :: v361 = v356.put(#(SEC), v359)::
1404 :: CALL :: call :: Ljava/lang/Character :: v366 = valueOf(#(79))::
1408 :: CALL :: call :: Ljava/lang/Object :: v368 = v362.put(#(PYH), v366)::
1416 :: CALL :: call :: Ljava/lang/Character :: v372 = valueOf(#(79))::
1420 :: CALL :: call :: Ljava/lang/Object :: v374 = v369.put(#(PYL), v372)::
1426 :: NORM :: declaration :: Ljava/util/HashSet :: v375 = new java.util.HashSet::
1436 :: CALL :: call :: Z :: v380 = v377.add(v378)::
1445 :: CALL :: call :: Z :: v384 = v381.add(v382)::
1454 :: CALL :: call :: Z :: v388 = v385.add(v386)::
1460 :: EXPR :: assign :: null :: PHI v206 = #(0), v205::DD,1118:DD,1119
1701 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.ObsoleteBehavior.<clinit>()::CD,1704:CD,1710:CD,1712:CD,1718:CD,1720:CD,1726:CD,1728:CD,1729:CD,1735:CD,1741
1704 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1710
1710 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT = v2::
1712 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1718
1718 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE = v6::
1720 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1726
1726 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION = v10::
1728 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v15 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior[]::
1729 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v16 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::DD,1731
1731 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
1735 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v17 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::DD,1737
1737 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
1741 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION::DD,1743
1743 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
1790 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.<clinit>()::CD,1793:CD,1812
1793 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
1794 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
1798 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
1802 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
1806 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(pdb)::
1812 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
1813 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
1817 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
1821 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
1825 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(pdb)::
1860 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.<clinit>()::CD,1864:CD,1899:CD,1904:CD,1908:CD,1913:CD,1930
1864 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
1899 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
1904 :: CALL :: call :: Ljava/lang/String :: v27 = v21.getMessage()::
1908 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(v27)::
1913 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
1930 :: EXPR :: assign :: Ljava/lang/Exception :: v21 = catch <exc>::
1956 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.<clinit>()::CD,1959:CD,1960:JM,33632:JM,33635:JM,33638:JM,33641:JM,33644:JM,33614:JM,33647:JM,33617:JM,33650:JM,33620:JM,33653:JM,33623:JM,33656:JM,33626:JM,33629:CD,1988:CD,1990:CD,1991:CD,2047:CD,2049:CD,2050:CD,2106:CD,2108:CD,2109:CD,2149:CD,2151:CD,2152:CD,2180:CD,2182:CD,2183:CD,2211:CD,2213:CD,2238:CD,2240:CD,2241:CD,2269:CD,2271:CD,2272:CD,2304:CD,2306:CD,2307:CD,2343:CD,2345:CD,2346:CD,2378:CD,2380:CD,2405:CD,2407:CD,2408:CD,2440:CD,2442:CD,2443:CD,2475:CD,2477:CD,2478:CD,2514:CD,2516:CD,2517:CD,2573:CD,2575:CD,2576:CD,2632:CD,2634:CD,2635:CD,2691:CD,2693:CD,2694:CD,2750:CD,2752:CD,2777:CD,2779:CD,2780:CD,2812:CD,2814:CD,2815:CD,2847:CD,2849:CD,2850:CD,2886:CD,2888:CD,2889:CD,2933:CD,2935:CD,2936:CD,2984:CD,2986:CD,2987:CD,3043:CD,3045:CD,3046:CD,3110:CD,3112:CD,3113:CD,3169:CD,3171:CD,3172:CD,3220:CD,3222:CD,3223:CD,3267:CD,3269:CD,3270:CD,3310:CD,3312:CD,3313:CD,3345:CD,3347:CD,3348:CD,3384:CD,3386:CD,3387:CD,3443:CD,3445:CD,3446:CD,3490:CD,3492:CD,3493:CD,3537:CD,3539:CD,3540:CD,3592:CD,3594:CD,3595:CD,3623:CD,3625:CD,3626:CD,3658:CD,3660:CD,3661:CD,3693:CD,3695:CD,3696:CD,3732:CD,3734:CD,3735:CD,3775:CD,3777:CD,3778:CD,3826:CD,3828:CD,3829:CD,3885:CD,3887:CD,3888:CD,3948:CD,3950:CD,3951:CD,4011:CD,4013:CD,4014:CD,4066:CD,4068:CD,4069:CD,4105:CD,4107:CD,4108:CD,4148:CD,4150:CD,4151:CD,4183:CD,4185:CD,4186:CD,4222:CD,4224:CD,4225:CD,4261:CD,4263:CD,4264:CD,4300:CD,4302:CD,4303:CD,4347:CD,4349:CD,4350:CD,4398:CD,4400:CD,4401:CD,4445:CD,4447:CD,4448:CD,4480:CD,4482:CD,4483:CD,4511:CD,4513:CD,4514:CD,4546:CD,4548:CD,4549:CD,4585:CD,4587:CD,4588:CD,4624:CD,4626:CD,4627:CD,4663:CD,4665:CD,4666:CD,4698:CD,4700:CD,4701:CD,4733:CD,4735:CD,4736:CD,4768:CD,4770:CD,4771:CD,4807:CD,4809:CD,4810:CD,4850:CD,4852:CD,4853:CD,4889:CD,4891:CD,4892:CD,4924:CD,4926:CD,4927:CD,4959:CD,4961:CD,4962:CD,4998:CD,5000:CD,5001:CD,5033:CD,5035:CD,5036:CD,5064:CD,5066:CD,5067:CD,5103:CD,5105:CD,5106:CD,5150:CD,5152:CD,5153:CD,5209:CD,5211:CD,5212:CD,5272:CD,5274:CD,5275:CD,5339:CD,5341:CD,5342:CD,5402:CD,5404:CD,5405:CD,5461:CD,5463:CD,5464:CD,5508:CD,5510:CD,5511:CD,5547:CD,5549:CD,5550:CD,5586:CD,5588:CD,5589:CD,5625:CD,5627:CD,5628:CD,5668:CD,5670:CD,5671:CD,5715:CD,5717:CD,5718:CD,5762:CD,5764:CD,5765:CD,5797:CD,5799:CD,5800:CD,5828:CD,5830:CD,5831:CD,5859:CD,5861:CD,5862:CD,5894:CD,5896:CD,5897:CD,5933:CD,5935:CD,5936:CD,5976:CD,5978:CD,5979:CD,6023:CD,6025:CD,6026:CD,6070:CD,6072:CD,6073:CD,6121:CD,6123:CD,6124:CD,6172:CD,6174:CD,6175:CD,6207:CD,6209:CD,6210:CD,6246:CD,6248:CD,6249:CD,6285:CD,6287:CD,6288:CD,6320:CD,6322:CD,6323:CD,6355:CD,6357:CD,6358:CD,6390:CD,6392:CD,6393:CD,6425:CD,6427:CD,6428:CD,6456:CD,6458:CD,6482:CD,6484:CD,6485:CD,6491:CD,6497:CD,6503:CD,6509:CD,6515:CD,6521:CD,6527:CD,6533:CD,6539:CD,6545:CD,6551:CD,6557:CD,6563:CD,6569:CD,6575:CD,6581:CD,6587:CD,6593:CD,6599:CD,6605:CD,6611:CD,6617:CD,6623:CD,6629:CD,6635:CD,6641:CD,6647:CD,6653:CD,6659:CD,6665:CD,6671:CD,6677:CD,6683:CD,6689:CD,6695:CD,6701:CD,6707:CD,6713:CD,6719:CD,6725:CD,6731:CD,6737:CD,6743:CD,6749:CD,6755:CD,6761:CD,6767:CD,6773:CD,6779:CD,6785:CD,6791:CD,6797:CD,6803:CD,6809:CD,6815:CD,6821:CD,6827:CD,6833:CD,6839:CD,6845:CD,6851:CD,6857:CD,6863:CD,6869:CD,6875:CD,6881:CD,6887:CD,6893:CD,6899:CD,6905:CD,6911:CD,6917:CD,6923:CD,6929:CD,6935:CD,6941:CD,6947:CD,6953:CD,6959:CD,6965:CD,6971:CD,6977:CD,6983:CD,6989:CD,6995:CD,7001:CD,7007:CD,7013:CD,7019:CD,7025:CD,7031:CD,7037:CD,7043:CD,7049:CD,7055:CD,7061:CD,7067:CD,7073:CD,7079:CD,7085:CD,7091:CD,7097:CD,7103:CD,7109:CD,7115:CD,7123:CD,7129:CD,7132:CD,7155:CD,7157
1959 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v2 = new org.biojava.nbio.structure.Element::DD,1988:CF,1960
1960 :: NORM :: declaration :: [I :: v10 = new []::
1961 :: EXPR :: modify :: I :: v10[#(0)] = #(1)::
1988 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.H = v2::
1990 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v14 = new org.biojava.nbio.structure.Element::DD,2047:CF,1991
1991 :: NORM :: declaration :: [I :: v24 = new []::
1992 :: EXPR :: modify :: I :: v24[#(0)] = #(-4)::
1996 :: EXPR :: modify :: I :: v24[#(1)] = #(-3)::
2000 :: EXPR :: modify :: I :: v24[#(2)] = #(-2)::
2004 :: EXPR :: modify :: I :: v24[#(4)] = #(-1)::
2008 :: EXPR :: modify :: I :: v24[#(5)] = #(1)::
2012 :: EXPR :: modify :: I :: v24[#(6)] = #(2)::
2016 :: EXPR :: modify :: I :: v24[#(7)] = #(3)::
2020 :: EXPR :: modify :: I :: v24[#(8)] = #(4)::
2047 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.C = v14::
2049 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v35 = new org.biojava.nbio.structure.Element::DD,2106:CF,2050
2050 :: NORM :: declaration :: [I :: v41 = new []::
2051 :: EXPR :: modify :: I :: v41[#(0)] = #(-3)::
2055 :: EXPR :: modify :: I :: v41[#(1)] = #(-2)::
2059 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
2063 :: EXPR :: modify :: I :: v41[#(4)] = #(1)::
2067 :: EXPR :: modify :: I :: v41[#(5)] = #(2)::
2071 :: EXPR :: modify :: I :: v41[#(6)] = #(3)::
2075 :: EXPR :: modify :: I :: v41[#(7)] = #(4)::
2079 :: EXPR :: modify :: I :: v41[#(8)] = #(5)::
2106 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.N = v35::
2108 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v45 = new org.biojava.nbio.structure.Element::DD,2149:CF,2109
2109 :: NORM :: declaration :: [I :: v51 = new []::
2110 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
2114 :: EXPR :: modify :: I :: v51[#(1)] = #(-1)::
2118 :: EXPR :: modify :: I :: v51[#(3)] = #(1)::
2122 :: EXPR :: modify :: I :: v51[#(4)] = #(2)::
2149 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.O = v45::
2151 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v55 = new org.biojava.nbio.structure.Element::DD,2180:CF,2152
2152 :: NORM :: declaration :: [I :: v58 = new []::
2153 :: EXPR :: modify :: I :: v58[#(1)] = #(1)::
2180 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.D = v55::
2182 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v61 = new org.biojava.nbio.structure.Element::DD,2211:CF,2183
2183 :: NORM :: declaration :: [I :: v64 = new []::
2184 :: EXPR :: modify :: I :: v64[#(1)] = #(1)::
2211 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.T = v61::
2213 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v67 = new org.biojava.nbio.structure.Element::DD,2238
2238 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.He = v67::
2240 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v77 = new org.biojava.nbio.structure.Element::DD,2269:CF,2241
2241 :: NORM :: declaration :: [I :: v83 = new []::
2242 :: EXPR :: modify :: I :: v83[#(1)] = #(1)::
2269 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Li = v77::
2271 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v87 = new org.biojava.nbio.structure.Element::DD,2304:CF,2272
2272 :: NORM :: declaration :: [I :: v92 = new []::
2273 :: EXPR :: modify :: I :: v92[#(1)] = #(1)::
2277 :: EXPR :: modify :: I :: v92[#(2)] = #(2)::
2304 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Be = v87::
2306 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v96 = new org.biojava.nbio.structure.Element::DD,2343:CF,2307
2307 :: NORM :: declaration :: [I :: v101 = new []::
2308 :: EXPR :: modify :: I :: v101[#(1)] = #(1)::
2312 :: EXPR :: modify :: I :: v101[#(2)] = #(2)::
2316 :: EXPR :: modify :: I :: v101[#(3)] = #(3)::
2343 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.B = v96::
2345 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v105 = new org.biojava.nbio.structure.Element::DD,2378:CF,2346
2346 :: NORM :: declaration :: [I :: v111 = new []::
2347 :: EXPR :: modify :: I :: v111[#(0)] = #(-1)::
2351 :: EXPR :: modify :: I :: v111[#(2)] = #(1)::
2378 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.F = v105::
2380 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v115 = new org.biojava.nbio.structure.Element::DD,2405
2405 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ne = v115::
2407 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v125 = new org.biojava.nbio.structure.Element::DD,2440:CF,2408
2408 :: NORM :: declaration :: [I :: v130 = new []::
2409 :: EXPR :: modify :: I :: v130[#(0)] = #(-1)::
2413 :: EXPR :: modify :: I :: v130[#(2)] = #(1)::
2440 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Na = v125::
2442 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v134 = new org.biojava.nbio.structure.Element::DD,2475:CF,2443
2443 :: NORM :: declaration :: [I :: v140 = new []::
2444 :: EXPR :: modify :: I :: v140[#(1)] = #(1)::
2448 :: EXPR :: modify :: I :: v140[#(2)] = #(2)::
2475 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mg = v134::
2477 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v144 = new org.biojava.nbio.structure.Element::DD,2514:CF,2478
2478 :: NORM :: declaration :: [I :: v149 = new []::
2479 :: EXPR :: modify :: I :: v149[#(1)] = #(1)::
2483 :: EXPR :: modify :: I :: v149[#(2)] = #(2)::
2487 :: EXPR :: modify :: I :: v149[#(3)] = #(3)::
2514 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Al = v144::
2516 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v153 = new org.biojava.nbio.structure.Element::DD,2573:CF,2517
2517 :: NORM :: declaration :: [I :: v159 = new []::
2518 :: EXPR :: modify :: I :: v159[#(0)] = #(-4)::
2522 :: EXPR :: modify :: I :: v159[#(1)] = #(-3)::
2526 :: EXPR :: modify :: I :: v159[#(2)] = #(-2)::
2530 :: EXPR :: modify :: I :: v159[#(3)] = #(-1)::
2534 :: EXPR :: modify :: I :: v159[#(5)] = #(1)::
2538 :: EXPR :: modify :: I :: v159[#(6)] = #(2)::
2542 :: EXPR :: modify :: I :: v159[#(7)] = #(3)::
2546 :: EXPR :: modify :: I :: v159[#(8)] = #(4)::
2573 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Si = v153::
2575 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v163 = new org.biojava.nbio.structure.Element::DD,2632:CF,2576
2576 :: NORM :: declaration :: [I :: v170 = new []::
2577 :: EXPR :: modify :: I :: v170[#(0)] = #(-3)::
2581 :: EXPR :: modify :: I :: v170[#(1)] = #(-2)::
2585 :: EXPR :: modify :: I :: v170[#(2)] = #(-1)::
2589 :: EXPR :: modify :: I :: v170[#(4)] = #(1)::
2593 :: EXPR :: modify :: I :: v170[#(5)] = #(2)::
2597 :: EXPR :: modify :: I :: v170[#(6)] = #(3)::
2601 :: EXPR :: modify :: I :: v170[#(7)] = #(4)::
2605 :: EXPR :: modify :: I :: v170[#(8)] = #(5)::
2632 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.P = v163::
2634 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v174 = new org.biojava.nbio.structure.Element::DD,2691:CF,2635
2635 :: NORM :: declaration :: [I :: v181 = new []::
2636 :: EXPR :: modify :: I :: v181[#(0)] = #(-2)::
2640 :: EXPR :: modify :: I :: v181[#(1)] = #(-1)::
2644 :: EXPR :: modify :: I :: v181[#(3)] = #(1)::
2648 :: EXPR :: modify :: I :: v181[#(4)] = #(2)::
2652 :: EXPR :: modify :: I :: v181[#(5)] = #(3)::
2656 :: EXPR :: modify :: I :: v181[#(6)] = #(4)::
2660 :: EXPR :: modify :: I :: v181[#(7)] = #(5)::
2664 :: EXPR :: modify :: I :: v181[#(8)] = #(6)::
2691 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.S = v174::
2693 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v185 = new org.biojava.nbio.structure.Element::DD,2750:CF,2694
2694 :: NORM :: declaration :: [I :: v192 = new []::
2695 :: EXPR :: modify :: I :: v192[#(0)] = #(-1)::
2699 :: EXPR :: modify :: I :: v192[#(2)] = #(1)::
2703 :: EXPR :: modify :: I :: v192[#(3)] = #(2)::
2707 :: EXPR :: modify :: I :: v192[#(4)] = #(3)::
2711 :: EXPR :: modify :: I :: v192[#(5)] = #(4)::
2715 :: EXPR :: modify :: I :: v192[#(6)] = #(5)::
2719 :: EXPR :: modify :: I :: v192[#(7)] = #(6)::
2723 :: EXPR :: modify :: I :: v192[#(8)] = #(7)::
2750 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cl = v185::
2752 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v196 = new org.biojava.nbio.structure.Element::DD,2777
2777 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ar = v196::
2779 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v204 = new org.biojava.nbio.structure.Element::DD,2812:CF,2780
2780 :: NORM :: declaration :: [I :: v211 = new []::
2781 :: EXPR :: modify :: I :: v211[#(0)] = #(-1)::
2785 :: EXPR :: modify :: I :: v211[#(2)] = #(1)::
2812 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.K = v204::
2814 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v214 = new org.biojava.nbio.structure.Element::DD,2847:CF,2815
2815 :: NORM :: declaration :: [I :: v219 = new []::
2816 :: EXPR :: modify :: I :: v219[#(1)] = #(1)::
2820 :: EXPR :: modify :: I :: v219[#(2)] = #(2)::
2847 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ca = v214::
2849 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v223 = new org.biojava.nbio.structure.Element::DD,2886:CF,2850
2850 :: NORM :: declaration :: [I :: v230 = new []::
2851 :: EXPR :: modify :: I :: v230[#(1)] = #(1)::
2855 :: EXPR :: modify :: I :: v230[#(2)] = #(2)::
2859 :: EXPR :: modify :: I :: v230[#(3)] = #(3)::
2886 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sc = v223::
2888 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v234 = new org.biojava.nbio.structure.Element::DD,2933:CF,2889
2889 :: NORM :: declaration :: [I :: v239 = new []::
2890 :: EXPR :: modify :: I :: v239[#(0)] = #(-1)::
2894 :: EXPR :: modify :: I :: v239[#(2)] = #(1)::
2898 :: EXPR :: modify :: I :: v239[#(3)] = #(2)::
2902 :: EXPR :: modify :: I :: v239[#(4)] = #(3)::
2906 :: EXPR :: modify :: I :: v239[#(5)] = #(4)::
2933 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ti = v234::
2935 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v242 = new org.biojava.nbio.structure.Element::DD,2984:CF,2936
2936 :: NORM :: declaration :: [I :: v248 = new []::
2937 :: EXPR :: modify :: I :: v248[#(0)] = #(-1)::
2941 :: EXPR :: modify :: I :: v248[#(2)] = #(1)::
2945 :: EXPR :: modify :: I :: v248[#(3)] = #(2)::
2949 :: EXPR :: modify :: I :: v248[#(4)] = #(3)::
2953 :: EXPR :: modify :: I :: v248[#(5)] = #(4)::
2957 :: EXPR :: modify :: I :: v248[#(6)] = #(5)::
2984 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.V = v242::
2986 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v252 = new org.biojava.nbio.structure.Element::DD,3043:CF,2987
2987 :: NORM :: declaration :: [I :: v258 = new []::
2988 :: EXPR :: modify :: I :: v258[#(0)] = #(-2)::
2992 :: EXPR :: modify :: I :: v258[#(1)] = #(-1)::
2996 :: EXPR :: modify :: I :: v258[#(3)] = #(1)::
3000 :: EXPR :: modify :: I :: v258[#(4)] = #(2)::
3004 :: EXPR :: modify :: I :: v258[#(5)] = #(3)::
3008 :: EXPR :: modify :: I :: v258[#(6)] = #(4)::
3012 :: EXPR :: modify :: I :: v258[#(7)] = #(5)::
3016 :: EXPR :: modify :: I :: v258[#(8)] = #(6)::
3043 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cr = v252::
3045 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v262 = new org.biojava.nbio.structure.Element::DD,3110:CF,3046
3046 :: NORM :: declaration :: [I :: v269 = new []::
3047 :: EXPR :: modify :: I :: v269[#(0)] = #(-3)::
3051 :: EXPR :: modify :: I :: v269[#(1)] = #(-2)::
3055 :: EXPR :: modify :: I :: v269[#(2)] = #(-1)::
3059 :: EXPR :: modify :: I :: v269[#(4)] = #(1)::
3063 :: EXPR :: modify :: I :: v269[#(5)] = #(2)::
3067 :: EXPR :: modify :: I :: v269[#(6)] = #(3)::
3071 :: EXPR :: modify :: I :: v269[#(7)] = #(4)::
3075 :: EXPR :: modify :: I :: v269[#(8)] = #(5)::
3079 :: EXPR :: modify :: I :: v269[#(9)] = #(6)::
3083 :: EXPR :: modify :: I :: v269[#(10)] = #(7)::
3110 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mn = v262::
3112 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v272 = new org.biojava.nbio.structure.Element::DD,3169:CF,3113
3113 :: NORM :: declaration :: [I :: v276 = new []::
3114 :: EXPR :: modify :: I :: v276[#(0)] = #(-2)::
3118 :: EXPR :: modify :: I :: v276[#(1)] = #(-1)::
3122 :: EXPR :: modify :: I :: v276[#(3)] = #(1)::
3126 :: EXPR :: modify :: I :: v276[#(4)] = #(2)::
3130 :: EXPR :: modify :: I :: v276[#(5)] = #(3)::
3134 :: EXPR :: modify :: I :: v276[#(6)] = #(4)::
3138 :: EXPR :: modify :: I :: v276[#(7)] = #(5)::
3142 :: EXPR :: modify :: I :: v276[#(8)] = #(6)::
3169 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fe = v272::
3171 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v280 = new org.biojava.nbio.structure.Element::DD,3220:CF,3172
3172 :: NORM :: declaration :: [I :: v285 = new []::
3173 :: EXPR :: modify :: I :: v285[#(0)] = #(-1)::
3177 :: EXPR :: modify :: I :: v285[#(2)] = #(1)::
3181 :: EXPR :: modify :: I :: v285[#(3)] = #(2)::
3185 :: EXPR :: modify :: I :: v285[#(4)] = #(3)::
3189 :: EXPR :: modify :: I :: v285[#(5)] = #(4)::
3193 :: EXPR :: modify :: I :: v285[#(6)] = #(5)::
3220 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Co = v280::
3222 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v288 = new org.biojava.nbio.structure.Element::DD,3267:CF,3223
3223 :: NORM :: declaration :: [I :: v295 = new []::
3224 :: EXPR :: modify :: I :: v295[#(0)] = #(-1)::
3228 :: EXPR :: modify :: I :: v295[#(2)] = #(1)::
3232 :: EXPR :: modify :: I :: v295[#(3)] = #(2)::
3236 :: EXPR :: modify :: I :: v295[#(4)] = #(3)::
3240 :: EXPR :: modify :: I :: v295[#(5)] = #(4)::
3267 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ni = v288::
3269 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v299 = new org.biojava.nbio.structure.Element::DD,3310:CF,3270
3270 :: NORM :: declaration :: [I :: v305 = new []::
3271 :: EXPR :: modify :: I :: v305[#(1)] = #(1)::
3275 :: EXPR :: modify :: I :: v305[#(2)] = #(2)::
3279 :: EXPR :: modify :: I :: v305[#(3)] = #(3)::
3283 :: EXPR :: modify :: I :: v305[#(4)] = #(4)::
3310 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cu = v299::
3312 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v308 = new org.biojava.nbio.structure.Element::DD,3345:CF,3313
3313 :: NORM :: declaration :: [I :: v313 = new []::
3314 :: EXPR :: modify :: I :: v313[#(1)] = #(1)::
3318 :: EXPR :: modify :: I :: v313[#(2)] = #(2)::
3345 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zn = v308::
3347 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v317 = new org.biojava.nbio.structure.Element::DD,3384:CF,3348
3348 :: NORM :: declaration :: [I :: v321 = new []::
3349 :: EXPR :: modify :: I :: v321[#(1)] = #(1)::
3353 :: EXPR :: modify :: I :: v321[#(2)] = #(2)::
3357 :: EXPR :: modify :: I :: v321[#(3)] = #(3)::
3384 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ga = v317::
3386 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v324 = new org.biojava.nbio.structure.Element::DD,3443:CF,3387
3387 :: NORM :: declaration :: [I :: v329 = new []::
3388 :: EXPR :: modify :: I :: v329[#(0)] = #(-4)::
3392 :: EXPR :: modify :: I :: v329[#(1)] = #(-3)::
3396 :: EXPR :: modify :: I :: v329[#(2)] = #(-2)::
3400 :: EXPR :: modify :: I :: v329[#(3)] = #(-1)::
3404 :: EXPR :: modify :: I :: v329[#(5)] = #(1)::
3408 :: EXPR :: modify :: I :: v329[#(6)] = #(2)::
3412 :: EXPR :: modify :: I :: v329[#(7)] = #(3)::
3416 :: EXPR :: modify :: I :: v329[#(8)] = #(4)::
3443 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ge = v324::
3445 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v333 = new org.biojava.nbio.structure.Element::DD,3490:CF,3446
3446 :: NORM :: declaration :: [I :: v338 = new []::
3447 :: EXPR :: modify :: I :: v338[#(0)] = #(-3)::
3451 :: EXPR :: modify :: I :: v338[#(2)] = #(1)::
3455 :: EXPR :: modify :: I :: v338[#(3)] = #(2)::
3459 :: EXPR :: modify :: I :: v338[#(4)] = #(3)::
3463 :: EXPR :: modify :: I :: v338[#(5)] = #(5)::
3490 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.As = v333::
3492 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v342 = new org.biojava.nbio.structure.Element::DD,3537:CF,3493
3493 :: NORM :: declaration :: [I :: v348 = new []::
3494 :: EXPR :: modify :: I :: v348[#(0)] = #(-2)::
3498 :: EXPR :: modify :: I :: v348[#(2)] = #(1)::
3502 :: EXPR :: modify :: I :: v348[#(3)] = #(2)::
3506 :: EXPR :: modify :: I :: v348[#(4)] = #(4)::
3510 :: EXPR :: modify :: I :: v348[#(5)] = #(6)::
3537 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Se = v342::
3539 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v351 = new org.biojava.nbio.structure.Element::DD,3592:CF,3540
3540 :: NORM :: declaration :: [I :: v355 = new []::
3541 :: EXPR :: modify :: I :: v355[#(0)] = #(-1)::
3545 :: EXPR :: modify :: I :: v355[#(2)] = #(1)::
3549 :: EXPR :: modify :: I :: v355[#(3)] = #(2)::
3553 :: EXPR :: modify :: I :: v355[#(4)] = #(3)::
3557 :: EXPR :: modify :: I :: v355[#(5)] = #(4)::
3561 :: EXPR :: modify :: I :: v355[#(6)] = #(5)::
3565 :: EXPR :: modify :: I :: v355[#(7)] = #(7)::
3592 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Br = v351::
3594 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v359 = new org.biojava.nbio.structure.Element::DD,3623:CF,3595
3595 :: NORM :: declaration :: [I :: v364 = new []::
3596 :: EXPR :: modify :: I :: v364[#(1)] = #(2)::
3623 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Kr = v359::
3625 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v368 = new org.biojava.nbio.structure.Element::DD,3658:CF,3626
3626 :: NORM :: declaration :: [I :: v374 = new []::
3627 :: EXPR :: modify :: I :: v374[#(0)] = #(-1)::
3631 :: EXPR :: modify :: I :: v374[#(2)] = #(1)::
3658 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rb = v368::
3660 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v377 = new org.biojava.nbio.structure.Element::DD,3693:CF,3661
3661 :: NORM :: declaration :: [I :: v382 = new []::
3662 :: EXPR :: modify :: I :: v382[#(1)] = #(1)::
3666 :: EXPR :: modify :: I :: v382[#(2)] = #(2)::
3693 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sr = v377::
3695 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v386 = new org.biojava.nbio.structure.Element::DD,3732:CF,3696
3696 :: NORM :: declaration :: [I :: v391 = new []::
3697 :: EXPR :: modify :: I :: v391[#(1)] = #(1)::
3701 :: EXPR :: modify :: I :: v391[#(2)] = #(2)::
3705 :: EXPR :: modify :: I :: v391[#(3)] = #(3)::
3732 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Y = v386::
3734 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v394 = new org.biojava.nbio.structure.Element::DD,3775:CF,3735
3735 :: NORM :: declaration :: [I :: v401 = new []::
3736 :: EXPR :: modify :: I :: v401[#(1)] = #(1)::
3740 :: EXPR :: modify :: I :: v401[#(2)] = #(2)::
3744 :: EXPR :: modify :: I :: v401[#(3)] = #(3)::
3748 :: EXPR :: modify :: I :: v401[#(4)] = #(4)::
3775 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zr = v394::
3777 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v405 = new org.biojava.nbio.structure.Element::DD,3826:CF,3778
3778 :: NORM :: declaration :: [I :: v411 = new []::
3779 :: EXPR :: modify :: I :: v411[#(0)] = #(-1)::
3783 :: EXPR :: modify :: I :: v411[#(2)] = #(1)::
3787 :: EXPR :: modify :: I :: v411[#(3)] = #(2)::
3791 :: EXPR :: modify :: I :: v411[#(4)] = #(3)::
3795 :: EXPR :: modify :: I :: v411[#(5)] = #(4)::
3799 :: EXPR :: modify :: I :: v411[#(6)] = #(5)::
3826 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nb = v405::
3828 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v414 = new org.biojava.nbio.structure.Element::DD,3885:CF,3829
3829 :: NORM :: declaration :: [I :: v420 = new []::
3830 :: EXPR :: modify :: I :: v420[#(0)] = #(-2)::
3834 :: EXPR :: modify :: I :: v420[#(1)] = #(-1)::
3838 :: EXPR :: modify :: I :: v420[#(3)] = #(1)::
3842 :: EXPR :: modify :: I :: v420[#(4)] = #(2)::
3846 :: EXPR :: modify :: I :: v420[#(5)] = #(3)::
3850 :: EXPR :: modify :: I :: v420[#(6)] = #(4)::
3854 :: EXPR :: modify :: I :: v420[#(7)] = #(5)::
3858 :: EXPR :: modify :: I :: v420[#(8)] = #(6)::
3885 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mo = v414::
3887 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v424 = new org.biojava.nbio.structure.Element::DD,3948:CF,3888
3888 :: NORM :: declaration :: [I :: v431 = new []::
3889 :: EXPR :: modify :: I :: v431[#(0)] = #(-3)::
3893 :: EXPR :: modify :: I :: v431[#(1)] = #(-1)::
3897 :: EXPR :: modify :: I :: v431[#(3)] = #(1)::
3901 :: EXPR :: modify :: I :: v431[#(4)] = #(2)::
3905 :: EXPR :: modify :: I :: v431[#(5)] = #(3)::
3909 :: EXPR :: modify :: I :: v431[#(6)] = #(4)::
3913 :: EXPR :: modify :: I :: v431[#(7)] = #(5)::
3917 :: EXPR :: modify :: I :: v431[#(8)] = #(6)::
3921 :: EXPR :: modify :: I :: v431[#(9)] = #(7)::
3948 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tc = v424::
3950 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v434 = new org.biojava.nbio.structure.Element::DD,4011:CF,3951
3951 :: NORM :: declaration :: [I :: v440 = new []::
3952 :: EXPR :: modify :: I :: v440[#(0)] = #(-2)::
3956 :: EXPR :: modify :: I :: v440[#(2)] = #(1)::
3960 :: EXPR :: modify :: I :: v440[#(3)] = #(2)::
3964 :: EXPR :: modify :: I :: v440[#(4)] = #(3)::
3968 :: EXPR :: modify :: I :: v440[#(5)] = #(4)::
3972 :: EXPR :: modify :: I :: v440[#(6)] = #(5)::
3976 :: EXPR :: modify :: I :: v440[#(7)] = #(6)::
3980 :: EXPR :: modify :: I :: v440[#(8)] = #(7)::
3984 :: EXPR :: modify :: I :: v440[#(9)] = #(8)::
4011 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ru = v434::
4013 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v443 = new org.biojava.nbio.structure.Element::DD,4066:CF,4014
4014 :: NORM :: declaration :: [I :: v448 = new []::
4015 :: EXPR :: modify :: I :: v448[#(0)] = #(-1)::
4019 :: EXPR :: modify :: I :: v448[#(2)] = #(1)::
4023 :: EXPR :: modify :: I :: v448[#(3)] = #(2)::
4027 :: EXPR :: modify :: I :: v448[#(4)] = #(3)::
4031 :: EXPR :: modify :: I :: v448[#(5)] = #(4)::
4035 :: EXPR :: modify :: I :: v448[#(6)] = #(5)::
4039 :: EXPR :: modify :: I :: v448[#(7)] = #(6)::
4066 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rh = v443::
4068 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v452 = new org.biojava.nbio.structure.Element::DD,4105:CF,4069
4069 :: NORM :: declaration :: [I :: v456 = new []::
4070 :: EXPR :: modify :: I :: v456[#(1)] = #(1)::
4074 :: EXPR :: modify :: I :: v456[#(2)] = #(2)::
4078 :: EXPR :: modify :: I :: v456[#(3)] = #(4)::
4105 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pd = v452::
4107 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v459 = new org.biojava.nbio.structure.Element::DD,4148:CF,4108
4108 :: NORM :: declaration :: [I :: v463 = new []::
4109 :: EXPR :: modify :: I :: v463[#(1)] = #(1)::
4113 :: EXPR :: modify :: I :: v463[#(2)] = #(2)::
4117 :: EXPR :: modify :: I :: v463[#(3)] = #(3)::
4121 :: EXPR :: modify :: I :: v463[#(4)] = #(4)::
4148 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ag = v459::
4150 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v467 = new org.biojava.nbio.structure.Element::DD,4183:CF,4151
4151 :: NORM :: declaration :: [I :: v471 = new []::
4152 :: EXPR :: modify :: I :: v471[#(1)] = #(1)::
4156 :: EXPR :: modify :: I :: v471[#(2)] = #(2)::
4183 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cd = v467::
4185 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v475 = new org.biojava.nbio.structure.Element::DD,4222:CF,4186
4186 :: NORM :: declaration :: [I :: v479 = new []::
4187 :: EXPR :: modify :: I :: v479[#(1)] = #(1)::
4191 :: EXPR :: modify :: I :: v479[#(2)] = #(2)::
4195 :: EXPR :: modify :: I :: v479[#(3)] = #(3)::
4222 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.In = v475::
4224 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v483 = new org.biojava.nbio.structure.Element::DD,4261:CF,4225
4225 :: NORM :: declaration :: [I :: v490 = new []::
4226 :: EXPR :: modify :: I :: v490[#(0)] = #(-4)::
4230 :: EXPR :: modify :: I :: v490[#(2)] = #(2)::
4234 :: EXPR :: modify :: I :: v490[#(3)] = #(4)::
4261 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sn = v483::
4263 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v493 = new org.biojava.nbio.structure.Element::DD,4300:CF,4264
4264 :: NORM :: declaration :: [I :: v498 = new []::
4265 :: EXPR :: modify :: I :: v498[#(0)] = #(-3)::
4269 :: EXPR :: modify :: I :: v498[#(2)] = #(3)::
4273 :: EXPR :: modify :: I :: v498[#(3)] = #(5)::
4300 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sb = v493::
4302 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v502 = new org.biojava.nbio.structure.Element::DD,4347:CF,4303
4303 :: NORM :: declaration :: [I :: v507 = new []::
4304 :: EXPR :: modify :: I :: v507[#(0)] = #(-2)::
4308 :: EXPR :: modify :: I :: v507[#(2)] = #(2)::
4312 :: EXPR :: modify :: I :: v507[#(3)] = #(4)::
4316 :: EXPR :: modify :: I :: v507[#(4)] = #(5)::
4320 :: EXPR :: modify :: I :: v507[#(5)] = #(6)::
4347 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Te = v502::
4349 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v511 = new org.biojava.nbio.structure.Element::DD,4398:CF,4350
4350 :: NORM :: declaration :: [I :: v515 = new []::
4351 :: EXPR :: modify :: I :: v515[#(0)] = #(-1)::
4355 :: EXPR :: modify :: I :: v515[#(2)] = #(1)::
4359 :: EXPR :: modify :: I :: v515[#(3)] = #(3)::
4363 :: EXPR :: modify :: I :: v515[#(4)] = #(4)::
4367 :: EXPR :: modify :: I :: v515[#(5)] = #(5)::
4371 :: EXPR :: modify :: I :: v515[#(6)] = #(7)::
4398 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.I = v511::
4400 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v519 = new org.biojava.nbio.structure.Element::DD,4445:CF,4401
4401 :: NORM :: declaration :: [I :: v524 = new []::
4402 :: EXPR :: modify :: I :: v524[#(1)] = #(1)::
4406 :: EXPR :: modify :: I :: v524[#(2)] = #(2)::
4410 :: EXPR :: modify :: I :: v524[#(3)] = #(4)::
4414 :: EXPR :: modify :: I :: v524[#(4)] = #(6)::
4418 :: EXPR :: modify :: I :: v524[#(5)] = #(8)::
4445 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Xe = v519::
4447 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v528 = new org.biojava.nbio.structure.Element::DD,4480:CF,4448
4448 :: NORM :: declaration :: [I :: v533 = new []::
4449 :: EXPR :: modify :: I :: v533[#(0)] = #(-1)::
4453 :: EXPR :: modify :: I :: v533[#(2)] = #(1)::
4480 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cs = v528::
4482 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v537 = new org.biojava.nbio.structure.Element::DD,4511:CF,4483
4483 :: NORM :: declaration :: [I :: v542 = new []::
4484 :: EXPR :: modify :: I :: v542[#(1)] = #(2)::
4511 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ba = v537::
4513 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v546 = new org.biojava.nbio.structure.Element::DD,4546:CF,4514
4514 :: NORM :: declaration :: [I :: v549 = new []::
4515 :: EXPR :: modify :: I :: v549[#(1)] = #(2)::
4519 :: EXPR :: modify :: I :: v549[#(2)] = #(3)::
4546 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.La = v546::
4548 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v552 = new org.biojava.nbio.structure.Element::DD,4585:CF,4549
4549 :: NORM :: declaration :: [I :: v557 = new []::
4550 :: EXPR :: modify :: I :: v557[#(1)] = #(2)::
4554 :: EXPR :: modify :: I :: v557[#(2)] = #(3)::
4558 :: EXPR :: modify :: I :: v557[#(3)] = #(4)::
4585 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ce = v552::
4587 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v560 = new org.biojava.nbio.structure.Element::DD,4624:CF,4588
4588 :: NORM :: declaration :: [I :: v565 = new []::
4589 :: EXPR :: modify :: I :: v565[#(1)] = #(2)::
4593 :: EXPR :: modify :: I :: v565[#(2)] = #(3)::
4597 :: EXPR :: modify :: I :: v565[#(3)] = #(4)::
4624 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pr = v560::
4626 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v568 = new org.biojava.nbio.structure.Element::DD,4663:CF,4627
4627 :: NORM :: declaration :: [I :: v572 = new []::
4628 :: EXPR :: modify :: I :: v572[#(1)] = #(2)::
4632 :: EXPR :: modify :: I :: v572[#(2)] = #(3)::
4636 :: EXPR :: modify :: I :: v572[#(3)] = #(4)::
4663 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nd = v568::
4665 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v575 = new org.biojava.nbio.structure.Element::DD,4698:CF,4666
4666 :: NORM :: declaration :: [I :: v580 = new []::
4667 :: EXPR :: modify :: I :: v580[#(1)] = #(2)::
4671 :: EXPR :: modify :: I :: v580[#(2)] = #(3)::
4698 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pm = v575::
4700 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v583 = new org.biojava.nbio.structure.Element::DD,4733:CF,4701
4701 :: NORM :: declaration :: [I :: v589 = new []::
4702 :: EXPR :: modify :: I :: v589[#(1)] = #(2)::
4706 :: EXPR :: modify :: I :: v589[#(2)] = #(3)::
4733 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sm = v583::
4735 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v593 = new org.biojava.nbio.structure.Element::DD,4768:CF,4736
4736 :: NORM :: declaration :: [I :: v598 = new []::
4737 :: EXPR :: modify :: I :: v598[#(1)] = #(2)::
4741 :: EXPR :: modify :: I :: v598[#(2)] = #(3)::
4768 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Eu = v593::
4770 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v601 = new org.biojava.nbio.structure.Element::DD,4807:CF,4771
4771 :: NORM :: declaration :: [I :: v605 = new []::
4772 :: EXPR :: modify :: I :: v605[#(1)] = #(1)::
4776 :: EXPR :: modify :: I :: v605[#(2)] = #(2)::
4780 :: EXPR :: modify :: I :: v605[#(3)] = #(3)::
4807 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Gd = v601::
4809 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v608 = new org.biojava.nbio.structure.Element::DD,4850:CF,4810
4810 :: NORM :: declaration :: [I :: v614 = new []::
4811 :: EXPR :: modify :: I :: v614[#(1)] = #(1)::
4815 :: EXPR :: modify :: I :: v614[#(2)] = #(2)::
4819 :: EXPR :: modify :: I :: v614[#(3)] = #(3)::
4823 :: EXPR :: modify :: I :: v614[#(4)] = #(4)::
4850 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tb = v608::
4852 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v617 = new org.biojava.nbio.structure.Element::DD,4889:CF,4853
4853 :: NORM :: declaration :: [I :: v621 = new []::
4854 :: EXPR :: modify :: I :: v621[#(1)] = #(2)::
4858 :: EXPR :: modify :: I :: v621[#(2)] = #(3)::
4862 :: EXPR :: modify :: I :: v621[#(3)] = #(4)::
4889 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Dy = v617::
4891 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v624 = new org.biojava.nbio.structure.Element::DD,4924:CF,4892
4892 :: NORM :: declaration :: [I :: v628 = new []::
4893 :: EXPR :: modify :: I :: v628[#(1)] = #(2)::
4897 :: EXPR :: modify :: I :: v628[#(2)] = #(3)::
4924 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ho = v624::
4926 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v632 = new org.biojava.nbio.structure.Element::DD,4959:CF,4927
4927 :: NORM :: declaration :: [I :: v638 = new []::
4928 :: EXPR :: modify :: I :: v638[#(1)] = #(2)::
4932 :: EXPR :: modify :: I :: v638[#(2)] = #(3)::
4959 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Er = v632::
4961 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v641 = new org.biojava.nbio.structure.Element::DD,4998:CF,4962
4962 :: NORM :: declaration :: [I :: v646 = new []::
4963 :: EXPR :: modify :: I :: v646[#(1)] = #(2)::
4967 :: EXPR :: modify :: I :: v646[#(2)] = #(3)::
4971 :: EXPR :: modify :: I :: v646[#(3)] = #(4)::
4998 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tm = v641::
5000 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v649 = new org.biojava.nbio.structure.Element::DD,5033:CF,5001
5001 :: NORM :: declaration :: [I :: v654 = new []::
5002 :: EXPR :: modify :: I :: v654[#(1)] = #(2)::
5006 :: EXPR :: modify :: I :: v654[#(2)] = #(3)::
5033 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Yb = v649::
5035 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v657 = new org.biojava.nbio.structure.Element::DD,5064:CF,5036
5036 :: NORM :: declaration :: [I :: v662 = new []::
5037 :: EXPR :: modify :: I :: v662[#(1)] = #(3)::
5064 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lu = v657::
5066 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v665 = new org.biojava.nbio.structure.Element::DD,5103:CF,5067
5067 :: NORM :: declaration :: [I :: v669 = new []::
5068 :: EXPR :: modify :: I :: v669[#(1)] = #(2)::
5072 :: EXPR :: modify :: I :: v669[#(2)] = #(3)::
5076 :: EXPR :: modify :: I :: v669[#(3)] = #(4)::
5103 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hf = v665::
5105 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v672 = new org.biojava.nbio.structure.Element::DD,5150:CF,5106
5106 :: NORM :: declaration :: [I :: v677 = new []::
5107 :: EXPR :: modify :: I :: v677[#(0)] = #(-1)::
5111 :: EXPR :: modify :: I :: v677[#(2)] = #(2)::
5115 :: EXPR :: modify :: I :: v677[#(3)] = #(3)::
5119 :: EXPR :: modify :: I :: v677[#(4)] = #(4)::
5123 :: EXPR :: modify :: I :: v677[#(5)] = #(5)::
5150 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ta = v672::
5152 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v680 = new org.biojava.nbio.structure.Element::DD,5209:CF,5153
5153 :: NORM :: declaration :: [I :: v685 = new []::
5154 :: EXPR :: modify :: I :: v685[#(0)] = #(-2)::
5158 :: EXPR :: modify :: I :: v685[#(1)] = #(-1)::
5162 :: EXPR :: modify :: I :: v685[#(3)] = #(1)::
5166 :: EXPR :: modify :: I :: v685[#(4)] = #(2)::
5170 :: EXPR :: modify :: I :: v685[#(5)] = #(3)::
5174 :: EXPR :: modify :: I :: v685[#(6)] = #(4)::
5178 :: EXPR :: modify :: I :: v685[#(7)] = #(5)::
5182 :: EXPR :: modify :: I :: v685[#(8)] = #(6)::
5209 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.W = v680::
5211 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v689 = new org.biojava.nbio.structure.Element::DD,5272:CF,5212
5212 :: NORM :: declaration :: [I :: v694 = new []::
5213 :: EXPR :: modify :: I :: v694[#(0)] = #(-3)::
5217 :: EXPR :: modify :: I :: v694[#(1)] = #(-1)::
5221 :: EXPR :: modify :: I :: v694[#(3)] = #(1)::
5225 :: EXPR :: modify :: I :: v694[#(4)] = #(2)::
5229 :: EXPR :: modify :: I :: v694[#(5)] = #(3)::
5233 :: EXPR :: modify :: I :: v694[#(6)] = #(4)::
5237 :: EXPR :: modify :: I :: v694[#(7)] = #(5)::
5241 :: EXPR :: modify :: I :: v694[#(8)] = #(6)::
5245 :: EXPR :: modify :: I :: v694[#(9)] = #(7)::
5272 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Re = v689::
5274 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v697 = new org.biojava.nbio.structure.Element::DD,5339:CF,5275
5275 :: NORM :: declaration :: [I :: v701 = new []::
5276 :: EXPR :: modify :: I :: v701[#(0)] = #(-2)::
5280 :: EXPR :: modify :: I :: v701[#(1)] = #(-1)::
5284 :: EXPR :: modify :: I :: v701[#(3)] = #(1)::
5288 :: EXPR :: modify :: I :: v701[#(4)] = #(2)::
5292 :: EXPR :: modify :: I :: v701[#(5)] = #(3)::
5296 :: EXPR :: modify :: I :: v701[#(6)] = #(4)::
5300 :: EXPR :: modify :: I :: v701[#(7)] = #(5)::
5304 :: EXPR :: modify :: I :: v701[#(8)] = #(6)::
5308 :: EXPR :: modify :: I :: v701[#(9)] = #(7)::
5312 :: EXPR :: modify :: I :: v701[#(10)] = #(8)::
5339 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Os = v697::
5341 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v704 = new org.biojava.nbio.structure.Element::DD,5402:CF,5342
5342 :: NORM :: declaration :: [I :: v707 = new []::
5343 :: EXPR :: modify :: I :: v707[#(0)] = #(-3)::
5347 :: EXPR :: modify :: I :: v707[#(1)] = #(-1)::
5351 :: EXPR :: modify :: I :: v707[#(3)] = #(1)::
5355 :: EXPR :: modify :: I :: v707[#(4)] = #(2)::
5359 :: EXPR :: modify :: I :: v707[#(5)] = #(3)::
5363 :: EXPR :: modify :: I :: v707[#(6)] = #(4)::
5367 :: EXPR :: modify :: I :: v707[#(7)] = #(5)::
5371 :: EXPR :: modify :: I :: v707[#(8)] = #(6)::
5375 :: EXPR :: modify :: I :: v707[#(9)] = #(8)::
5402 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ir = v704::
5404 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v710 = new org.biojava.nbio.structure.Element::DD,5461:CF,5405
5405 :: NORM :: declaration :: [I :: v713 = new []::
5406 :: EXPR :: modify :: I :: v713[#(0)] = #(-2)::
5410 :: EXPR :: modify :: I :: v713[#(1)] = #(-1)::
5414 :: EXPR :: modify :: I :: v713[#(3)] = #(1)::
5418 :: EXPR :: modify :: I :: v713[#(4)] = #(2)::
5422 :: EXPR :: modify :: I :: v713[#(5)] = #(3)::
5426 :: EXPR :: modify :: I :: v713[#(6)] = #(4)::
5430 :: EXPR :: modify :: I :: v713[#(7)] = #(5)::
5434 :: EXPR :: modify :: I :: v713[#(8)] = #(6)::
5461 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pt = v710::
5463 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v716 = new org.biojava.nbio.structure.Element::DD,5508:CF,5464
5464 :: NORM :: declaration :: [I :: v720 = new []::
5465 :: EXPR :: modify :: I :: v720[#(0)] = #(-1)::
5469 :: EXPR :: modify :: I :: v720[#(2)] = #(1)::
5473 :: EXPR :: modify :: I :: v720[#(3)] = #(2)::
5477 :: EXPR :: modify :: I :: v720[#(4)] = #(3)::
5481 :: EXPR :: modify :: I :: v720[#(5)] = #(5)::
5508 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Au = v716::
5510 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v724 = new org.biojava.nbio.structure.Element::DD,5547:CF,5511
5511 :: NORM :: declaration :: [I :: v727 = new []::
5512 :: EXPR :: modify :: I :: v727[#(1)] = #(1)::
5516 :: EXPR :: modify :: I :: v727[#(2)] = #(2)::
5520 :: EXPR :: modify :: I :: v727[#(3)] = #(4)::
5547 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hg = v724::
5549 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v731 = new org.biojava.nbio.structure.Element::DD,5586:CF,5550
5550 :: NORM :: declaration :: [I :: v735 = new []::
5551 :: EXPR :: modify :: I :: v735[#(0)] = #(-1)::
5555 :: EXPR :: modify :: I :: v735[#(2)] = #(1)::
5559 :: EXPR :: modify :: I :: v735[#(3)] = #(3)::
5586 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tl = v731::
5588 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v738 = new org.biojava.nbio.structure.Element::DD,5625:CF,5589
5589 :: NORM :: declaration :: [I :: v742 = new []::
5590 :: EXPR :: modify :: I :: v742[#(0)] = #(-4)::
5594 :: EXPR :: modify :: I :: v742[#(2)] = #(2)::
5598 :: EXPR :: modify :: I :: v742[#(3)] = #(4)::
5625 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pb = v738::
5627 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v746 = new org.biojava.nbio.structure.Element::DD,5668:CF,5628
5628 :: NORM :: declaration :: [I :: v750 = new []::
5629 :: EXPR :: modify :: I :: v750[#(0)] = #(-3)::
5633 :: EXPR :: modify :: I :: v750[#(2)] = #(1)::
5637 :: EXPR :: modify :: I :: v750[#(3)] = #(3)::
5641 :: EXPR :: modify :: I :: v750[#(4)] = #(5)::
5668 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bi = v746::
5670 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v753 = new org.biojava.nbio.structure.Element::DD,5715:CF,5671
5671 :: NORM :: declaration :: [I :: v757 = new []::
5672 :: EXPR :: modify :: I :: v757[#(0)] = #(-2)::
5676 :: EXPR :: modify :: I :: v757[#(2)] = #(2)::
5680 :: EXPR :: modify :: I :: v757[#(3)] = #(4)::
5684 :: EXPR :: modify :: I :: v757[#(4)] = #(5)::
5688 :: EXPR :: modify :: I :: v757[#(5)] = #(6)::
5715 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Po = v753::
5717 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v760 = new org.biojava.nbio.structure.Element::DD,5762:CF,5718
5718 :: NORM :: declaration :: [I :: v764 = new []::
5719 :: EXPR :: modify :: I :: v764[#(0)] = #(-1)::
5723 :: EXPR :: modify :: I :: v764[#(2)] = #(1)::
5727 :: EXPR :: modify :: I :: v764[#(3)] = #(3)::
5731 :: EXPR :: modify :: I :: v764[#(4)] = #(5)::
5735 :: EXPR :: modify :: I :: v764[#(5)] = #(7)::
5762 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.At = v760::
5764 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v767 = new org.biojava.nbio.structure.Element::DD,5797:CF,5765
5765 :: NORM :: declaration :: [I :: v771 = new []::
5766 :: EXPR :: modify :: I :: v771[#(1)] = #(2)::
5770 :: EXPR :: modify :: I :: v771[#(2)] = #(6)::
5797 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rn = v767::
5799 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v774 = new org.biojava.nbio.structure.Element::DD,5828:CF,5800
5800 :: NORM :: declaration :: [I :: v778 = new []::
5801 :: EXPR :: modify :: I :: v778[#(1)] = #(1)::
5828 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fr = v774::
5830 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v782 = new org.biojava.nbio.structure.Element::DD,5859:CF,5831
5831 :: NORM :: declaration :: [I :: v787 = new []::
5832 :: EXPR :: modify :: I :: v787[#(1)] = #(2)::
5859 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ra = v782::
5861 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v790 = new org.biojava.nbio.structure.Element::DD,5894:CF,5862
5862 :: NORM :: declaration :: [I :: v794 = new []::
5863 :: EXPR :: modify :: I :: v794[#(1)] = #(2)::
5867 :: EXPR :: modify :: I :: v794[#(2)] = #(3)::
5894 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ac = v790::
5896 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v797 = new org.biojava.nbio.structure.Element::DD,5933:CF,5897
5897 :: NORM :: declaration :: [I :: v802 = new []::
5898 :: EXPR :: modify :: I :: v802[#(1)] = #(2)::
5902 :: EXPR :: modify :: I :: v802[#(2)] = #(3)::
5906 :: EXPR :: modify :: I :: v802[#(3)] = #(4)::
5933 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Th = v797::
5935 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v805 = new org.biojava.nbio.structure.Element::DD,5976:CF,5936
5936 :: NORM :: declaration :: [I :: v808 = new []::
5937 :: EXPR :: modify :: I :: v808[#(1)] = #(2)::
5941 :: EXPR :: modify :: I :: v808[#(2)] = #(3)::
5945 :: EXPR :: modify :: I :: v808[#(3)] = #(4)::
5949 :: EXPR :: modify :: I :: v808[#(4)] = #(5)::
5976 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pa = v805::
5978 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v811 = new org.biojava.nbio.structure.Element::DD,6023:CF,5979
5979 :: NORM :: declaration :: [I :: v816 = new []::
5980 :: EXPR :: modify :: I :: v816[#(1)] = #(2)::
5984 :: EXPR :: modify :: I :: v816[#(2)] = #(3)::
5988 :: EXPR :: modify :: I :: v816[#(3)] = #(4)::
5992 :: EXPR :: modify :: I :: v816[#(4)] = #(5)::
5996 :: EXPR :: modify :: I :: v816[#(5)] = #(6)::
6023 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.U = v811::
6025 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v819 = new org.biojava.nbio.structure.Element::DD,6070:CF,6026
6026 :: NORM :: declaration :: [I :: v823 = new []::
6027 :: EXPR :: modify :: I :: v823[#(1)] = #(3)::
6031 :: EXPR :: modify :: I :: v823[#(2)] = #(4)::
6035 :: EXPR :: modify :: I :: v823[#(3)] = #(5)::
6039 :: EXPR :: modify :: I :: v823[#(4)] = #(6)::
6043 :: EXPR :: modify :: I :: v823[#(5)] = #(7)::
6070 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Np = v819::
6072 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v826 = new org.biojava.nbio.structure.Element::DD,6121:CF,6073
6073 :: NORM :: declaration :: [I :: v829 = new []::
6074 :: EXPR :: modify :: I :: v829[#(1)] = #(3)::
6078 :: EXPR :: modify :: I :: v829[#(2)] = #(4)::
6082 :: EXPR :: modify :: I :: v829[#(3)] = #(5)::
6086 :: EXPR :: modify :: I :: v829[#(4)] = #(6)::
6090 :: EXPR :: modify :: I :: v829[#(5)] = #(7)::
6094 :: EXPR :: modify :: I :: v829[#(6)] = #(8)::
6121 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pu = v826::
6123 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v832 = new org.biojava.nbio.structure.Element::DD,6172:CF,6124
6124 :: NORM :: declaration :: [I :: v835 = new []::
6125 :: EXPR :: modify :: I :: v835[#(1)] = #(2)::
6129 :: EXPR :: modify :: I :: v835[#(2)] = #(3)::
6133 :: EXPR :: modify :: I :: v835[#(3)] = #(4)::
6137 :: EXPR :: modify :: I :: v835[#(4)] = #(5)::
6141 :: EXPR :: modify :: I :: v835[#(5)] = #(6)::
6145 :: EXPR :: modify :: I :: v835[#(6)] = #(7)::
6172 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Am = v832::
6174 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v838 = new org.biojava.nbio.structure.Element::DD,6207:CF,6175
6175 :: NORM :: declaration :: [I :: v841 = new []::
6176 :: EXPR :: modify :: I :: v841[#(1)] = #(3)::
6180 :: EXPR :: modify :: I :: v841[#(2)] = #(4)::
6207 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cm = v838::
6209 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v844 = new org.biojava.nbio.structure.Element::DD,6246:CF,6210
6210 :: NORM :: declaration :: [I :: v848 = new []::
6211 :: EXPR :: modify :: I :: v848[#(1)] = #(2)::
6215 :: EXPR :: modify :: I :: v848[#(2)] = #(3)::
6219 :: EXPR :: modify :: I :: v848[#(3)] = #(4)::
6246 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bk = v844::
6248 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v851 = new org.biojava.nbio.structure.Element::DD,6285:CF,6249
6249 :: NORM :: declaration :: [I :: v854 = new []::
6250 :: EXPR :: modify :: I :: v854[#(1)] = #(2)::
6254 :: EXPR :: modify :: I :: v854[#(2)] = #(3)::
6258 :: EXPR :: modify :: I :: v854[#(3)] = #(4)::
6285 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cf = v851::
6287 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v857 = new org.biojava.nbio.structure.Element::DD,6320:CF,6288
6288 :: NORM :: declaration :: [I :: v860 = new []::
6289 :: EXPR :: modify :: I :: v860[#(1)] = #(2)::
6293 :: EXPR :: modify :: I :: v860[#(2)] = #(3)::
6320 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Es = v857::
6322 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v863 = new org.biojava.nbio.structure.Element::DD,6355:CF,6323
6323 :: NORM :: declaration :: [I :: v866 = new []::
6324 :: EXPR :: modify :: I :: v866[#(1)] = #(2)::
6328 :: EXPR :: modify :: I :: v866[#(2)] = #(3)::
6355 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fm = v863::
6357 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v869 = new org.biojava.nbio.structure.Element::DD,6390:CF,6358
6358 :: NORM :: declaration :: [I :: v872 = new []::
6359 :: EXPR :: modify :: I :: v872[#(1)] = #(2)::
6363 :: EXPR :: modify :: I :: v872[#(2)] = #(3)::
6390 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Md = v869::
6392 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v875 = new org.biojava.nbio.structure.Element::DD,6425:CF,6393
6393 :: NORM :: declaration :: [I :: v877 = new []::
6394 :: EXPR :: modify :: I :: v877[#(1)] = #(2)::
6398 :: EXPR :: modify :: I :: v877[#(2)] = #(3)::
6425 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.No = v875::
6427 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v880 = new org.biojava.nbio.structure.Element::DD,6456:CF,6428
6428 :: NORM :: declaration :: [I :: v883 = new []::
6429 :: EXPR :: modify :: I :: v883[#(1)] = #(3)::
6456 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lr = v880::
6458 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v886 = new org.biojava.nbio.structure.Element::DD,6482
6482 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.R = v886::
6484 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v891 = new org.biojava.nbio.structure.Element[]::
6485 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v892 = org.biojava.nbio.structure.Element.H::DD,6487
6487 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(0)] = v892::
6491 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v893 = org.biojava.nbio.structure.Element.C::DD,6493
6493 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(1)] = v893::
6497 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v894 = org.biojava.nbio.structure.Element.N::DD,6499
6499 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(2)] = v894::
6503 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v895 = org.biojava.nbio.structure.Element.O::DD,6505
6505 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(3)] = v895::
6509 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v896 = org.biojava.nbio.structure.Element.D::DD,6511
6511 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(4)] = v896::
6515 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v897 = org.biojava.nbio.structure.Element.T::DD,6517
6517 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(5)] = v897::
6521 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v898 = org.biojava.nbio.structure.Element.He::DD,6523
6523 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(6)] = v898::
6527 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v899 = org.biojava.nbio.structure.Element.Li::DD,6529
6529 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(7)] = v899::
6533 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v900 = org.biojava.nbio.structure.Element.Be::DD,6535
6535 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(8)] = v900::
6539 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v901 = org.biojava.nbio.structure.Element.B::DD,6541
6541 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(9)] = v901::
6545 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v902 = org.biojava.nbio.structure.Element.F::DD,6547
6547 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(10)] = v902::
6551 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v903 = org.biojava.nbio.structure.Element.Ne::DD,6553
6553 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(11)] = v903::
6557 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v904 = org.biojava.nbio.structure.Element.Na::DD,6559
6559 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(12)] = v904::
6563 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v905 = org.biojava.nbio.structure.Element.Mg::DD,6565
6565 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(13)] = v905::
6569 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v906 = org.biojava.nbio.structure.Element.Al::DD,6571
6571 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(14)] = v906::
6575 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v907 = org.biojava.nbio.structure.Element.Si::DD,6577
6577 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(15)] = v907::
6581 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v908 = org.biojava.nbio.structure.Element.P::DD,6583
6583 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(16)] = v908::
6587 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v909 = org.biojava.nbio.structure.Element.S::DD,6589
6589 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(17)] = v909::
6593 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v910 = org.biojava.nbio.structure.Element.Cl::DD,6595
6595 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(18)] = v910::
6599 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v911 = org.biojava.nbio.structure.Element.Ar::DD,6601
6601 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(19)] = v911::
6605 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v912 = org.biojava.nbio.structure.Element.K::DD,6607
6607 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(20)] = v912::
6611 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v913 = org.biojava.nbio.structure.Element.Ca::DD,6613
6613 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(21)] = v913::
6617 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v914 = org.biojava.nbio.structure.Element.Sc::DD,6619
6619 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(22)] = v914::
6623 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v915 = org.biojava.nbio.structure.Element.Ti::DD,6625
6625 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(23)] = v915::
6629 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v916 = org.biojava.nbio.structure.Element.V::DD,6631
6631 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(24)] = v916::
6635 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v917 = org.biojava.nbio.structure.Element.Cr::DD,6637
6637 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(25)] = v917::
6641 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v918 = org.biojava.nbio.structure.Element.Mn::DD,6643
6643 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(26)] = v918::
6647 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v919 = org.biojava.nbio.structure.Element.Fe::DD,6649
6649 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(27)] = v919::
6653 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v920 = org.biojava.nbio.structure.Element.Co::DD,6655
6655 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(28)] = v920::
6659 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v921 = org.biojava.nbio.structure.Element.Ni::DD,6661
6661 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(29)] = v921::
6665 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v922 = org.biojava.nbio.structure.Element.Cu::DD,6667
6667 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(30)] = v922::
6671 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v923 = org.biojava.nbio.structure.Element.Zn::DD,6673
6673 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(31)] = v923::
6677 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v924 = org.biojava.nbio.structure.Element.Ga::DD,6679
6679 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(32)] = v924::
6683 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v925 = org.biojava.nbio.structure.Element.Ge::DD,6685
6685 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(33)] = v925::
6689 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v926 = org.biojava.nbio.structure.Element.As::DD,6691
6691 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(34)] = v926::
6695 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v927 = org.biojava.nbio.structure.Element.Se::DD,6697
6697 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(35)] = v927::
6701 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v928 = org.biojava.nbio.structure.Element.Br::DD,6703
6703 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(36)] = v928::
6707 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v929 = org.biojava.nbio.structure.Element.Kr::DD,6709
6709 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(37)] = v929::
6713 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v930 = org.biojava.nbio.structure.Element.Rb::DD,6715
6715 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(38)] = v930::
6719 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v931 = org.biojava.nbio.structure.Element.Sr::DD,6721
6721 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(39)] = v931::
6725 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v932 = org.biojava.nbio.structure.Element.Y::DD,6727
6727 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(40)] = v932::
6731 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v933 = org.biojava.nbio.structure.Element.Zr::DD,6733
6733 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(41)] = v933::
6737 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v934 = org.biojava.nbio.structure.Element.Nb::DD,6739
6739 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(42)] = v934::
6743 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v935 = org.biojava.nbio.structure.Element.Mo::DD,6745
6745 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(43)] = v935::
6749 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v936 = org.biojava.nbio.structure.Element.Tc::DD,6751
6751 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(44)] = v936::
6755 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v937 = org.biojava.nbio.structure.Element.Ru::DD,6757
6757 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(45)] = v937::
6761 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v938 = org.biojava.nbio.structure.Element.Rh::DD,6763
6763 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(46)] = v938::
6767 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v939 = org.biojava.nbio.structure.Element.Pd::DD,6769
6769 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(47)] = v939::
6773 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v940 = org.biojava.nbio.structure.Element.Ag::DD,6775
6775 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(48)] = v940::
6779 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v941 = org.biojava.nbio.structure.Element.Cd::DD,6781
6781 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(49)] = v941::
6785 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v942 = org.biojava.nbio.structure.Element.In::DD,6787
6787 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(50)] = v942::
6791 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v943 = org.biojava.nbio.structure.Element.Sn::DD,6793
6793 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(51)] = v943::
6797 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v944 = org.biojava.nbio.structure.Element.Sb::DD,6799
6799 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(52)] = v944::
6803 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v945 = org.biojava.nbio.structure.Element.Te::DD,6805
6805 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(53)] = v945::
6809 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v946 = org.biojava.nbio.structure.Element.I::DD,6811
6811 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(54)] = v946::
6815 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v947 = org.biojava.nbio.structure.Element.Xe::DD,6817
6817 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(55)] = v947::
6821 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v948 = org.biojava.nbio.structure.Element.Cs::DD,6823
6823 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(56)] = v948::
6827 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v949 = org.biojava.nbio.structure.Element.Ba::DD,6829
6829 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(57)] = v949::
6833 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v950 = org.biojava.nbio.structure.Element.La::DD,6835
6835 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(58)] = v950::
6839 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v951 = org.biojava.nbio.structure.Element.Ce::DD,6841
6841 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(59)] = v951::
6845 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v952 = org.biojava.nbio.structure.Element.Pr::DD,6847
6847 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(60)] = v952::
6851 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v953 = org.biojava.nbio.structure.Element.Nd::DD,6853
6853 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(61)] = v953::
6857 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v954 = org.biojava.nbio.structure.Element.Pm::DD,6859
6859 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(62)] = v954::
6863 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v955 = org.biojava.nbio.structure.Element.Sm::DD,6865
6865 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(63)] = v955::
6869 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v956 = org.biojava.nbio.structure.Element.Eu::DD,6871
6871 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(64)] = v956::
6875 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v957 = org.biojava.nbio.structure.Element.Gd::DD,6877
6877 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(65)] = v957::
6881 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v958 = org.biojava.nbio.structure.Element.Tb::DD,6883
6883 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(66)] = v958::
6887 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v959 = org.biojava.nbio.structure.Element.Dy::DD,6889
6889 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(67)] = v959::
6893 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v960 = org.biojava.nbio.structure.Element.Ho::DD,6895
6895 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(68)] = v960::
6899 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v961 = org.biojava.nbio.structure.Element.Er::DD,6901
6901 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(69)] = v961::
6905 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v962 = org.biojava.nbio.structure.Element.Tm::DD,6907
6907 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(70)] = v962::
6911 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v963 = org.biojava.nbio.structure.Element.Yb::DD,6913
6913 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(71)] = v963::
6917 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v964 = org.biojava.nbio.structure.Element.Lu::DD,6919
6919 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(72)] = v964::
6923 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v965 = org.biojava.nbio.structure.Element.Hf::DD,6925
6925 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(73)] = v965::
6929 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v966 = org.biojava.nbio.structure.Element.Ta::DD,6931
6931 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(74)] = v966::
6935 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v967 = org.biojava.nbio.structure.Element.W::DD,6937
6937 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(75)] = v967::
6941 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v968 = org.biojava.nbio.structure.Element.Re::DD,6943
6943 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(76)] = v968::
6947 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v969 = org.biojava.nbio.structure.Element.Os::DD,6949
6949 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(77)] = v969::
6953 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v970 = org.biojava.nbio.structure.Element.Ir::DD,6955
6955 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(78)] = v970::
6959 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v971 = org.biojava.nbio.structure.Element.Pt::DD,6961
6961 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(79)] = v971::
6965 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v972 = org.biojava.nbio.structure.Element.Au::DD,6967
6967 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(80)] = v972::
6971 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v973 = org.biojava.nbio.structure.Element.Hg::DD,6973
6973 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(81)] = v973::
6977 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v974 = org.biojava.nbio.structure.Element.Tl::DD,6979
6979 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(82)] = v974::
6983 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v975 = org.biojava.nbio.structure.Element.Pb::DD,6985
6985 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(83)] = v975::
6989 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v976 = org.biojava.nbio.structure.Element.Bi::DD,6991
6991 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(84)] = v976::
6995 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v977 = org.biojava.nbio.structure.Element.Po::DD,6997
6997 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(85)] = v977::
7001 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v978 = org.biojava.nbio.structure.Element.At::DD,7003
7003 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(86)] = v978::
7007 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v979 = org.biojava.nbio.structure.Element.Rn::DD,7009
7009 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(87)] = v979::
7013 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v980 = org.biojava.nbio.structure.Element.Fr::DD,7015
7015 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(88)] = v980::
7019 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v981 = org.biojava.nbio.structure.Element.Ra::DD,7021
7021 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(89)] = v981::
7025 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v982 = org.biojava.nbio.structure.Element.Ac::DD,7027
7027 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(90)] = v982::
7031 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v983 = org.biojava.nbio.structure.Element.Th::DD,7033
7033 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(91)] = v983::
7037 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v984 = org.biojava.nbio.structure.Element.Pa::DD,7039
7039 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(92)] = v984::
7043 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v985 = org.biojava.nbio.structure.Element.U::DD,7045
7045 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(93)] = v985::
7049 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v986 = org.biojava.nbio.structure.Element.Np::DD,7051
7051 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(94)] = v986::
7055 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v987 = org.biojava.nbio.structure.Element.Pu::DD,7057
7057 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(95)] = v987::
7061 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v988 = org.biojava.nbio.structure.Element.Am::DD,7063
7063 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(96)] = v988::
7067 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v989 = org.biojava.nbio.structure.Element.Cm::DD,7069
7069 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(97)] = v989::
7073 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v990 = org.biojava.nbio.structure.Element.Bk::DD,7075
7075 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(98)] = v990::
7079 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v991 = org.biojava.nbio.structure.Element.Cf::DD,7081
7081 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(99)] = v991::
7085 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v992 = org.biojava.nbio.structure.Element.Es::DD,7087
7087 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(100)] = v992::
7091 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v993 = org.biojava.nbio.structure.Element.Fm::DD,7093
7093 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(101)] = v993::
7097 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v994 = org.biojava.nbio.structure.Element.Md::DD,7099
7099 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(102)] = v994::
7103 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v995 = org.biojava.nbio.structure.Element.No::DD,7105
7105 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(103)] = v995::
7109 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v996 = org.biojava.nbio.structure.Element.Lr::DD,7111
7111 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(104)] = v996::
7115 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v997 = org.biojava.nbio.structure.Element.R::DD,7117
7117 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(105)] = v997::
7123 :: NORM :: declaration :: Ljava/util/HashMap :: v998 = new java.util.HashMap::
7129 :: CALL :: call :: [Lorg/biojava/nbio/structure/Element :: v1001 = values()::JM,7132:CL,33693
7132 :: EXPR :: assign :: I :: v1002 = v1001.length::DD,7155
7148 :: CALL :: call :: Ljava/lang/Object :: v1010 = v1004.put(v1008, v1003)::
7154 :: EXPR :: assign :: Ljava/lang/Object :: v1011 = v1012 + #(1)::DD,7157
7155 :: PRED :: IF :: Z :: if (v1012 < v1002) goto 7461::CD,7148:CD,7154:CD,7157
7157 :: EXPR :: assign :: null :: PHI v1012 = #(0), v1011::DD,7154:DD,7155
10781 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.<clinit>()::CD,10791:CD,10792:CD,10869:CD,10942:CD,11031:CD,11116:CD,11193:CD,11262:CD,11343:CD,11408:CD,11481:CD,11550:CD,11631:CD,11708:CD,11785:CD,11866:CD,11951:CD,12036:CD,12117:CD,12194:CD,12283:CD,12372:CD,12463:CD,12464:CD,12472:CD,12480:CD,12488:CD,12496:CD,12504:CD,12512:CD,12520:CD,12528:CD,12536:CD,12544:CD,12552:CD,12560:CD,12568:CD,12576:CD,12584:CD,12592:CD,12600:CD,12608:CD,12616:CD,12624:CD,12632:CD,12634:CD,12636
10791 :: NORM :: declaration :: [[I :: v6 = new [][]::CF,10792
10792 :: NORM :: declaration :: [I :: v8 = new []::DD,10865
10793 :: EXPR :: modify :: I :: v8[#(0)] = #(6)::
10797 :: EXPR :: modify :: I :: v8[#(2)] = #(-2)::
10801 :: EXPR :: modify :: I :: v8[#(3)] = #(-3)::
10805 :: EXPR :: modify :: I :: v8[#(4)] = #(-2)::
10809 :: EXPR :: modify :: I :: v8[#(6)] = #(-1)::
10813 :: EXPR :: modify :: I :: v8[#(8)] = #(-2)::
10817 :: EXPR :: modify :: I :: v8[#(9)] = #(-2)::
10821 :: EXPR :: modify :: I :: v8[#(10)] = #(-2)::
10825 :: EXPR :: modify :: I :: v8[#(11)] = #(-2)::
10829 :: EXPR :: modify :: I :: v8[#(12)] = #(-2)::
10833 :: EXPR :: modify :: I :: v8[#(13)] = #(-3)::
10837 :: EXPR :: modify :: I :: v8[#(14)] = #(-4)::
10841 :: EXPR :: modify :: I :: v8[#(15)] = #(-4)::
10845 :: EXPR :: modify :: I :: v8[#(16)] = #(-3)::
10849 :: EXPR :: modify :: I :: v8[#(17)] = #(-3)::
10853 :: EXPR :: modify :: I :: v8[#(18)] = #(-3)::
10857 :: EXPR :: modify :: I :: v8[#(19)] = #(-2)::
10861 :: EXPR :: modify :: I :: v8[#(20)] = #(-4)::
10865 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(0)] = v8::
10869 :: NORM :: declaration :: [I :: v31 = new []::DD,10938
10870 :: EXPR :: modify :: I :: v31[#(1)] = #(4)::
10874 :: EXPR :: modify :: I :: v31[#(2)] = #(-1)::
10878 :: EXPR :: modify :: I :: v31[#(5)] = #(1)::
10882 :: EXPR :: modify :: I :: v31[#(6)] = #(-2)::
10886 :: EXPR :: modify :: I :: v31[#(7)] = #(-2)::
10890 :: EXPR :: modify :: I :: v31[#(8)] = #(-1)::
10894 :: EXPR :: modify :: I :: v31[#(9)] = #(-1)::
10898 :: EXPR :: modify :: I :: v31[#(10)] = #(-1)::
10902 :: EXPR :: modify :: I :: v31[#(11)] = #(-2)::
10906 :: EXPR :: modify :: I :: v31[#(12)] = #(-1)::
10910 :: EXPR :: modify :: I :: v31[#(14)] = #(-1)::
10914 :: EXPR :: modify :: I :: v31[#(15)] = #(-1)::
10918 :: EXPR :: modify :: I :: v31[#(16)] = #(-1)::
10922 :: EXPR :: modify :: I :: v31[#(17)] = #(-2)::
10926 :: EXPR :: modify :: I :: v31[#(18)] = #(-2)::
10930 :: EXPR :: modify :: I :: v31[#(19)] = #(-3)::
10934 :: EXPR :: modify :: I :: v31[#(20)] = #(-4)::
10938 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(1)] = v31::
10942 :: NORM :: declaration :: [I :: v34 = new []::DD,11027
10943 :: EXPR :: modify :: I :: v34[#(0)] = #(-2)::
10947 :: EXPR :: modify :: I :: v34[#(1)] = #(-1)::
10951 :: EXPR :: modify :: I :: v34[#(2)] = #(7)::
10955 :: EXPR :: modify :: I :: v34[#(3)] = #(-3)::
10959 :: EXPR :: modify :: I :: v34[#(4)] = #(-1)::
10963 :: EXPR :: modify :: I :: v34[#(5)] = #(-1)::
10967 :: EXPR :: modify :: I :: v34[#(6)] = #(-1)::
10971 :: EXPR :: modify :: I :: v34[#(7)] = #(-2)::
10975 :: EXPR :: modify :: I :: v34[#(8)] = #(-1)::
10979 :: EXPR :: modify :: I :: v34[#(9)] = #(-1)::
10983 :: EXPR :: modify :: I :: v34[#(10)] = #(-1)::
10987 :: EXPR :: modify :: I :: v34[#(11)] = #(-2)::
10991 :: EXPR :: modify :: I :: v34[#(12)] = #(-2)::
10995 :: EXPR :: modify :: I :: v34[#(13)] = #(-2)::
10999 :: EXPR :: modify :: I :: v34[#(14)] = #(-3)::
11003 :: EXPR :: modify :: I :: v34[#(15)] = #(-3)::
11007 :: EXPR :: modify :: I :: v34[#(16)] = #(-2)::
11011 :: EXPR :: modify :: I :: v34[#(17)] = #(-4)::
11015 :: EXPR :: modify :: I :: v34[#(18)] = #(-3)::
11019 :: EXPR :: modify :: I :: v34[#(19)] = #(-4)::
11023 :: EXPR :: modify :: I :: v34[#(20)] = #(-4)::
11027 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(2)] = v34::
11031 :: NORM :: declaration :: [I :: v35 = new []::DD,11112
11032 :: EXPR :: modify :: I :: v35[#(0)] = #(-3)::
11036 :: EXPR :: modify :: I :: v35[#(2)] = #(-3)::
11040 :: EXPR :: modify :: I :: v35[#(3)] = #(9)::
11044 :: EXPR :: modify :: I :: v35[#(4)] = #(-1)::
11048 :: EXPR :: modify :: I :: v35[#(5)] = #(-1)::
11052 :: EXPR :: modify :: I :: v35[#(6)] = #(-3)::
11056 :: EXPR :: modify :: I :: v35[#(7)] = #(-3)::
11060 :: EXPR :: modify :: I :: v35[#(8)] = #(-4)::
11064 :: EXPR :: modify :: I :: v35[#(9)] = #(-3)::
11068 :: EXPR :: modify :: I :: v35[#(10)] = #(-3)::
11072 :: EXPR :: modify :: I :: v35[#(11)] = #(-3)::
11076 :: EXPR :: modify :: I :: v35[#(12)] = #(-3)::
11080 :: EXPR :: modify :: I :: v35[#(13)] = #(-1)::
11084 :: EXPR :: modify :: I :: v35[#(14)] = #(-1)::
11088 :: EXPR :: modify :: I :: v35[#(15)] = #(-1)::
11092 :: EXPR :: modify :: I :: v35[#(16)] = #(-1)::
11096 :: EXPR :: modify :: I :: v35[#(17)] = #(-2)::
11100 :: EXPR :: modify :: I :: v35[#(18)] = #(-2)::
11104 :: EXPR :: modify :: I :: v35[#(19)] = #(-2)::
11108 :: EXPR :: modify :: I :: v35[#(20)] = #(-4)::
11112 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(3)] = v35::
11116 :: NORM :: declaration :: [I :: v36 = new []::DD,11189
11117 :: EXPR :: modify :: I :: v36[#(0)] = #(-2)::
11121 :: EXPR :: modify :: I :: v36[#(2)] = #(-1)::
11125 :: EXPR :: modify :: I :: v36[#(3)] = #(-1)::
11129 :: EXPR :: modify :: I :: v36[#(4)] = #(5)::
11133 :: EXPR :: modify :: I :: v36[#(5)] = #(1)::
11137 :: EXPR :: modify :: I :: v36[#(6)] = #(-1)::
11141 :: EXPR :: modify :: I :: v36[#(8)] = #(-1)::
11145 :: EXPR :: modify :: I :: v36[#(9)] = #(-1)::
11149 :: EXPR :: modify :: I :: v36[#(10)] = #(-1)::
11153 :: EXPR :: modify :: I :: v36[#(11)] = #(-2)::
11157 :: EXPR :: modify :: I :: v36[#(12)] = #(-1)::
11161 :: EXPR :: modify :: I :: v36[#(14)] = #(-1)::
11165 :: EXPR :: modify :: I :: v36[#(15)] = #(-1)::
11169 :: EXPR :: modify :: I :: v36[#(16)] = #(-1)::
11173 :: EXPR :: modify :: I :: v36[#(17)] = #(-2)::
11177 :: EXPR :: modify :: I :: v36[#(18)] = #(-2)::
11181 :: EXPR :: modify :: I :: v36[#(19)] = #(-2)::
11185 :: EXPR :: modify :: I :: v36[#(20)] = #(-4)::
11189 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(4)] = v36::
11193 :: NORM :: declaration :: [I :: v37 = new []::DD,11258
11194 :: EXPR :: modify :: I :: v37[#(1)] = #(1)::
11198 :: EXPR :: modify :: I :: v37[#(2)] = #(-1)::
11202 :: EXPR :: modify :: I :: v37[#(3)] = #(-1)::
11206 :: EXPR :: modify :: I :: v37[#(4)] = #(1)::
11210 :: EXPR :: modify :: I :: v37[#(5)] = #(4)::
11214 :: EXPR :: modify :: I :: v37[#(7)] = #(1)::
11218 :: EXPR :: modify :: I :: v37[#(11)] = #(-1)::
11222 :: EXPR :: modify :: I :: v37[#(12)] = #(-1)::
11226 :: EXPR :: modify :: I :: v37[#(13)] = #(-2)::
11230 :: EXPR :: modify :: I :: v37[#(14)] = #(-2)::
11234 :: EXPR :: modify :: I :: v37[#(15)] = #(-2)::
11238 :: EXPR :: modify :: I :: v37[#(16)] = #(-1)::
11242 :: EXPR :: modify :: I :: v37[#(17)] = #(-2)::
11246 :: EXPR :: modify :: I :: v37[#(18)] = #(-2)::
11250 :: EXPR :: modify :: I :: v37[#(19)] = #(-3)::
11254 :: EXPR :: modify :: I :: v37[#(20)] = #(-4)::
11258 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(5)] = v37::
11262 :: NORM :: declaration :: [I :: v38 = new []::DD,11339
11263 :: EXPR :: modify :: I :: v38[#(0)] = #(-1)::
11267 :: EXPR :: modify :: I :: v38[#(1)] = #(-2)::
11271 :: EXPR :: modify :: I :: v38[#(2)] = #(-1)::
11275 :: EXPR :: modify :: I :: v38[#(3)] = #(-3)::
11279 :: EXPR :: modify :: I :: v38[#(4)] = #(-1)::
11283 :: EXPR :: modify :: I :: v38[#(6)] = #(6)::
11287 :: EXPR :: modify :: I :: v38[#(7)] = #(1)::
11291 :: EXPR :: modify :: I :: v38[#(8)] = #(2)::
11295 :: EXPR :: modify :: I :: v38[#(10)] = #(-1)::
11299 :: EXPR :: modify :: I :: v38[#(11)] = #(-1)::
11303 :: EXPR :: modify :: I :: v38[#(12)] = #(-2)::
11307 :: EXPR :: modify :: I :: v38[#(13)] = #(-3)::
11311 :: EXPR :: modify :: I :: v38[#(14)] = #(-3)::
11315 :: EXPR :: modify :: I :: v38[#(15)] = #(-4)::
11319 :: EXPR :: modify :: I :: v38[#(16)] = #(-3)::
11323 :: EXPR :: modify :: I :: v38[#(17)] = #(-3)::
11327 :: EXPR :: modify :: I :: v38[#(18)] = #(-3)::
11331 :: EXPR :: modify :: I :: v38[#(19)] = #(-4)::
11335 :: EXPR :: modify :: I :: v38[#(20)] = #(-4)::
11339 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(6)] = v38::
11343 :: NORM :: declaration :: [I :: v39 = new []::DD,11404
11344 :: EXPR :: modify :: I :: v39[#(1)] = #(-2)::
11348 :: EXPR :: modify :: I :: v39[#(2)] = #(-2)::
11352 :: EXPR :: modify :: I :: v39[#(3)] = #(-3)::
11356 :: EXPR :: modify :: I :: v39[#(5)] = #(1)::
11360 :: EXPR :: modify :: I :: v39[#(6)] = #(1)::
11364 :: EXPR :: modify :: I :: v39[#(7)] = #(6)::
11368 :: EXPR :: modify :: I :: v39[#(11)] = #(1)::
11372 :: EXPR :: modify :: I :: v39[#(13)] = #(-3)::
11376 :: EXPR :: modify :: I :: v39[#(14)] = #(-3)::
11380 :: EXPR :: modify :: I :: v39[#(15)] = #(-3)::
11384 :: EXPR :: modify :: I :: v39[#(16)] = #(-2)::
11388 :: EXPR :: modify :: I :: v39[#(17)] = #(-3)::
11392 :: EXPR :: modify :: I :: v39[#(18)] = #(-2)::
11396 :: EXPR :: modify :: I :: v39[#(19)] = #(-4)::
11400 :: EXPR :: modify :: I :: v39[#(20)] = #(-4)::
11404 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(7)] = v39::
11408 :: NORM :: declaration :: [I :: v40 = new []::DD,11477
11409 :: EXPR :: modify :: I :: v40[#(0)] = #(-2)::
11413 :: EXPR :: modify :: I :: v40[#(1)] = #(-1)::
11417 :: EXPR :: modify :: I :: v40[#(2)] = #(-1)::
11421 :: EXPR :: modify :: I :: v40[#(3)] = #(-4)::
11425 :: EXPR :: modify :: I :: v40[#(4)] = #(-1)::
11429 :: EXPR :: modify :: I :: v40[#(6)] = #(2)::
11433 :: EXPR :: modify :: I :: v40[#(8)] = #(5)::
11437 :: EXPR :: modify :: I :: v40[#(9)] = #(2)::
11441 :: EXPR :: modify :: I :: v40[#(10)] = #(1)::
11445 :: EXPR :: modify :: I :: v40[#(13)] = #(-2)::
11449 :: EXPR :: modify :: I :: v40[#(14)] = #(-3)::
11453 :: EXPR :: modify :: I :: v40[#(15)] = #(-3)::
11457 :: EXPR :: modify :: I :: v40[#(16)] = #(-2)::
11461 :: EXPR :: modify :: I :: v40[#(17)] = #(-3)::
11465 :: EXPR :: modify :: I :: v40[#(18)] = #(-2)::
11469 :: EXPR :: modify :: I :: v40[#(19)] = #(-3)::
11473 :: EXPR :: modify :: I :: v40[#(20)] = #(-4)::
11477 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(8)] = v40::
11481 :: NORM :: declaration :: [I :: v41 = new []::DD,11546
11482 :: EXPR :: modify :: I :: v41[#(0)] = #(-2)::
11486 :: EXPR :: modify :: I :: v41[#(1)] = #(-1)::
11490 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
11494 :: EXPR :: modify :: I :: v41[#(3)] = #(-3)::
11498 :: EXPR :: modify :: I :: v41[#(4)] = #(-1)::
11502 :: EXPR :: modify :: I :: v41[#(8)] = #(2)::
11506 :: EXPR :: modify :: I :: v41[#(9)] = #(5)::
11510 :: EXPR :: modify :: I :: v41[#(10)] = #(1)::
11514 :: EXPR :: modify :: I :: v41[#(12)] = #(1)::
11518 :: EXPR :: modify :: I :: v41[#(13)] = #(-2)::
11522 :: EXPR :: modify :: I :: v41[#(14)] = #(-3)::
11526 :: EXPR :: modify :: I :: v41[#(15)] = #(-2)::
11530 :: EXPR :: modify :: I :: v41[#(17)] = #(-3)::
11534 :: EXPR :: modify :: I :: v41[#(18)] = #(-1)::
11538 :: EXPR :: modify :: I :: v41[#(19)] = #(-2)::
11542 :: EXPR :: modify :: I :: v41[#(20)] = #(-4)::
11546 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(9)] = v41::
11550 :: NORM :: declaration :: [I :: v42 = new []::DD,11627
11551 :: EXPR :: modify :: I :: v42[#(0)] = #(-2)::
11555 :: EXPR :: modify :: I :: v42[#(1)] = #(-1)::
11559 :: EXPR :: modify :: I :: v42[#(2)] = #(-1)::
11563 :: EXPR :: modify :: I :: v42[#(3)] = #(-3)::
11567 :: EXPR :: modify :: I :: v42[#(4)] = #(-1)::
11571 :: EXPR :: modify :: I :: v42[#(6)] = #(-1)::
11575 :: EXPR :: modify :: I :: v42[#(8)] = #(1)::
11579 :: EXPR :: modify :: I :: v42[#(9)] = #(1)::
11583 :: EXPR :: modify :: I :: v42[#(10)] = #(5)::
11587 :: EXPR :: modify :: I :: v42[#(11)] = #(-1)::
11591 :: EXPR :: modify :: I :: v42[#(12)] = #(2)::
11595 :: EXPR :: modify :: I :: v42[#(13)] = #(-2)::
11599 :: EXPR :: modify :: I :: v42[#(14)] = #(-3)::
11603 :: EXPR :: modify :: I :: v42[#(15)] = #(-2)::
11607 :: EXPR :: modify :: I :: v42[#(16)] = #(-1)::
11611 :: EXPR :: modify :: I :: v42[#(17)] = #(-3)::
11615 :: EXPR :: modify :: I :: v42[#(18)] = #(-2)::
11619 :: EXPR :: modify :: I :: v42[#(19)] = #(-3)::
11623 :: EXPR :: modify :: I :: v42[#(20)] = #(-4)::
11627 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(10)] = v42::
11631 :: NORM :: declaration :: [I :: v43 = new []::DD,11704
11632 :: EXPR :: modify :: I :: v43[#(0)] = #(-2)::
11636 :: EXPR :: modify :: I :: v43[#(1)] = #(-2)::
11640 :: EXPR :: modify :: I :: v43[#(2)] = #(-2)::
11644 :: EXPR :: modify :: I :: v43[#(3)] = #(-3)::
11648 :: EXPR :: modify :: I :: v43[#(4)] = #(-2)::
11652 :: EXPR :: modify :: I :: v43[#(5)] = #(-1)::
11656 :: EXPR :: modify :: I :: v43[#(6)] = #(-1)::
11660 :: EXPR :: modify :: I :: v43[#(7)] = #(1)::
11664 :: EXPR :: modify :: I :: v43[#(10)] = #(-1)::
11668 :: EXPR :: modify :: I :: v43[#(11)] = #(8)::
11672 :: EXPR :: modify :: I :: v43[#(13)] = #(-3)::
11676 :: EXPR :: modify :: I :: v43[#(14)] = #(-3)::
11680 :: EXPR :: modify :: I :: v43[#(15)] = #(-3)::
11684 :: EXPR :: modify :: I :: v43[#(16)] = #(-2)::
11688 :: EXPR :: modify :: I :: v43[#(17)] = #(-1)::
11692 :: EXPR :: modify :: I :: v43[#(18)] = #(2)::
11696 :: EXPR :: modify :: I :: v43[#(19)] = #(-2)::
11700 :: EXPR :: modify :: I :: v43[#(20)] = #(-4)::
11704 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(11)] = v43::
11708 :: NORM :: declaration :: [I :: v44 = new []::DD,11781
11709 :: EXPR :: modify :: I :: v44[#(0)] = #(-2)::
11713 :: EXPR :: modify :: I :: v44[#(1)] = #(-1)::
11717 :: EXPR :: modify :: I :: v44[#(2)] = #(-2)::
11721 :: EXPR :: modify :: I :: v44[#(3)] = #(-3)::
11725 :: EXPR :: modify :: I :: v44[#(4)] = #(-1)::
11729 :: EXPR :: modify :: I :: v44[#(5)] = #(-1)::
11733 :: EXPR :: modify :: I :: v44[#(6)] = #(-2)::
11737 :: EXPR :: modify :: I :: v44[#(9)] = #(1)::
11741 :: EXPR :: modify :: I :: v44[#(10)] = #(2)::
11745 :: EXPR :: modify :: I :: v44[#(12)] = #(5)::
11749 :: EXPR :: modify :: I :: v44[#(13)] = #(-3)::
11753 :: EXPR :: modify :: I :: v44[#(14)] = #(-3)::
11757 :: EXPR :: modify :: I :: v44[#(15)] = #(-2)::
11761 :: EXPR :: modify :: I :: v44[#(16)] = #(-1)::
11765 :: EXPR :: modify :: I :: v44[#(17)] = #(-3)::
11769 :: EXPR :: modify :: I :: v44[#(18)] = #(-2)::
11773 :: EXPR :: modify :: I :: v44[#(19)] = #(-3)::
11777 :: EXPR :: modify :: I :: v44[#(20)] = #(-4)::
11781 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(12)] = v44::
11785 :: NORM :: declaration :: [I :: v45 = new []::DD,11862
11786 :: EXPR :: modify :: I :: v45[#(0)] = #(-3)::
11790 :: EXPR :: modify :: I :: v45[#(2)] = #(-2)::
11794 :: EXPR :: modify :: I :: v45[#(3)] = #(-1)::
11798 :: EXPR :: modify :: I :: v45[#(5)] = #(-2)::
11802 :: EXPR :: modify :: I :: v45[#(6)] = #(-3)::
11806 :: EXPR :: modify :: I :: v45[#(7)] = #(-3)::
11810 :: EXPR :: modify :: I :: v45[#(8)] = #(-2)::
11814 :: EXPR :: modify :: I :: v45[#(9)] = #(-2)::
11818 :: EXPR :: modify :: I :: v45[#(10)] = #(-2)::
11822 :: EXPR :: modify :: I :: v45[#(11)] = #(-3)::
11826 :: EXPR :: modify :: I :: v45[#(12)] = #(-3)::
11830 :: EXPR :: modify :: I :: v45[#(13)] = #(4)::
11834 :: EXPR :: modify :: I :: v45[#(14)] = #(3)::
11838 :: EXPR :: modify :: I :: v45[#(15)] = #(1)::
11842 :: EXPR :: modify :: I :: v45[#(16)] = #(1)::
11846 :: EXPR :: modify :: I :: v45[#(17)] = #(-1)::
11850 :: EXPR :: modify :: I :: v45[#(18)] = #(-1)::
11854 :: EXPR :: modify :: I :: v45[#(19)] = #(-3)::
11858 :: EXPR :: modify :: I :: v45[#(20)] = #(-4)::
11862 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(13)] = v45::
11866 :: NORM :: declaration :: [I :: v46 = new []::DD,11947
11867 :: EXPR :: modify :: I :: v46[#(0)] = #(-4)::
11871 :: EXPR :: modify :: I :: v46[#(1)] = #(-1)::
11875 :: EXPR :: modify :: I :: v46[#(2)] = #(-3)::
11879 :: EXPR :: modify :: I :: v46[#(3)] = #(-1)::
11883 :: EXPR :: modify :: I :: v46[#(4)] = #(-1)::
11887 :: EXPR :: modify :: I :: v46[#(5)] = #(-2)::
11891 :: EXPR :: modify :: I :: v46[#(6)] = #(-3)::
11895 :: EXPR :: modify :: I :: v46[#(7)] = #(-3)::
11899 :: EXPR :: modify :: I :: v46[#(8)] = #(-3)::
11903 :: EXPR :: modify :: I :: v46[#(9)] = #(-3)::
11907 :: EXPR :: modify :: I :: v46[#(10)] = #(-3)::
11911 :: EXPR :: modify :: I :: v46[#(11)] = #(-3)::
11915 :: EXPR :: modify :: I :: v46[#(12)] = #(-3)::
11919 :: EXPR :: modify :: I :: v46[#(13)] = #(3)::
11923 :: EXPR :: modify :: I :: v46[#(14)] = #(4)::
11927 :: EXPR :: modify :: I :: v46[#(15)] = #(2)::
11931 :: EXPR :: modify :: I :: v46[#(16)] = #(1)::
11935 :: EXPR :: modify :: I :: v46[#(18)] = #(-1)::
11939 :: EXPR :: modify :: I :: v46[#(19)] = #(-3)::
11943 :: EXPR :: modify :: I :: v46[#(20)] = #(-4)::
11947 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(14)] = v46::
11951 :: NORM :: declaration :: [I :: v47 = new []::DD,12032
11952 :: EXPR :: modify :: I :: v47[#(0)] = #(-4)::
11956 :: EXPR :: modify :: I :: v47[#(1)] = #(-1)::
11960 :: EXPR :: modify :: I :: v47[#(2)] = #(-3)::
11964 :: EXPR :: modify :: I :: v47[#(3)] = #(-1)::
11968 :: EXPR :: modify :: I :: v47[#(4)] = #(-1)::
11972 :: EXPR :: modify :: I :: v47[#(5)] = #(-2)::
11976 :: EXPR :: modify :: I :: v47[#(6)] = #(-4)::
11980 :: EXPR :: modify :: I :: v47[#(7)] = #(-3)::
11984 :: EXPR :: modify :: I :: v47[#(8)] = #(-3)::
11988 :: EXPR :: modify :: I :: v47[#(9)] = #(-2)::
11992 :: EXPR :: modify :: I :: v47[#(10)] = #(-2)::
11996 :: EXPR :: modify :: I :: v47[#(11)] = #(-3)::
12000 :: EXPR :: modify :: I :: v47[#(12)] = #(-2)::
12004 :: EXPR :: modify :: I :: v47[#(13)] = #(1)::
12008 :: EXPR :: modify :: I :: v47[#(14)] = #(2)::
12012 :: EXPR :: modify :: I :: v47[#(15)] = #(4)::
12016 :: EXPR :: modify :: I :: v47[#(16)] = #(2)::
12020 :: EXPR :: modify :: I :: v47[#(18)] = #(-1)::
12024 :: EXPR :: modify :: I :: v47[#(19)] = #(-2)::
12028 :: EXPR :: modify :: I :: v47[#(20)] = #(-4)::
12032 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(15)] = v47::
12036 :: NORM :: declaration :: [I :: v48 = new []::DD,12113
12037 :: EXPR :: modify :: I :: v48[#(0)] = #(-3)::
12041 :: EXPR :: modify :: I :: v48[#(1)] = #(-1)::
12045 :: EXPR :: modify :: I :: v48[#(2)] = #(-2)::
12049 :: EXPR :: modify :: I :: v48[#(3)] = #(-1)::
12053 :: EXPR :: modify :: I :: v48[#(4)] = #(-1)::
12057 :: EXPR :: modify :: I :: v48[#(5)] = #(-1)::
12061 :: EXPR :: modify :: I :: v48[#(6)] = #(-3)::
12065 :: EXPR :: modify :: I :: v48[#(7)] = #(-2)::
12069 :: EXPR :: modify :: I :: v48[#(8)] = #(-2)::
12073 :: EXPR :: modify :: I :: v48[#(10)] = #(-1)::
12077 :: EXPR :: modify :: I :: v48[#(11)] = #(-2)::
12081 :: EXPR :: modify :: I :: v48[#(12)] = #(-1)::
12085 :: EXPR :: modify :: I :: v48[#(13)] = #(1)::
12089 :: EXPR :: modify :: I :: v48[#(14)] = #(1)::
12093 :: EXPR :: modify :: I :: v48[#(15)] = #(2)::
12097 :: EXPR :: modify :: I :: v48[#(16)] = #(5)::
12101 :: EXPR :: modify :: I :: v48[#(18)] = #(-1)::
12105 :: EXPR :: modify :: I :: v48[#(19)] = #(-1)::
12109 :: EXPR :: modify :: I :: v48[#(20)] = #(-4)::
12113 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(16)] = v48::
12117 :: NORM :: declaration :: [I :: v49 = new []::DD,12190
12118 :: EXPR :: modify :: I :: v49[#(0)] = #(-3)::
12122 :: EXPR :: modify :: I :: v49[#(1)] = #(-2)::
12126 :: EXPR :: modify :: I :: v49[#(2)] = #(-4)::
12130 :: EXPR :: modify :: I :: v49[#(3)] = #(-2)::
12134 :: EXPR :: modify :: I :: v49[#(4)] = #(-2)::
12138 :: EXPR :: modify :: I :: v49[#(5)] = #(-2)::
12142 :: EXPR :: modify :: I :: v49[#(6)] = #(-3)::
12146 :: EXPR :: modify :: I :: v49[#(7)] = #(-3)::
12150 :: EXPR :: modify :: I :: v49[#(8)] = #(-3)::
12154 :: EXPR :: modify :: I :: v49[#(9)] = #(-3)::
12158 :: EXPR :: modify :: I :: v49[#(10)] = #(-3)::
12162 :: EXPR :: modify :: I :: v49[#(11)] = #(-1)::
12166 :: EXPR :: modify :: I :: v49[#(12)] = #(-3)::
12170 :: EXPR :: modify :: I :: v49[#(13)] = #(-1)::
12174 :: EXPR :: modify :: I :: v49[#(17)] = #(6)::
12178 :: EXPR :: modify :: I :: v49[#(18)] = #(3)::
12182 :: EXPR :: modify :: I :: v49[#(19)] = #(1)::
12186 :: EXPR :: modify :: I :: v49[#(20)] = #(-4)::
12190 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(17)] = v49::
12194 :: NORM :: declaration :: [I :: v50 = new []::DD,12279
12195 :: EXPR :: modify :: I :: v50[#(0)] = #(-3)::
12199 :: EXPR :: modify :: I :: v50[#(1)] = #(-2)::
12203 :: EXPR :: modify :: I :: v50[#(2)] = #(-3)::
12207 :: EXPR :: modify :: I :: v50[#(3)] = #(-2)::
12211 :: EXPR :: modify :: I :: v50[#(4)] = #(-2)::
12215 :: EXPR :: modify :: I :: v50[#(5)] = #(-2)::
12219 :: EXPR :: modify :: I :: v50[#(6)] = #(-3)::
12223 :: EXPR :: modify :: I :: v50[#(7)] = #(-2)::
12227 :: EXPR :: modify :: I :: v50[#(8)] = #(-2)::
12231 :: EXPR :: modify :: I :: v50[#(9)] = #(-1)::
12235 :: EXPR :: modify :: I :: v50[#(10)] = #(-2)::
12239 :: EXPR :: modify :: I :: v50[#(11)] = #(2)::
12243 :: EXPR :: modify :: I :: v50[#(12)] = #(-2)::
12247 :: EXPR :: modify :: I :: v50[#(13)] = #(-1)::
12251 :: EXPR :: modify :: I :: v50[#(14)] = #(-1)::
12255 :: EXPR :: modify :: I :: v50[#(15)] = #(-1)::
12259 :: EXPR :: modify :: I :: v50[#(16)] = #(-1)::
12263 :: EXPR :: modify :: I :: v50[#(17)] = #(3)::
12267 :: EXPR :: modify :: I :: v50[#(18)] = #(7)::
12271 :: EXPR :: modify :: I :: v50[#(19)] = #(2)::
12275 :: EXPR :: modify :: I :: v50[#(20)] = #(-4)::
12279 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(18)] = v50::
12283 :: NORM :: declaration :: [I :: v51 = new []::DD,12368
12284 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
12288 :: EXPR :: modify :: I :: v51[#(1)] = #(-3)::
12292 :: EXPR :: modify :: I :: v51[#(2)] = #(-4)::
12296 :: EXPR :: modify :: I :: v51[#(3)] = #(-2)::
12300 :: EXPR :: modify :: I :: v51[#(4)] = #(-2)::
12304 :: EXPR :: modify :: I :: v51[#(5)] = #(-3)::
12308 :: EXPR :: modify :: I :: v51[#(6)] = #(-4)::
12312 :: EXPR :: modify :: I :: v51[#(7)] = #(-4)::
12316 :: EXPR :: modify :: I :: v51[#(8)] = #(-3)::
12320 :: EXPR :: modify :: I :: v51[#(9)] = #(-2)::
12324 :: EXPR :: modify :: I :: v51[#(10)] = #(-3)::
12328 :: EXPR :: modify :: I :: v51[#(11)] = #(-2)::
12332 :: EXPR :: modify :: I :: v51[#(12)] = #(-3)::
12336 :: EXPR :: modify :: I :: v51[#(13)] = #(-3)::
12340 :: EXPR :: modify :: I :: v51[#(14)] = #(-3)::
12344 :: EXPR :: modify :: I :: v51[#(15)] = #(-2)::
12348 :: EXPR :: modify :: I :: v51[#(16)] = #(-1)::
12352 :: EXPR :: modify :: I :: v51[#(17)] = #(1)::
12356 :: EXPR :: modify :: I :: v51[#(18)] = #(2)::
12360 :: EXPR :: modify :: I :: v51[#(19)] = #(11)::
12364 :: EXPR :: modify :: I :: v51[#(20)] = #(-4)::
12368 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(19)] = v51::
12372 :: NORM :: declaration :: [I :: v52 = new []::DD,12457
12373 :: EXPR :: modify :: I :: v52[#(0)] = #(-4)::
12377 :: EXPR :: modify :: I :: v52[#(1)] = #(-4)::
12381 :: EXPR :: modify :: I :: v52[#(2)] = #(-4)::
12385 :: EXPR :: modify :: I :: v52[#(3)] = #(-4)::
12389 :: EXPR :: modify :: I :: v52[#(4)] = #(-4)::
12393 :: EXPR :: modify :: I :: v52[#(5)] = #(-4)::
12397 :: EXPR :: modify :: I :: v52[#(6)] = #(-4)::
12401 :: EXPR :: modify :: I :: v52[#(7)] = #(-4)::
12405 :: EXPR :: modify :: I :: v52[#(8)] = #(-4)::
12409 :: EXPR :: modify :: I :: v52[#(9)] = #(-4)::
12413 :: EXPR :: modify :: I :: v52[#(10)] = #(-4)::
12417 :: EXPR :: modify :: I :: v52[#(11)] = #(-4)::
12421 :: EXPR :: modify :: I :: v52[#(12)] = #(-4)::
12425 :: EXPR :: modify :: I :: v52[#(13)] = #(-4)::
12429 :: EXPR :: modify :: I :: v52[#(14)] = #(-4)::
12433 :: EXPR :: modify :: I :: v52[#(15)] = #(-4)::
12437 :: EXPR :: modify :: I :: v52[#(16)] = #(-4)::
12441 :: EXPR :: modify :: I :: v52[#(17)] = #(-4)::
12445 :: EXPR :: modify :: I :: v52[#(18)] = #(-4)::
12449 :: EXPR :: modify :: I :: v52[#(19)] = #(-4)::
12453 :: EXPR :: modify :: I :: v52[#(20)] = #(1)::
12457 :: EXPR :: modify :: Ljava/lang/Object :: v6[#(20)] = v52::
12463 :: NORM :: declaration :: [Ljava/lang/Character :: v53 = new java.lang.Character[]::DD,12632:JM,12468
12464 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(71))::JM,12468
12468 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(0)] = v56::
12472 :: CALL :: call :: Ljava/lang/Character :: v59 = valueOf(#(65))::JM,12476
12476 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(1)] = v59::
12480 :: CALL :: call :: Ljava/lang/Character :: v62 = valueOf(#(80))::JM,12484
12484 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(2)] = v62::
12488 :: CALL :: call :: Ljava/lang/Character :: v65 = valueOf(#(67))::JM,12492
12492 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(3)] = v65::
12496 :: CALL :: call :: Ljava/lang/Character :: v68 = valueOf(#(84))::JM,12500
12500 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(4)] = v68::
12504 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(83))::JM,12508
12508 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(5)] = v71::
12512 :: CALL :: call :: Ljava/lang/Character :: v74 = valueOf(#(68))::JM,12516
12516 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(6)] = v74::
12520 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(78))::JM,12524
12524 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(7)] = v77::
12528 :: CALL :: call :: Ljava/lang/Character :: v80 = valueOf(#(69))::JM,12532
12532 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(8)] = v80::
12536 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(81))::JM,12540
12540 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(9)] = v83::
12544 :: CALL :: call :: Ljava/lang/Character :: v86 = valueOf(#(75))::JM,12548
12548 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(10)] = v86::
12552 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(72))::JM,12556
12556 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(11)] = v89::
12560 :: CALL :: call :: Ljava/lang/Character :: v92 = valueOf(#(82))::JM,12564
12564 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(12)] = v92::
12568 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(86))::JM,12572
12572 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(13)] = v95::
12576 :: CALL :: call :: Ljava/lang/Character :: v98 = valueOf(#(73))::JM,12580
12580 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(14)] = v98::
12584 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(76))::JM,12588
12588 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(15)] = v101::
12592 :: CALL :: call :: Ljava/lang/Character :: v104 = valueOf(#(77))::JM,12596
12596 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(16)] = v104::
12600 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(70))::JM,12604
12604 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(17)] = v107::
12608 :: CALL :: call :: Ljava/lang/Character :: v110 = valueOf(#(89))::JM,12612
12612 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(18)] = v110::
12616 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(87))::JM,12620
12620 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(19)] = v113::
12624 :: CALL :: call :: Ljava/lang/Character :: v116 = valueOf(#(45))::JM,12628
12628 :: EXPR :: modify :: Ljava/lang/Object :: v53[#(20)] = v116::
12632 :: EXPR :: modify :: [Ljava/lang/Character :: org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1 = v53::
12634 :: EXPR :: reference :: [Ljava/lang/Character :: v117 = org.biojava.nbio.structure.align.util.AFPAlignmentDisplay.aa1::JM,12636
12636 :: CALL :: call :: Ljava/util/List :: v119 = asList(v117)::JM,12636
14028 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.<clinit>()::CD,14038:CD,14045:CD,14052
14038 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^(?:CATH:)?([0-9][a-z...), #(2))::
14045 :: CALL :: call :: Ljava/util/regex/Pattern :: v11 = compile(#(^(?:SCOP:)?d([0-9][a-...), #(2))::
14052 :: CALL :: call :: Ljava/util/regex/Pattern :: v14 = compile(#(^(?:ECOD:)?e([0-9][a-...), #(2))::
14070 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.<clinit>()::CD,14073:JM,33747:CD,14080:CD,14082:CD,14089:CD,14091:CD,14098:CD,14100:CD,14107:CD,14109:CD,14116:CD,14118:CD,14125:CD,14127:CD,14134:CD,14136:CD,14143:CD,14145:CD,14152:CD,14154:CD,14161:CD,14163:CD,14170:CD,14172:CD,14173:CD,14179:CD,14185:CD,14191:CD,14197:CD,14203:CD,14209:CD,14215:CD,14221:CD,14227:CD,14233
14073 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v2 = new org.biojava.nbio.structure.ElementType::DD,14080
14080 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.METALLOID = v2::
14082 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v6 = new org.biojava.nbio.structure.ElementType::DD,14089
14089 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.OTHER_NONMETAL = v6::
14091 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v10 = new org.biojava.nbio.structure.ElementType::DD,14098
14098 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.HALOGEN = v10::
14100 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v14 = new org.biojava.nbio.structure.ElementType::DD,14107
14107 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.NOBLE_GAS = v14::
14109 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v18 = new org.biojava.nbio.structure.ElementType::DD,14116
14116 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALI_METAL = v18::
14118 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v22 = new org.biojava.nbio.structure.ElementType::DD,14125
14125 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL = v22::
14127 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v26 = new org.biojava.nbio.structure.ElementType::DD,14134
14134 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.LANTHANOID = v26::
14136 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v30 = new org.biojava.nbio.structure.ElementType::DD,14143
14143 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ACTINOID = v30::
14145 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v34 = new org.biojava.nbio.structure.ElementType::DD,14152
14152 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.TRANSITION_METAL = v34::
14154 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v38 = new org.biojava.nbio.structure.ElementType::DD,14161
14161 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL = v38::
14163 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v42 = new org.biojava.nbio.structure.ElementType::DD,14170
14170 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.UNKNOWN = v42::
14172 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ElementType :: v47 = new org.biojava.nbio.structure.ElementType[]::
14173 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v48 = org.biojava.nbio.structure.ElementType.METALLOID::DD,14175
14175 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(0)] = v48::
14179 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v49 = org.biojava.nbio.structure.ElementType.OTHER_NONMETAL::DD,14181
14181 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(1)] = v49::
14185 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v50 = org.biojava.nbio.structure.ElementType.HALOGEN::DD,14187
14187 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(2)] = v50::
14191 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v51 = org.biojava.nbio.structure.ElementType.NOBLE_GAS::DD,14193
14193 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(3)] = v51::
14197 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v52 = org.biojava.nbio.structure.ElementType.ALKALI_METAL::DD,14199
14199 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(4)] = v52::
14203 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v53 = org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL::DD,14205
14205 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(5)] = v53::
14209 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v54 = org.biojava.nbio.structure.ElementType.LANTHANOID::DD,14211
14211 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(6)] = v54::
14215 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v55 = org.biojava.nbio.structure.ElementType.ACTINOID::DD,14217
14217 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(7)] = v55::
14221 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v56 = org.biojava.nbio.structure.ElementType.TRANSITION_METAL::DD,14223
14223 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(8)] = v56::
14227 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v57 = org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL::DD,14229
14229 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(9)] = v57::
14233 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v58 = org.biojava.nbio.structure.ElementType.UNKNOWN::DD,14235
14235 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(10)] = v58::
14332 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.<clinit>()::CD,14335:CD,14338:JM,33829:JM,33832:CD,14349:CD,14351:CD,14354:CD,14365:CD,14367:CD,14368:CD,14378:CD,14380:CD,14381:CD,14387:CD,14393:CD,14401:CD,14414
14335 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v2 = new org.biojava.nbio.structure.GroupType::DD,14349
14338 :: CALL :: call :: Ljava/util/Set :: v8 = matchPolymerTypes(v6)::CL,33756
14349 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.AMINOACID = v2::
14351 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v10 = new org.biojava.nbio.structure.GroupType::DD,14365
14354 :: CALL :: call :: Ljava/util/Set :: v16 = matchPolymerTypes(v14)::CL,33756
14365 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.NUCLEOTIDE = v10::
14367 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v18 = new org.biojava.nbio.structure.GroupType::DD,14378
14368 :: CALL :: call :: Ljava/util/Set :: v23 = getHetatmTypes()::CL,33843
14378 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.HETATM = v18::
14380 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/GroupType :: v26 = new org.biojava.nbio.structure.GroupType[]::
14381 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v27 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,14383
14383 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(0)] = v27::
14387 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v28 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,14389
14389 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(1)] = v28::
14393 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v29 = org.biojava.nbio.structure.GroupType.HETATM::DD,14395
14395 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(2)] = v29::
14401 :: NORM :: declaration :: [Ljava/lang/String :: v30 = new java.lang.String[]::JM,14414
14402 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(0)] = #(HOH)::
14406 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(1)] = #(DOD)::
14410 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(2)] = #(WAT)::
14414 :: CALL :: call :: Ljava/util/List :: v35 = asList(v30)::JM,14414
14496 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.FarmJobParameters.<clinit>()::CD,14499:CD,14507
14499 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v4 = getResourceManager(#(jfatcat))::CL,33974
14507 :: CALL :: call :: Ljava/lang/String :: v8 = v5.getString(#(server.url))::CL,33986
14520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.<clinit>()::CD,14530:CD,14546
14530 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v7 = getResourceManager(#(jfatcat))::CL,33974
14546 :: NORM :: declaration :: Ljava/util/Random :: v13 = new java.util.Random::
14564 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.CeParameters.ScoringStrategy.<clinit>()::CD,14567:JM,34050:CD,14574:CD,14576:CD,14583:CD,14585:CD,14592:CD,14594:CD,14601:CD,14603:CD,14610:CD,14612:CD,14613:CD,14619:CD,14625:CD,14631:CD,14637
14567 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v2 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,14574
14574 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_SCORING = v2::
14576 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v7 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,14583
14583 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_SCORING = v7::
14585 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v12 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,14592
14592 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_ANGLE_SCORING = v12::
14594 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v17 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,14601
14601 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_AND_SIDE_CHAIN_ANGLE_SCORING = v17::
14603 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v22 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy::DD,14610
14610 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION = v22::
14612 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v28 = new org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy[]::
14613 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v29 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_SCORING::DD,14615
14615 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(0)] = v29::
14619 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v30 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_SCORING::DD,14621
14621 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(1)] = v30::
14625 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v31 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SIDE_CHAIN_ANGLE_SCORING::DD,14627
14627 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(2)] = v31::
14631 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v32 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.CA_AND_SIDE_CHAIN_ANGLE_SCORING::DD,14633
14633 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(3)] = v32::
14637 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/ce/CeParameters$ScoringStrategy :: v33 = org.biojava.nbio.structure.align.ce.CeParameters$ScoringStrategy.SEQUENCE_CONSERVATION::DD,14639
14639 :: EXPR :: modify :: Ljava/lang/Object :: v28[#(4)] = v33::
14788 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.<clinit>()::CD,14804:CD,14805:CD,14846:CD,14856:CD,14857:CD,14878:CD,14888:CD,14889:CD,15026
14804 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::CF,14805
14805 :: NORM :: declaration :: [Ljava/lang/String :: v10 = new java.lang.String[]::JM,14846
14806 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(0)] = #(MOL_ID:)::
14810 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(1)] = #(MOLECULE:)::
14814 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(2)] = #(CHAIN:)::
14818 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(3)] = #(SYNONYM:)::
14822 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(4)] = #(EC:)::
14826 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(5)] = #(FRAGMENT:)::
14830 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(6)] = #(ENGINEERED:)::
14834 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(7)] = #(MUTATION:)::
14838 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(8)] = #(BIOLOGICAL_UNIT:)::
14842 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(9)] = #(OTHER_DETAILS:)::
14846 :: CALL :: call :: Ljava/util/List :: v32 = asList(v10)::JM,14846
14856 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::CF,14857
14857 :: NORM :: declaration :: [Ljava/lang/String :: v35 = new java.lang.String[]::JM,14878
14858 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = #(HETEROGEN:)::
14862 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = #(ENGINEEREED:)::
14866 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = #(FRAGMENT,)::
14870 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = #(MUTANT:)::
14874 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = #(SYNTHETIC:)::
14878 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,14878
14888 :: NORM :: declaration :: Ljava/util/ArrayList :: v44 = new java.util.ArrayList::CF,14889
14889 :: NORM :: declaration :: [Ljava/lang/String :: v46 = new java.lang.String[]::JM,15026
14890 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(0)] = #(ENGINEERED:)::
14894 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(1)] = #(MOL_ID:)::
14898 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(2)] = #(SYNTHETIC:)::
14902 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(3)] = #(FRAGMENT:)::
14906 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(4)] = #(ORGANISM_SCIENTIFIC:)::
14910 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(5)] = #(ORGANISM_COMMON:)::
14914 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(6)] = #(ORGANISM_TAXID:)::
14918 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(7)] = #(STRAIN:)::
14922 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(8)] = #(VARIANT:)::
14926 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(9)] = #(CELL_LINE:)::
14930 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(10)] = #(ATCC:)::
14934 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(11)] = #(ORGAN:)::
14938 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(12)] = #(TISSUE:)::
14942 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(13)] = #(CELL:)::
14946 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(14)] = #(ORGANELLE:)::
14950 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(15)] = #(SECRETION:)::
14954 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(16)] = #(GENE:)::
14958 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(17)] = #(CELLULAR_LOCATION:)::
14962 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(18)] = #(EXPRESSION_SYSTEM:)::
14966 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(19)] = #(EXPRESSION_SYSTEM_TAXID:)::
14970 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(20)] = #(EXPRESSION_SYSTEM_STRAIN:)::
14974 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(21)] = #(EXPRESSION_SYSTEM_VAR...)::
14978 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(22)] = #(EXPRESSION_SYSTEM_CEL...)::
14982 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(23)] = #(EXPRESSION_SYSTEM_ATC...)::
14986 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(24)] = #(EXPRESSION_SYSTEM_ORGAN:)::
14990 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(25)] = #(EXPRESSION_SYSTEM_TISSUE:)::
14994 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(26)] = #(EXPRESSION_SYSTEM_CELL:)::
14998 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(27)] = #(EXPRESSION_SYSTEM_ORG...)::
15002 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(28)] = #(EXPRESSION_SYSTEM_CEL...)::
15006 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(29)] = #(EXPRESSION_SYSTEM_VEC...)::
15010 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(30)] = #(EXPRESSION_SYSTEM_VECTOR:)::
15014 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(31)] = #(EXPRESSION_SYSTEM_PLA...)::
15018 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(32)] = #(EXPRESSION_SYSTEM_GENE:)::
15022 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(33)] = #(OTHER_DETAILS:)::
15026 :: CALL :: call :: Ljava/util/List :: v100 = asList(v46)::JM,15026
15230 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.<clinit>()::CD,15233:JM,34071:CD,15240:CD,15242:CD,15249:CD,15251:CD,15258:CD,15260:CD,15267:CD,15269:CD,15276:CD,15278:CD,15285:CD,15287:CD,15294:CD,15296:CD,15303:CD,15305:CD,15312:CD,15314:CD,15321:CD,15323:CD,15330:CD,15332:CD,15333:CD,15339:CD,15345:CD,15351:CD,15357:CD,15363:CD,15369:CD,15375:CD,15381:CD,15387:CD,15393:CD,15401:CD,15407:CD,15412:CD,15418:CD,15424:CD,15429:CD,15435:CD,15441:CD,15446:CD,15452:CD,15458:CD,15465:CD,15472:CD,15484:CD,15487
15233 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,15240
15240 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide = v2::
15242 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v7 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,15249
15249 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide = v7::
15251 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v12 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,15258
15258 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna = v12::
15260 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,15267
15267 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna = v17::
15269 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v22 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,15276
15276 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna = v22::
15278 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v27 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,15285
15285 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide = v27::
15287 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,15294
15294 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide = v32::
15296 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v37 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,15303
15303 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer = v37::
15305 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v42 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,15312
15312 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide = v42::
15314 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v47 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,15321
15321 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid = v47::
15323 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v52 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,15330
15330 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown = v52::
15332 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v58 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::
15333 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v59 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::DD,15335
15335 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
15339 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v60 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::DD,15341
15341 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
15345 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v61 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::DD,15347
15347 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
15351 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v62 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::DD,15353
15353 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
15357 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v63 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna::DD,15359
15359 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
15363 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v64 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide::DD,15365
15365 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
15369 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v65 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide::DD,15371
15371 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
15375 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v66 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer::DD,15377
15377 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
15381 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v67 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide::DD,15383
15383 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
15387 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v68 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid::DD,15389
15389 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
15393 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v69 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown::DD,15395
15395 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
15401 :: NORM :: declaration :: Ljava/util/HashSet :: v70 = new java.util.HashSet::JM,15412
15407 :: CALL :: call :: Z :: v74 = v70.add(v72)::
15412 :: CALL :: call :: Ljava/util/Set :: v76 = unmodifiableSet(v70)::JM,15412
15418 :: NORM :: declaration :: Ljava/util/HashSet :: v77 = new java.util.HashSet::JM,15429
15424 :: CALL :: call :: Z :: v81 = v77.add(v79)::
15429 :: CALL :: call :: Ljava/util/Set :: v83 = unmodifiableSet(v77)::JM,15429
15435 :: NORM :: declaration :: Ljava/util/HashSet :: v84 = new java.util.HashSet::JM,15446
15441 :: CALL :: call :: Z :: v88 = v84.add(v86)::
15446 :: CALL :: call :: Ljava/util/Set :: v90 = unmodifiableSet(v84)::JM,15446
15452 :: NORM :: declaration :: Ljava/util/HashSet :: v91 = new java.util.HashSet::
15458 :: CALL :: call :: Z :: v95 = v91.add(v93)::
15465 :: CALL :: call :: Z :: v98 = v91.add(v96)::
15472 :: CALL :: call :: Z :: v101 = v91.add(v99)::
15484 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v106 = values()::JM,15487:CL,34080
15487 :: CALL :: call :: Ljava/util/List :: v108 = asList(v106)::JM,15487
15622 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AlignmentTools.<clinit>()::CD,15626
15626 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
21027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.<clinit>()::CD,21030:CD,21036:CD,21038:CD,21044:CD,21046:CD,21052:CD,21054:CD,21060:CD,21062:CD,21068:CD,21070:CD,21076:CD,21078:CD,21084:CD,21086:CD,21092:CD,21094:CD,21095:CD,21101:CD,21107:CD,21113:CD,21119:CD,21125:CD,21131:CD,21137
21030 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,21036
21036 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDB = v2::
21038 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v6 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,21044
21044 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.SCOP = v6::
21046 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,21052
21052 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDP = v10::
21054 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,21060
21060 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.CATH = v14::
21062 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v18 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,21068
21068 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.URL = v18::
21070 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v22 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,21076
21076 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.FILE = v22::
21078 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,21084
21084 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.ECOD = v26::
21086 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v30 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,21092
21092 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.BIO = v30::
21094 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v35 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::
21095 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v36 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::DD,21097
21097 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
21101 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v37 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::DD,21103
21103 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = v37::
21107 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::DD,21109
21109 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = v38::
21113 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v39 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::DD,21115
21115 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = v39::
21119 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v40 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::DD,21121
21121 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = v40::
21125 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v41 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::DD,21127
21127 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(5)] = v41::
21131 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v42 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::DD,21133
21133 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(6)] = v42::
21137 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v43 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::DD,21139
21139 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(7)] = v43::
21271 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.<clinit>()::CD,21274:JM,34267:JM,34270:CD,21282:CD,21284:CD,21294:CD,21296:CD,21306:CD,21308:CD,21318:CD,21320:CD,21330:CD,21332:CD,21342:CD,21344:CD,21354:CD,21356:CD,21366:CD,21368:CD,21378:CD,21380:CD,21390:CD,21392:CD,21402:CD,21404:CD,21414:CD,21416:CD,21426:CD,21428:CD,21438:CD,21440:CD,21450:CD,21452:CD,21462:CD,21464:CD,21474:CD,21476:CD,21486:CD,21488:CD,21498:CD,21500:CD,21510:CD,21512:CD,21522:CD,21524:CD,21534:CD,21536:CD,21546:CD,21548:CD,21558:CD,21560:CD,21570:CD,21572:CD,21582:CD,21584:CD,21594:CD,21596:CD,21606:CD,21608:CD,21616:CD,21618:CD,21626:CD,21628:CD,21629:CD,21635:CD,21641:CD,21647:CD,21653:CD,21659:CD,21665:CD,21671:CD,21677:CD,21683:CD,21689:CD,21695:CD,21701:CD,21707:CD,21713:CD,21719:CD,21725:CD,21731:CD,21737:CD,21743:CD,21749:CD,21755:CD,21761:CD,21767:CD,21773:CD,21779:CD,21785:CD,21791:CD,21797:CD,21803
21274 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21282
21282 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn = v2::
21284 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v8 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21294
21294 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking = v8::
21296 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v14 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21306
21306 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking = v14::
21308 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v20 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21318
21318 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine = v20::
21320 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v26 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21330
21330 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike = v26::
21332 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21342
21342 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus = v32::
21344 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v38 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21354
21354 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus = v38::
21356 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v44 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21366
21366 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus = v44::
21368 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21378
21378 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus = v50::
21380 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v56 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21390
21390 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking = v56::
21392 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v62 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21402
21402 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking = v62::
21404 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v68 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21414
21414 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus = v68::
21416 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v74 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21426
21426 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus = v74::
21428 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v80 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21438
21438 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus = v80::
21440 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v86 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21450
21450 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus = v86::
21452 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v92 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21462
21462 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide = v92::
21464 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v98 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21474
21474 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking = v98::
21476 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v104 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21486
21486 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking = v104::
21488 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v110 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21498
21498 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide = v110::
21500 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v116 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21510
21510 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking = v116::
21512 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v122 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21522
21522 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking = v122::
21524 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v128 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21534
21534 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide = v128::
21536 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v133 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21546
21546 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking = v133::
21548 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v139 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21558
21558 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking = v139::
21560 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v145 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21570
21570 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking = v145::
21572 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v151 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21582
21582 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking = v151::
21584 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v157 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21594
21594 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking = v157::
21596 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v163 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21606
21606 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking = v163::
21608 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v169 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21616
21616 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer = v169::
21618 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v174 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,21626
21626 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp = v174::
21628 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v180 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::
21629 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v181 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn::DD,21631
21631 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(0)] = v181::
21635 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v182 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking::DD,21637
21637 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(1)] = v182::
21641 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v183 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::DD,21643
21643 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(2)] = v183::
21647 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v184 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine::DD,21649
21649 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(3)] = v184::
21653 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v185 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike::DD,21655
21655 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(4)] = v185::
21659 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v186 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus::DD,21661
21661 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(5)] = v186::
21665 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v187 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus::DD,21667
21667 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(6)] = v187::
21671 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v188 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus::DD,21673
21673 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(7)] = v188::
21677 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v189 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus::DD,21679
21679 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(8)] = v189::
21683 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v190 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking::DD,21685
21685 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(9)] = v190::
21689 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v191 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking::DD,21691
21691 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(10)] = v191::
21695 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v192 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus::DD,21697
21697 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(11)] = v192::
21701 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v193 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus::DD,21703
21703 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(12)] = v193::
21707 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v194 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus::DD,21709
21709 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(13)] = v194::
21713 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v195 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus::DD,21715
21715 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(14)] = v195::
21719 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v196 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide::DD,21721
21721 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(15)] = v196::
21725 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v197 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking::DD,21727
21727 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(16)] = v197::
21731 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v198 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking::DD,21733
21733 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(17)] = v198::
21737 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v199 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide::DD,21739
21739 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(18)] = v199::
21743 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v200 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking::DD,21745
21745 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(19)] = v200::
21749 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v201 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking::DD,21751
21751 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(20)] = v201::
21755 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v202 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide::DD,21757
21757 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(21)] = v202::
21761 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v203 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking::DD,21763
21763 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(22)] = v203::
21767 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v204 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking::DD,21769
21769 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(23)] = v204::
21773 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v205 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking::DD,21775
21775 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(24)] = v205::
21779 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v206 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking::DD,21781
21781 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(25)] = v206::
21785 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v207 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking::DD,21787
21787 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(26)] = v207::
21791 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v208 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking::DD,21793
21793 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(27)] = v208::
21797 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v209 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer::DD,21799
21799 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(28)] = v209::
21803 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v210 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp::DD,21805
21805 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(29)] = v210::
22076 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.<clinit>()::CD,22086
22086 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
22128 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.<clinit>()::CD,22131
22131 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:PDP:)([0-9][a-z0-...), #(2))::
22142 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.<clinit>()::CD,22145
22145 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:BIO:)([0-9][a-z0-...), #(2))::
22168 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.<clinit>()::CD,22178
22178 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^([0-9][a-z0-9]{3})([...), #(2))::
22190 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.<clinit>()::CD,22193
22193 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
22202 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.<clinit>()::CD,22212:CD,22216
22212 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::JM,22216
22216 :: CALL :: call :: Ljava/util/Map :: v8 = synchronizedMap(v5)::JM,22216
22230 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.<clinit>()::CD,22233:CD,22239
22233 :: CALL :: call :: Ljava/util/regex/Pattern :: v4 = compile(#(^\s*([a-zA-Z0-9]+|_)(...))::
22239 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^\s*([a-zA-Z0-9]+|_)$))::
22350 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.<clinit>()::CD,22366:CD,22372
22366 :: CALL :: call :: Ljava/util/regex/Pattern :: v10 = compile(#(.*\s([A-Z]+)(\s'.+')?...))::
22372 :: CALL :: call :: Ljava/util/TreeMap :: v12 = parseSpaceGroupsXML()::CL,34328
22432 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.<clinit>()::CD,22442:CD,22450:CD,22457:CD,22464:CD,22471:CD,22478:CD,22485
22442 :: NORM :: declaration :: Ljava/util/HashSet :: v5 = new java.util.HashSet::
22450 :: CALL :: call :: Z :: v10 = v7.add(#(disulf))::
22457 :: CALL :: call :: Z :: v14 = v11.add(#(covale))::
22464 :: CALL :: call :: Z :: v18 = v15.add(#(covale_base))::
22471 :: CALL :: call :: Z :: v22 = v19.add(#(covale_phosphate))::
22478 :: CALL :: call :: Z :: v26 = v23.add(#(covale_sugar))::
22485 :: CALL :: call :: Z :: v30 = v27.add(#(modres))::
22519 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucType.<clinit>()::CD,22522:CD,22523:JM,34519:JM,34522:CD,22534:CD,22536:CD,22537:CD,22548:CD,22550:CD,22551:CD,22562:CD,22564:CD,22565:CD,22576:CD,22578:CD,22579:CD,22590:CD,22592:CD,22593:CD,22604:CD,22606:CD,22607:CD,22618:CD,22620:CD,22621:CD,22632:CD,22634:CD,22635:CD,22641:CD,22647:CD,22653:CD,22659:CD,22665:CD,22671:CD,22677
22522 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v2 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,22534
22523 :: CALL :: call :: Ljava/lang/Character :: v8 = valueOf(#(72))::
22534 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix4 = v2::
22536 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v10 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,22548
22537 :: CALL :: call :: Ljava/lang/Character :: v16 = valueOf(#(69))::
22548 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.extended = v10::
22550 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v18 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,22562
22551 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(66))::
22562 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bridge = v18::
22564 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v26 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,22576
22565 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(71))::
22576 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix3 = v26::
22578 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v34 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,22590
22579 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(#(73))::
22590 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix5 = v34::
22592 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v42 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,22604
22593 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(84))::
22604 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.turn = v42::
22606 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v50 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,22618
22607 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(83))::
22618 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bend = v50::
22620 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v58 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,22632
22621 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(32))::
22632 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.coil = v58::
22634 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v67 = new org.biojava.nbio.structure.secstruc.SecStrucType[]::
22635 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v68 = org.biojava.nbio.structure.secstruc.SecStrucType.helix4::DD,22637
22637 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(0)] = v68::
22641 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v69 = org.biojava.nbio.structure.secstruc.SecStrucType.extended::DD,22643
22643 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(1)] = v69::
22647 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v70 = org.biojava.nbio.structure.secstruc.SecStrucType.bridge::DD,22649
22649 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(2)] = v70::
22653 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v71 = org.biojava.nbio.structure.secstruc.SecStrucType.helix3::DD,22655
22655 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(3)] = v71::
22659 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v72 = org.biojava.nbio.structure.secstruc.SecStrucType.helix5::DD,22661
22661 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(4)] = v72::
22665 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v73 = org.biojava.nbio.structure.secstruc.SecStrucType.turn::DD,22667
22667 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(5)] = v73::
22671 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v74 = org.biojava.nbio.structure.secstruc.SecStrucType.bend::DD,22673
22673 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(6)] = v74::
22677 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v75 = org.biojava.nbio.structure.secstruc.SecStrucType.coil::DD,22679
22679 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(7)] = v75::
22792 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
22853 :: CALL :: call :: J :: v35 = lowMask(#(-_.!~*'()))::
22859 :: CALL :: call :: J :: v37 = highMask(#(-_.!~*'()))::
22879 :: CALL :: call :: J :: v46 = lowMask(#(;/?:@&=+$,[]))::
22885 :: CALL :: call :: J :: v48 = highMask(#(;/?:@&=+$,[]))::
22909 :: CALL :: call :: J :: v61 = lowMask(#(:@&=+$,))::
22918 :: CALL :: call :: J :: v65 = highMask(#(:@&=+$,))::
22927 :: CALL :: call :: J :: v70 = lowMask(#(;/))::
22936 :: CALL :: call :: J :: v74 = highMask(#(;/))::
22943 :: CALL :: call :: J :: v78 = lowMask(#(-))::
22949 :: CALL :: call :: J :: v80 = highMask(#(-))::
22955 :: CALL :: call :: J :: v83 = lowMask(#(.))::
22961 :: CALL :: call :: J :: v85 = highMask(#(.))::
22970 :: CALL :: call :: J :: v90 = lowMask(#(;:&=+$,))::
22979 :: CALL :: call :: J :: v94 = highMask(#(;:&=+$,))::
22989 :: CALL :: call :: J :: v100 = lowMask(#($,;:@&=+))::
22998 :: CALL :: call :: J :: v104 = highMask(#($,;:@&=+))::
23013 :: CALL :: call :: J :: v113 = lowMask(#(.:@[]))::
23028 :: CALL :: call :: J :: v121 = highMask(#(.:@[]))::
23037 :: CALL :: call :: J :: v126 = lowMask(#(%))::
23046 :: CALL :: call :: J :: v130 = highMask(#(%))::
23053 :: CALL :: call :: J :: v134 = lowMask(#([))::
23059 :: CALL :: call :: J :: v136 = highMask(#([))::
23067 :: CALL :: call :: J :: v140 = lowMask(#(+-.))::
23076 :: CALL :: call :: J :: v144 = highMask(#(+-.))::
23086 :: CALL :: call :: J :: v150 = lowMask(#(;?:@&=+$,))::
23095 :: CALL :: call :: J :: v154 = highMask(#(;?:@&=+$,))::
23102 :: NORM :: declaration :: [C :: v157 = new []::
23103 :: EXPR :: modify :: C :: v157[#(0)] = #(48)::
23107 :: EXPR :: modify :: C :: v157[#(1)] = #(49)::
23111 :: EXPR :: modify :: C :: v157[#(2)] = #(50)::
23115 :: EXPR :: modify :: C :: v157[#(3)] = #(51)::
23119 :: EXPR :: modify :: C :: v157[#(4)] = #(52)::
23123 :: EXPR :: modify :: C :: v157[#(5)] = #(53)::
23127 :: EXPR :: modify :: C :: v157[#(6)] = #(54)::
23131 :: EXPR :: modify :: C :: v157[#(7)] = #(55)::
23135 :: EXPR :: modify :: C :: v157[#(8)] = #(56)::
23139 :: EXPR :: modify :: C :: v157[#(9)] = #(57)::
23143 :: EXPR :: modify :: C :: v157[#(10)] = #(65)::
23147 :: EXPR :: modify :: C :: v157[#(11)] = #(66)::
23151 :: EXPR :: modify :: C :: v157[#(12)] = #(67)::
23155 :: EXPR :: modify :: C :: v157[#(13)] = #(68)::
23159 :: EXPR :: modify :: C :: v157[#(14)] = #(69)::
23163 :: EXPR :: modify :: C :: v157[#(15)] = #(70)::
23490 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.<clinit>()::CD,23494:CD,23509
23494 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
23509 :: NORM :: declaration :: Ljava/util/Hashtable :: v11 = new java.util.Hashtable::
23524 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.<clinit>()::CD,23527:CD,23533:CD,23535:CD,23541:CD,23543:CD,23549:CD,23551:CD,23557:CD,23559:CD,23565:CD,23567:CD,23573:CD,23575:CD,23581:CD,23583:CD,23589:CD,23591:CD,23597:CD,23599:CD,23605:CD,23607:CD,23613:CD,23615:CD,23621:CD,23623:CD,23629:CD,23631:CD,23632:CD,23638:CD,23644:CD,23650:CD,23656:CD,23662:CD,23668:CD,23674:CD,23680:CD,23686:CD,23692:CD,23698:CD,23704
23527 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23533
23533 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE = v2::
23535 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v6 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23541
23541 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.CURRENT = v6::
23543 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v10 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23549
23549 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.AUTH = v10::
23551 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23557
23557 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HOLD = v14::
23559 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v18 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23565
23565 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HPUB = v18::
23567 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v22 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23573
23573 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.POLC = v22::
23575 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23581
23581 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.PROC = v26::
23583 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v30 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23589
23589 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REFI = v30::
23591 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v34 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23597
23597 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REPL = v34::
23599 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23605
23605 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WAIT = v38::
23607 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v42 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23613
23613 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WDRN = v42::
23615 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v46 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23621
23621 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.MODEL = v46::
23623 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = new org.biojava.nbio.structure.PDBStatus$Status::DD,23629
23629 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN = v50::
23631 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v55 = new org.biojava.nbio.structure.PDBStatus$Status[]::
23632 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,23634
23634 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(0)] = v56::
23638 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,23640
23640 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(1)] = v57::
23644 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,23646
23646 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(2)] = v58::
23650 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,23652
23652 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(3)] = v59::
23656 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,23658
23658 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(4)] = v60::
23662 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,23664
23664 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(5)] = v61::
23668 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,23670
23670 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(6)] = v62::
23674 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,23676
23676 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(7)] = v63::
23680 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,23682
23682 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(8)] = v64::
23686 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,23688
23688 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(9)] = v65::
23692 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,23694
23694 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(10)] = v66::
23698 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,23700
23700 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(11)] = v67::
23704 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,23706
23706 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(12)] = v68::
23948 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.<clinit>()::JM,34564
24022 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.<clinit>()::CD,24025:JM,34592:JM,34586:JM,34589:CD,24034:CD,24036:CD,24045:CD,24047:CD,24056:CD,24058:CD,24067:CD,24069:CD,24078:CD,24080:CD,24089:CD,24091:CD,24100:CD,24102:CD,24111:CD,24113:CD,24122:CD,24124:CD,24133:CD,24135:CD,24144:CD,24146:CD,24147:CD,24153:CD,24159:CD,24165:CD,24171:CD,24177:CD,24183:CD,24189:CD,24195:CD,24201:CD,24207:CD,24215
24025 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,24034
24034 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION = v2::
24036 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v8 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,24045
24045 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR = v8::
24047 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v12 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,24056
24056 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR = v12::
24058 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v17 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,24067
24067 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY = v17::
24069 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v22 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,24078
24078 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY = v22::
24080 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v27 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,24089
24089 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION = v27::
24091 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v32 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,24100
24100 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION = v32::
24102 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v37 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,24111
24111 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING = v37::
24113 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v42 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,24122
24122 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION = v42::
24124 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v47 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,24133
24133 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER = v47::
24135 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v52 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,24144
24144 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY = v52::
24146 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v58 = new org.biojava.nbio.structure.ExperimentalTechnique[]::
24147 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v59 = org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION::DD,24149
24149 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
24153 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v60 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR::DD,24155
24155 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
24159 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v61 = org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR::DD,24161
24161 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
24165 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v62 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY::DD,24167
24167 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
24171 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v63 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY::DD,24173
24173 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
24177 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v64 = org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION::DD,24179
24179 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
24183 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v65 = org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION::DD,24185
24185 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
24189 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v66 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING::DD,24191
24191 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
24195 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v67 = org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION::DD,24197
24197 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
24201 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v68 = org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER::DD,24203
24203 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
24207 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v69 = org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY::DD,24209
24209 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
24215 :: CALL :: call :: Ljava/util/HashMap :: v71 = initExpTechStr2Value()::CL,34605
24377 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.<clinit>()::CD,24387
24387 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^e(....).+\d+$))::
24503 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.<clinit>()::CD,24506:CD,24514:CD,24519:CD,24527:CD,24532:CD,24540:CD,24545
24506 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
24514 :: NORM :: declaration :: [Ljava/lang/String :: v7 = new java.lang.String[]::
24515 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(0)] = #(1.75A)::
24519 :: CALL :: call :: Ljava/lang/Object :: v11 = v4.put(#(2.01), v7)::
24527 :: NORM :: declaration :: [Ljava/lang/String :: v14 = new java.lang.String[]::
24528 :: EXPR :: modify :: Ljava/lang/Object :: v14[#(0)] = #(1.75B)::
24532 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.put(#(2.02), v14)::
24540 :: NORM :: declaration :: [Ljava/lang/String :: v20 = new java.lang.String[]::
24541 :: EXPR :: modify :: Ljava/lang/Object :: v20[#(0)] = #(1.75C)::
24545 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.put(#(2.03), v20)::
24601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.<clinit>()::CD,24617:CD,24624:CD,24628:CD,24630:CD,24632:CD,24637:CD,24639:CD,24644:CD,24646:CD,24651:CD,24653
24617 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::
24624 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,24628
24628 :: EXPR :: modify :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs = v11::
24630 :: EXPR :: reference :: Ljava/util/List :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
24632 :: CALL :: call :: Z :: v16 = v13.add(#(CON))::
24637 :: EXPR :: reference :: Ljava/util/List :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
24639 :: CALL :: call :: Z :: v20 = v17.add(#(PRN))::
24644 :: EXPR :: reference :: Ljava/util/List :: v21 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
24646 :: CALL :: call :: Z :: v24 = v21.add(#(AUX))::
24651 :: EXPR :: reference :: Ljava/util/List :: v25 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
24653 :: CALL :: call :: Z :: v28 = v25.add(#(NUL))::
24676 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.PerformanceBehavior.<clinit>()::CD,24679:CD,24685:CD,24687:CD,24693:CD,24695:CD,24696:CD,24702
24679 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v2 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,24685
24685 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY = v2::
24687 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v6 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,24693
24693 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE = v6::
24695 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior[]::
24696 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v12 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::DD,24698
24698 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(0)] = v12::
24702 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v13 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE::DD,24704
24704 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(1)] = v13::
30836 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.<clinit>()::CD,30839:CD,30845:CD,30851:CD,30855:CD,30859:CD,30865:CD,30869:CD,30875:CD,30879:CD,30885:CD,30889:CD,30895:CD,30899:CD,30905:CD,30909:CD,30915:CD,30919:CD,30925:CD,30929:CD,30935:CD,30939:CD,30945:CD,30949:CD,30955:CD,30959:CD,30965:CD,30969:CD,30975:CD,30979:CD,30985:CD,30989:CD,30995:CD,30999:CD,31005:CD,31009:CD,31015:CD,31019:CD,31025:CD,31029:CD,31035:CD,31039:CD,31045:CD,31049:CD,31055:CD,31059:CD,31065:CD,31069:CD,31075:CD,31079:CD,31083:CD,31085:CD,31089:CD,31093:CD,31099:CD,31103:CD,31109:CD,31113:CD,31119:CD,31123:CD,31129:CD,31133:CD,31139:CD,31143:CD,31149:CD,31153:CD,31159:CD,31163:CD,31169:CD,31173:CD,31179:CD,31183:CD,31189:CD,31193:CD,31199:CD,31203:CD,31209:CD,31213:CD,31219:CD,31223:CD,31229:CD,31233:CD,31239:CD,31243:CD,31249:CD,31253:CD,31259:CD,31263:CD,31269:CD,31273:CD,31279:CD,31283:CD,31289:CD,31293:CD,31299:CD,31303:CD,31309:CD,31313:CD,31319:CD,31323:CD,31327:CD,31333:CD,31337:CD,31343:CD,31347:CD,31353:CD,31357:CD,31363:CD,31367:CD,31373:CD,31377:CD,31383:CD,31387:CD,31391:CD,31393:CD,31397:CD,31401:CD,31407:CD,31411:CD,31417:CD,31421:CD,31427:CD,31431:CD,31437:CD,31441:CD,31447:CD,31451:CD,31457:CD,31461:CD,31467:CD,31471:CD,31473:CD,31477:CD,31482:CD,31484:CD,31488
30839 :: CALL :: call :: Ljava/lang/Character :: v4 = valueOf(#(88))::
30845 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(#(78))::
30851 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,31075:JM,31079:JM,31083
30855 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(65))::
30859 :: CALL :: call :: Ljava/lang/Object :: v15 = v8.put(#(ALA), v13)::
30865 :: CALL :: call :: Ljava/lang/Character :: v19 = valueOf(#(68))::
30869 :: CALL :: call :: Ljava/lang/Object :: v21 = v8.put(#(ASP), v19)::
30875 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(78))::
30879 :: CALL :: call :: Ljava/lang/Object :: v26 = v8.put(#(ASN), v24)::
30885 :: CALL :: call :: Ljava/lang/Character :: v30 = valueOf(#(66))::
30889 :: CALL :: call :: Ljava/lang/Object :: v32 = v8.put(#(ASX), v30)::
30895 :: CALL :: call :: Ljava/lang/Character :: v36 = valueOf(#(82))::
30899 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.put(#(ARG), v36)::
30905 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(#(67))::
30909 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.put(#(CYS), v42)::
30915 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(69))::
30919 :: CALL :: call :: Ljava/lang/Object :: v50 = v8.put(#(GLU), v48)::
30925 :: CALL :: call :: Ljava/lang/Character :: v54 = valueOf(#(81))::
30929 :: CALL :: call :: Ljava/lang/Object :: v56 = v8.put(#(GLN), v54)::
30935 :: CALL :: call :: Ljava/lang/Character :: v60 = valueOf(#(71))::
30939 :: CALL :: call :: Ljava/lang/Object :: v62 = v8.put(#(GLY), v60)::
30945 :: CALL :: call :: Ljava/lang/Character :: v66 = valueOf(#(90))::
30949 :: CALL :: call :: Ljava/lang/Object :: v68 = v8.put(#(GLX), v66)::
30955 :: CALL :: call :: Ljava/lang/Character :: v72 = valueOf(#(72))::
30959 :: CALL :: call :: Ljava/lang/Object :: v74 = v8.put(#(HIS), v72)::
30965 :: CALL :: call :: Ljava/lang/Character :: v78 = valueOf(#(73))::
30969 :: CALL :: call :: Ljava/lang/Object :: v80 = v8.put(#(ILE), v78)::
30975 :: CALL :: call :: Ljava/lang/Character :: v84 = valueOf(#(75))::
30979 :: CALL :: call :: Ljava/lang/Object :: v86 = v8.put(#(LYS), v84)::
30985 :: CALL :: call :: Ljava/lang/Character :: v90 = valueOf(#(76))::
30989 :: CALL :: call :: Ljava/lang/Object :: v92 = v8.put(#(LEU), v90)::
30995 :: CALL :: call :: Ljava/lang/Character :: v96 = valueOf(#(77))::
30999 :: CALL :: call :: Ljava/lang/Object :: v98 = v8.put(#(MET), v96)::
31005 :: CALL :: call :: Ljava/lang/Character :: v102 = valueOf(#(70))::
31009 :: CALL :: call :: Ljava/lang/Object :: v104 = v8.put(#(PHE), v102)::
31015 :: CALL :: call :: Ljava/lang/Character :: v108 = valueOf(#(80))::
31019 :: CALL :: call :: Ljava/lang/Object :: v110 = v8.put(#(PRO), v108)::
31025 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(83))::
31029 :: CALL :: call :: Ljava/lang/Object :: v116 = v8.put(#(SER), v114)::
31035 :: CALL :: call :: Ljava/lang/Character :: v120 = valueOf(#(84))::
31039 :: CALL :: call :: Ljava/lang/Object :: v122 = v8.put(#(THR), v120)::
31045 :: CALL :: call :: Ljava/lang/Character :: v126 = valueOf(#(87))::
31049 :: CALL :: call :: Ljava/lang/Object :: v128 = v8.put(#(TRP), v126)::
31055 :: CALL :: call :: Ljava/lang/Character :: v132 = valueOf(#(89))::
31059 :: CALL :: call :: Ljava/lang/Object :: v134 = v8.put(#(TYR), v132)::
31065 :: CALL :: call :: Ljava/lang/Character :: v138 = valueOf(#(86))::
31069 :: CALL :: call :: Ljava/lang/Object :: v140 = v8.put(#(VAL), v138)::
31075 :: CALL :: call :: Ljava/util/Map :: v142 = synchronizedMap(v8)::JM,31075:JM,31079:JM,31083
31079 :: CALL :: call :: Ljava/util/Map :: v144 = unmodifiableMap(v142)::JM,31079:JM,31083
31083 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1 = v144::
31085 :: NORM :: declaration :: Ljava/util/HashMap :: v145 = new java.util.HashMap::JM,31313:JM,31309
31089 :: CALL :: call :: Ljava/lang/Character :: v148 = valueOf(#(65))::
31093 :: CALL :: call :: Ljava/lang/Object :: v150 = v145.put(v148, #(ALA))::
31099 :: CALL :: call :: Ljava/lang/Character :: v152 = valueOf(#(68))::
31103 :: CALL :: call :: Ljava/lang/Object :: v154 = v145.put(v152, #(ASP))::
31109 :: CALL :: call :: Ljava/lang/Character :: v156 = valueOf(#(78))::
31113 :: CALL :: call :: Ljava/lang/Object :: v158 = v145.put(v156, #(ASN))::
31119 :: CALL :: call :: Ljava/lang/Character :: v160 = valueOf(#(66))::
31123 :: CALL :: call :: Ljava/lang/Object :: v162 = v145.put(v160, #(ASX))::
31129 :: CALL :: call :: Ljava/lang/Character :: v164 = valueOf(#(82))::
31133 :: CALL :: call :: Ljava/lang/Object :: v166 = v145.put(v164, #(ARG))::
31139 :: CALL :: call :: Ljava/lang/Character :: v168 = valueOf(#(67))::
31143 :: CALL :: call :: Ljava/lang/Object :: v170 = v145.put(v168, #(CYS))::
31149 :: CALL :: call :: Ljava/lang/Character :: v172 = valueOf(#(69))::
31153 :: CALL :: call :: Ljava/lang/Object :: v174 = v145.put(v172, #(GLU))::
31159 :: CALL :: call :: Ljava/lang/Character :: v176 = valueOf(#(81))::
31163 :: CALL :: call :: Ljava/lang/Object :: v178 = v145.put(v176, #(GLN))::
31169 :: CALL :: call :: Ljava/lang/Character :: v180 = valueOf(#(71))::
31173 :: CALL :: call :: Ljava/lang/Object :: v182 = v145.put(v180, #(GLY))::
31179 :: CALL :: call :: Ljava/lang/Character :: v184 = valueOf(#(90))::
31183 :: CALL :: call :: Ljava/lang/Object :: v186 = v145.put(v184, #(GLX))::
31189 :: CALL :: call :: Ljava/lang/Character :: v188 = valueOf(#(72))::
31193 :: CALL :: call :: Ljava/lang/Object :: v190 = v145.put(v188, #(HIS))::
31199 :: CALL :: call :: Ljava/lang/Character :: v192 = valueOf(#(73))::
31203 :: CALL :: call :: Ljava/lang/Object :: v194 = v145.put(v192, #(ILE))::
31209 :: CALL :: call :: Ljava/lang/Character :: v196 = valueOf(#(75))::
31213 :: CALL :: call :: Ljava/lang/Object :: v198 = v145.put(v196, #(LYS))::
31219 :: CALL :: call :: Ljava/lang/Character :: v200 = valueOf(#(76))::
31223 :: CALL :: call :: Ljava/lang/Object :: v202 = v145.put(v200, #(LEU))::
31229 :: CALL :: call :: Ljava/lang/Character :: v204 = valueOf(#(77))::
31233 :: CALL :: call :: Ljava/lang/Object :: v206 = v145.put(v204, #(MET))::
31239 :: CALL :: call :: Ljava/lang/Character :: v208 = valueOf(#(70))::
31243 :: CALL :: call :: Ljava/lang/Object :: v210 = v145.put(v208, #(PHE))::
31249 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(80))::
31253 :: CALL :: call :: Ljava/lang/Object :: v214 = v145.put(v212, #(PRO))::
31259 :: CALL :: call :: Ljava/lang/Character :: v216 = valueOf(#(83))::
31263 :: CALL :: call :: Ljava/lang/Object :: v218 = v145.put(v216, #(SER))::
31269 :: CALL :: call :: Ljava/lang/Character :: v220 = valueOf(#(84))::
31273 :: CALL :: call :: Ljava/lang/Object :: v222 = v145.put(v220, #(THR))::
31279 :: CALL :: call :: Ljava/lang/Character :: v224 = valueOf(#(87))::
31283 :: CALL :: call :: Ljava/lang/Object :: v226 = v145.put(v224, #(TRP))::
31289 :: CALL :: call :: Ljava/lang/Character :: v228 = valueOf(#(89))::
31293 :: CALL :: call :: Ljava/lang/Object :: v230 = v145.put(v228, #(TYR))::
31299 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(86))::
31303 :: CALL :: call :: Ljava/lang/Object :: v234 = v145.put(v232, #(VAL))::
31309 :: CALL :: call :: Ljava/util/Map :: v236 = synchronizedMap(v145)::JM,31313:JM,31309
31313 :: CALL :: call :: Ljava/util/Map :: v238 = unmodifiableMap(v236)::JM,31313
31319 :: NORM :: declaration :: Ljava/util/HashMap :: v239 = new java.util.HashMap::JM,31383:JM,31387:JM,31391
31323 :: CALL :: call :: Ljava/lang/Character :: v243 = valueOf(#(65))::
31327 :: CALL :: call :: Ljava/lang/Object :: v245 = v239.put(#(DA), v243)::
31333 :: CALL :: call :: Ljava/lang/Character :: v248 = valueOf(#(67))::
31337 :: CALL :: call :: Ljava/lang/Object :: v250 = v239.put(#(DC), v248)::
31343 :: CALL :: call :: Ljava/lang/Character :: v253 = valueOf(#(71))::
31347 :: CALL :: call :: Ljava/lang/Object :: v255 = v239.put(#(DG), v253)::
31353 :: CALL :: call :: Ljava/lang/Character :: v258 = valueOf(#(73))::
31357 :: CALL :: call :: Ljava/lang/Object :: v260 = v239.put(#(DI), v258)::
31363 :: CALL :: call :: Ljava/lang/Character :: v264 = valueOf(#(85))::
31367 :: CALL :: call :: Ljava/lang/Object :: v266 = v239.put(#(DU), v264)::
31373 :: CALL :: call :: Ljava/lang/Character :: v269 = valueOf(#(84))::
31377 :: CALL :: call :: Ljava/lang/Object :: v271 = v239.put(#(DT), v269)::
31383 :: CALL :: call :: Ljava/util/Map :: v273 = synchronizedMap(v239)::JM,31383:JM,31387:JM,31391
31387 :: CALL :: call :: Ljava/util/Map :: v275 = unmodifiableMap(v273)::JM,31387:JM,31391
31391 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1 = v275::
31393 :: NORM :: declaration :: Ljava/util/HashMap :: v276 = new java.util.HashMap::JM,31457:JM,31461
31397 :: CALL :: call :: Ljava/lang/Character :: v279 = valueOf(#(65))::
31401 :: CALL :: call :: Ljava/lang/Object :: v281 = v276.put(v279, #(DA))::
31407 :: CALL :: call :: Ljava/lang/Character :: v283 = valueOf(#(67))::
31411 :: CALL :: call :: Ljava/lang/Object :: v285 = v276.put(v283, #(DC))::
31417 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(71))::
31421 :: CALL :: call :: Ljava/lang/Object :: v289 = v276.put(v287, #(DG))::
31427 :: CALL :: call :: Ljava/lang/Character :: v291 = valueOf(#(73))::
31431 :: CALL :: call :: Ljava/lang/Object :: v293 = v276.put(v291, #(DI))::
31437 :: CALL :: call :: Ljava/lang/Character :: v295 = valueOf(#(85))::
31441 :: CALL :: call :: Ljava/lang/Object :: v297 = v276.put(v295, #(DU))::
31447 :: CALL :: call :: Ljava/lang/Character :: v299 = valueOf(#(84))::
31451 :: CALL :: call :: Ljava/lang/Object :: v301 = v276.put(v299, #(DT))::
31457 :: CALL :: call :: Ljava/util/Map :: v303 = synchronizedMap(v276)::JM,31457:JM,31461
31461 :: CALL :: call :: Ljava/util/Map :: v305 = unmodifiableMap(v303)::JM,31461
31467 :: NORM :: declaration :: Ljava/util/ArrayList :: v306 = new java.util.ArrayList::
31471 :: EXPR :: reference :: Ljava/util/Map :: v308 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1::
31473 :: CALL :: call :: Ljava/util/Set :: v310 = v308.keySet()::
31477 :: CALL :: call :: Z :: v312 = v306.addAll(v310)::
31482 :: EXPR :: reference :: Ljava/util/Map :: v313 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1::
31484 :: CALL :: call :: Ljava/util/Set :: v315 = v313.keySet()::
31488 :: CALL :: call :: Z :: v317 = v306.addAll(v315)::
31880 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.<clinit>()::CD,31883:JM,46977:JM,47041:JM,47013:JM,42600:JM,42604:JM,47021:JM,42608:JM,46963:JM,47027:JM,42612:JM,48532:JM,42616:JM,42620:JM,34806:CD,31898:CD,31900:JM,42656:JM,42660:JM,42648:JM,42652:CD,31915:CD,31917:CD,31927:CD,31929:CD,31930:CD,31936:CD,31942
31883 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,31898
31898 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB = v2::
31900 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v10 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,31915
31915 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF = v10::
31917 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v18 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,31927
31927 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN = v18::
31929 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v25 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::
31930 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v26 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::DD,31932
31932 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(0)] = v26::
31936 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::DD,31938
31938 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(1)] = v27::
31942 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v28 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,31944
31944 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(2)] = v28::
32068 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.<clinit>()::CD,32071:CD,32090
32071 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
32072 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
32076 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
32080 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
32084 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(mmCIF)::
32090 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
32091 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
32095 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
32099 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
32103 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(mmCIF)::
32864 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.process(java.lang.String[])::CD,32869:CD,33023:CD,33024:CD,33214:JM,32959
32869 :: CALL :: call :: V :: printAboutMe()::CL,34844
32872 :: EXPR :: reference :: Ljava/lang/Object :: v7 = p1 $argv [v42]::JM,32881:JM,32887:JM,32893:JM,32910:JM,32916
32876 :: CALL :: call :: Z :: v10 = v7.equalsIgnoreCase(#(-h))::JM,32881
32881 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 39::CD,32882:CD,32887
32882 :: CALL :: call :: Z :: v13 = v7.equalsIgnoreCase(#(-help))::JM,32887
32887 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 39::CD,32888:CD,32893
32888 :: CALL :: call :: Z :: v16 = v7.equalsIgnoreCase(#(--help))::JM,32893
32893 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 53::CD,32905:CD,32910
32905 :: CALL :: call :: Z :: v19 = v7.equalsIgnoreCase(#(-version))::JM,32910
32910 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 69::CD,32911:CD,32916
32911 :: CALL :: call :: Z :: v22 = v7.equalsIgnoreCase(#(--version))::JM,32916
32916 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 121::CD,32959:CD,32960:CD,32961:CD,32967:CD,32988:CD,33022:CD,33023:CD,33024:CD,33211:CD,33212:CD,33214
32959 :: EXPR :: assign :: I :: v24 = p1 $argv .length::DD,32960
32960 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v24 - #(1)::CF,32961
32961 :: PRED :: IF :: Z :: if (v42 >= v26) goto 136::CF,33211:CD,32962
32962 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v42 + #(1)::
32963 :: EXPR :: reference :: Ljava/lang/Object :: v28 = p1 $argv [v27]::DD,33211
32967 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 155::CD,32968:CD,32973:CD,32975:CD,33212
32968 :: CALL :: call :: Z :: v32 = v29.startsWith(#(-))::JM,32973
32973 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 155::CD,32975:CD,33212
32975 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v42 + #(1)::DD,33212
32988 :: CALL :: call :: [Ljava/lang/String :: v40 = configureBean(v38, v37)::CL,35947
33022 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v34 + #(1)::DD,33214
33023 :: EXPR :: assign :: I :: v6 = p1 $argv .length::CF,33024
33024 :: PRED :: IF :: Z :: if (v42 < v6) goto 10::CD,32876:CD,32881:CD,33028:CD,33032:CD,33048:CD,33052:CD,33068:CD,33072:CD,33098:CD,33102:CD,33132:CD,33139:CD,33143
33028 :: CALL :: call :: Ljava/lang/String :: v45 = v43.getPdbFilePath()::JM,33032:CL,37435
33032 :: PRED :: IF :: Z :: if (v45 == #(null)) goto 252::CD,33040
33040 :: CALL :: call :: Ljava/lang/String :: v51 = setProperty(#(PDB_DIR), v49)::
33048 :: CALL :: call :: Ljava/lang/String :: v54 = v52.getCacheFilePath()::JM,33052:CL,37486
33052 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 275::CD,33060
33060 :: CALL :: call :: Ljava/lang/String :: v60 = setProperty(#(PDB_CACHE_DIR), v58)::
33068 :: CALL :: call :: Z :: v63 = v61.isShowMenu()::JM,33072:CL,37495
33072 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 314::CD,33075:CD,33079
33075 :: CALL :: call :: V :: v64.println(#(showing menu...))::
33079 :: CALL :: call :: V :: showAlignmentGUI()::CL,37504
33098 :: CALL :: call :: Ljava/lang/String :: v78 = v76.getShowDBresult()::JM,33102:CL,37580
33102 :: PRED :: IF :: Z :: if (v78 == #(null)) goto 357::CD,33105:CD,33112
33105 :: CALL :: call :: V :: v79.println(#(showing DB results...))::
33112 :: CALL :: call :: V :: showDBResults(v82)::CL,37589
33132 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getPdb1()::JM,33143:CL,37686
33139 :: CALL :: call :: Ljava/lang/String :: v97 = v95.getFile1()::JM,33144:CL,37695
33143 :: PRED :: IF :: Z :: if (v94 != #(null)) goto 381::CD,33144:CD,33145
33144 :: PRED :: IF :: Z :: if (v97 == #(null)) goto 386::CD,33145
33145 :: CALL :: call :: V :: p0 $this .runPairwise()::CL,37704
33211 :: EXPR :: assign :: null :: PHI v29 = #(null), v28::DD,32967:JM,32973
33212 :: EXPR :: assign :: null :: PHI v34 = v42, v33::DD,33022
33214 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,32961:DD,32962:DD,32975:DD,33024:DD,33212:CF,33023
33614 :: EXPR :: modify :: I :: p0 $this .atomicNumber = p3 $atomicNumber ::
33617 :: EXPR :: modify :: I :: p0 $this .period = p4 $period ::
33620 :: EXPR :: modify :: F :: p0 $this .VDWRadius = p6 $VDWRadius ::
33623 :: EXPR :: modify :: F :: p0 $this .covalentRadius = p7 $covalentRadius ::
33626 :: EXPR :: modify :: I :: p0 $this .valenceElectronCount = p8 $valenceElectronCount ::
33629 :: EXPR :: modify :: I :: p0 $this .minimumValence = p9 $minimumValence ::
33632 :: EXPR :: modify :: I :: p0 $this .maximumValence = p10 $maximumValence ::
33635 :: EXPR :: modify :: I :: p0 $this .commonValence = p11 $commonValence ::
33638 :: EXPR :: modify :: I :: p0 $this .maximumCovalentValence = p12 $maximumCovalentValence ::
33641 :: EXPR :: modify :: F :: p0 $this .atomicMass = p13 $atomicMass ::
33644 :: EXPR :: modify :: I :: p0 $this .coreElectronCount = p14 $coreElectronCount ::
33647 :: EXPR :: modify :: I :: p0 $this .oxidationState = p15 $oxidationState ::
33650 :: EXPR :: modify :: [I :: p0 $this .allOxidationStates = p16 $allOxidationStates ::
33653 :: EXPR :: modify :: F :: p0 $this .paulingElectronegativity = p17 $paulingElectronegativity ::
33656 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: p0 $this .elementType = p18 $elementType ::
33693 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.values()::CF,33694:CD,33696:CD,33698:CD,33699:CD,33707
33694 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.values()::JM,7132
33696 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/Element :: v2 = org.biojava.nbio.structure.Element.ENUM$VALUES::DD,33698
33698 :: EXPR :: assign :: I :: v4 = v2.length::DD,33699
33699 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v5 = new org.biojava.nbio.structure.Element[]::DD,33707
33707 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Element :: return v5::CF,33694
33747 :: EXPR :: modify :: Z :: p0 $this .metal = p3 $metal ::
33756 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.matchPolymerTypes(java.util.Set)::CD,33760:CD,33764:CD,33767:CD,33788:CD,33794
33760 :: NORM :: declaration :: Ljava/util/HashSet :: v3 = new java.util.HashSet::
33764 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v6 = values()::JM,33767:CL,41629
33767 :: EXPR :: assign :: I :: v7 = v6.length::DD,33788
33776 :: CALL :: call :: Z :: v12 = p1 $allowedTypes .contains(v10)::JM,33781
33781 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 48::CD,33782:CF,33787
33782 :: CALL :: call :: Z :: v14 = v3.add(v9)::
33787 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,33794
33788 :: PRED :: IF :: Z :: if (v17 < v7) goto 25::CD,33776:CD,33781:CD,33787:CD,33794
33794 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,33787:DD,33788
33829 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
33832 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .types = p4 $types ::
33843 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.getHetatmTypes()::CD,33846:CD,33850:CD,33853:CD,33889:CD,33895
33846 :: NORM :: declaration :: Ljava/util/HashSet :: v2 = new java.util.HashSet::
33850 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = values()::JM,33853:CL,41629
33853 :: EXPR :: assign :: I :: v6 = v5.length::DD,33889
33865 :: CALL :: call :: Z :: v13 = v11.contains(v8)::JM,33870
33870 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 64::CD,33877:CD,33882:CF,33888
33877 :: CALL :: call :: Z :: v18 = v16.contains(v8)::JM,33882
33882 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 64::CD,33883:CF,33888
33883 :: CALL :: call :: Z :: v20 = v2.add(v8)::
33888 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,33895
33889 :: PRED :: IF :: Z :: if (v23 < v6) goto 24::CD,33865:CD,33870:CD,33888:CD,33895
33895 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,33888:DD,33889
33974 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.ResourceManager.getResourceManager(java.lang.String)::JM,41937:JM,41929
33986 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.ResourceManager.getString(java.lang.String)::CE,33987:CD,33994:CD,33999:CD,34006:CD,34010:CD,34011:CD,34019:CD,34024:CD,34029:CD,34033
33987 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.ResourceManager.getString(java.lang.String)::
33994 :: CALL :: call :: Ljava/lang/String :: v6 = v4.getString(p1 $key )::JM,33999
33999 :: NORM :: compound :: Ljava/lang/String :: return v6::DD,33987
34006 :: CALL :: call :: V :: v8.println(v10)::
34010 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::JM,34033
34011 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(#(33))::
34019 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v12.append(p1 $key )::JM,34033
34024 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v18.append(#(33))::JM,34033
34029 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::JM,34033
34033 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,33987
34050 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
34071 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .entity_poly_type = p3 $entity_poly_type ::
34080 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::CF,34081:CD,34083:CD,34085:CD,34086:CD,34094
34081 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::JM,15487
34083 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.ENUM$VALUES::DD,34085
34085 :: EXPR :: assign :: I :: v4 = v2.length::DD,34086
34086 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::DD,34094
34094 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v5::CF,34081
34267 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p3 $pt ::
34270 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chem_comp_type = p4 $chem_comp_type ::
34328 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML()::CD,34332:CD,34336:CD,34341:CD,34351:CD,34355:CD,34362:CD,34367:CD,34371:CD,34376:CD,34384:CD,34390:CD,34395:CD,34399:CD,34404:CD,34412:CD,34415:CD,34421:CD,34425:CD,34467:CD,34471:CD,34473:CD,34474:CD,34475
34332 :: CALL :: call :: Ljava/lang/ClassLoader :: v4 = v2.getClassLoader()::JM,34341
34336 :: CALL :: call :: Ljava/io/InputStream :: v7 = v4.getResourceAsStream(#(org/biojava/nbio/stru...))::JM,34341
34341 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CF,34351:CD,34348
34348 :: CALL :: call :: V :: exit(#(1))::
34351 :: NORM :: declaration :: Ljava/util/TreeMap :: v14 = new java.util.TreeMap::DD,34475
34355 :: CALL :: call :: Ljava/util/TreeMap :: v17 = parseSpaceGroupsXML(v7)::JM,34475:CL,42513
34362 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
34367 :: CALL :: call :: Ljava/lang/String :: v37 = v31.getMessage()::
34371 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::
34376 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
34384 :: CALL :: call :: V :: exit(#(1))::
34390 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
34395 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
34399 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
34404 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
34412 :: CALL :: call :: V :: exit(#(1))::
34415 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
34421 :: CALL :: call :: Ljava/util/Collection :: v49 = v45.values()::JM,34434:JM,34471
34425 :: CALL :: call :: Ljava/util/Iterator :: v51 = v49.iterator()::JM,34434:JM,34471
34430 :: CALL :: call :: Ljava/lang/Object :: v56 = v51.next()::JM,34434:JM,34471
34434 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::JM,34450:JM,34454
34444 :: CALL :: call :: Ljava/lang/Object :: v63 = v59.put(v61, v57)::
34450 :: CALL :: call :: Ljava/lang/String :: v65 = v57.getAltShortSymbol()::JM,34450:JM,34454
34454 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 181::CD,34461:JM,34434:JM,34471
34461 :: CALL :: call :: Ljava/lang/Object :: v70 = v66.put(v68, v57)::
34467 :: CALL :: call :: Z :: v53 = v51.hasNext()::JM,34434:JM,34471
34471 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 136::CD,34430:CD,34434:CD,34444:CD,34450:CD,34454:CD,34467:JM,34471
34473 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
34474 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
34475 :: EXPR :: assign :: null :: PHI v45 = v17, v14, v14::CF,34415:JM,34434:JM,34471
34519 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
34522 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .type = p4 $stype ::
34555 :: EXPR :: modify :: Z :: p0 $this .downloadAll = #(0)::
34564 :: CALL :: call :: V :: initPath()::CL,42535
34586 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
34589 :: EXPR :: modify :: Z :: p0 $this .isCrystallographic = p4 $isXtallographic ::
34592 :: EXPR :: modify :: Z :: p0 $this .isNmr = p5 $isNmr ::
34605 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.initExpTechStr2Value()::CD,34608:CD,34612:CD,34615:CD,34632:CD,34634
34608 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
34612 :: CALL :: call :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = values()::JM,34615:CL,42564
34615 :: EXPR :: assign :: I :: v6 = v5.length::DD,34632
34625 :: CALL :: call :: Ljava/lang/Object :: v12 = v2.put(v10, v8)::
34631 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,34634
34632 :: PRED :: IF :: Z :: if (v15 < v6) goto 24::CD,34625:CD,34631:CD,34634
34634 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,34631:DD,34632
34781 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::CE,34782:CD,34788:CD,34792
34782 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::JM,111665:JM,111621
34785 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .extensions::JM,34788:JM,34792
34788 :: CALL :: call :: Ljava/util/List :: v5 = unmodifiableList(v3)::JM,34788:JM,34792
34792 :: NORM :: compound :: Ljava/util/List :: return v5::DD,34782
34806 :: EXPR :: modify :: Ljava/util/List :: p0 $this .extensions = p3 $extensions ::
34844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.printAboutMe()::CD,34847:CD,34851:CD,34856:CD,34863:CD,34868:CD,34873:CD,34878:CD,34883:CD,34887:CD,34892
34847 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v4 = getResourceManager(#(about))::CL,33974
34851 :: CALL :: call :: Ljava/lang/String :: v7 = v4.getString(#(project_version))::CL,33986
34856 :: CALL :: call :: Ljava/lang/String :: v10 = v4.getString(#(build))::CL,33986
34863 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
34868 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v12.append(v7)::
34873 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#( ))::
34878 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v19.append(v10)::
34883 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
34887 :: CALL :: call :: V :: v11.println(v23)::
34892 :: CALL :: call :: V :: v25.printStackTrace()::
35947 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CliTools.configureBean(java.lang.Object,java.lang.String[])::CD,35952:CD,35956:CD,35962:CD,35967:CD,35971:CD,35976:CD,35985:CD,35989:CD,35993:CD,36010:CD,36011:CD,36015:CD,36019:CD,36076:CD,36081:CD,36086:CD,36091:CD,36096:CD,36101:CD,36121:CD,36126:CD,36131:CD,36136:CD,36146:CD,36151:CD,36156:CD,36161:CD,36198:CD,36203:CD,36208:CD,36213:CD,36239:CD,36244:CD,36249:CD,36254:CD,36314:CD,36319:CD,36324:CD,36329:CD,36401:CD,36406:CD,36411:CD,36416:CD,36465:CD,36470:CD,36475:CD,36480:CD,36534:CD,36539:CD,36544:CD,36549:CD,36598:CD,36603:CD,36608:CD,36613:CD,36638:CD,36642:CD,36648:CD,36652:CD,36657:CD,36662:CD,36667:CD,36671:CD,36676:CD,36681:CD,36691:CD,36692:CD,36696:CD,36701:CD,36706:CD,36709:CD,36782:CD,36787:CD,36791:CD,36796:CD,36822:CD,36827:CD,36831:CD,36836:CD,36841:CD,36851:CD,36856:CD,36860:CD,36865:CD,36870:CD,36891:CD,36892:CD,36893:CD,36897:CD,36947:CD,36952:CD,36956:CD,36961:CD,36966:CD,37007:CD,37012:CD,37016:CD,37021:CD,37026:CD,37036:CD,37041:CD,37045:CD,37050:CD,37055:CD,37064:CD,37068:CD,37069:CD,37073:CD,37074:CD,37081:CD,37094:CD,37097:CD,37110
35952 :: CALL :: call :: Ljava/lang/Class :: v5 = p1 $bean .getClass()::JM,35952:JM,35956:JM,35989:JM,35993:JM,36891
35956 :: CALL :: call :: Ljava/beans/BeanInfo :: v7 = getBeanInfo(v5)::JM,35956:JM,35989:JM,35993
35962 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
35967 :: CALL :: call :: Ljava/lang/String :: v14 = v8.getMessage()::
35971 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v10.append(v14)::
35976 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
35985 :: NORM :: declaration :: Ljava/util/HashMap :: v20 = new java.util.HashMap::
35989 :: CALL :: call :: [Ljava/beans/PropertyDescriptor :: v23 = v7.getPropertyDescriptors()::JM,35989:JM,35993
35993 :: EXPR :: assign :: I :: v24 = v23.length::DD,36010
36003 :: CALL :: call :: Ljava/lang/Object :: v30 = v20.put(v28, v26)::
36009 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v33 + #(1)::DD,37094
36010 :: PRED :: IF :: Z :: if (v33 < v24) goto 69::CF,36011:CD,36003:CD,36009:CD,37094
36011 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::JM,37073
36015 :: NORM :: declaration :: Ljava/util/HashMap :: v36 = new java.util.HashMap::JM,36906:JM,37068
36019 :: NORM :: declaration :: Ljava/util/HashSet :: v38 = new java.util.HashSet::
36024 :: EXPR :: reference :: Ljava/lang/Object :: v41 = p2 $args [v232]::DD,36028:JM,36034:JM,36040:JM,36064
36028 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 151::CD,36030:CD,36034:CD,37107
36030 :: CALL :: call :: I :: v44 = v41.length()::JM,36034
36034 :: PRED :: IF :: Z :: if (v44 <= #(0)) goto 1538::CD,36035:CD,36040:CD,36885:CD,37107
36035 :: CALL :: call :: C :: v46 = v41.charAt(#(0))::JM,36040
36040 :: PRED :: IF :: Z :: if (v46 != #(45)) goto 1538::CD,36041:CD,36046:CD,36051:CD,36052:CD,36751:CD,36885:CD,37100:CD,37101:CD,37102:CD,37103:CD,37107
36041 :: CALL :: call :: Ljava/lang/String :: v49 = v41.substring(#(1))::
36046 :: CALL :: call :: Ljava/lang/Object :: v51 = v20.get(v49)::JM,36051
36051 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::DD,36052:JM,36178:JM,36179:JM,37096:JM,36170:JM,36174:DD,37101
36052 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 361::CD,36059:CD,36064:CD,36068:CD,36073:CD,36117:CD,36170:CD,36174:CD,36178:CD,36183:CD,36185:CD,37095:CD,37096:CD,37100:CD,37101:CD,37102:CD,37103:JM,36179
36059 :: CALL :: call :: Ljava/lang/String :: v58 = v41.substring(#(3))::JM,36064
36064 :: CALL :: call :: Ljava/lang/String :: v60 = decapitalize(v58)::JM,36064
36068 :: CALL :: call :: Ljava/lang/Object :: v62 = v20.get(v60)::JM,36073
36073 :: EXPR :: assign :: Ljava/lang/Object :: v63 = CHECKCAST v62::DD,37101
36076 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v510 = new java.lang.StringBuilder::
36081 :: CALL :: call :: Ljava/lang/String :: v513 = v41.substring(#(1))::
36086 :: CALL :: call :: Ljava/lang/StringBuilder :: v515 = v510.append(v513)::
36091 :: CALL :: call :: Ljava/lang/StringBuilder :: v518 = v515.append(#( or ))::
36096 :: CALL :: call :: Ljava/lang/StringBuilder :: v520 = v518.append(v60)::
36101 :: CALL :: call :: Ljava/lang/String :: v522 = v520.toString()::
36117 :: EXPR :: reference :: Ljava/lang/Boolean :: v67 = java.lang.Boolean.FALSE::DD,37103
36121 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v461 = new java.lang.StringBuilder::
36126 :: CALL :: call :: Ljava/lang/StringBuilder :: v465 = v461.append(v41)::
36131 :: CALL :: call :: Ljava/lang/StringBuilder :: v468 = v465.append(#( does not refer to a ...))::
36136 :: CALL :: call :: Ljava/lang/String :: v470 = v468.toString()::
36146 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v450 = new java.lang.StringBuilder::
36151 :: CALL :: call :: Ljava/lang/String :: v454 = v41.substring(#(1))::
36156 :: CALL :: call :: Ljava/lang/StringBuilder :: v456 = v450.append(v454)::
36161 :: CALL :: call :: Ljava/lang/String :: v458 = v456.toString()::
36170 :: CALL :: call :: Ljava/lang/Class :: v69 = v52.getPropertyType()::JM,36178:JM,36179:JM,37096:JM,36170:JM,36174
36174 :: CALL :: call :: Z :: v71 = v69.isArray()::JM,36178:JM,36179:JM,37096:JM,36174
36178 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 386::CF,37095:CD,36179:CD,37096:JM,36178:JM,36174
36179 :: CALL :: call :: Ljava/lang/Class :: v73 = v69.getComponentType()::JM,36178:JM,36179:JM,37096:JM,36174
36183 :: EXPR :: reference :: Ljava/lang/Class :: v76 = java.lang.Integer.TYPE::CF,36185
36185 :: PRED :: IF :: Z :: if (v75 != v76) goto 445::CF,36186:CD,36187:CD,36222:CD,36224:CD,37100:CD,37101:CD,37102:CD,37103
36186 :: NORM :: declaration :: Ljava/lang/Integer :: v77 = new java.lang.Integer::JM,36186:DD,37103:CF,36187
36187 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v232 + #(1)::DD,37100
36188 :: EXPR :: reference :: Ljava/lang/Object :: v79 = p2 $args [v78]::JM,36186
36198 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v439 = new java.lang.StringBuilder::
36203 :: CALL :: call :: Ljava/lang/StringBuilder :: v442 = v439.append(v41)::
36208 :: CALL :: call :: Ljava/lang/StringBuilder :: v445 = v442.append(#( requires an integer ...))::
36213 :: CALL :: call :: Ljava/lang/String :: v447 = v445.toString()::
36222 :: EXPR :: reference :: Ljava/lang/Class :: v81 = java.lang.Double.TYPE::CF,36224
36224 :: PRED :: IF :: Z :: if (v75 == v81) goto 458::CF,36227:CD,36225:CD,36226:CD,36228:CD,37100:CD,37101:CD,37102:CD,37103
36225 :: EXPR :: assign :: Ljava/lang/Class :: v82 = metadata <Application,Ljava/lang/Double>-><Primordial,Ljava/lang/Class>::CF,36226
36226 :: PRED :: IF :: Z :: if (v75 != v82) goto 511::CF,36227:CD,36228:CD,36263:CD,36264:CD,37100:CD,37101:CD,37102:CD,37103
36227 :: NORM :: declaration :: Ljava/lang/Double :: v83 = new java.lang.Double::DD,37103:CF,36228
36228 :: EXPR :: assign :: Ljava/lang/Object :: v84 = v232 + #(1)::DD,37100
36229 :: EXPR :: reference :: Ljava/lang/Object :: v85 = p2 $args [v84]::
36239 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v427 = new java.lang.StringBuilder::
36244 :: CALL :: call :: Ljava/lang/StringBuilder :: v430 = v427.append(v41)::
36249 :: CALL :: call :: Ljava/lang/StringBuilder :: v433 = v430.append(#( requires a numerical...))::
36254 :: CALL :: call :: Ljava/lang/String :: v435 = v433.toString()::
36263 :: EXPR :: assign :: Ljava/lang/Class :: v87 = metadata <Application,Ljava/lang/String>-><Primordial,Ljava/lang/Class>::CF,36264
36264 :: PRED :: IF :: Z :: if (v75 != v87) goto 530::CD,36265:CD,36271:CD,36273:CD,37100:CD,37101:CD,37102:CD,37103
36265 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v232 + #(1)::DD,37100
36266 :: EXPR :: reference :: Ljava/lang/Object :: v89 = p2 $args [v88]::DD,37103
36271 :: EXPR :: reference :: Ljava/lang/Class :: v90 = java.lang.Boolean.TYPE::CF,36273
36273 :: PRED :: IF :: Z :: if (v75 != v90) goto 644::CF,36338:CD,36274:CD,36279:CD,36339:CD,36344
36274 :: EXPR :: assign :: Ljava/lang/Object :: v91 = v232 + #(1)::DD,37100
36275 :: EXPR :: reference :: Ljava/lang/Object :: v92 = p2 $args [v91]::DD,36279:JM,36288:JM,36294
36279 :: PRED :: IF :: Z :: if (v92 != #(null)) goto 562::CD,36280:CD,36283:CD,36288:CD,37100:CD,37101:CD,37102:CD,37103
36280 :: EXPR :: reference :: Ljava/lang/Boolean :: v93 = java.lang.Boolean.TRUE::DD,37103
36283 :: CALL :: call :: Z :: v96 = v92.equalsIgnoreCase(#(true))::JM,36288
36288 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 578::CD,36289:CD,36294:CD,36295:CD,37100:CD,37101:CD,37102:CD,37103
36289 :: CALL :: call :: Z :: v99 = v92.equalsIgnoreCase(#(t))::JM,36294
36294 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 590::CD,36295:CD,36310:CD,37100:CD,37101:CD,37102:CD,37103
36295 :: EXPR :: reference :: Ljava/lang/Boolean :: v100 = java.lang.Boolean.TRUE::DD,37103
36310 :: EXPR :: reference :: Ljava/lang/Boolean :: v107 = java.lang.Boolean.FALSE::DD,37103
36314 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v415 = new java.lang.StringBuilder::
36319 :: CALL :: call :: Ljava/lang/StringBuilder :: v418 = v415.append(v41)::
36324 :: CALL :: call :: Ljava/lang/StringBuilder :: v421 = v418.append(#( requires a boolean p...))::
36329 :: CALL :: call :: Ljava/lang/String :: v423 = v421.toString()::
36338 :: EXPR :: assign :: Ljava/lang/Class :: v108 = metadata <Application,Ljava/io/File>-><Primordial,Ljava/lang/Class>::JM,36339:JM,36344
36339 :: CALL :: call :: Z :: v110 = v108.isAssignableFrom(v75)::JM,36339:JM,36344
36344 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 673::CF,36356:CF,36345:CD,36346:CD,36357:CD,36362:CD,37100:CD,37101:CD,37102:CD,37103
36345 :: NORM :: declaration :: Ljava/io/File :: v111 = new java.io.File::DD,37103:CF,36346
36346 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v232 + #(1)::DD,37100
36347 :: EXPR :: reference :: Ljava/lang/Object :: v113 = p2 $args [v112]::
36356 :: EXPR :: assign :: Ljava/lang/Class :: v115 = metadata <Application,Ljava/io/Reader>-><Primordial,Ljava/lang/Class>::JM,36357:JM,36362
36357 :: CALL :: call :: Z :: v117 = v115.isAssignableFrom(v75)::JM,36357:JM,36362
36362 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 788::CF,36425:CD,36363:CD,36368:CD,36373:CD,36426:CD,36431
36363 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v232 + #(1)::DD,37100
36364 :: EXPR :: reference :: Ljava/lang/Object :: v119 = p2 $args [v118]::JM,36373
36368 :: CALL :: call :: Z :: v122 = #(-).equals(v119)::JM,36373
36373 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 735::CF,36389:CD,36381:CD,36390:CD,37100:CD,37101:CD,37102:CD,37103
36381 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v123 = new java.io.InputStreamReader::DD,37103
36389 :: NORM :: declaration :: Ljava/io/FileReader :: v126 = new java.io.FileReader::DD,37103:CF,36390
36390 :: NORM :: declaration :: Ljava/io/File :: v127 = new java.io.File::
36401 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v403 = new java.lang.StringBuilder::
36406 :: CALL :: call :: Ljava/lang/StringBuilder :: v406 = v403.append(v119)::
36411 :: CALL :: call :: Ljava/lang/StringBuilder :: v408 = v406.append(#( for input))::
36416 :: CALL :: call :: Ljava/lang/String :: v410 = v408.toString()::
36425 :: EXPR :: assign :: Ljava/lang/Class :: v130 = metadata <Application,Ljava/io/InputStream>-><Primordial,Ljava/lang/Class>::JM,36426:JM,36431
36426 :: CALL :: call :: Z :: v132 = v130.isAssignableFrom(v75)::JM,36426:JM,36431
36431 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 896::CF,36489:CD,36432:CD,36437:CD,36442:CD,36490:CD,36495
36432 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v232 + #(1)::DD,37100
36433 :: EXPR :: reference :: Ljava/lang/Object :: v134 = p2 $args [v133]::JM,36442
36437 :: CALL :: call :: Z :: v136 = #(-).equals(v134)::JM,36442
36442 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 843::CF,36453:CD,36450:CD,36454:CD,37100:CD,37101:CD,37102:CD,37103
36450 :: EXPR :: reference :: Ljava/io/InputStream :: v137 = java.lang.System.in::DD,37103
36453 :: NORM :: declaration :: Ljava/io/FileInputStream :: v138 = new java.io.FileInputStream::DD,37103:CF,36454
36454 :: NORM :: declaration :: Ljava/io/File :: v139 = new java.io.File::
36465 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v388 = new java.lang.StringBuilder::
36470 :: CALL :: call :: Ljava/lang/StringBuilder :: v391 = v388.append(v134)::
36475 :: CALL :: call :: Ljava/lang/StringBuilder :: v394 = v391.append(#( for input))::
36480 :: CALL :: call :: Ljava/lang/String :: v396 = v394.toString()::
36489 :: EXPR :: assign :: Ljava/lang/Class :: v142 = metadata <Application,Ljava/io/Writer>-><Primordial,Ljava/lang/Class>::JM,36490:JM,36495
36490 :: CALL :: call :: Z :: v144 = v142.isAssignableFrom(v75)::JM,36490:JM,36495
36495 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 1011::CF,36558:CD,36496:CD,36501:CD,36506:CD,36559:CD,36564
36496 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v232 + #(1)::DD,37100
36497 :: EXPR :: reference :: Ljava/lang/Object :: v146 = p2 $args [v145]::JM,36506
36501 :: CALL :: call :: Z :: v148 = #(-).equals(v146)::JM,36506
36506 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 958::CF,36522:CD,36514:CD,36523:CD,37100:CD,37101:CD,37102:CD,37103
36514 :: NORM :: declaration :: Ljava/io/OutputStreamWriter :: v149 = new java.io.OutputStreamWriter::DD,37103
36522 :: NORM :: declaration :: Ljava/io/FileWriter :: v152 = new java.io.FileWriter::DD,37103:CF,36523
36523 :: NORM :: declaration :: Ljava/io/File :: v153 = new java.io.File::
36534 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v375 = new java.lang.StringBuilder::
36539 :: CALL :: call :: Ljava/lang/StringBuilder :: v378 = v375.append(v146)::
36544 :: CALL :: call :: Ljava/lang/StringBuilder :: v380 = v378.append(#( for output))::
36549 :: CALL :: call :: Ljava/lang/String :: v382 = v380.toString()::
36558 :: EXPR :: assign :: Ljava/lang/Class :: v156 = metadata <Application,Ljava/io/OutputStream>-><Primordial,Ljava/lang/Class>::JM,36564:JM,36559
36559 :: CALL :: call :: Z :: v158 = v156.isAssignableFrom(v75)::JM,36564:JM,36559
36564 :: PRED :: IF :: Z :: if (v158 == #(0)) goto 1121::CD,36565:CD,36570:CD,36575:CD,36622:CD,36626
36565 :: EXPR :: assign :: Ljava/lang/Object :: v159 = v232 + #(1)::DD,37100
36566 :: EXPR :: reference :: Ljava/lang/Object :: v160 = p2 $args [v159]::JM,36575
36570 :: CALL :: call :: Z :: v162 = #(-).equals(v160)::JM,36575
36575 :: PRED :: IF :: Z :: if (v162 == #(0)) goto 1066::CF,36586:CD,36583:CD,36587:CD,37100:CD,37101:CD,37102:CD,37103
36583 :: EXPR :: reference :: Ljava/io/PrintStream :: v163 = java.lang.System.out::DD,37103
36586 :: NORM :: declaration :: Ljava/io/FileOutputStream :: v164 = new java.io.FileOutputStream::DD,37103:CF,36587
36587 :: NORM :: declaration :: Ljava/io/File :: v165 = new java.io.File::
36598 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v359 = new java.lang.StringBuilder::
36603 :: CALL :: call :: Ljava/lang/StringBuilder :: v363 = v359.append(v160)::
36608 :: CALL :: call :: Ljava/lang/StringBuilder :: v366 = v363.append(#( for output))::
36613 :: CALL :: call :: Ljava/lang/String :: v368 = v366.toString()::
36622 :: CALL :: call :: Z :: v169 = v75.isEnum()::JM,36626:JM,36622
36626 :: PRED :: IF :: Z :: if (v169 == #(0)) goto 1287::CD,36627:CD,36632:CD,36720:CD,36725:CD,36730:CD,36735:CD,36740:CD,36744:CD,36748:CD,37100:CD,37101:CD,37102:CD,37103
36627 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v232 + #(1)::DD,37100
36632 :: CALL :: call :: Ljava/lang/Enum :: v173 = valueOf(v75, v171)::JM,37103
36638 :: CALL :: call :: Ljava/lang/String :: v176 = v171.toUpperCase()::
36642 :: CALL :: call :: Ljava/lang/Enum :: v178 = valueOf(v75, v176)::JM,37103
36648 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v322 = new java.lang.StringBuilder::
36652 :: CALL :: call :: Ljava/lang/StringBuilder :: v326 = v322.append(#(Option ))::
36657 :: CALL :: call :: Ljava/lang/StringBuilder :: v328 = v326.append(v41)::
36662 :: CALL :: call :: Ljava/lang/StringBuilder :: v331 = v322.append(#( requires a ))::
36667 :: CALL :: call :: Ljava/lang/String :: v333 = v75.getSimpleName()::
36671 :: CALL :: call :: Ljava/lang/StringBuilder :: v335 = v331.append(v333)::
36676 :: CALL :: call :: Ljava/lang/StringBuilder :: v338 = v322.append(#( parameter. One of: ))::
36681 :: CALL :: call :: [Ljava/lang/Object :: v340 = v75.getEnumConstants()::
36687 :: EXPR :: reference :: Ljava/lang/Object :: v342 = v340[v352]::DD,36691
36691 :: EXPR :: assign :: Ljava/lang/Object :: v343 = CHECKCAST v342::
36692 :: CALL :: call :: Ljava/lang/String :: v345 = v343.name()::
36696 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v322.append(v345)::
36701 :: CALL :: call :: Ljava/lang/StringBuilder :: v350 = v322.append(#( ))::
36706 :: EXPR :: assign :: Ljava/lang/Object :: v351 = v352 + #(1)::DD,37097
36709 :: CALL :: call :: Ljava/lang/String :: v355 = v322.toString()::
36720 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v180 = new java.lang.StringBuilder::
36725 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v180.append(v41)::
36730 :: CALL :: call :: Ljava/lang/StringBuilder :: v187 = v184.append(#( propType:))::
36735 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v187.append(v75)::
36740 :: CALL :: call :: Ljava/lang/String :: v191 = v189.toString()::
36744 :: CALL :: call :: V :: v179.println(v191)::
36748 :: CALL :: call :: V :: exit(#(1))::
36751 :: PRED :: IF :: Z :: if (v199 == #(0)) goto 1388::CD,36752:CD,36757:CD,36758:CD,36769:CD,36775:CD,36879:CD,37104:CD,37107
36752 :: CALL :: call :: Ljava/lang/Object :: v204 = v36.get(v198)::JM,36757
36757 :: EXPR :: assign :: Ljava/lang/Object :: v205 = CHECKCAST v204::DD,36758:DD,37104
36758 :: PRED :: IF :: Z :: if (v205 != #(null)) goto 1375::CF,37104:CF,36759:CD,36763
36759 :: NORM :: declaration :: Ljava/util/ArrayList :: v206 = new java.util.ArrayList::DD,37104
36763 :: CALL :: call :: Ljava/lang/Object :: v209 = v36.put(v198, v206)::
36769 :: CALL :: call :: Z :: v212 = v210.add(v200)::
36775 :: CALL :: call :: Z :: v214 = v38.contains(v198)::
36782 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v499 = new java.lang.StringBuilder::
36787 :: CALL :: call :: Ljava/lang/String :: v503 = v198.getName()::
36791 :: CALL :: call :: Ljava/lang/StringBuilder :: v505 = v499.append(v503)::
36796 :: CALL :: call :: Ljava/lang/String :: v507 = v505.toString()::
36822 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v487 = new java.lang.StringBuilder::
36827 :: CALL :: call :: Ljava/lang/String :: v490 = v198.getName()::
36831 :: CALL :: call :: Ljava/lang/StringBuilder :: v492 = v487.append(v490)::
36836 :: CALL :: call :: Ljava/lang/StringBuilder :: v494 = v492.append(#('))::
36841 :: CALL :: call :: Ljava/lang/String :: v496 = v494.toString()::
36851 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v474 = new java.lang.StringBuilder::
36856 :: CALL :: call :: Ljava/lang/String :: v477 = v198.getName()::
36860 :: CALL :: call :: Ljava/lang/StringBuilder :: v479 = v474.append(v477)::
36865 :: CALL :: call :: Ljava/lang/StringBuilder :: v481 = v479.append(#('))::
36870 :: CALL :: call :: Ljava/lang/String :: v483 = v481.toString()::
36879 :: CALL :: call :: Z :: v221 = v38.add(v198)::
36885 :: CALL :: call :: Z :: v223 = v34.add(v41)::
36890 :: EXPR :: assign :: Ljava/lang/Object :: v228 = v227 + #(1)::DD,37110
36891 :: EXPR :: assign :: I :: v40 = p2 $args .length::CF,36892
36892 :: PRED :: IF :: Z :: if (v232 < v40) goto 138::CD,36028:CD,36890:CD,36891:CD,37107:CD,37110:JM,36906:JM,37068
36893 :: CALL :: call :: Ljava/util/Set :: v234 = v36.entrySet()::JM,36906:JM,37068
36897 :: CALL :: call :: Ljava/util/Iterator :: v236 = v234.iterator()::JM,36906:JM,37068
36902 :: CALL :: call :: Ljava/lang/Object :: v240 = v236.next()::JM,36906:JM,37068
36906 :: EXPR :: assign :: Ljava/lang/Object :: v241 = CHECKCAST v240::JM,36911:JM,36916
36907 :: CALL :: call :: Ljava/lang/Object :: v243 = v241.getKey()::JM,36911
36911 :: EXPR :: assign :: Ljava/lang/Object :: v244 = CHECKCAST v243::JM,36929:JM,36979:JM,36932:JM,36917:JM,36984:JM,36921:JM,36925:JM,36916
36912 :: CALL :: call :: Ljava/lang/Object :: v246 = v241.getValue()::JM,36916
36916 :: EXPR :: assign :: Ljava/lang/Object :: v247 = CHECKCAST v246::JM,36979:JM,36984:JM,36929:JM,36932:JM,36917:JM,36921:JM,36925
36917 :: CALL :: call :: Ljava/lang/Class :: v249 = v244.getPropertyType()::JM,36929:JM,36979:JM,36932:JM,36917:JM,36984:JM,36921:JM,36925
36921 :: CALL :: call :: Ljava/lang/Class :: v251 = v249.getComponentType()::JM,36929:JM,36979:JM,36932:JM,36984:JM,36921:JM,36925
36925 :: CALL :: call :: Z :: v253 = v251.isPrimitive()::JM,36929:JM,36979:JM,36932:JM,36984:JM,36925
36929 :: PRED :: IF :: Z :: if (v253 == #(0)) goto 1702::CD,36930:CD,36932:CD,36975:CD,36979:CD,36984:CD,36985
36930 :: EXPR :: reference :: Ljava/lang/Class :: v254 = java.lang.Integer.TYPE::CF,36932
36932 :: PRED :: IF :: Z :: if (v251 != v254) goto 1645::CD,36933:CD,36941
36933 :: CALL :: call :: [I :: v256 = toIntArray(v247)::CL,43258
36941 :: CALL :: call :: [D :: v259 = toDoubleArray(v247)::CL,43307
36947 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v280 = new java.lang.StringBuilder::
36952 :: CALL :: call :: Ljava/lang/String :: v284 = v251.getName()::JM,36929:JM,36979:JM,36984:JM,36925
36956 :: CALL :: call :: Ljava/lang/StringBuilder :: v286 = v280.append(v284)::JM,36984
36961 :: CALL :: call :: Ljava/lang/StringBuilder :: v289 = v286.append(#( are currently unsupp...))::
36966 :: CALL :: call :: Ljava/lang/String :: v291 = v289.toString()::
36975 :: CALL :: call :: I :: v261 = v247.size()::JM,36979:JM,36984
36979 :: CALL :: call :: Ljava/lang/Object :: v263 = newInstance(v251, v261)::JM,36929:JM,36979:JM,36984:JM,36925
36984 :: EXPR :: assign :: Ljava/lang/Object :: v264 = CHECKCAST v263::
36985 :: CALL :: call :: [Ljava/lang/Object :: v266 = v247.toArray(v264)::
37007 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v310 = new java.lang.StringBuilder::
37012 :: CALL :: call :: Ljava/lang/String :: v313 = v244.getName()::
37016 :: CALL :: call :: Ljava/lang/StringBuilder :: v315 = v310.append(v313)::
37021 :: CALL :: call :: Ljava/lang/StringBuilder :: v317 = v315.append(#('))::
37026 :: CALL :: call :: Ljava/lang/String :: v319 = v317.toString()::
37036 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v295 = new java.lang.StringBuilder::
37041 :: CALL :: call :: Ljava/lang/String :: v299 = v244.getName()::
37045 :: CALL :: call :: Ljava/lang/StringBuilder :: v301 = v295.append(v299)::
37050 :: CALL :: call :: Ljava/lang/StringBuilder :: v304 = v301.append(#('))::
37055 :: CALL :: call :: Ljava/lang/String :: v306 = v304.toString()::
37064 :: CALL :: call :: Z :: v238 = v236.hasNext()::JM,36906:JM,37068
37068 :: PRED :: IF :: Z :: if (v238 != #(0)) goto 1573::CD,36902:CD,36906:CD,36907:CD,36911:CD,36912:CD,36916:CD,36917:CD,36921:CD,36925:CD,36929:CD,37064:JM,37068:JM,37073
37069 :: CALL :: call :: I :: v274 = v34.size()::JM,37073
37073 :: NORM :: declaration :: [Ljava/lang/String :: v275 = new java.lang.String[]::
37074 :: CALL :: call :: [Ljava/lang/Object :: v277 = v34.toArray(v275)::
37081 :: EXPR :: assign :: Ljava/lang/Exception :: v8 = catch <exc>::
37094 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::DD,36009:DD,36010
37095 :: EXPR :: assign :: null :: PHI v74 = #(0), #(1)::CF,37096:DD,37102
37096 :: EXPR :: assign :: null :: PHI v75 = v69, v73::DD,36185:DD,36224:DD,36226:DD,36264:DD,36273:JM,36339:JM,36344:JM,36357:JM,36362:JM,36426:JM,36431:JM,36490:JM,36495:JM,36564:JM,36559:JM,36626:JM,36622
37097 :: EXPR :: assign :: null :: PHI v352 = #(0), v351::DD,36706
37100 :: EXPR :: assign :: null :: PHI v197 = v232, v78, v84, v88, v91, v91, v91, v112, v118, v118, v133, v133, v145, v145, v159, v159, v170, v170, v232::CF,37101:DD,37107
37101 :: EXPR :: assign :: null :: PHI v198 = v63, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52, v52::CF,37102
37102 :: EXPR :: assign :: null :: PHI v199 = #(0), v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74, v74::CF,37103:DD,36751
37103 :: EXPR :: assign :: null :: PHI v200 = v67, v77, v83, v89, v93, v100, v107, v111, v123, v126, v137, v138, v149, v152, v163, v164, v173, v178, #(null)::CF,36751
37104 :: EXPR :: assign :: null :: PHI v210 = v205, v206::
37107 :: EXPR :: assign :: null :: PHI v227 = v232, v197, v197, v232::DD,36890
37110 :: EXPR :: assign :: null :: PHI v232 = #(0), v228::DD,36187:DD,36228:DD,36265:DD,36274:DD,36346:DD,36363:DD,36432:DD,36496:DD,36565:DD,36627:DD,36892:DD,37100:DD,37107:CF,36891
37435 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdbFilePath()::CE,37436:CD,37442
37436 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdbFilePath()::JM,33032:JM,37785
37439 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,37442
37442 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,37436
37486 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getCacheFilePath()::CE,37487:CD,37493
37487 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getCacheFilePath()::JM,33052
37490 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,37493
37493 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,37487
37495 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.isShowMenu()::CE,37496:CD,37502
37496 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.ce.StartupParameters.isShowMenu()::JM,33072
37499 :: EXPR :: reference :: Z :: v3 = p0 $this .showMenu::DD,37502
37502 :: NORM :: compound :: Z :: return v3::CF,37496
37504 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.showAlignmentGUI()::CD,37507:CD,37511:CD,37517
37507 :: CALL :: call :: Ljava/lang/Class :: v4 = forName(#(org.biojava.nbio.stru...))::JM,37507
37511 :: CALL :: call :: Ljava/lang/reflect/Method :: v8 = v4.getMethod(#(getInstance), #(null))::
37517 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.invoke(v4, #(null))::
37580 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getShowDBresult()::CE,37581:CD,37587
37581 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getShowDBresult()::JM,33102
37584 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .showDBresult::DD,37587
37587 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,37581
37589 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.GuiWrapper.showDBResults(org.biojava.nbio.structure.align.ce.StartupParameters)::CD,37593:CD,37597:CD,37601:CD,37616:CD,37622:CD,37623:CD,37624:CD,37640:CD,37647:CD,37652
37593 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/UserConfiguration :: v4 = fromStartupParams(p1 $params )::CL,43467
37597 :: CALL :: call :: Ljava/lang/Class :: v7 = forName(#(org.biojava.nbio.stru...))::JM,37601:JM,37597
37601 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.newInstance()::JM,37601
37616 :: CALL :: call :: Ljava/lang/reflect/Method :: v18 = v7.getMethod(#(show), v12)::
37622 :: NORM :: declaration :: [Ljava/lang/Object :: v19 = new java.lang.Object[]::CF,37623
37623 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::
37624 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $params .getShowDBresult()::CL,37580
37640 :: CALL :: call :: Ljava/lang/Object :: v25 = v18.invoke(v9, v19)::
37647 :: CALL :: call :: V :: v26.printStackTrace()::
37652 :: CALL :: call :: V :: v28.println(#(Probably structure-gu...))::
37686 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdb1()::CE,37687:CD,37693
37687 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getPdb1()::JM,33143
37690 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb1::DD,37693
37693 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,37687
37695 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile1()::CE,37696:CD,37702
37696 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile1()::JM,33144:JM,43734:JM,37783
37699 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .file1::DD,37702
37702 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,37696
37704 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.runPairwise()::CD,37718:CD,37752:CD,37779:CD,37783
37718 :: CALL :: call :: Ljava/lang/String :: v8 = v6.getFile1()::JM,43734:JM,37783:CL,37695
37752 :: CALL :: call :: Ljava/lang/String :: v18 = v16.getFile2()::JM,43734:JM,37784:CL,43514
37779 :: CALL :: call :: Ljava/lang/String :: v23 = v21.getPdbFilePath()::JM,37785:CL,37435
37783 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 145::CD,37784:CD,37785:JM,43634:JM,43587:JM,43606:JM,43591:JM,43639:JM,43608:JM,43659:JM,43613:CD,37846:CD,37853
37784 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 264::CD,37785:JM,43634:JM,43587:JM,43606:JM,43591:JM,43639:JM,43608:JM,43659:JM,43613:CD,37846:CD,37853:CD,37861:CD,37868
37785 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 194::JM,43540:JM,43547:CD,37790:CD,37796:CD,37801:CD,37806:CD,37811:CD,37815
37790 :: CALL :: call :: Ljava/lang/String :: v31 = v28.getPdbFilePath()::CL,43569
37796 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
37801 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v33.append(v31)::
37806 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v37.append(#(.))::
37811 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
37815 :: CALL :: call :: V :: v32.println(v42)::
37846 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v56 = p0 $this .getStructure(v45, v5, v8)::JM,43734:CL,43723
37853 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v58 = p0 $this .getStructure(v45, v15, v18)::JM,43734:CL,43723
37861 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v25 = p0 $this .getStructure(#(null), v5, v8)::JM,43734:CL,43723
37868 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v27 = p0 $this .getStructure(#(null), v15, v18)::JM,43734:CL,43723
38677 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::CE,38678:CD,38681:CD,38685:CD,38694:CD,38695:CD,38699:CD,38708:CD,38709:CD,38713:CD,38722:CD,38723:CD,38727:CD,38736:CD,38737:CD,38741:CD,38750:CD,38751:CD,38755:CD,38764:CD,38765:CD,38766:CD,38767:CD,38768:CD,38769:CD,38770:CD,38771
38678 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::
38681 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,38694
38682 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainID1::DD,38685
38685 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,38690:CD,38766
38687 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainID1::JM,38766
38690 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,38766
38694 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,38695
38695 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,38708
38696 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainID2::DD,38699
38699 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,38704:CD,38767
38701 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainID2::JM,38767
38704 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,38767
38708 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,38709
38709 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,38722
38710 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .insCode1::DD,38713
38713 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,38718:CD,38768
38715 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::JM,38768
38718 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,38768
38722 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,38723
38723 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,38736
38724 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,38727
38727 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,38732:CD,38769
38729 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,38769
38732 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,38769
38736 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,38737
38737 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,38750
38738 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::DD,38741
38741 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,38746:CD,38770
38743 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .resnum1::JM,38770
38746 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,38770
38750 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,38751
38751 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,38764
38752 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .resnum2::DD,38755
38755 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,38760:CD,38771
38757 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .resnum2::JM,38771
38760 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,38771
38764 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,38765
38765 :: NORM :: compound :: I :: return v48::CF,38678
38766 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,38694
38767 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,38708
38768 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,38722
38769 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,38736
38770 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,38750
38771 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,38764
38936 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.hashCode()::CE,38937:CD,38940:CD,38944:CD,38953:CD,38954:CD,38958:CD,38967:CD,38968:CD,38972:CD,38981:CD,38982:CD,38983:CD,38984:CD,38985
38937 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.hashCode()::JM,39239:JM,39240
38940 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,38953
38941 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainId::DD,38944
38944 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,38949:CD,38983
38946 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainId::JM,38983
38949 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,38983
38953 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,38954
38954 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,38967
38955 :: EXPR :: reference :: Ljava/lang/Character :: v15 = p0 $this .insCode::DD,38958
38958 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,38963:CD,38984
38960 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::JM,38984
38963 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,38984
38967 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,38968
38968 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,38981
38969 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,38972
38972 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,38977:CD,38985
38974 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::JM,38985
38977 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,38985
38981 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,38982
38982 :: NORM :: compound :: I :: return v27::CF,38937
38983 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,38953
38984 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,38967
38985 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,38981
39051 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.hashCode()::CE,39052:CD,39055:CD,39059:CD,39068:CD,39069:CD,39073:CD,39082:CD,39083:CD,39087:CD,39096:CD,39097:CD,39101:CD,39110:CD,39111:CD,39112:CD,39113:CD,39114:CD,39115
39052 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.hashCode()::
39055 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(37) * #(5)::DD,39068
39056 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::DD,39059
39059 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,39063:CD,39112
39060 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .siteID::JM,39112
39063 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,39112
39068 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39069
39069 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(37) * v13::DD,39082
39070 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::DD,39073
39073 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 50::CD,39077:CD,39113
39077 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,39113
39082 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39083
39083 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(37) * v20::DD,39096
39084 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .evCode::DD,39087
39087 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 74::CD,39091:CD,39114
39088 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .evCode::JM,39114
39091 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,39114
39096 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,39097
39097 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(37) * v27::DD,39110
39098 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .description::DD,39101
39101 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 98::CD,39105:CD,39115
39102 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::JM,39115
39105 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,39115
39110 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,39111
39111 :: NORM :: compound :: I :: return v34::DD,39052
39112 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,39068
39113 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,39082
39114 :: EXPR :: assign :: null :: PHI v26 = v25, #(0)::CF,39096
39115 :: EXPR :: assign :: null :: PHI v33 = v32, #(0)::CF,39110
39191 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.hashCode()::CE,39192:CD,39195:CD,39199:CD,39208:CD,39209:CD,39213:CD,39222:CD,39223:CD,39227:CD,39236:CD,39237:CD,39238:CD,39239:CD,39240
39192 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueRange.hashCode()::
39195 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,39208
39196 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chain::DD,39199
39199 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,39204:CD,39238
39201 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chain::JM,39238
39204 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,39238
39208 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39209
39209 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,39222
39210 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v15 = p0 $this .end::DD,39213
39213 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,39218:CD,39239
39218 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,39239:CL,38936
39222 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39223
39223 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,39236
39224 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = p0 $this .start::DD,39227
39227 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,39232:CD,39240
39232 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,39240:CL,38936
39236 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,39237
39237 :: NORM :: compound :: I :: return v27::CF,39192
39238 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,39208
39239 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,39222
39240 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,39236
39267 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.hashCode()::CE,39268:CD,39271:CD,39275:CD,39284:CD,39285:CD,39289:CD,39298:CD,39299:CD,39300:CD,39301
39268 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Author.hashCode()::
39271 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(19) * #(3)::DD,39284
39272 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .surname::DD,39275
39275 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,39279:CD,39300
39276 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .surname::JM,39300
39279 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,39300
39284 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39285
39285 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(19) * v13::DD,39298
39286 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .initials::DD,39289
39289 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 48::CD,39293:CD,39301
39290 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .initials::JM,39301
39293 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,39301
39298 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39299
39299 :: NORM :: compound :: I :: return v20::CF,39268
39300 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,39284
39301 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,39298
39319 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::CE,39320:CD,39323:CD,39327:CD,39336:CD,39337:CD,39341:CD,39350:CD,39351:CD,39355:CD,39364:CD,39365:CD,39369:CD,39378:CD,39379:CD,39383:CD,39392:CD,39393:CD,39397:CD,39406:CD,39407:CD,39411:CD,39420:CD,39421:CD,39425:CD,39434:CD,39435:CD,39439:CD,39448:CD,39449:CD,39453:CD,39462:CD,39463:CD,39467:CD,39476:CD,39477:CD,39481:CD,39490:CD,39491:CD,39495:CD,39504:CD,39505:CD,39509:CD,39518:CD,39519:CD,39523:CD,39532:CD,39533:CD,39537:CD,39546:CD,39547:CD,39551:CD,39560:CD,39561:CD,39562:CD,39563:CD,39564:CD,39565:CD,39566:CD,39567:CD,39568:CD,39569:CD,39570:CD,39571:CD,39572:CD,39573:CD,39574:CD,39575:CD,39576:CD,39577:CD,39578
39320 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::
39323 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,39336
39324 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .architectureName::DD,39327
39327 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,39332:CD,39562
39329 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .architectureName::JM,39562
39332 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,39562
39336 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,39337
39337 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,39350
39338 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainId::DD,39341
39341 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,39346:CD,39563
39343 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainId::JM,39563
39346 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,39563
39350 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,39351
39351 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,39364
39352 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .domainId::DD,39355
39355 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,39360:CD,39564
39357 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::JM,39564
39360 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,39564
39364 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,39365
39365 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,39378
39366 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,39369
39369 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,39374:CD,39565
39371 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,39565
39374 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,39565
39378 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,39379
39379 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,39392
39380 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::DD,39383
39383 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,39388:CD,39566
39385 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = p0 $this .fGroup::JM,39566
39388 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,39566
39392 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,39393
39393 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,39406
39394 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p0 $this .hGroup::DD,39397
39397 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,39402:CD,39567
39399 :: EXPR :: reference :: Ljava/lang/Integer :: v44 = p0 $this .hGroup::JM,39567
39402 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,39567
39406 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,39407
39407 :: EXPR :: assign :: Ljava/lang/Object :: v49 = #(31) * v48::DD,39420
39408 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .hGroupName::DD,39411
39411 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 165::CD,39416:CD,39568
39413 :: EXPR :: reference :: Ljava/lang/String :: v51 = p0 $this .hGroupName::JM,39568
39416 :: CALL :: call :: I :: v53 = v51.hashCode()::JM,39568
39420 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v49 + v54::DD,39421
39421 :: EXPR :: assign :: Ljava/lang/Object :: v56 = #(31) * v55::DD,39434
39422 :: EXPR :: reference :: Ljava/lang/Long :: v57 = p0 $this .assemblyId::DD,39425
39425 :: PRED :: IF :: Z :: if (v57 != #(null)) goto 189::CD,39430:CD,39569
39427 :: EXPR :: reference :: Ljava/lang/Long :: v58 = p0 $this .assemblyId::JM,39569
39430 :: CALL :: call :: I :: v60 = v58.hashCode()::JM,39569
39434 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v56 + v61::DD,39435
39435 :: EXPR :: assign :: Ljava/lang/Object :: v63 = #(31) * v62::DD,39448
39436 :: EXPR :: reference :: Ljava/util/Set :: v64 = p0 $this .ligands::DD,39439
39439 :: PRED :: IF :: Z :: if (v64 != #(null)) goto 213::CD,39444:CD,39570
39444 :: CALL :: call :: I :: v67 = v65.hashCode()::JM,39570
39448 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v63 + v68::DD,39449
39449 :: EXPR :: assign :: Ljava/lang/Object :: v70 = #(31) * v69::DD,39462
39450 :: EXPR :: reference :: Ljava/lang/Boolean :: v71 = p0 $this .manual::DD,39453
39453 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 239::CD,39458:CD,39571
39455 :: EXPR :: reference :: Ljava/lang/Boolean :: v72 = p0 $this .manual::JM,39571
39458 :: CALL :: call :: I :: v74 = v72.hashCode()::JM,39571
39462 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v70 + v75::DD,39463
39463 :: EXPR :: assign :: Ljava/lang/Object :: v77 = #(31) * v76::DD,39476
39464 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .pdbId::DD,39467
39467 :: PRED :: IF :: Z :: if (v78 != #(null)) goto 263::CD,39472:CD,39572
39469 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .pdbId::JM,39572
39472 :: CALL :: call :: I :: v81 = v79.hashCode()::JM,39572
39476 :: EXPR :: assign :: Ljava/lang/Object :: v83 = v77 + v82::DD,39477
39477 :: EXPR :: assign :: Ljava/lang/Object :: v84 = #(31) * v83::DD,39490
39478 :: EXPR :: reference :: Ljava/lang/String :: v85 = p0 $this .range::DD,39481
39481 :: PRED :: IF :: Z :: if (v85 != #(null)) goto 287::CD,39486:CD,39573
39483 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .range::JM,39573
39486 :: CALL :: call :: I :: v88 = v86.hashCode()::JM,39573
39490 :: EXPR :: assign :: Ljava/lang/Object :: v90 = v84 + v89::DD,39491
39491 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(31) * v90::DD,39504
39492 :: EXPR :: reference :: Ljava/lang/Integer :: v92 = p0 $this .tGroup::DD,39495
39495 :: PRED :: IF :: Z :: if (v92 != #(null)) goto 311::CD,39500:CD,39574
39497 :: EXPR :: reference :: Ljava/lang/Integer :: v93 = p0 $this .tGroup::JM,39574
39500 :: CALL :: call :: I :: v95 = v93.hashCode()::JM,39574
39504 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v91 + v96::DD,39505
39505 :: EXPR :: assign :: Ljava/lang/Object :: v98 = #(31) * v97::DD,39518
39506 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .tGroupName::DD,39509
39509 :: PRED :: IF :: Z :: if (v99 != #(null)) goto 335::CD,39514:CD,39575
39511 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .tGroupName::JM,39575
39514 :: CALL :: call :: I :: v102 = v100.hashCode()::JM,39575
39518 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v98 + v103::DD,39519
39519 :: EXPR :: assign :: Ljava/lang/Object :: v105 = #(31) * v104::DD,39532
39520 :: EXPR :: reference :: Ljava/lang/Long :: v106 = p0 $this .uid::DD,39523
39523 :: PRED :: IF :: Z :: if (v106 != #(null)) goto 359::CD,39528:CD,39576
39525 :: EXPR :: reference :: Ljava/lang/Long :: v107 = p0 $this .uid::JM,39576
39528 :: CALL :: call :: I :: v109 = v107.hashCode()::JM,39576
39532 :: EXPR :: assign :: Ljava/lang/Object :: v111 = v105 + v110::DD,39533
39533 :: EXPR :: assign :: Ljava/lang/Object :: v112 = #(31) * v111::DD,39546
39534 :: EXPR :: reference :: Ljava/lang/Integer :: v113 = p0 $this .xGroup::DD,39537
39537 :: PRED :: IF :: Z :: if (v113 != #(null)) goto 383::CD,39542:CD,39577
39539 :: EXPR :: reference :: Ljava/lang/Integer :: v114 = p0 $this .xGroup::JM,39577
39542 :: CALL :: call :: I :: v116 = v114.hashCode()::JM,39577
39546 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v112 + v117::DD,39547
39547 :: EXPR :: assign :: Ljava/lang/Object :: v119 = #(31) * v118::DD,39560
39548 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .xGroupName::DD,39551
39551 :: PRED :: IF :: Z :: if (v120 != #(null)) goto 407::CD,39556:CD,39578
39553 :: EXPR :: reference :: Ljava/lang/String :: v121 = p0 $this .xGroupName::JM,39578
39556 :: CALL :: call :: I :: v123 = v121.hashCode()::JM,39578
39560 :: EXPR :: assign :: Ljava/lang/Object :: v125 = v119 + v124::DD,39561
39561 :: NORM :: compound :: I :: return v125::DD,39320
39562 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,39336
39563 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,39350
39564 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,39364
39565 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,39378
39566 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,39392
39567 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,39406
39568 :: EXPR :: assign :: null :: PHI v54 = #(0), v53::CF,39420
39569 :: EXPR :: assign :: null :: PHI v61 = #(0), v60::CF,39434
39570 :: EXPR :: assign :: null :: PHI v68 = #(0), v67::CF,39448
39571 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::CF,39462
39572 :: EXPR :: assign :: null :: PHI v82 = #(0), v81::CF,39476
39573 :: EXPR :: assign :: null :: PHI v89 = #(0), v88::CF,39490
39574 :: EXPR :: assign :: null :: PHI v96 = #(0), v95::CF,39504
39575 :: EXPR :: assign :: null :: PHI v103 = #(0), v102::CF,39518
39576 :: EXPR :: assign :: null :: PHI v110 = #(0), v109::CF,39532
39577 :: EXPR :: assign :: null :: PHI v117 = #(0), v116::CF,39546
39578 :: EXPR :: assign :: null :: PHI v124 = #(0), v123::CF,39560
39816 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::CE,39817:CD,39821:JM,39825:JM,39829:JM,39833:JM,39835:JM,39823
39817 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::
39821 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,39822:CD,39823
39822 :: NORM :: compound :: Z :: return #(1)::DD,39817
39823 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,39824:CD,39825:CD,39829:CD,39833:JM,39835:JM,39821:JM,39823
39824 :: NORM :: compound :: Z :: return #(0)::DD,39817
39825 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,39825:JM,39829:JM,39833:JM,39835:JM,39821:JM,39823
39829 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,39825:JM,39829:JM,39833:JM,39835:JM,39821
39833 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,39834:CD,39835:CD,39839
39834 :: NORM :: compound :: Z :: return #(0)::DD,39817
39835 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
39836 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .architectureName::DD,39839
39839 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,39843:CD,39851:CD,39856
39840 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.architectureName::DD,39843
39843 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,39844:CD,39861
39844 :: NORM :: compound :: Z :: return #(0)::DD,39817
39845 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .architectureName::JM,39856
39848 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.architectureName::JM,39856
39851 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,39856
39856 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,39857:CD,39861
39857 :: NORM :: compound :: Z :: return #(0)::DD,39817
39858 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainId::DD,39861
39861 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,39865:CD,39873:CD,39878
39862 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainId::DD,39865
39865 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,39866:CD,39883
39866 :: NORM :: compound :: Z :: return #(0)::DD,39817
39867 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainId::JM,39878
39870 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainId::JM,39878
39873 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,39878
39878 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,39879:CD,39883
39879 :: NORM :: compound :: Z :: return #(0)::DD,39817
39880 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::DD,39883
39883 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,39887:CD,39895:CD,39900
39884 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.domainId::DD,39887
39887 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,39888:CD,39905
39888 :: NORM :: compound :: Z :: return #(0)::DD,39817
39889 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .domainId::JM,39900
39892 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.domainId::JM,39900
39895 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,39900
39900 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,39901:CD,39905
39901 :: NORM :: compound :: Z :: return #(0)::DD,39817
39902 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,39905
39905 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,39909:CD,39917:CD,39922
39906 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.fGroupName::DD,39909
39909 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,39910:CD,39927
39910 :: NORM :: compound :: Z :: return #(0)::DD,39817
39911 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,39922
39914 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.fGroupName::JM,39922
39917 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,39922
39922 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,39923:CD,39927
39923 :: NORM :: compound :: Z :: return #(0)::DD,39817
39924 :: EXPR :: reference :: Ljava/lang/Integer :: v35 = p0 $this .fGroup::DD,39927
39927 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,39931:CD,39939:CD,39944
39928 :: EXPR :: reference :: Ljava/lang/Integer :: v40 = v9.fGroup::DD,39931
39931 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,39932:CD,39949
39932 :: NORM :: compound :: Z :: return #(0)::DD,39817
39933 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::JM,39944
39936 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = v9.fGroup::JM,39944
39939 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,39944
39944 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,39945:CD,39949
39945 :: NORM :: compound :: Z :: return #(0)::DD,39817
39946 :: EXPR :: reference :: Ljava/lang/Integer :: v41 = p0 $this .hGroup::DD,39949
39949 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,39953:CD,39961:CD,39966
39950 :: EXPR :: reference :: Ljava/lang/Integer :: v46 = v9.hGroup::DD,39953
39953 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,39954:CD,39971
39954 :: NORM :: compound :: Z :: return #(0)::DD,39817
39955 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .hGroup::JM,39966
39958 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = v9.hGroup::JM,39966
39961 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,39966
39966 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,39967:CD,39971
39967 :: NORM :: compound :: Z :: return #(0)::DD,39817
39968 :: EXPR :: reference :: Ljava/lang/String :: v47 = p0 $this .hGroupName::DD,39971
39971 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 240::CD,39975:CD,39983:CD,39988
39972 :: EXPR :: reference :: Ljava/lang/String :: v52 = v9.hGroupName::DD,39975
39975 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 256::CD,39976:CD,39993
39976 :: NORM :: compound :: Z :: return #(0)::DD,39817
39977 :: EXPR :: reference :: Ljava/lang/String :: v48 = p0 $this .hGroupName::JM,39988
39980 :: EXPR :: reference :: Ljava/lang/String :: v49 = v9.hGroupName::JM,39988
39983 :: CALL :: call :: Z :: v51 = v48.equals(v49)::JM,39988
39988 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 256::CD,39989:CD,39993
39989 :: NORM :: compound :: Z :: return #(0)::DD,39817
39990 :: EXPR :: reference :: Ljava/lang/Long :: v53 = p0 $this .assemblyId::DD,39993
39993 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 272::CD,39997:CD,40005:CD,40010
39994 :: EXPR :: reference :: Ljava/lang/Long :: v58 = v9.assemblyId::DD,39997
39997 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 288::CD,39998:CD,40015
39998 :: NORM :: compound :: Z :: return #(0)::DD,39817
39999 :: EXPR :: reference :: Ljava/lang/Long :: v54 = p0 $this .assemblyId::JM,40010
40002 :: EXPR :: reference :: Ljava/lang/Long :: v55 = v9.assemblyId::JM,40010
40005 :: CALL :: call :: Z :: v57 = v54.equals(v55)::JM,40010
40010 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 288::CD,40011:CD,40015
40011 :: NORM :: compound :: Z :: return #(0)::DD,39817
40012 :: EXPR :: reference :: Ljava/util/Set :: v59 = p0 $this .ligands::DD,40015
40015 :: PRED :: IF :: Z :: if (v59 != #(null)) goto 304::CD,40019:CD,40027:CD,40032
40016 :: EXPR :: reference :: Ljava/util/Set :: v64 = v9.ligands::DD,40019
40019 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 322::CD,40020:CD,40037
40020 :: NORM :: compound :: Z :: return #(0)::DD,39817
40027 :: CALL :: call :: Z :: v63 = v60.equals(v61)::JM,40032
40032 :: PRED :: IF :: Z :: if (v63 != #(0)) goto 322::CD,40033:CD,40037
40033 :: NORM :: compound :: Z :: return #(0)::DD,39817
40034 :: EXPR :: reference :: Ljava/lang/Boolean :: v65 = p0 $this .manual::DD,40037
40037 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 338::CD,40041:CD,40049:CD,40054
40038 :: EXPR :: reference :: Ljava/lang/Boolean :: v70 = v9.manual::DD,40041
40041 :: PRED :: IF :: Z :: if (v70 == #(null)) goto 354::CD,40042:CD,40059
40042 :: NORM :: compound :: Z :: return #(0)::DD,39817
40043 :: EXPR :: reference :: Ljava/lang/Boolean :: v66 = p0 $this .manual::JM,40054
40046 :: EXPR :: reference :: Ljava/lang/Boolean :: v67 = v9.manual::JM,40054
40049 :: CALL :: call :: Z :: v69 = v66.equals(v67)::JM,40054
40054 :: PRED :: IF :: Z :: if (v69 != #(0)) goto 354::CD,40055:CD,40059
40055 :: NORM :: compound :: Z :: return #(0)::DD,39817
40056 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .pdbId::DD,40059
40059 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 370::CD,40063:CD,40071:CD,40076
40060 :: EXPR :: reference :: Ljava/lang/String :: v76 = v9.pdbId::DD,40063
40063 :: PRED :: IF :: Z :: if (v76 == #(null)) goto 386::CD,40064:CD,40081
40064 :: NORM :: compound :: Z :: return #(0)::DD,39817
40065 :: EXPR :: reference :: Ljava/lang/String :: v72 = p0 $this .pdbId::JM,40076
40068 :: EXPR :: reference :: Ljava/lang/String :: v73 = v9.pdbId::JM,40076
40071 :: CALL :: call :: Z :: v75 = v72.equals(v73)::JM,40076
40076 :: PRED :: IF :: Z :: if (v75 != #(0)) goto 386::CD,40077:CD,40081
40077 :: NORM :: compound :: Z :: return #(0)::DD,39817
40078 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .range::DD,40081
40081 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 402::CD,40085:CD,40093:CD,40098
40082 :: EXPR :: reference :: Ljava/lang/String :: v82 = v9.range::DD,40085
40085 :: PRED :: IF :: Z :: if (v82 == #(null)) goto 418::CD,40086:CD,40103
40086 :: NORM :: compound :: Z :: return #(0)::DD,39817
40087 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .range::JM,40098
40090 :: EXPR :: reference :: Ljava/lang/String :: v79 = v9.range::JM,40098
40093 :: CALL :: call :: Z :: v81 = v78.equals(v79)::JM,40098
40098 :: PRED :: IF :: Z :: if (v81 != #(0)) goto 418::CD,40099:CD,40103
40099 :: NORM :: compound :: Z :: return #(0)::DD,39817
40100 :: EXPR :: reference :: Ljava/lang/Integer :: v83 = p0 $this .tGroup::DD,40103
40103 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 434::CD,40107:CD,40115:CD,40120
40104 :: EXPR :: reference :: Ljava/lang/Integer :: v88 = v9.tGroup::DD,40107
40107 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 450::CD,40108:CD,40125
40108 :: NORM :: compound :: Z :: return #(0)::DD,39817
40109 :: EXPR :: reference :: Ljava/lang/Integer :: v84 = p0 $this .tGroup::JM,40120
40112 :: EXPR :: reference :: Ljava/lang/Integer :: v85 = v9.tGroup::JM,40120
40115 :: CALL :: call :: Z :: v87 = v84.equals(v85)::JM,40120
40120 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 450::CD,40121:CD,40125
40121 :: NORM :: compound :: Z :: return #(0)::DD,39817
40122 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .tGroupName::DD,40125
40125 :: PRED :: IF :: Z :: if (v89 != #(null)) goto 466::CD,40129:CD,40137:CD,40142
40126 :: EXPR :: reference :: Ljava/lang/String :: v94 = v9.tGroupName::DD,40129
40129 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 482::CD,40130:CD,40147
40130 :: NORM :: compound :: Z :: return #(0)::DD,39817
40131 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .tGroupName::JM,40142
40134 :: EXPR :: reference :: Ljava/lang/String :: v91 = v9.tGroupName::JM,40142
40137 :: CALL :: call :: Z :: v93 = v90.equals(v91)::JM,40142
40142 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 482::CD,40143:CD,40147
40143 :: NORM :: compound :: Z :: return #(0)::DD,39817
40144 :: EXPR :: reference :: Ljava/lang/Long :: v95 = p0 $this .uid::DD,40147
40147 :: PRED :: IF :: Z :: if (v95 != #(null)) goto 498::CD,40151:CD,40159:CD,40164
40148 :: EXPR :: reference :: Ljava/lang/Long :: v100 = v9.uid::DD,40151
40151 :: PRED :: IF :: Z :: if (v100 == #(null)) goto 514::CD,40152:CD,40169
40152 :: NORM :: compound :: Z :: return #(0)::DD,39817
40153 :: EXPR :: reference :: Ljava/lang/Long :: v96 = p0 $this .uid::JM,40164
40156 :: EXPR :: reference :: Ljava/lang/Long :: v97 = v9.uid::JM,40164
40159 :: CALL :: call :: Z :: v99 = v96.equals(v97)::JM,40164
40164 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 514::CD,40165:CD,40169
40165 :: NORM :: compound :: Z :: return #(0)::DD,39817
40166 :: EXPR :: reference :: Ljava/lang/Integer :: v101 = p0 $this .xGroup::DD,40169
40169 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 530::CD,40173:CD,40181:CD,40186
40170 :: EXPR :: reference :: Ljava/lang/Integer :: v106 = v9.xGroup::DD,40173
40173 :: PRED :: IF :: Z :: if (v106 == #(null)) goto 546::CD,40174:CD,40191
40174 :: NORM :: compound :: Z :: return #(0)::DD,39817
40175 :: EXPR :: reference :: Ljava/lang/Integer :: v102 = p0 $this .xGroup::JM,40186
40178 :: EXPR :: reference :: Ljava/lang/Integer :: v103 = v9.xGroup::JM,40186
40181 :: CALL :: call :: Z :: v105 = v102.equals(v103)::JM,40186
40186 :: PRED :: IF :: Z :: if (v105 != #(0)) goto 546::CD,40187:CD,40191
40187 :: NORM :: compound :: Z :: return #(0)::DD,39817
40188 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .xGroupName::DD,40191
40191 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 562::CD,40195:CD,40203:CD,40208
40192 :: EXPR :: reference :: Ljava/lang/String :: v112 = v9.xGroupName::DD,40195
40195 :: PRED :: IF :: Z :: if (v112 == #(null)) goto 578::CD,40196:CD,40210
40196 :: NORM :: compound :: Z :: return #(0)::DD,39817
40197 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .xGroupName::JM,40208
40200 :: EXPR :: reference :: Ljava/lang/String :: v109 = v9.xGroupName::JM,40208
40203 :: CALL :: call :: Z :: v111 = v108.equals(v109)::JM,40208
40208 :: PRED :: IF :: Z :: if (v111 != #(0)) goto 578::CD,40209:CD,40210
40209 :: NORM :: compound :: Z :: return #(0)::DD,39817
40210 :: NORM :: compound :: Z :: return #(1)::DD,39817
40376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::CE,40377:CD,40381:JM,40387:JM,40391:JM,40393:JM,40383
40377 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::
40381 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,40382:CD,40383:CD,40387:CD,40391:JM,40393:JM,40381
40382 :: NORM :: compound :: Z :: return #(0)::CF,40377
40383 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,40387:JM,40391:JM,40393:JM,40381:JM,40383
40387 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,40387:JM,40391:JM,40393:JM,40381:JM,40383
40391 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,40392:CD,40393:CD,40397
40392 :: NORM :: compound :: Z :: return #(0)::CF,40377
40393 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
40394 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .surname::DD,40397
40397 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,40401:CD,40409:CD,40414
40398 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.surname::DD,40401
40401 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,40415:CD,40419:CD,40438:CD,40439
40403 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .surname::JM,40414
40406 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.surname::JM,40414
40409 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,40414
40414 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,40415:CD,40419:CD,40438:CD,40439
40415 :: NORM :: compound :: Z :: return #(0)::CF,40377
40416 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .initials::DD,40419
40419 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 75::CD,40423:CD,40431:CD,40436
40420 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.initials::DD,40423
40423 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 93::CD,40439
40425 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .initials::JM,40436
40428 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.initials::JM,40436
40431 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,40436
40436 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 93::CD,40439
40438 :: NORM :: compound :: Z :: return v24::CF,40377
40439 :: EXPR :: assign :: null :: PHI v24 = #(0), #(1)::CF,40438
40465 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::CE,40466:CD,40470:JM,40482:JM,40484:JM,40472:JM,40474:JM,40478
40466 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::
40470 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,40471:CD,40472
40471 :: NORM :: compound :: Z :: return #(1)::CF,40466
40472 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,40473:CD,40474:CD,40478:CD,40482:JM,40484:JM,40470:JM,40472
40473 :: NORM :: compound :: Z :: return #(0)::CF,40466
40474 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,40482:JM,40484:JM,40470:JM,40472:JM,40474:JM,40478
40478 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,40482:JM,40484:JM,40470:JM,40474:JM,40478
40482 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,40483:CD,40484:CD,40488
40483 :: NORM :: compound :: Z :: return #(0)::CF,40466
40484 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
40485 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainID1::DD,40488
40488 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,40492:CD,40500:CD,40505
40489 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainID1::DD,40492
40492 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,40493:CD,40510
40493 :: NORM :: compound :: Z :: return #(0)::CF,40466
40494 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainID1::JM,40505
40497 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainID1::JM,40505
40500 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,40505
40505 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,40506:CD,40510
40506 :: NORM :: compound :: Z :: return #(0)::CF,40466
40507 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainID2::DD,40510
40510 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,40514:CD,40522:CD,40527
40511 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainID2::DD,40514
40514 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,40515:CD,40532
40515 :: NORM :: compound :: Z :: return #(0)::CF,40466
40516 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainID2::JM,40527
40519 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainID2::JM,40527
40522 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,40527
40527 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,40528:CD,40532
40528 :: NORM :: compound :: Z :: return #(0)::CF,40466
40529 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::DD,40532
40532 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,40536:CD,40544:CD,40549
40533 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.insCode1::DD,40536
40536 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,40537:CD,40554
40537 :: NORM :: compound :: Z :: return #(0)::CF,40466
40538 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .insCode1::JM,40549
40541 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.insCode1::JM,40549
40544 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,40549
40549 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,40550:CD,40554
40550 :: NORM :: compound :: Z :: return #(0)::CF,40466
40551 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,40554
40554 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,40558:CD,40566:CD,40571
40555 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.insCode2::DD,40558
40558 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,40559:CD,40576
40559 :: NORM :: compound :: Z :: return #(0)::CF,40466
40560 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,40571
40563 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.insCode2::JM,40571
40566 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,40571
40571 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,40572:CD,40576
40572 :: NORM :: compound :: Z :: return #(0)::CF,40466
40573 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::DD,40576
40576 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,40580:CD,40588:CD,40593
40577 :: EXPR :: reference :: Ljava/lang/String :: v40 = v9.resnum1::DD,40580
40580 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,40581:CD,40598
40581 :: NORM :: compound :: Z :: return #(0)::CF,40466
40582 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::JM,40593
40585 :: EXPR :: reference :: Ljava/lang/String :: v37 = v9.resnum1::JM,40593
40588 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,40593
40593 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,40594:CD,40598
40594 :: NORM :: compound :: Z :: return #(0)::CF,40466
40595 :: EXPR :: reference :: Ljava/lang/String :: v41 = p0 $this .resnum2::DD,40598
40598 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,40602:CD,40610:CD,40615
40599 :: EXPR :: reference :: Ljava/lang/String :: v46 = v9.resnum2::DD,40602
40602 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,40603:CD,40617
40603 :: NORM :: compound :: Z :: return #(0)::CF,40466
40604 :: EXPR :: reference :: Ljava/lang/String :: v42 = p0 $this .resnum2::JM,40615
40607 :: EXPR :: reference :: Ljava/lang/String :: v43 = v9.resnum2::JM,40615
40610 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,40615
40615 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,40616:CD,40617
40616 :: NORM :: compound :: Z :: return #(0)::CF,40466
40617 :: NORM :: compound :: Z :: return #(1)::CF,40466
40827 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::CE,40828:CD,40832:JM,40834:JM,40836:JM,40840:JM,40844:JM,40846
40828 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::JM,41274:JM,41296:JM,76678:JM,138782:JM,141837
40832 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,40833:CD,40834
40833 :: NORM :: compound :: Z :: return #(1)::CF,40828
40834 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,40835:CD,40836:CD,40840:CD,40844:JM,40832:JM,40834:JM,40846
40835 :: NORM :: compound :: Z :: return #(0)::CF,40828
40836 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,40832:JM,40834:JM,40836:JM,40840:JM,40844:JM,40846
40840 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,40832:JM,40836:JM,40840:JM,40844:JM,40846
40844 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,40845:CD,40846:CD,40850
40845 :: NORM :: compound :: Z :: return #(0)::CF,40828
40846 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
40847 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainId::DD,40850
40850 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,40854:CD,40862:CD,40867
40851 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainId::DD,40854
40854 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,40855:CD,40872
40855 :: NORM :: compound :: Z :: return #(0)::CF,40828
40856 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainId::JM,40867
40859 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainId::JM,40867
40862 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,40867
40867 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,40868:CD,40872
40868 :: NORM :: compound :: Z :: return #(0)::CF,40828
40869 :: EXPR :: reference :: Ljava/lang/Character :: v17 = p0 $this .insCode::DD,40872
40872 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,40876:CD,40884:CD,40889
40873 :: EXPR :: reference :: Ljava/lang/Character :: v22 = v9.insCode::DD,40876
40876 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,40877:CD,40894
40877 :: NORM :: compound :: Z :: return #(0)::CF,40828
40878 :: EXPR :: reference :: Ljava/lang/Character :: v18 = p0 $this .insCode::JM,40889
40881 :: EXPR :: reference :: Ljava/lang/Character :: v19 = v9.insCode::JM,40889
40884 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,40889
40889 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,40890:CD,40894
40890 :: NORM :: compound :: Z :: return #(0)::CF,40828
40891 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::DD,40894
40894 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,40898:CD,40906:CD,40911
40895 :: EXPR :: reference :: Ljava/lang/Integer :: v28 = v9.seqNum::DD,40898
40898 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,40899:CD,40913
40899 :: NORM :: compound :: Z :: return #(0)::CF,40828
40900 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::JM,40911
40903 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = v9.seqNum::JM,40911
40906 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,40911
40911 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,40912:CD,40913
40912 :: NORM :: compound :: Z :: return #(0)::CF,40828
40913 :: NORM :: compound :: Z :: return #(1)::CF,40828
41069 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::CE,41070:CD,41074:CD,41075:JM,41077
41070 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::
41074 :: EXPR :: assign :: Z :: v4=p1 $o  INSTANCEOF org.biojava.nbio.structure.secstruc.SecStrucInfo::DD,41075
41075 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 10::CD,41076:CD,41077:CD,41084
41076 :: NORM :: compound :: Z :: return #(0)::CF,41070
41077 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $o ::
41078 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v7 = p0 $this .type::DD,41084
41081 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v8 = v6.type::DD,41084
41084 :: PRED :: IF :: Z :: if (v7 != v8) goto 28::CD,41085:CD,41086
41085 :: NORM :: compound :: Z :: return #(1)::CF,41070
41086 :: NORM :: compound :: Z :: return #(0)::CF,41070
41212 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::CE,41213:CD,41217:JM,41219:JM,41221:JM,41225:JM,41229:JM,41231
41213 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::
41217 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,41218:CD,41219
41218 :: NORM :: compound :: Z :: return #(1)::CF,41213
41219 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,41220:CD,41221:CD,41225:CD,41229:JM,41217:JM,41219:JM,41231
41220 :: NORM :: compound :: Z :: return #(0)::CF,41213
41221 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,41217:JM,41219:JM,41221:JM,41225:JM,41229:JM,41231
41225 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,41217:JM,41221:JM,41225:JM,41229:JM,41231
41229 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,41230:CD,41231:CD,41235
41230 :: NORM :: compound :: Z :: return #(0)::CF,41213
41231 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
41232 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chain::DD,41235
41235 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,41239:CD,41247:CD,41252
41236 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chain::DD,41239
41239 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,41240:CD,41257
41240 :: NORM :: compound :: Z :: return #(0)::CF,41213
41241 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chain::JM,41252
41244 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chain::JM,41252
41247 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,41252
41252 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,41253:CD,41257
41253 :: NORM :: compound :: Z :: return #(0)::CF,41213
41254 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = p0 $this .end::DD,41257
41257 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,41261:CD,41269:CD,41274
41258 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = v9.end::DD,41261
41261 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,41262:CD,41279
41262 :: NORM :: compound :: Z :: return #(0)::CF,41213
41269 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,41274:CL,40827
41274 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,41275:CD,41279
41275 :: NORM :: compound :: Z :: return #(0)::CF,41213
41276 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v23 = p0 $this .start::DD,41279
41279 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,41283:CD,41291:CD,41296
41280 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v28 = v9.start::DD,41283
41283 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,41284:CD,41298
41284 :: NORM :: compound :: Z :: return #(0)::CF,41213
41291 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,41296:CL,40827
41296 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,41297:CD,41298
41297 :: NORM :: compound :: Z :: return #(0)::CF,41213
41298 :: NORM :: compound :: Z :: return #(1)::CF,41213
41338 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::CE,41339:CD,41343:JM,41345:JM,41349:JM,41353:JM,41355
41339 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::
41343 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,41344:CD,41345:CD,41349:CD,41353:JM,41355:JM,41343
41344 :: NORM :: compound :: Z :: return #(0)::DD,41339
41345 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,41345:JM,41349:JM,41353:JM,41355:JM,41343
41349 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,41345:JM,41349:JM,41353:JM,41355:JM,41343
41353 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,41354:CD,41355:CD,41359
41354 :: NORM :: compound :: Z :: return #(0)::DD,41339
41355 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
41356 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .siteID::DD,41359
41359 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,41363:CD,41371:CD,41376
41360 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.siteID::DD,41363
41363 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,41377:CD,41384
41365 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .siteID::JM,41376
41368 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.siteID::JM,41376
41371 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,41376
41376 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,41377:CD,41384
41377 :: NORM :: compound :: Z :: return #(0)::DD,41339
41378 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .groups::DD,41384
41381 :: EXPR :: reference :: Ljava/util/List :: v18 = v9.groups::DD,41384
41384 :: PRED :: IF :: Z :: if (v17 == v18) goto 94::CD,41388:CD,41405
41385 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::DD,41388
41388 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 92::CD,41395:CD,41400:CD,41401
41395 :: CALL :: call :: Z :: v23 = v20.equals(v21)::JM,41400
41400 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 94::CD,41401:CD,41405
41401 :: NORM :: compound :: Z :: return #(0)::DD,41339
41402 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .evCode::DD,41405
41405 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 111::CD,41409:CD,41417:CD,41422
41406 :: EXPR :: reference :: Ljava/lang/String :: v29 = v9.evCode::DD,41409
41409 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 127::CD,41423:CD,41427
41411 :: EXPR :: reference :: Ljava/lang/String :: v25 = p0 $this .evCode::JM,41422
41414 :: EXPR :: reference :: Ljava/lang/String :: v26 = v9.evCode::JM,41422
41417 :: CALL :: call :: Z :: v28 = v25.equals(v26)::JM,41422
41422 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 127::CD,41423:CD,41427
41423 :: NORM :: compound :: Z :: return #(0)::DD,41339
41424 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::DD,41427
41427 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 144::CD,41431:CD,41439:CD,41444
41428 :: EXPR :: reference :: Ljava/lang/String :: v35 = v9.description::DD,41431
41431 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 160::CD,41445:CD,41446
41433 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .description::JM,41444
41436 :: EXPR :: reference :: Ljava/lang/String :: v32 = v9.description::JM,41444
41439 :: CALL :: call :: Z :: v34 = v31.equals(v32)::JM,41444
41444 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 160::CD,41445:CD,41446
41445 :: NORM :: compound :: Z :: return #(0)::DD,41339
41446 :: NORM :: compound :: Z :: return #(1)::DD,41339
41629 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::CF,41630:CD,41632:CD,41634:CD,41635:CD,41643
41630 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::JM,33767:JM,33853
41632 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.ENUM$VALUES::DD,41634
41634 :: EXPR :: assign :: I :: v4 = v2.length::DD,41635
41635 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::DD,41643
41643 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v5::CF,41630
41929 :: CALL :: call :: Ljava/util/ResourceBundle :: v6 = getBundle(p1 $bundleName )::JM,41933
41933 :: EXPR :: modify :: Ljava/util/ResourceBundle :: p0 $this .RESOURCE_BUNDLE = v6::
41937 :: CALL :: call :: V :: v7.printStackTrace()::
42513 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::CE,42514:CD,42517:CD,42521:CD,42525:CD,42529
42514 :: EXIT :: exit :: Ljava/util/TreeMap :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::JM,34475
42517 :: CALL :: call :: Ljava/lang/String :: v4 = convertStreamToString(p1 $spaceGroupIS )::CL,46839
42521 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: v6 = fromXML(v4)::JM,42529:JM,42525:CL,46897
42525 :: CALL :: call :: Ljava/util/TreeMap :: v8 = v6.getMapProperty()::JM,42529:JM,42525
42529 :: NORM :: compound :: Ljava/util/TreeMap :: return v8::DD,42514
42535 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.initPath()::CD,42538:CD,42540
42538 :: EXPR :: reference :: Ljava/io/File :: v2 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::DD,42540
42540 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 28::JM,43540:JM,43547:CD,42545:CD,42546:CD,42554
42545 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::DD,42554
42546 :: CALL :: call :: Ljava/lang/String :: v8 = v4.getCacheFilePath()::CL,46946
42554 :: EXPR :: modify :: Ljava/io/File :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path = v6::
42564 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.values()::CF,42565:CD,42567:CD,42569:CD,42570:CD,42578
42565 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.values()::JM,34615
42567 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = org.biojava.nbio.structure.ExperimentalTechnique.ENUM$VALUES::DD,42569
42569 :: EXPR :: assign :: I :: v4 = v2.length::DD,42570
42570 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = new org.biojava.nbio.structure.ExperimentalTechnique[]::DD,42578
42578 :: NORM :: compound :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v5::CF,42565
42600 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent))::CL,47068
42604 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb))::CL,47068
42608 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.gz))::CL,47068
42612 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.gz))::CL,47068
42616 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.Z))::CL,47068
42620 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.Z))::CL,47068
42648 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif))::CL,47068
42652 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif))::CL,47068
42656 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif.gz))::CL,47068
42660 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif.gz))::CL,47068
43258 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CollectionTools.toIntArray(java.util.Collection)::CD,43267:CD,43286:CD,43290
43267 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $l .iterator()::JM,43290
43273 :: CALL :: call :: Ljava/lang/Object :: v14 = v8.next()::JM,43290
43286 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,43290
43290 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,43273:CD,43286
43307 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.CollectionTools.toDoubleArray(java.util.Collection)::CD,43316:CD,43335:CD,43339
43316 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $l .iterator()::JM,43339
43322 :: CALL :: call :: Ljava/lang/Object :: v14 = v8.next()::JM,43339
43335 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,43339
43339 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,43322:CD,43335
43467 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.fromStartupParams(org.biojava.nbio.structure.align.ce.StartupParameters)::JM,43540:JM,43547
43514 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile2()::CE,43515:CD,43521
43515 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.ce.StartupParameters.getFile2()::JM,43734:JM,37784
43518 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .file2::DD,43521
43521 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,43515
43540 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .initPdbFilePath()::CL,47748
43547 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .initCacheFilePath()::CL,48074
43569 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::CE,43570:CD,43576
43570 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::JM,47041
43573 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,43576
43576 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,43570
43587 :: NORM :: declaration :: Ljava/util/TreeSet :: v6 = new java.util.TreeSet::JM,43613:JM,43591:JM,43595
43591 :: CALL :: call :: Ljava/util/Collection :: v9 = synchronizedCollection(v6)::JM,43591:JM,43595
43595 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .currentlyLoading = v9::
43606 :: EXPR :: reference :: Ljava/lang/String :: v13 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::JM,43613
43608 :: CALL :: call :: Z :: v15 = p1 $pdbFilePath .endsWith(v13)::JM,43613
43613 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 65::CF,43614:CD,43615:CD,43623:CD,43625:CD,43630
43614 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
43615 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(p1 $pdbFilePath )::
43623 :: EXPR :: reference :: Ljava/lang/String :: v21 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::
43625 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
43630 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
43634 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(biojava.cache.files), #(true))::
43639 :: CALL :: call :: V :: p0 $this .setPath(v26)::CL,48510
43656 :: EXPR :: reference :: Ljava/util/Collection :: v34 = p0 $this .currentlyLoading::
43659 :: CALL :: call :: V :: v34.clear()::
43723 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.getStructure(org.biojava.nbio.structure.align.util.AtomCache,java.lang.String,java.lang.String)::JM,46977:JM,47041:JM,47013:JM,42600:JM,42604:JM,47021:JM,42608:JM,46963:JM,47027:JM,42612:JM,48532:JM,42616:JM,42620:CD,43734:CD,43760:CD,43764:CD,43768:CD,43793:CD,43797:CD,43802:CD,43816:CD,43829:CD,43849:CD,43862:CD,43866:CD,43900
43734 :: PRED :: IF :: Z :: if (p3 $file  == #(null)) goto 171::CD,43742:CD,43746:CD,43751:CD,43854
43742 :: CALL :: call :: V :: v34.println(v32)::
43746 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v37 = v6.getStructure(v32)::CL,48601
43751 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v39 = p0 $this .fixStructureName(v37, p3 $file )::CL,48628
43760 :: CALL :: call :: Ljava/lang/String :: v43 = v40.getMessage()::
43764 :: CALL :: call :: V :: v41.println(v43)::
43768 :: NORM :: declaration :: Ljava/io/File :: v45 = new java.io.File::
43793 :: CALL :: call :: V :: v47.println(v56)::
43797 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v59 = v6.getStructure(v45)::CL,48706
43802 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v61 = p0 $this .fixStructureName(v59, p3 $file )::CL,48628
43816 :: CALL :: call :: Ljava/lang/String :: v69 = v62.getMessage()::
43829 :: CALL :: call :: V :: v64.println(v73)::
43849 :: CALL :: call :: V :: v75.println(v82)::
43854 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v10 = p1 $cache .getStructure(p2 $name1 )::CL,48733
43862 :: CALL :: call :: Ljava/lang/String :: v14 = v11.getMessage()::
43866 :: CALL :: call :: V :: v12.println(v14)::
43900 :: CALL :: call :: V :: v16.println(v30)::
43928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getName()::CE,43929:CD,43935
43929 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.StructureImpl.getName()::JM,48638:JM,48648:JM,48662:JM,48672
43932 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,43935
43935 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,43929
46839 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.convertStreamToString(java.io.InputStream)::CD,46843:CD,46844:CD,46853:CD,46870:CD,46874:CD,46875
46843 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,46874:CF,46844
46844 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
46853 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
46858 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,46874
46863 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.xtal.SymoplibParser.newline::
46865 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
46870 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,46874
46874 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,46858:CD,46863:CD,46865:CD,46870
46875 :: CALL :: call :: Ljava/lang/String :: v19 = v7.toString()::
46897 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::CE,46898:CD,46901:CD,46907:CD,46911:CD,46915:CD,46916:CD,46924:CD,46929:CD,46930
46898 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::JM,42529:JM,42525
46901 :: NORM :: declaration :: [Ljava/lang/Class :: v5 = new java.lang.Class[]::JM,46929:JM,46907:JM,46924:JM,46911
46907 :: CALL :: call :: Ljavax/xml/bind/JAXBContext :: v9 = newInstance(v5)::JM,46929:JM,46907:JM,46924:JM,46911
46911 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v11 = v9.createUnmarshaller()::JM,46929:JM,46924:JM,46911
46915 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v12 = new java.io.ByteArrayInputStream::JM,46929:JM,46924:JM,46901
46916 :: CALL :: call :: [B :: v14 = p1 $xml .getBytes()::JM,46901
46924 :: CALL :: call :: Ljava/lang/Object :: v17 = v11.unmarshal(v12)::JM,46929:JM,46924
46929 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,46930
46930 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: return v18::DD,46898
46946 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::CE,46947:CD,46953
46947 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::
46950 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,46953
46953 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,46947
46963 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,46977:JM,48532
46977 :: PRED :: IF :: Z :: if (p1 $path  != #(null)) goto 61::JM,43540:JM,43547:CD,46982:CD,46998:CD,47041
46982 :: CALL :: call :: Ljava/lang/String :: v20 = v17.getPdbFilePath()::JM,47041:CL,43569
46998 :: CALL :: call :: Ljava/lang/String :: v11 = expandUserHome(p1 $path )::JM,47041:CL,52948
47013 :: NORM :: declaration :: Ljava/io/File :: v27 = new java.io.File::JM,46977:JM,48532
47021 :: CALL :: call :: Ljava/lang/String :: v30 = getServerName()::CL,53013
47027 :: CALL :: call :: V :: p0 $this .initPaths()::CL,53110
47041 :: EXPR :: assign :: null :: PHI v26 = v20, v11::CF,47013:JM,46977:JM,48532
47068 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.addExtension(java.lang.String)::CD,47076
47073 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .extensions::
47076 :: CALL :: call :: Z :: v6 = v4.add(p1 $s )::
47748 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initPdbFilePath()::CD,47752:CD,47756:CD,47947:CD,47949:CD,47954:CD,47976
47752 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_DIR))::JM,47761:JM,47765:JM,47752:JM,47976:JM,47756
47756 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 118::CD,47757:CD,47761:CD,47765:CD,47827:CD,47830:CD,47835:JM,47976
47757 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::JM,47761:JM,47765:JM,47976
47761 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,47761:JM,47765
47765 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 118::CD,47774:CD,47779:CD,47783:CD,47827:CD,47830:CD,47835
47774 :: NORM :: declaration :: Ljava/io/File :: v61 = new java.io.File::
47779 :: CALL :: call :: Z :: v64 = v61.isDirectory()::JM,47783
47783 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 97::CD,47808:CD,47813:CD,47817:CD,47976
47808 :: CALL :: call :: Ljava/lang/String :: v77 = getProperty(#(java.io.tmpdir))::JM,47808:JM,47976
47813 :: CALL :: call :: Z :: v66 = v61.canWrite()::JM,47817
47817 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 297::CF,47976
47827 :: CALL :: call :: Ljava/util/Map :: v13 = getenv()::
47830 :: CALL :: call :: Z :: v15 = v13.containsKey(#(PDB_DIR))::JM,47835
47835 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 260::CD,47836:CD,47841:CD,47842:CD,47846:CD,47850:CD,47918:CD,47942:CD,47976
47836 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.get(#(PDB_DIR))::JM,47841
47841 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,47846:JM,47850
47842 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,47846:JM,47850
47846 :: CALL :: call :: Z :: v22 = v20.isEmpty()::JM,47846:JM,47850
47850 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 260::CD,47851:CD,47856:CD,47865:CD,47870:CD,47874:CD,47918:CD,47942:CD,47976
47851 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(PDB_DIR))::JM,47856
47856 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::DD,47976
47865 :: NORM :: declaration :: Ljava/io/File :: v41 = new java.io.File::
47870 :: CALL :: call :: Z :: v44 = v41.isDirectory()::JM,47874
47874 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 237::CD,47899:CD,47904:CD,47908:CD,47976
47899 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,47976:JM,47899
47904 :: CALL :: call :: Z :: v46 = v41.canWrite()::JM,47908
47908 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 297::CF,47976
47918 :: CALL :: call :: Ljava/lang/String :: v25 = getProperty(#(java.io.tmpdir))::JM,47976:JM,47918
47942 :: CALL :: call :: Ljava/lang/String :: v34 = setProperty(#(PDB_DIR), v25)::
47947 :: EXPR :: reference :: Ljava/lang/String :: v80 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,47954
47949 :: CALL :: call :: Z :: v82 = v78.endsWith(v80)::JM,47954
47954 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 328::CF,47955:CD,47956:CD,47964:CD,47966:CD,47971
47955 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v83 = new java.lang.StringBuilder::
47956 :: CALL :: call :: Ljava/lang/String :: v85 = valueOf(v78)::
47964 :: EXPR :: reference :: Ljava/lang/String :: v87 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
47966 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v83.append(v87)::
47971 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
47976 :: EXPR :: assign :: null :: PHI v78 = v77, v6, v6, v57, v37, v37, v25::JM,47954
48074 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initCacheFilePath()::CD,48078:CD,48082:CD,48343:CD,48345:CD,48350:CD,48372
48078 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_CACHE_DIR))::JM,48082:JM,48372:JM,48078
48082 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 138::CD,48091:CD,48096:CD,48100:CD,48169:CD,48172:CD,48177
48091 :: NORM :: declaration :: Ljava/io/File :: v69 = new java.io.File::
48096 :: CALL :: call :: Z :: v72 = v69.isDirectory()::JM,48100
48100 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 87::CD,48125:CD,48130:CD,48134:CD,48372
48125 :: CALL :: call :: Ljava/lang/String :: v92 = getProperty(#(java.io.tmpdir))::JM,48372:JM,48125
48130 :: CALL :: call :: Z :: v74 = v69.canWrite()::JM,48134
48134 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 385::CF,48372:CD,48159:CD,48163
48159 :: CALL :: call :: Ljava/lang/String :: v82 = getProperty(#(java.io.tmpdir))::JM,48372:JM,48159
48163 :: CALL :: call :: Ljava/lang/String :: v84 = setProperty(#(PDB_CACHE_DIR), v82)::
48169 :: CALL :: call :: Ljava/util/Map :: v8 = getenv()::
48172 :: CALL :: call :: Z :: v10 = v8.containsKey(#(PDB_CACHE_DIR))::JM,48177
48177 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 282::CF,48265:CD,48178:CD,48183:CD,48192:CD,48197:CD,48201:CD,48273:CD,48277
48178 :: CALL :: call :: Ljava/lang/Object :: v39 = v8.get(#(PDB_CACHE_DIR))::JM,48183
48183 :: EXPR :: assign :: Ljava/lang/Object :: v40 = CHECKCAST v39::DD,48372
48192 :: NORM :: declaration :: Ljava/io/File :: v44 = new java.io.File::
48197 :: CALL :: call :: Z :: v47 = v44.isDirectory()::JM,48201
48201 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 237::CD,48226:CD,48231:CD,48235:CD,48372
48226 :: CALL :: call :: Ljava/lang/String :: v65 = getProperty(#(java.io.tmpdir))::JM,48226:JM,48372
48231 :: CALL :: call :: Z :: v49 = v44.canWrite()::JM,48235
48235 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 385::CF,48372:CD,48260
48260 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,48260:JM,48372
48265 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
48266 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdbFilePath::
48273 :: CALL :: call :: Z :: v16 = v12.canWrite()::JM,48277
48277 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 341::CD,48301:CD,48307:CD,48338:CD,48372
48278 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdbFilePath::DD,48372
48301 :: CALL :: call :: Ljava/lang/String :: v37 = setProperty(#(PDB_CACHE_DIR), v31)::
48307 :: CALL :: call :: Ljava/lang/String :: v19 = getProperty(#(java.io.tmpdir))::JM,48307:JM,48372
48338 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(PDB_CACHE_DIR), v19)::
48343 :: EXPR :: reference :: Ljava/lang/String :: v95 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,48350
48345 :: CALL :: call :: Z :: v97 = v93.endsWith(v95)::JM,48350
48350 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 416::CF,48351:CD,48352:CD,48360:CD,48362:CD,48367
48351 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
48352 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v93)::
48360 :: EXPR :: reference :: Ljava/lang/String :: v102 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
48362 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(v102)::
48367 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
48372 :: EXPR :: assign :: null :: PHI v93 = v92, v6, v82, v65, v40, v57, v31, v19::JM,48350
48510 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.setPath(java.lang.String)::CD,48515
48515 :: CALL :: call :: Ljava/lang/String :: v5 = expandUserHome(p1 $path )::CL,52948
48532 :: CALL :: call :: V :: p0 $this .setDefault()::CL,54094
48601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructure(java.net.URL)::CD,48615
48615 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p0 $this .getStructure(v7)::CL,54201
48628 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.ce.AbstractUserArgumentProcessor.fixStructureName(org.biojava.nbio.structure.Structure,java.lang.String)::CD,48634:CD,48638
48634 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $s .getName()::JM,48638:CL,43928
48638 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 27::CD,48639:CD,48643:CD,48648:CD,48658:CD,48662
48639 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $s .getName()::JM,48648:CL,43928
48643 :: CALL :: call :: Z :: v12 = v9.equals(#())::JM,48648
48648 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 27::CD,48658:CD,48662
48658 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $s .getName()::JM,48662:CL,43928
48662 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 60::CF,48673:CD,48663:CD,48667:CD,48672
48663 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $s .getName()::JM,48672:CL,43928
48667 :: CALL :: call :: Z :: v22 = v20.equals(#())::JM,48672
48672 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 80::CF,48673
48673 :: NORM :: declaration :: Ljava/io/File :: v23 = new java.io.File::
48706 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructure(java.io.File)::CD,48720
48720 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p0 $this .getStructure(v7)::CL,54201
48733 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(java.lang.String)::JM,54269:CD,48743
48743 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getStructure(v4)::CL,54281
48869 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains()::CE,48870:CD,48873:CD,48878
48870 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains()::JM,99106:JM,99242:JM,120039:JM,120192:JM,120399:JM,120545:JM,125916:JM,127027
48873 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(#(0))::JM,48878:CL,54314
48878 :: NORM :: compound :: Ljava/util/List :: return v5::DD,48870
52948 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::CE,52949:CD,52952:CD,52957:CD,52959:CD,52964:CD,52968:CD,52973:CD,53001:CD,53002
52949 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::JM,47041
52952 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,52973
52957 :: EXPR :: reference :: Ljava/lang/String :: v6 = java.io.File.separator::JM,52973
52959 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,52973
52964 :: CALL :: call :: Ljava/lang/String :: v10 = v8.toString()::JM,52973
52968 :: CALL :: call :: Z :: v12 = p1 $file .startsWith(v10)::JM,53002:JM,52973
52973 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 53::CF,53002:CF,52974:CD,52979:CD,52987:CD,52992:CD,52997
52974 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::JM,53002
52979 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(v17)::
52987 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $file .substring(#(1))::JM,53002:JM,52973
52992 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v14.append(v23)::JM,53002
52997 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,53002
53001 :: NORM :: compound :: Ljava/lang/String :: return v28::DD,52949
53002 :: EXPR :: assign :: null :: PHI v28 = p1 $file , v27::CF,53001
53013 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getServerName()::CD,53016:CD,53020
53016 :: CALL :: call :: Ljava/lang/String :: v4 = getProperty(#(PDB.FILE.SERVER))::JM,53025:JM,53043:JM,53029:JM,53016:JM,53049:JM,53020
53020 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 23::CD,53021:CD,53025:CD,53029:JM,53043:JM,53049
53021 :: CALL :: call :: Ljava/lang/String :: v7 = v4.trim()::JM,53025:JM,53043:JM,53029:JM,53049
53025 :: CALL :: call :: Z :: v9 = v7.isEmpty()::JM,53025:JM,53043:JM,53029:JM,53049
53029 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 42::CD,53038:CD,53043:JM,53025:JM,53029:JM,53049
53038 :: CALL :: call :: Z :: v13 = v4.startsWith(#(http://))::JM,53025:JM,53043:JM,53029:JM,53049
53043 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 90::CD,53044:CD,53049:JM,53025:JM,53043:JM,53029
53044 :: CALL :: call :: Z :: v16 = v4.startsWith(#(ftp://))::JM,53025:JM,53043:JM,53029:JM,53049
53049 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 90::CD,53058:CD,53063:CD,53068
53058 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
53063 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(v4)::JM,53025:JM,53043:JM,53029:JM,53049
53068 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::JM,53025:JM,53029
53110 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.initPaths()::CD,53114:CD,53118:CD,53122:CD,53143:CD,53144:CD,53145:CD,53166:CD,53167:CD,53168:CD,53175:CD,53206:CD,53207:CD,53232:CD,53233:CD,53235:CD,53236:CD,53237:CD,53238
53114 :: CALL :: call :: [Ljava/lang/String :: v4 = p0 $this .getSplitDirPath()::JM,53206:JM,53143:CL,61773:CL,61765
53118 :: CALL :: call :: [Ljava/lang/String :: v6 = p0 $this .getObsoleteDirPath()::JM,53232:JM,53166:CL,61781:CL,61789
53122 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
53128 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(/))::
53133 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v4[v20]::
53137 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v7.append(v15)::
53142 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,53235
53143 :: EXPR :: assign :: I :: v11 = v4.length::CF,53144
53144 :: PRED :: IF :: Z :: if (v20 < v11) goto 31::CF,53145:CD,53128:CD,53137:CD,53142:CD,53143:CD,53235
53145 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
53151 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(#(/))::
53156 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v6[v30]::
53160 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v21.append(v26)::
53165 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,53236
53166 :: EXPR :: assign :: I :: v23 = v6.length::CF,53167
53167 :: PRED :: IF :: Z :: if (v30 < v23) goto 77::CD,53151:CD,53160:CD,53165:CD,53166:CD,53236
53168 :: CALL :: call :: Ljava/lang/String :: v32 = v7.toString()::
53175 :: CALL :: call :: Ljava/lang/String :: v34 = v21.toString()::
53182 :: EXPR :: reference :: Ljava/io/File :: v35 = p0 $this .path::DD,53185
53185 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v35::
53189 :: NORM :: declaration :: Ljava/io/File :: v37 = new java.io.File::DD,53202
53190 :: EXPR :: reference :: Ljava/io/File :: v38 = p0 $this .splitDirPath::
53193 :: EXPR :: reference :: Ljava/lang/Object :: v39 = v4[v42]::
53202 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v37::
53205 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,53237
53206 :: EXPR :: assign :: I :: v36 = v4.length::CF,53207
53207 :: PRED :: IF :: Z :: if (v42 < v36) goto 133::CD,53189:CD,53205:CD,53206:CD,53237
53208 :: EXPR :: reference :: Ljava/io/File :: v43 = p0 $this .path::DD,53211
53211 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v43::
53215 :: NORM :: declaration :: Ljava/io/File :: v45 = new java.io.File::DD,53228
53216 :: EXPR :: reference :: Ljava/io/File :: v46 = p0 $this .obsoleteDirPath::
53219 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v6[v50]::
53228 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v45::
53231 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,53238
53232 :: EXPR :: assign :: I :: v44 = v6.length::CF,53233
53233 :: PRED :: IF :: Z :: if (v50 < v44) goto 176::CD,53215:CD,53231:CD,53232:CD,53238
53235 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,53142:DD,53144:CF,53143
53236 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,53165:DD,53167:CF,53166
53237 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,53205:DD,53207:CF,53206
53238 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::DD,53231:DD,53233:CF,53232
54094 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.setDefault()::
54098 :: EXPR :: modify :: Z :: p0 $this .parseSecStruc = #(0)::
54101 :: EXPR :: modify :: Z :: p0 $this .alignSeqRes = #(1)::
54104 :: EXPR :: modify :: Z :: p0 $this .parseCAOnly = #(0)::
54107 :: EXPR :: modify :: Z :: p0 $this .headerOnly = #(0)::
54110 :: EXPR :: modify :: Z :: p0 $this .updateRemediatedFiles = #(0)::
54113 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .fullAtomNames = #(null)::
54116 :: EXPR :: modify :: I :: p0 $this .maxAtoms = #(2147483647)::
54119 :: EXPR :: modify :: I :: p0 $this .atomCaThreshold = #(500000)::
54122 :: EXPR :: modify :: Z :: p0 $this .parseBioAssembly = #(0)::
54125 :: EXPR :: modify :: Z :: p0 $this .createAtomBonds = #(0)::
54128 :: EXPR :: modify :: Z :: p0 $this .createAtomCharges = #(1)::
54131 :: EXPR :: modify :: Z :: p0 $this .useInternalChainId = #(0)::
54201 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getStructure(java.io.InputStream)::JM,62624:JM,62596:JM,62726:JM,62631:JM,62695:JM,70089:JM,62603:JM,70122:JM,62668:JM,62638:JM,62702:JM,70097:JM,70129:JM,62610:JM,48532:JM,62645:JM,62709:JM,62776:JM,70105:JM,62617:JM,62716:CD,54218
54218 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v10 = v4.parsePDBFile(p1 $inStream )::CL,62895
54232 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBCode()::CE,54233:CD,54239
54233 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.StructureImpl.getPDBCode()::
54236 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_id::DD,54239
54239 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,54233
54269 :: CALL :: call :: V :: p0 $this .init()::CL,62916
54281 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(org.biojava.nbio.structure.StructureIdentifier)::CD,54286:CD,54291
54286 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v5 = p1 $strucId .loadStructure(p0 $this )::CL,63468
54291 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $strucId .reduce(v5)::CL,63485
54314 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getModel(int)::CE,54315:CD,54322:CD,54327:CD,54328
54315 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getModel(int)::JM,48878:JM,104459:JM,120763:JM,120869:JM,122408:JM,122590:JM,122678:JM,139859
54319 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,54327
54322 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $modelnr )::JM,54327
54327 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,54328
54328 :: NORM :: compound :: Ljava/util/List :: return v7::DD,54315
54331 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::CE,54332:CD,54338
54332 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::JM,72795:JM,100102:JM,114600:JM,114527:JM,120277:JM,120394:JM,120540:JM,122512:JM,122579:JM,134921:JM,138812:JM,139467:JM,139488:JM,139518:JM,145411
54335 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,54338
54338 :: NORM :: compound :: Ljava/util/List :: return v3::CF,54332
54408 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getType()::CF,54409:CD,54412:CD,54414
54409 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.NucleotideImpl.getType()::JM,54887:JM,54892:JM,93664:JM,93669:JM,145398:JM,145405:JM,151330:JM,151325:JM,151337:JM,151342:JM,154003:JM,153998:JM,154025:JM,154030:JM,163315:JM,163320:JM,163332:JM,163327
54412 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.NucleotideImpl.type::CF,54414
54414 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,54409
54416 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getType()::CF,54417:CD,54420:CD,54422
54417 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.HetatomImpl.getType()::JM,54887:JM,54892:JM,93664:JM,93669:JM,145398:JM,145405:JM,151330:JM,151325:JM,151337:JM,151342:JM,154003:JM,153998:JM,154025:JM,154030:JM,163315:JM,163320:JM,163332:JM,163327
54420 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.HetatomImpl.type::CF,54422
54422 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,54417
54424 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getType()::CF,54425:CD,54428:CD,54430
54425 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.AminoAcidImpl.getType()::JM,54887:JM,54892:JM,93664:JM,93669:JM,145398:JM,145405:JM,151330:JM,151325:JM,151337:JM,151342:JM,154003:JM,153998:JM,154025:JM,154030:JM,163315:JM,163320:JM,163332:JM,163327
54428 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.AminoAcidImpl.type::CF,54430
54430 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,54425
54432 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::CE,54433:CD,54440:JM,54479
54433 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::JM,77206:JM,100532:JM,100538:JM,100544:JM,100550:JM,142040
54437 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,54440
54440 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 33::CD,54444:CD,54448:CD,54453:CD,54454:CD,54460:CD,54481:CD,54485
54444 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $fullName .trim()::JM,54479
54448 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,54453
54453 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,54454
54454 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 31::CD,54455:CD,54456
54455 :: NORM :: compound :: Z :: return #(1)::DD,54433
54456 :: NORM :: compound :: Z :: return #(0)::DD,54433
54457 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,54485
54460 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,54485
54465 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,54485
54470 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,54479:CL,63540
54474 :: CALL :: call :: Z :: v18 = v16.equals(p1 $fullName )::JM,54479
54479 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 71::CD,54480:CD,54481:CD,54485
54480 :: NORM :: compound :: Z :: return #(1)::DD,54433
54481 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,54485
54485 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 46::CD,54465:CD,54470:CD,54474:CD,54479:CD,54486:JM,54485
54486 :: NORM :: compound :: Z :: return #(0)::DD,54433
54507 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::CE,54508:CD,54515:JM,54548
54508 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::JM,100055:JM,100083:JM,119206:JM,120367:JM,120368:JM,135519:JM,135531:JM,135543:JM,135555
54512 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,54515
54515 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 22::CD,54519:CD,54524:CD,54525:CD,54529:CD,54550:CD,54554
54519 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.get(p1 $name )::JM,54524
54524 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::CF,54525
54525 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v22::DD,54508
54526 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,54538:JM,54554
54529 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,54538:JM,54554
54534 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,54538:JM,54554
54538 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,54549
54539 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,54548:CL,63540
54543 :: CALL :: call :: Z :: v18 = v16.equals(p1 $name )::JM,54548
54548 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 60::CD,54549:CD,54550:CD,54554:JM,54538
54549 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v14::DD,54508
54550 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,54538:JM,54554
54554 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 35::CD,54534:CD,54538:CD,54539:CD,54543:CD,54548:CD,54555:JM,54554
54555 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,54508
54571 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getElement()::CE,54572:CD,54578
54572 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.AtomImpl.getElement()::JM,114561
54575 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v3 = p0 $this .element::DD,54578
54578 :: NORM :: compound :: Lorg/biojava/nbio/structure/Element :: return v3::CF,54572
54852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChain()::CE,54853:CD,54859
54853 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.HetatomImpl.getChain()::JM,76782:JM,141956
54856 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .parent::DD,54859
54859 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::CF,54853
54861 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::CE,54862:CD,54866:CD,54873:CD,54898:CD,54902:CD,54903:JM,54887:JM,54892
54862 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::JM,118605:JM,118606:JM,118673:JM,134368:JM,146336:JM,165552:JM,165526:JM,165621:JM,165528:JM,165560:JM,165536:JM,165632:JM,165553:JM,165524:JM,165525
54866 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,54903
54870 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .groups::JM,54882:JM,54902
54873 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,54882:JM,54902
54878 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,54882:JM,54902
54882 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::
54883 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v16 = v14.getType()::JM,54887:JM,54892:CL,54408:CL,54424:CL,54416
54887 :: CALL :: call :: Z :: v18 = v16.equals(p1 $type )::JM,54887:JM,54892
54892 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 56::CD,54893:JM,54882:JM,54902
54893 :: CALL :: call :: Z :: v20 = v4.add(v14)::
54898 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,54882:JM,54902
54902 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,54878:CD,54882:CD,54883:CD,54887:CD,54892:CD,54898:JM,54902:CF,54903
54903 :: NORM :: compound :: Ljava/util/List :: return v4::DD,54862
60055 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemoteDomainProvider.flushCache()::CD,60059:CD,60065:CD,60066
60059 :: CALL :: call :: V :: p0 $this .flushCache()::CL,67042
60062 :: EXPR :: reference :: Lorg/biojava/nbio/structure/domain/PDPProvider :: v4 = p0 $this .pdp::DD,60065
60065 :: EXPR :: assign :: Z :: v5=v4 INSTANCEOF org.biojava.nbio.structure.domain.RemotePDPProvider::DD,60066
60066 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 26::CD,60071
60071 :: CALL :: call :: V :: v8.flushCache()::CL,67042
61765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::CF,61766:CD,61769:CD,61771
61766 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::JM,53206:JM,53143
61769 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_SPLIT_DIR::CF,61771
61771 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,61766
61773 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::CF,61774:CD,61777:CD,61779
61774 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::JM,53206:JM,53143
61777 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_SPLIT_DIR::CF,61779
61779 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,61774
61781 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::CF,61782:CD,61785:CD,61787
61782 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::JM,53232:JM,53166
61785 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_OBSOLETE_DIR::CF,61787
61787 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,61782
61789 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::CF,61790:CD,61793:CD,61795
61790 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::JM,53232:JM,53166
61793 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_OBSOLETE_DIR::CF,61795
61795 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,61790
62134 :: EXPR :: modify :: I :: p0 $this .port = #(-1)::
62137 :: EXPR :: modify :: I :: p0 $this .hashCode = #(-1)::
62140 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,62141:CD,62144:JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62141 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,62144
62144 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,62145:JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62145 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
62149 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62154 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,62413
62155 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,62414:CD,62156:CD,62157:CD,62162
62156 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62157 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62162 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,62154:CD,62155:CD,62413:CD,62414
62164 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,62414
62165 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,62166:CD,62171:JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62363:JM,62140:JM,62237
62166 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62171 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,62164:CD,62165:CD,62414:JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62172 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62181 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,62415:CD,62182
62182 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,62415
62183 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62187 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,62416:CD,62188:CD,62193:JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62188 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62193 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,62416
62195 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,62196:CD,62202:CD,62206:CD,62211:CD,62214:CD,62215:CD,62417:CD,62418:CD,62419:JM,62370:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62196 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62202 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,62419:JM,62211
62206 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62226:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237:JM,62419
62211 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,62418:CD,62212:CD,62419
62212 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,62418
62214 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,62417
62215 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,62418:CD,62216:CD,62419
62216 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,62418:CD,62217:CD,62222:CD,62419:JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62217 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62222 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,62418:CD,62195
62223 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .protocol = v52::
62226 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,62422:CD,62227
62227 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,62231:CD,62236:CD,62237:CD,62244:CD,62254:CD,62420:CD,62421:CD,62422:CD,62423
62228 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,62236
62231 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,62236
62236 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,62422:CD,62237:CD,62244:CD,62254:CD,62420:CD,62421:CD,62423
62237 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,62420
62238 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,62420
62241 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,62244
62244 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,62421:CD,62248:CD,62253
62245 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,62248:JM,62253
62248 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,62248:JM,62253
62253 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,62421
62254 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,62422:CD,62423
62255 :: EXPR :: reference :: Ljava/lang/String :: v64 = p1 $context .protocol::DD,62258
62258 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .protocol = v64::
62261 :: EXPR :: reference :: Ljava/lang/String :: v65 = p1 $context .authority::DD,62264
62264 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authority = v65::
62267 :: EXPR :: reference :: Ljava/lang/String :: v66 = p1 $context .userInfo::DD,62270
62270 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .userInfo = v66::
62273 :: EXPR :: reference :: Ljava/lang/String :: v67 = p1 $context .host::DD,62276
62276 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .host = v67::
62279 :: EXPR :: reference :: I :: v68 = p1 $context .port::DD,62282
62282 :: EXPR :: modify :: I :: p0 $this .port = v68::
62285 :: EXPR :: reference :: Ljava/lang/String :: v69 = p1 $context .file::DD,62288
62288 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .file = v69::
62291 :: EXPR :: reference :: Ljava/lang/String :: v70 = p1 $context .path::DD,62294
62294 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .path = v70::
62301 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
62302 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
62307 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62312 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,62370:JM,62425:JM,62362:JM,62363
62321 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CF,62424:CD,62325
62325 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::JM,62424
62330 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
62331 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
62336 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
62339 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
62344 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
62353 :: EXPR :: modify :: Ljava/net/URLStreamHandler :: p0 $this .handler = v78::
62356 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62362 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CF,62425:CD,62363:CD,62364
62363 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62425:JM,62362:JM,62171:JM,62363:JM,62420:JM,62422:JM,62140:JM,62237
62364 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62420:JM,62422:JM,62425:JM,62362:JM,62171:JM,62363:JM,62140:JM,62237
62370 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = v83::
62373 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 498::CD,62374
62374 :: PRED :: IF :: Z :: if (v51 != v84) goto 498::CD,62384
62375 :: EXPR :: reference :: Ljava/lang/String :: v85 = p1 $context .query::DD,62378
62378 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .query = v85::
62381 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .ref::DD,62384
62384 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 498::
62385 :: EXPR :: reference :: Ljava/lang/String :: v87 = p1 $context .ref::DD,62388
62388 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = v87::
62400 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
62401 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
62413 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,62154:DD,62155:DD,62156:DD,62165:DD,62216:JM,62193:JM,62162:JM,62370:JM,62195:JM,62181:JM,62362:JM,62171:JM,62187:JM,62363:JM,62413:JM,62222:DD,62425
62414 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,62164:DD,62165:JM,62370:JM,62211:JM,62181:JM,62187:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62425:JM,62362:JM,62171:JM,62363:DD,62182:DD,62415
62415 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,62187:JM,62370:JM,62211:JM,62181:JM,62413:JM,62222:JM,62193:JM,62162:JM,62195:JM,62425:JM,62362:JM,62171:JM,62363:DD,62417:DD,62418:JM,62420:JM,62422:JM,62140:JM,62237
62416 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,62215
62417 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,62193:JM,62162:JM,62370:JM,62195:JM,62181:JM,62425:JM,62362:JM,62171:JM,62187:JM,62363:JM,62413:JM,62222:DD,62212:DD,62214:DD,62216:JM,62211:CF,62215
62418 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,62419:JM,62193:JM,62162:JM,62370:JM,62195:JM,62181:JM,62425:JM,62362:JM,62171:JM,62187:JM,62363:JM,62413:JM,62222:DD,62374
62419 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,62223:DD,62227:JM,62236:DD,62421
62420 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,62422
62421 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,62254
62422 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::CF,62423:DD,62321:DD,62424
62423 :: EXPR :: assign :: null :: PHI v73 = #(0), #(0), #(0), #(1)::DD,62373
62424 :: EXPR :: assign :: null :: PHI v78 = v71, v77::DD,62353
62425 :: EXPR :: assign :: null :: PHI v84 = v21, v80::DD,62374:CF,62373
62596 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62603 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62610 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62617 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62624 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62631 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62638 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v18 = new java.util.LinkedHashMap::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62645 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62668 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62695 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62702 :: NORM :: declaration :: Ljava/util/ArrayList :: v33 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62709 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62716 :: NORM :: declaration :: Ljava/util/ArrayList :: v37 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62726 :: NORM :: declaration :: Ljava/util/ArrayList :: v39 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62776 :: NORM :: declaration :: Ljava/util/ArrayList :: v51 = new java.util.ArrayList::JM,70097:JM,70129:JM,48532:JM,70089:JM,70105:JM,70122
62895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.InputStream)::CD,62900:CD,62905
62900 :: CALL :: call :: Ljava/io/BufferedReader :: v5 = p0 $this .getBufferedReader(p1 $inStream )::CL,70183
62905 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .parsePDBFile(v5)::CL,70213
62916 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.init()::CD,62923:CD,62932:CD,62933:CD,62983:CD,62988:CD,62993:CD,63013:CD,63018:CD,63023:CD,63040:CD,63045:CD,63050:CD,63070:CD,63075:CD,63080:CD,63097:CD,63102:CD,63107:CD,63124:CD,63129:CD,63134:CD,63165:CD,63170:CD,63175:CD,63186:CD,63194:CD,63199
62923 :: CALL :: call :: [Ljava/lang/String :: v7 = v3.split(#(:), #(2))::JM,62932
62932 :: EXPR :: assign :: I :: v9 = v7.length::DD,62933
62933 :: PRED :: IF :: Z :: if (v9 <= #(1)) goto 396::CD,62942:CD,62946:CD,62960:CD,63211:CD,63216
62934 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(1)]::JM,63149
62942 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
62946 :: CALL :: call :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v17 = valueOf(v15)::JM,62950:CL,70998
62950 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v17::
62957 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = p0 $this .mySource::DD,62960
62960 :: PRED :: IF :: Z :: if (v20 == #(null)) goto 396::CD,62961:CD,62967:CD,62975:CD,63211:CD,63216
62961 :: CALL :: call :: [I :: v78 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,71011
62964 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v79 = p0 $this .mySource::
62967 :: CALL :: call :: I :: v81 = v79.ordinal()::
62971 :: EXPR :: reference :: I :: v82 = v78[v81]::DD,62975
62975 :: PRED :: IF :: null :: switch v82::CD,62976:CD,63006:CD,63033:CD,63063:CD,63090:CD,63117:CD,63144:CD,63149:CD,63158
62976 :: CALL :: call :: Z :: v168 = p0 $this .initFromScop(v11)::CL,71154
62983 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
62988 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v11)::
62993 :: CALL :: call :: Ljava/lang/String :: v176 = v174.toString()::
63006 :: CALL :: call :: Z :: v157 = p0 $this .initFromPDP(v155)::CL,71213
63013 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
63018 :: CALL :: call :: Ljava/lang/StringBuilder :: v163 = v159.append(v11)::
63023 :: CALL :: call :: Ljava/lang/String :: v165 = v163.toString()::
63033 :: CALL :: call :: Z :: v145 = p0 $this .initFromCATH(v11)::CL,71265
63040 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
63045 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v11)::
63050 :: CALL :: call :: Ljava/lang/String :: v153 = v151.toString()::
63063 :: CALL :: call :: Z :: v134 = p0 $this .initFromBIO(v132)::CL,71324
63070 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::
63075 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v136.append(v11)::
63080 :: CALL :: call :: Ljava/lang/String :: v142 = v140.toString()::
63090 :: CALL :: call :: Z :: v122 = p0 $this .initFromECOD(v11)::CL,71365
63097 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
63102 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v124.append(v11)::
63107 :: CALL :: call :: Ljava/lang/String :: v130 = v128.toString()::
63117 :: CALL :: call :: Z :: v111 = p0 $this .initFromPDB(v11)::CL,71418
63124 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v113 = new java.lang.StringBuilder::
63129 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v113.append(v11)::
63134 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
63144 :: CALL :: call :: Z :: v95 = v11.startsWith(#(/))::JM,63149
63149 :: PRED :: IF :: Z :: if (v95 != #(0)) goto 333::CD,63158
63158 :: CALL :: call :: Z :: v98 = p0 $this .initFromURL(v96)::CL,71523
63165 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
63170 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v11)::
63175 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
63186 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
63194 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v84.append(v87)::
63199 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
63211 :: CALL :: call :: Z :: v24 = p0 $this .initFromScop(v22)::JM,63216:CL,71154
63216 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 408::CD,63221:CD,63226
63221 :: CALL :: call :: Z :: v27 = p0 $this .initFromCATH(v25)::JM,63226:CL,71265
63226 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 420::CD,63231:CD,63236
63231 :: CALL :: call :: Z :: v30 = p0 $this .initFromECOD(v28)::JM,63236:CL,71365
63236 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 432::CD,63241:CD,63246
63241 :: CALL :: call :: Z :: v33 = p0 $this .initFromURL(v31)::JM,63246:CL,71523
63246 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 442::CF,63248:CD,63252:CD,63260:CD,63264
63248 :: NORM :: declaration :: Ljava/io/File :: v34 = new java.io.File::JM,63289:JM,63332
63252 :: CALL :: call :: Ljava/lang/String :: v37 = expandUserHome(v35)::CL,52948
63260 :: CALL :: call :: Z :: v40 = v34.canRead()::JM,63264
63264 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 577::CD,63265:CD,63269:CD,63365
63265 :: CALL :: call :: Z :: v42 = v34.isDirectory()::JM,63269
63269 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 577::CD,63273:CD,63278:CD,63365
63273 :: CALL :: call :: Z :: v49 = v46.matches(#(\d\w\w\w))::JM,63278
63278 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 531::CD,63289:CD,63293:CD,63332:CD,63336
63289 :: CALL :: call :: Ljava/io/File :: v68 = v34.getAbsoluteFile()::JM,63289
63293 :: CALL :: call :: Ljava/lang/String :: v70 = v68.getParent()::
63332 :: CALL :: call :: Ljava/io/File :: v56 = v34.getAbsoluteFile()::JM,63332
63336 :: CALL :: call :: Ljava/lang/String :: v58 = v56.getParent()::
63365 :: CALL :: call :: Z :: v45 = p0 $this .initFromPDB(v43)::CL,71418
63468 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,63473:CD,63477
63473 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v5 = p0 $this .getBaseIdentifier()::CL,71618
63477 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.loadStructure(p1 $cache )::CL,72030:CL,72338:CL,72079:CL,72063:CL,72362:CL,72095:CL,72047
63485 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.reduce(org.biojava.nbio.structure.Structure)::CD,63490:CD,63494
63490 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v5 = p0 $this .getBaseIdentifier()::CL,71618
63494 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,72965:CL,72999:CL,72931:CL,72948:CL,72383:CL,72982
63540 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getName()::CE,63541:CD,63547
63541 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AtomImpl.getName()::JM,54479:JM,54548:JM,114554
63544 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,63547
63547 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,63541
64358 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::CE,64359:CD,64365
64359 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::JM,87103:JM,119996:JM,120001:JM,120149:JM,120154:JM,120282:JM,122503:JM,122531
64362 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .residueNumber::DD,64365
64365 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,64359
64367 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toString()::CE,64368:CD,64371:CD,64378:CD,64382:CD,64390:CD,64411:CD,64415
64368 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.toString()::JM,86674:JM,86694:JM,87240:JM,100311:JM,100371:JM,134935
64371 :: NORM :: declaration :: Ljava/io/StringWriter :: v3 = new java.io.StringWriter::JM,64415
64378 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
64382 :: CALL :: call :: Ljava/io/StringWriter :: v9 = v3.append(v7)::
64387 :: EXPR :: reference :: Ljava/lang/Character :: v10 = p0 $this .insCode::DD,64390
64390 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 52::CD,64394:CD,64398:JM,64415
64391 :: EXPR :: reference :: Ljava/lang/Character :: v12 = p0 $this .insCode::JM,64398
64394 :: CALL :: call :: C :: v14 = v12.charValue()::JM,64398
64398 :: PRED :: IF :: Z :: if (v14 == #(32)) goto 52::CD,64402:CD,64406:JM,64415
64399 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::
64402 :: CALL :: call :: C :: v18 = v16.charValue()::
64406 :: CALL :: call :: Ljava/io/StringWriter :: v20 = v3.append(v18)::
64411 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,64415
64415 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,64368
64429 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getChainID()::CE,64430:CD,64436
64430 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ChainImpl.getChainID()::JM,72702:JM,72800:JM,76407:JM,76444:JM,86572:JM,93386:JM,100279:JM,100339:JM,118440:JM,122435:JM,122654:JM,134728:JM,138448:JM,138499:JM,141635:JM,141640:JM,141676
64433 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainID::DD,64436
64436 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,64430
64477 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getX()::CE,64478:CD,64488
64478 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getX()::JM,104695
64481 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
64484 :: EXPR :: reference :: D :: v5 = v3[#(0)]::DD,64488
64488 :: NORM :: compound :: D :: return v5::CF,64478
64491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getY()::CE,64492:CD,64502
64492 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getY()::JM,104704
64495 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
64498 :: EXPR :: reference :: D :: v5 = v3[#(1)]::DD,64502
64502 :: NORM :: compound :: D :: return v5::CF,64492
64505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getZ()::CE,64506:CD,64516
64506 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getZ()::JM,104713
64509 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
64512 :: EXPR :: reference :: D :: v5 = v3[#(2)]::DD,64516
64516 :: NORM :: compound :: D :: return v5::CF,64506
65817 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::JM,66596:JM,66600:JM,74998:JM,121861:JM,121865
65816 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::CE,65817:CD,65820:CD,65821:CD,65830:CD,65847:CD,65851:CD,65895:CD,65899
65821 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
65820 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,65851:CF,65821
65830 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::JM,65899
65835 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,65851
65840 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.align.client.JFatCatClient.newline::
65842 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
65847 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,65851
65851 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,65835:CD,65840:CD,65842:CD,65847
65895 :: CALL :: call :: Ljava/lang/String :: v33 = v7.toString()::JM,65899
65899 :: NORM :: compound :: Ljava/lang/String :: return v33::DD,65817
66425 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::JM,83633:JM,83732:JM,101556:JM,101572:JM,101545
66424 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::CE,66425:CD,66429:CD,66442:CD,66446:CD,66451:CD,66452:CD,66456:CD,66479:CD,66480:CD,66485:CD,66490:CD,66495:CD,66512
66429 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,74766
66442 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .toLowerCase()::
66446 :: CALL :: call :: Ljava/lang/Object :: v12 = v8.get(v10)::JM,66451
66451 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,66456:JM,66509:CF,66452
66452 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,66457:DD,66510
66457 :: NORM :: compound :: Ljava/util/List :: return v14::DD,66425
66456 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 49::CD,66457:CD,66458:CD,66505:CD,66509:CD,66510
66458 :: CALL :: call :: Ljava/util/Iterator :: v18 = v13.iterator()::JM,66509
66463 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.next()::JM,66509
66468 :: CALL :: call :: Ljava/lang/Object :: v26 = v24.clone()::JM,66472:CL,74818
66473 :: CALL :: call :: Z :: v29 = v14.add(v27)::
66472 :: EXPR :: assign :: Ljava/lang/Object :: v27 = CHECKCAST v26::
66479 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v31 = new java.lang.RuntimeException::
66480 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
66485 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v32.append(v34)::
66490 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( subclass does not su...))::
66495 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
66505 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,66509
66509 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 61::CD,66463:CD,66468:CD,66472:CD,66473:CD,66505:JM,66509:CF,66510
66510 :: NORM :: compound :: Ljava/util/List :: return v14::DD,66425
66512 :: EXPR :: assign :: Ljava/lang/Exception :: v30 = catch <exc>::
66535 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::JM,83633:JM,83732
66534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::CE,66535:CD,66540:CD,66544:CD,66552:CD,66557:CD,66562:CD,66567:CD,66571:CD,66576:CD,66584:CD,66588:CD,66592:CD,66596:CD,66600:CD,66610:CD,66611:CD,66619:CD,66624:CD,66629:CD,66634:CD,66639:CD,66643:CD,66648:CD,66658:CD,66659:CD,66660
66540 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
66544 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
66552 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getDomainsForPDB?pdbId=))::
66557 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p1 $pdbId )::
66562 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(&version=))::
66567 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getScopVersion()::CL,74956
66571 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
66576 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
66584 :: CALL :: call :: Ljava/io/InputStream :: v27 = getInputStream(v5)::CL,75066
66588 :: CALL :: call :: Ljava/lang/String :: v29 = convertStreamToString(v27)::JM,66596:JM,66600:CL,65816
66592 :: CALL :: call :: Ljava/lang/String :: v31 = v29.trim()::JM,66596:JM,66600
66596 :: CALL :: call :: Z :: v33 = v31.isEmpty()::JM,66596:JM,66600
66601 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: v36 = fromXML(v29)::JM,66660:JM,66605:CL,75080
66600 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 139::CF,66660:CD,66601:CD,66605
66605 :: CALL :: call :: Ljava/util/List :: v38 = v36.getScopDomain()::JM,66660:JM,66605
66611 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
66610 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v40 = new java.lang.RuntimeException::
66616 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .server::
66619 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(v44)::
66624 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v46.append(#(getDomainsForPDB?pdbId=))::
66629 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v48.append(p1 $pdbId )::
66634 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v50.append(#(&version=))::
66639 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .getScopVersion()::CL,74956
66643 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
66648 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::
66659 :: EXPR :: assign :: Ljava/lang/Exception :: v39 = catch <exc>::
66658 :: NORM :: compound :: Ljava/util/List :: return v60::DD,66535
66660 :: EXPR :: assign :: null :: PHI v60 = #(null), v38::CF,66658
66824 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.cache(java.lang.Object,java.lang.Object)::CD,66830
66830 :: PRED :: IF :: Z :: if (p2 $data  != #(null)) goto 6::CD,66835
66832 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .serializedCache::DD,66835
66835 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 61::CD,66847:CD,66856:CD,66860:CD,66864:CD,66865
66847 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.put(p1 $name , p2 $data )::
66853 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .serializedCache::JM,66864
66856 :: CALL :: call :: Ljava/util/Set :: v15 = v13.keySet()::JM,66864
66860 :: CALL :: call :: I :: v17 = v15.size()::JM,66864
66865 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 61::CD,66866
66864 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 % #(1000)::DD,66865
66866 :: CALL :: call :: V :: p0 $this .flushCache()::CL,60055:CL,67042
66887 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::JM,101566
66886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::CE,66887:CD,66893
66890 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .scopId::DD,66893
66893 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,66887
67042 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.flushCache()::CD,67049
67046 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .serializedCache::DD,67049
67049 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 9::CD,67055:CD,67064:CD,67072:CD,67076
67055 :: CALL :: call :: Ljava/io/File :: v7 = p0 $this .getCacheFile()::CL,75431
67064 :: NORM :: declaration :: Ljava/io/ObjectOutputStream :: v10 = new java.io.ObjectOutputStream::
67069 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .serializedCache::
67072 :: CALL :: call :: V :: v10.writeObject(v12)::
67076 :: CALL :: call :: V :: v10.close()::
69802 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
69813 :: EXIT :: exit :: Ljava/net/URLStreamHandler :: java.net.URL.getURLStreamHandler(java.lang.String)::JM,62424
69816 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,69823
69818 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,69823:JM,70000:JM,70003:JM,69927:JM,69830:JM,69974:JM,69997:JM,69964
69823 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,69824:DD,69997:DD,70005
69825 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,69827
69824 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CF,70005:CD,69825:CD,69827:CD,69835:CD,69957:CD,69959:CD,69964:CD,69965:CD,69993:CD,69997:CD,69998:CD,70002
69827 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,69997:CD,69828:CD,69830:CD,69998
69828 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,69830:JM,69997
69830 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,69830:JM,69997:JM,70000:JM,70003:JM,69927:JM,69974:JM,69964:JM,69823
69835 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CF,70002:CD,69842:CD,69846:CD,69847:CD,69866:CD,69867:CD,69875:CD,69880:CD,69884:CD,69948:CD,70001
69842 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,69846
69847 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,69848:CD,69849:CD,69857:CD,69862
69846 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,69847
69849 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
69848 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
69857 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
69862 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
69867 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
69866 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
69875 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
69880 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
69884 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,69953
69891 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
69895 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
69899 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,70000:JM,69927
69900 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
69908 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,70000:JM,69927
69913 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,70000:JM,69927:JM,70003:JM,69830:JM,69974:JM,69997:JM,69964:JM,69823
69918 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,70000:JM,70003:JM,69927:JM,69964
69923 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,70000:JM,69927
69927 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,70000:JM,69927
69932 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,70000
69936 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,70000:JM,69927
69941 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,70001:CD,69942:CD,69946
69942 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,69942:JM,69946
69946 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,70001
69949 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,69953
69948 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CF,70002:CD,69949:CD,69953
69953 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CF,70002:CD,69891:CD,69895:CD,69899:CD,69900:CD,69908:CD,69913:CD,69918:CD,69923:CD,69927:CD,69941:CD,69948:CD,70000:CD,70001
69957 :: EXPR :: reference :: Ljava/util/Hashtable :: v82 = java.net.URL.handlers::JM,69964
69959 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(p1 $protocol )::JM,69964:JM,70000:JM,70003:JM,69927:JM,69830:JM,69974:JM,69997:JM,69823
69965 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 265::CD,69967:CD,69968:CD,69979:CD,69980:CD,69993:CD,70003:CD,70004:CD,70005
69964 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,69965:DD,69967:DD,70003
69967 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v85::DD,69813
69969 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v86 = java.net.URL.factory::DD,69971
69968 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 287::CF,70003:CD,69969:CD,69971
69971 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 287::CF,70003:CD,69972:CD,69974
69972 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v87 = java.net.URL.factory::JM,70003:JM,69974
69974 :: CALL :: call :: Ljava/net/URLStreamHandler :: v89 = v87.createURLStreamHandler(p1 $protocol )::JM,70003:JM,69974:JM,70000:JM,69927:JM,69830:JM,69997:JM,69964:JM,69823
69979 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 294::CF,70004
69981 :: EXPR :: reference :: Ljava/util/Hashtable :: v92 = java.net.URL.handlers::
69980 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 307::CD,69981:CD,69983
69983 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.put(p1 $protocol , v91)::JM,70000:JM,70003:JM,69927:JM,69830:JM,69974:JM,69997:JM,69964:JM,69823
69993 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v96::DD,69813
69997 :: EXPR :: assign :: null :: PHI v14 = v6, v12::CF,69998:DD,69835:DD,70001:DD,70002
69998 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::DD,69968:CF,69835
70001 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,69948:DD,70001:DD,70002
70000 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,69941:JM,69942:JM,69946
70003 :: EXPR :: assign :: null :: PHI v90 = v85, v85, v89::DD,69979:DD,70004
70002 :: EXPR :: assign :: null :: PHI v80 = v14, v77, v77::DD,70004
70005 :: EXPR :: assign :: null :: PHI v96 = v6, v91::CF,69993
70004 :: EXPR :: assign :: null :: PHI v91 = v80, v90::DD,69980:JM,70000:JM,70003:JM,69927:JM,69997:JM,69964:JM,69823:DD,70005
70089 :: NORM :: declaration :: Ljava/util/Date :: v4 = new java.util.Date::DD,70094
70094 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = v4::
70097 :: NORM :: declaration :: Ljava/util/Date :: v7 = new java.util.Date::DD,70102
70102 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = v7::
70105 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v9 = new java.text.SimpleDateFormat::DD,70113
70113 :: EXPR :: modify :: Ljava/text/DateFormat :: p0 $this .dateFormat = v9::
70116 :: EXPR :: modify :: F :: p0 $this .resolution = #(99.0 f)::
70119 :: EXPR :: modify :: F :: p0 $this .rFree = #(1.0 f)::
70122 :: NORM :: declaration :: Ljava/util/HashMap :: v15 = new java.util.HashMap::DD,70126
70126 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = v15::
70129 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: v17 = new org.biojava.nbio.structure.PDBCrystallographicInfo::DD,70133
70133 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = v17::
70183 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getBufferedReader(java.io.InputStream)::CD,70195:CD,70196
70195 :: NORM :: declaration :: Ljava/io/BufferedReader :: v5 = new java.io.BufferedReader::CF,70196
70196 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v6 = new java.io.InputStreamReader::
70213 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.BufferedReader)::JM,76289:JM,76258:JM,70089:JM,76296:JM,70122:JM,76268:JM,76303:JM,70097:JM,70129:JM,76275:JM,76310:JM,70105:JM,76282:CD,70245:CD,70252:CD,70259:CD,70279:CD,70301:CD,70307:CD,70322:CD,70328:CD,70334:CD,70340:CD,70352:CD,70362:CD,70713:CD,70717:CD,70724:CD,70729:CD,70735:CD,70739:CD,70746:CD,70750:CD,70757:CD,70761:JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70461:JM,70396:JM,70527:JM,70590
70245 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::
70252 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::
70259 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::
70279 :: NORM :: declaration :: Ljava/util/ArrayList :: v21 = new java.util.ArrayList::
70298 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .sourceLines::
70301 :: CALL :: call :: V :: v24.clear()::
70304 :: EXPR :: reference :: Ljava/util/List :: v26 = p0 $this .compndLines::
70307 :: CALL :: call :: V :: v26.clear()::
70319 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .compounds::
70322 :: CALL :: call :: V :: v30.clear()::
70325 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .helixList::
70328 :: CALL :: call :: V :: v32.clear()::
70331 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .strandList::
70334 :: CALL :: call :: V :: v34.clear()::
70337 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .turnList::
70340 :: CALL :: call :: V :: v36.clear()::
70352 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::
70359 :: EXPR :: reference :: Ljava/util/Map :: v40 = p0 $this .siteToResidueMap::
70362 :: CALL :: call :: V :: v40.clear()::
70376 :: CALL :: call :: Z :: v48 = v46.equals(#())::JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70381 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 778::CD,70382:CD,70384:CD,70389:JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70382 :: EXPR :: reference :: Ljava/lang/String :: v50 = org.biojava.nbio.structure.io.PDBFileParser.NEWLINE::JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70384 :: CALL :: call :: Z :: v52 = v46.equals(v50)::JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70389 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 271::CD,70391:CD,70396:JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70527:JM,70590
70391 :: CALL :: call :: Z :: v55 = v46.startsWith(#(TER))::JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70397 :: CALL :: call :: Z :: v58 = v46.startsWith(#(END))::JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70396 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 778::CD,70397:CD,70402:JM,70656:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70402 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 291::CD,70404:CD,70408:JM,70656:JM,70402:JM,70601:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70404 :: CALL :: call :: I :: v60 = v46.length()::JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70408 :: PRED :: IF :: Z :: if (v60 >= #(6)) goto 337::CD,70411:CD,70416:CD,70421:CD,70426:CD,70435:CD,70441:CD,70445:CD,70450:JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70411 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
70416 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v139.append(v46)::JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70421 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v143.append(#(<))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70426 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70435 :: CALL :: call :: Ljava/lang/String :: v63 = v46.substring(#(0), #(6))::JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70441 :: CALL :: call :: Ljava/lang/String :: v65 = v63.trim()::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70445 :: CALL :: call :: Z :: v68 = v65.equals(#(ATOM))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70451 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,76346
70450 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 366::CD,70451:CD,70456:CD,70461:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70456 :: CALL :: call :: Z :: v71 = v65.equals(#(SEQRES))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70461 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 384::CD,70462:CD,70467:CD,70472:JM,70656:JM,70505:JM,70601:JM,70697:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70462 :: CALL :: call :: V :: p0 $this .pdb_SEQRES_Handler(v46)::CL,77545
70467 :: CALL :: call :: Z :: v74 = v65.equals(#(HETATM))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70473 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,76346
70472 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 402::CD,70473:CD,70478:CD,70483:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70478 :: CALL :: call :: Z :: v77 = v65.equals(#(MODEL))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70483 :: PRED :: IF :: Z :: if (v77 == #(0)) goto 420::CD,70484:CD,70489:CD,70494:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70590:JM,70686
70484 :: CALL :: call :: V :: p0 $this .pdb_MODEL_Handler(v46)::CL,77809
70489 :: CALL :: call :: Z :: v80 = v65.equals(#(HEADER))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70495 :: CALL :: call :: V :: p0 $this .pdb_HEADER_Handler(v46)::CL,77925
70494 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 438::CD,70495:CD,70500:CD,70505:JM,70656:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70500 :: CALL :: call :: Z :: v83 = v65.equals(#(AUTHOR))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70505 :: PRED :: IF :: Z :: if (v83 == #(0)) goto 456::CD,70506:CD,70511:CD,70516:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70506 :: CALL :: call :: V :: p0 $this .pdb_AUTHOR_Handler(v46)::CL,78181
70511 :: CALL :: call :: Z :: v86 = v65.equals(#(TITLE))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70517 :: CALL :: call :: V :: p0 $this .pdb_TITLE_Handler(v46)::CL,78252
70516 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 474::CD,70517:CD,70522:CD,70527:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70623:JM,70494:JM,70590:JM,70686
70522 :: CALL :: call :: Z :: v89 = v65.equals(#(SOURCE))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70527 :: PRED :: IF :: Z :: if (v89 == #(0)) goto 498::CD,70531:CD,70537:CD,70542:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70528 :: EXPR :: reference :: Ljava/util/List :: v157 = p0 $this .sourceLines::
70531 :: CALL :: call :: Z :: v159 = v157.add(v46)::JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70537 :: CALL :: call :: Z :: v92 = v65.equals(#(COMPND))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70543 :: EXPR :: reference :: Ljava/util/List :: v160 = p0 $this .compndLines::
70542 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 522::CD,70546:CD,70552:CD,70557:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70546 :: CALL :: call :: Z :: v162 = v160.add(v46)::JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70552 :: CALL :: call :: Z :: v95 = v65.equals(#(JRNL))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70557 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 540::CD,70558:CD,70563:CD,70568:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70558 :: CALL :: call :: V :: p0 $this .pdb_JRNL_Handler(v46)::CL,78402
70563 :: CALL :: call :: Z :: v98 = v65.equals(#(EXPDTA))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70569 :: CALL :: call :: V :: p0 $this .pdb_EXPDTA_Handler(v46)::CL,78487
70568 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 558::CD,70569:CD,70574:CD,70579:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70574 :: CALL :: call :: Z :: v101 = v65.equals(#(CRYST1))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70579 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 576::CD,70580:CD,70585:CD,70590:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70686
70580 :: CALL :: call :: V :: p0 $this .pdb_CRYST1_Handler(v46)::CL,78566
70585 :: CALL :: call :: Z :: v104 = v65.startsWith(#(MTRIX))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70591 :: CALL :: call :: V :: p0 $this .pdb_MTRIXn_Handler(v46)::CL,78920
70590 :: PRED :: IF :: Z :: if (v104 == #(0)) goto 594::CD,70591:CD,70596:CD,70601:JM,70656:JM,70505:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70596 :: CALL :: call :: Z :: v107 = v65.equals(#(REMARK))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70601 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 612::CD,70602:CD,70607:CD,70612:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70602 :: CALL :: call :: V :: p0 $this .pdb_REMARK_Handler(v46)::CL,79274
70607 :: CALL :: call :: Z :: v110 = v65.equals(#(CONECT))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70613 :: CALL :: call :: V :: p0 $this .pdb_CONECT_Handler(v46)::CL,79599
70612 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 630::CD,70613:CD,70618:CD,70623:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70494:JM,70590:JM,70686
70618 :: CALL :: call :: Z :: v113 = v65.equals(#(REVDAT))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70623 :: PRED :: IF :: Z :: if (v113 == #(0)) goto 648::CD,70624:CD,70629:CD,70634:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70624 :: CALL :: call :: V :: p0 $this .pdb_REVDAT_Handler(v46)::CL,79962
70629 :: CALL :: call :: Z :: v116 = v65.equals(#(DBREF))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70635 :: CALL :: call :: V :: p0 $this .pdb_DBREF_Handler(v46)::CL,80057
70634 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 666::CD,70635:CD,70640:CD,70645:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70640 :: CALL :: call :: Z :: v119 = v65.equals(#(SITE))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70645 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 684::CD,70646:CD,70651:CD,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70646 :: CALL :: call :: V :: p0 $this .pdb_SITE_Handler(v46)::CL,80382
70651 :: CALL :: call :: Z :: v122 = v65.equals(#(SSBOND))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70657 :: CALL :: call :: V :: p0 $this .pdb_SSBOND_Handler(v46)::CL,80986
70656 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 702::CD,70657:CD,70662:CD,70667:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70662 :: CALL :: call :: Z :: v125 = v65.equals(#(LINK))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70667 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 717::CD,70668:CD,70676:CD,70680
70668 :: CALL :: call :: V :: p0 $this .pdb_LINK_Handler(v46)::CL,81286
70676 :: CALL :: call :: Z :: v128 = v126.isParseSecStruc()::JM,70680:CL,81542
70681 :: CALL :: call :: Z :: v131 = v65.equals(#(HELIX))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70680 :: PRED :: IF :: Z :: if (v128 == #(0)) goto 778::CD,70681:CD,70686:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70402:JM,70408:JM,70381:JM,70389:JM,70717:JM,70396
70687 :: CALL :: call :: V :: p0 $this .pdb_HELIX_Handler(v46)::CL,81551
70686 :: PRED :: IF :: Z :: if (v131 == #(0)) goto 748::CD,70687:CD,70692:CD,70697:JM,70656:JM,70505:JM,70601:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70692 :: CALL :: call :: Z :: v134 = v65.equals(#(SHEET))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70697 :: PRED :: IF :: Z :: if (v134 == #(0)) goto 766::CD,70698:CD,70703:CD,70708:JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70698 :: CALL :: call :: V :: p0 $this .pdb_SHEET_Handler(v46)::CL,81777
70703 :: CALL :: call :: Z :: v137 = v65.equals(#(TURN))::JM,70656:JM,70505:JM,70601:JM,70697:JM,70472:JM,70568:JM,70667:JM,70634:JM,70542:JM,70483:JM,70579:JM,70450:JM,70645:JM,70516:JM,70612:JM,70708:JM,70461:JM,70557:JM,70527:JM,70623:JM,70494:JM,70590:JM,70686
70709 :: CALL :: call :: V :: p0 $this .pdb_TURN_Handler(v46)::CL,82003
70708 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 778::CD,70709:JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70713 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $buf .readLine()::JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70381:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70717 :: PRED :: IF :: Z :: if (v46 != #(null)) goto 248::CD,70376:CD,70381:CD,70713:JM,70656:JM,70402:JM,70601:JM,70408:JM,70472:JM,70667:JM,70542:JM,70483:JM,70612:JM,70557:JM,70623:JM,70494:JM,70686:JM,70505:JM,70697:JM,70568:JM,70634:JM,70579:JM,70450:JM,70389:JM,70645:JM,70516:JM,70708:JM,70717:JM,70461:JM,70396:JM,70527:JM,70590
70724 :: CALL :: call :: V :: p0 $this .makeCompounds(v177, v178)::CL,82229
70729 :: CALL :: call :: V :: p0 $this .triggerEndFileChecks()::CL,82365
70735 :: CALL :: call :: Z :: v183 = v181.shouldCreateAtomBonds()::JM,70739:CL,82832
70739 :: PRED :: IF :: Z :: if (v183 == #(0)) goto 817::CD,70740
70740 :: CALL :: call :: V :: p0 $this .formBonds()::CL,82841
70746 :: CALL :: call :: Z :: v187 = v185.shouldCreateAtomCharges()::JM,70750:CL,82905
70751 :: CALL :: call :: V :: p0 $this .addCharges()::CL,82914
70750 :: PRED :: IF :: Z :: if (v187 == #(0)) goto 831::CD,70751
70757 :: CALL :: call :: Z :: v191 = v189.isParseSecStruc()::JM,70761:CL,81542
70761 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 855::CD,70765:CD,70769
70765 :: CALL :: call :: Z :: v194 = v192.isHeaderOnly()::JM,70769:CL,82926
70769 :: PRED :: IF :: Z :: if (v194 != #(0)) goto 855::CD,70770
70770 :: CALL :: call :: V :: p0 $this .setSecStruc()::CL,82935
70999 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::JM,62950
70998 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::CE,70999:CD,71003:CD,71008:CD,71009
71003 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::JM,71008
71009 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v6::DD,70999
71008 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,71009
71011 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CE,71012:CD,71014:CD,71016
71012 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::
71014 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source::DD,71016:DD,71017
71017 :: NORM :: compound :: [I :: return v2::DD,71012
71016 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,71017:CD,71018:CD,71021:CD,71022:CD,71023:CD,71025:CD,71034:CD,71036:CD,71045:CD,71047:CD,71056:CD,71058:CD,71067:CD,71069:CD,71078:CD,71080:CD,71089:CD,71091:CD,71100:CD,71102:CD,71113
71018 :: CALL :: call :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = values()::JM,71021:CL,83048
71021 :: EXPR :: assign :: I :: v6 = v5.length::CF,71022
71023 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v8 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::
71022 :: NORM :: declaration :: [I :: v7 = new []::DD,71113
71025 :: CALL :: call :: I :: v10 = v8.ordinal()::
71029 :: EXPR :: modify :: I :: v7[v10] = #(8)::
71034 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::
71036 :: CALL :: call :: I :: v16 = v14.ordinal()::
71040 :: EXPR :: modify :: I :: v7[v16] = #(4)::
71045 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::
71047 :: CALL :: call :: I :: v22 = v20.ordinal()::
71051 :: EXPR :: modify :: I :: v7[v22] = #(7)::
71056 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::
71058 :: CALL :: call :: I :: v28 = v26.ordinal()::
71062 :: EXPR :: modify :: I :: v7[v28] = #(6)::
71067 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v32 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::
71069 :: CALL :: call :: I :: v34 = v32.ordinal()::
71073 :: EXPR :: modify :: I :: v7[v34] = #(1)::
71078 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::
71080 :: CALL :: call :: I :: v40 = v38.ordinal()::
71084 :: EXPR :: modify :: I :: v7[v40] = #(3)::
71089 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v44 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::
71091 :: CALL :: call :: I :: v46 = v44.ordinal()::
71095 :: EXPR :: modify :: I :: v7[v46] = #(2)::
71100 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v50 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::
71102 :: CALL :: call :: I :: v52 = v50.ordinal()::
71106 :: EXPR :: modify :: I :: v7[v52] = #(5)::
71113 :: NORM :: compound :: [I :: return v7::DD,71012
71155 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::JM,63216
71154 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::CE,71155:CD,71161:CD,71166:CD,71170
71161 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,71170
71166 :: CALL :: call :: Z :: v8 = v6.matches()::JM,71170
71170 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,71176:CD,71181:CD,71188:CD,71196:CD,71197
71176 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,71170
71181 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
71188 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,71170
71197 :: NORM :: compound :: Z :: return #(0)::DD,71155
71196 :: NORM :: compound :: Z :: return #(1)::DD,71155
71213 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDP(java.lang.String)::CD,71220:CD,71225:CD,71229
71220 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,71229
71225 :: CALL :: call :: Z :: v8 = v6.matches()::JM,71229
71229 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 39::CD,71230:CD,71235:CD,71242:JM,71229
71230 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,71229
71235 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::
71242 :: CALL :: call :: Ljava/lang/String :: v17 = v6.group(#(2))::JM,71229
71265 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::CE,71266:CD,71272:CD,71277:CD,71281
71266 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::JM,63226
71272 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,71281
71277 :: CALL :: call :: Z :: v8 = v6.matches()::JM,71281
71281 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,71287:CD,71292:CD,71299:CD,71307:CD,71308
71287 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,71281
71292 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
71299 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,71281
71307 :: NORM :: compound :: Z :: return #(1)::DD,71266
71308 :: NORM :: compound :: Z :: return #(0)::DD,71266
71324 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromBIO(java.lang.String)::CD,71331:CD,71336:CD,71340
71331 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,71340
71336 :: CALL :: call :: Z :: v8 = v6.matches()::JM,71340
71341 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,71340
71340 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 30::CD,71341:CD,71346:JM,71340
71346 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::
71365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::CE,71366:CD,71372:CD,71377:CD,71381
71366 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::JM,63236
71372 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,71381
71377 :: CALL :: call :: Z :: v8 = v6.matches()::JM,71381
71381 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 42::CD,71387:CD,71392:CD,71402:CD,71403
71387 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,71381
71392 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
71403 :: NORM :: compound :: Z :: return #(0)::DD,71366
71402 :: NORM :: compound :: Z :: return #(1)::DD,71366
71418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDB(java.lang.String)::JM,83120:JM,83205:JM,83204:JM,83129:JM,83161:JM,83147:JM,83165:JM,83135:CD,71443:CD,71447:CD,71451
71443 :: CALL :: call :: Ljava/util/Set :: v10 = getChainIds(v5)::JM,71451:CL,83262
71447 :: CALL :: call :: I :: v12 = v10.size()::JM,71451
71451 :: PRED :: IF :: Z :: if (v12 != #(1)) goto 66::CD,71452:CD,71456:JM,71451
71452 :: CALL :: call :: Ljava/util/Iterator :: v19 = v10.iterator()::JM,71451
71456 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.next()::
71523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::CE,71524:CD,71553:CD,71563:CD,71564
71524 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::JM,63246
71553 :: CALL :: call :: Ljava/lang/String :: v19 = guessPDBID(v17)::CL,83318
71563 :: NORM :: compound :: Z :: return #(1)::DD,71524
71564 :: NORM :: compound :: Z :: return #(0)::DD,71524
71618 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getBaseIdentifier()::CD,71625:CD,71673:CD,71681:CD,71686:CD,71816:CD,71824:CD,71829:CD,71852:CD,71860:CD,71865:CD,71893:CD,71901:CD,71906:CD,71942:CD,71950:CD,71955
71622 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v3 = p0 $this .base::DD,71625
71625 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 489::CD,71626:CD,71632:CD,71640
71626 :: CALL :: call :: [I :: v6 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,71011
71629 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v7 = p0 $this .mySource::
71632 :: CALL :: call :: I :: v9 = v7.ordinal()::
71636 :: EXPR :: reference :: I :: v10 = v6[v9]::DD,71640
71641 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v132 = getCathDatabase()::CL,83353
71640 :: PRED :: IF :: null :: switch v10::CD,71641:CD,71648:CD,71657:CD,71663:CD,71700:CD,71703:CD,71714:CD,71773:CD,71789:CD,71794:CD,71799:CD,71803:JM,74448:JM,74726:CD,71883:JM,84500:JM,84519:JM,84524:JM,84495:JM,84511:JM,83120:JM,83205:JM,83204:JM,83129:JM,83161:JM,83147:JM,83165:JM,83135
71648 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v136 = v132.getDescriptionByCathId(v134)::CL,83372
71657 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v116 = getEcodDatabase()::CL,83404
71663 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v119 = v116.getDomainsById(v117)::CL,83415
71673 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v122 = new java.lang.StringBuilder::
71678 :: EXPR :: reference :: Ljava/lang/String :: v125 = p0 $this .name::
71681 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v122.append(v125)::
71686 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::
71700 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v93 = getSCOP()::CL,74701
71703 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v95 = guessScopDomain(v91, v93)::JM,71708:CL,83556
71708 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v95::
71711 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v96 = p0 $this .base::DD,71714
71715 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .chainId::JM,71723
71714 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 489::CD,71718:CD,71723
71718 :: CALL :: call :: Z :: v100 = v97.equals(#(_))::JM,71723
71723 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 185::JM,83120:JM,83205:JM,83204:JM,83129:JM,83161:JM,83147:JM,83165:JM,83135:CD,71743
71743 :: CALL :: call :: Ljava/util/List :: v105 = parseMultiple(v103)::CL,83957
71773 :: CALL :: call :: [Ljava/lang/String :: v63 = v59.split(#(:), #(2))::
71789 :: CALL :: call :: Ljava/lang/String :: v70 = expandUserHome(v68)::CL,52948
71794 :: NORM :: declaration :: Ljava/io/File :: v72 = new java.io.File::
71799 :: CALL :: call :: Ljava/net/URI :: v75 = v72.toURI()::
71803 :: CALL :: call :: Ljava/net/URL :: v77 = v75.toURL()::
71816 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
71821 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .name::
71824 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v83)::
71829 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::
71852 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
71857 :: EXPR :: reference :: Ljava/lang/String :: v53 = p0 $this .name::
71860 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
71865 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
71883 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/PDPDomain :: v33 = v28.getPDPDomain(v31)::CL,84229
71893 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
71898 :: EXPR :: reference :: Ljava/lang/String :: v39 = p0 $this .name::
71901 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v36.append(v39)::
71906 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
71942 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
71950 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v12.append(v15)::
71955 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
72030 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,72039
72039 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $cache .getStructure(v5)::CL,48733
72047 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,72055
72055 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = v4.loadStructure(p1 $cache )::CL,72338
72063 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,72071
72071 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p1 $cache .getStructureForPdbId(v4)::CL,84576
72079 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,72087
72087 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p1 $cache .getStructureForPdbId(v4)::CL,84576
72095 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,72100:CD,72105:CD,72109:CD,72114:CD,72150:CD,72164:CD,72166:CD,72178:CD,72181:CD,72189:CD,72237:CD,72289:CD,72290
72100 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v4 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,72289
72105 :: CALL :: call :: Ljava/util/Map :: v7 = parseQuery(v5)::CL,84664
72109 :: CALL :: call :: Z :: v21 = v7.containsKey(#(format))::JM,72114
72115 :: CALL :: call :: Ljava/lang/Object :: v24 = v7.get(#(format))::
72114 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 90::CF,72289:CD,72115:CD,72135
72135 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v34 = guessFiletype(v32)::JM,72289:CL,84831
72150 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
72164 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v38 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::CF,72166
72166 :: PRED :: IF :: Z :: if (v36 != v38) goto 107::CF,72290:CD,72174
72174 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v43 = guessFiletype(v41)::JM,72290:CL,84831
72178 :: CALL :: call :: [I :: v46 = $SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::CL,84909
72181 :: CALL :: call :: I :: v48 = v44.ordinal()::
72185 :: EXPR :: reference :: I :: v49 = v46[v48]::DD,72189
72189 :: PRED :: IF :: null :: switch v49::CD,72232:JM,46977:JM,47041:JM,47013:JM,42600:JM,42604:JM,47021:JM,42608:JM,46963:JM,47027:JM,42612:JM,48532:JM,42616:JM,42620:CD,72281
72232 :: CALL :: call :: V :: v71.parse(v79)::CL,85050
72237 :: CALL :: call :: V :: v84.printStackTrace()::
72281 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v65 = v50.getStructure(v63)::CL,48601
72289 :: EXPR :: assign :: null :: PHI v36 = v4, v34, v4::DD,72166:DD,72290
72290 :: EXPR :: assign :: null :: PHI v44 = v36, v43::
72338 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,72343:CD,72347
72343 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getPdbId()::JM,72347:CL,74757
72347 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 13::CD,72349
72349 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v8 = p1 $cache .getStructureForPdbId(v5)::CL,84576
72362 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,72373
72373 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $cache .getBiologicalAssembly(v4, v5)::CL,86007
72383 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.reduce(org.biojava.nbio.structure.Structure)::JM,76289:JM,76258:JM,70089:JM,76296:JM,70122:JM,76268:JM,76303:JM,70097:JM,70129:JM,76275:JM,76310:JM,70105:JM,76282:CD,72408:CD,72420:CD,72436:CD,72444:CD,72449:CD,72454:CD,72458:CD,72463:CD,72472:CD,72476:CD,72481:CD,72485:CD,72489:CD,72650:CD,72654:CD,72784:CD,72788:CD,72802
72408 :: CALL :: call :: Ljava/lang/String :: v13 = p0 $this .toString()::CL,86058
72420 :: CALL :: call :: V :: v4.setDBRefs(v16)::CL,86077
72436 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
72444 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v23.append(v26)::
72449 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v28.append(#( of ))::
72454 :: CALL :: call :: Ljava/lang/String :: v33 = v4.getPDBCode()::CL,54232
72458 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(v33)::
72463 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v35.append(#( ))::
72472 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getDescription()::CL,86144
72476 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
72481 :: CALL :: call :: Ljava/lang/String :: v46 = v44.toString()::
72485 :: CALL :: call :: V :: v22.setDescription(v46)::CL,86153
72489 :: CALL :: call :: Ljava/util/List :: v49 = p1 $s .getCompounds()::CL,86164
72518 :: NORM :: declaration :: Ljava/util/ArrayList :: v62 = new java.util.ArrayList::
72522 :: CALL :: call :: V :: v4.addModel(v62)::CL,86312
72526 :: CALL :: call :: Ljava/util/List :: v66 = p0 $this .getResidueRanges()::JM,72534:CL,86356
72530 :: CALL :: call :: Z :: v68 = v66.isEmpty()::JM,72534
72535 :: CALL :: call :: Ljava/util/List :: v163 = p1 $s .getCompounds()::CL,86164
72534 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 255::CD,72535:CD,72559:CD,72564:CD,72570:CD,72574:CD,72778:CD,72782:CD,72799:CD,72800:CD,72801
72559 :: CALL :: call :: Ljava/util/List :: v172 = p1 $s .getModel(v178)::CL,54314
72564 :: CALL :: call :: V :: v4.setModel(v178, v172)::CL,86365
72570 :: CALL :: call :: Ljava/util/List :: v70 = p0 $this .getResidueRanges()::JM,72782:CL,86356
72574 :: CALL :: call :: Ljava/util/Iterator :: v72 = v70.iterator()::JM,72782
72579 :: CALL :: call :: Ljava/lang/Object :: v76 = v72.next()::JM,72782
72584 :: CALL :: call :: Ljava/lang/String :: v79 = v77.getChainId()::JM,72601:CL,86443
72588 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v81 = v77.getStart()::JM,72675:CL,86452
72592 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v83 = v77.getEnd()::JM,72676:CL,86461
72596 :: CALL :: call :: Z :: v86 = v79.equals(#(_))::JM,72601
72601 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 391::CD,72602:CD,72626:CD,72643
72602 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v88 = p1 $s .getChain(v179, #(0))::CL,86470
72626 :: CALL :: call :: I :: v96 = p1 $s .size()::CL,86508
72643 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v104 = p1 $s .getChainByPDB(v79, v179)::CL,86542
72650 :: CALL :: call :: I :: v107 = parseInt(v79)::JM,72601
72654 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v109 = p1 $s .getChain(v179, v107)::CL,86470
72675 :: PRED :: IF :: Z :: if (v81 != #(null)) goto 482::CD,72676:CD,72682:CD,72688:CD,72795
72677 :: CALL :: call :: Ljava/util/List :: v117 = v115.getAtomGroups()::JM,72795:CL,54331
72676 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 482::CD,72677:CD,72682:CD,72688:CD,72795
72682 :: CALL :: call :: [Lorg/biojava/nbio/structure/Group :: v119 = v115.getGroupsByPDB(v81, v83)::JM,72688:JM,72795:CL,86630
72688 :: CALL :: call :: Ljava/util/List :: v121 = asList(v119)::JM,72688:JM,72795
72693 :: CALL :: call :: Ljava/lang/String :: v124 = v115.getChainID()::JM,72702:CL,64429
72692 :: PRED :: IF :: Z :: if (v160 == #(null)) goto 532::CD,72693:CD,72697:CD,72702:CD,72714:CD,72796
72697 :: CALL :: call :: Z :: v126 = v160.equals(v124)::JM,72702
72703 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v128 = v4.getChainByPDB(v160, v179)::JM,72796:CL,86542
72702 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 532::CD,72703:CD,72714:CD,72796
72714 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v132 = v4.getChainByPDB(v130, v179)::JM,72796:CL,86542
72721 :: PRED :: IF :: Z :: if (v135 != #(null)) goto 617::JM,86881:JM,86869:JM,86888:JM,86874:CD,72734:CD,72743
72734 :: CALL :: call :: V :: v4.addChain(v136, v179)::CL,86923
72743 :: CALL :: call :: V :: v136.setSeqResGroups(v143)::CL,87001
72755 :: CALL :: call :: Ljava/util/Iterator :: v150 = v122.iterator()::JM,72773
72760 :: CALL :: call :: Ljava/lang/Object :: v154 = v150.next()::JM,72773
72765 :: CALL :: call :: V :: v148.addGroup(v155)::CL,87059
72769 :: CALL :: call :: Z :: v152 = v150.hasNext()::JM,72773
72773 :: PRED :: IF :: Z :: if (v152 != #(0)) goto 629::CD,72760:CD,72765:CD,72769:CD,72798:JM,72773
72774 :: CALL :: call :: Ljava/lang/String :: v158 = v148.getChainID()::JM,72800:CL,64429
72778 :: CALL :: call :: Z :: v74 = v72.hasNext()::JM,72782
72783 :: EXPR :: assign :: Ljava/lang/Object :: v176 = v181 + #(1)::DD,72802
72782 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 270::CF,72801:CD,72579:CD,72584:CD,72588:CD,72592:CD,72596:CD,72601:CD,72675:CD,72692:CD,72721:CD,72755:CD,72769:CD,72773:CD,72774:CD,72778:CD,72795:CD,72796:CD,72798:CD,72799:CD,72800:JM,72782
72784 :: CALL :: call :: I :: v60 = p1 $s .nrModels()::JM,72788:CL,87301
72788 :: PRED :: IF :: Z :: if (v178 < v60) goto 177::CD,72518:CD,72522:CD,72526:CD,72530:CD,72534:CD,72783:CD,72784:CD,72801:CD,72802
72795 :: EXPR :: assign :: null :: PHI v122 = v117, v121::JM,72773:CF,72692
72796 :: EXPR :: assign :: null :: PHI v135 = v128, v132, #(null)::DD,72721
72799 :: EXPR :: assign :: null :: PHI v179 = v178, v180::CF,72800:DD,72798:DD,72801
72798 :: EXPR :: assign :: null :: PHI v180 = v179, v180::JM,72773:DD,72798:DD,72799
72801 :: EXPR :: assign :: null :: PHI v181 = v178, v179::DD,72783
72800 :: EXPR :: assign :: null :: PHI v160 = #(null), v158::JM,72782:DD,72692:JM,72702
72802 :: EXPR :: assign :: null :: PHI v178 = #(0), v176::DD,72788:DD,72799:DD,72801
72931 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.reduce(org.biojava.nbio.structure.Structure)::CD,72936:CD,72940
72936 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,87314
72940 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,72383
72948 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.reduce(org.biojava.nbio.structure.Structure)::CD,72953:CD,72957
72953 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,87340
72957 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,72383
72965 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.reduce(org.biojava.nbio.structure.Structure)::CD,72970:CD,72974
72970 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,87511
72974 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,72383
72982 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.reduce(org.biojava.nbio.structure.Structure)::CD,72987:CD,72991
72987 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,87537
72991 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,72383
72999 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.reduce(org.biojava.nbio.structure.Structure)::CD,73007
73007 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = v4.reduce(p1 $input )::CL,72383
74208 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL,boolean,int)::CD,74214
74214 :: CALL :: call :: Ljava/net/HttpURLConnection :: v7 = openHttpURLConnection(p1 $url , p3 $timeout )::CL,91159
74449 :: CALL :: call :: Ljava/util/Map :: v7 = p0 $this .reloadFromFile()::CL,91580
74448 :: PRED :: IF :: Z :: if (p1 $cacheFileName  == #(null)) goto 18::CD,74449
74701 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP()::CD,74706
74706 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v4 = getSCOP(v2)::CL,91818
74726 :: PRED :: IF :: Z :: if (p1 $useCache  != #(0)) goto 25::CD,74731
74731 :: CALL :: call :: V :: p0 $this .loadRepresentativeDomains()::CL,91830
74757 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getPdbId()::CE,74758:CD,74764
74758 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.SubstructureIdentifier.getPdbId()::JM,72347
74761 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,74764
74764 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,74758
74766 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.ensureClaInstalled()::CD,74773:CD,74777
74770 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedCla::JM,74777
74773 :: CALL :: call :: Z :: v5 = v3.get()::JM,74777
74777 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,74779:CD,74783:CD,74787:CD,74793
74779 :: CALL :: call :: Z :: v8 = p0 $this .claFileAvailable()::JM,74783:CL,92096
74783 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 23::CD,74784
74784 :: CALL :: call :: V :: p0 $this .downloadClaFile()::CL,92134
74787 :: CALL :: call :: V :: p0 $this .parseClassification()::CL,92226
74790 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedCla::JM,74793
74793 :: CALL :: call :: V :: v11.set(#(1))::JM,74793
74819 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.scop.ScopDomain.clone()::JM,66472
74818 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.clone()::CE,74819:CD,74822:CD,74826:CD,74834:CD,74842:CD,74850:CD,74858:CD,74866:CD,74874:CD,74882:CD,74890:CD,74898:CD,74906:CD,74914:CD,74922:CD,74926
74822 :: CALL :: call :: Ljava/lang/Object :: v4 = p0 $this .clone()::
74826 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = new org.biojava.nbio.structure.scop.ScopDomain::DD,74926
74834 :: CALL :: call :: V :: v5.setClassId(v8)::CL,92293
74842 :: CALL :: call :: V :: v5.setClassificationId(v11)::CL,92313
74850 :: CALL :: call :: V :: v5.setDomainId(v14)::CL,92333
74858 :: CALL :: call :: V :: v5.setFamilyId(v17)::CL,92353
74866 :: CALL :: call :: V :: v5.setFoldId(v20)::CL,92373
74874 :: CALL :: call :: V :: v5.setPdbId(v23)::CL,92393
74882 :: CALL :: call :: V :: v5.setPx(v26)::CL,92413
74890 :: CALL :: call :: V :: v5.setRanges(v29)::CL,92433
74898 :: CALL :: call :: V :: v5.setScopId(v32)::CL,92444
74906 :: CALL :: call :: V :: v5.setSpeciesId(v35)::CL,92464
74914 :: CALL :: call :: V :: v5.setSunid(v38)::CL,92484
74922 :: CALL :: call :: V :: v5.setSuperfamilyId(v41)::CL,92504
74926 :: NORM :: compound :: Ljava/lang/Object :: return v5::DD,74819
74957 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::
74956 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::CE,74957:CD,74963:CD,75016:CD,75017:CD,75025:CD,75030:CD,75035:CD,75048:CD,75049
74960 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .version::DD,74963
74963 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 106::CD,74965:CD,74969:CD,74977:CD,74982:CD,74990:CD,74994:CD,75004
74965 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
74969 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
74977 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getScopVersion))::
74982 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
74990 :: CALL :: call :: Ljava/io/InputStream :: v18 = getInputStream(v5)::CL,75066
74994 :: CALL :: call :: Ljava/lang/String :: v20 = convertStreamToString(v18)::JM,74998:CL,65816
74998 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v20::
75001 :: EXPR :: reference :: Ljava/lang/String :: v21 = p0 $this .version::DD,75004
75005 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .version::JM,75012
75004 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 106::CD,75008
75008 :: CALL :: call :: Ljava/lang/String :: v24 = v22.trim()::JM,75012
75012 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v24::
75017 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
75016 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v26 = new java.lang.RuntimeException::
75022 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .server::
75025 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v27.append(v30)::
75030 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v32.append(#(getScopVersion))::
75035 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
75045 :: EXPR :: reference :: Ljava/lang/String :: v38 = p0 $this .version::DD,75048
75049 :: EXPR :: assign :: Ljava/lang/Exception :: v25 = catch <exc>::
75048 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,74957
75066 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL)::CD,75070
75070 :: CALL :: call :: Ljava/io/InputStream :: v6 = getInputStream(p1 $url , #(1), #(15000))::CL,74208
75081 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::JM,66660:JM,66605
75080 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::CE,75081:CD,75084:CD,75086:CD,75090:CD,75091:CD,75099:CD,75104:CD,75106:CD,75107:CD,75113:CD,75118:CD,75123:CD,75133:CD,75134
75084 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.ScopDomains.jaxbContext::JM,75104:JM,75099:JM,75086
75086 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,75104:JM,75099:JM,75086
75091 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
75090 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,75104:JM,75099
75099 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,75104:JM,75099
75104 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,75133
75107 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
75106 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
75113 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(v19)::
75118 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( from XML))::
75123 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
75133 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: return v13::DD,75081
75134 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
75431 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::CE,75432:JM,43634:JM,43587:JM,43540:JM,43606:JM,43591:JM,43639:JM,43608:JM,43547:JM,43659:JM,43613:CD,75443:CD,75444:CD,75445:CD,75453:CD,75457:CD,75465:CD,75470:CD,75488
75432 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::JM,91635:JM,91607
75443 :: NORM :: declaration :: Ljava/io/File :: v7 = new java.io.File::DD,75488:CF,75444
75445 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v6)::
75444 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
75453 :: CALL :: call :: Ljava/lang/String :: v14 = getProperty(#(file.separator))::JM,75453
75457 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v8.append(v14)::
75462 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cacheFileName::
75465 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
75470 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
75488 :: NORM :: compound :: Ljava/io/File :: return v7::DD,75432
76258 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,70097:JM,70129:JM,70089:JM,70105:JM,70122:DD,76262
76262 :: EXPR :: modify :: Ljava/util/List :: p0 $this .models = v4::
76265 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #()::
76268 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,70097:JM,70129:JM,70089:JM,70105:JM,70122:DD,76272
76272 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = v7::
76275 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,70097:JM,70129:JM,70089:JM,70105:JM,70122:DD,76279
76279 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v9::
76282 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::JM,70097:JM,70129:JM,70089:JM,70105:JM,70122:DD,76286
76286 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = v11::
76289 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBHeader :: v13 = new org.biojava.nbio.structure.PDBHeader::DD,76293
76293 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = v13::
76296 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::JM,70097:JM,70129:JM,70089:JM,70105:JM,70122:DD,76300
76300 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = v15::
76303 :: NORM :: declaration :: Ljava/util/ArrayList :: v17 = new java.util.ArrayList::JM,70097:JM,70129:JM,70089:JM,70105:JM,70122:DD,76307
76307 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = v17::
76310 :: NORM :: declaration :: Ljava/util/ArrayList :: v19 = new java.util.ArrayList::JM,70097:JM,70129:JM,70089:JM,70105:JM,70122:DD,76314
76314 :: EXPR :: modify :: Ljava/util/List :: p0 $this .hetAtoms = v19::
76337 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::CE,76338:CD,76344
76338 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::JM,141971
76341 :: EXPR :: reference :: Z :: v3 = p0 $this .parseCAOnly::DD,76344
76344 :: NORM :: compound :: Z :: return v3::CF,76338
76346 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_ATOM_Handler(java.lang.String)::CD,76354:CD,76358:JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76354 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,76358:CL,82926
76358 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 18::CD,76360:CD,76369:CD,76398:CD,76402:CD,76407:CD,76496:CD,76502:CD,76506:CD,76512:CD,76516:CD,76522:CD,76526:CD,76532:CD,76537:CD,76547:JM,93426:JM,93420:JM,93423:CD,76557:CD,76562:CD,76586:CD,76618:CD,76650:CD,76651:CD,76657:JM,77144:JM,77160:JM,76954:JM,76959:CD,76673:CD,76678:CD,76793:CD,76803:CD,76847:CD,77219:CD,77221:CD,77224:JM,77089:JM,76920:JM,77069:JM,76444:JM,77119
76360 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(21), #(22))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76366 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v12 = p0 $this .current_chain::DD,76369
76369 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 68::CF,77219:CD,76370:JM,86881:JM,86869:JM,86888:JM,86874:CD,76380:CD,76390
76370 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v14 = new org.biojava.nbio.structure.ChainImpl::DD,76374
76374 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v14::
76380 :: CALL :: call :: V :: v16.setChainID(v11)::CL,86912
76384 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .current_model::
76387 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v20 = p0 $this .current_chain::
76390 :: CALL :: call :: Z :: v22 = v19.add(v20)::
76398 :: CALL :: call :: Ljava/lang/String :: v26 = v24.getChainID()::JM,76407:CL,64429
76402 :: CALL :: call :: Z :: v28 = v11.equals(v26)::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76407 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 215::CF,77221:CD,76414:CD,76428:CD,76434:CD,76454:CD,76479:CD,76484:CD,77220
76414 :: CALL :: call :: V :: v29.addGroup(v30)::CL,87059
76428 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p0 $this .isKnownChain(v34, v35)::JM,76434:JM,77220:CL,93364
76435 :: CALL :: call :: Ljava/lang/String :: v39 = v37.getChainID()::JM,76444:CL,64429
76434 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 138::CD,76435:CD,76439:CD,76444:CD,76448:CD,77220
76439 :: CALL :: call :: Z :: v41 = v39.equals(v11)::JM,76444:JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,77119:JM,76959
76444 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 148::CF,77220:CD,76448
76448 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v44 = p0 $this .isKnownChain(v11, v42)::JM,77220:CL,93364
76455 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v46 = new org.biojava.nbio.structure.ChainImpl::DD,76459
76454 :: PRED :: IF :: Z :: if (v45 != #(null)) goto 178::CD,76455:JM,86881:JM,86869:JM,86888:JM,86874:CD,76465
76459 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v46::
76465 :: CALL :: call :: V :: v48.setChainID(v11)::CL,86912
76470 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v45::
76473 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .current_model::JM,76484
76476 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v51 = p0 $this .current_chain::JM,76484
76479 :: CALL :: call :: Z :: v53 = v50.contains(v51)::JM,76484
76485 :: EXPR :: reference :: Ljava/util/List :: v54 = p0 $this .current_model::
76484 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 215::CF,77221:CD,76491
76488 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v55 = p0 $this .current_chain::
76491 :: CALL :: call :: Z :: v57 = v54.add(v55)::
76496 :: CALL :: call :: Ljava/lang/String :: v61 = p1 $line .substring(#(0), #(6))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76502 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76506 :: CALL :: call :: Ljava/lang/String :: v67 = p1 $line .substring(#(17), #(20))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76512 :: CALL :: call :: Ljava/lang/String :: v69 = v67.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76516 :: CALL :: call :: Ljava/lang/String :: v72 = p1 $line .substring(#(22), #(26))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76522 :: CALL :: call :: Ljava/lang/String :: v74 = v72.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76526 :: CALL :: call :: Ljava/lang/String :: v77 = p1 $line .substring(#(26), #(27))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76532 :: CALL :: call :: C :: v79 = v77.charAt(#(0))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76537 :: CALL :: call :: Ljava/lang/Character :: v81 = valueOf(v79)::JM,76562:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,76959
76547 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v74)::JM,76562:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,76959
76557 :: CALL :: call :: Z :: v92 = v63.equals(#(ATOM))::JM,76562:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,76959
76563 :: CALL :: call :: Ljava/lang/Character :: v101 = get1LetterCode(v69)::CL,93437
76562 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 322::CD,76563:CD,76568:CD,76572
76568 :: CALL :: call :: Ljava/lang/Character :: v94 = get1LetterCode(v69)::JM,76572:CL,93437
76573 :: CALL :: call :: Ljava/lang/Character :: v97 = valueOf(#(88))::
76572 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 349::CD,76573
76583 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v103 = p0 $this .current_group::DD,76586
76587 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v105 = p0 $this .getNewGroup(v63, v102, v69)::CL,93506
76586 :: PRED :: IF :: Z :: if (v103 != #(null)) goto 400::CD,76587:CD,76600:CD,76607:CD,76614:CF,76618
76600 :: CALL :: call :: V :: v106.setPDBName(v69)::CL,93615:CL,93584
76607 :: CALL :: call :: V :: v108.setResidueNumber(v86)::CL,93626
76614 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v110)::CL,93637
76619 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v113 = p0 $this .getNewGroup(v63, v102, v69)::CL,93506
76618 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 447::CF,76650:CD,76619:CD,76632:CD,76639:CD,76646
76632 :: CALL :: call :: V :: v114.setPDBName(v69)::CL,93615:CL,93584
76639 :: CALL :: call :: V :: v116.setResidueNumber(v86)::CL,93626
76646 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v118)::CL,93637
76651 :: CALL :: call :: Ljava/lang/String :: v123 = p1 $line .substring(#(16), #(17))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76650 :: NORM :: declaration :: Ljava/lang/Character :: v120 = new java.lang.Character::JM,76562:JM,77144:JM,77160:JM,76650:JM,76959:JM,76736:JM,77089:JM,76407:JM,76920:JM,76954:JM,77069:JM,76444:JM,77119
76657 :: CALL :: call :: C :: v125 = v123.charAt(#(0))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76650:JM,76954:JM,77069:JM,76444:JM,77119:JM,76959
76673 :: CALL :: call :: Z :: v131 = v86.equals(v129)::JM,76678:CL,40827
76678 :: PRED :: IF :: Z :: if (v131 != #(0)) goto 561::CD,76685:CD,76692:CD,76695:CD,76708:CD,76715:CD,76722:CD,76727:CD,76731:CD,76736:CD,77224
76685 :: CALL :: call :: V :: v157.addGroup(v158)::CL,87059
76692 :: CALL :: call :: V :: v160.trimToSize()::CL,93731
76695 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v163 = p0 $this .getNewGroup(v63, v102, v69)::CL,93506
76708 :: CALL :: call :: V :: v164.setPDBName(v69)::CL,93615:CL,93584
76715 :: CALL :: call :: V :: v166.setResidueNumber(v86)::CL,93626
76722 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v168)::CL,93637
76727 :: CALL :: call :: Ljava/lang/Character :: v133 = valueOf(#(32))::JM,76736
76731 :: CALL :: call :: Z :: v135 = v120.equals(v133)::JM,76736
76736 :: PRED :: IF :: Z :: if (v135 != #(0)) goto 646::CF,77224:CD,76739:CD,76747:CD,76752:CD,76757:CD,76762:CD,76770:CD,76778:CD,76782
76739 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v137 = new java.lang.StringBuilder::
76747 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v137.append(v140)::
76752 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( ))::
76757 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(#(null))::
76762 :: CALL :: call :: Ljava/lang/String :: v149 = v147.toString()::
76770 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v152 = p0 $this .getCorrectAltLocGroup(v120, v63, v102, v69)::JM,77224:CL,93840
76778 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v154 = v152.getChain()::JM,76782:CL,54852
76782 :: PRED :: IF :: Z :: if (v154 != #(null)) goto 646::CF,77224:CD,76786
76786 :: CALL :: call :: V :: v152.setChain(v155)::CL,94086
76790 :: EXPR :: reference :: I :: v171 = p0 $this .atomCount::DD,76793
76793 :: EXPR :: assign :: Ljava/lang/Object :: v172 = v171 + #(1)::DD,76794
76794 :: EXPR :: modify :: I :: p0 $this .atomCount = v172::
76797 :: EXPR :: reference :: I :: v173 = p0 $this .atomCount::DD,76803
76800 :: EXPR :: reference :: I :: v174 = p0 $this .my_ATOM_CA_THRESHOLD::DD,76803
76803 :: PRED :: IF :: Z :: if (v173 != v174) goto 713::CD,76806:CD,76814:CD,76819:CD,76824:CD,76835:CD,76838
76806 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v176 = new java.lang.StringBuilder::
76811 :: EXPR :: reference :: I :: v179 = p0 $this .my_ATOM_CA_THRESHOLD::
76814 :: CALL :: call :: Ljava/lang/StringBuilder :: v181 = v176.append(v179)::
76819 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v181.append(#( atoms in this struct...))::
76824 :: CALL :: call :: Ljava/lang/String :: v186 = v184.toString()::
76832 :: EXPR :: reference :: Ljava/util/List :: v188 = p0 $this .seqResChains::
76835 :: CALL :: call :: V :: v188.clear()::
76838 :: CALL :: call :: V :: p0 $this .switchCAOnly()::CL,94116
76841 :: EXPR :: reference :: I :: v191 = p0 $this .atomCount::DD,76847
76844 :: EXPR :: reference :: I :: v192 = p0 $this .load_max_atoms::DD,76847
76847 :: PRED :: IF :: Z :: if (v191 != v192) goto 784::CD,76850:CD,76858:CD,76863:CD,76868:CD,76878:CD,76883:CD,76888:CD,76903
76850 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v339 = new java.lang.StringBuilder::
76855 :: EXPR :: reference :: I :: v342 = p0 $this .load_max_atoms::
76858 :: CALL :: call :: Ljava/lang/StringBuilder :: v344 = v339.append(v342)::
76863 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v344.append(#(in this protein struc...))::
76868 :: CALL :: call :: Ljava/lang/String :: v349 = v347.toString()::
76878 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v352 = new java.lang.StringBuilder::
76883 :: CALL :: call :: Ljava/lang/StringBuilder :: v356 = v352.append(p1 $line )::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76888 :: CALL :: call :: Ljava/lang/String :: v358 = v356.toString()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76897 :: EXPR :: reference :: I :: v193 = p0 $this .atomCount::DD,76903
76900 :: EXPR :: reference :: I :: v194 = p0 $this .load_max_atoms::DD,76903
76903 :: PRED :: IF :: Z :: if (v193 <= v194) goto 800::CD,76905:CD,76914:JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76905 :: CALL :: call :: Ljava/lang/String :: v197 = p1 $line .substring(#(12), #(16))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76911 :: EXPR :: reference :: Z :: v198 = p0 $this .parseCAonly::DD,76914
76915 :: CALL :: call :: Z :: v201 = v197.equals(#( CA ))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,76959:JM,77119
76914 :: PRED :: IF :: Z :: if (v198 == #(0)) goto 835::CD,76915:CD,76920:CD,76932:CD,76936:JM,77089:JM,76562:JM,76407:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,76959:JM,77119
76920 :: PRED :: IF :: Z :: if (v201 != #(0)) goto 835::CD,76932:CD,76936
76932 :: CALL :: call :: [Ljava/lang/String :: v204 = v202.getAcceptedAtomNames()::JM,76936:CL,94195
76936 :: PRED :: IF :: Z :: if (v204 == #(null)) goto 923::CD,76940:CD,76944:CD,76962:CD,76963:CD,76972:CD,76978:CD,76982:JM,87959:JM,87964:CD,76998:CD,77006:CD,77012:CD,77020:CD,77026:CD,77034:CD,77040:CD,77065:CD,77069:CD,77085:CD,77089:CD,77115:CD,77119:CD,77181:CD,77201:CD,77206:CD,77225:CD,77226:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,76444:JM,76959
76940 :: CALL :: call :: [Ljava/lang/String :: v207 = v205.getAcceptedAtomNames()::JM,76944:CL,94195
76944 :: EXPR :: assign :: I :: v208 = v207.length::DD,76962
76946 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v207[v215]::JM,76954:JM,76959
76950 :: CALL :: call :: Ljava/lang/String :: v211 = v197.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,76959:JM,77119
76954 :: CALL :: call :: Z :: v213 = v209.equals(v211)::JM,76954:JM,76959:JM,76562:JM,77144:JM,77160:JM,76650
76959 :: PRED :: IF :: Z :: if (v213 == #(0)) goto 892::CD,76961:CD,76962:CD,77225:CD,77226
76961 :: EXPR :: assign :: Ljava/lang/Object :: v214 = v215 + #(1)::DD,77225
76963 :: PRED :: IF :: Z :: if (v216 != #(0)) goto 923::CD,76972:CD,76978:CD,76982:JM,87959:JM,87964:CD,76998:CD,77006:CD,77012:CD,77020:CD,77026:CD,77034:CD,77040:CD,77065:CD,77069:CD,77085:CD,77089:CD,77115:CD,77119:CD,77181:CD,77201:CD,77206:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,76444:JM,76959
76962 :: PRED :: IF :: Z :: if (v215 < v208) goto 870::CF,77226:CD,76950:CD,76954:CD,76959
76972 :: CALL :: call :: Ljava/lang/String :: v219 = p1 $line .substring(#(6), #(11))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76978 :: CALL :: call :: Ljava/lang/String :: v221 = v219.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
76982 :: CALL :: call :: I :: v223 = parseInt(v221)::JM,76562:JM,77144:JM,77160:JM,76954:JM,76650:JM,76959
76998 :: CALL :: call :: Ljava/lang/String :: v229 = v197.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,76959:JM,77119
77006 :: CALL :: call :: Ljava/lang/String :: v234 = p1 $line .substring(#(30), #(38))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77012 :: CALL :: call :: Ljava/lang/String :: v236 = v234.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77020 :: CALL :: call :: Ljava/lang/String :: v241 = p1 $line .substring(#(38), #(46))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77026 :: CALL :: call :: Ljava/lang/String :: v243 = v241.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77034 :: CALL :: call :: Ljava/lang/String :: v248 = p1 $line .substring(#(46), #(54))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77040 :: CALL :: call :: Ljava/lang/String :: v250 = v248.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77065 :: CALL :: call :: I :: v259 = p1 $line .length()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77069 :: PRED :: IF :: Z :: if (v259 <= #(59)) goto 1082::CD,77070:CD,77076:JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77070 :: CALL :: call :: Ljava/lang/String :: v263 = p1 $line .substring(#(54), #(60))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77076 :: CALL :: call :: Ljava/lang/String :: v265 = v263.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,76444:JM,77119:JM,76959
77085 :: CALL :: call :: I :: v273 = p1 $line .length()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77089 :: PRED :: IF :: Z :: if (v273 <= #(65)) goto 1115::CD,77090:CD,77096:JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77090 :: CALL :: call :: Ljava/lang/String :: v277 = p1 $line .substring(#(60), #(66))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77096 :: CALL :: call :: Ljava/lang/String :: v279 = v277.trim()::JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,76444:JM,77119:JM,76959
77115 :: CALL :: call :: I :: v289 = p1 $line .length()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77119 :: PRED :: IF :: Z :: if (v289 <= #(77)) goto 1168::CD,77120:CD,77126:CD,77130:CD,77136:CD,77140:CD,77144:CD,77172:JM,77089:JM,76562:JM,76407:JM,76920:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77120 :: CALL :: call :: Ljava/lang/String :: v314 = p1 $line .substring(#(76), #(78))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77126 :: CALL :: call :: Ljava/lang/String :: v316 = v314.trim()::JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,76444:JM,76959
77130 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v318 = valueOfIgnoreCase(v316)::CL,94283
77136 :: CALL :: call :: Ljava/lang/String :: v292 = v197.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,76959:JM,77119
77140 :: CALL :: call :: I :: v294 = v292.length()::JM,76562:JM,77144:JM,77160:JM,76954:JM,76650:JM,76959
77145 :: CALL :: call :: Ljava/lang/String :: v306 = v197.substring(#(0), #(1))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,76959:JM,77119
77144 :: PRED :: IF :: Z :: if (v294 != #(4)) goto 1192::CD,77145:CD,77152:CD,77156:CD,77160:JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,76954:JM,76650:JM,77069:JM,76444:JM,76959:JM,77119
77152 :: CALL :: call :: Ljava/lang/String :: v297 = v197.trim()::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,76959:JM,77119
77156 :: CALL :: call :: I :: v299 = v297.length()::JM,76562:JM,77144:JM,77160:JM,76954:JM,76650:JM,76959
77161 :: CALL :: call :: Ljava/lang/String :: v302 = v197.substring(#(0), #(2))::JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,76959:JM,77119
77160 :: PRED :: IF :: Z :: if (v299 <= #(1)) goto 1224::CD,77161:CD,77167:JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,76959:JM,77119
77167 :: CALL :: call :: Ljava/lang/String :: v304 = v302.trim()::JM,76562:JM,77144:JM,77160:JM,76954:JM,76650:JM,76959
77172 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v309 = valueOfIgnoreCase(v307)::CL,94283
77181 :: PRED :: IF :: Z :: if (v170 == #(null)) goto 1262::CD,77182:CD,77190
77182 :: CALL :: call :: V :: v170.addAtom(v224)::CL,94338
77190 :: CALL :: call :: V :: v323.addAtom(v224)::CL,94338
77201 :: CALL :: call :: Z :: v331 = v327.hasAtom(v329)::JM,77206:CL,54432
77206 :: PRED :: IF :: Z :: if (v331 != #(0)) goto 1300::CD,77210
77210 :: CALL :: call :: V :: v332.addAtom(v224)::CL,94338
77219 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1)::DD,77221
77221 :: EXPR :: assign :: null :: PHI v58 = v23, #(1), #(1)::DD,76618:JM,77089:JM,76562:JM,76407:JM,76920:JM,77144:JM,77160:JM,76954:JM,76650:JM,77069:JM,76444:JM,77119:JM,76959
77220 :: EXPR :: assign :: null :: PHI v45 = v37, v44::DD,76454:DD,76470
77225 :: EXPR :: assign :: null :: PHI v215 = #(0), v214::DD,76961:DD,76962
77224 :: EXPR :: assign :: null :: PHI v170 = #(null), #(null), v152, v152::DD,77181
77226 :: EXPR :: assign :: null :: PHI v216 = #(1), #(0)::DD,76963
77545 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SEQRES_Handler(java.lang.String)::CD,77550:CD,77556:CD,77560:CD,77566:CD,77572:CD,77576:CD,77584:CD,77592:CD,77597:CD,77602
77550 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(0), #(6))::JM,77602
77556 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,77602
77560 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(#(11), #(12))::JM,77602
77566 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(17))::JM,77602
77572 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::JM,77602
77576 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $line .substring(#(18))::JM,77602
77581 :: EXPR :: reference :: I :: v23 = p0 $this .lengthCheck::DD,77584
77585 :: CALL :: call :: I :: v26 = parseInt(v19)::JM,77602
77584 :: PRED :: IF :: Z :: if (v23 != #(-1)) goto 58::CF,77592:CD,77585:JM,77602
77592 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v27 = new java.util.StringTokenizer::JM,77687
77597 :: CALL :: call :: Z :: v32 = v9.equals(#(SEQRES))::JM,77602
77602 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 87::CD,77607:CD,77619:CD,77683:CD,77687:CD,77691:CD,77697:CD,77712:CD,77725
77607 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v35 = p0 $this .isKnownChain(v13, v33)::JM,77613:CL,93364
77613 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v35::
77616 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v36 = p0 $this .current_chain::DD,77619
77619 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 211::CD,77620:JM,86881:JM,86869:JM,86888:JM,86874:CD,77630:JM,77687
77620 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v37 = new org.biojava.nbio.structure.ChainImpl::DD,77624
77624 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v37::
77630 :: CALL :: call :: V :: v39.setChainID(v13)::CL,86912
77635 :: CALL :: call :: Ljava/lang/String :: v44 = v27.nextToken()::
77639 :: CALL :: call :: Ljava/lang/Character :: v46 = get1LetterCode(v44)::CL,93437
77643 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v49 = p0 $this .getNewGroup(#(ATOM), v46, v44)::JM,77650:CL,93506
77650 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v49::
77656 :: CALL :: call :: V :: v50.setPDBName(v44)::CL,93615:CL,93584
77660 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .current_group::DD,77663
77663 :: EXPR :: assign :: Z :: v53=v52 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,77664
77664 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 197::CD,77669
77669 :: CALL :: call :: V :: v55.setRecordType(#(SEQRES))::CL,94519
77679 :: CALL :: call :: V :: v57.addGroup(v58)::CL,87059
77683 :: CALL :: call :: Z :: v42 = v27.hasMoreTokens()::JM,77687
77687 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 129::CD,77635:CD,77639:CD,77643:CD,77656:CD,77663:CD,77664:CD,77679:CD,77683
77691 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v63 = p0 $this .isKnownChain(v13, v61)::JM,77697:CL,93364
77697 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 248::CD,77704
77698 :: EXPR :: reference :: Ljava/util/List :: v64 = p0 $this .seqResChains::
77701 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v65 = p0 $this .current_chain::
77704 :: CALL :: call :: Z :: v67 = v64.add(v65)::
77709 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v68 = p0 $this .current_group::DD,77712
77712 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 265::CD,77716
77716 :: CALL :: call :: V :: v69.trimToSize()::CL,93731
77725 :: CALL :: call :: I :: v72 = parseInt(v19)::JM,77602
77809 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MODEL_Handler(java.lang.String)::CD,77817:CD,77821
77817 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,77821:CL,82926
77821 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,77826
77823 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v8 = p0 $this .current_chain::DD,77826
77827 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v10 = p0 $this .current_group::DD,77830
77826 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 117::CD,77830:CD,77857:CD,77863:CD,77881:CD,77885
77830 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,77837:CD,77844
77837 :: CALL :: call :: V :: v11.addGroup(v12)::CL,87059
77844 :: CALL :: call :: V :: v14.trimToSize()::CL,93731
77857 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v21 = p0 $this .isKnownChain(v18, v19)::JM,77863:CL,93364
77863 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 84::CD,77870
77864 :: EXPR :: reference :: Ljava/util/List :: v22 = p0 $this .current_model::
77867 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v23 = p0 $this .current_chain::
77870 :: CALL :: call :: Z :: v25 = v22.add(v23)::
77881 :: CALL :: call :: V :: v26.addModel(v27)::CL,86312
77885 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::
77925 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HEADER_Handler(java.lang.String)::CD,77930:CD,77934:CD,77938:CD,77961:CD,77995:CD,78000:CD,78005:CD,78010:CD,78018:CD,78074:JM,77939:JM,78019:JM,78034:JM,78089:JM,77962
77930 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .trim()::JM,77939:JM,78019:JM,77938:JM,78018:JM,78034:JM,77961:JM,78089:JM,78074:JM,77962
77934 :: CALL :: call :: I :: v8 = v6.length()::JM,77939:JM,78019:JM,77938:JM,78018:JM,78034:JM,77961:JM,78089:JM,78074:JM,77962
77939 :: CALL :: call :: I :: v12 = min(v8, #(50))::JM,77939:JM,78019:JM,78018:JM,78034:JM,77961:JM,78089:JM,78074:JM,77962
77938 :: PRED :: IF :: Z :: if (v8 <= #(10)) goto 52::CD,77939:CD,77944:CD,77950:CD,77957:JM,78019:JM,78018:JM,78034:JM,78089:JM,78074:JM,77962:CF,77961
77944 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), v12)::JM,77939:JM,78019:JM,77938:JM,78018:JM,78034:JM,77961:JM,78089:JM,78074:JM,77962
77950 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::JM,77939:JM,78019:JM,78034:JM,77938:JM,78018:JM,77961:JM,78089:JM,78074:JM,77962
77957 :: CALL :: call :: V :: v17.setClassification(v16)::CL,94530
77961 :: PRED :: IF :: Z :: if (v8 <= #(50)) goto 131::CD,77962:CD,77967:CD,77973:CD,77988:JM,77939:JM,78019:JM,78034:JM,78089:JM,78074:CF,78018
77962 :: CALL :: call :: I :: v22 = min(v8, #(59))::JM,77939:JM,78019:JM,78018:JM,78034:JM,78089:JM,78074:JM,77962
77967 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(50), v22)::JM,77939:JM,78019:JM,77938:JM,78018:JM,78034:JM,77961:JM,78089:JM,78074:JM,77962
77973 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::JM,77939:JM,78019:JM,78034:JM,77938:JM,78018:JM,77961:JM,78089:JM,78074:JM,77962
77988 :: CALL :: call :: V :: v30.setDepDate(v29)::CL,94541
77995 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
78000 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v26)::JM,77939:JM,78019:JM,78034:JM,78089:JM,77962
78005 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#('. Will continue with...))::
78010 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
78019 :: CALL :: call :: I :: v50 = min(v8, #(66))::JM,77939:JM,78019:JM,78034:JM,78089:JM,78074:JM,77962
78018 :: PRED :: IF :: Z :: if (v8 <= #(62)) goto 210::CD,78019:CD,78024:CD,78030:CD,78039:CD,78047:CD,78052:CD,78070:JM,77939:JM,78034:JM,78089:JM,77962:CF,78074
78024 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $line .substring(#(62), v50)::JM,77939:JM,78019:JM,77938:JM,78018:JM,78034:JM,77961:JM,78089:JM,78074:JM,77962
78030 :: CALL :: call :: Ljava/lang/String :: v54 = v52.trim()::JM,77939:JM,78019:JM,78034:JM,77938:JM,78018:JM,77961:JM,78089:JM,78074:JM,77962
78034 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v54::
78039 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
78044 :: EXPR :: reference :: Ljava/lang/String :: v59 = p0 $this .pdbId::
78047 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v56.append(v59)::
78052 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
78070 :: CALL :: call :: V :: v67.setIdCode(v54)::CL,94552
78075 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .pdbId::JM,78089
78074 :: PRED :: IF :: Z :: if (v8 <= #(66)) goto 265::CD,78078:CD,78084:CD,78089
78078 :: CALL :: call :: Ljava/lang/String :: v74 = p1 $line .substring(#(72), #(76))::JM,77939:JM,78019:JM,77938:JM,78018:JM,78034:JM,77961:JM,78089:JM,78074:JM,77962
78084 :: CALL :: call :: Z :: v76 = v70.equals(v74)::JM,78089:JM,77939:JM,78019:JM,77938:JM,78018:JM,78034:JM,77961:JM,78074:JM,77962
78089 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 265::CD,78095:CD,78099:CD,78107:CD,78112:CD,78116
78095 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
78099 :: CALL :: call :: Ljava/lang/String :: v83 = valueOf(v81)::
78107 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v80.append(#( is a LEGACY entry - ...))::
78112 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
78116 :: CALL :: call :: V :: v79.println(v89)::
78181 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_AUTHOR_Handler(java.lang.String)::CD,78186:CD,78191:CD,78198:CD,78202
78186 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .substring(#(10))::
78191 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::
78198 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getAuthors()::JM,78202:CL,94563
78202 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 33::CF,78211:CD,78206:CD,78212:CD,78220:CD,78225:CD,78232
78206 :: CALL :: call :: V :: v23.setAuthors(v8)::CL,94572
78211 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
78212 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v11)::
78220 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v13.append(v8)::
78225 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
78232 :: CALL :: call :: V :: v21.setAuthors(v20)::CL,94572
78252 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TITLE_Handler(java.lang.String)::CD,78257:CD,78261:CD,78290:CD,78294:CD,78340:CD,78341:CD,78349:CD,78354:CD,78361:CD,78366
78257 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,78261:JM,78366
78261 :: PRED :: IF :: Z :: if (v5 <= #(79)) goto 28::CD,78262:CD,78268:CD,78273:CD,78277:CD,78283:CD,78366:JM,78261
78262 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(80))::JM,78261:JM,78366
78268 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::JM,78366
78273 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,78261:JM,78366
78277 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(10), v9)::JM,78261:JM,78366
78283 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,78366
78290 :: CALL :: call :: Ljava/lang/String :: v22 = v20.getTitle()::JM,78306:JM,78294:JM,78300:CL,94583
78295 :: CALL :: call :: Z :: v26 = v22.equals(#())::JM,78306:JM,78300
78294 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 116::CD,78295:CD,78300:JM,78306
78301 :: CALL :: call :: Z :: v30 = v22.endsWith(#(-))::JM,78306:JM,78300
78300 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 116::CD,78301:CD,78306:JM,78300
78307 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
78306 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 88::CF,78321:CF,78307:CD,78308:CD,78316:CD,78322:CD,78330:CD,78335
78308 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v22)::
78316 :: CALL :: call :: Ljava/lang/String :: v45 = v40.toString()::
78321 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
78322 :: CALL :: call :: Ljava/lang/String :: v33 = valueOf(v22)::
78330 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(#( ))::
78335 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
78341 :: CALL :: call :: Ljava/lang/String :: v49 = valueOf(v46)::
78340 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
78349 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v19)::
78354 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::
78361 :: CALL :: call :: V :: v55.setTitle(v54)::CL,94592
78366 :: EXPR :: assign :: null :: PHI v19 = v18, v13::
78402 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_JRNL_Handler(java.lang.String)::CD,78407:CD,78411:CD,78412:CD,78416:CD,78417:CD,78426:CD,78431:JM,78442
78407 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,78416:JM,78411:JM,78442:JM,78431
78411 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - #(8)::JM,78416:JM,78411:JM,78442:JM,78431
78412 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,78416:JM,78411:JM,78442:JM,78431
78417 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v7, v11)::JM,78416:JM,78411:JM,78442:JM,78431
78416 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 - #(4)::JM,78416:JM,78411:JM,78442:JM,78431
78423 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .pdbId::JM,78431
78426 :: CALL :: call :: Z :: v16 = v13.equals(v14)::JM,78442:JM,78431
78431 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 66::CD,78438:CD,78442:CD,78443:CD,78452:CD,78461
78438 :: CALL :: call :: I :: v25 = p1 $line .length()::JM,78416:JM,78411:JM,78442:JM,78431
78443 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(0), v26)::JM,78416:JM,78411:JM,78442:JM,78431
78442 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(8)::JM,78416:JM,78411:JM,78442:JM,78431
78449 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .journalLines::
78452 :: CALL :: call :: Z :: v31 = v29.add(v28)::JM,78431
78458 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .journalLines::
78461 :: CALL :: call :: Z :: v20 = v18.add(p1 $line )::JM,78416:JM,78411:JM,78442:JM,78431
78487 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_EXPDTA_Handler(java.lang.String)::CD,78492:CD,78496:CD,78517:CD,78522:CD,78537:CD,78540
78492 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,78496
78497 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), #(70))::JM,78496
78496 :: PRED :: IF :: Z :: if (v5 <= #(69)) goto 27::CD,78497:CD,78503:CD,78508:CD,78513:JM,78496
78503 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
78508 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $line .substring(#(10))::JM,78496
78513 :: CALL :: call :: Ljava/lang/String :: v11 = v9.trim()::
78517 :: CALL :: call :: [Ljava/lang/String :: v20 = v17.split(#(;\s+))::JM,78522
78522 :: EXPR :: assign :: I :: v21 = v20.length::DD,78537
78531 :: CALL :: call :: Z :: v26 = v24.setExperimentalTechnique(v23)::CL,94603
78537 :: PRED :: IF :: Z :: if (v29 < v21) goto 57::CD,78531:CD,78536:CD,78540
78536 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,78540
78540 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,78536:DD,78537
78566 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CRYST1_Handler(java.lang.String)::CD,78571:CD,78575:CD,78670:CD,78675:CD,78679:CD,78684:CD,78689:CD,78694:CD,78844:JM,78707:JM,78845
78571 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,78707:JM,78845:JM,78575
78575 :: PRED :: IF :: Z :: if (v5 >= #(63)) goto 31::CD,78583:CD,78589:CD,78597:CD,78603:CD,78611:CD,78617:CD,78625:CD,78631:CD,78639:CD,78645:CD,78653:CD,78659:CD,78703:CD,78707:CD,78738:CD,78743:CD,78748:CD,78753:CD,78758:CD,78763:CD,78767:CD,78771:CD,78791:CD,78795:CD,78845:JM,78575
78583 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(6), #(15))::JM,78707:JM,78845:JM,78575
78589 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,78707:JM,78845
78597 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(15), #(24))::JM,78707:JM,78845:JM,78575
78603 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,78707:JM,78845
78611 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $line .substring(#(24), #(33))::JM,78707:JM,78845:JM,78575
78617 :: CALL :: call :: Ljava/lang/String :: v27 = v25.trim()::JM,78707:JM,78845
78625 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(33), #(40))::JM,78707:JM,78845:JM,78575
78631 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::JM,78707:JM,78845
78639 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(40), #(47))::JM,78707:JM,78845:JM,78575
78645 :: CALL :: call :: Ljava/lang/String :: v41 = v39.trim()::JM,78707:JM,78845
78653 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $line .substring(#(47), #(54))::JM,78707:JM,78845:JM,78575
78659 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::JM,78707:JM,78845
78670 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
78675 :: CALL :: call :: Ljava/lang/String :: v57 = v51.getMessage()::
78679 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
78684 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v59.append(#() from line and ignor...))::
78689 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v62.append(p1 $line )::JM,78707:JM,78845:JM,78575
78694 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,78707:JM,78845
78703 :: CALL :: call :: I :: v69 = p1 $line .length()::JM,78707:JM,78845:JM,78575
78707 :: PRED :: IF :: Z :: if (v69 < #(66)) goto 194::CD,78708:CD,78714:CD,78719:CD,78723:CD,78729:CD,78845:JM,78707:JM,78575
78708 :: CALL :: call :: Ljava/lang/String :: v79 = p1 $line .substring(#(55), #(66))::JM,78707:JM,78845:JM,78575
78714 :: CALL :: call :: Ljava/lang/String :: v81 = v79.trim()::JM,78845
78719 :: CALL :: call :: I :: v73 = p1 $line .length()::JM,78707:JM,78845:JM,78575
78723 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(55), v73)::JM,78707:JM,78845:JM,78575
78729 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,78845
78738 :: CALL :: call :: V :: v83.setA(v85)::CL,94656
78743 :: CALL :: call :: V :: v83.setB(v87)::CL,94667
78748 :: CALL :: call :: V :: v83.setC(v89)::CL,94678
78753 :: CALL :: call :: V :: v83.setAlpha(v91)::CL,94689
78758 :: CALL :: call :: V :: v83.setBeta(v93)::CL,94709
78763 :: CALL :: call :: V :: v83.setGamma(v95)::CL,94729
78767 :: CALL :: call :: Z :: v98 = v83.isCellReasonable()::JM,78771:CL,94749
78771 :: PRED :: IF :: Z :: if (v98 != #(0)) goto 289::CD,78774:CD,78787
78774 :: CALL :: call :: Ljava/lang/Double :: v106 = valueOf(#(10.0 d))::JM,78774
78787 :: CALL :: call :: V :: v100.setCrystalCell(v83)::CL,94784
78791 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v109 = getSpaceGroup(v82)::JM,78795:CL,94795
78795 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 353::CD,78798:CD,78803:CD,78808:CD,78813:CD,78824:CD,78832:CD,78839
78798 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v116 = new java.lang.StringBuilder::
78803 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v116.append(v82)::
78808 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#(' not recognised as a...))::
78813 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
78824 :: CALL :: call :: V :: v127.setNonStandardSg(#(1))::CL,94874
78832 :: CALL :: call :: V :: v111.setSpaceGroup(v109)::CL,94885
78839 :: CALL :: call :: V :: v113.setNonStandardSg(#(0))::CL,94874
78845 :: EXPR :: assign :: null :: PHI v82 = v81, v77::
78844 :: EXPR :: assign :: Ljava/lang/Exception :: v51 = catch <exc>::
78920 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MTRIXn_Handler(java.lang.String)::CD,78925:CD,78929:JM,79170:JM,79093:JM,79002
78925 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,78929:JM,79170:JM,79093:JM,79002
78929 :: PRED :: IF :: Z :: if (v5 >= #(60)) goto 25::CD,78937:CD,78943:CD,78947:CD,78957:CD,78967:CD,78977:CD,78987:CD,78993:CD,78997:CD,79002:CD,79013:CD,79170:JM,78929:JM,79093
78937 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(5), #(6))::JM,78929:JM,79170:JM,79093:JM,79002
78943 :: CALL :: call :: I :: v12 = parseInt(v10)::JM,79170:JM,79093:JM,79002
78947 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(20))::JM,78929:JM,79170:JM,79093:JM,79002
78957 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(20), #(30))::JM,78929:JM,79170:JM,79093:JM,79002
78967 :: CALL :: call :: Ljava/lang/String :: v26 = p1 $line .substring(#(30), #(40))::JM,78929:JM,79170:JM,79093:JM,79002
78977 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(45), #(55))::JM,78929:JM,79170:JM,79093:JM,79002
78987 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(59), #(60))::JM,78929:JM,79170:JM,79093:JM,79002
78993 :: CALL :: call :: Ljava/lang/String :: v40 = v38.trim()::JM,79170:JM,79093:JM,79002
78997 :: CALL :: call :: Z :: v43 = v40.equals(#())::JM,79170:JM,79002
79003 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(59), #(60))::JM,78929:JM,79170:JM,79093:JM,79002
79002 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 122::CF,79170:CD,79003:CD,79009:JM,78929:JM,79093:JM,79002
79009 :: CALL :: call :: I :: v47 = parseInt(v45)::JM,79170:JM,79093:JM,79002
79013 :: PRED :: IF :: Z :: if (v48 != #(1)) goto 127::CD,79018:CD,79029:CD,79093
79015 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .ncsOperators::DD,79018
79019 :: NORM :: declaration :: Ljava/util/ArrayList :: v52 = new java.util.ArrayList::DD,79023
79018 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 145::CD,79019
79023 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ncsOperators = v52::
79026 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v54 = p0 $this .currentNcsOp::DD,79029
79029 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 179::CD,79030
79030 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v55 = new javax.vecmath.Matrix4d::DD,79050
79050 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .currentNcsOp = v55::
79093 :: PRED :: IF :: Z :: if (v12 != #(3)) goto 323::CD,79100
79094 :: EXPR :: reference :: Ljava/util/List :: v73 = p0 $this .ncsOperators::
79097 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v74 = p0 $this .currentNcsOp::
79100 :: CALL :: call :: Z :: v76 = v73.add(v74)::
79170 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,79013
79274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_Handler(java.lang.String)::CD,79279:CD,79365:CD,79370:CD,79375:CD,79380:CD,79385:CD,79422:CD,79515:JM,79284:JM,79335:JM,79302:JM,79291:JM,79438
79279 :: PRED :: IF :: Z :: if (p1 $line  == #(null)) goto 13::CD,79280:CD,79284:JM,79335:JM,79302:JM,79291:JM,79438
79280 :: CALL :: call :: I :: v6 = p1 $line .length()::JM,79284:JM,79335:JM,79302:JM,79291:JM,79438
79284 :: PRED :: IF :: Z :: if (v6 >= #(11)) goto 18::CD,79286:CD,79291:JM,79284:JM,79335:JM,79302:JM,79438
79286 :: CALL :: call :: Z :: v10 = p1 $line .startsWith(#(REMARK 800))::JM,79284:JM,79335:JM,79302:JM,79291:JM,79438
79291 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 36::CD,79292:CD,79297:CD,79302:JM,79284:JM,79335:JM,79291:JM,79438
79292 :: CALL :: call :: V :: p0 $this .pdb_REMARK_800_Handler(p1 $line )::CL,94896
79297 :: CALL :: call :: Z :: v14 = p1 $line .startsWith(#(REMARK 350))::JM,79284:JM,79335:JM,79302:JM,79291:JM,79438
79302 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 85::CD,79306:CD,79310:CD,79330:CD,79335:JM,79284:JM,79302:JM,79291:JM,79438
79306 :: CALL :: call :: Z :: v106 = v104.isParseBioAssembly()::JM,79310:CL,95297
79311 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v107 = p0 $this .bioAssemblyParser::DD,79314
79310 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 342::CD,79314:CD,79325
79314 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 71::JM,95329:JM,95316
79325 :: CALL :: call :: V :: v110.pdb_REMARK_350_Handler(p1 $line )::CL,95353
79330 :: CALL :: call :: Z :: v17 = p1 $line .startsWith(#(REMARK   3   FREE R VALUE))::JM,79284:JM,79335:JM,79302:JM,79291:JM,79438
79335 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 223::CD,79336:CD,79340:CD,79345:CD,79349:CD,79393:CD,79397:CD,79402:CD,79406:CD,79433:CD,79438:JM,79284:JM,79335:JM,79302:JM,79291
79336 :: CALL :: call :: Ljava/util/regex/Pattern :: v62 = compile(#(^REMARK   3   FREE R ...))::
79340 :: CALL :: call :: Ljava/util/regex/Matcher :: v64 = v62.matcher(p1 $line )::JM,79349
79345 :: CALL :: call :: Z :: v66 = v64.matches()::JM,79349
79349 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 166::CD,79350:JM,79349
79350 :: CALL :: call :: Ljava/lang/String :: v68 = v64.group(#(1))::JM,79349
79365 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
79370 :: CALL :: call :: Ljava/lang/String :: v77 = v64.group(#(1))::JM,79349
79375 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v73.append(v77)::
79380 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v79.append(#( does not look like a...))::
79385 :: CALL :: call :: Ljava/lang/String :: v84 = v82.toString()::
79393 :: CALL :: call :: Ljava/util/regex/Pattern :: v89 = compile(#(^REMARK   3   FREE R ...))::
79397 :: CALL :: call :: Ljava/util/regex/Matcher :: v91 = v89.matcher(p1 $line )::JM,79406
79402 :: CALL :: call :: Z :: v93 = v91.matches()::JM,79406
79407 :: CALL :: call :: Ljava/lang/String :: v95 = v91.group(#(1))::JM,79406
79406 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 342::CD,79407:JM,79406
79422 :: CALL :: call :: Ljava/lang/String :: v102 = v91.group(#(1))::JM,79406
79433 :: CALL :: call :: Z :: v20 = p1 $line .startsWith(#(REMARK   3   RESOLUTI...))::JM,79284:JM,79335:JM,79302:JM,79291:JM,79438
79439 :: CALL :: call :: Ljava/util/regex/Pattern :: v23 = compile(#(^REMARK   3   RESOLUT...))::
79438 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 342::CD,79439:CD,79443:CD,79448:CD,79452
79443 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v23.matcher(p1 $line )::JM,79452
79448 :: CALL :: call :: Z :: v27 = v25.matches()::JM,79452
79453 :: CALL :: call :: Ljava/lang/String :: v30 = v25.group(#(1))::JM,79452
79452 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 342::CD,79453:CD,79465:CD,79469:CD,79470:CD,79508:JM,79452
79465 :: CALL :: call :: F :: v35 = v33.getResolution()::JM,79469:CL,95529
79469 :: EXPR :: assign :: Z :: v37 = v35 < #(99.0 f)::DD,79470
79470 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 313::CD,79473:CD,79482:CD,79486:CD,79494
79473 :: CALL :: call :: Ljava/lang/String :: v41 = v25.group(#(1))::JM,79452
79482 :: CALL :: call :: F :: v46 = v44.getResolution()::JM,79486:CL,95529
79486 :: CALL :: call :: Ljava/lang/Float :: v48 = valueOf(v46)::JM,79486
79494 :: CALL :: call :: Ljava/lang/String :: v50 = format(#(%4.2f), v43)::
79508 :: CALL :: call :: V :: v52.setResolution(v32)::CL,95538
79515 :: CALL :: call :: Ljava/lang/String :: v58 = v25.group(#(1))::JM,79452
79599 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CONECT_Handler(java.lang.String)::CD,79607:CD,79798:CD,79803:CD,79807:CD,79812:CD,79817:CD,79822:CD,79832
79604 :: EXPR :: reference :: Z :: v4 = p0 $this .atomOverflow::DD,79607
79607 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 9::CD,79612:CD,79616
79612 :: CALL :: call :: Z :: v8 = v6.isHeaderOnly()::JM,79616:CL,82926
79616 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,79618:CD,79624:CD,79628:CD,79632:CD,79639:CD,79646:CD,79653:CD,79660:CD,79667:CD,79674:CD,79681:CD,79688:CD,79695:CD,79702:CD,79711:CD,79717:CD,79724:CD,79731:CD,79738:CD,79745:CD,79752:CD,79759:CD,79766:CD,79773:CD,79780:CD,79790
79618 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .substring(#(6), #(11))::
79624 :: CALL :: call :: Ljava/lang/String :: v14 = v12.trim()::
79628 :: CALL :: call :: I :: v16 = parseInt(v14)::
79632 :: CALL :: call :: Ljava/lang/Integer :: v19 = p0 $this .conect_helper(p1 $line , #(11), #(16))::JM,79717:CL,95549
79639 :: CALL :: call :: Ljava/lang/Integer :: v22 = p0 $this .conect_helper(p1 $line , #(16), #(21))::JM,79724:CL,95549
79646 :: CALL :: call :: Ljava/lang/Integer :: v25 = p0 $this .conect_helper(p1 $line , #(21), #(26))::JM,79731:CL,95549
79653 :: CALL :: call :: Ljava/lang/Integer :: v28 = p0 $this .conect_helper(p1 $line , #(26), #(31))::JM,79738:CL,95549
79660 :: CALL :: call :: Ljava/lang/Integer :: v31 = p0 $this .conect_helper(p1 $line , #(31), #(36))::JM,79745:CL,95549
79667 :: CALL :: call :: Ljava/lang/Integer :: v34 = p0 $this .conect_helper(p1 $line , #(36), #(41))::JM,79752:CL,95549
79674 :: CALL :: call :: Ljava/lang/Integer :: v37 = p0 $this .conect_helper(p1 $line , #(41), #(46))::JM,79759:CL,95549
79681 :: CALL :: call :: Ljava/lang/Integer :: v40 = p0 $this .conect_helper(p1 $line , #(46), #(51))::JM,79766:CL,95549
79688 :: CALL :: call :: Ljava/lang/Integer :: v43 = p0 $this .conect_helper(p1 $line , #(51), #(56))::JM,79773:CL,95549
79695 :: CALL :: call :: Ljava/lang/Integer :: v46 = p0 $this .conect_helper(p1 $line , #(56), #(61))::JM,79780:CL,95549
79702 :: NORM :: declaration :: Ljava/util/HashMap :: v47 = new java.util.HashMap::
79711 :: CALL :: call :: Ljava/lang/Object :: v53 = v47.put(#(atomserial), v50)::
79717 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 185::CD,79718:CF,79724
79718 :: CALL :: call :: Ljava/lang/Object :: v57 = v47.put(#(bond1), v19)::
79725 :: CALL :: call :: Ljava/lang/Object :: v60 = v47.put(#(bond2), v22)::
79724 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 201::CD,79725:CF,79731
79731 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 217::CD,79732:CF,79738
79732 :: CALL :: call :: Ljava/lang/Object :: v63 = v47.put(#(bond3), v25)::
79739 :: CALL :: call :: Ljava/lang/Object :: v66 = v47.put(#(bond4), v28)::
79738 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 233::CD,79739:CF,79745
79745 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 249::CD,79746:CF,79752
79746 :: CALL :: call :: Ljava/lang/Object :: v69 = v47.put(#(hydrogen1), v31)::
79753 :: CALL :: call :: Ljava/lang/Object :: v72 = v47.put(#(hydrogen2), v34)::
79752 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 265::CD,79753:CF,79759
79759 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 281::CD,79760:CF,79766
79760 :: CALL :: call :: Ljava/lang/Object :: v75 = v47.put(#(salt1), v37)::
79767 :: CALL :: call :: Ljava/lang/Object :: v78 = v47.put(#(hydrogen3), v40)::
79766 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 297::CD,79767:CF,79773
79773 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 313::CD,79774:CF,79780
79774 :: CALL :: call :: Ljava/lang/Object :: v81 = v47.put(#(hydrogen4), v43)::
79781 :: CALL :: call :: Ljava/lang/Object :: v84 = v47.put(#(salt2), v46)::
79780 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 328::CD,79781
79787 :: EXPR :: reference :: Ljava/util/List :: v85 = p0 $this .connects::
79790 :: CALL :: call :: Z :: v87 = v85.add(v47)::
79798 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
79803 :: CALL :: call :: Ljava/lang/String :: v94 = v88.getMessage()::
79807 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
79812 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#(), at line : ))::
79817 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(p1 $line )::
79822 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
79832 :: EXPR :: assign :: Ljava/lang/Exception :: v88 = catch <exc>::
79962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REVDAT_Handler(java.lang.String)::CD,79970:CD,79974:CD,80014:CD,80019:CD,80024:CD,80029
79970 :: CALL :: call :: Ljava/util/Date :: v6 = v4.getModDate()::JM,79974:CL,95599
79975 :: NORM :: declaration :: Ljava/util/Date :: v8 = new java.util.Date::
79974 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,79975:CD,79980:CD,79985:CD,79986:CD,79992:CD,80007
79980 :: CALL :: call :: Z :: v12 = v6.equals(v8)::JM,79985
79985 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 94::CD,79986:CD,79992:CD,80007
79986 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(22))::
79992 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::
80007 :: CALL :: call :: V :: v23.setModDate(v22)::CL,95635
80014 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
80019 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v27.append(v19)::
80024 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#('. Will continue with...))::
80029 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
80057 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_DBREF_Handler(java.lang.String)::CD,80082:CD,80277
80082 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v13 = new org.biojava.nbio.structure.DBRef::
80274 :: EXPR :: reference :: Ljava/util/List :: v103 = p0 $this .dbrefs::
80277 :: CALL :: call :: Z :: v105 = v103.add(v13)::
80382 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SITE_Handler(java.lang.String)::CD,80390:CD,80394:JM,80846
80390 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,80394:CL,82926
80394 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 11::CD,80398:CD,80403:CD,80408:CD,80416:CD,80425:CD,80430:CD,80431:CD,80436:CD,80440:CD,80445:CD,80447:CD,80448:CD,80525:CD,80534:CD,80735:CD,80741:CD,80746:CD,80749:CD,80757:CD,80761:CD,80765:CD,80770:CD,80775:CD,80786:CD,80790:CD,80837:CD,80841:CD,80843:CD,80844:CD,80845:CD,80846
80398 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
80403 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $line )::JM,80846
80408 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,80846
80416 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(11), #(14))::JM,80846
80425 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v20)::JM,80430
80431 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 69::CD,80843
80430 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,80431:DD,80845
80436 :: CALL :: call :: Ljava/lang/String :: v30 = v20.trim()::JM,80846
80440 :: CALL :: call :: Z :: v32 = v28.containsKey(v30)::JM,80445
80445 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 89::CD,80844
80447 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v27 || v33::DD,80448
80449 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::DD,80845
80448 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 181::CF,80845:CF,80449:CD,80456:CD,80460:CD,80477:CD,80488:CD,80496:CD,80500:CD,80505:CD,80510
80456 :: CALL :: call :: Ljava/lang/String :: v39 = v20.trim()::JM,80846
80460 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.put(v39, v35)::
80477 :: CALL :: call :: Ljava/lang/String :: v47 = format(#(New Site made: %s %s), v45)::
80488 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
80493 :: EXPR :: reference :: Ljava/util/Map :: v53 = p0 $this .siteMap::
80496 :: CALL :: call :: I :: v55 = v53.size()::
80500 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v50.append(v55)::
80505 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v57.append(#( sites))::
80510 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
80525 :: CALL :: call :: Ljava/lang/String :: v69 = format(#(SiteId: %s), v67)::
80534 :: CALL :: call :: Ljava/lang/String :: v73 = p1 $line .substring(#(18))::JM,80846
80542 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
80547 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v76)::JM,80746
80552 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::JM,80746
80557 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
80565 :: CALL :: call :: Ljava/lang/String :: v94 = v76.substring(#(0), #(3))::JM,80746
80571 :: CALL :: call :: Ljava/lang/Character :: v96 = get1LetterCode(v94)::JM,80575:CL,93437
80575 :: PRED :: IF :: Z :: if (v96 == #(null)) goto 289::CD,80576:JM,80746
80576 :: CALL :: call :: Ljava/lang/Character :: v99 = valueOf(#(88))::
80586 :: CALL :: call :: Ljava/lang/String :: v106 = v76.substring(#(4), #(5))::JM,80746
80592 :: CALL :: call :: Ljava/lang/String :: v109 = v76.substring(#(5), #(9))::JM,80746
80598 :: CALL :: call :: Ljava/lang/String :: v111 = v109.trim()::JM,80746
80602 :: CALL :: call :: Ljava/lang/Integer :: v113 = valueOf(v111)::
80606 :: CALL :: call :: Ljava/lang/String :: v115 = v76.substring(#(9), #(10))::JM,80746
80612 :: CALL :: call :: C :: v117 = v115.charAt(#(0))::JM,80746
80617 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(v117)::
80640 :: CALL :: call :: Ljava/lang/String :: v124 = format(#(Site: %s: 'resName:%s...), v122)::
80649 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v126 = new org.biojava.nbio.structure.ResidueNumber::
80655 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v129 = new java.lang.StringBuilder::
80660 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v129.append(v113)::
80665 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v119)::
80670 :: CALL :: call :: Ljava/lang/StringBuilder :: v137 = v135.append(#('))::
80675 :: CALL :: call :: Ljava/lang/String :: v139 = v137.toString()::
80683 :: CALL :: call :: V :: v126.setChainId(v106)::CL,86497
80687 :: CALL :: call :: V :: v126.setSeqNum(v113)::CL,95873
80691 :: CALL :: call :: V :: v126.setInsCode(v119)::CL,95884
80695 :: CALL :: call :: Z :: v145 = v64.add(v126)::
80702 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
80707 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v126)::
80712 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(#( to site ))::
80717 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(v20)::JM,80846
80722 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
80730 :: CALL :: call :: Ljava/lang/String :: v161 = v162.substring(#(11))::JM,80846
80735 :: CALL :: call :: Ljava/lang/String :: v76 = v162.substring(#(0), #(10))::JM,80746
80741 :: CALL :: call :: Z :: v79 = v76.equals(#(          ))::JM,80746
80746 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 216::CD,80542:CD,80547:CD,80552:CD,80557:CD,80565:CD,80571:CD,80575:CD,80586:CD,80592:CD,80598:CD,80602:CD,80606:CD,80612:CD,80617:CD,80640:CD,80649:CD,80655:CD,80660:CD,80665:CD,80670:CD,80675:CD,80683:CD,80687:CD,80691:CD,80695:CD,80702:CD,80707:CD,80712:CD,80717:CD,80722:CD,80730:CD,80735:CD,80741:CD,80846
80749 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
80754 :: EXPR :: reference :: Ljava/util/Map :: v168 = p0 $this .siteToResidueMap::
80757 :: CALL :: call :: Ljava/util/Set :: v170 = v168.keySet()::
80761 :: CALL :: call :: I :: v172 = v170.size()::
80765 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v165.append(v172)::
80770 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v174.append(#( sites):))::
80775 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
80783 :: EXPR :: reference :: Ljava/util/Map :: v181 = p0 $this .siteToResidueMap::JM,80841
80786 :: CALL :: call :: Ljava/util/Set :: v183 = v181.keySet()::JM,80841
80790 :: CALL :: call :: Ljava/util/Iterator :: v185 = v183.iterator()::JM,80841
80795 :: CALL :: call :: Ljava/lang/Object :: v189 = v185.next()::JM,80841
80803 :: CALL :: call :: Ljava/lang/String :: v194 = valueOf(v190)::
80802 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v192 = new java.lang.StringBuilder::
80811 :: CALL :: call :: Ljava/lang/StringBuilder :: v198 = v192.append(#( : ))::
80819 :: CALL :: call :: Ljava/lang/Object :: v201 = v199.get(v190)::
80824 :: CALL :: call :: Ljava/lang/StringBuilder :: v203 = v198.append(v201)::
80829 :: CALL :: call :: Ljava/lang/String :: v205 = v203.toString()::
80837 :: CALL :: call :: Z :: v187 = v185.hasNext()::JM,80841
80841 :: PRED :: IF :: Z :: if (v187 != #(0)) goto 568::CD,80795:CD,80802:CD,80803:CD,80811:CD,80819:CD,80824:CD,80829:CD,80837:JM,80841
80843 :: EXPR :: assign :: null :: PHI v27 = #(1), #(0)::DD,80447
80845 :: EXPR :: assign :: null :: PHI v64 = v24, v35::
80844 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::CF,80447
80846 :: EXPR :: assign :: null :: PHI v162 = v73, v161::JM,80846:JM,80746
80986 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SSBOND_Handler(java.lang.String)::CD,80994:CD,80998:JM,81104:JM,81060:JM,81092:JM,81098:JM,81004:JM,81086
80994 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,80998:CL,82926
80998 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,81000:CD,81004:JM,81104:JM,81060:JM,81092:JM,81098:JM,81086
81000 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,81104:JM,81060:JM,81092:JM,81098:JM,81004:JM,81086
81004 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,81012:CD,81018:CD,81024:CD,81028:CD,81034:CD,81040:CD,81046:CD,81050:CD,81056:CD,81060:JM,81104:JM,81092:JM,81098:JM,81004:JM,81086
81012 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(16))::JM,81104:JM,81060:JM,81092:JM,81098:JM,81004:JM,81086
81018 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(17), #(21))::JM,81104:JM,81060:JM,81092:JM,81098:JM,81004:JM,81086
81024 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,81104:JM,81060:JM,81092:JM,81098:JM,81086
81028 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(21), #(22))::JM,81104:JM,81060:JM,81092:JM,81098:JM,81004:JM,81086
81034 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(29), #(30))::JM,81104:JM,81060:JM,81092:JM,81098:JM,81004:JM,81086
81040 :: CALL :: call :: Ljava/lang/String :: v31 = p1 $line .substring(#(31), #(35))::JM,81104:JM,81060:JM,81092:JM,81098:JM,81004:JM,81086
81046 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::JM,81104:JM,81060:JM,81092:JM,81098:JM,81086
81050 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $line .substring(#(35), #(36))::JM,81104:JM,81060:JM,81092:JM,81098:JM,81004:JM,81086
81056 :: CALL :: call :: I :: v37 = p1 $line .length()::JM,81104:JM,81060:JM,81092:JM,81098:JM,81004:JM,81086
81061 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $line .substring(#(59), #(65))::JM,81104:JM,81060:JM,81092:JM,81098:JM,81004:JM,81086
81060 :: PRED :: IF :: Z :: if (v37 < #(72)) goto 231::CD,81061:CD,81067:CD,81071:CD,81077:CD,81081:CD,81086:CD,81162:CD,81193:JM,81104:JM,81060:JM,81092:JM,81098:JM,81004
81067 :: CALL :: call :: Ljava/lang/String :: v44 = v42.trim()::JM,81104:JM,81092:JM,81098:JM,81086
81071 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(66), #(72))::JM,81104:JM,81060:JM,81092:JM,81098:JM,81004:JM,81086
81077 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,81104:JM,81092:JM,81098:JM,81086
81081 :: CALL :: call :: Z :: v52 = v44.equals(#())::JM,81104:JM,81092:JM,81098:JM,81086
81087 :: CALL :: call :: Z :: v54 = v49.equals(#())::JM,81104:JM,81092:JM,81098:JM,81086
81086 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 231::CD,81087:CD,81092:CD,81162:CD,81193:JM,81104:JM,81098:JM,81086
81093 :: CALL :: call :: Z :: v57 = v44.equals(#(1555))::JM,81104:JM,81092:JM,81098:JM,81086
81092 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 231::CD,81093:CD,81098:CD,81162:CD,81193:JM,81104:JM,81092:JM,81086
81099 :: CALL :: call :: Z :: v59 = v49.equals(#(1555))::JM,81104:JM,81092:JM,81098:JM,81086
81098 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 175::CD,81099:CD,81104:CD,81107:CD,81108:CD,81116:CD,81121:CD,81125:CD,81126:CD,81134:CD,81139:JM,81092:JM,81098:JM,81086
81104 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 231::CD,81107:CD,81108:CD,81116:CD,81121:CD,81125:CD,81126:CD,81134:CD,81139:CD,81162:CD,81193
81107 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
81108 :: CALL :: call :: Ljava/lang/String :: v82 = valueOf(v20)::
81116 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v23)::JM,81104:JM,81060:JM,81092:JM,81098:JM,81086
81121 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::JM,81104:JM,81092:JM,81098:JM,81086
81125 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v88 = new java.lang.StringBuilder::
81126 :: CALL :: call :: Ljava/lang/String :: v90 = valueOf(v33)::
81134 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v88.append(v35)::JM,81104:JM,81060:JM,81092:JM,81098:JM,81086
81139 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::JM,81104:JM,81092:JM,81098:JM,81086
81162 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/SSBondImpl :: v67 = new org.biojava.nbio.structure.io.SSBondImpl::
81190 :: EXPR :: reference :: Ljava/util/List :: v75 = p0 $this .ssbonds::
81193 :: CALL :: call :: Z :: v77 = v75.add(v67)::
81286 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_LINK_Handler(java.lang.String)::CD,81294:CD,81298
81294 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,81298:CL,82926
81298 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 16::CD,81300:CD,81306:CD,81310:CD,81316:CD,81320:CD,81326:CD,81330:CD,81336:CD,81340:CD,81346:CD,81350:CD,81356:CD,81360:CD,81366:CD,81370:CD,81376:CD,81380:CD,81386:CD,81390:CD,81396:CD,81400:CD,81406:CD,81410:CD,81416:CD,81420:CD,81426:CD,81430:CD,81436:CD,81443:CD,81461
81300 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(12), #(16))::
81306 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::
81310 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(16), #(17))::
81316 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::
81320 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(17), #(20))::
81326 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::
81330 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(21), #(22))::
81336 :: CALL :: call :: Ljava/lang/String :: v29 = v27.trim()::
81340 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(22), #(26))::
81346 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
81350 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $line .substring(#(26), #(27))::
81356 :: CALL :: call :: Ljava/lang/String :: v39 = v37.trim()::
81360 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(42), #(46))::
81366 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
81370 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(46), #(47))::
81376 :: CALL :: call :: Ljava/lang/String :: v50 = v48.trim()::
81380 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $line .substring(#(47), #(50))::
81386 :: CALL :: call :: Ljava/lang/String :: v55 = v53.trim()::
81390 :: CALL :: call :: Ljava/lang/String :: v59 = p1 $line .substring(#(51), #(52))::
81396 :: CALL :: call :: Ljava/lang/String :: v61 = v59.trim()::
81400 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(52), #(56))::
81406 :: CALL :: call :: Ljava/lang/String :: v66 = v64.trim()::
81410 :: CALL :: call :: Ljava/lang/String :: v69 = p1 $line .substring(#(56), #(57))::
81416 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::
81420 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(59), #(65))::
81426 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::
81430 :: CALL :: call :: Ljava/lang/String :: v81 = p1 $line .substring(#(66), #(72))::
81436 :: CALL :: call :: Ljava/lang/String :: v83 = v81.trim()::
81440 :: EXPR :: reference :: Ljava/util/List :: v84 = p0 $this .linkRecords::
81443 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/util/PDBTemporaryStorageUtils$LinkRecord :: v85 = new org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils$LinkRecord::
81461 :: CALL :: call :: Z :: v88 = v84.add(v85)::
81543 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::JM,70680:JM,70761
81542 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::CE,81543:CD,81549
81546 :: EXPR :: reference :: Z :: v3 = p0 $this .parseSecStruc::DD,81549
81549 :: NORM :: compound :: Z :: return v3::CF,81543
81551 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HELIX_Handler(java.lang.String)::CD,81559:CD,81563:JM,81569
81559 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,81563:CL,82926
81563 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,81565:CD,81569
81565 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,81569
81569 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,81577:CD,81583:CD,81587:CD,81593:CD,81599:CD,81603:CD,81609:CD,81615:CD,81619:CD,81625:CD,81631:CD,81635:CD,81641:CD,81645:CD,81651:CD,81657:CD,81663:CD,81669:CD,81675:CD,81681:CD,81687:CD,81696:JM,81569
81577 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,81569
81583 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
81587 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,81569
81593 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(21), #(25))::JM,81569
81599 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::
81603 :: CALL :: call :: Ljava/lang/String :: v29 = p1 $line .substring(#(25), #(26))::JM,81569
81609 :: CALL :: call :: Ljava/lang/String :: v33 = p1 $line .substring(#(27), #(30))::JM,81569
81615 :: CALL :: call :: Ljava/lang/String :: v35 = v33.trim()::
81619 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(31), #(32))::JM,81569
81625 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(33), #(37))::JM,81569
81631 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
81635 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(37), #(38))::JM,81569
81641 :: NORM :: declaration :: Ljava/util/HashMap :: v48 = new java.util.HashMap::
81645 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.put(#(initResName), v16)::
81651 :: CALL :: call :: Ljava/lang/Object :: v55 = v48.put(#(initChainId), v20)::
81657 :: CALL :: call :: Ljava/lang/Object :: v58 = v48.put(#(initSeqNum), v26)::
81663 :: CALL :: call :: Ljava/lang/Object :: v61 = v48.put(#(initICode), v29)::
81669 :: CALL :: call :: Ljava/lang/Object :: v64 = v48.put(#(endResName), v35)::
81675 :: CALL :: call :: Ljava/lang/Object :: v67 = v48.put(#(endChainId), v39)::
81681 :: CALL :: call :: Ljava/lang/Object :: v70 = v48.put(#(endSeqNum), v45)::
81687 :: CALL :: call :: Ljava/lang/Object :: v73 = v48.put(#(endICode), v47)::
81693 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .helixList::
81696 :: CALL :: call :: Z :: v76 = v74.add(v48)::
81777 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SHEET_Handler(java.lang.String)::CD,81785:CD,81789:JM,81795
81785 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,81789:CL,82926
81789 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,81791:CD,81795
81791 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,81795
81795 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,81803:CD,81809:CD,81813:CD,81819:CD,81825:CD,81829:CD,81835:CD,81841:CD,81845:CD,81851:CD,81857:CD,81861:CD,81867:CD,81871:CD,81877:CD,81883:CD,81889:CD,81895:CD,81901:CD,81907:CD,81913:CD,81922:JM,81795
81803 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(17), #(20))::JM,81795
81809 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
81813 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(21), #(22))::JM,81795
81819 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(22), #(26))::JM,81795
81825 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
81829 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(26), #(27))::JM,81795
81835 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(28), #(31))::JM,81795
81841 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
81845 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(32), #(33))::JM,81795
81851 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(33), #(37))::JM,81795
81857 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
81861 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(37), #(38))::JM,81795
81867 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
81871 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
81877 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
81883 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
81889 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
81895 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
81901 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
81907 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
81913 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
81919 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .strandList::
81922 :: CALL :: call :: Z :: v74 = v72.add(v46)::
82003 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TURN_Handler(java.lang.String)::CD,82011:CD,82015:JM,82021
82011 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,82015:CL,82926
82015 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,82017:CD,82021
82017 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,82021
82021 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,82029:CD,82035:CD,82039:CD,82045:CD,82051:CD,82055:CD,82061:CD,82067:CD,82071:CD,82077:CD,82083:CD,82087:CD,82093:CD,82097:CD,82103:CD,82109:CD,82115:CD,82121:CD,82127:CD,82133:CD,82139:CD,82148:JM,82021
82029 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,82021
82035 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
82039 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,82021
82045 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(20), #(24))::JM,82021
82051 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
82055 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(24), #(25))::JM,82021
82061 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(26), #(29))::JM,82021
82067 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
82071 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(30), #(31))::JM,82021
82077 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(31), #(35))::JM,82021
82083 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
82087 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(35), #(36))::JM,82021
82093 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
82097 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
82103 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
82109 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
82115 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
82121 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
82127 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
82133 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
82139 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
82145 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .turnList::
82148 :: CALL :: call :: Z :: v74 = v72.add(v46)::
82229 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.makeCompounds(java.util.List,java.util.List)::CD,82235:CD,82263:CD,82267:CD,82271:CD,82275:CD,82296:CD,82324:CD,82328
82235 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $compoundList .iterator()::JM,82328:JM,82267
82240 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,82328:JM,82267
82259 :: CALL :: call :: V :: p0 $this .pdb_COMPND_Handler(v12)::CL,96068
82263 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,82328:JM,82267
82267 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,82240:CD,82259:CD,82263:JM,82328:JM,82267
82268 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .compounds::JM,82275
82271 :: CALL :: call :: I :: v22 = v20.size()::JM,82275
82275 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 88::JM,96774:JM,96767:CD,82287
82284 :: EXPR :: reference :: Ljava/util/List :: v23 = p0 $this .compounds::
82287 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.get(#(0))::
82296 :: CALL :: call :: Ljava/util/Iterator :: v30 = p2 $sourceList .iterator()::JM,82328:JM,82267
82301 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,82328:JM,82267
82320 :: CALL :: call :: V :: p0 $this .pdb_SOURCE_Handler(v35)::CL,96878
82324 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,82328:JM,82267
82328 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 116::CD,82301:CD,82320:CD,82324:JM,82328:JM,82267
82365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.triggerEndFileChecks()::CD,82376:CD,82381:CD,82386:CD,82410:CD,82452:CD,82456:CD,82476:CD,82486:CD,82496:CD,82506:CD,82516:CD,82523:CD,82527:CD,82585:CD,82595:CD,82602:CD,82606:CD,82613:CD,82631:CD,82667:CD,82668:CD,82729
82376 :: NORM :: declaration :: Ljava/util/Date :: v6 = new java.util.Date::
82381 :: CALL :: call :: Z :: v10 = v5.equals(v6)::JM,82386
82386 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 48::CD,82394:CD,82399
82394 :: CALL :: call :: Z :: v16 = v14.equals(v5)::JM,82399
82399 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 48::CD,82403
82403 :: CALL :: call :: V :: v17.setDepDate(v14)::CL,94541
82407 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v19 = p0 $this .current_chain::DD,82410
82410 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 102::CD,82417:CD,82431:CD,82437
82417 :: CALL :: call :: V :: v21.addGroup(v22)::CL,87059
82431 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v29 = p0 $this .isKnownChain(v26, v27)::JM,82437:CL,93364
82437 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 102::CD,82444
82438 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .current_model::
82441 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v31 = p0 $this .current_chain::
82444 :: CALL :: call :: Z :: v33 = v30.add(v31)::
82449 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .journalLines::JM,82456
82452 :: CALL :: call :: Z :: v36 = v34.isEmpty()::JM,82456
82457 :: CALL :: call :: V :: p0 $this .buildjournalArticle()::CL,97544
82456 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 129::CD,82457:CD,82466
82466 :: CALL :: call :: V :: v38.setJournalArticle(v39)::CL,98508
82476 :: CALL :: call :: V :: v41.addModel(v42)::CL,86312
82486 :: CALL :: call :: V :: v44.setPDBHeader(v45)::CL,86047
82496 :: CALL :: call :: V :: v47.setCrystallographicInfo(v48)::CL,98519
82506 :: CALL :: call :: V :: v50.setConnections(v51)::CL,98534
82516 :: CALL :: call :: V :: v53.setDBRefs(v54)::CL,86077
82523 :: CALL :: call :: Z :: v58 = v56.isAlignSeqRes()::JM,82527:CL,98545
82527 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 247::CD,82531:CD,82535:CD,82577
82531 :: CALL :: call :: Z :: v61 = v59.isHeaderOnly()::JM,82535:CL,82926
82535 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 247::CD,82552:CD,82577
82552 :: CALL :: call :: V :: v74.align(v76, v77)::CL,98576
82577 :: CALL :: call :: V :: storeUnAlignedSeqRes(v65, v66, v69)::CL,98632
82585 :: CALL :: call :: V :: p0 $this .linkChains2Compound(v79)::CL,98775
82595 :: CALL :: call :: V :: v81.setCompounds(v82)::CL,86261
82602 :: CALL :: call :: Z :: v86 = v84.isHeaderOnly()::JM,82606:CL,82926
82607 :: CALL :: call :: V :: p0 $this .linkSitesToGroups()::CL,99212
82606 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 312::CD,82607
82610 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v88 = p0 $this .bioAssemblyParser::DD,82613
82613 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 333::CD,82624
82624 :: CALL :: call :: V :: v89.setBioAssemblies(v92)::CL,99579
82628 :: EXPR :: reference :: Ljava/util/List :: v94 = p0 $this .ncsOperators::DD,82631
82631 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 383::CD,82635:CD,82639
82632 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .ncsOperators::JM,82639
82635 :: CALL :: call :: I :: v97 = v95.size()::JM,82639
82639 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 383::CD,82649:CD,82653:CD,82654:CD,82660
82643 :: EXPR :: reference :: Ljava/util/List :: v99 = p0 $this .ncsOperators::
82646 :: EXPR :: reference :: Ljava/util/List :: v100 = p0 $this .ncsOperators::JM,82653
82649 :: CALL :: call :: I :: v102 = v100.size()::JM,82653
82653 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v103 = new javax.vecmath.Matrix4d[]::
82654 :: CALL :: call :: [Ljava/lang/Object :: v105 = v99.toArray(v103)::
82660 :: CALL :: call :: V :: v98.setNcsOperators(v106)::CL,99590
82664 :: EXPR :: reference :: F :: v108 = p0 $this .rfreeNoCutoffLine::DD,82667
82667 :: EXPR :: assign :: Z :: v110 = v108 < #(0.0 f)::DD,82668
82669 :: EXPR :: reference :: F :: v111 = p0 $this .rfreeStandardLine::DD,82672
82668 :: PRED :: IF :: Z :: if (v110 <= #(0)) goto 415::CD,82672:CD,82673:CD,82688:CD,82689
82673 :: PRED :: IF :: Z :: if (v112 >= #(0)) goto 415::CD,82680:CD,82688:CD,82689
82672 :: EXPR :: assign :: Z :: v112 = v111 > #(0.0 f)::DD,82673
82680 :: CALL :: call :: V :: v127.setRfree(v128)::CL,99601
82685 :: EXPR :: reference :: F :: v113 = p0 $this .rfreeNoCutoffLine::DD,82688
82689 :: PRED :: IF :: Z :: if (v114 <= #(0)) goto 447::CD,82693:CD,82694:CD,82709:CD,82710
82688 :: EXPR :: assign :: Z :: v114 = v113 < #(0.0 f)::DD,82689
82690 :: EXPR :: reference :: F :: v115 = p0 $this .rfreeStandardLine::DD,82693
82693 :: EXPR :: assign :: Z :: v116 = v115 < #(0.0 f)::DD,82694
82694 :: PRED :: IF :: Z :: if (v116 <= #(0)) goto 447::CD,82701:CD,82709:CD,82710
82701 :: CALL :: call :: V :: v124.setRfree(v125)::CL,99601
82706 :: EXPR :: reference :: F :: v117 = p0 $this .rfreeNoCutoffLine::DD,82709
82709 :: EXPR :: assign :: Z :: v118 = v117 > #(0.0 f)::DD,82710
82711 :: EXPR :: reference :: F :: v119 = p0 $this .rfreeStandardLine::DD,82714
82710 :: PRED :: IF :: Z :: if (v118 >= #(0)) goto 476::CD,82714:CD,82715
82715 :: PRED :: IF :: Z :: if (v120 <= #(0)) goto 476::CD,82722
82714 :: EXPR :: assign :: Z :: v120 = v119 < #(0.0 f)::DD,82715
82722 :: CALL :: call :: V :: v121.setRfree(v122)::CL,99601
82729 :: CALL :: call :: Ljava/util/List :: v132 = v130.getCompounds()::CL,86164
82833 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::JM,70739:JM,122703
82832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::CE,82833:CD,82839
82836 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomBonds::DD,82839
82839 :: NORM :: compound :: Z :: return v3::CF,82833
82841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.formBonds()::CD,82860:CD,82874:CD,82878:CD,82882:CD,82886
82857 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .linkRecords::JM,82878
82860 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,82878
82865 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,82878
82870 :: CALL :: call :: V :: v3.formLinkRecordBond(v15)::CL,99633
82874 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,82878
82878 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,82865:CD,82870:CD,82874:JM,82878
82882 :: CALL :: call :: V :: v3.formDisulfideBonds(v17)::CL,99789
82886 :: CALL :: call :: V :: v3.makeBonds()::CL,99850
82905 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::CE,82906:CD,82912
82906 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::JM,70750:JM,122714
82909 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomCharges::DD,82912
82912 :: NORM :: compound :: Z :: return v3::CF,82906
82914 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addCharges()::CD,82921
82921 :: CALL :: call :: V :: addCharges(v3)::CL,99871
82927 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::JM,70769:JM,76358:JM,77821:JM,79616:JM,80394:JM,80998:JM,81298:JM,81563:JM,81789:JM,82015:JM,82535:JM,82606:JM,94908:JM,122303:JM,122695:JM,122728:JM,141453:JM,143669
82926 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::CE,82927:CD,82933
82930 :: EXPR :: reference :: Z :: v3 = p0 $this .headerOnly::DD,82933
82933 :: NORM :: compound :: Z :: return v3::CF,82927
82935 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecStruc()::CD,82944:CD,82955:CD,82966:CD,83010:CD,83014
82944 :: CALL :: call :: V :: p0 $this .setSecElement(v3, #(PDB_AUTHOR_ASSIGNMENT), v5)::CL,100188
82955 :: CALL :: call :: V :: p0 $this .setSecElement(v7, #(PDB_AUTHOR_ASSIGNMENT), v8)::CL,100188
82966 :: CALL :: call :: V :: p0 $this .setSecElement(v10, #(PDB_AUTHOR_ASSIGNMENT), v11)::CL,100188
82981 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v20 = v13.next()::CL,100496
82985 :: CALL :: call :: Z :: v22 = v20.hasAminoAtoms()::JM,82989:CL,100523
82989 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 109::CD,82990:CD,82995
82990 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.getProperty(#(secstruc))::JM,82995:CL,100567
82995 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 109::CD,83005
83005 :: CALL :: call :: V :: v20.setProperty(#(secstruc), v27)::CL,100610
83010 :: CALL :: call :: Z :: v17 = v13.hasNext()::JM,83014:CL,100630
83014 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 58::CD,82981:CD,82985:CD,82989:CD,83010
83049 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::JM,71021
83048 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::CF,83049:CD,83051:CD,83053:CD,83054:CD,83062
83051 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = org.biojava.nbio.structure.align.client.StructureName$Source.ENUM$VALUES::DD,83053
83053 :: EXPR :: assign :: I :: v4 = v2.length::DD,83054
83054 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::DD,83062
83062 :: NORM :: compound :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v5::CF,83049
83120 :: CALL :: call :: [Ljava/lang/String :: v7 = p1 $id .split(#(\.))::JM,83204
83129 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v36 = new java.lang.IllegalArgumentException::
83135 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getSimpleName()::
83147 :: CALL :: call :: Ljava/lang/String :: v44 = format(#(Malformed %s: %s), v38)::
83157 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v7[#(0)]::JM,83165
83161 :: CALL :: call :: I :: v15 = v13.length()::JM,83165
83165 :: PRED :: IF :: Z :: if (v15 == #(4)) goto 101::CD,83183:CD,83197
83166 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v7[#(0)]::DD,83170
83170 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v20::
83183 :: CALL :: call :: Ljava/lang/String :: v26 = format(#(Unrecognized PDB code %s), v23)::
83197 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toUpperCase()::JM,83201
83201 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v19::
83205 :: PRED :: IF :: Z :: if (v28 != #(2)) goto 133::CD,83210:CD,83214:CD,83222
83204 :: EXPR :: assign :: I :: v28 = v7.length::DD,83205
83206 :: EXPR :: reference :: Ljava/lang/Object :: v31 = v7[#(1)]::
83210 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::
83214 :: CALL :: call :: Ljava/util/List :: v35 = parseMultiple(v33)::JM,83218:CL,83957
83218 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v35::
83222 :: NORM :: declaration :: Ljava/util/LinkedList :: v29 = new java.util.LinkedList::DD,83226
83226 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v29::
83263 :: EXIT :: exit :: Ljava/util/Set :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::JM,71451
83262 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::CE,83263:CD,83266:CD,83270:CD,83274:CD,83294:CD,83298:CD,83299
83266 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::DD,83299
83270 :: CALL :: call :: Ljava/util/List :: v6 = p1 $si .getResidueRanges()::JM,83298:CL,86356
83274 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,83298
83279 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,83298
83284 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainId()::JM,83288:CL,86443
83289 :: CALL :: call :: Z :: v19 = v3.add(v16)::
83288 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 57::CD,83289:JM,83298
83294 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,83298
83299 :: NORM :: compound :: Ljava/util/Set :: return v3::DD,83263
83298 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 26::CD,83279:CD,83284:CD,83288:CD,83294:JM,83298:CF,83299
83318 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.guessPDBID(java.lang.String)::CD,83324:CD,83329:CD,83333
83324 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $name )::JM,83333
83329 :: CALL :: call :: Z :: v7 = v5.matches()::JM,83333
83333 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 25::CD,83334:CD,83339:JM,83333
83334 :: CALL :: call :: Ljava/lang/String :: v12 = v5.group(#(1))::JM,83333
83339 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::
83353 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.getCathDatabase()::CD,83356:CD,83358
83356 :: EXPR :: reference :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v2 = org.biojava.nbio.structure.cath.CathFactory.cath::DD,83358
83358 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 16::JM,135975:JM,136004:JM,136011:JM,135983:JM,135949:JM,135953:JM,43540:JM,135959:JM,135956:JM,136021:JM,43547:JM,135967:JM,135997
83372 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDescriptionByCathId(java.lang.String)::CD,83380:CD,83391
83377 :: EXPR :: reference :: Z :: v4 = p0 $this .useCathDomainDescriptionFile::DD,83380
83381 :: CALL :: call :: V :: p0 $this .ensureDomainDescriptionInstalled()::CL,100803
83380 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 15::CD,83381:CD,83385
83385 :: CALL :: call :: V :: p0 $this .ensureDomallInstalled()::CL,100886
83391 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $cathId )::
83404 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase()::CD,83409
83409 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v4 = getEcodDatabase(v2)::CL,100993
83415 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsById(java.lang.String)::CD,83420:JM,83425:JM,83494:JM,83421
83421 :: CALL :: call :: Z :: v6 = p1 $ecodId .isEmpty()::JM,83425:JM,83494:JM,83421
83420 :: PRED :: IF :: Z :: if (p1 $ecodId  == #(null)) goto 12::CD,83421:CD,83425:JM,83494
83425 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 13::CD,83429:CD,83434:CD,83438:CD,83444:CD,83449
83429 :: CALL :: call :: Ljava/util/regex/Matcher :: v10 = v8.matcher(p1 $ecodId )::JM,83438
83434 :: CALL :: call :: Z :: v12 = v10.matches()::JM,83438
83439 :: CALL :: call :: Ljava/lang/String :: v15 = v10.group(#(1))::JM,83438
83438 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 38::CD,83439:JM,83438
83444 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getDomainsForPdb(v16)::JM,83449:JM,83500:CL,101221
83449 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 62::CD,83461:CD,83465:CD,83475:CD,83496:CD,83500
83461 :: CALL :: call :: I :: v22 = v18.size()::JM,83500
83465 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,83500
83475 :: CALL :: call :: Ljava/util/Iterator :: v27 = v18.iterator()::JM,83500
83480 :: CALL :: call :: Ljava/lang/Object :: v31 = v27.next()::JM,83500
83485 :: CALL :: call :: Ljava/lang/String :: v34 = v32.getDomainId()::JM,83494:CL,101423
83489 :: CALL :: call :: Z :: v36 = p1 $ecodId .equals(v34)::JM,83425:JM,83494:JM,83421
83494 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 125::CD,83496:CD,83500
83496 :: CALL :: call :: Z :: v29 = v27.hasNext()::JM,83500
83500 :: PRED :: IF :: Z :: if (v29 != #(0)) goto 98::CD,83480:CD,83485:CD,83489:CD,83494:JM,83500
83557 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::JM,71708
83556 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::CE,83557:CD,83561:CD,83565:CD,83570
83561 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,83746:JM,83833:JM,83741:JM,83790
83565 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v7 = p2 $scopDB .getDomainByScopID(p1 $name )::JM,83571:JM,83570:CL,101494:CL,101432
83571 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v7::DD,83557
83570 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 22::CD,83571:CD,83574:CD,83579:CD,83584:CD,83594:CD,83599:CD,83603:CD,83733:CD,83737:CD,83741
83574 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
83579 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v10.append(p1 $name )::
83584 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
83594 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v18.matcher(p1 $name )::JM,83603:JM,83666:JM,83705:JM,83672:JM,83660:JM,83711
83599 :: CALL :: call :: Z :: v22 = v20.matches()::JM,83603:JM,83666:JM,83705:JM,83672:JM,83660:JM,83711
83603 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 265::CD,83604:CD,83609:CD,83614:CD,83619:CD,83624:CD,83728:CD,83732:JM,83603:JM,83666:JM,83705:JM,83672:JM,83660:JM,83711:JM,83746:JM,83833:JM,83741:JM,83790
83604 :: CALL :: call :: Ljava/lang/String :: v26 = v20.group(#(1))::JM,83603:JM,83666:JM,83705:JM,83672:JM,83660:JM,83711
83609 :: CALL :: call :: Ljava/lang/String :: v29 = v20.group(#(2))::JM,83603:JM,83666:JM,83705:JM,83672:JM,83660:JM,83711
83614 :: CALL :: call :: Ljava/lang/String :: v32 = v20.group(#(3))::JM,83603:JM,83666:JM,83705:JM,83672:JM,83660:JM,83711
83619 :: CALL :: call :: Ljava/util/List :: v34 = p2 $scopDB .getDomainsForPDB(v26)::JM,83633:JM,83732:CL,66424:CL,66534
83624 :: CALL :: call :: Ljava/util/Iterator :: v36 = v34.iterator()::JM,83633:JM,83732
83629 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,83633:JM,83732
83633 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
83640 :: CALL :: call :: Ljava/util/regex/Matcher :: v46 = v42.matcher(v44)::JM,83649:JM,83683:JM,83705:JM,83722:JM,83660:JM,83694
83645 :: CALL :: call :: Z :: v48 = v46.matches()::JM,83649:JM,83683:JM,83705:JM,83722:JM,83660:JM,83694
83649 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 256::CD,83650:CD,83655:CD,83660:JM,83649:JM,83683:JM,83705:JM,83722:JM,83694:JM,83633:JM,83732
83650 :: CALL :: call :: Ljava/lang/String :: v50 = v46.group(#(2))::JM,83649:JM,83683:JM,83705:JM,83722:JM,83660:JM,83694
83655 :: CALL :: call :: Z :: v52 = v29.equals(v50)::JM,83666:JM,83705:JM,83672:JM,83660:JM,83711:JM,83683:JM,83722:JM,83694
83661 :: CALL :: call :: Z :: v55 = v29.equals(#(_))::JM,83666:JM,83705:JM,83672:JM,83660:JM,83711
83660 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 210::CD,83661:CD,83666:CD,83695:CD,83700:CD,83705:JM,83672:JM,83660:JM,83711:JM,83649:JM,83683:JM,83722:JM,83694
83667 :: CALL :: call :: Z :: v58 = v29.equals(#(.))::JM,83666:JM,83705:JM,83672:JM,83660:JM,83711
83666 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 210::CD,83667:CD,83672:CD,83695:CD,83700:CD,83705:JM,83666:JM,83660:JM,83711:JM,83649:JM,83683:JM,83722:JM,83694
83673 :: CALL :: call :: Ljava/lang/String :: v60 = v46.group(#(2))::JM,83649:JM,83683:JM,83705:JM,83722:JM,83660:JM,83694
83672 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 210::CD,83673:CD,83678:CD,83683:CD,83695:CD,83700:CD,83705:JM,83649:JM,83722:JM,83660:JM,83694
83678 :: CALL :: call :: Z :: v62 = v60.equals(#(_))::JM,83683:JM,83705:JM,83722:JM,83660:JM,83694
83683 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 210::CD,83684:CD,83689:CD,83694:CD,83695:CD,83700:CD,83705:JM,83649:JM,83683:JM,83722:JM,83660
83684 :: CALL :: call :: Ljava/lang/String :: v64 = v46.group(#(2))::JM,83649:JM,83683:JM,83705:JM,83722:JM,83660:JM,83694
83689 :: CALL :: call :: Z :: v66 = v64.equals(#(.))::JM,83683:JM,83705:JM,83722:JM,83660:JM,83694
83695 :: CALL :: call :: Ljava/lang/String :: v68 = v46.group(#(3))::JM,83649:JM,83683:JM,83705:JM,83722:JM,83660:JM,83694
83694 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 256::CD,83695:CD,83700:CD,83705:JM,83649:JM,83683:JM,83722:JM,83660:JM,83694:JM,83633:JM,83732
83700 :: CALL :: call :: Z :: v70 = v32.equals(v68)::JM,83666:JM,83705:JM,83672:JM,83660:JM,83711:JM,83683:JM,83722:JM,83694
83705 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 248::CD,83706:CD,83711:CD,83723:JM,83666:JM,83705:JM,83672:JM,83660
83706 :: CALL :: call :: Z :: v72 = v32.equals(#(_))::JM,83666:JM,83705:JM,83672:JM,83660:JM,83711
83711 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 248::CD,83712:CD,83717:CD,83722:CD,83723:JM,83649:JM,83683:JM,83705:JM,83660:JM,83694
83712 :: CALL :: call :: Ljava/lang/String :: v74 = v46.group(#(3))::JM,83649:JM,83683:JM,83705:JM,83722:JM,83660:JM,83694
83717 :: CALL :: call :: Z :: v76 = v74.equals(#(_))::JM,83683:JM,83705:JM,83722:JM,83660:JM,83694
83723 :: CALL :: call :: Z :: v78 = v4.add(v41)::
83722 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 256::CD,83723:JM,83633:JM,83732
83728 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,83633:JM,83732
83733 :: CALL :: call :: Ljava/util/Iterator :: v80 = v4.iterator()::JM,83746:JM,83833:JM,83741:JM,83790
83732 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 108::CD,83629:CD,83633:CD,83640:CD,83645:CD,83649:CD,83728:JM,83732:JM,83746:JM,83833:JM,83741:JM,83790
83737 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,83746:JM,83833:JM,83741:JM,83790
83741 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 446::CD,83742:CD,83746:CD,83747:CD,83749:CD,83753:CD,83853:CD,83854:JM,83833:JM,83741:JM,83790
83742 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,83746:JM,83833:JM,83741:JM,83790
83747 :: EXPR :: reference :: Lorg/slf4j/Logger :: v86 = org.biojava.nbio.structure.align.client.StructureName.logger::JM,83749:JM,83753
83746 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,83853
83749 :: CALL :: call :: Z :: v88 = v86.isWarnEnabled()::JM,83749:JM,83753
83753 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 444::CF,83754:CD,83758:CD,83763:CD,83767:CD,83772:CD,83777:CD,83781:CD,83786:CD,83790:CD,83834:CD,83838:CD,83845:CF,83853
83754 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v89 = new java.lang.StringBuilder::
83758 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
83763 :: CALL :: call :: Ljava/lang/String :: v95 = v85.getScopId()::CL,66886
83767 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v91.append(v95)::
83772 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v97.append(#(.))::
83777 :: CALL :: call :: Ljava/lang/String :: v101 = v99.toString()::
83781 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v89.append(v101)::
83786 :: CALL :: call :: Z :: v105 = v80.hasNext()::JM,83746:JM,83833:JM,83741:JM,83790
83791 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v89.append(#( Other possibilities: ))::
83790 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 422::CD,83791:CD,83829:CD,83833:JM,83834
83797 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::JM,83746:JM,83833:JM,83741:JM,83790
83798 :: CALL :: call :: Ljava/lang/Object :: v113 = v80.next()::JM,83746:JM,83833:JM,83741:JM,83790
83807 :: CALL :: call :: Ljava/lang/String :: v118 = valueOf(v116)::
83815 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v111.append(#( ))::
83820 :: CALL :: call :: Ljava/lang/String :: v124 = v122.toString()::
83824 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v89.append(v124)::
83829 :: CALL :: call :: Z :: v110 = v80.hasNext()::JM,83746:JM,83833:JM,83741:JM,83790
83833 :: PRED :: IF :: Z :: if (v110 != #(0)) goto 371::CD,83797:CD,83798:CD,83807:CD,83815:CD,83820:CD,83824:CD,83829:JM,83834
83834 :: CALL :: call :: Ljava/lang/String :: v129 = getProperty(#(line.separator))::JM,83834
83838 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v89.append(v129)::
83845 :: CALL :: call :: Ljava/lang/String :: v134 = v89.toString()::
83853 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v85::DD,83557
83854 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,83557
83957 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::CE,83958:CD,83961:CD,83965:CD,83970:CD,83976:CD,83981:CD,83993:CD,83998:CD,83999:CD,84004:CD,84020:CD,84021:CD,84022:CD,84024
83958 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::JM,83218
83961 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $s .trim()::JM,83970:JM,84022
83965 :: CALL :: call :: Z :: v7 = v4.startsWith(#(())::JM,83970:JM,84022
83971 :: CALL :: call :: Ljava/lang/String :: v11 = v4.substring(#(1))::JM,83970:JM,84022
83970 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 23::CF,84022:CD,83971:JM,83970
83976 :: CALL :: call :: Z :: v15 = v12.endsWith(#()))::JM,83981
83981 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 44::CD,83982:CD,83986:CD,83987
83982 :: CALL :: call :: I :: v17 = v12.length()::JM,83986
83987 :: CALL :: call :: Ljava/lang/String :: v20 = v12.substring(#(0), v18)::
83986 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v17 - #(1)::
83993 :: CALL :: call :: [Ljava/lang/String :: v24 = v21.split(#(,))::JM,84004:JM,83999
83999 :: EXPR :: assign :: I :: v26 = v24.length::
83998 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,84021:CF,83999
84004 :: EXPR :: assign :: I :: v28 = v24.length::DD,84020
84010 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v31 = parse(v29)::CL,101599
84014 :: CALL :: call :: Z :: v33 = v25.add(v31)::
84019 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v35 + #(1)::DD,84024
84021 :: NORM :: compound :: Ljava/util/List :: return v25::DD,83958
84020 :: PRED :: IF :: Z :: if (v35 < v28) goto 75::CD,84010:CD,84014:CD,84019:CD,84024:CF,84021
84022 :: EXPR :: assign :: null :: PHI v12 = v4, v11::JM,83981:JM,83986
84024 :: EXPR :: assign :: null :: PHI v35 = #(0), v34::DD,84019:DD,84020
84078 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
84081 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p2 $ranges ::
84183 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .toString()::
84229 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.getPDPDomain(java.lang.String)::CD,84237:CD,84256:CD,84261:CD,84321:CD,84326:CD,84331:CD,84341:CD,84346:CD,84351:CD,84361:CD,84365:CD,84411:CD,84415:JM,84081:JM,101939:JM,101934:JM,101950:JM,84078:CD,84424:CD,84425
84234 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .serializedCache::DD,84237
84237 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 38::CF,84424:CD,84241:CD,84246
84241 :: CALL :: call :: Z :: v8 = v6.containsKey(p1 $pdpDomainName )::JM,84246
84246 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 38::CF,84424:CD,84250:CD,84255
84250 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p1 $pdpDomainName )::JM,84255
84255 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,84424
84256 :: CALL :: call :: Z :: v16 = p0 $this .checkDomainRanges(v14)::JM,84261:CL,101865
84261 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 186::CF,84425:CD,84263:CD,84267:CD,84275:CD,84280:CD,84285:CD,84300:CD,84304:CD,84308:CD,84312
84263 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
84267 :: CALL :: call :: Ljava/lang/String :: v21 = valueOf(v19)::
84275 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v18.append(#(getPDPDomain?pdpId=))::
84280 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(p1 $pdpDomainName )::
84285 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
84300 :: CALL :: call :: Ljava/io/InputStream :: v35 = getInputStream(v17)::CL,75066
84304 :: CALL :: call :: Ljava/lang/String :: v56 = convertStreamToString(v35)::CL,65816
84308 :: CALL :: call :: Ljava/util/SortedSet :: v58 = getDomainRangesFromXML(v56)::JM,84425:JM,84312:CL,92515
84313 :: CALL :: call :: V :: p0 $this .cache(p1 $pdpDomainName , v58)::CL,66824
84312 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 186::CF,84425:CD,84313
84321 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
84326 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v38.append(p1 $pdpDomainName )::
84331 :: CALL :: call :: Ljava/lang/String :: v44 = v42.toString()::
84341 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
84346 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v47.append(p1 $pdpDomainName )::
84351 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::
84361 :: NORM :: declaration :: Ljava/util/ArrayList :: v61 = new java.util.ArrayList::
84365 :: CALL :: call :: Ljava/util/Iterator :: v64 = v60.iterator()::JM,84415
84370 :: CALL :: call :: Ljava/lang/Object :: v68 = v64.next()::JM,84415
84402 :: CALL :: call :: Ljava/util/List :: v80 = v70.getResidueRanges()::CL,86356
84406 :: CALL :: call :: Z :: v82 = v61.addAll(v80)::
84411 :: CALL :: call :: Z :: v66 = v64.hasNext()::JM,84415
84415 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 208::CD,84370:JM,83120:JM,83205:JM,83204:JM,83129:JM,83161:JM,83147:JM,83165:JM,83135:CD,84402:CD,84406:CD,84411:JM,84415
84425 :: EXPR :: assign :: null :: PHI v60 = v14, v58, v58::JM,84415:CF,84361
84424 :: EXPR :: assign :: null :: PHI v14 = #(null), #(null), v13::DD,84425
84495 :: CALL :: call :: Ljava/util/regex/Matcher :: v7 = v5.matcher(p1 $name )::JM,84524
84500 :: CALL :: call :: Z :: v9 = v7.matches()::JM,84524
84511 :: CALL :: call :: Ljava/lang/String :: v13 = v7.group(#(1))::JM,84524
84519 :: CALL :: call :: Ljava/lang/String :: v16 = v7.group(#(2))::JM,84524
84525 :: CALL :: call :: Ljava/lang/String :: v19 = v7.group(#(2))::JM,84524
84524 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 63::CD,84525:CD,84530:JM,84524
84530 :: CALL :: call :: I :: v21 = parseInt(v19)::
84559 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getThePdbId()::CD,84566
84563 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::
84566 :: CALL :: call :: Ljava/lang/String :: v7 = v3.substring(#(0), #(4))::
84576 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructureForPdbId(java.lang.String)::CD,84581:CD,84589:CD,84594:CD,84599
84581 :: PRED :: IF :: Z :: if (p1 $pdbId  != #(null)) goto 7::CD,84622:CD,84627:CD,84631
84589 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
84594 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(p1 $pdbId )::
84599 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
84622 :: CALL :: call :: Z :: v9 = p0 $this .checkLoading(p1 $pdbId )::JM,84627:CL,101980
84627 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 42::CD,84622
84628 :: EXPR :: reference :: Z :: v19 = p0 $this .useMmCif::DD,84631
84631 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 87::CD,84632:CD,84638
84632 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v23 = p0 $this .loadStructureFromCifByPdbId(p1 $pdbId )::CL,101996
84638 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v21 = p0 $this .loadStructureFromPdbByPdbId(p1 $pdbId )::CL,102072
84664 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.parseQuery(java.net.URL)::CD,84668:CD,84672:CD,84676:JM,84677:JM,84692:JM,84681:JM,84687
84668 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v3 = new java.util.LinkedHashMap::
84672 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $url .getQuery()::JM,84677:JM,84676:JM,84692:JM,84681:JM,84687
84677 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,84677:JM,84692:JM,84681:JM,84687
84676 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 25::CD,84677:CD,84681:JM,84692:JM,84687
84681 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 27::CD,84683:CD,84687:CD,84692:CD,84744:CD,84748:JM,84677:JM,84676:JM,84681
84683 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $url .getQuery()::JM,84677:JM,84676:JM,84692:JM,84681:JM,84687
84687 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#(&))::JM,84677:JM,84692:JM,84681:JM,84687
84692 :: EXPR :: assign :: I :: v16 = v15.length::DD,84744
84737 :: CALL :: call :: Ljava/lang/Object :: v40 = v3.put(v38, v36)::
84743 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,84748
84744 :: PRED :: IF :: Z :: if (v42 < v16) goto 54::CD,84737:CD,84743:CD,84748
84748 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,84743:DD,84744
84831 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.guessFiletype(java.lang.String)::CE,84832:CD,84835:CD,84839:CD,84842:CD,84879:CD,84884
84832 :: EXIT :: exit :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO.guessFiletype(java.lang.String)::JM,72289:JM,72290
84835 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $filename .toLowerCase()::JM,84871
84839 :: CALL :: call :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v6 = values()::JM,84842:CL,102148
84842 :: EXPR :: assign :: I :: v7 = v6.length::DD,84879
84844 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v6[v25]::JM,84848:JM,84852:JM,84857:JM,84873:JM,84861:JM,84877:DD,84872
84848 :: CALL :: call :: Ljava/util/List :: v11 = v9.getExtensions()::JM,84848:JM,84852:JM,84857:JM,84873:JM,84861:JM,84877
84852 :: CALL :: call :: Ljava/util/Iterator :: v13 = v11.iterator()::JM,84852:JM,84857:JM,84873:JM,84861:JM,84877
84857 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.next()::JM,84857:JM,84873:JM,84861:JM,84877
84861 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,84871:JM,84862
84862 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toLowerCase()::JM,84871:JM,84862
84866 :: CALL :: call :: Z :: v22 = v4.endsWith(v20)::JM,84871
84871 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 66::CF,84883:CD,84872:CD,84873:CD,84877
84873 :: CALL :: call :: Z :: v15 = v13.hasNext()::JM,84857:JM,84873:JM,84861:JM,84877
84872 :: NORM :: compound :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v9::DD,84832
84877 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 40::CD,84857:CD,84861:CD,84862:CD,84866:CD,84871:CD,84878:CD,84879:CD,84884:CD,84883:JM,84873:JM,84877
84879 :: PRED :: IF :: Z :: if (v25 < v7) goto 22::CD,84848:CD,84852:CD,84873:CD,84877:CD,84880:CD,84882:CD,84883
84878 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v26 + #(1)::DD,84884
84880 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::CF,84882
84883 :: EXPR :: assign :: null :: PHI v26 = v25, v26::JM,84857:JM,84873:JM,84861:JM,84877:DD,84878:DD,84883
84882 :: NORM :: compound :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v27::DD,84832
84884 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,84879:DD,84883
84909 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::CE,84910:CD,84912:CD,84914
84910 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::
84912 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype::DD,84914:DD,84915
84915 :: NORM :: compound :: [I :: return v2::DD,84910
84914 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,84915:CD,84916:CD,84919:CD,84920:CD,84921:CD,84923:CD,84932:CD,84934:CD,84943:CD,84945:CD,84956
84916 :: CALL :: call :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v5 = values()::JM,84919:CL,102148
84919 :: EXPR :: assign :: I :: v6 = v5.length::CF,84920
84921 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v8 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::
84920 :: NORM :: declaration :: [I :: v7 = new []::DD,84956
84923 :: CALL :: call :: I :: v10 = v8.ordinal()::
84927 :: EXPR :: modify :: I :: v7[v10] = #(2)::
84932 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v14 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::
84934 :: CALL :: call :: I :: v16 = v14.ordinal()::
84938 :: EXPR :: modify :: I :: v7[v16] = #(1)::
84943 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v20 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::
84945 :: CALL :: call :: I :: v22 = v20.ordinal()::
84949 :: EXPR :: modify :: I :: v7[v22] = #(3)::
84956 :: NORM :: compound :: [I :: return v7::DD,84910
84984 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
85007 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: v4 = new org.biojava.nbio.structure.io.FileParsingParameters::DD,85011
85011 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: p0 $this .params = v4::
85014 :: CALL :: call :: V :: p0 $this .documentStart()::CL,102175
85022 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setFileParsingParameters(org.biojava.nbio.structure.io.FileParsingParameters)::JM,85027
85027 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: p0 $this .params = p1 $params ::
85033 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.addMMcifConsumer(org.biojava.nbio.structure.io.mmcif.MMcifConsumer)::CD,85041
85038 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::
85041 :: CALL :: call :: Z :: v6 = v4.add(p1 $consumer )::
85050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.parse(java.io.BufferedReader)::CD,85055:CD,85058:CD,85065:CD,85069:CD,85073:CD,85077:CD,85081:JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85055 :: CALL :: call :: V :: p0 $this .triggerDocumentStart()::CL,102375
85058 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v5 = new org.biojava.nbio.structure.io.mmcif.model.Struct::DD,85062
85062 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v5::
85065 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,85412:JM,85647
85069 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,85680
85073 :: NORM :: declaration :: Ljava/util/HashSet :: v13 = new java.util.HashSet::
85077 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $buf .readLine()::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85081:JM,85177:JM,85465:JM,85117:JM,85087
85081 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 70::CD,85082:CD,85087:CD,85090:CD,85095:CD,85100:CD,85105:CD,85113:CD,85678:CD,85679:CD,85680:CD,85681:JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117
85082 :: CALL :: call :: Z :: v19 = v16.startsWith(#(data_))::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85087 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 988::CF,85678:CD,85090:CD,85095:CD,85100:CD,85105:CD,85113:CD,85628:CD,85632:CD,85679:CD,85680:CD,85681
85090 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v238 = new java.lang.StringBuilder::
85095 :: CALL :: call :: Ljava/lang/StringBuilder :: v242 = v238.append(v16)::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85100 :: CALL :: call :: Ljava/lang/StringBuilder :: v244 = v242.append(#('))::JM,85121:JM,85681:JM,85237:JM,85127:JM,85527:JM,85177:JM,85465:JM,85163:JM,85194:JM,85322
85105 :: CALL :: call :: Ljava/lang/String :: v246 = v244.toString()::JM,85322
85113 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,102417
85117 :: CALL :: call :: Z :: v23 = v21.isEmpty()::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85121 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 988::CF,85678:CD,85122:CD,85127:CD,85628:CD,85632:CD,85679:CD,85680:CD,85681:JM,85121:JM,85163:JM,85194:JM,85322:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85122 :: CALL :: call :: Z :: v27 = v21.startsWith(#(#))::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85127 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 123::CD,85131:CD,85132:CD,85140:CD,85145:CD,85150:CD,85158:CD,85163:CD,85171:CD,85628:CD,85632:CD,85676:CD,85677:CD,85678:CD,85679:CD,85680:CD,85681
85131 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::JM,85132
85132 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(v75)::JM,85132
85140 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#( ))::
85145 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(v21)::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85150 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85163:JM,85194:JM,85322
85158 :: CALL :: call :: Z :: v42 = v21.startsWith(#(data_))::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85163 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 187::CF,85676:CD,85164:CD,85677
85165 :: CALL :: call :: V :: v154.clear()::
85164 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 187::CF,85676:CD,85165:CD,85168
85168 :: CALL :: call :: V :: v9.clear()::
85171 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 692::CD,85172:CD,85177:CD,85460:CD,85465:JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85117:JM,85087
85172 :: CALL :: call :: Z :: v47 = v21.startsWith(#(loop_))::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85177 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 217::CD,85178:CD,85182:CD,85187:CD,85628:CD,85632:CD,85678:CD,85679:CD,85680:CD,85681
85178 :: CALL :: call :: V :: v9.clear()::
85182 :: CALL :: call :: Z :: v50 = v21.matches(#(\s*_\w+.*))::JM,85187
85187 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 555::CD,85188:CD,85371:CD,85380:CD,85384:CD,85395:CD,85404:CD,85408:CD,85412:CD,85449:CD,85456:CD,85628:CD,85632:CD,85678:CD,85679:CD,85680:CD,85681
85189 :: CALL :: call :: Z :: v53 = v21.startsWith(#(_))::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85188 :: PRED :: IF :: Z :: if (v155 == #(0)) goto 445::CD,85189:CD,85194:CD,85313:CD,85317:CD,85322:CD,85628:CD,85632:CD,85678:CD,85679:CD,85680:CD,85681:JM,85121:JM,85127:JM,85163:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85194 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 445::CD,85201:CD,85204:CD,85211:CD,85215:CD,85313:CD,85317:CD,85322:CD,85628:CD,85632:CD,85678:CD,85679:CD,85680:CD,85681:JM,85121:JM,85127:JM,85163:JM,85194:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85201 :: CALL :: call :: V :: v9.clear()::
85204 :: CALL :: call :: Ljava/util/List :: v82 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,85282:JM,85225:JM,85215:CL,102450
85211 :: CALL :: call :: I :: v84 = v82.size()::JM,85282:JM,85225:JM,85215
85215 :: PRED :: IF :: Z :: if (v84 >= #(1)) goto 292::CD,85216:CD,85220:CD,85225:CD,85226:CD,85231:CD,85628:CD,85632:CD,85678:CD,85679:CD,85680:CD,85681:JM,85282:JM,85215
85216 :: CALL :: call :: V :: v154.clear()::
85220 :: CALL :: call :: Ljava/lang/Object :: v87 = v82.get(#(0))::JM,85282:JM,85225:JM,85215
85225 :: EXPR :: assign :: Ljava/lang/Object :: v88 = CHECKCAST v87::JM,85681:JM,85283:JM,85231
85226 :: CALL :: call :: I :: v91 = v88.indexOf(#(.))::JM,85681:JM,85283:JM,85231
85231 :: PRED :: IF :: Z :: if (v91 >= #(0)) goto 377::CD,85232:CD,85237:CD,85271:CD,85277:CD,85282:CD,85283:CD,85284:CD,85288:CD,85294:CD,85299:CD,85628:CD,85632:CD,85678:CD,85679:CD,85680:CD,85681:JM,85121:JM,85127:JM,85163:JM,85194:JM,85322:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85232 :: CALL :: call :: Z :: v93 = v21.startsWith(#(data_))::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85237 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 364::CD,85240:CD,85245:CD,85250:CD,85255:CD,85263:CD,85267:CD,85628:CD,85632:CD,85678:CD,85679:CD,85680:CD,85681
85240 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v227 = new java.lang.StringBuilder::
85245 :: CALL :: call :: Ljava/lang/StringBuilder :: v230 = v227.append(v21)::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85250 :: CALL :: call :: Ljava/lang/StringBuilder :: v232 = v230.append(#('))::JM,85681:JM,85527:JM,85465:JM,85322
85255 :: CALL :: call :: Ljava/lang/String :: v234 = v232.toString()::JM,85322
85263 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,102417
85267 :: CALL :: call :: V :: v154.clear()::
85271 :: CALL :: call :: Ljava/lang/String :: v96 = v88.substring(#(0), v91)::JM,85681:JM,85283
85277 :: CALL :: call :: Ljava/lang/Object :: v98 = v82.get(#(1))::JM,85282:JM,85225:JM,85215
85283 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v91 + #(1)::
85282 :: EXPR :: assign :: Ljava/lang/Object :: v99 = CHECKCAST v98::CF,85283
85284 :: CALL :: call :: I :: v102 = v88.length()::
85288 :: CALL :: call :: Ljava/lang/String :: v104 = v88.substring(v100, v102)::
85294 :: CALL :: call :: Z :: v106 = v9.add(v104)::
85299 :: CALL :: call :: Z :: v108 = v154.add(v99)::
85313 :: CALL :: call :: Ljava/lang/String :: v55 = v21.trim()::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85317 :: CALL :: call :: I :: v58 = v55.indexOf(#(46))::JM,85681:JM,85527:JM,85465:JM,85322
85323 :: CALL :: call :: [Ljava/lang/String :: v62 = v55.split(#(\.))::JM,85349
85322 :: PRED :: IF :: Z :: if (v58 <= #(-1)) goto 534::CD,85323:CD,85336:CD,85349:CD,85350:CD,85678:CD,85679:CD,85680:CD,85681
85328 :: EXPR :: reference :: Ljava/lang/Object :: v63 = v62[#(0)]::DD,85681
85332 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v62[#(1)]::
85336 :: CALL :: call :: Z :: v67 = v9.add(v65)::
85349 :: EXPR :: assign :: I :: v71 = v62.length::DD,85350
85350 :: PRED :: IF :: Z :: if (v71 <= #(2)) goto 988::CF,85678:CD,85679:CD,85680:CD,85681
85371 :: CALL :: call :: Ljava/util/List :: v121 = p0 $this .processLine(v21, p1 $buf , v119)::JM,85680:JM,85412:CL,102450
85380 :: CALL :: call :: I :: v125 = v121.size()::JM,85680:JM,85412
85384 :: CALL :: call :: Ljava/lang/Integer :: v127 = valueOf(v125)::JM,85412
85395 :: CALL :: call :: Ljava/lang/String :: v132 = v121.toString()::
85404 :: CALL :: call :: I :: v135 = v121.size()::JM,85680:JM,85412
85408 :: CALL :: call :: I :: v137 = v9.size()::JM,85412
85412 :: PRED :: IF :: Z :: if (v135 == v137) goto 673::CD,85416:CD,85420:CD,85428:CD,85432
85416 :: CALL :: call :: I :: v143 = v9.size()::
85420 :: CALL :: call :: Ljava/lang/Integer :: v145 = valueOf(v143)::
85428 :: CALL :: call :: I :: v147 = v121.size()::JM,85680:JM,85412
85432 :: CALL :: call :: Ljava/lang/Integer :: v149 = valueOf(v147)::
85449 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v121, v13)::CL,102766
85456 :: CALL :: call :: V :: v121.clear()::JM,85680:JM,85412
85460 :: CALL :: call :: Z :: v157 = v21.startsWith(#(loop_))::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85465 :: PRED :: IF :: Z :: if (v157 == #(0)) goto 749::CD,85466:CD,85474:CD,85494:CD,85501:CD,85505:CD,85628:CD,85632:CD,85678:CD,85679:CD,85680:CD,85681
85467 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,102766
85466 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 722::CD,85467
85474 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,104187
85494 :: CALL :: call :: Ljava/util/List :: v167 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,85505:JM,85515:JM,85598:CL,102450
85501 :: CALL :: call :: I :: v169 = v167.size()::JM,85505:JM,85515:JM,85598
85505 :: PRED :: IF :: Z :: if (v169 >= #(1)) goto 795::CD,85506:CD,85510:CD,85515:CD,85516:CD,85521:CD,85628:CD,85632:CD,85678:CD,85679:CD,85680:CD,85681:JM,85505:JM,85598
85506 :: CALL :: call :: V :: v154.clear()::
85510 :: CALL :: call :: Ljava/lang/Object :: v172 = v167.get(#(0))::JM,85505:JM,85515:JM,85598
85515 :: EXPR :: assign :: Ljava/lang/Object :: v173 = CHECKCAST v172::JM,85521:JM,85681:JM,85573:JM,85599
85516 :: CALL :: call :: I :: v175 = v173.indexOf(#(.))::JM,85521:JM,85681:JM,85573:JM,85599
85521 :: PRED :: IF :: Z :: if (v175 >= #(0)) goto 877::CD,85522:CD,85527:CD,85561:CD,85587:CD,85593:CD,85598:CD,85599:CD,85600:CD,85604:CD,85610:CD,85615:CD,85628:CD,85632:CD,85678:CD,85679:CD,85680:CD,85681:JM,85121:JM,85127:JM,85163:JM,85194:JM,85322:JM,85237:JM,85177:JM,85465:JM,85117:JM,85087
85522 :: CALL :: call :: Z :: v177 = v21.startsWith(#(data_))::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85527 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 867::CD,85530:CD,85535:CD,85540:CD,85545:CD,85553:CD,85557:CD,85628:CD,85632:CD,85678:CD,85679:CD,85680:CD,85681
85530 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v214 = new java.lang.StringBuilder::
85535 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v214.append(v21)::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85177:JM,85465:JM,85117:JM,85087
85540 :: CALL :: call :: Ljava/lang/StringBuilder :: v221 = v218.append(#('))::JM,85322
85545 :: CALL :: call :: Ljava/lang/String :: v223 = v221.toString()::
85553 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,102417
85557 :: CALL :: call :: V :: v154.clear()::
85561 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 923::CD,85562:CD,85568:CD,85573:JM,85681
85562 :: CALL :: call :: Ljava/lang/String :: v180 = v173.substring(#(0), v175)::JM,85573:JM,85681:JM,85599
85568 :: CALL :: call :: Z :: v182 = v180.equals(v73)::JM,85681:JM,85573
85573 :: PRED :: IF :: Z :: if (v182 != #(0)) goto 923::CD,85574:CD,85581:JM,85681
85574 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,102766
85581 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,104187
85587 :: CALL :: call :: Ljava/lang/String :: v186 = v173.substring(#(0), v175)::JM,85681:JM,85573:JM,85599
85593 :: CALL :: call :: Ljava/lang/Object :: v188 = v167.get(#(1))::JM,85505:JM,85515:JM,85598
85599 :: EXPR :: assign :: Ljava/lang/Object :: v190 = v175 + #(1)::
85598 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::CF,85599
85600 :: CALL :: call :: I :: v192 = v173.length()::
85604 :: CALL :: call :: Ljava/lang/String :: v194 = v173.substring(v190, v192)::
85610 :: CALL :: call :: Z :: v196 = v9.add(v194)::
85615 :: CALL :: call :: Z :: v198 = v154.add(v189)::
85628 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $buf .readLine()::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85681:JM,85237:JM,85527:JM,85081:JM,85177:JM,85465:JM,85117:JM,85087
85633 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 1051::CD,85634:CD,85638
85632 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 105::CD,85117:CD,85121:CD,85633:CD,85664:CD,85672:CD,85678:CD,85679:CD,85680:CD,85681:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85237:JM,85527:JM,85177:JM,85465:JM,85087
85634 :: CALL :: call :: I :: v202 = v154.size()::JM,85638
85639 :: CALL :: call :: I :: v204 = v154.size()::JM,85647
85638 :: PRED :: IF :: Z :: if (v202 <= #(0)) goto 1051::CD,85639:CD,85643:CD,85647
85643 :: CALL :: call :: I :: v206 = v9.size()::JM,85647
85647 :: PRED :: IF :: Z :: if (v204 != v206) goto 1051::CD,85648:CD,85655
85648 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,102766
85655 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,104187
85661 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v209 = p0 $this .struct::DD,85664
85664 :: PRED :: IF :: Z :: if (v209 == #(null)) goto 1066::CD,85668
85668 :: CALL :: call :: V :: p0 $this .triggerStructData(v210)::CL,104207
85672 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,102417
85677 :: EXPR :: assign :: null :: PHI v155 = v153, v153, #(0)::DD,85188:DD,85679:CF,85171
85676 :: EXPR :: assign :: null :: PHI v76 = v75, v75, #(0)::CF,85677:DD,85171:DD,85678
85679 :: EXPR :: assign :: null :: PHI v153 = #(0), v153, v153, #(0), #(0), #(0), #(0), v155, v155, v155, #(1), #(0), v155, v155, v155::CF,85680:DD,85677:DD,85679
85678 :: EXPR :: assign :: null :: PHI v75 = #(0), v75, v75, #(1), #(0), #(0), #(0), v76, v76, v76, v76, #(1), #(0), #(0), #(0)::CF,85679:JM,85132:DD,85164:DD,85676:DD,85678
85681 :: EXPR :: assign :: null :: PHI v73 = #(null), v73, v73, v73, v73, #(null), v96, v63, v63, v55, v73, #(null), v73, #(null), v186::JM,85121:JM,85632:JM,85127:JM,85163:JM,85194:JM,85322:JM,85237:JM,85527:JM,85081:JM,85177:JM,85465:JM,85117:JM,85087:DD,85466:DD,85561:JM,85573:DD,85633:DD,85681
85680 :: EXPR :: assign :: null :: PHI v154 = v11, v154, v154, v154, v154, v154, v154, v154, v154, v154, v121, v154, v154, v154, v154::CF,85681:JM,85638:JM,85647:DD,85680
86007 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getBiologicalAssembly(java.lang.String,int)::CD,86013
86013 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getBiologicalAssembly(p1 $pdbId , p2 $bioAssemblyId , #(1))::CL,104243
86027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBCode(java.lang.String)::JM,86032
86032 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_id = p1 $pdb_id_ ::
86039 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBHeader :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::JM,125677:JM,142296:JM,142447:JM,144367
86038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::CE,86039:CD,86045
86042 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBHeader :: v3 = p0 $this .pdbHeader::DD,86045
86045 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBHeader :: return v3::CF,86039
86047 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBHeader(org.biojava.nbio.structure.PDBHeader)::JM,86052
86052 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = p1 $pdbHeader ::
86058 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.toString()::CD,86062
86062 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getIdentifier()::CL,104311
86069 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::JM,143484:JM,143516
86068 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::CE,86069:CD,86075
86072 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .dbrefs::DD,86075
86075 :: NORM :: compound :: Ljava/util/List :: return v3::CF,86069
86077 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setDBRefs(java.util.List)::CD,86083:CD,86089:CD,86103:CD,86107:JM,86108
86083 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
86089 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $dbrefs .iterator()::JM,86107:JM,86108
86094 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,86107
86099 :: CALL :: call :: V :: v12.setParent(p0 $this )::CL,104368
86103 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,86107
86107 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,86094:CD,86099:CD,86103:JM,86107
86108 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = p1 $dbrefs ::
86145 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getDescription()::
86144 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getDescription()::CE,86145:CD,86151
86148 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .description::DD,86151
86151 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,86145
86153 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDescription(java.lang.String)::JM,86158
86158 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
86165 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getCompounds()::JM,139921
86164 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompounds()::CE,86165:CD,86171:CD,86236
86168 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .compounds::DD,86171
86171 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 19::CD,86175:CD,86179:CD,86185:CD,86195:CD,86228:CD,86232
86172 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .compounds::JM,86179
86175 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,86179
86179 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 113::CD,86185:CD,86195:CD,86228:CD,86232
86185 :: CALL :: call :: Ljava/util/List :: v12 = v9.findCompounds()::JM,86189:CL,104394
86189 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v12::
86192 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .compounds::JM,86232
86195 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,86232
86200 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,86232
86205 :: CALL :: call :: Ljava/util/List :: v22 = v20.getChains()::JM,86227:CL,104418
86209 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,86227
86214 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,86227
86219 :: CALL :: call :: V :: v29.setCompound(v20)::CL,104427
86223 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,86227
86227 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 75::CD,86214:CD,86219:CD,86223:JM,86227:JM,86232
86228 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,86232
86233 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .compounds::DD,86236
86232 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 50::CD,86200:CD,86205:CD,86209:CD,86223:CD,86227:CD,86228:JM,86232
86236 :: NORM :: compound :: Ljava/util/List :: return v31::DD,86165
86261 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCompounds(java.util.List)::JM,86266
86266 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = p1 $molList ::
86281 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSSBonds(java.util.List)::JM,86286
86286 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = p1 $ssbonds ::
86293 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getSites()::JM,140012:JM,140300:JM,143747:JM,143678
86292 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getSites()::CE,86293:CD,86299
86296 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .sites::DD,86299
86299 :: NORM :: compound :: Ljava/util/List :: return v3::CF,86293
86301 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSites(java.util.List)::JM,86306
86306 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = p1 $sites ::
86312 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addModel(java.util.List)::CD,86317:CD,86331:CD,86335:CD,86339
86317 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $model .iterator()::JM,86335
86322 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,86335
86327 :: CALL :: call :: V :: v11.setStructure(p0 $this )::CL,104438
86331 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,86335
86335 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,86322:CD,86327:CD,86331:JM,86335
86336 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .models::
86339 :: CALL :: call :: Z :: v15 = v13.add(p1 $model )::JM,86335
86357 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::JM,72534:JM,72782:JM,83298
86356 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::CE,86357:CD,86363
86360 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .ranges::DD,86363
86363 :: NORM :: compound :: Ljava/util/List :: return v3::CF,86357
86365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setModel(int,java.util.List)::CD,86372:CD,86378:CD,86392:CD,86396:CD,86400:CD,86404
86372 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v24 = new java.lang.IllegalArgumentException::
86378 :: CALL :: call :: Ljava/util/Iterator :: v7 = p2 $model .iterator()::JM,86396
86383 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,86396
86388 :: CALL :: call :: V :: v13.setStructure(p0 $this )::CL,104438
86392 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,86396
86397 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .models::JM,86404
86396 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 28::CD,86383:CD,86388:CD,86392:JM,86396
86400 :: CALL :: call :: Z :: v17 = v15.isEmpty()::JM,86404
86405 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .models::
86404 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 81::CD,86408:CD,86417
86408 :: CALL :: call :: Z :: v23 = v21.add(p2 $model )::JM,86396
86414 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .models::
86417 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.set(p1 $position , p2 $model )::JM,86396
86443 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getChainId()::CE,86444:CD,86450
86444 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueRange.getChainId()::JM,72601:JM,83288
86447 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chain::DD,86450
86450 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,86444
86453 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueRange.getStart()::JM,72675
86452 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getStart()::CE,86453:CD,86459
86456 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .start::DD,86459
86459 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,86453
86461 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getEnd()::CE,86462:CD,86468
86462 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueRange.getEnd()::JM,72676
86465 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .end::DD,86468
86468 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,86462
86471 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::JM,145368
86470 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::CE,86471:CD,86479:CD,86484:CD,86485:CD,86490:CD,86491
86476 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .models::JM,86484
86479 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.get(p1 $modelnr )::JM,86484:JM,86490
86485 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p2 $number )::JM,86490:JM,86484
86484 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::JM,86490
86491 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,86471
86490 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,86491
86497 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setChainId(java.lang.String)::JM,86502
86502 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
86508 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.size()::CD,86515:CD,86519
86512 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,86519
86515 :: CALL :: call :: Z :: v6 = v4.isEmpty()::JM,86519
86519 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 34::CD,86523
86520 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .models::
86523 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(#(0))::
86543 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::JM,72796:JM,118939
86542 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::CE,86543:CD,86548:CD,86553:CD,86558:CD,86562:CD,86563:CD,86567:CD,86572:CD,86573:CD,86574:CD,86580:CD,86585:CD,86590:CD,86595:CD,86603:CD,86608
86548 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,86562:CL,104449
86553 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,86562
86558 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,86562
86563 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,86572:CL,64429
86562 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,86573
86567 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,86572
86573 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,86543
86572 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,86558:CD,86562:CD,86563:CD,86567:CD,86574:CF,86573
86574 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,86562
86580 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
86585 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,86572
86590 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#('))::
86595 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#( for PDB id ))::
86600 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdb_id::
86603 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(v31)::
86608 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
86631 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupsByPDB(org.biojava.nbio.structure.ResidueNumber,org.biojava.nbio.structure.ResidueNumber)::JM,72688:JM,72795
86630 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupsByPDB(org.biojava.nbio.structure.ResidueNumber,org.biojava.nbio.structure.ResidueNumber)::CE,86631:CD,86636:CD,86640:CD,86644:CD,86651:CD,86697:CD,86702:CD,86707:CD,86715:CD,86720:CD,86730:CD,86734:CD,86737:CD,86742:CD,86747:CD,86755:CD,86760:CD,86771:CD,86776:CD,86781:CD,86789:CD,86794:CD,86803:CD,86807:CD,86808:CD,86813:CD,86814:CD,86817
86636 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $start .toString()::JM,86674:CL,64367
86640 :: CALL :: call :: Ljava/lang/String :: v8 = p2 $end .toString()::JM,86694:CL,64367
86644 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,86807:JM,86813
86648 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .groups::JM,86660:JM,86734
86651 :: CALL :: call :: Ljava/util/Iterator :: v13 = v11.iterator()::JM,86660:JM,86734
86656 :: CALL :: call :: Ljava/lang/Object :: v18 = v13.next()::JM,86660:JM,86734
86660 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::
86665 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,86674:CL,64367
86669 :: CALL :: call :: Z :: v25 = v23.equals(v6)::JM,86674
86675 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,86676
86674 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 77::CF,86815
86676 :: CALL :: call :: Z :: v30 = v9.add(v19)::
86685 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,86694:CL,64367
86689 :: CALL :: call :: Z :: v36 = v34.equals(v8)::JM,86694
86694 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 159::CF,86817:CD,86730:CD,86734
86697 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v77 = new java.lang.StringBuilder::
86702 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(v6)::JM,86674
86707 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v80.append(#( in chain ))::
86712 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .chainID::
86715 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v82.append(v83)::
86720 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::
86730 :: CALL :: call :: Z :: v16 = v13.hasNext()::JM,86660:JM,86734
86734 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 42::CD,86656:CD,86660:CD,86665:CD,86669:CD,86674:CD,86675:CD,86685:CD,86689:CD,86694:CD,86815:CD,86817:JM,86734
86737 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
86742 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v63.append(v6)::JM,86674
86747 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v67.append(#( in chain ))::
86752 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .chainID::
86755 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(v70)::
86760 :: CALL :: call :: Ljava/lang/String :: v74 = v72.toString()::
86771 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v48 = new java.lang.StringBuilder::
86776 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v48.append(v8)::JM,86694
86781 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( in chain ))::
86786 :: EXPR :: reference :: Ljava/lang/String :: v56 = p0 $this .chainID::
86789 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(v56)::
86794 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
86803 :: CALL :: call :: I :: v42 = v9.size()::JM,86807
86807 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Group :: v43 = new org.biojava.nbio.structure.Group[]::JM,86813
86808 :: CALL :: call :: [Ljava/lang/Object :: v45 = v9.toArray(v43)::JM,86813
86813 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::CF,86814
86815 :: EXPR :: assign :: null :: PHI v27 = v37, #(1)::DD,86675:DD,86817
86814 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Group :: return v46::DD,86631
86817 :: EXPR :: assign :: null :: PHI v37 = #(0), v27::DD,86815
86866 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = #(null)::
86869 :: EXPR :: reference :: Ljava/lang/String :: v5 = org.biojava.nbio.structure.ChainImpl.DEFAULT_CHAIN_ID::DD,86871
86871 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = v5::
86874 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,86878
86878 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v6::
86881 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,86885
86885 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = v8::
86888 :: NORM :: declaration :: Ljava/util/HashMap :: v10 = new java.util.HashMap::DD,86892
86892 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbResnumMap = v10::
86895 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = #(null)::
86912 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setChainID(java.lang.String)::JM,86917
86917 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = p1 $nam ::
86923 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addChain(org.biojava.nbio.structure.Chain,int)::CD,86936:CD,86940:JM,86967
86933 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .models::JM,86940
86936 :: CALL :: call :: Z :: v8 = v6.isEmpty()::JM,86940
86941 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::
86940 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 50::CF,86941:CD,86945:CD,86953:CD,86962:CD,86967:CD,86968
86945 :: CALL :: call :: Z :: v19 = v16.add(p1 $chain )::JM,86967
86950 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .models::
86953 :: CALL :: call :: Z :: v22 = v20.add(v16)::
86959 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .models::JM,86967
86962 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p2 $modelnr )::JM,86967
86967 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::
86968 :: CALL :: call :: Z :: v15 = v13.add(p1 $chain )::JM,86967
86993 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::JM,120033:JM,119968:JM,119976:JM,120129:JM,120121:JM,120186:JM,122540
86992 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::CE,86993:CD,86999
86996 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .seqResGroups::DD,86999
86999 :: NORM :: compound :: Ljava/util/List :: return v3::CF,86993
87001 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqResGroups(java.util.List)::CD,87006:CD,87020:CD,87024:JM,87025
87006 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,87025:JM,87024
87011 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,87024
87016 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,94086
87020 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,87024
87025 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = p1 $groups ::
87024 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,87011:CD,87016:CD,87020:JM,87024
87048 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqMisMatches(java.util.List)::JM,87053
87053 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = p1 $seqMisMatches ::
87059 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.addGroup(org.biojava.nbio.structure.Group)::CD,87064:CD,87068:CD,87072:CD,87086:CD,87090:CD,87094:CD,87099:CD,87103:CD,87108:CD,87240:JM,87218
87064 :: CALL :: call :: V :: p1 $group .setChain(p0 $this )::CL,94086
87068 :: CALL :: call :: Ljava/util/List :: v6 = p1 $group .getAltLocs()::JM,87090:CL,104462
87072 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,87090
87077 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,87090
87082 :: CALL :: call :: V :: v14.setChain(p0 $this )::CL,94086
87086 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,87090
87091 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .groups::
87090 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,87077:CD,87082:CD,87086:JM,87090
87094 :: CALL :: call :: Z :: v18 = v16.add(p1 $group )::JM,87218
87099 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v21 = p1 $group .getResidueNumber()::JM,87103:CL,64358
87103 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 78::CF,87240:CD,87104
87104 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,87240:CL,64367
87109 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .groups::JM,87116
87108 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 252::CD,87112:CD,87116:CD,87117:CD,87124:CD,87129
87112 :: CALL :: call :: I :: v27 = v25.size()::JM,87116
87117 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
87116 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 - #(1)::
87124 :: CALL :: call :: Z :: v34 = v32.containsKey(v24)::JM,87129
87129 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 240::CD,87159:CD,87164:CD,87165:CD,87169:CD,87189:CD,87194:CD,87195:CD,87199:CD,87218:CD,87219:CD,87233
87153 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .groups::
87159 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v24)::JM,87164
87165 :: CALL :: call :: I :: v54 = v52.intValue()::
87164 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::
87169 :: CALL :: call :: Ljava/lang/Object :: v56 = v48.get(v54)::
87183 :: EXPR :: reference :: Ljava/util/List :: v61 = p0 $this .groups::
87189 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v24)::JM,87194
87195 :: CALL :: call :: I :: v67 = v65.intValue()::
87194 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::
87199 :: CALL :: call :: Ljava/lang/Object :: v69 = v61.get(v67)::
87219 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 252::CD,87223
87218 :: EXPR :: assign :: Z :: v74=p1 $group  INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,87219
87223 :: CALL :: call :: Ljava/lang/Object :: v77 = v75.put(v24, v31)::
87233 :: CALL :: call :: Ljava/lang/Object :: v37 = v35.put(v24, v31)::
87240 :: EXPR :: assign :: null :: PHI v24 = #(null), v23::DD,87108
87301 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.nrModels()::CE,87302:CD,87308:CD,87312
87302 :: EXIT :: exit :: I :: org.biojava.nbio.structure.StructureImpl.nrModels()::JM,72788:JM,94162:JM,98732:JM,100113:JM,120855:JM,122607:JM,122687:JM,139547:JM,139868
87305 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .models::JM,87312
87308 :: CALL :: call :: I :: v5 = v3.size()::JM,87312
87312 :: NORM :: compound :: I :: return v5::CF,87302
87314 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.toCanonical()::CD,87327
87327 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,83957
87340 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.toCanonical()::CD,87350:CD,87354:CD,87359:CD,87366:CD,87371:CD,87414:CD,87422:CD,87427:CD,87436:CD,87467:CD,87468
87350 :: CALL :: call :: Ljava/util/Map :: v8 = parseQuery(v6)::CL,84664
87354 :: CALL :: call :: Z :: v22 = v8.containsKey(#(pdbid))::JM,87359
87359 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 40::CF,87467:CD,87360:CD,87365
87360 :: CALL :: call :: Ljava/lang/Object :: v25 = v8.get(#(pdbid))::JM,87365
87365 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::DD,87467
87366 :: CALL :: call :: Z :: v30 = v8.containsKey(#(residues))::JM,87371
87371 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 69::CD,87372:CD,87378:CD,87383:CD,87388:CD,87468
87372 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.get(#(residues))::
87378 :: CALL :: call :: Ljava/util/List :: v47 = parseMultiple(v45)::CL,83957
87383 :: CALL :: call :: Z :: v33 = v8.containsKey(#(chainid))::JM,87388
87389 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ResidueRange :: v35 = new org.biojava.nbio.structure.ResidueRange[]::JM,87407:CF,87390
87388 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 141::CF,87468:CD,87389:CD,87390:CD,87391:CD,87407
87391 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.get(#(chainid))::
87390 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v36 = new org.biojava.nbio.structure.ResidueRange::DD,87403
87403 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
87407 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,87407
87414 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
87422 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
87427 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
87436 :: PRED :: IF :: Z :: if (v49 != #(null)) goto 168::CD,87455
87455 :: CALL :: call :: Ljava/lang/String :: v62 = guessPDBID(v60)::CL,83318
87467 :: EXPR :: assign :: null :: PHI v27 = #(null), v26::DD,87468
87468 :: EXPR :: assign :: null :: PHI v49 = v27, v27, v27, #(null)::DD,87436
87511 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.toCanonical()::CD,87524
87524 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,104537
87537 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.toCanonical()::CD,87541:CD,87545:CD,87549:CD,87553:CD,87557:CD,87558:CD,87563:CD,87567:CD,87571:CD,87601:CD,87605:CD,87607
87541 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
87545 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getDomainName()::CL,104593
87549 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getDomainName()::JM,87557:CL,104593
87553 :: CALL :: call :: I :: v10 = v8.length()::JM,87557
87557 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 - #(3)::
87558 :: CALL :: call :: C :: v14 = v6.charAt(v12)::
87563 :: CALL :: call :: Ljava/lang/String :: v16 = valueOf(v14)::
87567 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getSegments()::JM,87605:CL,104602
87571 :: CALL :: call :: Ljava/util/Iterator :: v20 = v18.iterator()::JM,87605
87576 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.next()::JM,87605
87581 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v27 = new org.biojava.nbio.structure.ResidueRange::
87596 :: CALL :: call :: Z :: v34 = v3.add(v27)::
87601 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,87605
87605 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 44::CD,87576:CD,87581:JM,104656:JM,104642:CD,87596:CD,87601:JM,87605
87607 :: CALL :: call :: Ljava/lang/String :: v37 = p0 $this .getThePdbId()::CL,84559
87930 :: EXPR :: modify :: I :: p0 $this .m = p1 $m ::
87933 :: EXPR :: modify :: I :: p0 $this .n = p2 $n ::
87937 :: EXPR :: modify :: [[D :: p0 $this .A = v6::
87936 :: NORM :: declaration :: [[D :: v6 = new [][]::DD,87937
87956 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #(null)::
87959 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v5 = org.biojava.nbio.structure.Element.R::DD,87961
87961 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = v5::
87965 :: EXPR :: modify :: [D :: p0 $this .coords = v7::
87964 :: NORM :: declaration :: [D :: v7 = new []::DD,87965
87968 :: EXPR :: modify :: F :: p0 $this .occupancy = #(0.0 f)::
87971 :: EXPR :: modify :: F :: p0 $this .tempfactor = #(0.0 f)::
87974 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
87977 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = #(null)::
87980 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = #(null)::
87983 :: EXPR :: modify :: S :: p0 $this .charge = #(0)::
88481 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getCoords()::CE,88482:CD,88488
88482 :: EXIT :: exit :: [D :: org.biojava.nbio.structure.AtomImpl.getCoords()::JM,94359
88485 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::DD,88488
88488 :: NORM :: compound :: [D :: return v3::CF,88482
91159 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL,int)::CD,91164:CD,91168:CD,91174:CD,91178:CD,91183:CD,91187:CD,91192:CD,91196:CD,91201:CD,91205:CD,91221:CD,91227:CD,91237:CD,91250:CD,91256:CD,91266:CD,91273
91164 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,91168
91168 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
91174 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
91178 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(p2 $timeout )::JM,91168
91183 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
91187 :: CALL :: call :: Ljava/lang/String :: v19 = setProperty(#(sun.net.client.defaul...), v17)::
91192 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
91196 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(p2 $timeout )::JM,91168
91201 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
91205 :: CALL :: call :: Ljava/lang/String :: v28 = setProperty(#(sun.net.client.defaul...), v26)::
91221 :: CALL :: call :: Ljava/lang/reflect/Method :: v38 = v31.getMethod(#(setConnectTimeout), v34)::
91227 :: NORM :: declaration :: [Ljava/lang/Object :: v39 = new java.lang.Object[]::
91237 :: CALL :: call :: Ljava/lang/Object :: v43 = v38.invoke(v7, v39)::
91250 :: CALL :: call :: Ljava/lang/reflect/Method :: v48 = v31.getMethod(#(setReadTimeout), v45)::
91256 :: NORM :: declaration :: [Ljava/lang/Object :: v49 = new java.lang.Object[]::
91266 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.invoke(v7, v49)::
91273 :: CALL :: call :: V :: v54.printStackTrace()::
91325 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String)::CD,91336:CD,91341:CD,91346:CD,91355:CD,91360:CD,91366:CD,91374:CD,91390
91336 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
91341 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v69.append(p1 $pdbId )::
91346 :: CALL :: call :: Ljava/lang/String :: v75 = v73.toString()::
91355 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getLocalFile(p1 $pdbId )::JM,91401:JM,91436:CL,111529
91360 :: CALL :: call :: [I :: v10 = $SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CL,111741
91363 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v11 = p0 $this .fetchBehavior::
91366 :: CALL :: call :: I :: v13 = v11.ordinal()::
91370 :: EXPR :: reference :: I :: v14 = v10[v13]::DD,91374
91374 :: PRED :: IF :: null :: switch v14::CD,91401:CD,91436:CD,91458:CD,91460
91390 :: CALL :: call :: Ljava/lang/String :: v66 = format(#(Structure %s not foun...), v62)::
91401 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,91406:CD,91410:CD,91458:CD,91460
91406 :: CALL :: call :: Z :: v28 = v26.isUpdateRemediatedFiles()::JM,91410:CL,111852
91411 :: CALL :: call :: J :: v30 = v8.lastModified()::JM,91417
91410 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 175::CD,91411:CD,91415:CD,91417:CD,91418
91415 :: EXPR :: reference :: J :: v31 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,91417
91417 :: EXPR :: assign :: Z :: v32 = v30 == v31::DD,91418
91418 :: PRED :: IF :: Z :: if (v32 >= #(0)) goto 175::CD,91458:CD,91460
91437 :: CALL :: call :: J :: v17 = v8.lastModified()::JM,91443
91436 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,91437:CD,91441:CD,91443:CD,91444:CD,91458:CD,91460
91441 :: EXPR :: reference :: J :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,91443
91443 :: EXPR :: assign :: Z :: v19 = v17 == v18::DD,91444
91444 :: PRED :: IF :: Z :: if (v19 >= #(0)) goto 216::CD,91458:CD,91460
91455 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v39 = p0 $this .obsoleteBehavior::DD,91460
91458 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v40 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::CF,91460
91461 :: CALL :: call :: Ljava/lang/String :: v54 = getCurrent(p1 $pdbId )::CL,111891
91460 :: PRED :: IF :: Z :: if (v39 != v40) goto 253::CD,91461:CD,91469:CD,91481:CD,91483
91469 :: CALL :: call :: Ljava/io/File :: v58 = p0 $this .downloadStructure(v55, v56, #(0), v38)::CL,111926
91478 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v41 = p0 $this .obsoleteBehavior::DD,91483
91481 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v42 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,91483
91483 :: PRED :: IF :: Z :: if (v41 != v42) goto 287::CD,91484:CD,91488:CD,91490:CD,91506
91484 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = getStatus(p1 $pdbId )::JM,91490:CL,112137
91488 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v45 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::CF,91490
91490 :: PRED :: IF :: Z :: if (v44 != v45) goto 287::CD,91494:CD,91506
91494 :: CALL :: call :: Ljava/io/File :: v52 = p0 $this .downloadStructure(p1 $pdbId , v49, #(1), v38)::CL,111926
91506 :: CALL :: call :: Ljava/io/File :: v48 = p0 $this .downloadStructure(p1 $pdbId , v46, #(0), v38)::CL,111926
91580 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.reloadFromFile()::CD,91584:CD,91588:CD,91595:CD,91599
91584 :: CALL :: call :: Ljava/io/File :: v4 = p0 $this .getCacheFile()::JM,91635:JM,91607:CL,75431
91588 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
91595 :: CALL :: call :: Z :: v8 = v4.exists()::JM,91599
91599 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 55::CD,91602:CD,91607:CD,91611:CD,91616:CD,91630:CD,91635:CD,91639:CD,91644:CD,91657:CD,91662:CD,91666:CD,91670:CD,91692:CD,91697:CD,91701:CD,91706:CD,91714:CD,91718:CD,91722:CD,91727:CD,91732
91602 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
91607 :: CALL :: call :: Ljava/lang/String :: v67 = v4.getAbsolutePath()::JM,91635:JM,91607
91611 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
91616 :: CALL :: call :: Ljava/lang/String :: v71 = v69.toString()::
91630 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
91635 :: CALL :: call :: Ljava/lang/String :: v15 = v4.getAbsolutePath()::JM,91635:JM,91607
91639 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v11.append(v15)::
91644 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
91657 :: NORM :: declaration :: Ljava/io/ObjectInputStream :: v23 = new java.io.ObjectInputStream::
91662 :: CALL :: call :: Ljava/lang/Object :: v26 = v23.readObject()::JM,91666
91667 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .serializedCache = v32::
91666 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v26::DD,91667
91670 :: CALL :: call :: V :: v23.close()::
91692 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
91697 :: CALL :: call :: Ljava/lang/String :: v42 = v4.getName()::JM,91635:JM,91607
91701 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
91706 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( size: ))::
91711 :: EXPR :: reference :: Ljava/util/Map :: v48 = p0 $this .serializedCache::
91714 :: CALL :: call :: Ljava/util/Set :: v50 = v48.keySet()::
91718 :: CALL :: call :: I :: v52 = v50.size()::
91722 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v47.append(v52)::
91727 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#( cached records.))::
91732 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
91777 :: EXIT :: exit :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::JM,91953:JM,91907:JM,91879:JM,91911:JM,91912:JM,91898:JM,91885:JM,91917:JM,91949:JM,91902
91776 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::CE,91777:CD,91780:CD,91782:CD,91786:CD,91787:CD,91795:CD,91800:CD,91802:CD,91805:CD,91807
91780 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.domain.AssignmentXMLSerializer.jaxbContext::JM,91795:JM,91782:JM,91800
91782 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,91795:JM,91782:JM,91800
91787 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
91786 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,91795:JM,91800
91795 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,91795:JM,91800
91800 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,91807
91802 :: CALL :: call :: V :: v14.printStackTrace()::
91805 :: NORM :: compound :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: return v17::DD,91777
91807 :: EXPR :: assign :: null :: PHI v17 = v13, #(null)::CF,91805
91818 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String)::CD,91822
91822 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v5 = getSCOP(p1 $version , #(0))::CL,112373
91830 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.loadRepresentativeDomains()::CD,91835:CD,91839:CD,91847:CD,91852:CD,91867:CD,91871:CD,91875:CD,91879:CD,91885:CD,91889:CD,91898:CD,91902:CD,91949:CD,91953:CD,91957:CD,91965:CD,91970:CD,91980:CD,91988:CD,91993
91835 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
91839 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
91847 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v5.append(#(getRepresentativePDPD...))::
91852 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
91867 :: CALL :: call :: Ljava/io/InputStream :: v20 = getInputStream(v4)::CL,75066
91871 :: CALL :: call :: Ljava/lang/String :: v22 = convertStreamToString(v20)::CL,65816
91875 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: v24 = fromXML(v22)::JM,91953:JM,91907:JM,91879:JM,91911:JM,91912:JM,91898:JM,91885:JM,91917:JM,91949:JM,91902:CL,91776
91879 :: CALL :: call :: Ljava/util/Map :: v26 = v24.getAssignments()::JM,91953:JM,91907:JM,91879:JM,91911:JM,91912:JM,91898:JM,91885:JM,91917:JM,91949:JM,91902
91885 :: CALL :: call :: I :: v30 = v26.size()::JM,91953:JM,91907:JM,91911:JM,91912:JM,91898:JM,91885:JM,91917:JM,91949:JM,91902
91889 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,91953:JM,91907:JM,91911:JM,91917:JM,91949:JM,91902
91898 :: CALL :: call :: Ljava/util/Set :: v35 = v26.keySet()::JM,91953:JM,91907:JM,91911:JM,91912:JM,91898:JM,91885:JM,91917:JM,91949:JM,91902
91902 :: CALL :: call :: Ljava/util/Iterator :: v37 = v35.iterator()::JM,91953:JM,91907:JM,91911:JM,91949:JM,91917:JM,91902
91907 :: CALL :: call :: Ljava/lang/Object :: v42 = v37.next()::JM,91953:JM,91907:JM,91911:JM,91949
91911 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::JM,91953:JM,91907:JM,91911:JM,91912:JM,91917:JM,91949:JM,91902:JM,91898:JM,91885
91912 :: CALL :: call :: Ljava/lang/Object :: v45 = v26.get(v43)::JM,91953:JM,91907:JM,91911:JM,91912:JM,91898:JM,91885:JM,91917:JM,91949:JM,91902
91917 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::JM,91927:JM,91918
91918 :: CALL :: call :: [Ljava/lang/String :: v49 = v46.split(#(,))::JM,91927:JM,91918
91923 :: NORM :: declaration :: Ljava/util/TreeSet :: v50 = new java.util.TreeSet::
91927 :: EXPR :: assign :: I :: v52 = v49.length::DD,91939
91933 :: CALL :: call :: Z :: v55 = v50.add(v53)::
91939 :: PRED :: IF :: Z :: if (v58 < v52) goto 165::CD,91933:CD,91938:CD,92005
91938 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v58 + #(1)::DD,92005
91943 :: CALL :: call :: Ljava/lang/Object :: v61 = v59.put(v43, v50)::
91949 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,91953:JM,91907:JM,91911:JM,91949
91953 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 105::CD,91907:CD,91911:CD,91912:CD,91917:CD,91918:CD,91923:CD,91927:CD,91939:CD,91943:CD,91949:CD,92005:JM,91953
91957 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
91962 :: EXPR :: reference :: Ljava/lang/String :: v68 = p0 $this .server::
91965 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(v68)::
91970 :: CALL :: call :: Ljava/lang/String :: v72 = v70.toString()::
91980 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
91985 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .server::
91988 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v78)::
91993 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
92005 :: EXPR :: assign :: null :: PHI v58 = #(0), v57::DD,91938:DD,91939
92097 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::JM,74783
92096 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::CE,92097:CD,92100:CD,92104:CD,92109:CD,92113
92100 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getClaFilename()::CL,112493
92104 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
92109 :: CALL :: call :: Z :: v8 = v5.exists()::JM,92113
92113 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 33::CD,92114:CD,92118:CD,92119:CD,92121
92114 :: CALL :: call :: J :: v11 = v5.length()::JM,92118
92119 :: PRED :: IF :: Z :: if (v13 <= #(0)) goto 33::CD,92120:CD,92121
92118 :: EXPR :: assign :: Z :: v13 = v11 == #(0 l)::DD,92119
92121 :: NORM :: compound :: Z :: return #(0)::DD,92097
92120 :: NORM :: compound :: Z :: return #(1)::DD,92097
92134 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadClaFile()::CD,92141:CD,92145:CD,92152:CD,92157:CD,92166:CD,92175:CD,92179:CD,92184:CD,92190:CD,92195:CD,92202:CD,92203
92138 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,92145
92141 :: CALL :: call :: I :: v5 = v3.size()::JM,92145
92145 :: PRED :: IF :: Z :: if (v5 >= #(1)) goto 20::CD,92146
92146 :: CALL :: call :: V :: p0 $this .initScopURLs()::CL,112561
92149 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .mirrors::
92152 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::
92157 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::
92166 :: CALL :: call :: Ljava/lang/String :: v21 = v17.getClaURL(v19)::CL,112645:CL,112621
92175 :: CALL :: call :: Ljava/lang/String :: v24 = p0 $this .getClaFilename()::CL,112493
92179 :: NORM :: declaration :: Ljava/io/File :: v25 = new java.io.File::
92184 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v18, v25)::CL,112683
92190 :: CALL :: call :: Z :: v13 = v11.hasNext()::
92195 :: NORM :: declaration :: Ljava/io/IOException :: v31 = new java.io.IOException::
92203 :: EXPR :: assign :: null :: PHI v30 = #(null), v28::
92202 :: EXPR :: assign :: Ljava/lang/Exception :: v28 = catch <exc>::DD,92203
92226 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification()::CD,92230:CD,92231:CD,92243:CD,92244:CD,92258
92231 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getClaFilename()::CL,112493
92230 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
92243 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,92244
92244 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
92258 :: CALL :: call :: V :: p0 $this .parseClassification(v9)::CL,112732
92293 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassId(int)::JM,92298
92298 :: EXPR :: modify :: I :: p0 $this .classId = p1 $classId ::
92313 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassificationId(java.lang.String)::JM,92318
92318 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classificationId = p1 $classificationId ::
92333 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setDomainId(int)::JM,92338
92338 :: EXPR :: modify :: I :: p0 $this .domainId = p1 $domainId ::
92353 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFamilyId(int)::JM,92358
92358 :: EXPR :: modify :: I :: p0 $this .familyId = p1 $familyId ::
92373 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFoldId(int)::JM,92378
92378 :: EXPR :: modify :: I :: p0 $this .foldId = p1 $foldId ::
92393 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPdbId(java.lang.String)::JM,92398
92398 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
92413 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPx(int)::JM,92418
92418 :: EXPR :: modify :: I :: p0 $this .px = p1 $px ::
92433 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setRanges(java.util.List)::JM,92438
92438 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p1 $ranges ::
92444 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setScopId(java.lang.String)::JM,92449
92449 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .scopId = p1 $scopId ::
92464 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSpeciesId(int)::JM,92469
92469 :: EXPR :: modify :: I :: p0 $this .speciesId = p1 $speciesId ::
92484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSunid(java.lang.Integer)::JM,92489
92489 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .sunid = p1 $sunid ::
92504 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSuperfamilyId(int)::JM,92509
92509 :: EXPR :: modify :: I :: p0 $this .superfamilyId = p1 $superfamilyId ::
92515 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::CE,92516:CD,92519:CD,92521:CD,92525:CD,92526:CD,92534:CD,92539:CD,92540:CD,92545:CD,92552:CD,92553
92516 :: EXIT :: exit :: Ljava/util/SortedSet :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::JM,84425:JM,84312
92519 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextStringSortedSet::JM,92534:JM,92521:JM,92539
92521 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,92534:JM,92521:JM,92539
92525 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,92534:JM,92539
92526 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
92534 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,92534:JM,92539
92539 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,92552:JM,92540
92540 :: CALL :: call :: Ljava/util/TreeSet :: v15 = v13.getData()::JM,92552:JM,92540
92545 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v17 = new java.lang.RuntimeException::
92553 :: EXPR :: assign :: Ljava/lang/Exception :: v16 = catch <exc>::
92552 :: NORM :: compound :: Ljava/util/SortedSet :: return v15::DD,92516
92665 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::CE,92666:CD,92671:CD,92676
92666 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::
92671 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,92676:CL,113239
92676 :: NORM :: compound :: I :: return v6::CF,92666
92679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::CE,92680:CD,92685:CD,92690
92680 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::
92685 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,92690:CL,113453
92690 :: NORM :: compound :: I :: return v6::DD,92680
93365 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::JM,76434:JM,77220:JM,77613:JM,77697:JM,77863:JM,82437
93364 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::CE,93365:CD,93389:CD,93393:CD,93395:JM,93376:JM,93386
93371 :: CALL :: call :: Ljava/lang/Object :: v9 = p2 $chains .get(v17)::JM,93393:JM,93376:JM,93386
93377 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getChainID()::JM,93386:CL,64429
93376 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,93387
93381 :: CALL :: call :: Z :: v14 = p1 $chainID .equals(v12)::JM,93393:JM,93376:JM,93386
93387 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v10::DD,93365
93386 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CD,93387:CD,93388:CD,93389:CD,93393:CD,93395
93389 :: CALL :: call :: I :: v7 = p2 $chains .size()::JM,93393:JM,93376:JM,93386
93388 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,93395
93393 :: PRED :: IF :: Z :: if (v17 < v7) goto 7::CD,93371:CD,93376:CD,93377:CD,93381:CD,93386:CD,93394:JM,93393
93395 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::JM,93376:JM,93386:DD,93388:DD,93393
93394 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,93365
93420 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
93423 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p2 $residueNumber ::
93426 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p3 $insCode ::
93437 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::CE,93438:CD,93441:CD,93445:CD,93482:CD,93484
93438 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::JM,76572:JM,80575
93441 :: CALL :: call :: Ljava/lang/Character :: v4 = get1LetterCodeAmino(p1 $groupCode3 )::JM,93445:JM,93484:CL,113746
93445 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 71::CF,93484:CD,93446:CD,93450:CD,93454
93446 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $groupCode3 .trim()::
93450 :: CALL :: call :: Z :: v9 = isNucleotide(v7)::JM,93454:CL,113761
93454 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 66::CD,93457:CD,93462:CD,93463:CD,93472:CD,93478:CD,93483:CD,93484
93457 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.get(v7)::JM,93462
93463 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 52::CF,93483:CD,93466:CD,93471
93462 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::DD,93463:DD,93483
93466 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.get(v7)::JM,93471
93471 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,93483
93473 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(88))::JM,93484
93472 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 71::CF,93484:CD,93473
93478 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(88))::JM,93484
93483 :: EXPR :: assign :: null :: PHI v22 = v17, v21::DD,93472:DD,93484
93482 :: NORM :: compound :: Ljava/lang/Character :: return v26::DD,93438
93484 :: EXPR :: assign :: null :: PHI v26 = v4, v22, v24, v13::CF,93482
93507 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::JM,77650:JM,94026
93506 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::CE,93507:CD,93513:CD,93517:JM,93528:JM,93533
93513 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = getGroupFromChemCompDictionary(p3 $aminoCode3 )::JM,93527:JM,93517:CL,113797
93517 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 28::CD,93518:CD,93522:CD,93526:CD,93528:CD,93557:CD,93558
93518 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v10 = v7.getChemComp()::CL,114030
93522 :: CALL :: call :: Z :: v12 = v10.isEmpty()::JM,93526:CL,114090
93527 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,93507
93526 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,93527:CD,93528:CD,93557:CD,93558
93529 :: CALL :: call :: C :: v16 = p2 $aminoCode1 .charValue()::JM,93533
93528 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 40::CF,93534:CD,93529:CD,93533:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,93558
93533 :: PRED :: IF :: Z :: if (#(88) != v16) goto 53::CF,93534:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,93539:CD,93543:CD,93558
93534 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v24 = new org.biojava.nbio.structure.HetatomImpl::DD,93558
93539 :: CALL :: call :: Z :: v18 = isNucleotide(p3 $aminoCode3 )::JM,93543:CL,113761
93543 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 75::CF,93549:CF,93544:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,93553:CD,93558
93544 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v22 = new org.biojava.nbio.structure.NucleotideImpl::DD,93558
93549 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v19 = new org.biojava.nbio.structure.AminoAcidImpl::DD,93558
93553 :: CALL :: call :: V :: v19.setAminoType(p2 $aminoCode1 )::CL,114231
93557 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v26::DD,93507
93558 :: EXPR :: assign :: null :: PHI v26 = v24, v22, v19::CF,93557
93584 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBName(java.lang.String)::JM,93602
93602 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
93615 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setPDBName(java.lang.String)::JM,93620
93620 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
93626 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setResidueNumber(org.biojava.nbio.structure.ResidueNumber)::JM,93631
93631 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = p1 $residueNumber ::
93637 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addTohetGroupsDecider(org.biojava.nbio.structure.Group)::CD,93642:CD,93646:CD,93651:JM,93693
93642 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $group .getPDBName()::JM,93651:CL,104483
93646 :: CALL :: call :: Z :: v9 = v6.equals(#(HOH))::JM,93651
93651 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,93653:CD,93657:CD,93680:CD,93707
93653 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = p1 $group .getChemComp()::JM,93657:CL,114030
93657 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 48::CD,93658:CD,93662:CD,93664:CD,93669:CD,93671:CD,93675:CD,93679:CD,93707
93658 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v19 = p1 $group .getType()::JM,93664:JM,93669:CL,54408:CL,54424:CL,54416
93662 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v20 = org.biojava.nbio.structure.GroupType.HETATM::JM,93664:JM,93669
93664 :: CALL :: call :: Z :: v22 = v19.equals(v20)::JM,93664:JM,93669
93669 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 62::CF,93707
93671 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v14 = p1 $group .getChemComp()::CL,114030
93675 :: CALL :: call :: Z :: v16 = v14.isStandard()::JM,93679:CL,114242
93679 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 62::CF,93707
93680 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 99::CD,93684:CD,93688:CD,93693
93684 :: CALL :: call :: Ljava/util/List :: v26 = v24.getHetGroups()::JM,93693:CL,114251
93688 :: CALL :: call :: Z :: v28 = v26.contains(p1 $group )::JM,93693
93693 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 99::CD,93697:CD,93701
93697 :: CALL :: call :: Ljava/util/List :: v31 = v29.getHetGroups()::CL,114251
93701 :: CALL :: call :: Z :: v33 = v31.add(p1 $group )::JM,93693
93707 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1), #(0), #(1)::DD,93680
93731 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.trimToSize()::CD,93738:CD,93739:CD,93750:CD,93751:CD,93759:CD,93763:CD,93786:CD,93800
93735 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,93738
93739 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 23::CD,93743:CD,93744
93738 :: EXPR :: assign :: Z :: v4=v3 INSTANCEOF java.util.ArrayList::DD,93739
93740 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::DD,93743
93743 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
93744 :: CALL :: call :: V :: v7.trimToSize()::
93747 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .altLocs::DD,93750
93751 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 45::CD,93755:CD,93756
93750 :: EXPR :: assign :: Z :: v10=v9 INSTANCEOF java.util.ArrayList::DD,93751
93752 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .altLocs::DD,93755
93755 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::
93756 :: CALL :: call :: V :: v12.trimToSize()::
93759 :: CALL :: call :: Z :: v15 = p0 $this .hasAltLoc()::JM,93763:CL,114260
93763 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 90::CD,93764:CD,93768:CD,93781:CD,93785:CF,93786
93764 :: CALL :: call :: Ljava/util/List :: v17 = p0 $this .getAltLocs()::JM,93785:CL,104462
93768 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,93785
93773 :: CALL :: call :: Ljava/lang/Object :: v23 = v19.next()::JM,93785
93778 :: CALL :: call :: V :: v24.trimToSize()::CL,93731
93781 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,93785
93785 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 65::CD,93773:CD,93778:CD,93781:JM,93785:CF,93786
93786 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,93794
93794 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v26::
93797 :: EXPR :: reference :: Ljava/util/Map :: v29 = p0 $this .atomNameLookup::DD,93800
93801 :: NORM :: declaration :: Ljava/util/HashMap :: v31 = new java.util.HashMap::DD,93809
93800 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 126::CD,93801
93809 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v31::
93841 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::JM,77224
93840 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::CE,93841:CD,93851:CD,93855:CD,93859:JM,93875:JM,93925:JM,93949
93851 :: CALL :: call :: Ljava/util/List :: v9 = v7.getAtoms()::JM,93859:CL,114287
93855 :: CALL :: call :: I :: v11 = v9.size()::JM,93859
93859 :: PRED :: IF :: Z :: if (v11 <= #(0)) goto 54::CD,93860:CD,93866:CD,93870:CD,93875:CD,93883:CD,93887:CD,93932:CD,93936:JM,93859
93860 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,93859
93866 :: CALL :: call :: Ljava/lang/Character :: v17 = v15.getAltLoc()::JM,93875:CL,114296
93870 :: CALL :: call :: Z :: v19 = v17.equals(p1 $altLoc )::JM,93875:JM,93925
93875 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 54::CD,93879:CD,93883:CD,93887:CD,93932:CD,93936
93876 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,93879
93879 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,93841
93883 :: CALL :: call :: Ljava/util/List :: v22 = v20.getAltLocs()::JM,93936:JM,93896:CL,104462
93887 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,93936:JM,93896
93892 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,93936:JM,93896
93897 :: CALL :: call :: Ljava/util/List :: v31 = v29.getAtoms()::JM,93905:JM,93931:CL,114287
93896 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::DD,93926
93901 :: CALL :: call :: I :: v33 = v31.size()::JM,93905:JM,93931
93905 :: PRED :: IF :: Z :: if (v33 <= #(0)) goto 160::CD,93906:CD,93927:CD,93931:CD,93932:CD,93936:JM,93905:JM,93896
93906 :: CALL :: call :: Ljava/util/Iterator :: v36 = v31.iterator()::JM,93905:JM,93931
93911 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,93931
93916 :: CALL :: call :: Ljava/lang/Character :: v43 = v41.getAltLoc()::JM,93925:CL,114296
93920 :: CALL :: call :: Z :: v45 = v43.equals(p1 $altLoc )::JM,93925:JM,93875
93925 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 150::CD,93926:CD,93927:CD,93931
93927 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,93931
93926 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v29::DD,93841
93931 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 121::CD,93911:CD,93916:CD,93920:CD,93925:CD,93932:CD,93936:JM,93931:JM,93896
93932 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,93936:JM,93896
93936 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 78::CD,93892:CD,93896:CD,93897:CD,93901:CD,93905:CD,93940:CD,93944:CD,93949:JM,93936
93940 :: CALL :: call :: Ljava/lang/String :: v48 = v46.getPDBName()::JM,93949:CL,104483
93944 :: CALL :: call :: Z :: v50 = p4 $groupCode3 .equals(v48)::JM,93949
93949 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 266::CD,93953:CD,93957:CD,93961:CD,93997:CD,94004:CD,94015:CD,94022:CD,94026
93953 :: CALL :: call :: Ljava/util/List :: v62 = v60.getAtoms()::JM,93961:CL,114287
93957 :: CALL :: call :: I :: v64 = v62.size()::JM,93961
93961 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,93965:CD,93969:CD,93973:CD,93974:CD,93978:CD,93982:CD,93986:CD,93992:CD,93996
93962 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v77 = p0 $this .current_group::DD,93965
93965 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v77::DD,93841
93969 :: CALL :: call :: Ljava/lang/Object :: v67 = v65.clone()::JM,93973:CL,105482:CL,105657:CL,105340
93973 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::DD,93996:CF,93974
93974 :: NORM :: declaration :: Ljava/util/ArrayList :: v69 = new java.util.ArrayList::
93978 :: CALL :: call :: V :: v68.setAtoms(v69)::CL,114317
93982 :: CALL :: call :: Ljava/util/List :: v73 = v68.getAltLocs()::CL,104462
93986 :: CALL :: call :: V :: v73.clear()::
93992 :: CALL :: call :: V :: v75.addAltLoc(v68)::CL,114403
93997 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p4 $groupCode3 )::JM,94026:CL,93506
93996 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v68::DD,93841
94004 :: CALL :: call :: V :: v52.setPDBName(p4 $groupCode3 )::CL,93615:CL,93584
94015 :: CALL :: call :: V :: v52.setResidueNumber(v56)::CL,93626
94022 :: CALL :: call :: V :: v58.addAltLoc(v52)::CL,114403
94026 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v52::DD,93841
94086 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChain(org.biojava.nbio.structure.Chain)::CD,94097:JM,94091
94091 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = p1 $chain ::
94094 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v4 = p0 $this .residueNumber::DD,94097
94097 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 25::CD,94105
94105 :: CALL :: call :: V :: v6.setChainId(v8)::CL,86497
94116 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.switchCAOnly()::CD,94126:CD,94158:CD,94162:CD,94166:CD,94174
94120 :: EXPR :: modify :: Z :: p0 $this .parseCAonly = #(1)::
94126 :: CALL :: call :: Ljava/util/List :: v6 = getRepresentativeAtomsOnly(v4)::CL,114435
94137 :: CALL :: call :: Ljava/util/List :: v13 = v11.getModel(v19)::CL,54314
94142 :: CALL :: call :: Ljava/util/List :: v15 = getRepresentativeAtomsOnly(v13)::CL,114435
94149 :: CALL :: call :: V :: v16.setModel(v19, v15)::CL,86365
94154 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,94174
94158 :: CALL :: call :: I :: v10 = v8.nrModels()::JM,94162:CL,87301
94162 :: PRED :: IF :: Z :: if (v19 < v10) goto 22::CD,94137:CD,94142:CD,94149:CD,94154:CD,94158:CD,94174
94166 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getRepresentativeAtomsOnly(v20)::CL,114482
94174 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::DD,94154:DD,94162
94195 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::CE,94196:CD,94202
94196 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::JM,76936:JM,76944
94199 :: EXPR :: reference :: [Ljava/lang/String :: v3 = p0 $this .fullAtomNames::DD,94202
94202 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,94196
94204 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setPDBserial(int)::JM,94209
94209 :: EXPR :: modify :: I :: p0 $this .pdbserial = p1 $i ::
94215 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setAltLoc(java.lang.Character)::CD,94220:JM,94229
94221 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
94220 :: PRED :: IF :: Z :: if (p1 $c  != #(null)) goto 14::CD,94225:JM,94229:JM,94220
94225 :: CALL :: call :: C :: v6 = p1 $c .charValue()::JM,94229:JM,94220
94229 :: EXPR :: modify :: C :: p0 $this .altLoc = v6::
94239 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setName(java.lang.String)::JM,94244
94244 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $s ::
94261 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setOccupancy(float)::JM,94266
94266 :: EXPR :: modify :: F :: p0 $this .occupancy = p1 $occu ::
94272 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setTempFactor(float)::JM,94277
94277 :: EXPR :: modify :: F :: p0 $this .tempfactor = p1 $temp ::
94283 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.valueOfIgnoreCase(java.lang.String)::CD,94289:CD,94293:CD,94301:CD,94302:CD,94307:CD,94312
94289 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $elementSymbol .toLowerCase()::
94293 :: CALL :: call :: Ljava/lang/Object :: v7 = v3.get(v5)::
94301 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
94302 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
94307 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(p1 $elementSymbol )::
94312 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
94327 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setElement(org.biojava.nbio.structure.Element)::JM,94332
94332 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = p1 $e ::
94338 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAtom(org.biojava.nbio.structure.Atom)::CD,94343:CD,94350:CD,94355:CD,94359:CD,94367
94343 :: CALL :: call :: V :: p1 $atom .setGroup(p0 $this )::CL,114644
94347 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::
94350 :: CALL :: call :: Z :: v7 = v5.add(p1 $atom )::
94355 :: CALL :: call :: [D :: v9 = p1 $atom .getCoords()::JM,94359:CL,88481
94359 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 33::CD,94360
94360 :: CALL :: call :: V :: p0 $this .setPDBFlag(#(1))::CL,114655
94364 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .atomNameLookup::DD,94367
94367 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 176::CD,94375:CD,94381:CD,94382
94375 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.put(v16, p1 $atom )::JM,94381
94381 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,94382
94383 :: CALL :: call :: Ljava/lang/Character :: v22 = p1 $atom .getAltLoc()::JM,94391:JM,94479:CL,114296
94382 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 176::CD,94383:CD,94387:CD,94391:CD,94413:CD,94418:CD,94422:CD,94427:CD,94432:CD,94437:CD,94442:CD,94446:CD,94451:CD,94456:CD,94460:CD,94465:CD,94470:CD,94479
94387 :: CALL :: call :: C :: v24 = v22.charValue()::JM,94391:JM,94479
94391 :: PRED :: IF :: Z :: if (v24 == #(32)) goto 107::CF,94479:CF,94392:CD,94397:CD,94402:CD,94407
94392 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::JM,94479
94397 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v24)::JM,94479
94402 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(#(')))::JM,94479
94407 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::JM,94479
94413 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
94418 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $atom .getName()::CL,63540
94422 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
94427 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( ))::
94432 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v36)::
94437 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v49.append(#( is already present i...))::
94442 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .toString()::CL,114954:CL,114856:CL,114666
94446 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
94451 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v56.append(#(. The atom with serial ))::
94456 :: CALL :: call :: I :: v61 = p1 $atom .getPDBserial()::CL,115093
94460 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v61)::
94465 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#( will be ignored in l...))::
94470 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
94479 :: EXPR :: assign :: null :: PHI v36 = #(), v35::
94519 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setRecordType(java.lang.String)::JM,94524
94524 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = p1 $recordName ::
94530 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setClassification(java.lang.String)::JM,94535
94535 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classification = p1 $classification ::
94541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDepDate(java.util.Date)::JM,94546
94546 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = p1 $depDate ::
94552 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setIdCode(java.lang.String)::JM,94557
94557 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
94563 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getAuthors()::CE,94564:CD,94570
94564 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getAuthors()::JM,78202:JM,144770
94567 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .authors::DD,94570
94570 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,94564
94572 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setAuthors(java.lang.String)::JM,94577
94577 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authors = p1 $authors ::
94583 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getTitle()::CE,94584:CD,94590
94584 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getTitle()::JM,78306:JM,78294:JM,78300
94587 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .title::DD,94590
94590 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,94584
94592 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setTitle(java.lang.String)::JM,94597
94597 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
94603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setExperimentalTechnique(java.lang.String)::CD,94608:CD,94612
94608 :: CALL :: call :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = getByName(p1 $techniqueStr )::JM,94612:JM,94618:JM,94622:CL,115102
94612 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 12::CD,94617
94614 :: EXPR :: reference :: Ljava/util/Set :: v7 = p0 $this .techniques::DD,94617
94617 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CD,94618:JM,94622
94618 :: CALL :: call :: Ljava/util/EnumSet :: v12 = of(v5)::JM,94618:JM,94622
94622 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .techniques = v12::
94656 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setA(double)::JM,94661
94661 :: EXPR :: modify :: D :: p0 $this .a = p1 $a ::
94667 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setB(double)::JM,94672
94672 :: EXPR :: modify :: D :: p0 $this .b = p1 $b ::
94678 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setC(double)::JM,94683
94683 :: EXPR :: modify :: D :: p0 $this .c = p1 $c ::
94689 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setAlpha(double)::JM,94694:JM,94701:CD,94697
94694 :: EXPR :: modify :: D :: p0 $this .alpha = p1 $alpha ::
94697 :: CALL :: call :: D :: v5 = toRadians(p1 $alpha )::JM,94697:JM,94701
94701 :: EXPR :: modify :: D :: p0 $this .alphaRad = v5::
94709 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setBeta(double)::JM,94721:JM,94714:CD,94717
94714 :: EXPR :: modify :: D :: p0 $this .beta = p1 $beta ::
94717 :: CALL :: call :: D :: v5 = toRadians(p1 $beta )::JM,94721:JM,94717
94721 :: EXPR :: modify :: D :: p0 $this .betaRad = v5::
94729 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setGamma(double)::JM,94741:JM,94734:CD,94737
94734 :: EXPR :: modify :: D :: p0 $this .gamma = p1 $gamma ::
94737 :: CALL :: call :: D :: v5 = toRadians(p1 $gamma )::JM,94737:JM,94741
94741 :: EXPR :: modify :: D :: p0 $this .gammaRad = v5::
94749 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::CE,94750:CD,94753:CD,94757:CD,94758
94750 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::JM,78771:JM,142742
94753 :: CALL :: call :: D :: v4 = p0 $this .getA()::JM,94757:CL,115117
94757 :: EXPR :: assign :: Z :: v6 = v4 > #(10.0 d)::DD,94758
94759 :: CALL :: call :: D :: v9 = p0 $this .getB()::JM,94763:CL,115126
94758 :: PRED :: IF :: Z :: if (v6 >= #(0)) goto 36::CD,94759:CD,94763:CD,94764:CD,94772
94763 :: EXPR :: assign :: Z :: v10 = v9 > #(10.0 d)::DD,94764
94765 :: CALL :: call :: D :: v12 = p0 $this .getC()::JM,94769:CL,115135
94764 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 36::CD,94765:CD,94769:CD,94770:CD,94772
94769 :: EXPR :: assign :: Z :: v13 = v12 > #(10.0 d)::DD,94770
94771 :: NORM :: compound :: Z :: return #(0)::CF,94750
94770 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 36::CD,94771:CD,94772
94772 :: NORM :: compound :: Z :: return #(1)::CF,94750
94784 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setCrystalCell(org.biojava.nbio.structure.xtal.CrystalCell)::JM,94789
94789 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: p0 $this .cell = p1 $cell ::
94795 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::CE,94796:CD,94799:JM,94804:JM,94854:JM,94811
94796 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::JM,78795:JM,142863
94799 :: PRED :: IF :: Z :: if (p1 $shortName  == #(null)) goto 13::CD,94800:CD,94804:CD,94805:JM,94854:JM,94811
94800 :: CALL :: call :: I :: v5 = p1 $shortName .length()::JM,94804:JM,94854:JM,94811
94805 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return #(null)::DD,94796
94804 :: PRED :: IF :: Z :: if (v5 > #(2)) goto 17::CD,94805:CD,94806:CD,94811:CD,94812:CD,94813:CD,94819:CD,94827:CD,94832:CD,94836:CD,94841:CD,94847:CD,94852:CD,94853:CD,94854:JM,94804
94806 :: CALL :: call :: Z :: v9 = p1 $shortName .equals(#(P 1-))::JM,94804:JM,94854:JM,94811
94811 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 26::CF,94854
94813 :: CALL :: call :: Ljava/lang/String :: v16 = v12.substring(#(0), #(1))::
94812 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
94819 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(v16)::
94827 :: CALL :: call :: Ljava/lang/String :: v21 = v12.substring(#(1))::
94832 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toLowerCase()::
94836 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v13.append(v23)::
94841 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
94847 :: CALL :: call :: Ljava/lang/Object :: v30 = v28.get(v27)::JM,94852
94853 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return v31::DD,94796
94852 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::CF,94853
94854 :: EXPR :: assign :: null :: PHI v12 = p1 $shortName , #(P -1)::CF,94812
94874 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardSg(boolean)::JM,94879
94879 :: EXPR :: modify :: Z :: p0 $this .nonStandardSg = p1 $nonStandardSg ::
94885 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setSpaceGroup(org.biojava.nbio.structure.xtal.SpaceGroup)::JM,94890
94890 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: p0 $this .sg = p1 $spaceGroup ::
94896 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_800_Handler(java.lang.String)::CD,94904:CD,94908
94904 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,94908:CL,82926
94908 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,94910:CD,94915:CD,94920:CD,94921
94910 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(11))::
94915 :: CALL :: call :: [Ljava/lang/String :: v13 = v10.split(#(: ))::JM,94920
94921 :: PRED :: IF :: Z :: if (v14 != #(2)) goto 389::CD,94926:CD,94931:CD,95085:CD,95090:CD,95135:CD,95140
94920 :: EXPR :: assign :: I :: v14 = v13.length::DD,94921
94922 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v13[#(0)]::JM,94931
94926 :: CALL :: call :: Z :: v19 = v16.equals(#(SITE_IDENTIFIER))::JM,94931
94931 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 229::CD,94936:CD,94942:CD,94947:CD,94952:CD,94957:CD,94968:CD,94973:CD,94980
94932 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v13[#(1)]::JM,94993
94936 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::JM,94993
94942 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
94947 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v23)::JM,94993
94952 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#('))::JM,94993
94957 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
94968 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v23)::JM,94973
94973 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::DD,94974
94974 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Site :: p0 $this .site = v39::
94977 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Site :: v40 = p0 $this .site::DD,94980
94980 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 121::CD,94984:CD,94988:CD,94993:CD,94995:JM,115178:JM,115165:JM,115181:CD,95020:CD,95028:CD,95036:CD,95041:CD,95051:CD,95059:CD,95063:CD,95068:CD,95073
94984 :: CALL :: call :: Ljava/lang/String :: v44 = v42.getSiteID()::JM,94993:CL,115144
94988 :: CALL :: call :: Z :: v46 = v23.equals(v44)::JM,94993
94993 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 229::CD,94995:JM,115178:JM,115165:JM,115181:CD,95020:CD,95028:CD,95036:CD,95041:CD,95051:CD,95059:CD,95063:CD,95068:CD,95073
94995 :: NORM :: declaration :: Ljava/util/ArrayList :: v48 = new java.util.ArrayList::
95020 :: CALL :: call :: Ljava/lang/Object :: v57 = v51.put(v54, v55)::
95028 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
95036 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v62)::
95041 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::
95051 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
95056 :: EXPR :: reference :: Ljava/util/Map :: v72 = p0 $this .siteMap::
95059 :: CALL :: call :: I :: v74 = v72.size()::
95063 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v69.append(v74)::
95068 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(#( sites))::
95073 :: CALL :: call :: Ljava/lang/String :: v81 = v79.toString()::
95081 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v13[#(0)]::JM,95090
95085 :: CALL :: call :: Z :: v86 = v83.equals(#(EVIDENCE_CODE))::JM,95090
95091 :: EXPR :: reference :: Ljava/lang/Object :: v87 = v13[#(1)]::
95090 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 287::CD,95095:CD,95101:CD,95106:CD,95111:CD,95116:CD,95127
95095 :: CALL :: call :: Ljava/lang/String :: v89 = v87.trim()::
95101 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
95106 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v91.append(v89)::
95111 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v95.append(#('))::
95116 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
95127 :: CALL :: call :: V :: v101.setEvCode(v89)::CL,115198
95131 :: EXPR :: reference :: Ljava/lang/Object :: v103 = v13[#(0)]::JM,95140
95135 :: CALL :: call :: Z :: v106 = v103.equals(#(SITE_DESCRIPTION))::JM,95140
95141 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v13[#(1)]::
95140 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 389::CD,95145:CD,95151:CD,95156:CD,95161:CD,95166:CD,95177:CD,95183:CD,95191:CD,95195:CD,95200:CD,95213
95145 :: CALL :: call :: Ljava/lang/String :: v109 = v107.trim()::
95151 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
95156 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v109)::
95161 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#('))::
95166 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
95177 :: CALL :: call :: V :: v121.setDescription(v109)::CL,115209
95183 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
95191 :: CALL :: call :: Ljava/lang/String :: v129 = v127.getSiteID()::CL,115144
95195 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v124.append(v129)::
95200 :: CALL :: call :: Ljava/lang/String :: v133 = v131.toString()::
95213 :: CALL :: call :: Ljava/lang/String :: v138 = v136.remark800toPDB()::CL,115220
95297 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::CE,95298:CD,95304
95298 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::JM,79310:JM,122739
95301 :: EXPR :: reference :: Z :: v3 = p0 $this .parseBioAssembly::DD,95304
95304 :: NORM :: compound :: Z :: return v3::CF,95298
95313 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
95316 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,95320
95320 :: EXPR :: modify :: Ljava/util/List :: p0 $this .currentChainIDs = v5::
95323 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = #(null)::
95326 :: EXPR :: modify :: [D :: p0 $this .shift = #(null)::
95329 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,95333
95333 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .transformationMap = v7::
95336 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
95353 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.pdb_REMARK_350_Handler(java.lang.String)::CD,95358:CD,95363:JM,95431:JM,95414:JM,95465:JM,95448:JM,95384:JM,95454
95358 :: CALL :: call :: Z :: v6 = p1 $line .startsWith(#(REMARK 350 BIOMOLECULE:))::JM,95363:JM,95431:JM,95414:JM,95465:JM,95448:JM,95384:JM,95454
95363 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 38::CD,95364:CD,95367:CD,95372:CD,95376:CD,95380:CD,95388:CD,95393
95364 :: CALL :: call :: V :: p0 $this .initialize()::CL,115242
95367 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(24))::JM,95363:JM,95431:JM,95414:JM,95465:JM,95448:JM,95384:JM,95454
95372 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,95431:JM,95414:JM,95465:JM,95384:JM,95448:JM,95454
95376 :: CALL :: call :: I :: v51 = parseInt(v49)::JM,95384
95380 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v51)::JM,95384
95384 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = v53::
95388 :: CALL :: call :: Z :: v10 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,95393
95393 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 56::CD,95394:CD,95399:CD,95400
95394 :: CALL :: call :: Z :: v13 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,95399
95399 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 68::CD,95400:CD,95409:CD,95414:JM,95363:JM,95431:JM,95465:JM,95448:JM,95384:JM,95454
95400 :: CALL :: call :: I :: v43 = p0 $this .getMmSize(p1 $line )::JM,95405:CL,115288
95405 :: EXPR :: modify :: I :: p0 $this .currentMmSize = v43::
95409 :: CALL :: call :: Z :: v16 = p1 $line .startsWith(#(REMARK 350 APPLY THE ...))::JM,95363:JM,95431:JM,95414:JM,95465:JM,95448:JM,95384:JM,95454
95415 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .currentChainIDs::
95414 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 94::CD,95418:CD,95421:CD,95426:CD,95431:JM,95363:JM,95414:JM,95465:JM,95448:JM,95384:JM,95454
95418 :: CALL :: call :: V :: v39.clear()::
95421 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,115333
95426 :: CALL :: call :: Z :: v19 = p1 $line .startsWith(#(REMARK 350 IN ADDITIO...))::JM,95363:JM,95431:JM,95414:JM,95465:JM,95448:JM,95384:JM,95454
95431 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 120::CD,95435:CD,95438:CD,95443:CD,95448:JM,95363:JM,95431:JM,95414:JM,95465:JM,95384:JM,95454
95432 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .currentChainIDs::
95435 :: CALL :: call :: V :: v36.clear()::
95438 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,115333
95443 :: CALL :: call :: Z :: v22 = p1 $line .startsWith(#(REMARK 350))::JM,95363:JM,95431:JM,95414:JM,95465:JM,95448:JM,95384:JM,95454
95449 :: CALL :: call :: Z :: v25 = p1 $line .contains(#(AND CHAINS:))::JM,95363:JM,95431:JM,95414:JM,95465:JM,95448:JM,95384:JM,95454
95448 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 146::CD,95449:CD,95454:CD,95460:CD,95465:JM,95363:JM,95431:JM,95414:JM,95448:JM,95384
95455 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,115333
95454 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 146::CD,95455:CD,95460:CD,95465:JM,95363:JM,95431:JM,95414:JM,95448:JM,95384:JM,95454
95460 :: CALL :: call :: Z :: v28 = p1 $line .startsWith(#(REMARK 350   BIOMT))::JM,95363:JM,95431:JM,95414:JM,95465:JM,95448:JM,95384:JM,95454
95465 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 174::CD,95466:CD,95471
95466 :: CALL :: call :: Z :: v30 = p0 $this .readMatrix(p1 $line )::JM,95471:CL,115384
95471 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 174::CD,95472:CD,95478
95472 :: CALL :: call :: V :: p0 $this .saveMatrix()::CL,115540
95475 :: EXPR :: reference :: I :: v32 = p0 $this .modelNumber::DD,95478
95479 :: EXPR :: modify :: I :: p0 $this .modelNumber = v34::
95478 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v32 + #(1)::DD,95479
95529 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getResolution()::CE,95530:CD,95536
95530 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getResolution()::JM,79469:JM,79486:JM,144415:JM,144428
95533 :: EXPR :: reference :: F :: v3 = p0 $this .resolution::DD,95536
95536 :: NORM :: compound :: F :: return v3::CF,95530
95538 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setResolution(float)::JM,95543
95543 :: EXPR :: modify :: F :: p0 $this .resolution = p1 $resolution ::
95549 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::CE,95550:CD,95556:CD,95562:CD,95566:CD,95571:CD,95581:CD,95582:JM,95576
95550 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::JM,79717:JM,79724:JM,79731:JM,79738:JM,79745:JM,79752:JM,79759:JM,79766:JM,79773:JM,79780
95556 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(p2 $start , p3 $end )::JM,95571:JM,95576
95562 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,95571:JM,95576
95566 :: CALL :: call :: Z :: v14 = v9.equals(#())::JM,95571:JM,95576
95571 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 48::CF,95582:CD,95572:CD,95576:JM,95571
95572 :: CALL :: call :: I :: v17 = parseInt(v9)::JM,95571:JM,95576
95576 :: NORM :: declaration :: Ljava/lang/Integer :: v18 = new java.lang.Integer::JM,95576:DD,95582
95581 :: NORM :: compound :: Ljava/lang/Integer :: return v21::DD,95550
95582 :: EXPR :: assign :: null :: PHI v21 = #(null), v18::CF,95581
95599 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getModDate()::CE,95600:CD,95606
95600 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.PDBHeader.getModDate()::JM,79974
95603 :: EXPR :: reference :: Ljava/util/Date :: v3 = p0 $this .modDate::DD,95606
95606 :: NORM :: compound :: Ljava/util/Date :: return v3::CF,95600
95635 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setModDate(java.util.Date)::JM,95640
95640 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = p1 $modDate ::
95653 :: EXPR :: modify :: C :: p0 $this .insertBegin = #(32)::
95656 :: EXPR :: modify :: C :: p0 $this .insertEnd = #(32)::
95659 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = #(32)::
95662 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = #(32)::
95675 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdCode(java.lang.String)::JM,95680
95680 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
95686 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setChainId(java.lang.String)::JM,95691
95691 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
95743 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqBegin(int)::JM,95748
95748 :: EXPR :: modify :: I :: p0 $this .seqbegin = p1 $seqbegin ::
95754 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertBegin(char)::JM,95759
95759 :: EXPR :: modify :: C :: p0 $this .insertBegin = p1 $insertBegin ::
95765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqEnd(int)::JM,95770
95770 :: EXPR :: modify :: I :: p0 $this .seqEnd = p1 $seqEnd ::
95776 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertEnd(char)::JM,95781
95781 :: EXPR :: modify :: C :: p0 $this .insertEnd = p1 $insertEnd ::
95787 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDatabase(java.lang.String)::JM,95792
95792 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .database = p1 $database ::
95798 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbAccession(java.lang.String)::JM,95803
95803 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbAccession = p1 $dbAccession ::
95809 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbIdCode(java.lang.String)::JM,95814
95814 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbIdCode = p1 $dbIdCode ::
95820 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqBegin(int)::JM,95825
95825 :: EXPR :: modify :: I :: p0 $this .dbSeqBegin = p1 $dbSeqBegin ::
95831 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsBegin(char)::JM,95836
95836 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = p1 $idbnsBegin ::
95842 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqEnd(int)::JM,95847
95847 :: EXPR :: modify :: I :: p0 $this .dbSeqEnd = p1 $dbSeqEnd ::
95853 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsEnd(char)::JM,95858
95858 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = p1 $idbnsEnd ::
95873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setSeqNum(java.lang.Integer)::JM,95878
95878 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
95884 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setInsCode(java.lang.Character)::JM,95889
95889 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p1 $insCode ::
96068 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_COMPND_Handler(java.lang.String)::CD,96075:CD,96083:CD,96088:CD,96098:CD,96106:CD,96111:CD,96121:CD,96129:CD,96134:CD,96144:CD,96152:CD,96157:CD,96168:CD,96175:CD,96179:CD,96185:CD,96189:CD,96194:CD,96195:CD,96515
96075 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
96080 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .previousContinuationField::
96083 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v5.append(v8)::
96088 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
96098 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
96103 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .continuationField::
96106 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v15.append(v18)::
96111 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
96121 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
96126 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .continuationString::
96129 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v25.append(v28)::
96134 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
96144 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
96152 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v35.append(v38)::
96157 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
96165 :: EXPR :: reference :: Z :: v44 = p0 $this .isLegacyFormat::DD,96168
96169 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(0), #(72))::JM,96515
96168 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 131::CF,96515:CD,96169
96175 :: CALL :: call :: I :: v52 = v49.length()::
96179 :: CALL :: call :: Ljava/lang/String :: v54 = v49.substring(#(10), v52)::
96185 :: CALL :: call :: Ljava/lang/String :: v56 = v54.trim()::
96189 :: CALL :: call :: [Ljava/lang/String :: v59 = v56.split(#(\s+))::JM,96194
96195 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 202::CD,96196:CD,96202:CD,96207:CD,96231
96194 :: EXPR :: assign :: I :: v60 = v59.length::DD,96195:DD,96231
96196 :: EXPR :: reference :: Ljava/util/List :: v61 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,96207
96198 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v59[#(0)]::JM,96207
96202 :: CALL :: call :: Z :: v64 = v61.contains(v62)::JM,96207
96207 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 202::CD,96218:CD,96223:CD,96231:CD,96252:CD,96258:CD,96262:CD,96476:CD,96480:CD,96484
96208 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v59[#(0)]::DD,96212
96212 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v72::
96215 :: EXPR :: reference :: Ljava/lang/String :: v73 = p0 $this .previousContinuationField::JM,96223
96218 :: CALL :: call :: Z :: v76 = v73.equals(#())::JM,96223
96223 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 231::
96224 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .continuationField::DD,96227
96227 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v77::
96231 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 231::CD,96236:CD,96241:CD,96252:CD,96258:CD,96262:CD,96476:CD,96480:CD,96484
96232 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v59[#(0)]::JM,96241
96236 :: CALL :: call :: Z :: v68 = v65.contains(#(:))::JM,96241
96241 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 231::CD,96252:CD,96258:CD,96262:CD,96476:CD,96480:CD,96484
96252 :: CALL :: call :: Ljava/lang/String :: v80 = v54.replace(v78, #())::
96258 :: CALL :: call :: Ljava/lang/String :: v82 = v80.trim()::
96262 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v83 = new java.util.StringTokenizer::JM,96426:JM,96480
96268 :: CALL :: call :: Ljava/lang/String :: v88 = v83.nextToken()::JM,96426
96272 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .previousContinuationField::JM,96280
96275 :: CALL :: call :: Z :: v91 = v89.equals(#())::JM,96280
96281 :: EXPR :: reference :: Ljava/lang/String :: v92 = p0 $this .continuationField::DD,96284
96280 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 286::
96284 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v92::
96287 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .previousContinuationField::JM,96298
96290 :: EXPR :: reference :: Ljava/lang/String :: v94 = p0 $this .continuationField::JM,96298
96293 :: CALL :: call :: Z :: v96 = v93.equals(v94)::JM,96298
96299 :: EXPR :: reference :: Ljava/util/List :: v97 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,96309
96298 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 429::CD,96299:CD,96304:CD,96309
96301 :: EXPR :: reference :: Ljava/lang/String :: v98 = p0 $this .continuationField::JM,96309
96304 :: CALL :: call :: Z :: v100 = v97.contains(v98)::JM,96309
96309 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 429::CD,96312:CD,96320:CD,96325:CD,96335:CD,96340:CD,96345:CD,96356:CD,96357:CD,96365:CD,96370:CD,96374:CD,96384:CD,96392:CD,96397
96312 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v102 = new java.lang.StringBuilder::
96317 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .continuationField::
96320 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v102.append(v105)::
96325 :: CALL :: call :: Ljava/lang/String :: v109 = v107.toString()::
96335 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v112 = new java.lang.StringBuilder::
96340 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v112.append(v88)::JM,96426
96345 :: CALL :: call :: Ljava/lang/String :: v118 = v116.toString()::
96353 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .continuationString::JM,96379
96357 :: CALL :: call :: Ljava/lang/String :: v123 = valueOf(v88)::
96356 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v121 = new java.lang.StringBuilder::JM,96379
96365 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v121.append(#( ))::JM,96379
96370 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::JM,96379
96374 :: CALL :: call :: Ljava/lang/String :: v131 = v120.concat(v129)::JM,96379
96379 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v131::
96384 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
96389 :: EXPR :: reference :: Ljava/lang/String :: v136 = p0 $this .continuationString::
96392 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(v136)::
96397 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
96405 :: EXPR :: reference :: Ljava/lang/String :: v142 = p0 $this .continuationField::JM,96416
96408 :: EXPR :: reference :: Ljava/lang/String :: v143 = p0 $this .previousContinuationField::JM,96416
96411 :: CALL :: call :: Z :: v145 = v142.equals(v143)::JM,96416
96417 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationString::JM,96425
96416 :: PRED :: IF :: Z :: if (v145 != #(0)) goto 512::CD,96420:CD,96425
96420 :: CALL :: call :: Z :: v148 = v146.equals(#())::JM,96425
96425 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 466::CD,96436:CD,96447:CD,96448:CD,96456:CD,96461
96426 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v88::
96436 :: CALL :: call :: V :: p0 $this .compndValueSetter(v149, v150)::CL,115730
96441 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationField::DD,96444
96444 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v152::
96447 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,96465
96448 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v88)::
96456 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v153.append(#( ))::JM,96465
96461 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::JM,96465
96465 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v160::
96476 :: CALL :: call :: Z :: v86 = v83.hasMoreTokens()::JM,96480
96481 :: EXPR :: reference :: Z :: v164 = p0 $this .isLastCompndLine::DD,96484
96480 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 259::CD,96268:CD,96275:CD,96280:CD,96293:CD,96298:CD,96411:CD,96416:CD,96476:JM,96426
96484 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 578::CD,96491:CD,96502
96491 :: CALL :: call :: V :: p0 $this .compndValueSetter(v165, v166)::CL,115730
96499 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v168 = p0 $this .current_compound::DD,96502
96503 :: EXPR :: reference :: Ljava/util/List :: v170 = p0 $this .compounds::
96502 :: PRED :: IF :: Z :: if (v168 == #(null)) goto 578::CD,96509
96506 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v171 = p0 $this .current_compound::
96509 :: CALL :: call :: Z :: v173 = v170.add(v171)::
96515 :: EXPR :: assign :: null :: PHI v49 = p1 $line , v48::
96638 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = #(null)::
96641 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #(null)::
96644 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = #(null)::
96647 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = #(null)::
96650 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = #(null)::
96653 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = #(null)::
96656 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = #(null)::
96659 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = #(null)::
96662 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .numRes = #(null)::
96665 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resNames = #(null)::
96668 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .headerVars = #(null)::
96671 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = #(null)::
96674 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = #(null)::
96677 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = #(null)::
96680 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = #(null)::
96683 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = #(null)::
96686 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = #(null)::
96689 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = #(null)::
96692 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = #(null)::
96695 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = #(null)::
96698 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = #(null)::
96701 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = #(null)::
96704 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = #(null)::
96707 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = #(null)::
96710 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = #(null)::
96713 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = #(null)::
96716 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = #(null)::
96719 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = #(null)::
96722 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = #(null)::
96725 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = #(null)::
96728 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = #(null)::
96731 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = #(null)::
96734 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = #(null)::
96737 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = #(null)::
96740 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = #(null)::
96743 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = #(null)::
96746 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = #(null)::
96749 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = #(null)::
96752 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = #(null)::
96755 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = #(null)::
96758 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = #(null)::
96761 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = #(null)::
96764 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = #(null)::
96767 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,96771
96771 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = v5::
96774 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,96778
96778 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .chains2pdbResNums2ResSerials = v7::
96781 :: EXPR :: modify :: I :: p0 $this .molId = #(-1)::
96878 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SOURCE_Handler(java.lang.String)::CD,96883:CD,96889:CD,96895:CD,96900:CD,96905:CD,96915:CD,96923:CD,96928:CD,96938:CD,96946:CD,96951:CD,96961:CD,96969:CD,96974:CD,96984:CD,96992:CD,96997:CD,97005:CD,97009:CD,97016:CD,97020:CD,97028:CD,97033:CD,97038:CD,97043:CD,97051:CD,97060:CD,97065:CD,97171:CD,97177:CD,97181:CD,97375:CD,97379:CD,97383:CD,97399:JM,97143
96883 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(9), #(10))::JM,97009:JM,97399:JM,97143
96889 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,97009:JM,97143:JM,97399
96895 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
96900 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v9)::JM,97143
96905 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,97143
96915 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
96920 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .previousContinuationField::
96923 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v20.append(v23)::
96928 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
96938 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
96943 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .continuationField::
96946 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::
96951 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
96961 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
96966 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .continuationString::
96969 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v40.append(v43)::
96974 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
96984 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
96992 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
96997 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
97005 :: CALL :: call :: I :: v60 = p1 $line .length()::JM,97009:JM,97399:JM,97143
97009 :: PRED :: IF :: Z :: if (v60 <= #(79)) goto 170::CF,97399:CD,97010:JM,97009:JM,97143
97010 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(0), #(79))::JM,97009:JM,97399:JM,97143
97016 :: CALL :: call :: I :: v67 = v65.length()::
97020 :: CALL :: call :: Ljava/lang/String :: v69 = v65.substring(#(10), v67)::
97028 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v71 = new java.lang.StringBuilder::
97033 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v71.append(v69)::
97038 :: CALL :: call :: Ljava/lang/StringBuilder :: v78 = v75.append(#(<))::
97043 :: CALL :: call :: Ljava/lang/String :: v80 = v78.toString()::
97051 :: CALL :: call :: [Ljava/lang/String :: v84 = v69.split(#(\s+))::JM,97101
97056 :: EXPR :: reference :: Ljava/lang/Object :: v85 = v84[#(0)]::JM,97065
97060 :: CALL :: call :: Z :: v88 = v85.equals(#())::JM,97065
97065 :: PRED :: IF :: Z :: if (v88 != #(0)) goto 274::CD,97066:CD,97072:CD,97077:CD,97101:CD,97102
97066 :: EXPR :: reference :: Ljava/util/List :: v89 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,97077
97068 :: EXPR :: reference :: Ljava/lang/Object :: v90 = v84[#(0)]::JM,97077
97072 :: CALL :: call :: Z :: v92 = v89.contains(v90)::JM,97077
97077 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 274::CD,97088:CD,97093:CD,97101:CD,97102
97078 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v84[#(0)]::DD,97082
97082 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v114::
97085 :: EXPR :: reference :: Ljava/lang/String :: v115 = p0 $this .previousContinuationField::JM,97093
97088 :: CALL :: call :: Z :: v117 = v115.equals(#())::JM,97093
97093 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 374::
97094 :: EXPR :: reference :: Ljava/lang/String :: v118 = p0 $this .continuationField::DD,97097
97097 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v118::
97101 :: EXPR :: assign :: I :: v93 = v84.length::DD,97102
97103 :: EXPR :: reference :: Ljava/util/List :: v95 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,97114
97102 :: PRED :: IF :: Z :: if (v93 <= #(1)) goto 328::CD,97103:CD,97109:CD,97114:CD,97138:CD,97143
97105 :: EXPR :: reference :: Ljava/lang/Object :: v96 = v84[#(1)]::JM,97114
97109 :: CALL :: call :: Z :: v98 = v95.contains(v96)::JM,97114
97115 :: EXPR :: reference :: Ljava/lang/Object :: v109 = v84[#(1)]::DD,97119
97114 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 328::CD,97125:CD,97130:CD,97138:CD,97143
97119 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v109::
97122 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .previousContinuationField::JM,97130
97125 :: CALL :: call :: Z :: v112 = v110.equals(#())::JM,97130
97131 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .continuationField::DD,97134
97130 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 374::
97134 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v113::
97138 :: CALL :: call :: Z :: v100 = v9.equals(#())::JM,97143
97143 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 374::CD,97156:CD,97161
97150 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = #(MOLECULE:)::
97153 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .previousContinuationField::JM,97161
97156 :: CALL :: call :: Z :: v107 = v105.equals(#())::JM,97161
97161 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 374::
97162 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .continuationField::DD,97165
97165 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v108::
97171 :: CALL :: call :: Ljava/lang/String :: v121 = v69.replace(v119, #())::
97177 :: CALL :: call :: Ljava/lang/String :: v123 = v121.trim()::
97181 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v124 = new java.util.StringTokenizer::JM,97325:JM,97379
97187 :: CALL :: call :: Ljava/lang/String :: v129 = v124.nextToken()::JM,97325
97191 :: EXPR :: reference :: Ljava/lang/String :: v130 = p0 $this .previousContinuationField::JM,97199
97194 :: CALL :: call :: Z :: v132 = v130.equals(#())::JM,97199
97199 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 429::
97200 :: EXPR :: reference :: Ljava/lang/String :: v133 = p0 $this .continuationField::DD,97203
97203 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v133::
97206 :: EXPR :: reference :: Ljava/lang/String :: v134 = p0 $this .previousContinuationField::JM,97217
97209 :: EXPR :: reference :: Ljava/lang/String :: v135 = p0 $this .continuationField::JM,97217
97212 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,97217
97217 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 546::CD,97218:CD,97223:CD,97228
97218 :: EXPR :: reference :: Ljava/util/List :: v138 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,97228
97220 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .continuationField::JM,97228
97223 :: CALL :: call :: Z :: v141 = v138.contains(v139)::JM,97228
97228 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 546::CD,97231:CD,97239:CD,97244:CD,97255:CD,97256:CD,97264:CD,97269:CD,97273:CD,97283:CD,97291:CD,97296
97231 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v143 = new java.lang.StringBuilder::
97236 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationField::
97239 :: CALL :: call :: Ljava/lang/StringBuilder :: v148 = v143.append(v146)::
97244 :: CALL :: call :: Ljava/lang/String :: v150 = v148.toString()::
97252 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationString::JM,97278
97255 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,97278
97256 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v129)::
97264 :: CALL :: call :: Ljava/lang/StringBuilder :: v159 = v153.append(#( ))::JM,97278
97269 :: CALL :: call :: Ljava/lang/String :: v161 = v159.toString()::JM,97278
97273 :: CALL :: call :: Ljava/lang/String :: v163 = v152.concat(v161)::JM,97278
97278 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v163::
97283 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
97288 :: EXPR :: reference :: Ljava/lang/String :: v168 = p0 $this .continuationString::
97291 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v165.append(v168)::
97296 :: CALL :: call :: Ljava/lang/String :: v172 = v170.toString()::
97304 :: EXPR :: reference :: Ljava/lang/String :: v174 = p0 $this .continuationField::JM,97315
97307 :: EXPR :: reference :: Ljava/lang/String :: v175 = p0 $this .previousContinuationField::JM,97315
97310 :: CALL :: call :: Z :: v177 = v174.equals(v175)::JM,97315
97315 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 629::CD,97319:CD,97324
97316 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .continuationString::JM,97324
97319 :: CALL :: call :: Z :: v180 = v178.equals(#())::JM,97324
97325 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v129::
97324 :: PRED :: IF :: Z :: if (v180 == #(0)) goto 583::CD,97335:CD,97346:CD,97347:CD,97355:CD,97360
97335 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v181, v182)::CL,116156
97340 :: EXPR :: reference :: Ljava/lang/String :: v184 = p0 $this .continuationField::DD,97343
97343 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v184::
97347 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v129)::
97346 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::JM,97364
97355 :: CALL :: call :: Ljava/lang/StringBuilder :: v190 = v185.append(#( ))::JM,97364
97360 :: CALL :: call :: Ljava/lang/String :: v192 = v190.toString()::JM,97364
97364 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v192::
97375 :: CALL :: call :: Z :: v127 = v124.hasMoreTokens()::JM,97379
97379 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 402::CD,97187:CD,97194:CD,97199:CD,97212:CD,97217:CD,97310:CD,97315:CD,97375:JM,97325
97380 :: EXPR :: reference :: Z :: v196 = p0 $this .isLastSourceLine::DD,97383
97383 :: PRED :: IF :: Z :: if (v196 == #(0)) goto 674::CD,97390
97390 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v197, v198)::CL,116156
97399 :: EXPR :: assign :: null :: PHI v65 = p1 $line , v64::
97544 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.buildjournalArticle()::JM,116853:JM,116860:CD,97561:CD,97565:CD,97569:CD,97573:CD,97577:CD,97581:CD,97585:CD,97589:CD,97596:CD,98111:CD,98115:CD,98119:CD,98123:CD,98128:CD,98135:CD,98139:CD,98144:CD,98151:CD,98155:CD,98160:JM,117347:JM,117667:JM,117637:JM,117446:JM,117352:JM,117451:JM,117486:JM,117360:JM,117491:JM,117365:JM,117653:JM,117654:JM,117398:JM,117337:JM,117530:JM,117466:JM,117471:JM,117342:JM,117662:CD,98176:CD,98183:CD,98187:CD,98192:CD,98211:CD,98222:CD,98233:CD,98240:CD,98244:CD,98248:CD,98255:CD,98259:CD,98263:CD,98270:CD,98274:CD,98278:CD,98285:CD,98289:CD,98293:CD,98300:CD,98304:CD,98308:CD,98323
97561 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
97565 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v10 = new java.lang.StringBuffer::
97569 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v12 = new java.lang.StringBuffer::
97573 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v14 = new java.lang.StringBuffer::
97577 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v16 = new java.lang.StringBuffer::
97581 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v18 = new java.lang.StringBuffer::
97585 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v20 = new java.lang.StringBuffer::
97589 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v22 = new java.lang.StringBuffer::
97593 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .journalLines::JM,98115:JM,97605
97596 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,98115:JM,97605
97601 :: CALL :: call :: Ljava/lang/Object :: v31 = v26.next()::JM,98115:JM,97605
97605 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::JM,97610:JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062:JM,97933
97606 :: CALL :: call :: I :: v34 = v32.length()::JM,97610
97610 :: PRED :: IF :: Z :: if (v34 >= #(19)) goto 162::CD,97613:CD,97618:CD,97623:CD,97632:CD,97638:CD,97643:CD,97692:CD,97697:CD,97751:CD,97756:CD,97805:CD,97810:CD,97864:CD,97869:CD,97923:CD,97928:JM,98008:JM,98062
97613 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v223 = new java.lang.StringBuilder::
97618 :: CALL :: call :: Ljava/lang/StringBuilder :: v227 = v223.append(v32)::
97623 :: CALL :: call :: Ljava/lang/String :: v229 = v227.toString()::
97632 :: CALL :: call :: Ljava/lang/String :: v39 = v32.substring(#(12), #(16))::JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97638 :: CALL :: call :: Z :: v42 = v39.equals(#(AUTH))::JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97643 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 237::CD,97644:CD,97648:CD,97654:CD,97658:CD,97665:CD,97670:CD,97674:CD,97679:CD,97684:JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97644 :: CALL :: call :: I :: v44 = v32.length()::
97648 :: CALL :: call :: Ljava/lang/String :: v46 = v32.substring(#(19), v44)::
97654 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::
97658 :: CALL :: call :: Ljava/lang/StringBuffer :: v50 = v8.append(v48)::
97665 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
97670 :: CALL :: call :: Ljava/lang/String :: v56 = v8.toString()::
97674 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v52.append(v56)::
97679 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#('))::
97684 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
97692 :: CALL :: call :: Z :: v67 = v39.equals(#(TITL))::JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97697 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 308::CD,97698:CD,97702:CD,97708:CD,97712:CD,97717:CD,97724:CD,97729:CD,97733:CD,97738:CD,97743:JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97698 :: CALL :: call :: I :: v69 = v32.length()::
97702 :: CALL :: call :: Ljava/lang/String :: v71 = v32.substring(#(19), v69)::
97708 :: CALL :: call :: Ljava/lang/String :: v73 = v71.trim()::
97712 :: CALL :: call :: Ljava/lang/StringBuffer :: v75 = v10.append(v73)::
97717 :: CALL :: call :: Ljava/lang/StringBuffer :: v78 = v75.append(#( ))::
97724 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
97729 :: CALL :: call :: Ljava/lang/String :: v84 = v10.toString()::
97733 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v80.append(v84)::
97738 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#('))::
97743 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
97751 :: CALL :: call :: Z :: v94 = v39.equals(#(EDIT))::JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97757 :: CALL :: call :: I :: v96 = v32.length()::
97756 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 373::CD,97757:CD,97761:CD,97767:CD,97771:CD,97778:CD,97783:CD,97787:CD,97792:CD,97797:JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97761 :: CALL :: call :: Ljava/lang/String :: v98 = v32.substring(#(19), v96)::
97767 :: CALL :: call :: Ljava/lang/String :: v100 = v98.trim()::
97771 :: CALL :: call :: Ljava/lang/StringBuffer :: v102 = v12.append(v100)::
97778 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
97783 :: CALL :: call :: Ljava/lang/String :: v108 = v12.toString()::
97787 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(v108)::
97792 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v110.append(#('))::
97797 :: CALL :: call :: Ljava/lang/String :: v114 = v112.toString()::
97805 :: CALL :: call :: Z :: v118 = v39.equals(#(REF ))::JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97811 :: CALL :: call :: I :: v120 = v32.length()::
97810 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 446::CD,97811:CD,97815:CD,97821:CD,97825:CD,97830:CD,97837:CD,97842:CD,97846:CD,97851:CD,97856:JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97815 :: CALL :: call :: Ljava/lang/String :: v122 = v32.substring(#(19), v120)::
97821 :: CALL :: call :: Ljava/lang/String :: v124 = v122.trim()::
97825 :: CALL :: call :: Ljava/lang/StringBuffer :: v126 = v14.append(v124)::
97830 :: CALL :: call :: Ljava/lang/StringBuffer :: v128 = v126.append(#( ))::
97837 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v130 = new java.lang.StringBuilder::
97842 :: CALL :: call :: Ljava/lang/String :: v134 = v14.toString()::
97846 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v130.append(v134)::
97851 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(#('))::
97856 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
97864 :: CALL :: call :: Z :: v144 = v39.equals(#(PUBL))::JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97869 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 519::CD,97870:CD,97874:CD,97880:CD,97884:CD,97889:CD,97896:CD,97901:CD,97905:CD,97910:CD,97915:JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97870 :: CALL :: call :: I :: v146 = v32.length()::
97874 :: CALL :: call :: Ljava/lang/String :: v148 = v32.substring(#(19), v146)::
97880 :: CALL :: call :: Ljava/lang/String :: v150 = v148.trim()::
97884 :: CALL :: call :: Ljava/lang/StringBuffer :: v152 = v16.append(v150)::
97889 :: CALL :: call :: Ljava/lang/StringBuffer :: v154 = v152.append(#( ))::
97896 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v156 = new java.lang.StringBuilder::
97901 :: CALL :: call :: Ljava/lang/String :: v160 = v16.toString()::
97905 :: CALL :: call :: Ljava/lang/StringBuilder :: v162 = v156.append(v160)::
97910 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v162.append(#('))::
97915 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
97923 :: CALL :: call :: Z :: v170 = v39.equals(#(REFN))::JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
97929 :: CALL :: call :: I :: v172 = v32.length()::JM,97933
97928 :: PRED :: IF :: Z :: if (v170 == #(0)) goto 625::CD,97929:CD,97933:CD,98003:CD,98008:CD,98057:CD,98062:JM,97697:JM,97810:JM,97928:JM,97643:JM,97869:JM,97756
97933 :: PRED :: IF :: Z :: if (v172 >= #(35)) goto 572::CD,97936:CD,97941:CD,97946:CD,97955:CD,97959:CD,97965:CD,97969:CD,97976:CD,97981:CD,97985:CD,97990:CD,97995:CD,98003:CD,98008:CD,98057:CD,98062
97936 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v232 = new java.lang.StringBuilder::
97941 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v232.append(v32)::
97946 :: CALL :: call :: Ljava/lang/String :: v238 = v236.toString()::
97955 :: CALL :: call :: I :: v175 = v32.length()::
97959 :: CALL :: call :: Ljava/lang/String :: v177 = v32.substring(#(35), v175)::
97965 :: CALL :: call :: Ljava/lang/String :: v179 = v177.trim()::
97969 :: CALL :: call :: Ljava/lang/StringBuffer :: v181 = v18.append(v179)::
97976 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v183 = new java.lang.StringBuilder::
97981 :: CALL :: call :: Ljava/lang/String :: v187 = v18.toString()::
97985 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v183.append(v187)::
97990 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v189.append(#('))::
97995 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
98003 :: CALL :: call :: Z :: v197 = v39.equals(#(PMID))::JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
98009 :: CALL :: call :: I :: v199 = v32.length()::
98008 :: PRED :: IF :: Z :: if (v197 == #(0)) goto 692::CD,98009:CD,98013:CD,98019:CD,98023:CD,98030:CD,98035:CD,98039:CD,98044:CD,98049:JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
98013 :: CALL :: call :: Ljava/lang/String :: v201 = v32.substring(#(19), v199)::
98019 :: CALL :: call :: Ljava/lang/String :: v203 = v201.trim()::
98023 :: CALL :: call :: Ljava/lang/StringBuffer :: v205 = v20.append(v203)::
98030 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v207 = new java.lang.StringBuilder::
98035 :: CALL :: call :: Ljava/lang/String :: v211 = v20.toString()::
98039 :: CALL :: call :: Ljava/lang/StringBuilder :: v213 = v207.append(v211)::
98044 :: CALL :: call :: Ljava/lang/StringBuilder :: v215 = v213.append(#('))::
98049 :: CALL :: call :: Ljava/lang/String :: v217 = v215.toString()::
98057 :: CALL :: call :: Z :: v221 = v39.equals(#(DOI ))::JM,97697:JM,97810:JM,97928:JM,98008:JM,97643:JM,97869:JM,97756:JM,98062
98063 :: CALL :: call :: I :: v241 = v32.length()::
98062 :: PRED :: IF :: Z :: if (v221 == #(0)) goto 756::CD,98063:CD,98067:CD,98073:CD,98077:CD,98084:CD,98089:CD,98093:CD,98098:CD,98103:JM,98115:JM,97605
98067 :: CALL :: call :: Ljava/lang/String :: v243 = v32.substring(#(19), v241)::
98073 :: CALL :: call :: Ljava/lang/String :: v245 = v243.trim()::
98077 :: CALL :: call :: Ljava/lang/StringBuffer :: v247 = v22.append(v245)::
98084 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v249 = new java.lang.StringBuilder::
98089 :: CALL :: call :: Ljava/lang/String :: v253 = v22.toString()::
98093 :: CALL :: call :: Ljava/lang/StringBuilder :: v255 = v249.append(v253)::
98098 :: CALL :: call :: Ljava/lang/StringBuilder :: v257 = v255.append(#('))::
98103 :: CALL :: call :: Ljava/lang/String :: v259 = v257.toString()::
98111 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,98115:JM,97605
98115 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 107::CD,97601:CD,97605:CD,97606:CD,97610:CD,98111:JM,98115
98119 :: CALL :: call :: Ljava/lang/String :: v263 = v8.toString()::
98123 :: CALL :: call :: Ljava/util/List :: v265 = p0 $this .authorBuilder(v263)::CL,116913
98128 :: CALL :: call :: V :: v261.setAuthorList(v265)::CL,117289
98135 :: CALL :: call :: Ljava/lang/String :: v269 = v12.toString()::
98139 :: CALL :: call :: Ljava/util/List :: v271 = p0 $this .authorBuilder(v269)::CL,116913
98144 :: CALL :: call :: V :: v267.setEditorList(v271)::CL,117300
98151 :: CALL :: call :: Ljava/lang/String :: v275 = v14.toString()::
98155 :: CALL :: call :: V :: v273.setRef(v275)::CL,117311
98160 :: CALL :: call :: Ljava/lang/String :: v279 = v14.toString()::
98176 :: CALL :: call :: V :: v281.setJournalName(v283)::CL,117850
98183 :: CALL :: call :: Ljava/lang/String :: v287 = v285.getJournalName()::JM,98192:CL,117861
98187 :: CALL :: call :: Z :: v290 = v287.equals(#(TO BE PUBLISHED))::JM,98192
98192 :: PRED :: IF :: Z :: if (v290 != #(0)) goto 861::CD,98200
98200 :: CALL :: call :: V :: v291.setIsPublished(v294)::CL,117870
98211 :: CALL :: call :: V :: v296.setVolume(v298)::CL,117895
98222 :: CALL :: call :: V :: v300.setStartPage(v302)::CL,117916
98233 :: CALL :: call :: V :: v304.setPublicationDate(v306)::CL,117937
98240 :: CALL :: call :: Ljava/lang/String :: v310 = v16.toString()::
98244 :: CALL :: call :: Ljava/lang/String :: v312 = v310.trim()::
98248 :: CALL :: call :: V :: v308.setPublisher(v312)::CL,117948
98255 :: CALL :: call :: Ljava/lang/String :: v316 = v10.toString()::
98259 :: CALL :: call :: Ljava/lang/String :: v318 = v316.trim()::
98263 :: CALL :: call :: V :: v314.setTitle(v318)::CL,117959
98270 :: CALL :: call :: Ljava/lang/String :: v322 = v18.toString()::
98274 :: CALL :: call :: Ljava/lang/String :: v324 = v322.trim()::
98278 :: CALL :: call :: V :: v320.setRefn(v324)::CL,117970
98285 :: CALL :: call :: Ljava/lang/String :: v328 = v20.toString()::
98289 :: CALL :: call :: Ljava/lang/String :: v330 = v328.trim()::
98293 :: CALL :: call :: V :: v326.setPmid(v330)::CL,117981
98300 :: CALL :: call :: Ljava/lang/String :: v334 = v22.toString()::
98304 :: CALL :: call :: Ljava/lang/String :: v336 = v334.trim()::
98308 :: CALL :: call :: V :: v332.setDoi(v336)::CL,117992
98323 :: CALL :: call :: Ljava/lang/String :: v344 = v342.toString()::CL,118003
98508 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setJournalArticle(org.biojava.nbio.structure.JournalArticle)::JM,98513
98513 :: EXPR :: modify :: Lorg/biojava/nbio/structure/JournalArticle :: p0 $this .journalArticle = p1 $journalArticle ::
98519 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::CD,98527
98527 :: CALL :: call :: V :: v4.setCrystallographicInfo(p1 $crystallographicInfo )::CL,118401
98534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setConnections(java.util.List)::JM,98539
98539 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = p1 $conns ::
98545 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::CE,98546:CD,98552
98546 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::JM,82527:JM,122295
98549 :: EXPR :: reference :: Z :: v3 = p0 $this .alignSeqRes::DD,98552
98552 :: NORM :: compound :: Z :: return v3::CF,98546
98576 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.align(org.biojava.nbio.structure.Structure,java.util.List)::CD,98582:CD,98587:CD,98609:CD,98613
98582 :: CALL :: call :: Ljava/util/List :: v7 = p1 $s .getModel(#(0))::CL,54314
98587 :: CALL :: call :: Ljava/util/Iterator :: v9 = p2 $seqResList .iterator()::JM,98613
98592 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,98613
98597 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v16 = getMatchingAtomRes(v14, v7)::JM,98602:CL,118412
98602 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 52::CD,98604
98604 :: CALL :: call :: V :: p0 $this .mapSeqresRecords(v16, v14)::CL,118503
98609 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,98613
98613 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 21::CD,98592:CD,98597:CD,98602:CD,98609:JM,98613
98632 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.storeUnAlignedSeqRes(org.biojava.nbio.structure.Structure,java.util.List,boolean)::CD,98728:CD,98732:CD,98735:JM,98721:JM,98720:JM,98653:JM,98654
98639 :: CALL :: call :: Ljava/util/List :: v9 = p1 $structure .getModel(v45)::CL,54314
98644 :: CALL :: call :: Ljava/util/Iterator :: v11 = p2 $seqResChains .iterator()::JM,98721:JM,98720:JM,98653:JM,98654
98649 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,98720:JM,98653
98653 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::CF,98654
98654 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 86::CD,98659:CD,98663:CD,98667:CD,98671:CD,98677:CD,98682:CD,98734
98659 :: CALL :: call :: V :: v16.setSeqResGroups(v18)::CL,87001
98663 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::
98667 :: CALL :: call :: V :: v16.setAtomGroups(v20)::CL,118782
98671 :: CALL :: call :: Z :: v24 = v9.add(v16)::
98677 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v26 = getMatchingAtomRes(v16, v9)::JM,98682:CL,118412
98682 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 113::CD,98687:CD,98694:CD,98699:CD,98703:CD,98708:CD,98734
98687 :: CALL :: call :: V :: v26.setSeqResGroups(v29)::CL,87001
98694 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
98699 :: CALL :: call :: Ljava/lang/String :: v36 = v16.getChainID()::CL,64429
98703 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v32.append(v36)::
98708 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
98716 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,98720:JM,98653
98721 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 167::CD,98722:CF,98727
98720 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 27::CD,98649:CD,98653:CD,98654:CD,98716:CD,98734:JM,98720:CF,98721
98722 :: CALL :: call :: V :: p1 $structure .setChains(v46, v9)::CL,118820
98727 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v46 + #(1)::DD,98735
98728 :: CALL :: call :: I :: v7 = p1 $structure .nrModels()::JM,98732:CL,87301
98732 :: PRED :: IF :: Z :: if (v45 < v7) goto 7::CD,98639:CD,98644:CD,98716:CD,98720:CD,98721:CD,98727:CD,98728:CD,98734:CD,98735
98735 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,98732:DD,98734
98734 :: EXPR :: assign :: null :: PHI v46 = v45, v46, v46, v46::JM,98720:JM,98653:DD,98727:DD,98734
98775 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkChains2Compound(org.biojava.nbio.structure.Structure)::CD,98783:CD,98868:CD,98872:CD,98876:CD,98880:CD,98930:CD,99014:CD,99018:CD,99022
98780 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,98872
98783 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,98872
98788 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,98872
98793 :: NORM :: declaration :: Ljava/util/ArrayList :: v13 = new java.util.ArrayList::
98800 :: CALL :: call :: I :: v17 = v12.getMolId()::CL,118876
98804 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
98808 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v19)::JM,98813
98813 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,98814:JM,98863
98814 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 61::CD,98816:CD,98859:CD,98863:CD,98864
98816 :: CALL :: call :: Ljava/util/Iterator :: v25 = v22.iterator()::JM,98863
98821 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,98863
98832 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p1 $s .findChain(v35)::CL,118885
98837 :: CALL :: call :: Z :: v39 = v13.add(v37)::
98859 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,98863
98863 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 73::CD,98821:CD,98832:CD,98837:CD,98859:JM,98863
98864 :: CALL :: call :: V :: v12.setChains(v13)::CL,118900
98868 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,98872
98873 :: EXPR :: reference :: Ljava/util/List :: v51 = p0 $this .compounds::JM,98880
98872 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,98788:CD,98793:CD,98800:CD,98804:CD,98808:CD,98813:CD,98814:CD,98868:JM,98872
98876 :: CALL :: call :: I :: v53 = v51.size()::JM,98880
98881 :: EXPR :: reference :: Ljava/util/List :: v55 = p0 $this .compounds::
98880 :: PRED :: IF :: Z :: if (v53 != #(1)) goto 250::CD,98884:CD,98893:CD,98897:CD,98901:CD,98906
98884 :: CALL :: call :: Ljava/lang/Object :: v57 = v55.get(#(0))::
98893 :: CALL :: call :: I :: v61 = v58.getMolId()::CL,118876
98897 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v61)::
98901 :: CALL :: call :: Ljava/lang/Object :: v65 = v59.get(v63)::JM,98906
98907 :: CALL :: call :: Ljava/util/List :: v67 = p1 $s .getChains(#(0))::JM,98916:CL,104449
98906 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 250::CD,98907:CD,98912:CD,98916
98912 :: CALL :: call :: I :: v69 = v67.size()::JM,98916
98917 :: CALL :: call :: Ljava/lang/Object :: v71 = v67.get(#(0))::JM,98916
98916 :: PRED :: IF :: Z :: if (v69 != #(1)) goto 250::CD,98917:CD,98923:JM,98916
98923 :: CALL :: call :: V :: v58.addChain(v72)::CL,118911
98927 :: EXPR :: reference :: Ljava/util/List :: v76 = p0 $this .compounds::JM,99018
98930 :: CALL :: call :: Ljava/util/Iterator :: v78 = v76.iterator()::JM,99018
98935 :: CALL :: call :: Ljava/lang/Object :: v82 = v78.next()::JM,99018
98943 :: CALL :: call :: I :: v86 = v83.getMolId()::CL,118876
98947 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v86)::
98951 :: CALL :: call :: Ljava/lang/Object :: v90 = v84.get(v88)::JM,98956
98956 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 293::CD,98961:CD,98965:CD,98969:CD,98974:CD,98975:CD,99009:CD,99013
98961 :: CALL :: call :: I :: v93 = v83.getMolId()::CL,118876
98965 :: CALL :: call :: Ljava/lang/Integer :: v95 = valueOf(v93)::
98969 :: CALL :: call :: Ljava/lang/Object :: v97 = v91.get(v95)::JM,98974
98975 :: CALL :: call :: Ljava/util/Iterator :: v100 = v98.iterator()::JM,99013:JM,98984
98974 :: EXPR :: assign :: Ljava/lang/Object :: v98 = CHECKCAST v97::JM,99013:JM,98984
98980 :: CALL :: call :: Ljava/lang/Object :: v105 = v100.next()::JM,99013:JM,98984
98985 :: CALL :: call :: Z :: v108 = v106.equals(#(NULL))::JM,98990
98984 :: EXPR :: assign :: Ljava/lang/Object :: v106 = CHECKCAST v105::JM,98990
98990 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 348::CD,98992:CD,98997
98992 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v110 = p1 $s .getChainByPDB(v106)::CL,118928
98997 :: CALL :: call :: V :: v110.setCompound(v83)::CL,104427
99009 :: CALL :: call :: Z :: v102 = v100.hasNext()::JM,99013:JM,98984
99013 :: PRED :: IF :: Z :: if (v102 != #(0)) goto 321::CD,98980:CD,98984:CD,98985:CD,98990:CD,99009:JM,99013:JM,99018
99014 :: CALL :: call :: Z :: v80 = v78.hasNext()::JM,99018
99019 :: EXPR :: reference :: Ljava/util/List :: v118 = p0 $this .compounds::DD,99022
99018 :: PRED :: IF :: Z :: if (v80 != #(0)) goto 263::CD,98935:CD,98943:CD,98947:CD,98951:CD,98956:CD,99014:JM,99018
99023 :: EXPR :: reference :: Ljava/util/List :: v119 = p0 $this .compounds::JM,99030
99022 :: PRED :: IF :: Z :: if (v118 == #(null)) goto 536::CD,99026:CD,99030
99026 :: CALL :: call :: Z :: v121 = v119.isEmpty()::JM,99030
99031 :: CALL :: call :: Ljava/util/List :: v123 = p1 $s .getChains()::JM,99106:CL,48869
99030 :: PRED :: IF :: Z :: if (v121 != #(0)) goto 536::CD,99031:CD,99035:CD,99102:CD,99106
99035 :: CALL :: call :: Ljava/util/Iterator :: v125 = v123.iterator()::JM,99106
99040 :: CALL :: call :: Ljava/lang/Object :: v129 = v125.next()::JM,99106
99045 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v132 = v130.getCompound()::JM,99049:CL,118943
99049 :: PRED :: IF :: Z :: if (v132 != #(null)) goto 528::CF,99050:JM,96774:JM,96767:CD,99054:CD,99061:CD,99066:CD,99070:CD,99077:CD,99088:CD,99092:JM,99106
99050 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v134 = new org.biojava.nbio.structure.Compound::
99054 :: CALL :: call :: V :: v134.addChain(v130)::CL,118911
99061 :: CALL :: call :: I :: v139 = findMaxCompoundId(v137)::CL,118952
99066 :: CALL :: call :: V :: v134.setMolId(v140)::CL,118973
99070 :: CALL :: call :: V :: v130.setCompound(v134)::CL,104427
99074 :: EXPR :: reference :: Ljava/util/List :: v143 = p0 $this .compounds::
99077 :: CALL :: call :: Z :: v145 = v143.add(v134)::
99088 :: CALL :: call :: I :: v151 = v134.getMolId()::CL,118876
99092 :: CALL :: call :: Ljava/lang/Integer :: v153 = valueOf(v151)::
99102 :: CALL :: call :: Z :: v127 = v125.hasNext()::JM,99106
99106 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 435::CD,99040:CD,99045:CD,99049:CD,99102:JM,99106
99212 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkSitesToGroups()::CD,99219:CD,99420:CD,99425:CD,99430:CD,99435:CD,99440:CD,99448:CD,99453:CD,99458
99216 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .siteMap::DD,99219
99219 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 14::CD,99223
99220 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .siteToResidueMap::DD,99223
99223 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 29::CD,99234:CD,99238:CD,99242
99234 :: CALL :: call :: Ljava/util/List :: v8 = v6.getChains()::JM,99242:CL,48869
99238 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,99242
99243 :: NORM :: declaration :: Ljava/util/ArrayList :: v119 = new java.util.ArrayList::
99242 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 75::CF,99243:CD,99247:CD,99265:CD,99272:CD,99276:CD,99281:CD,99356:CD,99360:CD,99481:CD,99485:CD,99486:CD,99490:CD,99501
99244 :: EXPR :: reference :: Ljava/util/Map :: v120 = p0 $this .siteMap::
99247 :: CALL :: call :: Ljava/util/Collection :: v122 = v120.values()::
99262 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .siteMap::
99265 :: CALL :: call :: Ljava/util/Set :: v14 = v12.keySet()::
99269 :: EXPR :: reference :: Ljava/util/Map :: v15 = p0 $this .siteToResidueMap::
99272 :: CALL :: call :: Ljava/util/Set :: v17 = v15.keySet()::
99276 :: CALL :: call :: Z :: v19 = v14.equals(v17)::JM,99281
99281 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 183::CD,99284:CD,99292:CD,99297:CD,99302:CD,99312:CD,99319:CD,99323:CD,99328:CD,99336:CD,99340:CD,99345
99284 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
99289 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .pdbId::
99292 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v21.append(v24)::
99297 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#( header - some Sites ...))::
99302 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
99312 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
99316 :: EXPR :: reference :: Ljava/util/Map :: v36 = p0 $this .siteMap::
99319 :: CALL :: call :: Ljava/util/Set :: v38 = v36.keySet()::
99323 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v34.append(v38)::
99328 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v40.append(#( | ))::
99333 :: EXPR :: reference :: Ljava/util/Map :: v44 = p0 $this .siteToResidueMap::
99336 :: CALL :: call :: Ljava/util/Set :: v46 = v44.keySet()::
99340 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v43.append(v46)::
99345 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
99353 :: EXPR :: reference :: Ljava/util/Map :: v52 = p0 $this .siteMap::JM,99485
99356 :: CALL :: call :: Ljava/util/Set :: v54 = v52.keySet()::JM,99485
99360 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,99485
99365 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,99485
99373 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::
99382 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.get(v61)::JM,99387
99387 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,99388:JM,99480
99388 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 250::CD,99390:CD,99476:CD,99480
99390 :: CALL :: call :: Ljava/util/Iterator :: v71 = v69.iterator()::JM,99480
99395 :: CALL :: call :: Ljava/lang/Object :: v75 = v71.next()::JM,99480
99400 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::CL,64367
99404 :: CALL :: call :: Ljava/lang/String :: v80 = v76.getChainId()::CL,118984
99411 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v83 = v81.findGroup(v80, v78)::CL,118993
99420 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v86 = new java.lang.StringBuilder::
99425 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v86.append(v78)::
99430 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(#( in chain ))::
99435 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(v80)::
99440 :: CALL :: call :: Ljava/lang/StringBuilder :: v98 = v95.append(#( in order to link up ...))::
99445 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .pdbId::
99448 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v99)::
99453 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#()))::
99458 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
99467 :: CALL :: call :: Ljava/util/List :: v109 = v65.getGroups()::CL,119011
99471 :: CALL :: call :: Z :: v111 = v109.add(v83)::
99476 :: CALL :: call :: Z :: v73 = v71.hasNext()::JM,99480
99481 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,99485
99480 :: PRED :: IF :: Z :: if (v73 != #(0)) goto 262::CD,99395:CD,99400:CD,99404:CD,99411:CD,99467:CD,99471:CD,99476:JM,99480:JM,99485
99485 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 201::CF,99486:CD,99365:CD,99373:CD,99382:CD,99387:CD,99388:CD,99481:JM,99485
99487 :: EXPR :: reference :: Ljava/util/Map :: v113 = p0 $this .siteMap::
99486 :: NORM :: declaration :: Ljava/util/ArrayList :: v112 = new java.util.ArrayList::
99490 :: CALL :: call :: Ljava/util/Collection :: v115 = v113.values()::
99501 :: CALL :: call :: V :: v117.setSites(v112)::CL,86301
99579 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setBioAssemblies(java.util.Map)::JM,99584
99584 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = p1 $bioAssemblies ::
99590 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNcsOperators(javax.vecmath.Matrix4d[])::JM,99595
99595 :: EXPR :: modify :: [Ljavax/vecmath/Matrix4d :: p0 $this .ncsOperators = p1 $ncsOperators ::
99601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRfree(float)::JM,99606
99606 :: EXPR :: modify :: F :: p0 $this .rFree = p1 $rFree ::
99633 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formLinkRecordBond(org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord)::CD,99638:CD,99642:CD,99647:CD,99745
99638 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $linkRecord .getAltLoc1()::JM,99647:CL,119020
99642 :: CALL :: call :: Z :: v8 = v5.equals(#( ))::JM,99647
99647 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,99648:CD,99652:CD,99657
99648 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $linkRecord .getAltLoc2()::JM,99657:CL,119029
99652 :: CALL :: call :: Z :: v13 = v11.equals(#( ))::JM,99657
99657 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 29::CD,99683:CD,99717:JM,135122:JM,135125:JM,135128:JM,135119
99683 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v27 = p0 $this .getAtomFromRecord(v15, v17, v19, v21, v23, v25)::CL,119083
99717 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v41 = p0 $this .getAtomFromRecord(v29, v31, v33, v35, v37, v39)::CL,119083
99745 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $linkRecord .toString()::CL,119302
99789 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBonds(java.util.List)::CD,99794:CD,99798:CD,99819:CD,99823:CD,99827
99794 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
99798 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $disulfideBonds .iterator()::JM,99823
99803 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,99823
99808 :: CALL :: call :: Lorg/biojava/nbio/structure/Bond :: v15 = p0 $this .formDisulfideBond(v13)::JM,99813:CL,119820
99813 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 53::CD,99814:JM,99823
99814 :: CALL :: call :: Z :: v18 = v4.add(v15)::
99819 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,99823
99823 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,99803:CD,99808:CD,99813:CD,99819:JM,99823
99827 :: CALL :: call :: V :: v19.setSSBonds(v4)::CL,86281
99850 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.makeBonds()::CD,99854:CD,99857:CD,99860:CD,99863
99854 :: CALL :: call :: V :: p0 $this .formPeptideBonds()::CL,119937
99857 :: CALL :: call :: V :: p0 $this .formNucleotideBonds()::CL,120090
99860 :: CALL :: call :: V :: p0 $this .formIntraResidueBonds()::CL,120243
99863 :: CALL :: call :: V :: p0 $this .trimBondLists()::CL,120460
99871 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.ChargeAdder.addCharges(org.biojava.nbio.structure.Structure)::CD,99954:CD,99959:CD,99964:CD,99969:CD,100109:CD,100113:CD,100121
99876 :: CALL :: call :: Ljava/util/List :: v7 = p1 $structure .getChains(v115)::JM,100107:CL,104449
99881 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,100107
99886 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,100107
99891 :: CALL :: call :: Ljava/util/List :: v16 = v14.getAtomGroups()::JM,100102:CL,54331
99895 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,100102
99900 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,100102
99909 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v27 = getChemComp(v25)::CL,120570
99913 :: CALL :: call :: Ljava/util/List :: v29 = v27.getAtoms()::JM,100097:JM,99926:CL,120701
99917 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,100097:JM,99926
99922 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,100097:JM,99926
99926 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::JM,99936:JM,99941:JM,99940:JM,99946:JM,99985:JM,100024
99931 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v23.getAtom(v38)::JM,100055:CL,54507
99936 :: CALL :: call :: Ljava/lang/String :: v42 = v36.getCharge()::JM,99936:JM,99941:JM,99940:JM,99946
99941 :: CALL :: call :: Z :: v46 = v42.equals(#(?))::JM,99941:JM,99946
99940 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 230::CD,99941:CD,99946:CD,100019:CD,100024:CD,100028:CD,100033:CD,100038:CD,100042:CD,100047
99947 :: CALL :: call :: S :: v48 = parseShort(v42)::JM,99941:JM,99946
99946 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 186::CD,99947:CD,99980:CD,99985:CD,99989:CD,99994:CD,99999:CD,100003:CD,100008:JM,99941:JM,99946
99954 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
99959 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v51.append(v42)::JM,99941:JM,99946
99964 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(' to short))::
99969 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
99980 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
99985 :: CALL :: call :: Ljava/lang/String :: v67 = v36.getAtom_id()::JM,99985
99989 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
99994 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(#( in group ))::
99999 :: CALL :: call :: Ljava/lang/String :: v74 = v27.getId()::CL,120710
100003 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v72.append(v74)::
100008 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
100019 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
100024 :: CALL :: call :: Ljava/lang/String :: v85 = v36.getAtom_id()::JM,100024
100028 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v81.append(v85)::
100033 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v87.append(#( in group ))::
100038 :: CALL :: call :: Ljava/lang/String :: v91 = v27.getId()::CL,120710
100042 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v89.append(v91)::
100047 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::
100055 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 287::CD,100056
100056 :: CALL :: call :: V :: v40.setCharge(v97)::CL,120719
100060 :: CALL :: call :: Ljava/util/List :: v100 = v23.getAltLocs()::JM,100092:CL,104462
100064 :: CALL :: call :: Ljava/util/Iterator :: v102 = v100.iterator()::JM,100092
100069 :: CALL :: call :: Ljava/lang/Object :: v106 = v102.next()::JM,100092
100078 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = v107.getAtom(v109)::JM,100083:CL,54507
100083 :: PRED :: IF :: Z :: if (v111 == #(null)) goto 344::CF,100117:CD,100084
100084 :: CALL :: call :: V :: v111.setCharge(v97)::CL,120719
100088 :: CALL :: call :: Z :: v104 = v102.hasNext()::JM,100092
100093 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,100097:JM,99926
100092 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 304::CF,100118:CD,100069:CD,100078:CD,100083:CD,100088:CD,100117:JM,100092
100097 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 92::CF,100119:CD,99922:CD,99926:CD,99931:CD,99936:CD,99940:CD,100055:CD,100060:CD,100064:CD,100088:CD,100092:CD,100093:CD,100117:CD,100118:JM,100097
100098 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,100102
100103 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,100107
100102 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 49::CF,100120:CD,99900:CD,99909:CD,99913:CD,99917:CD,100093:CD,100097:CD,100098:CD,100118:CD,100119:JM,100102
100107 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 22::CD,99886:CD,99891:CD,99895:CD,100098:CD,100102:CD,100103:CD,100119:CD,100120:JM,100107:CF,100108
100109 :: CALL :: call :: I :: v5 = p1 $structure .nrModels()::JM,100113:CL,87301
100108 :: EXPR :: assign :: Ljava/lang/Object :: v114 = v116 + #(1)::DD,100121
100113 :: PRED :: IF :: Z :: if (v115 < v5) goto 7::CD,99876:CD,99881:CD,100103:CD,100107:CD,100108:CD,100109:CD,100120:CD,100121
100117 :: EXPR :: assign :: null :: PHI v119 = v118, v119, v119::JM,100092:DD,100117:DD,100118
100119 :: EXPR :: assign :: null :: PHI v117 = v116, v118::JM,100102:DD,100118:DD,100120
100118 :: EXPR :: assign :: null :: PHI v118 = v117, v119::JM,100097:JM,99926:DD,100117:DD,100119
100121 :: EXPR :: assign :: null :: PHI v115 = #(0), v114::DD,100113:DD,100120
100120 :: EXPR :: assign :: null :: PHI v116 = v115, v117::JM,100107:DD,100108:DD,100119
100188 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecElement(java.util.List,java.lang.String,org.biojava.nbio.structure.secstruc.SecStrucType)::CD,100195:CD,100378:CD,100382
100195 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $secList .iterator()::JM,100382
100200 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,100382
100205 :: CALL :: call :: Ljava/lang/Object :: v16 = v13.get(#(initChainId))::JM,100210
100211 :: CALL :: call :: Ljava/lang/Object :: v20 = v13.get(#(initSeqNum))::
100210 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,100279
100217 :: CALL :: call :: Ljava/lang/Object :: v24 = v13.get(#(initICode))::JM,100222
100223 :: CALL :: call :: Ljava/lang/Object :: v28 = v13.get(#(endChainId))::JM,100228
100222 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,100246:DD,100384
100229 :: CALL :: call :: Ljava/lang/Object :: v32 = v13.get(#(endSeqNum))::
100228 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::JM,100339
100235 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(endICode))::JM,100240
100241 :: CALL :: call :: Z :: v40 = v25.equals(#( ))::JM,100246
100240 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::JM,100252:DD,100385:JM,100246
100247 :: CALL :: call :: Z :: v44 = v37.equals(#( ))::JM,100252
100246 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 134::CF,100384
100252 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 145::CF,100385
100262 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = v46.next()::CL,100496
100270 :: CALL :: call :: Ljava/lang/String :: v56 = v54.getChainID()::JM,100279:CL,64429
100274 :: CALL :: call :: Z :: v58 = v56.equals(v17)::JM,100279
100279 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 240::CF,100386:CF,100280:CD,100281:CD,100289:CD,100294:CD,100302:CD,100306:CD,100311
100281 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v21)::
100280 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,100311
100289 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v42)::JM,100311
100294 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,100311
100302 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::JM,100311:CL,64367
100306 :: CALL :: call :: Z :: v72 = v70.equals(v66)::JM,100311
100311 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 240::CF,100386
100313 :: CALL :: call :: Z :: v76 = v52.hasAminoAtoms()::JM,100317:CL,100523
100312 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 280::CD,100313:CD,100317
100317 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 280::CD,100325
100325 :: CALL :: call :: V :: v52.setProperty(#(secstruc), v77)::CL,100610
100330 :: CALL :: call :: Ljava/lang/String :: v82 = v54.getChainID()::JM,100339:CL,64429
100334 :: CALL :: call :: Z :: v84 = v82.equals(v29)::JM,100339
100339 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 341::CF,100387:CF,100340:CD,100341:CD,100349:CD,100354:CD,100362:CD,100366:CD,100371:CD,100373:CD,100377
100341 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v33)::
100340 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::JM,100371
100349 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v45)::JM,100371
100354 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,100371
100362 :: CALL :: call :: Ljava/lang/String :: v96 = v94.toString()::JM,100371:CL,64367
100366 :: CALL :: call :: Z :: v98 = v92.equals(v96)::JM,100371
100371 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 341::CF,100387:CD,100373:CD,100377
100373 :: CALL :: call :: Z :: v50 = v46.hasNext()::JM,100377:CL,100630
100377 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 166::CD,100262:CD,100270:CD,100274:CD,100279:CD,100312:CD,100330:CD,100334:CD,100339:CD,100386:CD,100387:JM,100382
100378 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,100382
100382 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 13::CD,100200:CD,100205:CD,100210:CD,100211:CD,100217:CD,100222:CD,100223:CD,100228:CD,100229:CD,100235:CD,100240:CD,100241:CD,100246:CD,100247:CD,100252:CD,100373:CD,100377:CD,100378:CD,100384:CD,100385:CD,100387:JM,100382
100385 :: EXPR :: assign :: null :: PHI v45 = v37, #()::JM,100371
100384 :: EXPR :: assign :: null :: PHI v42 = v25, #()::JM,100311:JM,100252
100387 :: EXPR :: assign :: null :: PHI v99 = #(0), v74, v74::DD,100386
100386 :: EXPR :: assign :: null :: PHI v74 = v99, v99, #(1)::DD,100312:DD,100387
100496 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.next()::CD,100510
100510 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v9 = p0 $this .getNextGroup(v3, v4, v7)::CL,120730
100523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::CE,100524:CD,100527:CD,100532
100524 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::JM,82989:JM,100317
100527 :: CALL :: call :: Z :: v5 = p0 $this .hasAtom(#(CA))::JM,100532:CL,54432
100533 :: CALL :: call :: Z :: v9 = p0 $this .hasAtom(#(C))::JM,100538:CL,54432
100532 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 43::CD,100533:CD,100538:CD,100552
100539 :: CALL :: call :: Z :: v12 = p0 $this .hasAtom(#(N))::JM,100544:CL,54432
100538 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 43::CD,100539:CD,100544:CD,100552
100545 :: CALL :: call :: Z :: v15 = p0 $this .hasAtom(#(O))::JM,100550:CL,54432
100544 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 43::CD,100545:CD,100550:CD,100552
100551 :: NORM :: compound :: Z :: return #(1)::DD,100524
100550 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 43::CD,100551:CD,100552
100552 :: NORM :: compound :: Z :: return #(0)::DD,100524
100567 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::CE,100568:CD,100575:CD,100580
100568 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::JM,82995
100575 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $key )::JM,100580
100580 :: NORM :: compound :: Ljava/lang/Object :: return v6::DD,100568
100610 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setProperty(java.lang.String,java.lang.Object)::CD,100619
100619 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.put(p1 $key , p2 $value )::
100631 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasNext()::JM,83014:JM,100377
100630 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasNext()::CE,100631:CD,100644:CD,100651
100644 :: CALL :: call :: Z :: v9 = p0 $this .hasSubGroup(v3, v4, v7)::JM,100651:CL,120841
100651 :: NORM :: compound :: Z :: return v9::DD,100631
100803 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainDescriptionInstalled()::CD,100810:CD,100814:CD,100827:CD,100839:CD,100850:CD,100862
100807 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainDescription::JM,100814
100810 :: CALL :: call :: Z :: v5 = v3.get()::JM,100814
100814 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,100816:CD,100820:CD,100844:CD,100870
100816 :: CALL :: call :: Z :: v8 = p0 $this .domainDescriptionFileAvailable()::JM,100820:CL,120943
100821 :: CALL :: call :: V :: p0 $this .downloadDomainDescriptionFile()::CL,120967
100820 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,100821
100827 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
100836 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainDescription::
100839 :: CALL :: call :: V :: v16.set(#(0))::
100844 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile()::CL,121010
100850 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
100859 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainDescription::
100862 :: CALL :: call :: V :: v24.set(#(0))::
100867 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainDescription::JM,100870
100870 :: CALL :: call :: V :: v26.set(#(1))::JM,100870
100886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomallInstalled()::CD,100890:CD,100896:CD,100900:CD,100929:CD,100941:CD,100952:CD,100964
100890 :: CALL :: call :: V :: p0 $this .ensureDomainListInstalled()::CL,121059
100893 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v4 = p0 $this .installedDomainList::JM,100900
100896 :: CALL :: call :: Z :: v6 = v4.get()::JM,100900
100901 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v33 = p0 $this .installedDomall::JM,100904
100900 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 24::CD,100904:CD,100912:CD,100916
100904 :: CALL :: call :: V :: v33.set(#(0))::JM,100904
100909 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedDomall::JM,100916
100912 :: CALL :: call :: Z :: v10 = v8.get()::JM,100916
100916 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 35::CD,100918:CD,100922:CD,100946:CD,100972
100918 :: CALL :: call :: Z :: v12 = p0 $this .domallFileAvailable()::JM,100922:CL,121142
100923 :: CALL :: call :: V :: p0 $this .downloadDomallFile()::CL,121166
100922 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 74::CD,100923
100929 :: CALL :: call :: Ljava/lang/String :: v18 = v14.getMessage()::
100938 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v20 = p0 $this .installedDomall::
100941 :: CALL :: call :: V :: v20.set(#(0))::
100946 :: CALL :: call :: V :: p0 $this .parseCathDomall()::CL,121209
100952 :: CALL :: call :: Ljava/lang/String :: v26 = v23.getMessage()::
100961 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v28 = p0 $this .installedDomall::
100964 :: CALL :: call :: V :: v28.set(#(0))::
100969 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v30 = p0 $this .installedDomall::JM,100972
100972 :: CALL :: call :: V :: v30.set(#(1))::JM,100972
100993 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase(java.lang.String)::CD,100997:CD,101002:CD,101007:CD,101012:CD,101025:CD,101030:CD,101035:CD,101043:CD,101047:CD,101051:CD,101056:CD,101057:CD,101063:CD,101148:CD,101153:CD,101158:CD,101172:CD,101173
100997 :: PRED :: IF :: Z :: if (p1 $version  != #(null)) goto 8::CF,101172:CD,100998
100998 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.ecod.EcodFactory.defaultVersion::DD,101172
101002 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
101007 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(v5)::
101012 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
101025 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
101030 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(v5)::
101035 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
101043 :: CALL :: call :: V :: releaseReferences()::CL,121258
101047 :: CALL :: call :: Ljava/lang/String :: v28 = v5.toLowerCase()::
101051 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,101056
101057 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 96::CF,101173:CD,101058:CD,101062
101056 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,101057:JM,101062
101058 :: CALL :: call :: Ljava/lang/Object :: v33 = v31.get()::JM,101062
101063 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 210::CD,101067:JM,43540:JM,43547:CD,101085:CD,101093:CD,101097:CD,101102:CD,101110:CD,101114:CD,101118:CD,101123
101062 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::DD,101173
101067 :: CALL :: call :: Ljava/lang/String :: v40 = v38.getSimpleName()::
101085 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodInstallation :: v46 = new org.biojava.nbio.structure.ecod.EcodInstallation::
101093 :: CALL :: call :: Ljava/lang/String :: v50 = v5.toLowerCase()::
101097 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v51 = new java.lang.ref.SoftReference::
101102 :: CALL :: call :: Ljava/lang/Object :: v54 = v48.put(v50, v51)::
101110 :: CALL :: call :: Ljava/lang/String :: v57 = v46.getVersion()::CL,121408
101114 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toLowerCase()::
101118 :: CALL :: call :: Z :: v61 = v55.containsKey(v59)::JM,101123
101123 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 210::CD,101126:CD,101130:CD,101134:CD,101139
101126 :: CALL :: call :: Ljava/lang/String :: v65 = v46.getVersion()::CL,121408
101130 :: CALL :: call :: Ljava/lang/String :: v68 = v65.toLowerCase()::
101134 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v69 = new java.lang.ref.SoftReference::
101139 :: CALL :: call :: Ljava/lang/Object :: v72 = v63.put(v68, v69)::
101148 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::
101153 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v76.append(v5)::
101158 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
101173 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,101063
101172 :: EXPR :: assign :: null :: PHI v5 = p1 $version , v4::
101221 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::CE,101222:CD,101281:CD,101282:CD,101290:CD,101295:CD,101296
101222 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::JM,83449:JM,83500
101259 :: CALL :: call :: V :: p0 $this .indexDomains()::CL,121432
101278 :: EXPR :: reference :: Ljava/util/Map :: v11 = p0 $this .domainMap::DD,101281
101281 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 27::CD,101259:CF,101282
101283 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $pdbId .toLowerCase()::
101282 :: PRED :: IF :: Z :: if (p1 $pdbId  == #(null)) goto 96::CD,101283
101290 :: CALL :: call :: Ljava/lang/Object :: v32 = v30.get(v29)::JM,101295
101295 :: EXPR :: assign :: Ljava/lang/Object :: v33 = CHECKCAST v32::DD,101296:JM,101347
101296 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 139::CF,101314:CD,101313:CD,101315:CD,101323:CD,101343:CD,101347:CD,101364
101313 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,101222
101315 :: CALL :: call :: I :: v36 = v33.size()::
101314 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,101364
101323 :: CALL :: call :: Ljava/util/Iterator :: v39 = v33.iterator()::JM,101347
101328 :: CALL :: call :: Ljava/lang/Object :: v44 = v39.next()::JM,101347
101333 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v46 = new org.biojava.nbio.structure.ecod.EcodDomain::
101338 :: CALL :: call :: Z :: v49 = v34.add(v46)::
101343 :: CALL :: call :: Z :: v41 = v39.hasNext()::JM,101347
101347 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 166::CD,101328:CD,101333:CD,101338:CD,101343:JM,101347
101364 :: NORM :: compound :: Ljava/util/List :: return v34::DD,101222
101423 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::CE,101424:CD,101430
101424 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::JM,83494:JM,121491:JM,121490:JM,121495
101427 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainId::DD,101430
101430 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,101424
101433 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::JM,83571:JM,83570
101432 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::CE,101433:CD,101437:CD,101442:CD,101443:CD,101444:CD,101452:CD,101457:CD,101462:CD,101467:CD,101472:CD,101476:CD,101481:CD,101491
101437 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = p0 $this .requestRemoteDomainByScopID(p1 $scopId )::JM,101442:CL,121795
101443 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v7 = new java.lang.RuntimeException::
101442 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v5::DD,101433
101444 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
101449 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .server::
101452 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(v11)::
101457 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(getDomainByScopID?scopId=))::
101462 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(p1 $scopId )::
101467 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#(&version=))::
101472 :: CALL :: call :: Ljava/lang/String :: v23 = p0 $this .getScopVersion()::CL,74956
101476 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v23)::
101481 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
101491 :: EXPR :: assign :: Ljava/lang/Exception :: v6 = catch <exc>::
101495 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::JM,83571:JM,83570
101494 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::CE,101495:CD,101499:CD,101515:CD,101520:CD,101525:CD,101534:CD,101540:CD,101545:JM,101566
101499 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,74766
101515 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
101520 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(p1 $scopId )::JM,101566
101525 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,101566
101534 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $scopId .substring(#(1), #(5))::JM,101566
101540 :: CALL :: call :: Ljava/util/List :: v16 = p0 $this .getDomainsForPDB(v14)::JM,101556:JM,101572:JM,101545:CL,66424
101545 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 71::CD,101546:CD,101547:CD,101568:CD,101572:JM,101556
101547 :: CALL :: call :: Ljava/util/Iterator :: v19 = v16.iterator()::JM,101556:JM,101572
101546 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,101495
101552 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,101556:JM,101572
101557 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getScopId()::JM,101566:CL,66886
101556 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,101567
101561 :: CALL :: call :: Z :: v29 = v27.equalsIgnoreCase(p1 $scopId )::JM,101566
101567 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v25::DD,101495
101566 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 110::CD,101567:CD,101568:CD,101572:JM,101556
101568 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,101556:JM,101572
101573 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,101495
101572 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,101552:CD,101556:CD,101557:CD,101561:CD,101566:CD,101573:JM,101572
101599 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::CE,101600:CD,101605:CD,101610:CD,101614:CD,101667:CD,101668:CD,101673:CD,101678:CD,101683:CD,101713:CD,101714:CD,101719:CD,101724:CD,101733
101600 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueRange :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::JM,104564
101605 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $s )::JM,101625:JM,101644:JM,101614
101610 :: CALL :: call :: Z :: v7 = v5.matches()::JM,101625:JM,101644:JM,101614
101615 :: CALL :: call :: Ljava/lang/String :: v28 = v5.group(#(1))::JM,101625:JM,101644:JM,101614
101614 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 125::CD,101615:CD,101620:CD,101625:CD,101659:CD,101666:CD,101695:CD,101700:CD,101705:CD,101712:JM,101644:JM,101614
101620 :: CALL :: call :: Ljava/lang/String :: v31 = v5.group(#(2))::JM,101625:JM,101644:JM,101614
101625 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 80::CD,101626:CD,101631:CD,101639:CD,101644:JM,101625:JM,101614
101626 :: CALL :: call :: Ljava/lang/String :: v33 = v5.group(#(2))::JM,101625:JM,101644:JM,101614
101631 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = fromString(v33)::CL,121902
101639 :: CALL :: call :: Ljava/lang/String :: v39 = v5.group(#(3))::JM,101625:JM,101644:JM,101614
101644 :: PRED :: IF :: Z :: if (v39 != #(null)) goto 67::CD,101646:CD,101651:JM,101625:JM,101644:JM,101614
101646 :: CALL :: call :: Ljava/lang/String :: v41 = v5.group(#(3))::JM,101625:JM,101644:JM,101614
101651 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v43 = fromString(v41)::CL,121902
101659 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v47 = new org.biojava.nbio.structure.ResidueRange::DD,101666
101667 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v53 = new java.lang.IllegalArgumentException::
101666 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v47::DD,101600
101668 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
101673 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v54.append(p1 $s )::
101678 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#( was not valid))::
101683 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
101695 :: CALL :: call :: Ljava/util/regex/Matcher :: v11 = v9.matcher(p1 $s )::
101700 :: CALL :: call :: Z :: v13 = v11.matches()::
101705 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v23 = new org.biojava.nbio.structure.ResidueRange::DD,101712
101713 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
101712 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v23::DD,101600
101714 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
101719 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v15.append(p1 $s )::
101724 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
101733 :: EXPR :: assign :: Ljava/lang/Exception :: v49 = catch <exc>::
101865 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::CE,101866:CD,101870:JM,101875:JM,101898:JM,101886
101866 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::JM,84261
101871 :: CALL :: call :: I :: v6 = p1 $domainRanges .size()::JM,101875:JM,101898:JM,101870:JM,101886
101870 :: PRED :: IF :: Z :: if (p1 $domainRanges  == #(null)) goto 14::CD,101871:CD,101875:CD,101876:JM,101898:JM,101870:JM,101886
101875 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 16::CD,101876:CD,101877:CD,101894:CD,101898:JM,101875:JM,101870:JM,101886
101877 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $domainRanges .iterator()::JM,101875:JM,101898:JM,101870:JM,101886
101876 :: NORM :: compound :: Z :: return #(1)::DD,101866
101882 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,101898:JM,101886
101887 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 49::CD,101888:CD,101892:CD,101894:CD,101898:JM,101886
101886 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,101887:JM,101892
101888 :: CALL :: call :: I :: v16 = v14.length()::JM,101892
101893 :: NORM :: compound :: Z :: return #(0)::DD,101866
101892 :: PRED :: IF :: Z :: if (v16 <= #(0)) goto 49::CD,101893:CD,101894:CD,101898:JM,101886
101894 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,101898:JM,101886
101899 :: NORM :: compound :: Z :: return #(1)::DD,101866
101898 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 26::CD,101882:CD,101886:CD,101887:CD,101899:JM,101898
101934 :: CALL :: call :: Ljava/util/regex/Matcher :: v9 = v6.matcher(v7)::
101939 :: CALL :: call :: Z :: v11 = v9.matches()::
101950 :: CALL :: call :: Ljava/lang/String :: v15 = v9.group(#(1))::
101981 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.util.AtomCache.checkLoading(java.lang.String)::JM,84627
101980 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.checkLoading(java.lang.String)::CE,101981:CD,101988:CD,101993
101988 :: CALL :: call :: Z :: v6 = v4.contains(p1 $name )::JM,101993
101993 :: NORM :: compound :: Z :: return v6::DD,101981
101996 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.loadStructureFromCifByPdbId(java.lang.String)::CD,102001:JM,42656:JM,46977:JM,47041:JM,46963:JM,47027:JM,42660:JM,48532:JM,47013:JM,42648:JM,42652:JM,47021:CD,102034:CD,102038:CD,102044:CD,102049
102001 :: CALL :: call :: V :: p0 $this .flagLoading(p1 $pdbId )::CL,121998
102034 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $pdbId .toLowerCase()::
102038 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v17 = v5.getStructureById(v15)::CL,122027
102044 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,122048
102049 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,122048
102072 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.loadStructureFromPdbByPdbId(java.lang.String)::CD,102077:JM,46977:JM,47041:JM,47013:JM,42600:JM,42604:JM,47021:JM,42608:JM,46963:JM,47027:JM,42612:JM,48532:JM,42616:JM,42620:CD,102110:CD,102114:CD,102120:CD,102125
102077 :: CALL :: call :: V :: p0 $this .flagLoading(p1 $pdbId )::CL,121998
102110 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $pdbId .toLowerCase()::
102114 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v17 = v5.getStructureById(v15)::CL,122027
102120 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,122048
102125 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,122048
102149 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO.StructureFiletype.values()::JM,84842:JM,84919
102148 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.values()::CF,102149:CD,102151:CD,102153:CD,102154:CD,102162
102151 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = org.biojava.nbio.structure.StructureIO$StructureFiletype.ENUM$VALUES::DD,102153
102153 :: EXPR :: assign :: I :: v4 = v2.length::DD,102154
102154 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v5 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::DD,102162
102162 :: NORM :: compound :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v5::CF,102149
102175 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentStart()::CD,102179:JM,76289:JM,76258:JM,70089:JM,76296:JM,70122:JM,76268:JM,76303:JM,70097:JM,70129:JM,76275:JM,76310:JM,70105:JM,76282:CD,102195:CD,102202:CD,102209:CD,102216:CD,102223:CD,102230:CD,102237:CD,102244:CD,102251:CD,102258:CD,102265:CD,102272:CD,102279:CD,102286:CD,102293:CD,102300:CD,102307:CD,102314:CD,102321
102179 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureImpl :: v3 = new org.biojava.nbio.structure.StructureImpl::DD,102183
102183 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .structure = v3::
102186 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
102189 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
102192 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = #(null)::
102195 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,102199
102199 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v6::
102202 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,102206
102206 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entities = v8::
102209 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::DD,102213
102213 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucRefs = v10::
102216 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,102220
102220 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResChains = v12::
102223 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,102227
102227 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entityChains = v14::
102230 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::DD,102234
102234 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structAsyms = v16::
102237 :: NORM :: declaration :: Ljava/util/HashMap :: v18 = new java.util.HashMap::DD,102241
102241 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v18::
102244 :: NORM :: declaration :: Ljava/util/HashMap :: v20 = new java.util.HashMap::DD,102248
102248 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v20::
102251 :: NORM :: declaration :: Ljava/util/HashMap :: v22 = new java.util.HashMap::DD,102255
102255 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2entityId = v22::
102258 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::DD,102262
102262 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structOpers = v24::
102265 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::DD,102269
102269 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblies = v26::
102272 :: NORM :: declaration :: Ljava/util/ArrayList :: v28 = new java.util.ArrayList::DD,102276
102276 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblyGens = v28::
102279 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::DD,102283
102283 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcGens = v30::
102286 :: NORM :: declaration :: Ljava/util/ArrayList :: v32 = new java.util.ArrayList::DD,102290
102290 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcNats = v32::
102293 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,102297
102297 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcSyns = v34::
102300 :: NORM :: declaration :: Ljava/util/ArrayList :: v36 = new java.util.ArrayList::DD,102304
102304 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structConn = v36::
102307 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::DD,102311
102311 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structNcsOper = v38::
102314 :: NORM :: declaration :: Ljava/util/ArrayList :: v40 = new java.util.ArrayList::DD,102318
102318 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sequenceDifs = v40::
102321 :: NORM :: declaration :: Ljava/util/ArrayList :: v42 = new java.util.ArrayList::DD,102325
102325 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structSiteGens = v42::
102375 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentStart()::CD,102382:CD,102395:CD,102399
102379 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,102399
102382 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,102399
102387 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,102399
102392 :: CALL :: call :: V :: v11.documentStart()::CL,102175
102395 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,102399
102399 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,102387:CD,102392:CD,102395:JM,102399
102417 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentEnd()::CD,102424:CD,102437:CD,102441
102421 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,102441
102424 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,102441
102429 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,102441
102434 :: CALL :: call :: V :: v11.documentEnd()::CL,122075
102437 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,102441
102441 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,102429:CD,102434:CD,102437:JM,102441
102451 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::JM,85282:JM,85225:JM,85215:JM,85680:JM,85412:JM,85505:JM,85515:JM,85598
102450 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::CE,102451:CD,102457:CD,102461:CD,102466:CD,102532:CD,102536:CD,102604:CD,102605:CD,102606:CD,102610:CD,102611:CD,102612:JM,102596:JM,102602
102457 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,102536:DD,102591:JM,102596:DD,102597:DD,102603
102461 :: CALL :: call :: Z :: v12 = v48.startsWith(#(;))::JM,102466
102467 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 76::CD,102468:CD,102472:CD,102490:CD,102494:CD,102610:CD,102611:CD,102612
102466 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 96::CD,102467:CD,102500
102468 :: CALL :: call :: I :: v26 = v48.length()::JM,102472
102473 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::DD,102612
102472 :: PRED :: IF :: Z :: if (v26 <= #(1)) goto 57::CF,102484:CF,102473:CD,102474:CD,102610:CD,102611:CD,102612
102474 :: CALL :: call :: Ljava/lang/String :: v29 = v48.substring(#(1))::
102484 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::DD,102612
102490 :: CALL :: call :: Ljava/lang/String :: v35 = v50.toString()::
102494 :: CALL :: call :: Z :: v37 = v6.add(v35)::
102501 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v50.append(v48)::
102500 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 111::CD,102501:CD,102507:CD,102512:CD,102527:CD,102531:CD,102607:CD,102608:CD,102609:CD,102610:CD,102611:CD,102612
102507 :: CALL :: call :: Ljava/util/List :: v14 = p0 $this .processSingleLine(v48)::JM,102531:JM,102521:CL,123428
102512 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,102531:JM,102521
102517 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,102531:JM,102521
102521 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::
102522 :: CALL :: call :: Z :: v23 = v6.add(v21)::
102527 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,102531:JM,102521
102531 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 130::CF,102610:CD,102517:CD,102521:CD,102522:CD,102527:CD,102607:CD,102608:CD,102609:JM,102531
102532 :: CALL :: call :: I :: v43 = v6.size()::JM,102536
102536 :: PRED :: IF :: Z :: if (v43 <= p3 $fieldLength ) goto 238::CD,102539:CD,102544:CD,102548:CD,102553:CD,102558:CD,102563:CD,102568:CD,102573:CD,102578:CD,102583:CD,102591:CD,102592:CD,102596
102539 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
102544 :: CALL :: call :: I :: v60 = v6.size()::
102548 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(v60)::
102553 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(#() should be ())::
102558 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(p3 $fieldLength )::JM,102596:JM,102602:JM,102604
102563 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v67.append(#() at line ))::
102568 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(v54)::
102573 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( got lineData: ))::
102578 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v6)::
102583 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
102591 :: NORM :: compound :: Ljava/util/List :: return v6::DD,102451
102592 :: CALL :: call :: I :: v45 = v6.size()::JM,102596
102597 :: NORM :: compound :: Ljava/util/List :: return v6::DD,102451
102596 :: PRED :: IF :: Z :: if (v45 != p3 $fieldLength ) goto 251::CD,102597:CD,102598:CD,102602:CD,102604:CD,102605:CD,102606:JM,102596:JM,102536
102598 :: CALL :: call :: Ljava/lang/String :: v47 = p2 $buf .readLine()::JM,102596:JM,102536:JM,102602:JM,102604
102603 :: NORM :: compound :: Ljava/util/List :: return v6::DD,102451
102602 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 18::CF,102604:CD,102461:CD,102466:CD,102532:CD,102536:CD,102603:CD,102605:CD,102606:CD,102610:CD,102611:CD,102612
102605 :: EXPR :: assign :: null :: PHI v49 = v40, #(0)::CF,102606:DD,102467:DD,102500:DD,102608:DD,102611
102604 :: EXPR :: assign :: null :: PHI v48 = v47, p1 $line ::CF,102605:JM,102466:JM,102472:DD,102607:DD,102610
102607 :: EXPR :: assign :: null :: PHI v51 = v48, v51::CF,102608:DD,102607:DD,102610
102606 :: EXPR :: assign :: null :: PHI v50 = v41, #(null)::DD,102609:DD,102612:JM,102466
102609 :: EXPR :: assign :: null :: PHI v53 = v50, v53::JM,102531:JM,102521:DD,102609:DD,102612
102608 :: EXPR :: assign :: null :: PHI v52 = v49, v52::CF,102609:DD,102608:DD,102611
102611 :: EXPR :: assign :: null :: PHI v40 = #(1), #(1), #(0), v49, v52::CF,102612:DD,102605
102610 :: EXPR :: assign :: null :: PHI v54 = v48, v48, v48, v48, v51::CF,102611
102612 :: EXPR :: assign :: null :: PHI v41 = v27, v31, #(null), v50, v53::JM,102536:DD,102606
102766 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.endLineChecks(java.lang.String,java.util.List,java.util.List,java.util.Set)::CD,102776:CD,102801:CD,102802:CD,102807:CD,102811:CD,102816:CD,102821:CD,102825:CD,102830:CD,102835:CD,102840:CD,102845:CD,102850:CD,102855:CD,102860:CD,102869:CD,102874:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102776 :: CALL :: call :: Ljava/lang/String :: v10 = p2 $loopFields .toString()::
102801 :: NORM :: declaration :: Ljava/io/IOException :: v393 = new java.io.IOException::
102802 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v394 = new java.lang.StringBuilder::
102807 :: CALL :: call :: I :: v398 = p3 $lineData .size()::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102811 :: CALL :: call :: Ljava/lang/StringBuilder :: v400 = v394.append(v398)::
102816 :: CALL :: call :: Ljava/lang/StringBuilder :: v403 = v400.append(#() != fields length ())::
102821 :: CALL :: call :: I :: v405 = p2 $loopFields .size()::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102825 :: CALL :: call :: Ljava/lang/StringBuilder :: v407 = v403.append(v405)::
102830 :: CALL :: call :: Ljava/lang/StringBuilder :: v410 = v407.append(#() category: ))::
102835 :: CALL :: call :: Ljava/lang/StringBuilder :: v412 = v410.append(p1 $category )::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102840 :: CALL :: call :: Ljava/lang/StringBuilder :: v415 = v412.append(#( fields: ))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102845 :: CALL :: call :: Ljava/lang/StringBuilder :: v417 = v415.append(p2 $loopFields )::
102850 :: CALL :: call :: Ljava/lang/StringBuilder :: v420 = v417.append(#( DATA: ))::
102855 :: CALL :: call :: Ljava/lang/StringBuilder :: v422 = v420.append(p3 $lineData )::
102860 :: CALL :: call :: Ljava/lang/String :: v424 = v422.toString()::
102869 :: CALL :: call :: Z :: v18 = p1 $category .equals(#(_entity))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102874 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 159::CD,102880:CD,102889:CD,102894:CD,102899:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102880 :: CALL :: call :: Ljava/lang/Object :: v386 = p0 $this .buildObject(v384, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
102889 :: CALL :: call :: V :: p0 $this .triggerNewEntity(v387)::CL,124321
102894 :: CALL :: call :: Z :: v22 = p1 $category .equals(#(_struct))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102899 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 192::CD,102905:CD,102913:CD,102918:CD,102923:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102905 :: CALL :: call :: Ljava/lang/Object :: v380 = p0 $this .buildObject(v378, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::JM,102913:CL,123918
102913 :: EXPR :: assign :: Ljava/lang/Object :: v381 = CHECKCAST v380::DD,102914
102914 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v381::
102918 :: CALL :: call :: Z :: v25 = p1 $category .equals(#(_atom_site))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102923 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 230::CD,102929:CD,102938:CD,102943:CD,102948:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102929 :: CALL :: call :: Ljava/lang/Object :: v373 = p0 $this .buildObject(v371, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
102938 :: CALL :: call :: V :: p0 $this .triggerNewAtomSite(v374)::CL,124357
102943 :: CALL :: call :: Z :: v28 = p1 $category .equals(#(_database_PDB_rev))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102948 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 268::CD,102954:CD,102963:CD,102968:CD,102973:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,103548:JM,103423
102954 :: CALL :: call :: Ljava/lang/Object :: v366 = p0 $this .buildObject(v364, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
102963 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrev(v367)::CL,124393
102968 :: CALL :: call :: Z :: v31 = p1 $category .equals(#(_database_PDB_rev_record))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102973 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 306::CD,102979:CD,102988:CD,102993:CD,102998:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102979 :: CALL :: call :: Ljava/lang/Object :: v359 = p0 $this .buildObject(v357, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
102988 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrevRecord(v360)::CL,124429
102993 :: CALL :: call :: Z :: v34 = p1 $category .equals(#(_database_PDB_remark))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
102998 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 344::CD,103004:CD,103013:CD,103018:CD,103023:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103004 :: CALL :: call :: Ljava/lang/Object :: v352 = p0 $this .buildObject(v350, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103013 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBremark(v353)::CL,124465
103018 :: CALL :: call :: Z :: v37 = p1 $category .equals(#(_exptl))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103023 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 382::CD,103029:CD,103038:CD,103043:CD,103048:JM,103298:JM,103173:JM,103748:JM,103623:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103029 :: CALL :: call :: Ljava/lang/Object :: v345 = p0 $this .buildObject(v343, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103038 :: CALL :: call :: V :: p0 $this .triggerExptl(v346)::CL,124501
103043 :: CALL :: call :: Z :: v40 = p1 $category .equals(#(_cell))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103048 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 420::CD,103054:CD,103063:CD,103068:CD,103073:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103054 :: CALL :: call :: Ljava/lang/Object :: v338 = p0 $this .buildObject(v336, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103063 :: CALL :: call :: V :: p0 $this .triggerNewCell(v339)::CL,124537
103068 :: CALL :: call :: Z :: v43 = p1 $category .equals(#(_symmetry))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103073 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 458::CD,103079:CD,103088:CD,103093:CD,103098:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,102973:JM,103548:JM,103423
103079 :: CALL :: call :: Ljava/lang/Object :: v331 = p0 $this .buildObject(v329, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103088 :: CALL :: call :: V :: p0 $this .triggerNewSymmetry(v332)::CL,124573
103093 :: CALL :: call :: Z :: v46 = p1 $category .equals(#(_struct_ncs_oper))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103098 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 496::CD,103104:CD,103113:CD,103118:CD,103123:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103104 :: CALL :: call :: Ljava/lang/Object :: v324 = p0 $this .buildObject(v322, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103113 :: CALL :: call :: V :: p0 $this .triggerNewStructNcsOper(v325)::CL,124609
103118 :: CALL :: call :: Z :: v49 = p1 $category .equals(#(_atom_sites))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103123 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 534::CD,103129:CD,103138:CD,103143:CD,103148:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103129 :: CALL :: call :: Ljava/lang/Object :: v317 = p0 $this .buildObject(v315, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103138 :: CALL :: call :: V :: p0 $this .triggerNewAtomSites(v318)::CL,124645
103143 :: CALL :: call :: Z :: v52 = p1 $category .equals(#(_struct_ref))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103148 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 572::CD,103154:CD,103163:CD,103168:CD,103173:JM,103298:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103154 :: CALL :: call :: Ljava/lang/Object :: v310 = p0 $this .buildObject(v308, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103163 :: CALL :: call :: V :: p0 $this .triggerNewStrucRef(v311)::CL,124681
103168 :: CALL :: call :: Z :: v55 = p1 $category .equals(#(_struct_ref_seq))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103173 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 610::CD,103179:CD,103188:CD,103193:CD,103198:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103179 :: CALL :: call :: Ljava/lang/Object :: v303 = p0 $this .buildObject(v301, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103188 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeq(v304)::CL,124717
103193 :: CALL :: call :: Z :: v58 = p1 $category .equals(#(_struct_ref_seq_dif))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103198 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 648::CD,103204:CD,103213:CD,103218:CD,103223:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103204 :: CALL :: call :: Ljava/lang/Object :: v296 = p0 $this .buildObject(v294, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103213 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeqDif(v297)::CL,124753
103218 :: CALL :: call :: Z :: v61 = p1 $category .equals(#(_struct_site_gen))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103223 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 686::CD,103229:CD,103238:CD,103243:CD,103248:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103229 :: CALL :: call :: Ljava/lang/Object :: v289 = p0 $this .buildObject(v287, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103238 :: CALL :: call :: V :: p0 $this .triggerNewStructSiteGen(v290)::CL,124789
103243 :: CALL :: call :: Z :: v64 = p1 $category .equals(#(_struct_site))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103248 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 724::CD,103254:CD,103263:CD,103268:CD,103273:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103254 :: CALL :: call :: Ljava/lang/Object :: v282 = p0 $this .buildObject(v280, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103263 :: CALL :: call :: V :: p0 $this .triggerNewStructSite(v283)::CL,124825
103268 :: CALL :: call :: Z :: v67 = p1 $category .equals(#(_entity_poly_seq))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103273 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 762::CD,103279:CD,103288:CD,103293:CD,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103279 :: CALL :: call :: Ljava/lang/Object :: v275 = p0 $this .buildObject(v273, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103288 :: CALL :: call :: V :: p0 $this .triggerNewEntityPolySeq(v276)::CL,124861
103293 :: CALL :: call :: Z :: v70 = p1 $category .equals(#(_entity_src_gen))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103298 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 800::CD,103304:CD,103313:CD,103318:CD,103323:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103304 :: CALL :: call :: Ljava/lang/Object :: v268 = p0 $this .buildObject(v266, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103313 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcGen(v269)::CL,124897
103318 :: CALL :: call :: Z :: v73 = p1 $category .equals(#(_entity_src_nat))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103323 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 838::CD,103329:CD,103338:CD,103343:CD,103348:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103329 :: CALL :: call :: Ljava/lang/Object :: v261 = p0 $this .buildObject(v259, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103338 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcNat(v262)::CL,124933
103343 :: CALL :: call :: Z :: v76 = p1 $category .equals(#(_pdbx_entity_src_syn))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103348 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 876::CD,103354:CD,103363:CD,103368:CD,103373:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103354 :: CALL :: call :: Ljava/lang/Object :: v254 = p0 $this .buildObject(v252, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103363 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcSyn(v255)::CL,124969
103368 :: CALL :: call :: Z :: v79 = p1 $category .equals(#(_struct_asym))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103373 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 914::CD,103379:CD,103388:CD,103393:CD,103398:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103379 :: CALL :: call :: Ljava/lang/Object :: v247 = p0 $this .buildObject(v245, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103388 :: CALL :: call :: V :: p0 $this .triggerNewStructAsym(v248)::CL,125005
103393 :: CALL :: call :: Z :: v82 = p1 $category .equals(#(_pdbx_poly_seq_scheme))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103398 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 952::CD,103404:CD,103413:CD,103418:CD,103423:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548
103404 :: CALL :: call :: Ljava/lang/Object :: v240 = p0 $this .buildObject(v238, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103413 :: CALL :: call :: V :: p0 $this .triggerNewPdbxPolySeqScheme(v241)::CL,125041
103418 :: CALL :: call :: Z :: v85 = p1 $category .equals(#(_pdbx_nonpoly_scheme))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103423 :: PRED :: IF :: Z :: if (v85 == #(0)) goto 990::CD,103429:CD,103438:CD,103443:CD,103448:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103429 :: CALL :: call :: Ljava/lang/Object :: v233 = p0 $this .buildObject(v231, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103438 :: CALL :: call :: V :: p0 $this .triggerNewPdbxNonPolyScheme(v234)::CL,125077
103443 :: CALL :: call :: Z :: v88 = p1 $category .equals(#(_pdbx_entity_nonpoly))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103448 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 1028::CD,103454:CD,103463:CD,103468:CD,103473:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103454 :: CALL :: call :: Ljava/lang/Object :: v226 = p0 $this .buildObject(v224, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103463 :: CALL :: call :: V :: p0 $this .triggerNewPdbxEntityNonPoly(v227)::CL,125113
103468 :: CALL :: call :: Z :: v91 = p1 $category .equals(#(_struct_keywords))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103473 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 1066::CD,103479:CD,103488:CD,103493:CD,103498:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103479 :: CALL :: call :: Ljava/lang/Object :: v219 = p0 $this .buildObject(v217, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103488 :: CALL :: call :: V :: p0 $this .triggerNewStructKeywords(v220)::CL,125149
103493 :: CALL :: call :: Z :: v94 = p1 $category .equals(#(_refine))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103498 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 1104::CD,103504:CD,103513:CD,103518:CD,103523:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103504 :: CALL :: call :: Ljava/lang/Object :: v212 = p0 $this .buildObject(v210, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103513 :: CALL :: call :: V :: p0 $this .triggerNewRefine(v213)::CL,125185
103518 :: CALL :: call :: Z :: v97 = p1 $category .equals(#(_chem_comp))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103523 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 1142::CD,103529:CD,103538:CD,103543:CD,103548:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103423
103529 :: CALL :: call :: Ljava/lang/Object :: v205 = p0 $this .buildObject(v203, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103538 :: CALL :: call :: V :: p0 $this .triggerNewChemComp(v206)::CL,125221
103543 :: CALL :: call :: Z :: v100 = p1 $category .equals(#(_audit_author))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103548 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 1180::CD,103554:CD,103563:CD,103568:CD,103573:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103554 :: CALL :: call :: Ljava/lang/Object :: v198 = p0 $this .buildObject(v196, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103563 :: CALL :: call :: V :: p0 $this .triggerNewAuditAuthor(v199)::CL,125257
103568 :: CALL :: call :: Z :: v103 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103573 :: PRED :: IF :: Z :: if (v103 == #(0)) goto 1218::CD,103579:CD,103588:CD,103593:CD,103598:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103579 :: CALL :: call :: Ljava/lang/Object :: v191 = p0 $this .buildObject(v189, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103588 :: CALL :: call :: V :: p0 $this .triggerNewChemCompDescriptor(v192)::CL,125293
103593 :: CALL :: call :: Z :: v106 = p1 $category .equals(#(_pdbx_struct_oper_list))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103598 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 1256::CD,103604:CD,103613:CD,103618:CD,103623:JM,103298:JM,103173:JM,103748:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103604 :: CALL :: call :: Ljava/lang/Object :: v184 = p0 $this .buildObject(v182, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103613 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructOper(v185)::CL,125329
103618 :: CALL :: call :: Z :: v109 = p1 $category .equals(#(_pdbx_struct_assembly))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103623 :: PRED :: IF :: Z :: if (v109 == #(0)) goto 1294::CD,103629:CD,103638:CD,103643:CD,103648:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103629 :: CALL :: call :: Ljava/lang/Object :: v177 = p0 $this .buildObject(v175, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103638 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssembly(v178)::CL,125365
103643 :: CALL :: call :: Z :: v112 = p1 $category .equals(#(_pdbx_struct_assembly_gen))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103648 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 1332::CD,103654:CD,103663:CD,103668:CD,103673:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103098:JM,102973:JM,103548:JM,103423
103654 :: CALL :: call :: Ljava/lang/Object :: v170 = p0 $this .buildObject(v168, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103663 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssemblyGen(v171)::CL,125401
103668 :: CALL :: call :: Z :: v115 = p1 $category .equals(#(_chem_comp_atom))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103673 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 1370::CD,103679:CD,103688:CD,103693:CD,103698:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103679 :: CALL :: call :: Ljava/lang/Object :: v163 = p0 $this .buildObject(v161, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103688 :: CALL :: call :: V :: p0 $this .triggerNewChemCompAtom(v164)::CL,125437
103693 :: CALL :: call :: Z :: v118 = p1 $category .equals(#(_chem_comp_bond))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103698 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 1408::CD,103704:CD,103713:CD,103718:CD,103723:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103704 :: CALL :: call :: Ljava/lang/Object :: v156 = p0 $this .buildObject(v154, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103713 :: CALL :: call :: V :: p0 $this .triggerNewChemCompBond(v157)::CL,125473
103718 :: CALL :: call :: Z :: v121 = p1 $category .equals(#(_pdbx_chem_comp_ident...))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103723 :: PRED :: IF :: Z :: if (v121 == #(0)) goto 1446::CD,103729:CD,103738:CD,103743:CD,103748:JM,103298:JM,103173:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103729 :: CALL :: call :: Ljava/lang/Object :: v149 = p0 $this .buildObject(v147, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103738 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompIdentifier(v150)::CL,125509
103743 :: CALL :: call :: Z :: v123 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103748 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 1484::CD,103754:CD,103763:CD,103768:CD,103773:JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103754 :: CALL :: call :: Ljava/lang/Object :: v142 = p0 $this .buildObject(v140, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103763 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompDescriptor(v143)::CL,125545
103768 :: CALL :: call :: Z :: v126 = p1 $category .equals(#(_struct_conn))::JM,103298:JM,103173:JM,103748:JM,103623:JM,103048:JM,102923:JM,103498:JM,103373:JM,103248:JM,103123:JM,103698:JM,103573:JM,102998:JM,103448:JM,103323:JM,102874:JM,103773:JM,103198:JM,103073:JM,103648:JM,103523:JM,102948:JM,103398:JM,103273:JM,103723:JM,103148:JM,103023:JM,103598:JM,103473:JM,102899:JM,103348:JM,103223:JM,103673:JM,103098:JM,102973:JM,103548:JM,103423
103773 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 1518::CD,103779:CD,103788:CD,103800
103779 :: CALL :: call :: Ljava/lang/Object :: v135 = p0 $this .buildObject(v133, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,123918
103788 :: CALL :: call :: V :: p0 $this .triggerNewStructConn(v136)::CL,125581
103800 :: CALL :: call :: V :: p0 $this .triggerGeneric(p1 $category , p2 $loopFields , p3 $lineData )::CL,125617
104187 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.resetBuffers(java.util.List,java.util.List,java.util.Set)::CD,104194:CD,104197:CD,104200
104194 :: CALL :: call :: V :: p1 $loopFields .clear()::
104197 :: CALL :: call :: V :: p2 $lineData .clear()::
104200 :: CALL :: call :: V :: p3 $loopWarnings .clear()::
104207 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerStructData(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,104215:CD,104229:CD,104233
104212 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,104233
104215 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,104233
104220 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,104233
104225 :: CALL :: call :: V :: v12.setStruct(p1 $struct )::CL,125665
104229 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,104233
104233 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,104220:CD,104225:CD,104229:JM,104233
104243 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getBiologicalAssembly(java.lang.String,int,boolean)::CD,104281:CD,104287:JM,104288
104281 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v8 = getBiologicalAssembly(p1 $pdbId , p2 $bioAssemblyId , p0 $this )::JM,104287:CL,125731
104287 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 63::CD,104288
104289 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v11 = getBiologicalAssembly(p1 $pdbId , #(0), p0 $this )::CL,125731
104288 :: PRED :: IF :: Z :: if (p3 $bioAssemblyFallback  == #(0)) goto 63::CD,104289
104311 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getIdentifier()::CD,104318:CD,104322
104315 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .ranges::JM,104322
104318 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,104322
104322 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 17::CF,104327:CD,104331:CD,104339:CD,104347:CD,104351:CD,104356
104327 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
104331 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
104339 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(.))::
104347 :: CALL :: call :: Ljava/lang/String :: v17 = toString(v15)::CL,125794
104351 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v14.append(v17)::
104356 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
104368 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setParent(org.biojava.nbio.structure.Structure)::JM,104373
104373 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $s ::
104395 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::JM,86189
104394 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::CE,104395:CD,104398:CD,104402:CD,104406:CD,104410
104398 :: CALL :: call :: Ljava/util/TreeMap :: v4 = p0 $this .findCompoundsFromAlignment()::CL,125855
104402 :: CALL :: call :: Ljava/util/List :: v6 = findUniqueCompounds(v4)::JM,104410:CL,126902
104406 :: CALL :: call :: V :: p0 $this .createPurelyNonPolyCompounds(v6)::CL,126979
104410 :: NORM :: compound :: Ljava/util/List :: return v6::DD,104395
104419 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Compound.getChains()::JM,86227
104418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getChains()::CE,104419:CD,104425
104422 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .chains::DD,104425
104425 :: NORM :: compound :: Ljava/util/List :: return v3::CF,104419
104427 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setCompound(org.biojava.nbio.structure.Compound)::JM,104432
104432 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .mol = p1 $mol ::
104438 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setStructure(org.biojava.nbio.structure.Structure)::JM,104443
104443 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $parent ::
104449 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains(int)::CE,104450:CD,104454:CD,104459
104450 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains(int)::JM,86562:JM,98916:JM,100107:JM,134718
104454 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(p1 $modelnr )::JM,104459:CL,54314
104459 :: NORM :: compound :: Ljava/util/List :: return v5::DD,104450
104463 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::JM,87090:JM,93785:JM,93936:JM,93896:JM,100092:JM,105564:JM,105573:JM,105601:JM,105724:JM,105733:JM,105761:JM,114794:JM,114828:JM,120306:JM,120316:JM,155857:JM,155897
104462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::CE,104463:CD,104469
104466 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,104469
104469 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 16::CF,104470:CD,104474:CD,104478
104470 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,104474
104475 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::DD,104478
104474 :: NORM :: compound :: Ljava/util/List :: return v6::DD,104463
104478 :: NORM :: compound :: Ljava/util/List :: return v5::DD,104463
104483 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::CE,104484:CD,104490
104484 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::JM,93651:JM,93949:JM,133957:JM,134133:JM,140233:JM,140238:JM,146216:JM,151200:JM,151254:JM,151201:JM,155905:JM,155910:JM,163239:JM,163162:JM,163225:JM,163163
104487 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_name::DD,104490
104490 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,104484
104493 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::JM,121485
104492 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::CE,104493:CD,104499
104496 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,104499
104499 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,104493
104537 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.util.List)::CD,104541:CD,104542:CD,104550:CD,104570:CD,104574
104541 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,104574
104542 :: CALL :: call :: I :: v5 = p1 $ranges .size()::JM,104574
104550 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $ranges .iterator()::JM,104574
104555 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,104574
104560 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v16 = parse(v14)::JM,104564:CL,101599
104565 :: CALL :: call :: Z :: v19 = v3.add(v16)::
104564 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 55::CD,104565:JM,104574
104570 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,104574
104574 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,104555:CD,104560:CD,104564:CD,104570:JM,104574
104593 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::CE,104594:CD,104600
104594 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::JM,87557
104597 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::DD,104600
104600 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,104594
104603 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::JM,87605
104602 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::CE,104603:CD,104609
104606 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .segments::DD,104609
104609 :: NORM :: compound :: Ljava/util/List :: return v3::CF,104603
104642 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v8 = fromString(p2 $start )::CL,121902
104656 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v12 = fromString(p3 $end )::CL,121902
104683 :: EXIT :: exit :: D :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,120019:JM,120172
104682 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::CE,104683:CD,104687:CD,104691:CD,104695:CD,104696:CD,104700:CD,104704:CD,104705:CD,104709:CD,104713:CD,104714:CD,104715:CD,104716:CD,104717:CD,104718:CD,104719:CD,104723
104687 :: CALL :: call :: D :: v5 = p1 $a .getX()::JM,104695:CL,64477
104691 :: CALL :: call :: D :: v7 = p2 $b .getX()::JM,104695:CL,64477
104695 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 - v7::DD,104714
104696 :: CALL :: call :: D :: v10 = p1 $a .getY()::JM,104704:CL,64491
104700 :: CALL :: call :: D :: v12 = p2 $b .getY()::JM,104704:CL,64491
104705 :: CALL :: call :: D :: v15 = p1 $a .getZ()::JM,104713:CL,64505
104704 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v10 - v12::DD,104715
104709 :: CALL :: call :: D :: v17 = p2 $b .getZ()::JM,104713:CL,64505
104713 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 - v17::DD,104717:CF,104714
104715 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v13 * v13::CF,104716
104714 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v8 * v8::DD,104716:CF,104715
104717 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v18 * v18::CF,104718
104716 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 + v20::DD,104718:CF,104717
104719 :: CALL :: call :: D :: v25 = sqrt(v23)::JM,104723:JM,104719
104718 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 + v22::JM,104723:JM,104719
104723 :: NORM :: compound :: D :: return v25::CF,104683
105341 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.clone()::JM,93973:JM,138650:JM,139452:JM,155934
105340 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.clone()::CE,105341:CD,105344:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,105352:CD,105359:CD,105367:CD,105374:CD,105397:CD,105401:CD,105405:CD,105436:CD,105444
105344 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v3 = new org.biojava.nbio.structure.HetatomImpl::DD,105444
105352 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,114655
105359 :: CALL :: call :: V :: v3.setResidueNumber(v8)::CL,93626
105367 :: CALL :: call :: V :: v3.setPDBName(v11)::CL,93584
105371 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .atoms::JM,105401
105374 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,105401
105379 :: CALL :: call :: Ljava/lang/Object :: v20 = v15.next()::JM,105401
105384 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.clone()::CL,127155
105389 :: CALL :: call :: V :: v3.addAtom(v24)::CL,94338
105393 :: CALL :: call :: V :: v24.setGroup(v3)::CL,114644
105397 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,105401
105401 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CD,105379:CD,105384:CD,105389:CD,105393:CD,105397:JM,105401
105402 :: EXPR :: reference :: Ljava/util/List :: v27 = p0 $this .altLocs::DD,105405
105405 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 146::CD,105409:CD,105428:CD,105432
105406 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .altLocs::JM,105432
105409 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,105432
105414 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,105432
105419 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.clone()::CL,105482:CL,105657:CL,105340
105424 :: CALL :: call :: V :: v3.addAltLoc(v39)::CL,114403
105428 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,105432
105433 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = p0 $this .chemComp::DD,105436
105432 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 110::CD,105414:CD,105419:CD,105424:CD,105428:JM,105432
105436 :: PRED :: IF :: Z :: if (v44 == #(null)) goto 161::CD,105440:CF,105444
105440 :: CALL :: call :: V :: v3.setChemComp(v45)::CL,128063
105444 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,105341
105483 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.AminoAcidImpl.clone()::JM,93973:JM,138650:JM,139452:JM,155934
105482 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.clone()::CE,105483:CD,105486:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,105494:CD,105502:CD,105510:CD,105518:CD,105525:CD,105532:CD,105555:CD,105559:CD,105560:CD,105564:CD,105605:CD,105613
105486 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v3 = new org.biojava.nbio.structure.AminoAcidImpl::DD,105613
105494 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,114655
105502 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,93626
105510 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,93615
105518 :: CALL :: call :: V :: v3.setAminoType(v15)::CL,114231
105525 :: CALL :: call :: V :: v3.setRecordType(v17)::CL,94519
105529 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .atoms::JM,105559
105532 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,105559
105537 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,105559
105542 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.clone()::CL,127155
105547 :: CALL :: call :: V :: v3.addAtom(v30)::CL,94338
105551 :: CALL :: call :: V :: v30.setGroup(v3)::CL,114644
105555 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,105559
105559 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 62::CD,105537:CD,105542:CD,105547:CD,105551:CD,105555:JM,105559
105560 :: CALL :: call :: Ljava/util/List :: v34 = p0 $this .getAltLocs()::JM,105564:CL,104462
105565 :: CALL :: call :: Ljava/util/List :: v37 = p0 $this .getAltLocs()::JM,105573:CL,104462
105564 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 174::CD,105565:CD,105569:CD,105573
105569 :: CALL :: call :: Z :: v39 = v37.isEmpty()::JM,105573
105573 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 174::CD,105574:CD,105578:CD,105597:CD,105601
105574 :: CALL :: call :: Ljava/util/List :: v41 = p0 $this .getAltLocs()::JM,105601:CL,104462
105578 :: CALL :: call :: Ljava/util/Iterator :: v43 = v41.iterator()::JM,105601
105583 :: CALL :: call :: Ljava/lang/Object :: v47 = v43.next()::JM,105601
105588 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.clone()::CL,105482:CL,105657:CL,105340
105593 :: CALL :: call :: V :: v3.addAltLoc(v51)::CL,114403
105597 :: CALL :: call :: Z :: v45 = v43.hasNext()::JM,105601
105601 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 138::CD,105583:CD,105588:CD,105593:CD,105597:JM,105601
105602 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v56 = p0 $this .chemComp::DD,105605
105605 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 189::CD,105609:CF,105613
105609 :: CALL :: call :: V :: v3.setChemComp(v57)::CL,128063
105613 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,105483
105657 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.clone()::CE,105658:CD,105661:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,105669:CD,105677:CD,105685:CD,105692:CD,105715:CD,105719:CD,105720:CD,105724:CD,105765:CD,105773
105658 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.NucleotideImpl.clone()::JM,93973:JM,138650:JM,139452:JM,155934
105661 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v3 = new org.biojava.nbio.structure.NucleotideImpl::DD,105773
105669 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,114655
105677 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,93626
105685 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,93584
105689 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .atoms::JM,105719
105692 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,105719
105697 :: CALL :: call :: Ljava/lang/Object :: v21 = v16.next()::JM,105719
105702 :: CALL :: call :: Ljava/lang/Object :: v24 = v22.clone()::CL,127155
105707 :: CALL :: call :: V :: v3.addAtom(v25)::CL,94338
105711 :: CALL :: call :: V :: v25.setGroup(v3)::CL,114644
105715 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,105719
105719 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 46::CD,105697:CD,105702:CD,105707:CD,105711:CD,105715:JM,105719
105720 :: CALL :: call :: Ljava/util/List :: v29 = p0 $this .getAltLocs()::JM,105724:CL,104462
105725 :: CALL :: call :: Ljava/util/List :: v32 = p0 $this .getAltLocs()::JM,105733:CL,104462
105724 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 158::CD,105725:CD,105729:CD,105733
105729 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,105733
105733 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 158::CD,105734:CD,105738:CD,105757:CD,105761
105734 :: CALL :: call :: Ljava/util/List :: v36 = p0 $this .getAltLocs()::JM,105761:CL,104462
105738 :: CALL :: call :: Ljava/util/Iterator :: v38 = v36.iterator()::JM,105761
105743 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,105761
105748 :: CALL :: call :: Ljava/lang/Object :: v45 = v43.clone()::CL,105482:CL,105657:CL,105340
105753 :: CALL :: call :: V :: v3.addAltLoc(v46)::CL,114403
105757 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,105761
105761 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 122::CD,105743:CD,105748:CD,105753:CD,105757:JM,105761
105762 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = p0 $this .chemComp::DD,105765
105765 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 173::CD,105769:CF,105773
105769 :: CALL :: call :: V :: v3.setChemComp(v52)::CL,128063
105773 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,105658
105813 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::CE,105814:CD,105818:CD,105825:CD,105834:CD,105839:CD,105843:CD,105847:CD,105852:CD,105853:CD,105855:CD,105860:CD,105865:CD,105873:CD,105878
105814 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::JM,140305
105818 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $resNum .toString()::CL,64367
105825 :: CALL :: call :: Z :: v8 = v6.containsKey(v5)::
105834 :: CALL :: call :: Ljava/lang/Object :: v27 = v25.get(v5)::JM,105839
105839 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::JM,105852
105840 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .groups::JM,105852
105843 :: CALL :: call :: I :: v31 = v28.intValue()::JM,105852
105847 :: CALL :: call :: Ljava/lang/Object :: v33 = v29.get(v31)::JM,105852
105853 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v34::DD,105814
105852 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::CF,105853
105855 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
105860 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v5)::
105865 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#( in chain ))::
105870 :: EXPR :: reference :: Ljava/lang/String :: v19 = p0 $this .chainID::
105873 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(v19)::
105878 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
111529 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::CE,111530:CD,111534:CD,111538:CD,111544:CD,111548:CD,111557:CD,111562:CD,111566:CD,111568:CD,111583:CD,111592:CD,111668:CD,111672
111530 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::JM,91401:JM,91436
111534 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,111601:JM,111672
111538 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $pdbId .substring(#(1), #(3))::
111544 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toLowerCase()::
111549 :: EXPR :: reference :: Ljava/io/File :: v13 = p0 $this .splitDirPath::
111548 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
111557 :: CALL :: call :: Z :: v16 = v4.add(v12)::
111562 :: CALL :: call :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = p0 $this .getObsoleteBehavior()::JM,111568:CL,129801
111566 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v19 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,111568
111569 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::
111568 :: PRED :: IF :: Z :: if (v18 != v19) goto 71::CF,111569:CD,111578:CF,111583
111570 :: EXPR :: reference :: Ljava/io/File :: v21 = p0 $this .obsoleteDirPath::
111578 :: CALL :: call :: Z :: v24 = v4.add(v20)::
111583 :: NORM :: declaration :: [Ljava/lang/String :: v26 = new java.lang.String[]::DD,111602
111592 :: CALL :: call :: Ljava/util/Iterator :: v31 = v4.iterator()::JM,111601:JM,111672
111597 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,111601:JM,111672
111601 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::CF,111602
111602 :: EXPR :: assign :: I :: v37 = v26.length::DD,111667
111608 :: CALL :: call :: Ljava/util/List :: v40 = p0 $this .getExtensions()::JM,111665:JM,111621:CL,34781
111612 :: CALL :: call :: Ljava/util/Iterator :: v42 = v40.iterator()::JM,111665:JM,111621
111617 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,111665:JM,111621
111621 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::CF,111622
111623 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
111622 :: NORM :: declaration :: Ljava/io/File :: v48 = new java.io.File::DD,111660:CF,111623
111624 :: CALL :: call :: Ljava/lang/String :: v51 = valueOf(v38)::
111632 :: CALL :: call :: Ljava/lang/String :: v54 = p1 $pdbId .toLowerCase()::
111636 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v49.append(v54)::
111641 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(v47)::
111646 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
111655 :: CALL :: call :: Z :: v63 = v48.exists()::JM,111659
111659 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 207::CF,111674:CD,111660:CD,111661:CD,111665
111661 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,111665:JM,111621
111660 :: NORM :: compound :: Ljava/io/File :: return v48::DD,111530
111665 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 146::CD,111617:CD,111621:CD,111622:CD,111623:CD,111624:CD,111632:CD,111636:CD,111641:CD,111646:CD,111655:CD,111659:CD,111666:CD,111667:CD,111675:CD,111674:JM,111665
111667 :: PRED :: IF :: Z :: if (v65 < v37) goto 127::CD,111608:CD,111612:CD,111661:CD,111665:CD,111668:CD,111672:CD,111674:JM,111601
111666 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v66 + #(1)::DD,111675
111668 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,111601:JM,111672
111673 :: NORM :: compound :: Ljava/io/File :: return #(null)::DD,111530
111672 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 99::CD,111597:CD,111601:CD,111602:CD,111667:CD,111673:CD,111675:JM,111672
111675 :: EXPR :: assign :: null :: PHI v65 = #(0), v64::DD,111667:DD,111674
111674 :: EXPR :: assign :: null :: PHI v66 = v65, v66::JM,111665:JM,111621:DD,111666:DD,111674
111741 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CE,111742:CD,111744:CD,111746
111742 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::
111744 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior::DD,111746:DD,111747
111747 :: NORM :: compound :: [I :: return v2::DD,111742
111746 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,111747:CD,111748:CD,111751:CD,111752:CD,111753:CD,111755:CD,111764:CD,111766:CD,111775:CD,111777:CD,111786:CD,111788:CD,111797:CD,111799:CD,111810
111748 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = values()::JM,111751:CL,129810
111751 :: EXPR :: assign :: I :: v6 = v5.length::CF,111752
111753 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v8 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::
111752 :: NORM :: declaration :: [I :: v7 = new []::DD,111810
111755 :: CALL :: call :: I :: v10 = v8.ordinal()::
111759 :: EXPR :: modify :: I :: v7[v10] = #(2)::
111764 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::
111766 :: CALL :: call :: I :: v16 = v14.ordinal()::
111770 :: EXPR :: modify :: I :: v7[v16] = #(3)::
111775 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v20 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::
111777 :: CALL :: call :: I :: v22 = v20.ordinal()::
111781 :: EXPR :: modify :: I :: v7[v22] = #(4)::
111786 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::
111788 :: CALL :: call :: I :: v28 = v26.ordinal()::
111792 :: EXPR :: modify :: I :: v7[v28] = #(5)::
111797 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v32 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::
111799 :: CALL :: call :: I :: v34 = v32.ordinal()::
111803 :: EXPR :: modify :: I :: v7[v34] = #(1)::
111810 :: NORM :: compound :: [I :: return v7::DD,111742
111853 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::JM,91410
111852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::CE,111853:CD,111859
111856 :: EXPR :: reference :: Z :: v3 = p0 $this .updateRemediatedFiles::DD,111859
111859 :: NORM :: compound :: Z :: return v3::CF,111853
111891 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getCurrent(java.lang.String)::CD,111895:CD,111901
111895 :: CALL :: call :: Ljava/util/List :: v6 = getReplacement(p1 $oldPdbId , #(1), #(0))::JM,111906:JM,111901:CL,129837
111901 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,111902:CD,111906
111902 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,111906
111907 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.get(#(0))::JM,111906
111906 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 32::CD,111907:JM,111906
111926 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String,java.lang.String,boolean,java.io.File)::CD,111934:CD,111940:CD,111941:CD,111963:CD,111969:CD,111977:CD,111986:CD,111996
111934 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getDir(p1 $pdbId , p3 $obsolete )::CL,130294
111941 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(p1 $pdbId )::CL,130392:CL,130423
111940 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
111963 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $pdbId .substring(#(1), #(3))::
111969 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toLowerCase()::
111977 :: CALL :: call :: Ljava/lang/String :: v26 = p0 $this .getFilename(p1 $pdbId )::CL,130392:CL,130423
111986 :: CALL :: call :: Ljava/lang/String :: v28 = format(#(%s%s/%s/%s), v15)::
111997 :: CALL :: call :: Ljava/util/Date :: v33 = p0 $this .getLastModifiedTime(v29)::JM,112002:JM,112007:JM,112011:CL,130456
111996 :: PRED :: IF :: Z :: if (p4 $existingFile  == #(null)) goto 150::CD,111997:CD,112002:CD,112036:CD,112041:CD,112046:CD,112056:CD,112061:CD,112066:CD,112074
112003 :: CALL :: call :: J :: v38 = p4 $existingFile .lastModified()::JM,112011
112002 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 137::CD,112003:CD,112007:CD,112011:CD,112012:CD,112036:CD,112041:CD,112046:CD,112056:CD,112061:CD,112066:CD,112074
112007 :: CALL :: call :: J :: v40 = v33.getTime()::JM,112007:JM,112011
112011 :: EXPR :: assign :: Z :: v41 = v38 == v40::DD,112012
112012 :: PRED :: IF :: Z :: if (v41 < #(0)) goto 116::CD,112036:CD,112041:CD,112046:CD,112056:CD,112061:CD,112066:CD,112074
112036 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
112041 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v49.append(v28)::
112046 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
112056 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v58 = new java.lang.StringBuilder::
112061 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v58.append(v9)::
112066 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
112074 :: CALL :: call :: V :: downloadFile(v29, v9)::CL,130541
112137 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::CE,112138:CD,112146:CD,112150
112138 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::JM,91490
112146 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v7 = getStatus(v4)::JM,112150:CL,130709
112150 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 41::CD,112165:CD,112166
112161 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(0)]::DD,112165
112165 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v11::DD,112138
112166 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,112138
112373 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String,boolean)::CD,112383:CD,112388:CD,112389
112383 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,112388
112389 :: PRED :: IF :: Z :: if (p2 $forceLocalData  == #(0)) goto 81::CD,112390:CD,112424
112388 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,112390:DD,112391:DD,112424:CF,112389
112391 :: EXPR :: assign :: Z :: v25=v10 INSTANCEOF org.biojava.nbio.structure.scop.LocalScopDatabase::DD,112392
112390 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 36::CD,112391:CD,112392:CD,112396:JM,162499:JM,131648:JM,162503:JM,131460:JM,131652:JM,131653:JM,131661:JM,131666:JM,131472:JM,162513:JM,43540:JM,131670:JM,131671:JM,162517:JM,131480:JM,43547:JM,162527:JM,131679:JM,131616:JM,131617:JM,162534:JM,162471:JM,131684:JM,162475:JM,131625:JM,162542:JM,131630:JM,131634:JM,131635:JM,162485:JM,162549:JM,131643:JM,162489:JM,162556:CD,112410:CD,112416
112392 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 79::CD,112396:JM,162499:JM,131648:JM,162503:JM,131460:JM,131652:JM,131653:JM,131661:JM,131666:JM,131472:JM,162513:JM,43540:JM,131670:JM,131671:JM,162517:JM,131480:JM,43547:JM,162527:JM,131679:JM,131616:JM,131617:JM,162534:JM,162471:JM,131684:JM,162475:JM,131625:JM,162542:JM,131630:JM,131634:JM,131635:JM,162485:JM,162549:JM,131643:JM,162489:JM,162556:CD,112410:CD,112416
112396 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getSimpleName()::
112410 :: CALL :: call :: V :: v31.setScopVersion(v6)::CL,131497
112416 :: CALL :: call :: Ljava/lang/Object :: v36 = v34.put(v6, v31)::
112424 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 127::CD,112428:CD,112448
112428 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getSimpleName()::
112448 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.put(v6, v18)::
112493 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getClaFilename()::CE,112494:CD,112497:CD,112501:CD,112509:CD,112517:CD,112522:CD,112526
112494 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.ScopInstallation.getClaFilename()::
112497 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,112526
112501 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
112509 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v3.append(#(dir.cla.scop.txt_))::JM,112526
112514 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .scopVersion::JM,112526
112517 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(v11)::JM,112526
112522 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,112526
112526 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,112494
112561 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.initScopURLs()::CD,112568:CD,112572
112565 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,112572
112568 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,112572
112572 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 13::CF,112574:JM,131616:JM,131648:JM,131617:JM,131652:JM,131684:JM,131653:JM,131625:JM,131630:JM,131661:JM,131634:JM,131666:JM,131635:JM,131670:JM,131671:JM,131643:JM,131679:CD,112578:CD,112590:CD,112598
112574 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v7 = new org.biojava.nbio.structure.scop.ScopMirror::
112578 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v9 = new org.biojava.nbio.structure.scop.ScopMirror::
112587 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .mirrors::
112590 :: CALL :: call :: Z :: v18 = v16.add(v7)::
112595 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .mirrors::
112598 :: CALL :: call :: Z :: v21 = v19.add(v9)::
112621 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopMirror.getClaURL(java.lang.String)::CD,112634
112634 :: CALL :: call :: Ljava/lang/String :: v9 = format(v4, v6)::
112645 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getClaURL(java.lang.String)::CD,112650:CD,112654:CD,112662:CD,112668:CD,112673
112650 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
112654 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
112662 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(#(cla), p1 $scopVersion )::CL,131714
112668 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v4.append(v11)::
112673 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
112683 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,112691:CD,112696:CD,112701:CD,112706:CD,112711:CD,112719
112691 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
112696 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(p1 $remoteURL )::
112701 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#( to: ))::
112706 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p2 $localFile )::
112711 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
112719 :: CALL :: call :: V :: downloadFile(p1 $remoteURL , p2 $localFile )::CL,130541
112732 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification(java.io.BufferedReader)::CD,112752:CD,112753:CD,112758:CD,112763:CD,112841:CD,112842:CD,112847:CD,112852:CD,113017:CD,113021:JM,112743
112738 :: CALL :: call :: Z :: v10 = v7.startsWith(#(#))::JM,112743:JM,113021
112743 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 24::CD,112745:CD,112793:CD,112797:CD,112805:CD,112817:CD,112834:CD,112865:CD,112870:CD,112878:CD,112883:CD,112891:CD,112896:CD,112904:CD,112909:CD,112917:CD,112922:CD,112930:CD,112935:CD,112943:CD,112948:CD,112983:CD,112988:CD,113012:CD,113034
112745 :: CALL :: call :: [Ljava/lang/String :: v14 = v7.split(#(	))::
112753 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
112752 :: NORM :: declaration :: Ljava/io/IOException :: v119 = new java.io.IOException::
112758 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v120.append(v7)::JM,112743:JM,113021
112763 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::
112789 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v14[#(4)]::
112793 :: CALL :: call :: I :: v28 = parseInt(v26)::
112797 :: CALL :: call :: Ljava/lang/Integer :: v30 = valueOf(v28)::
112805 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v33 = new org.biojava.nbio.structure.scop.ScopDomain::
112817 :: CALL :: call :: Ljava/util/List :: v38 = p0 $this .extractRanges(v22)::CL,131884
112834 :: CALL :: call :: [Ljava/lang/String :: v44 = v32.split(#(,))::
112841 :: NORM :: declaration :: Ljava/io/IOException :: v110 = new java.io.IOException::
112842 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
112847 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v7)::JM,112743:JM,113021
112852 :: CALL :: call :: Ljava/lang/String :: v117 = v115.toString()::
112861 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v44[#(0)]::
112865 :: CALL :: call :: Ljava/lang/String :: v49 = v47.substring(#(3))::
112870 :: CALL :: call :: I :: v51 = parseInt(v49)::
112874 :: EXPR :: reference :: Ljava/lang/Object :: v52 = v44[#(1)]::
112878 :: CALL :: call :: Ljava/lang/String :: v54 = v52.substring(#(3))::
112883 :: CALL :: call :: I :: v56 = parseInt(v54)::
112887 :: EXPR :: reference :: Ljava/lang/Object :: v57 = v44[#(2)]::
112891 :: CALL :: call :: Ljava/lang/String :: v59 = v57.substring(#(3))::
112896 :: CALL :: call :: I :: v61 = parseInt(v59)::
112900 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v44[#(3)]::
112904 :: CALL :: call :: Ljava/lang/String :: v64 = v62.substring(#(3))::
112909 :: CALL :: call :: I :: v66 = parseInt(v64)::
112913 :: EXPR :: reference :: Ljava/lang/Object :: v67 = v44[#(4)]::
112917 :: CALL :: call :: Ljava/lang/String :: v69 = v67.substring(#(3))::
112922 :: CALL :: call :: I :: v71 = parseInt(v69)::
112926 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v44[#(5)]::
112930 :: CALL :: call :: Ljava/lang/String :: v74 = v72.substring(#(3))::
112935 :: CALL :: call :: I :: v76 = parseInt(v74)::
112939 :: EXPR :: reference :: Ljava/lang/Object :: v77 = v44[#(6)]::
112943 :: CALL :: call :: Ljava/lang/String :: v79 = v77.substring(#(3))::
112948 :: CALL :: call :: I :: v81 = parseInt(v79)::
112983 :: CALL :: call :: Z :: v91 = v89.containsKey(v20)::JM,112988
112988 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 372::CF,112999:CD,112992:CD,112997:CD,113006:CD,113034
112992 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.get(v20)::JM,112997
112997 :: EXPR :: assign :: Ljava/lang/Object :: v95 = CHECKCAST v94::DD,113034
112999 :: NORM :: declaration :: Ljava/util/ArrayList :: v96 = new java.util.ArrayList::DD,113034
113006 :: CALL :: call :: Ljava/lang/Object :: v100 = v98.put(v20, v96)::
113012 :: CALL :: call :: Z :: v103 = v101.add(v33)::
113017 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $buffer .readLine()::JM,112743:JM,113021
113021 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 11::CD,112738:CD,112743:CD,113017:JM,113021
113034 :: EXPR :: assign :: null :: PHI v101 = v95, v96::
113239 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::CE,113240:CD,113247
113240 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::JM,92676
113244 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .chainId::DD,113247
113247 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 41::CD,113251:CD,113279
113248 :: EXPR :: reference :: Ljava/lang/String :: v6 = p1 $other .chainId::DD,113251
113251 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 41::CD,113258:CD,113263:CD,113279
113252 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .chainId::JM,113263
113255 :: EXPR :: reference :: Ljava/lang/String :: v8 = p1 $other .chainId::JM,113263
113258 :: CALL :: call :: Z :: v10 = v7.equals(v8)::JM,113263
113263 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 41::CD,113270:CD,113275:CD,113279
113264 :: EXPR :: reference :: Ljava/lang/String :: v46 = p0 $this .chainId::JM,113275
113267 :: EXPR :: reference :: Ljava/lang/String :: v47 = p1 $other .chainId::JM,113275
113270 :: CALL :: call :: I :: v49 = v46.compareTo(v47)::JM,113275
113275 :: NORM :: compound :: I :: return v49::CF,113240
113276 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .chainId::DD,113279
113279 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 57::CD,113283:CD,113288
113280 :: EXPR :: reference :: Ljava/lang/String :: v13 = p1 $other .chainId::DD,113283
113283 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 57::CD,113284:CD,113288
113285 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .chainId::DD,113288
113284 :: NORM :: compound :: I :: return #(1)::CF,113240
113289 :: EXPR :: reference :: Ljava/lang/String :: v15 = p1 $other .chainId::DD,113292
113288 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 73::CD,113292:CD,113297
113293 :: NORM :: compound :: I :: return #(-1)::CF,113240
113292 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 73::CD,113293:CD,113297
113294 :: EXPR :: reference :: Ljava/lang/Integer :: v16 = p0 $this .seqNum::DD,113297
113297 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 113::CD,113301:CD,113329
113298 :: EXPR :: reference :: Ljava/lang/Integer :: v17 = p1 $other .seqNum::DD,113301
113301 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 113::CD,113308:CD,113313:CD,113329
113302 :: EXPR :: reference :: Ljava/lang/Integer :: v18 = p0 $this .seqNum::JM,113313
113305 :: EXPR :: reference :: Ljava/lang/Integer :: v19 = p1 $other .seqNum::JM,113313
113308 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,113313
113313 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 113::CD,113320:CD,113325:CD,113329
113314 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .seqNum::JM,113325
113317 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p1 $other .seqNum::JM,113325
113320 :: CALL :: call :: I :: v45 = v42.compareTo(v43)::JM,113325
113325 :: NORM :: compound :: I :: return v45::CF,113240
113326 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,113329
113329 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 129::CD,113333:CD,113338
113330 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p1 $other .seqNum::DD,113333
113333 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 129::CD,113334:CD,113338
113335 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::DD,113338
113334 :: NORM :: compound :: I :: return #(1)::CF,113240
113339 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = p1 $other .seqNum::DD,113342
113338 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 145::CD,113342:CD,113347
113343 :: NORM :: compound :: I :: return #(-1)::CF,113240
113342 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 145::CD,113343:CD,113347
113344 :: EXPR :: reference :: Ljava/lang/Character :: v26 = p0 $this .insCode::DD,113347
113347 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 185::CD,113351:CD,113379
113348 :: EXPR :: reference :: Ljava/lang/Character :: v27 = p1 $other .insCode::DD,113351
113351 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 185::CD,113358:CD,113363:CD,113379
113352 :: EXPR :: reference :: Ljava/lang/Character :: v28 = p0 $this .insCode::JM,113363
113355 :: EXPR :: reference :: Ljava/lang/Character :: v29 = p1 $other .insCode::JM,113363
113358 :: CALL :: call :: Z :: v31 = v28.equals(v29)::JM,113363
113363 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 185::CD,113370:CD,113375:CD,113379
113364 :: EXPR :: reference :: Ljava/lang/Character :: v38 = p0 $this .insCode::JM,113375
113367 :: EXPR :: reference :: Ljava/lang/Character :: v39 = p1 $other .insCode::JM,113375
113370 :: CALL :: call :: I :: v41 = v38.compareTo(v39)::JM,113375
113375 :: NORM :: compound :: I :: return v41::CF,113240
113376 :: EXPR :: reference :: Ljava/lang/Character :: v32 = p0 $this .insCode::DD,113379
113379 :: PRED :: IF :: Z :: if (v32 == #(null)) goto 201::CD,113383:CD,113388
113380 :: EXPR :: reference :: Ljava/lang/Character :: v33 = p1 $other .insCode::DD,113383
113383 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 201::CD,113384:CD,113388
113385 :: EXPR :: reference :: Ljava/lang/Character :: v34 = p0 $this .insCode::DD,113388
113384 :: NORM :: compound :: I :: return #(1)::CF,113240
113389 :: EXPR :: reference :: Ljava/lang/Character :: v35 = p1 $other .insCode::DD,113392
113388 :: PRED :: IF :: Z :: if (v34 != #(null)) goto 217::CD,113392:CD,113394
113393 :: NORM :: compound :: I :: return #(-1)::CF,113240
113392 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 217::CD,113393:CD,113394
113394 :: NORM :: compound :: I :: return #(0)::CF,113240
113453 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::CE,113454:CD,113458:CD,113462:CD,113466:CD,113471
113454 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::JM,92690
113458 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .toString()::JM,113471:CL,132187
113462 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $other .toString()::JM,113471:CL,132187
113466 :: CALL :: call :: I :: v9 = v5.compareTo(v7)::JM,113471
113471 :: NORM :: compound :: I :: return v9::DD,113454
113747 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::JM,93445:JM,93484:JM,141494:JM,143934
113746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::CE,113747:CD,113752:CD,113757:CD,113758
113752 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $groupCode3 )::JM,113757
113757 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,113758
113758 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,113747
113761 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::CE,113762:CD,113765:CD,113771:CD,113776
113762 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::JM,93454:JM,93543:JM,143964:JM,155646:JM,155688
113765 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $groupCode3 .trim()::
113771 :: CALL :: call :: Z :: v7 = v5.containsKey(v4)::JM,113776
113776 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 32::CD,113779:CD,113784:CD,113786
113779 :: CALL :: call :: Z :: v11 = v9.containsKey(v4)::JM,113784
113785 :: NORM :: compound :: Z :: return #(0)::DD,113762
113784 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 32::CD,113785:CD,113786
113786 :: NORM :: compound :: Z :: return #(1)::DD,113762
113797 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::CE,113798:CD,113801:CD,113805:CD,113809:CD,113813
113798 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::JM,93527:JM,93517:JM,143909:JM,143899:JM,155602:JM,155635:JM,155620:JM,155612:JM,155628
113801 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::
113805 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::
113809 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v9 = getChemComp(v6)::JM,113813:CL,120570
113813 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 21::CD,113814:CD,113821:CD,113826:CD,113956:CD,113960:CD,113962
113814 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return #(null)::DD,113798
113821 :: CALL :: call :: Z :: v14 = v10.contains(v12)::JM,113826
113827 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v25 = new org.biojava.nbio.structure.AminoAcidImpl::DD,113962
113826 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 209::CF,113827:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,113831:CD,113835:CD,113875:CD,113941:CD,113946:CD,113961:CD,113962
113831 :: CALL :: call :: Ljava/lang/String :: v28 = v9.getOne_letter_code()::JM,113841:JM,113847:JM,113961:JM,113835:JM,113852:CL,132612
113835 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 84::CD,113836:CD,113841:CD,113853:CD,113857:CD,113961:JM,113847:JM,113852
113836 :: CALL :: call :: Z :: v31 = v28.equals(#(X))::JM,113841:JM,113847:JM,113961:JM,113852
113841 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 84::CD,113842:CD,113847:CD,113853:CD,113857:CD,113961:JM,113841:JM,113852
113842 :: CALL :: call :: Z :: v34 = v28.equals(#(?))::JM,113841:JM,113847:JM,113961:JM,113852
113847 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 84::CD,113848:CD,113852:CD,113853:CD,113857:CD,113961:JM,113841:JM,113847
113848 :: CALL :: call :: I :: v36 = v28.length()::JM,113841:JM,113847:JM,113961:JM,113852
113853 :: CALL :: call :: Ljava/lang/String :: v38 = v9.getMon_nstd_parent_comp_id()::JM,113857:JM,113858:JM,113862:CL,132621
113852 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 125::CF,113961:CD,113853:CD,113857
113857 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 125::CF,113961:CD,113858:CD,113862
113858 :: CALL :: call :: I :: v40 = v38.length()::JM,113858:JM,113862
113862 :: PRED :: IF :: Z :: if (v40 != #(3)) goto 125::CF,113961:CD,113867:CD,113871
113867 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v45 = getChemComp(v43)::CL,120570
113871 :: CALL :: call :: Ljava/lang/String :: v47 = v45.getOne_letter_code()::JM,113961:CL,132612
113875 :: PRED :: IF :: Z :: if (v48 == #(null)) goto 146::CD,113876:CD,113880:CD,113889:CD,113894:CD,113899:CD,113904:CD,113916
113876 :: CALL :: call :: I :: v50 = v48.length()::JM,113880
113881 :: CALL :: call :: Z :: v52 = v48.equals(#(?))::JM,113886
113880 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 146::CD,113881:CD,113886:CD,113889:CD,113894:CD,113899:CD,113904:CD,113916
113886 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 193::CD,113889:CD,113894:CD,113899:CD,113904:CD,113916:CD,113921:CD,113930
113889 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
113894 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v6)::
113899 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#(  Did not find one le...))::
113904 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
113916 :: CALL :: call :: V :: v25.setAminoType(v72)::CL,114231
113921 :: CALL :: call :: C :: v54 = v48.charAt(#(0))::
113930 :: CALL :: call :: V :: v25.setAminoType(v56)::CL,114231
113941 :: CALL :: call :: Z :: v20 = v16.contains(v18)::JM,113946
113947 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v23 = new org.biojava.nbio.structure.NucleotideImpl::DD,113962
113946 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 237::CF,113952:CF,113947:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,113962
113952 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v21 = new org.biojava.nbio.structure.HetatomImpl::DD,113962
113956 :: CALL :: call :: V :: v74.setChemComp(v9)::CL,128063
113961 :: EXPR :: assign :: null :: PHI v48 = v28, v28, v28, v47::DD,113875:JM,113880:JM,113886
113960 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v74::DD,113798
113962 :: EXPR :: assign :: null :: PHI v74 = v25, v23, v21::DD,113960
114031 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::JM,93657:JM,145507
114030 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::CE,114031:CD,114037:CD,114078
114034 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v3 = p0 $this .chemComp::DD,114037
114037 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 54::CD,114041:CD,114051
114041 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = getChemComp(v5)::JM,114045:CL,120570
114045 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = v7::
114048 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v8 = p0 $this .chemComp::DD,114051
114051 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 54::CD,114054:CD,114062:CD,114067
114054 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
114059 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdb_name::
114062 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
114067 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
114075 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v19 = p0 $this .chemComp::DD,114078
114078 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v19::DD,114031
114091 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::JM,93526:JM,143908:JM,155611
114090 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::CE,114091:CD,114097
114094 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,114097
114097 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 30::CD,114098:CD,114102:CD,114114
114098 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getThree_letter_code()::JM,114102:CL,132630
114103 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getThree_letter_code()::JM,114112:CL,132630
114102 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 30::CD,114103:CD,114107:CD,114112:CD,114114
114107 :: CALL :: call :: Z :: v11 = v8.equals(#(???))::JM,114112
114113 :: NORM :: compound :: Z :: return #(0)::CF,114091
114112 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,114113:CD,114114
114114 :: NORM :: compound :: Z :: return #(1)::CF,114091
114131 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(0)::
114134 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = #(null)::
114137 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = #(null)::
114140 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,114144
114144 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v6::
114147 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,114151
114151 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v8::
114154 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = #(null)::
114157 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = #(null)::
114160 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = #(null)::
114163 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v10 = org.biojava.nbio.structure.HetatomImpl.performanceBehavior::DD,114167
114165 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::CF,114167
114167 :: PRED :: IF :: Z :: if (v10 != v11) goto 81::CD,114168
114168 :: NORM :: declaration :: Ljava/util/HashMap :: v12 = new java.util.HashMap::DD,114172
114172 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v12::
114176 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = #(null)::
114219 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = #(null)::
114222 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = #(ATOM)::
114231 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setAminoType(java.lang.Character)::JM,114236
114236 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = p1 $aa ::
114243 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::JM,93679
114242 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::CE,114243:CD,114249
114246 :: EXPR :: reference :: Z :: v3 = p0 $this .standard::DD,114249
114249 :: NORM :: compound :: Z :: return v3::CF,114243
114251 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::CE,114252:CD,114258
114252 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::JM,93693
114255 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .hetAtoms::DD,114258
114258 :: NORM :: compound :: Ljava/util/List :: return v3::CF,114252
114261 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::JM,93763
114260 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::CE,114261:CD,114267
114264 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,114267
114267 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,114268:CD,114272:CD,114276:CD,114278:CD,114279
114269 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::JM,114276
114268 :: NORM :: compound :: Z :: return #(0)::CF,114261
114272 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,114276
114276 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 26::CD,114279
114279 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,114278
114278 :: NORM :: compound :: Z :: return v10::CF,114261
114287 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::CE,114288:CD,114294
114288 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::JM,93859:JM,93905:JM,93931:JM,93961:JM,114595:JM,120535:JM,135049:JM,155820:JM,155892:JM,155866:JM,155922
114291 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,114294
114294 :: NORM :: compound :: Ljava/util/List :: return v3::CF,114288
114297 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::JM,93875:JM,93925:JM,94391:JM,94479:JM,135013:JM,135067:JM,155836:JM,155886
114296 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::CE,114297:CD,114303
114300 :: EXPR :: reference :: C :: v3 = p0 $this .altLoc::DD,114303
114303 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 10::CD,114304:CD,114308:CD,114312
114305 :: EXPR :: reference :: C :: v5 = p0 $this .altLoc::JM,114312
114304 :: NORM :: compound :: Ljava/lang/Character :: return #(null)::DD,114297
114308 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(v5)::JM,114312
114312 :: NORM :: compound :: Ljava/lang/Character :: return v7::DD,114297
114317 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setAtoms(java.util.List)::CD,114325:CD,114332:CD,114363:CD,114367:CD,114371:CD,114375:JM,114368
114322 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,114325
114325 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 17::CD,114329:JM,114368:JM,114375:JM,114367
114326 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .atomNameLookup::
114329 :: CALL :: call :: V :: v6.clear()::
114332 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $atoms .iterator()::JM,114368:JM,114375:JM,114367
114337 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,114375:JM,114367
114342 :: CALL :: call :: V :: v15.setGroup(p0 $this )::CL,114644
114346 :: EXPR :: reference :: Ljava/util/Map :: v17 = p0 $this .atomNameLookup::DD,114349
114349 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 68::CD,114357:JM,114375:JM,114367
114357 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.put(v20, v15)::
114363 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,114375:JM,114367
114367 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 27::CD,114337:CD,114342:CD,114349:CD,114363:JM,114375:JM,114367
114368 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = p1 $atoms ::
114371 :: CALL :: call :: Z :: v24 = p1 $atoms .isEmpty()::JM,114375:JM,114367
114375 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 95::
114376 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(1)::
114403 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAltLoc(org.biojava.nbio.structure.Group)::CD,114411:CD,114422
114408 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .altLocs::DD,114411
114411 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 19::CD,114412
114412 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,114416
114416 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = v6::
114419 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .altLocs::
114422 :: CALL :: call :: Z :: v10 = v8.add(p1 $group )::
114435 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(java.util.List)::CD,114439:CD,114443:CD,114462:CD,114466
114439 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
114443 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $chains .iterator()::JM,114466
114448 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,114466
114453 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = getRepresentativeAtomsOnly(v12)::CL,114482
114457 :: CALL :: call :: Z :: v16 = v3.add(v14)::
114462 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,114466
114466 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 19::CD,114448:CD,114453:CD,114457:CD,114462:JM,114466
114483 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::
114482 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::CE,114483:CD,114486:JM,86881:JM,86869:JM,86888:JM,86874:CD,114494:CD,114502:CD,114510:CD,114514:CD,114518:CD,114596:CD,114600:CD,114601
114486 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v3 = new org.biojava.nbio.structure.ChainImpl::DD,114601
114494 :: CALL :: call :: V :: v3.setChainID(v6)::CL,86912
114502 :: CALL :: call :: V :: v3.setCompound(v9)::CL,104427
114510 :: CALL :: call :: V :: v3.setSwissprotId(v12)::CL,132648
114514 :: CALL :: call :: Ljava/util/List :: v15 = p1 $chain .getAtomGroups()::JM,114600:JM,114527:CL,54331
114518 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,114600:JM,114527
114523 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,114600:JM,114527
114527 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,114532
114528 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,114595:CL,114287
114533 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,114535:CD,114591:CD,114595
114532 :: EXPR :: assign :: Z :: v26=v23 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,114533
114535 :: CALL :: call :: Ljava/util/Iterator :: v28 = v25.iterator()::JM,114595
114540 :: CALL :: call :: Ljava/lang/Object :: v32 = v28.next()::JM,114595
114545 :: CALL :: call :: Ljava/lang/String :: v35 = v33.getName()::JM,114554:CL,63540
114549 :: CALL :: call :: Z :: v38 = v35.equals(#(CA))::JM,114554
114555 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v40 = v33.getElement()::JM,114561:CL,54571
114554 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 200::CD,114555:CD,114559:CD,114561:CD,114591:CD,114595
114559 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v41 = org.biojava.nbio.structure.Element.C::CF,114561
114561 :: PRED :: IF :: Z :: if (v40 != v41) goto 200::JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,114570:CD,114578:CD,114582:CD,114586:CD,114591:CD,114595
114570 :: CALL :: call :: V :: v42.setPDBName(v45)::CL,93615
114578 :: CALL :: call :: V :: v42.setResidueNumber(v48)::CL,93626
114582 :: CALL :: call :: V :: v42.addAtom(v33)::CL,94338
114586 :: CALL :: call :: V :: v3.addGroup(v42)::CL,87059
114591 :: CALL :: call :: Z :: v30 = v28.hasNext()::JM,114595
114595 :: PRED :: IF :: Z :: if (v30 != #(0)) goto 105::CD,114540:CD,114545:CD,114549:CD,114554:JM,114595:JM,114600:JM,114527
114596 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,114600:JM,114527
114601 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::DD,114483
114600 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 64::CD,114523:CD,114527:CD,114528:CD,114532:CD,114533:CD,114596:JM,114600:CF,114601
114644 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setGroup(org.biojava.nbio.structure.Group)::JM,114649
114649 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = p1 $parent ::
114655 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBFlag(boolean)::JM,114660
114660 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = p1 $flag ::
114667 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AminoAcidImpl.toString()::
114666 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.toString()::CE,114667:CD,114670:CD,114678:CD,114683:CD,114691:CD,114696:CD,114704:CD,114709:CD,114717:CD,114722:CD,114730:CD,114735:CD,114743:CD,114748:CD,114755:CD,114786:CD,114790:CD,114794:CD,114826:CD,114827:CD,114828
114670 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
114675 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .recordType::
114678 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
114683 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#(:))::
114688 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::
114691 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::
114696 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#( ))::
114704 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
114709 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(#( ))::
114717 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(v23)::JM,114827
114722 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#( ))::JM,114827
114727 :: EXPR :: reference :: Z :: v28 = p0 $this .pdb_flag::JM,114827
114730 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::JM,114827
114735 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v30.append(#( ))::JM,114827
114740 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .recordType::JM,114827
114743 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(v33)::JM,114827
114748 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,114827
114752 :: EXPR :: reference :: Z :: v38 = p0 $this .pdb_flag::DD,114755
114755 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 120::CF,114827:CF,114756:CD,114757:CD,114765:CD,114773:CD,114777:CD,114782
114757 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v37)::
114756 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::JM,114827
114765 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v40.append(#( atoms: ))::JM,114827
114770 :: EXPR :: reference :: Ljava/util/List :: v47 = p0 $this .atoms::JM,114827
114773 :: CALL :: call :: I :: v49 = v47.size()::JM,114827
114777 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v46.append(v49)::JM,114827
114782 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::JM,114827
114786 :: CALL :: call :: Ljava/util/List :: v56 = p0 $this .getAltLocs()::JM,114794:CL,104462
114790 :: CALL :: call :: Z :: v58 = v56.isEmpty()::JM,114794
114795 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,114828
114794 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 164::CF,114828:CF,114795:CD,114796:CD,114804:CD,114809:CD,114813:CD,114817:CD,114822
114796 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v54)::
114804 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v59.append(#( has altLocs :))::JM,114828
114809 :: CALL :: call :: Ljava/util/List :: v67 = p0 $this .getAltLocs()::JM,114828:CL,104462
114813 :: CALL :: call :: I :: v69 = v67.size()::JM,114828
114817 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::JM,114828
114822 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::JM,114828
114827 :: EXPR :: assign :: null :: PHI v54 = v37, v53::DD,114828
114826 :: NORM :: compound :: Ljava/lang/String :: return v74::DD,114667
114828 :: EXPR :: assign :: null :: PHI v74 = v54, v73::CF,114826
114857 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.NucleotideImpl.toString()::
114856 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.toString()::CE,114857:CD,114860:CD,114868:CD,114873:CD,114881:CD,114886:CD,114894:CD,114899:CD,114906:CD,114937:CD,114938
114860 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
114865 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .pdb_name::
114868 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
114873 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
114881 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,114938
114886 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,114938
114891 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,114938
114894 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,114938
114899 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,114938
114903 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,114906
114907 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,114938
114906 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 84::CF,114938:CF,114907:CD,114908:CD,114916:CD,114924:CD,114928:CD,114933
114908 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
114916 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#(atoms: ))::JM,114938
114921 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,114938
114924 :: CALL :: call :: I :: v33 = v31.size()::JM,114938
114928 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,114938
114933 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,114938
114937 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,114857
114938 :: EXPR :: assign :: null :: PHI v38 = v21, v37::CF,114937
114955 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.toString()::
114954 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.toString()::CE,114955:CD,114958:CD,114966:CD,114971:CD,114979:CD,114984:CD,114992:CD,114997:CD,115004:CD,115038:CD,115069:CD,115070:CD,115071
114958 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
114966 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,115070
114971 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::JM,115070
114976 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::JM,115070
114979 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,115070
114984 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,115070
114989 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,115070
114992 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,115070
114997 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,115070
115001 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,115004
115005 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,115070
115004 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 86::CF,115070:CF,115005:CD,115006:CD,115014:CD,115022:CD,115026:CD,115031
115006 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
115014 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#( atoms: ))::JM,115070
115019 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,115070
115022 :: CALL :: call :: I :: v33 = v31.size()::JM,115070
115026 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,115070
115031 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,115070
115035 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .altLocs::DD,115038
115039 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::JM,115071
115038 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 126::CF,115071:CF,115039:CD,115040:CD,115048:CD,115056:CD,115060:CD,115065
115040 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v38)::
115048 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v41.append(#( has altLocs :))::JM,115071
115053 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .altLocs::JM,115071
115056 :: CALL :: call :: I :: v50 = v48.size()::JM,115071
115060 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v50)::JM,115071
115065 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::JM,115071
115069 :: NORM :: compound :: Ljava/lang/String :: return v55::DD,114955
115071 :: EXPR :: assign :: null :: PHI v55 = v38, v54::CF,115069
115070 :: EXPR :: assign :: null :: PHI v38 = v21, v37::DD,115071
115093 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::CE,115094:CD,115100
115094 :: EXIT :: exit :: I :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::
115097 :: EXPR :: reference :: I :: v3 = p0 $this .pdbserial::DD,115100
115100 :: NORM :: compound :: I :: return v3::CF,115094
115103 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::JM,94612:JM,94618:JM,94622
115102 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::CE,115103:CD,115108:CD,115113:CD,115114
115108 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $expTechniqueName )::JM,115113
115113 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,115114
115114 :: NORM :: compound :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v6::DD,115103
115117 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::CE,115118:CD,115124
115118 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::JM,94757
115121 :: EXPR :: reference :: D :: v3 = p0 $this .a::DD,115124
115124 :: NORM :: compound :: D :: return v3::CF,115118
115127 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::JM,94763
115126 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::CE,115127:CD,115133
115130 :: EXPR :: reference :: D :: v3 = p0 $this .b::DD,115133
115133 :: NORM :: compound :: D :: return v3::CF,115127
115135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::CE,115136:CD,115142
115136 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::JM,94769
115139 :: EXPR :: reference :: D :: v3 = p0 $this .c::DD,115142
115142 :: NORM :: compound :: D :: return v3::CF,115136
115145 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.getSiteID()::JM,94993:JM,140205:JM,143706
115144 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getSiteID()::CE,115145:CD,115151
115148 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .siteID::DD,115151
115151 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,115145
115162 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
115165 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,115178:JM,115181:DD,115169
115169 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v7::
115172 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
115175 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
115178 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
115181 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p2 $groups ::
115198 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setEvCode(java.lang.String)::JM,115203
115203 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = p1 $evCode ::
115209 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setDescription(java.lang.String)::JM,115214
115214 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
115220 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB()::CD,115224:CD,115228:CD,115232
115224 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
115228 :: CALL :: call :: V :: p0 $this .remark800toPDB(v3)::CL,132659
115232 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
115242 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.initialize()::CD,115246:CD,115253:CD,115264
115246 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,115250
115250 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transformations = v3::
115253 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v7 = identity(#(3), #(3))::JM,115258:CL,132775
115258 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v7::
115261 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
115265 :: EXPR :: modify :: [D :: p0 $this .shift = v9::
115264 :: NORM :: declaration :: [D :: v9 = new []::DD,115265
115268 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
115271 :: EXPR :: modify :: I :: p0 $this .currentMmSize = #(0)::
115289 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::JM,95405
115288 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::CE,115289:CD,115293:CD,115298:CD,115299:CD,115303:CD,115304:CD,115310:CD,115314:CD,115318:CD,115322
115293 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(58))::JM,115298:JM,115303
115299 :: CALL :: call :: I :: v10 = p1 $line .length()::JM,115298:JM,115303
115298 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,115298:JM,115303
115303 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 - #(1)::JM,115298:JM,115303
115304 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v8, v11)::JM,115298:JM,115303
115310 :: CALL :: call :: Ljava/lang/String :: v15 = v13.trim()::
115314 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toLowerCase()::
115318 :: CALL :: call :: I :: v19 = getSizefromString(v17)::JM,115322:CL,132837
115322 :: NORM :: compound :: I :: return v19::DD,115289
115333 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.addToCurrentChainList(java.lang.String)::CD,115338:CD,115343:CD,115344:CD,115349:CD,115353:CD,115361:CD,115365
115338 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(:))::JM,115343
115343 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,115343
115344 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(v8)::JM,115343
115349 :: CALL :: call :: Ljava/lang/String :: v12 = v10.trim()::
115353 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#([ ,]+))::JM,115361
115358 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .currentChainIDs::
115361 :: CALL :: call :: Ljava/util/List :: v18 = asList(v15)::JM,115361
115365 :: CALL :: call :: Z :: v20 = v16.addAll(v18)::
115385 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::JM,95471
115384 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::CE,115385:CD,115389:CD,115398:CD,115403:CD,115407:CD,115433:CD,115452:CD,115471:CD,115480:CD,115485:CD,115489:CD,115494
115389 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $line .split(#([ ]+))::
115394 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(2)]::JM,115494:JM,115480:JM,115407
115398 :: CALL :: call :: Ljava/lang/String :: v11 = v8.substring(#(5))::JM,115494:JM,115480:JM,115407
115403 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,115494:JM,115480:JM,115407
115407 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 44::CD,115408:CD,115416
115408 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v17 = identity(#(3), #(3))::JM,115413:CL,132775
115413 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v17::
115417 :: EXPR :: modify :: [D :: p0 $this .shift = v18::
115416 :: NORM :: declaration :: [D :: v18 = new []::DD,115417
115433 :: CALL :: call :: V :: v19.set(v20, #(0), v26)::CL,128083
115452 :: CALL :: call :: V :: v28.set(v29, #(1), v33)::CL,128083
115471 :: CALL :: call :: V :: v35.set(v36, #(2), v41)::CL,128083
115477 :: EXPR :: reference :: [D :: v43 = p0 $this .shift::
115481 :: EXPR :: reference :: Ljava/lang/Object :: v46 = v6[#(7)]::JM,115489:JM,115485
115480 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v13 - #(1)::
115485 :: CALL :: call :: F :: v48 = parseFloat(v46)::JM,115489:JM,115485
115489 :: EXPR :: assign :: D :: v49 = CONVERT F to D v48::DD,115490
115490 :: EXPR :: modify :: D :: v43[v44] = v49::
115495 :: NORM :: compound :: Z :: return #(1)::DD,115385
115494 :: PRED :: IF :: Z :: if (v13 != #(3)) goto 127::CD,115495:CD,115496
115496 :: NORM :: compound :: Z :: return #(0)::DD,115385
115540 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.saveMatrix()::CD,115547:CD,115602:CD,115606:CD,115613:CD,115618
115544 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .currentChainIDs::JM,115606
115547 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,115606
115552 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,115606
115557 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v12 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
115579 :: EXPR :: reference :: I :: v20 = p0 $this .modelNumber::
115582 :: CALL :: call :: Ljava/lang/String :: v22 = valueOf(v20)::
115594 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .transformations::
115597 :: CALL :: call :: Z :: v27 = v25.add(v12)::
115602 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,115606
115606 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,115552:CD,115557:JM,133121:CD,115582:CD,115597:CD,115602:JM,115606
115613 :: CALL :: call :: Z :: v31 = v28.containsKey(v29)::JM,115618
115618 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 173::CD,115668
115668 :: CALL :: call :: Ljava/lang/Object :: v50 = v47.put(v48, v32)::
115730 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.compndValueSetter(java.lang.String,java.lang.String)::CD,115736:CD,115740:CD,115746:CD,115751:CD,115819:JM,115826:JM,115938:JM,116002:JM,115989:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115736 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115740 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,116038
115746 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115751 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 123::CD,115752:CD,115756:CD,115768:CD,116038
115752 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,116038
115756 :: CALL :: call :: I :: v19 = v17.intValue()::JM,116038
115769 :: EXPR :: reference :: I :: v26 = p0 $this .prevMolId::DD,115772
115768 :: PRED :: IF :: Z :: if (v25 <= #(0)) goto 123::CD,115772
115773 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v27 = p0 $this .current_compound::DD,115776
115772 :: PRED :: IF :: Z :: if (v26 == v25) goto 123::CD,115776:CD,115790:CD,115799:JM,96774:JM,96767:CD,115809
115777 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .compounds::
115776 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 83::CD,115783
115780 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v30 = p0 $this .current_compound::
115783 :: CALL :: call :: Z :: v32 = v29.add(v30)::
115790 :: CALL :: call :: Ljava/lang/Integer :: v36 = valueOf(v25)::
115799 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v38 = new org.biojava.nbio.structure.Compound::DD,115803
115803 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .current_compound = v38::
115809 :: CALL :: call :: V :: v40.setMolId(v25)::CL,118973
115816 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v43 = p0 $this .current_compound::DD,115819
115819 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 133::CD,115821:CD,115826:CD,115834:CD,115839:CD,115895:CD,115900:CD,115933:CD,115938:CD,115971:CD,115976:CD,115984:CD,115989:CD,115997:CD,116002:CD,116010:CD,116015:CD,116023:CD,116028:JM,115751
115821 :: CALL :: call :: Z :: v46 = p1 $field .equals(#(MOLECULE:))::JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115826 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,115830:JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115830 :: CALL :: call :: V :: v47.setMolName(v10)::CL,133365
115834 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(CHAIN:))::JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115839 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 245::CF,115840:CD,115846:CD,115870:CD,115874:CD,115881:CD,115885:CD,115889:JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115840 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v52 = new java.util.StringTokenizer::JM,116039:JM,115864:JM,115874
115846 :: NORM :: declaration :: Ljava/util/ArrayList :: v55 = new java.util.ArrayList::
115851 :: CALL :: call :: Ljava/lang/String :: v60 = v52.nextToken()::JM,116039:JM,115864
115855 :: CALL :: call :: Ljava/lang/String :: v62 = v60.trim()::JM,116039:JM,115864
115859 :: CALL :: call :: Z :: v65 = v62.equals(#(NULL))::JM,116039:JM,115864
115865 :: CALL :: call :: Z :: v69 = v55.add(v67)::
115864 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 209::CF,116039
115870 :: CALL :: call :: Z :: v58 = v52.hasMoreTokens()::JM,115874
115874 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 181::CD,115851:CD,115855:CD,115859:CD,115864:CD,115865:CD,115870:CD,116039
115881 :: CALL :: call :: I :: v73 = v71.getMolId()::CL,118876
115885 :: CALL :: call :: Ljava/lang/Integer :: v75 = valueOf(v73)::
115889 :: CALL :: call :: Ljava/lang/Object :: v77 = v70.put(v75, v55)::
115895 :: CALL :: call :: Z :: v80 = p1 $field .equals(#(SYNONYM:))::JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115901 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v81 = new java.util.StringTokenizer::JM,115932
115900 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 306::CF,115901:CD,115907:CD,115928:CD,115932:JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115907 :: NORM :: declaration :: Ljava/util/ArrayList :: v83 = new java.util.ArrayList::
115912 :: CALL :: call :: Ljava/lang/String :: v88 = v81.nextToken()::
115916 :: CALL :: call :: Z :: v90 = v83.add(v88)::
115924 :: CALL :: call :: V :: v91.setSynonyms(v83)::CL,133376
115928 :: CALL :: call :: Z :: v86 = v81.hasMoreTokens()::JM,115932
115933 :: CALL :: call :: Z :: v95 = p1 $field .equals(#(EC:))::JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115932 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 278::CD,115912:CD,115916:CD,115924:CD,115928:JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115939 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v96 = new java.util.StringTokenizer::JM,115970
115938 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 367::CF,115939:CD,115945:CD,115966:CD,115970:JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115945 :: NORM :: declaration :: Ljava/util/ArrayList :: v98 = new java.util.ArrayList::
115950 :: CALL :: call :: Ljava/lang/String :: v103 = v96.nextToken()::
115954 :: CALL :: call :: Z :: v105 = v98.add(v103)::
115962 :: CALL :: call :: V :: v106.setEcNums(v98)::CL,133387
115966 :: CALL :: call :: Z :: v101 = v96.hasMoreTokens()::JM,115970
115971 :: CALL :: call :: Z :: v110 = p1 $field .equals(#(FRAGMENT:))::JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115970 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 339::CD,115950:CD,115954:CD,115962:CD,115966:JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115976 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 384::CD,115980:JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115980 :: CALL :: call :: V :: v111.setFragment(v10)::CL,133398
115984 :: CALL :: call :: Z :: v115 = p1 $field .equals(#(ENGINEERED:))::JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115989 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 401::CD,115993:JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
115993 :: CALL :: call :: V :: v116.setEngineered(v10)::CL,133409
115997 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(MUTATION:))::JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
116002 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 418::CD,116006:JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
116006 :: CALL :: call :: V :: v121.setMutation(v10)::CL,133420
116010 :: CALL :: call :: Z :: v125 = p1 $field .equals(#(BIOLOGICAL_UNIT:))::JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
116015 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 435::CD,116019:JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
116019 :: CALL :: call :: V :: v126.setBiologicalUnit(v10)::CL,133431
116023 :: CALL :: call :: Z :: v130 = p1 $field .equals(#(OTHER_DETAILS:))::JM,115826:JM,115938:JM,116002:JM,115989:JM,115751:JM,115976:JM,115900:JM,116028:JM,115839:JM,116015
116028 :: PRED :: IF :: Z :: if (v130 == #(0)) goto 449::CD,116032
116032 :: CALL :: call :: V :: v131.setDetails(v10)::CL,133442
116039 :: EXPR :: assign :: null :: PHI v67 = v62, #( )::
116038 :: EXPR :: assign :: null :: PHI v25 = v19, #(-1)::DD,115768:DD,115772
116156 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.sourceValueSetter(java.lang.String,java.lang.String)::CD,116162:CD,116166:CD,116172:CD,116177:CD,116202:CD,116207:CD,116211:CD,116216:CD,116225:CD,116230:CD,116673:JM,116608:JM,116482:JM,116356:JM,116552:JM,116426:JM,116300:JM,116622:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116162 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116166 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,116189
116172 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116177 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 84::CD,116181:CD,116185:CD,116189:CD,116190:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116178 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .compounds::
116181 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,116189
116185 :: CALL :: call :: I :: v19 = v17.intValue()::JM,116189
116189 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 - #(1)::
116190 :: CALL :: call :: Ljava/lang/Object :: v23 = v15.get(v21)::
116202 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
116207 :: CALL :: call :: Ljava/lang/String :: v30 = v24.getMessage()::
116211 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v26.append(v30)::
116216 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
116225 :: CALL :: call :: Z :: v39 = p1 $field .equals(#(SYNTHETIC:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116230 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 104::CD,116234:CD,116239:CD,116244:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116234 :: CALL :: call :: V :: v195.setSynthetic(v10)::CL,133453
116239 :: CALL :: call :: Z :: v42 = p1 $field .equals(#(FRAGMENT:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116244 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 124::CD,116248:CD,116253:CD,116258:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116248 :: CALL :: call :: V :: v193.setFragment(v10)::CL,133398
116253 :: CALL :: call :: Z :: v45 = p1 $field .equals(#(ORGANISM_SCIENTIFIC:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116258 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 144::CD,116262:CD,116267:CD,116272:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116262 :: CALL :: call :: V :: v191.setOrganismScientific(v10)::CL,133464
116267 :: CALL :: call :: Z :: v48 = p1 $field .equals(#(ORGANISM_TAXID:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116272 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 164::CD,116276:CD,116281:CD,116286:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412
116276 :: CALL :: call :: V :: v189.setOrganismTaxId(v10)::CL,133475
116281 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(ORGANISM_COMMON:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116286 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 184::CD,116290:CD,116295:CD,116300:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116290 :: CALL :: call :: V :: v187.setOrganismCommon(v10)::CL,133486
116295 :: CALL :: call :: Z :: v54 = p1 $field .equals(#(STRAIN:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116300 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 204::CD,116304:CD,116309:CD,116314:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116304 :: CALL :: call :: V :: v185.setStrain(v10)::CL,133497
116309 :: CALL :: call :: Z :: v57 = p1 $field .equals(#(VARIANT:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116314 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 224::CD,116318:CD,116323:CD,116328:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116318 :: CALL :: call :: V :: v183.setVariant(v10)::CL,133508
116323 :: CALL :: call :: Z :: v60 = p1 $field .equals(#(CELL_LINE:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116328 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 244::CD,116332:CD,116337:CD,116342:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116664:JM,116538:JM,116412:JM,116286
116332 :: CALL :: call :: V :: v181.setCellLine(v10)::CL,133519
116337 :: CALL :: call :: Z :: v63 = p1 $field .equals(#(ATCC:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116342 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 264::CD,116346:CD,116351:CD,116356:JM,116608:JM,116482:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116346 :: CALL :: call :: V :: v179.setAtcc(v10)::CL,133530
116351 :: CALL :: call :: Z :: v66 = p1 $field .equals(#(ORGAN:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116356 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 284::CD,116360:CD,116365:CD,116370:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116360 :: CALL :: call :: V :: v177.setOrgan(v10)::CL,133541
116365 :: CALL :: call :: Z :: v69 = p1 $field .equals(#(TISSUE:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116370 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 304::CD,116374:CD,116379:CD,116384:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116374 :: CALL :: call :: V :: v175.setTissue(v10)::CL,133552
116379 :: CALL :: call :: Z :: v72 = p1 $field .equals(#(CELL:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116384 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 324::CD,116388:CD,116393:CD,116398:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116388 :: CALL :: call :: V :: v173.setCell(v10)::CL,133563
116393 :: CALL :: call :: Z :: v75 = p1 $field .equals(#(ORGANELLE:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116398 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 344::CD,116402:CD,116407:CD,116412:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116286
116402 :: CALL :: call :: V :: v171.setOrganelle(v10)::CL,133574
116407 :: CALL :: call :: Z :: v78 = p1 $field .equals(#(SECRETION:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116412 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 364::CD,116416:CD,116421:CD,116426:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116416 :: CALL :: call :: V :: v169.setSecretion(v10)::CL,133585
116421 :: CALL :: call :: Z :: v81 = p1 $field .equals(#(GENE:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116426 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 384::CD,116430:CD,116435:CD,116440:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116430 :: CALL :: call :: V :: v167.setGene(v10)::CL,133596
116435 :: CALL :: call :: Z :: v84 = p1 $field .equals(#(CELLULAR_LOCATION:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116440 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 404::CD,116444:CD,116449:CD,116454:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116444 :: CALL :: call :: V :: v165.setCellularLocation(v10)::CL,133607
116449 :: CALL :: call :: Z :: v87 = p1 $field .equals(#(EXPRESSION_SYSTEM:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116454 :: PRED :: IF :: Z :: if (v87 == #(0)) goto 424::CD,116458:CD,116463:CD,116468:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116458 :: CALL :: call :: V :: v163.setExpressionSystem(v10)::CL,133618
116463 :: CALL :: call :: Z :: v90 = p1 $field .equals(#(EXPRESSION_SYSTEM_TAXID:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116468 :: PRED :: IF :: Z :: if (v90 == #(0)) goto 444::CD,116472:CD,116477:CD,116482:JM,116608:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116472 :: CALL :: call :: V :: v161.setExpressionSystemTaxId(v10)::CL,133629
116477 :: CALL :: call :: Z :: v93 = p1 $field .equals(#(EXPRESSION_SYSTEM_STRAIN:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116482 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 464::CD,116486:CD,116491:CD,116496:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116486 :: CALL :: call :: V :: v159.setExpressionSystemStrain(v10)::CL,133640
116491 :: CALL :: call :: Z :: v96 = p1 $field .equals(#(EXPRESSION_SYSTEM_VAR...))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116496 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 484::CD,116500:CD,116505:CD,116510:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116500 :: CALL :: call :: V :: v157.setExpressionSystemVariant(v10)::CL,133651
116505 :: CALL :: call :: Z :: v99 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116510 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 504::CD,116514:CD,116519:CD,116524:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116514 :: CALL :: call :: V :: v155.setExpressionSystemCellLine(v10)::CL,133662
116519 :: CALL :: call :: Z :: v102 = p1 $field .equals(#(EXPRESSION_SYSTEM_ATC...))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116524 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 524::CD,116528:CD,116533:CD,116538:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116412:JM,116286
116528 :: CALL :: call :: V :: v153.setExpressionSystemAtccNumber(v10)::CL,133673
116533 :: CALL :: call :: Z :: v105 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORGAN:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116538 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 544::CD,116542:CD,116547:CD,116552:JM,116608:JM,116482:JM,116356:JM,116230:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116542 :: CALL :: call :: V :: v151.setExpressionSystemOrgan(v10)::CL,133684
116547 :: CALL :: call :: Z :: v108 = p1 $field .equals(#(EXPRESSION_SYSTEM_TISSUE:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116552 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 564::CD,116556:CD,116561:CD,116566:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116556 :: CALL :: call :: V :: v149.setExpressionSystemTissue(v10)::CL,133695
116561 :: CALL :: call :: Z :: v111 = p1 $field .equals(#(EXPRESSION_SYSTEM_CELL:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116566 :: PRED :: IF :: Z :: if (v111 == #(0)) goto 584::CD,116570:CD,116575:CD,116580:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116570 :: CALL :: call :: V :: v147.setExpressionSystemCell(v10)::CL,133706
116575 :: CALL :: call :: Z :: v114 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORG...))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116580 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 604::CD,116584:CD,116589:CD,116594:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116584 :: CALL :: call :: V :: v145.setExpressionSystemOrganelle(v10)::CL,133717
116589 :: CALL :: call :: Z :: v117 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116594 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 624::CD,116598:CD,116603:CD,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116598 :: CALL :: call :: V :: v143.setExpressionSystemCellularLocation(v10)::CL,133728
116603 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(EXPRESSION_SYSTEM_VEC...))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116608 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 644::CD,116612:CD,116617:CD,116622:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116612 :: CALL :: call :: V :: v141.setExpressionSystemVectorType(v10)::CL,133739
116617 :: CALL :: call :: Z :: v123 = p1 $field .equals(#(EXPRESSION_SYSTEM_VECTOR:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116622 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 664::CD,116626:CD,116631:CD,116636:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116626 :: CALL :: call :: V :: v139.setExpressionSystemVector(v10)::CL,133750
116631 :: CALL :: call :: Z :: v126 = p1 $field .equals(#(EXPRESSION_SYSTEM_PLA...))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116636 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 684::CD,116640:CD,116645:CD,116650:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116640 :: CALL :: call :: V :: v137.setExpressionSystemPlasmid(v10)::CL,133761
116645 :: CALL :: call :: Z :: v129 = p1 $field .equals(#(EXPRESSION_SYSTEM_GENE:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116650 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 704::CD,116654:CD,116659:CD,116664:JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116538:JM,116412:JM,116286
116654 :: CALL :: call :: V :: v135.setExpressionSystemGene(v10)::CL,133772
116659 :: CALL :: call :: Z :: v132 = p1 $field .equals(#(OTHER_DETAILS:))::JM,116608:JM,116482:JM,116356:JM,116230:JM,116552:JM,116426:JM,116300:JM,116622:JM,116177:JM,116496:JM,116370:JM,116244:JM,116566:JM,116440:JM,116314:JM,116636:JM,116510:JM,116384:JM,116258:JM,116580:JM,116454:JM,116328:JM,116650:JM,116524:JM,116398:JM,116272:JM,116594:JM,116468:JM,116342:JM,116664:JM,116538:JM,116412:JM,116286
116664 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 718::CD,116668
116668 :: CALL :: call :: V :: v133.setExpressionSystemOtherDetails(v10)::CL,133783
116673 :: EXPR :: assign :: Ljava/lang/Exception :: v24 = catch <exc>::
116853 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,116857
116857 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = v4::
116860 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,116864
116864 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = v6::
116867 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #()::
116870 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = #()::
116873 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = #()::
116876 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = #()::
116879 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = #()::
116882 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = #()::
116885 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = #()::
116888 :: EXPR :: modify :: Z :: p0 $this .published = #(0)::
116913 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.authorBuilder(java.lang.String)::CD,116918:CD,116922:CD,116927
116918 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
116922 :: CALL :: call :: Z :: v8 = p1 $authorString .equals(#())::JM,116927
116927 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,116929:CD,116934:CD,116935
116929 :: CALL :: call :: [Ljava/lang/String :: v12 = p1 $authorString .split(#(,))::JM,117185:JM,116934
116935 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 93::CF,116936:CD,116944:CD,116950:CD,116955:CD,116959:CD,116964:CD,116972:CD,117185:CD,117186:CD,117192
116934 :: EXPR :: assign :: I :: v13 = v12.length::DD,116935
116936 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v112 = new org.biojava.nbio.structure.Author::
116944 :: CALL :: call :: V :: v112.setSurname(v114)::CL,133813
116950 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v117 = new java.lang.StringBuilder::
116955 :: CALL :: call :: Ljava/lang/String :: v121 = v112.getSurname()::CL,133824
116959 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v117.append(v121)::
116964 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
116972 :: CALL :: call :: Z :: v128 = v4.add(v112)::
116979 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v12[v109]::
116985 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
116990 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v16)::
116995 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
117003 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v26 = new org.biojava.nbio.structure.Author::
117007 :: CALL :: call :: [Ljava/lang/String :: v30 = v16.split(#(\.))::JM,117012:JM,117053:JM,117117:JM,117149
117013 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 209::CD,117014:CD,117020:CD,117025:CD,117030:CD,117035:CD,117039:CD,117044:CD,117053:CD,117054:CD,117191
117012 :: EXPR :: assign :: I :: v31 = v30.length::DD,117013
117014 :: CALL :: call :: V :: v26.setSurname(v16)::CL,133813
117020 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
117025 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(#(\.))::
117030 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#(' Setting whole name ))::
117035 :: CALL :: call :: Ljava/lang/String :: v43 = v26.getSurname()::CL,133824
117039 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
117044 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
117053 :: EXPR :: assign :: I :: v49 = v30.length::DD,117054
117054 :: PRED :: IF :: Z :: if (v49 != #(1)) goto 263::CD,117059:CD,117065:CD,117070:CD,117074:CD,117079:CD,117117:CD,117118:CD,117119:CD,117122:CD,117127:CD,117132:CD,117137:CD,117145:CD,117149:CD,117150:CD,117157:CD,117162:CD,117167:CD,117175:CD,117188:CD,117189:CD,117190:CD,117191
117059 :: CALL :: call :: V :: v26.setSurname(v50)::CL,133813
117065 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
117070 :: CALL :: call :: Ljava/lang/String :: v57 = v26.getSurname()::CL,133824
117074 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
117079 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
117089 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v30[v79]::JM,117189
117093 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::JM,117189
117094 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v78)::
117102 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v66.append(v65)::JM,117189
117107 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v71.append(#(.))::JM,117189
117112 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::JM,117189
117117 :: EXPR :: assign :: I :: v63 = v30.length::DD,117118
117116 :: EXPR :: assign :: Ljava/lang/Object :: v77 = v79 + #(1)::DD,117190:CF,117188
117119 :: PRED :: IF :: Z :: if (v79 < v64) goto 270::CD,117093:CD,117094:CD,117102:CD,117107:CD,117112:CD,117116:CD,117117:CD,117118:CD,117188:CD,117189:CD,117190
117118 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v63 - #(1)::CF,117119
117122 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
117127 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v78)::
117132 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::
117137 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
117145 :: CALL :: call :: V :: v26.setInitials(v78)::CL,133833
117149 :: EXPR :: assign :: I :: v93 = v30.length::DD,117150
117151 :: EXPR :: reference :: Ljava/lang/Object :: v95 = v30[v94]::
117150 :: EXPR :: assign :: Ljava/lang/Object :: v94 = v93 - #(1)::
117157 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
117162 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v95)::
117167 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
117175 :: CALL :: call :: V :: v26.setSurname(v95)::CL,133813
117179 :: CALL :: call :: Z :: v107 = v4.add(v26)::
117185 :: EXPR :: assign :: I :: v15 = v12.length::CF,117186
117184 :: EXPR :: assign :: Ljava/lang/Object :: v108 = v111 + #(1)::DD,117192
117186 :: PRED :: IF :: Z :: if (v109 < v15) goto 99::CD,116985:CD,116990:CD,116995:CD,117003:CD,117007:CD,117012:CD,117013:CD,117179:CD,117184:CD,117185:CD,117191:CD,117192
117189 :: EXPR :: assign :: null :: PHI v78 = #(), v76::CF,117190
117188 :: EXPR :: assign :: null :: PHI v110 = v109, v110::CF,117189:DD,117188:DD,117191
117191 :: EXPR :: assign :: null :: PHI v111 = v109, v109, v110::DD,117184
117190 :: EXPR :: assign :: null :: PHI v79 = #(0), v77::DD,117116:DD,117119:CF,117117
117192 :: EXPR :: assign :: null :: PHI v109 = #(0), v108::DD,117186:DD,117188:DD,117191:CF,117185
117289 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setAuthorList(java.util.List)::JM,117294
117294 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = p1 $authorList ::
117300 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setEditorList(java.util.List)::JM,117305
117305 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = p1 $editorList ::
117311 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRef(java.lang.String)::JM,117316
117316 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = p1 $ref ::
117337 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117342 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p2 $ref )::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117347 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(#('))::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117352 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117471:JM,117486
117360 :: CALL :: call :: Z :: v21 = p2 $ref .equals(#(TO BE PUBLISHED ))::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117365 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 81::CD,117366:CD,117384:CD,117394:CD,117398:JM,117491:JM,117365:JM,117637:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117366 :: CALL :: call :: Ljava/lang/String :: v173 = p2 $ref .trim()::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117384 :: CALL :: call :: Ljava/lang/String :: v179 = format(#(JournalParser found j...), v176)::
117394 :: CALL :: call :: I :: v24 = p2 $ref .length()::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117398 :: PRED :: IF :: Z :: if (v24 >= #(48)) goto 128::CD,117419:CD,117433:CD,117442:CD,117446:CD,117447:CD,117451:CD,117452:CD,117458:CD,117462:CD,117466:CD,117467:CD,117471:CD,117472:CD,117478:CD,117482:CD,117486:CD,117487:CD,117491:CD,117492:CD,117498:CD,117502:CD,117503:CD,117509:CD,117513:CD,117521:CD,117526:CD,117530:CD,117531:CD,117537:CD,117541:CD,117547:CD,117551:CD,117556:CD,117560:CD,117572:CD,117589:CD,117606:CD,117623:CD,117632:CD,117637:CD,117693:CD,117698:JM,117365:JM,117398
117419 :: CALL :: call :: Ljava/lang/String :: v28 = p2 $ref .substring(#(30), #(48))::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117433 :: CALL :: call :: Ljava/lang/String :: v35 = format(#(Parsing volumeInforma...), v33)::
117442 :: CALL :: call :: I :: v38 = v28.length()::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117447 :: CALL :: call :: I :: v42 = v28.length()::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117446 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 - #(5)::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117471:JM,117486:JM,117530
117451 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v42 - #(1)::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117452 :: CALL :: call :: Ljava/lang/String :: v45 = v28.substring(v40, v43)::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117458 :: CALL :: call :: Ljava/lang/String :: v47 = v45.trim()::JM,117491:JM,117637:JM,117466:JM,117471:JM,117486
117462 :: CALL :: call :: I :: v49 = v28.length()::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117467 :: CALL :: call :: I :: v53 = v28.length()::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117466 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v49 - #(11)::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117471:JM,117486:JM,117530
117471 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v53 - #(6)::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117472 :: CALL :: call :: Ljava/lang/String :: v57 = v28.substring(v51, v55)::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117478 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,117491:JM,117637:JM,117486
117482 :: CALL :: call :: I :: v61 = v28.length()::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117487 :: CALL :: call :: I :: v65 = v28.length()::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117486 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v61 - #(16)::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117471:JM,117486:JM,117530
117491 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v65 - #(12)::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117492 :: CALL :: call :: Ljava/lang/String :: v69 = v28.substring(v63, v67)::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117498 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::JM,117637
117503 :: CALL :: call :: Ljava/lang/String :: v75 = p2 $ref .substring(#(0), #(29))::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117502 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v72 = new java.lang.StringBuilder::JM,117699:JM,117698:JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117509 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,117491:JM,117637:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117513 :: CALL :: call :: Ljava/lang/String :: v79 = valueOf(v77)::
117521 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v72.append(#( ))::JM,117699:JM,117698
117526 :: CALL :: call :: I :: v85 = p2 $ref .length()::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117531 :: CALL :: call :: Ljava/lang/String :: v88 = p2 $ref .substring(#(30), v86)::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117530 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v85 - #(1)::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117537 :: CALL :: call :: Ljava/lang/String :: v90 = v28.trim()::JM,117491:JM,117637:JM,117446:JM,117451:JM,117466:JM,117530:JM,117471:JM,117486
117541 :: CALL :: call :: Ljava/lang/String :: v93 = v88.replace(v90, #())::JM,117699:JM,117698
117547 :: CALL :: call :: Ljava/lang/String :: v95 = v93.trim()::JM,117699:JM,117698
117551 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v83.append(v95)::JM,117699:JM,117698
117556 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::JM,117699:JM,117698
117560 :: CALL :: call :: Ljava/lang/String :: v101 = v99.trim()::JM,117699:JM,117698
117572 :: CALL :: call :: Ljava/lang/String :: v107 = format(#(JournalParser found v...), v105)::
117589 :: CALL :: call :: Ljava/lang/String :: v114 = format(#(JournalParser found s...), v112)::
117606 :: CALL :: call :: Ljava/lang/String :: v121 = format(#(JournalParser found d...), v119)::
117623 :: CALL :: call :: Ljava/lang/String :: v128 = format(#(JournalParser found j...), v126)::
117632 :: CALL :: call :: Z :: v132 = v47.equals(#(    ))::JM,117637
117637 :: PRED :: IF :: Z :: if (v132 != #(0)) goto 431::CD,117638:JM,117637
117638 :: CALL :: call :: Ljava/lang/Integer :: v134 = valueOf(v47)::JM,117637
117653 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::JM,117491:JM,117365:JM,117637:JM,117398:JM,117446:JM,117451:JM,117530:JM,117466:JM,117471:JM,117486
117654 :: CALL :: call :: Ljava/lang/String :: v142 = valueOf(v47)::
117662 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v140.append(#( is not a valid integ...))::
117667 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::
117693 :: CALL :: call :: Z :: v156 = v101.equals(#(    ))::JM,117699:JM,117698
117699 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = v101::
117698 :: PRED :: IF :: Z :: if (v156 != #(0)) goto 502::CD,117705:CD,117713:CD,117718
117705 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
117710 :: EXPR :: reference :: Ljava/lang/String :: v162 = p0 $this .journalName::
117713 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(v162)::
117718 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
117850 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setJournalName(java.lang.String)::JM,117855
117855 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = p1 $journalName ::
117861 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.getJournalName()::CE,117862:CD,117868
117862 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.JournalArticle.getJournalName()::JM,98192
117865 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .journalName::DD,117868
117868 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,117862
117870 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setIsPublished(java.lang.Boolean)::CD,117875:JM,117879
117875 :: CALL :: call :: Z :: v5 = p1 $state .booleanValue()::JM,117879
117879 :: EXPR :: modify :: Z :: p0 $this .published = v5::
117895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setVolume(java.lang.String)::JM,117900
117900 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .volume = p1 $volume ::
117916 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setStartPage(java.lang.String)::JM,117921
117921 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .startPage = p1 $startPage ::
117937 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublicationDate(int)::JM,117942
117942 :: EXPR :: modify :: I :: p0 $this .publicationDate = p1 $publicationDate ::
117948 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublisher(java.lang.String)::JM,117953
117953 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = p1 $publisher ::
117959 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setTitle(java.lang.String)::JM,117964
117964 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
117970 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRefn(java.lang.String)::JM,117975
117975 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = p1 $refn ::
117981 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPmid(java.lang.String)::JM,117986
117986 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = p1 $pmid ::
117992 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setDoi(java.lang.String)::JM,117997
117997 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = p1 $doi ::
118003 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.toString()::CD,118007:CD,118011:CD,118015:CD,118020:CD,118025:CD,118030:CD,118035:CD,118040:CD,118045:CD,118050:CD,118058:CD,118078:CD,118082:CD,118083:CD,118088:CD,118096:CD,118101:CD,118106:CD,118114:CD,118118:CD,118160:CD,118165:CD,118170:CD,118178:CD,118183:CD,118205:CD,118210:CD,118232:CD,118237:CD,118259:CD,118264:CD,118283
118007 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(line.separator))::JM,118007
118011 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
118015 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
118020 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
118025 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
118030 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
118035 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
118040 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
118045 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
118050 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
118055 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .authorList::JM,118082
118058 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,118082
118063 :: CALL :: call :: Ljava/lang/Object :: v39 = v34.next()::JM,118082
118068 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v8.append(v40)::
118073 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#(,))::
118078 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,118082
118083 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v6.append(v8)::
118082 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 117::CD,118063:CD,118068:CD,118073:CD,118078:JM,118082
118088 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v5)::
118093 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .title::
118096 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v11.append(v50)::
118101 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v6.append(v11)::
118106 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v54.append(v5)::
118111 :: EXPR :: reference :: Ljava/util/List :: v57 = p0 $this .editorList::JM,118118
118114 :: CALL :: call :: Z :: v59 = v57.isEmpty()::JM,118118
118119 :: EXPR :: reference :: Ljava/util/List :: v60 = p0 $this .editorList::JM,118146
118118 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 255::CD,118122:CD,118142:CD,118146:CD,118147:CD,118152
118122 :: CALL :: call :: Ljava/util/Iterator :: v62 = v60.iterator()::JM,118146
118127 :: CALL :: call :: Ljava/lang/Object :: v66 = v62.next()::JM,118146
118132 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v14.append(v67)::
118137 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v69.append(#(,))::
118142 :: CALL :: call :: Z :: v64 = v62.hasNext()::JM,118146
118147 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v6.append(v14)::
118146 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,118127:CD,118132:CD,118137:CD,118142:JM,118146
118152 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v74.append(v5)::
118157 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .ref::
118160 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v17.append(v79)::
118165 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v6.append(v17)::
118170 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v83.append(v5)::
118175 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .publisher::JM,118183
118178 :: CALL :: call :: Z :: v89 = v86.equals(#())::JM,118183
118183 :: PRED :: IF :: Z :: if (v89 != #(0)) goto 307::CD,118187:CD,118192:CD,118197
118184 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .publisher::
118187 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v20.append(v90)::
118192 :: CALL :: call :: Ljava/lang/StringBuilder :: v94 = v6.append(v20)::
118197 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v94.append(v5)::
118202 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .refn::JM,118210
118205 :: CALL :: call :: Z :: v99 = v97.equals(#())::JM,118210
118211 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .refn::
118210 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 340::CD,118214:CD,118219:CD,118224
118214 :: CALL :: call :: Ljava/lang/StringBuilder :: v102 = v23.append(v100)::
118219 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v6.append(v23)::
118224 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v5)::
118229 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .pmid::JM,118237
118232 :: CALL :: call :: Z :: v109 = v107.equals(#())::JM,118237
118237 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 373::CD,118241:CD,118246:CD,118251
118238 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .pmid::
118241 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v26.append(v110)::
118246 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v6.append(v26)::
118251 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v114.append(v5)::
118256 :: EXPR :: reference :: Ljava/lang/String :: v117 = p0 $this .doi::JM,118264
118259 :: CALL :: call :: Z :: v119 = v117.equals(#())::JM,118264
118265 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .doi::
118264 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 406::CD,118268:CD,118273:CD,118278
118268 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v29.append(v120)::
118273 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v6.append(v29)::
118278 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v124.append(v5)::
118283 :: CALL :: call :: Ljava/lang/String :: v128 = v6.toString()::
118401 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::JM,118406
118406 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = p1 $crystallographicInfo ::
118413 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::JM,98602:JM,98682:JM,139420
118412 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::CE,118413:CD,118417:CD,118442:CD,118446:JM,118426
118417 :: CALL :: call :: Ljava/util/Iterator :: v5 = p2 $atomList .iterator()::JM,118426:JM,118446
118422 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,118426:JM,118446
118427 :: CALL :: call :: Ljava/lang/String :: v13 = v11.getChainID()::JM,118440:CL,64429
118426 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,118441
118431 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $seqRes .getChainID()::JM,118440:CL,64429
118435 :: CALL :: call :: Z :: v17 = v13.equals(v15)::JM,118440
118441 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,118413
118440 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 41::CD,118441:CD,118442:CD,118446:JM,118426
118442 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,118426:JM,118446
118446 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,118422:CD,118426:CD,118427:CD,118431:CD,118435:CD,118440:CD,118449:CD,118454:CD,118458:CD,118463:CD,118468:CD,118472:CD,118477:CD,118485:JM,118446
118449 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
118454 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $seqRes .getChainID()::CL,64429
118458 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v19.append(v23)::
118463 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(< to ATOM chains!, si...))::
118468 :: CALL :: call :: I :: v30 = p2 $atomList .size()::JM,118426:JM,118446
118472 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(v30)::JM,118426:JM,118446
118477 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
118485 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,118413
118503 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapSeqresRecords(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,118509:CD,118513:CD,118528:CD,118532:CD,118548:CD,118552:CD,118565:CD,118571
118509 :: CALL :: call :: Ljava/util/List :: v6 = p2 $seqRes .getAtomGroups()::CL,54331
118513 :: CALL :: call :: Ljava/util/List :: v8 = p1 $atomRes .getAtomGroups()::CL,54331
118528 :: CALL :: call :: I :: v18 = v8.size()::
118532 :: CALL :: call :: Ljava/lang/Integer :: v20 = valueOf(v18)::
118548 :: CALL :: call :: I :: v26 = v6.size()::
118552 :: CALL :: call :: Ljava/lang/Integer :: v28 = valueOf(v26)::
118565 :: CALL :: call :: Ljava/util/List :: v31 = p0 $this .trySimpleMatch(v6, v8)::JM,118571:CL,133887
118571 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 95::CD,118572:CD,118585:CD,118590:CD,118596:CD,118601:CD,118605
118572 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v31)::CL,87001
118585 :: CALL :: call :: Ljava/util/List :: v38 = p2 $seqRes .getAtomGroups(v36)::JM,118605:CL,54861
118590 :: CALL :: call :: I :: v40 = v38.size()::JM,118605
118596 :: CALL :: call :: Ljava/util/List :: v43 = p2 $seqRes .getAtomGroups(v41)::JM,118606:CL,54861
118601 :: CALL :: call :: I :: v45 = v43.size()::JM,118606
118605 :: PRED :: IF :: Z :: if (v40 >= #(1)) goto 218::CD,118606:CD,118664:CD,118669:CD,118673
118606 :: PRED :: IF :: Z :: if (v45 <= #(1)) goto 177::CD,118613:CD,118623:CD,118640:CD,118648
118613 :: CALL :: call :: Ljava/lang/Integer :: v81 = valueOf(v45)::
118623 :: CALL :: call :: V :: p0 $this .alignNucleotideChains(p2 $seqRes , p1 $atomRes )::CL,134351
118640 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v40)::
118648 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v45)::
118664 :: CALL :: call :: Ljava/util/List :: v48 = p1 $atomRes .getAtomGroups(v46)::JM,118673:CL,54861
118669 :: CALL :: call :: I :: v50 = v48.size()::JM,118673
118673 :: PRED :: IF :: Z :: if (v50 >= #(1)) goto 252::CD,118701:CD,118707
118701 :: CALL :: call :: Z :: v59 = p0 $this .alignProteinChains(v6, v57)::JM,118707:CL,134430
118707 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 293::CD,118708
118708 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v6)::CL,87001
118782 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setAtomGroups(java.util.List)::CD,118787:CD,118801:CD,118805:JM,118806
118787 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,118805:JM,118806
118792 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,118805
118797 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,94086
118801 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,118805
118805 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,118792:CD,118797:CD,118801:JM,118805
118806 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $groups ::
118820 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setChains(int,java.util.List)::CD,118826:CD,118840:CD,118844:CD,118848:CD,118856
118826 :: CALL :: call :: Ljava/util/Iterator :: v6 = p2 $chains .iterator()::JM,118844
118831 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,118844
118836 :: CALL :: call :: V :: v12.setStructure(p0 $this )::CL,104438
118840 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,118844
118845 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .models::
118844 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,118831:CD,118836:CD,118840:JM,118844
118848 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.remove(p1 $modelnr )::JM,118844
118853 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .models::
118856 :: CALL :: call :: V :: v17.add(p1 $modelnr , p2 $chains )::JM,118844
118877 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Compound.getMolId()::JM,153733:JM,163529:JM,163561
118876 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getMolId()::CE,118877:CD,118883
118880 :: EXPR :: reference :: I :: v3 = p0 $this .molId::DD,118883
118883 :: NORM :: compound :: I :: return v3::CF,118877
118885 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::CE,118886:CD,118890:CD,118896
118886 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::
118890 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .findChain(p1 $chainId , #(0))::JM,118896:CL,134698
118896 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,118886
118900 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setChains(java.util.List)::JM,118905
118905 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = p1 $chains ::
118911 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.addChain(org.biojava.nbio.structure.Chain)::CD,118919
118916 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .chains::
118919 :: CALL :: call :: Z :: v6 = v4.add(p1 $chain )::
118929 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::JM,140079
118928 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::CE,118929:CD,118933:CD,118939
118933 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChainByPDB(p1 $chainId , #(0))::JM,118939:CL,86542
118939 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,118929
118943 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getCompound()::CE,118944:CD,118950
118944 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.ChainImpl.getCompound()::JM,99049
118947 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v3 = p0 $this .mol::DD,118950
118950 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v3::CF,118944
118952 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.findMaxCompoundId(java.util.List)::CD,118960
118960 :: CALL :: call :: Ljava/lang/Object :: v6 = max(p1 $compounds , v3)::
118973 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolId(int)::JM,118978
118978 :: EXPR :: modify :: I :: p0 $this .molId = p1 $molId ::
118985 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.getChainId()::
118984 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getChainId()::CE,118985:CD,118991
118988 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,118991
118991 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,118985
118993 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::CE,118994:CD,118999:CD,119006
118994 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::
118999 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = p0 $this .findGroup(p1 $chainName , p2 $pdbResnum , #(0))::JM,119006:CL,134845
119006 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,118994
119011 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getGroups()::CE,119012:CD,119018
119012 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Site.getGroups()::JM,140224:JM,140309
119015 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,119018
119018 :: NORM :: compound :: Ljava/util/List :: return v3::CF,119012
119021 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::JM,99647
119020 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::CE,119021:CD,119027
119024 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc1::DD,119027
119027 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,119021
119029 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::CE,119030:CD,119036
119030 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::JM,99657
119033 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc2::DD,119036
119036 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,119030
119083 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::CE,119084:CD,119093:CD,119102:CD,119108:CD,119112:CD,119116:CD,119121:JM,93426:JM,93420:JM,93423:CD,119131:CD,119136:CD,119140:CD,119157:CD,119162:CD,119167:CD,119172:CD,119177:CD,119182:CD,119187:CD,119192:CD,119201:CD,119206:CD,119207:JM,119094:JM,119098
119084 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::JM,154407:JM,154441
119093 :: PRED :: IF :: Z :: if (p6 $iCode  == #(null)) goto 19::CD,119094:CD,119098:CD,119207:JM,119093
119094 :: CALL :: call :: Z :: v11 = p6 $iCode .isEmpty()::JM,119093:JM,119207:JM,119094:JM,119098
119098 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 19::CF,119207
119102 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v17 = v15.getChainByPDB(p4 $chainID )::CL,118928
119108 :: CALL :: call :: I :: v20 = parseInt(p5 $resSeq )::JM,119093:JM,119207:JM,119094:JM,119098
119112 :: CALL :: call :: Ljava/lang/Integer :: v22 = valueOf(v20)::JM,119098
119116 :: CALL :: call :: C :: v24 = v14.charAt(#(0))::
119121 :: CALL :: call :: Ljava/lang/Character :: v26 = valueOf(v24)::
119131 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = v17.getGroupByPDB(v18)::CL,105813
119136 :: CALL :: call :: Z :: v31 = p2 $altLoc .isEmpty()::JM,119136:JM,119140
119141 :: CALL :: call :: C :: v33 = p2 $altLoc .charAt(#(0))::JM,119136:JM,119140
119140 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 158::CD,119141:CD,119150:JM,119136:JM,119140
119150 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v37 = v29.getAltLocGroup(v35)::CL,134992
119157 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
119162 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p2 $altLoc )::JM,119136:JM,119140
119167 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in group ))::
119172 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v49.append(p5 $resSeq )::JM,119093:JM,119207:JM,119094:JM,119098
119177 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(v14)::JM,119098
119182 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v53.append(#( of chain ))::
119187 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p4 $chainID )::JM,119093:JM,119207:JM,119094:JM,119098
119192 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::JM,119098
119201 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v38.getAtom(p1 $name )::JM,119206:CL,54507
119207 :: EXPR :: assign :: null :: PHI v14 = p6 $iCode , #( )::
119206 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v40::DD,119084
119302 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.toString()::CD,119306:CD,119307:CD,119315:CD,119320:CD,119324:CD,119325:CD,119333:CD,119341:CD,119346:CD,119351:CD,119355:CD,119356:CD,119364:CD,119372:CD,119377:CD,119382:CD,119386:CD,119387:CD,119395:CD,119403:CD,119408:CD,119413:CD,119417:CD,119418:CD,119426:CD,119434:CD,119439:CD,119444:CD,119448:CD,119449:CD,119457:CD,119465:CD,119470:CD,119475:CD,119479:CD,119480:CD,119488:CD,119496:CD,119501:CD,119506:CD,119510:CD,119511:CD,119519:CD,119524:CD,119528:CD,119529:CD,119537:CD,119545:CD,119550:CD,119555:CD,119559:CD,119560:CD,119568:CD,119576:CD,119581:CD,119586:CD,119590:CD,119591:CD,119599:CD,119607:CD,119612:CD,119617:CD,119621:CD,119622:CD,119630:CD,119638:CD,119643:CD,119648:CD,119652:CD,119653:CD,119661:CD,119669:CD,119674:CD,119679:CD,119683:CD,119684:CD,119692:CD,119700:CD,119705:CD,119710:CD,119714:CD,119715:CD,119723:CD,119728
119307 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([LINK Record:))::
119306 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
119315 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
119320 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
119325 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
119324 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
119333 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Name: ))::
119338 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .name1::
119341 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
119346 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
119351 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
119355 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
119356 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
119364 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Alt Loc: ))::
119369 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .altLoc1::
119372 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
119377 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
119382 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
119387 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
119386 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
119395 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Res name: ))::
119400 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .resName1::
119403 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
119408 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
119413 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
119417 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
119418 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
119426 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(	Chain ID: ))::
119431 :: EXPR :: reference :: Ljava/lang/String :: v63 = p0 $this .chainID1::
119434 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(v63)::
119439 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(#())::
119444 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toString()::
119449 :: CALL :: call :: Ljava/lang/String :: v72 = valueOf(v69)::
119448 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
119457 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v70.append(#(	Res Seq: ))::
119462 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .resSeq1::
119465 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(v77)::
119470 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#())::
119475 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
119479 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
119480 :: CALL :: call :: Ljava/lang/String :: v86 = valueOf(v83)::
119488 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v84.append(#(	Ins Code: ))::
119493 :: EXPR :: reference :: Ljava/lang/String :: v91 = p0 $this .iCode1::
119496 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(v91)::
119501 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(#())::
119506 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
119511 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v97)::
119510 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
119519 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(#(Atom 2:))::
119524 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
119529 :: CALL :: call :: Ljava/lang/String :: v109 = valueOf(v106)::
119528 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v107 = new java.lang.StringBuilder::
119537 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v107.append(#(	Name: ))::
119542 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .name2::
119545 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v112.append(v113)::
119550 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#())::
119555 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
119559 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
119560 :: CALL :: call :: Ljava/lang/String :: v122 = valueOf(v119)::
119568 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v120.append(#(	Alt Loc: ))::
119573 :: EXPR :: reference :: Ljava/lang/String :: v126 = p0 $this .altLoc2::
119576 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v125.append(v126)::
119581 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v128.append(#())::
119586 :: CALL :: call :: Ljava/lang/String :: v132 = v130.toString()::
119591 :: CALL :: call :: Ljava/lang/String :: v135 = valueOf(v132)::
119590 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
119599 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(#(	Res name: ))::
119604 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .resName2::
119607 :: CALL :: call :: Ljava/lang/StringBuilder :: v141 = v138.append(v139)::
119612 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v141.append(#())::
119617 :: CALL :: call :: Ljava/lang/String :: v145 = v143.toString()::
119621 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v146 = new java.lang.StringBuilder::
119622 :: CALL :: call :: Ljava/lang/String :: v148 = valueOf(v145)::
119630 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v146.append(#(	Chain ID: ))::
119635 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .chainID2::
119638 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(v152)::
119643 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(#())::
119648 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
119653 :: CALL :: call :: Ljava/lang/String :: v161 = valueOf(v158)::
119652 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
119661 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(#(	Res Seq: ))::
119666 :: EXPR :: reference :: Ljava/lang/String :: v165 = p0 $this .resSeq2::
119669 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v164.append(v165)::
119674 :: CALL :: call :: Ljava/lang/StringBuilder :: v169 = v167.append(#())::
119679 :: CALL :: call :: Ljava/lang/String :: v171 = v169.toString()::
119683 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v172 = new java.lang.StringBuilder::
119684 :: CALL :: call :: Ljava/lang/String :: v174 = valueOf(v171)::
119692 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v172.append(#(	Ins Code: ))::
119697 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .iCode2::
119700 :: CALL :: call :: Ljava/lang/StringBuilder :: v180 = v177.append(v178)::
119705 :: CALL :: call :: Ljava/lang/StringBuilder :: v182 = v180.append(#())::
119710 :: CALL :: call :: Ljava/lang/String :: v184 = v182.toString()::
119715 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v184)::
119714 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::
119723 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v185.append(#(]))::
119728 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
119821 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Bond :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::JM,99813
119820 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::CE,119821:CD,119837:CD,119859:CD,119869:JM,135122:JM,135125:JM,135128:JM,135119:CD,119879:CD,119883:CD,119894:CD,119910
119837 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v14 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v8, v10, v12)::CL,119083
119859 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v22 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v16, v18, v20)::CL,119083
119869 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v37 = new org.biojava.nbio.structure.BondImpl::DD,119883
119879 :: CALL :: call :: V :: v40.addSSBond(v37)::CL,135197
119883 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return v37::DD,119821
119894 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $disulfideBond .toString()::CL,135214
119910 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return #(null)::DD,119821
119937 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formPeptideBonds()::CD,119944:CD,119948:CD,120035:CD,120039
119944 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,120039:CL,48869
119948 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,120039
119953 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,120039
119958 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,120033:JM,119968:JM,119976:CL,86992
119963 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,120033:JM,119968:JM,119976
119969 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,119970:CD,119971:CD,119976:CD,119977:CF,120028
119968 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,119969
119971 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,120033:JM,119968:JM,119976
119970 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,120033:JM,119968:JM,119976
119977 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,119979:CD,119985:CD,119986:CD,119992:CD,119996:JM,120033:JM,119968:JM,119976
119976 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,119977
119979 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,120033:JM,119968:JM,119976
119985 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,120033:JM,119968:JM,119976
119986 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,120033:JM,119968:JM,119976
119992 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,119996:CL,64358
119997 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,120001:CL,64358
119996 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,119997:CD,120001:CF,120028
120001 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,120003:CD,120007:CD,120011
120003 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v29.getC()::JM,120011:CL,135510
120007 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v33.getN()::JM,120012:CL,135522
120011 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,120012:CF,120028
120012 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,120014:CD,120019:CD,120020
120014 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,120019:CL,104682
120019 :: EXPR :: assign :: Z :: v46 = v44 > #(1.8 d)::DD,120020
120020 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,135122:JM,135125:JM,135128:JM,135119:CF,120028
120029 :: CALL :: call :: I :: v17 = v15.size()::JM,120033:JM,119968:JM,119976
120028 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,120041
120033 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,120034
120035 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,120039
120034 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,119963:CD,119968:CD,119969:CD,120028:CD,120029:CD,120033:CD,120041:JM,119976:JM,120039
120039 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,119953:CD,119958:CD,120029:CD,120033:CD,120034:CD,120035:CD,120041:JM,120039
120041 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,120033:JM,119968:JM,119976:DD,119970:DD,119985:DD,120028:DD,120034
120090 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formNucleotideBonds()::CD,120097:CD,120101:CD,120188:CD,120192
120097 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,120192:CL,48869
120101 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,120192
120106 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,120192
120111 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,120129:JM,120121:JM,120186:CL,86992
120116 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,120129:JM,120121:JM,120186
120121 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,120122
120123 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,120129:JM,120121:JM,120186
120122 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,120123:CD,120124:CD,120129:CD,120130:CF,120181
120124 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,120129:JM,120121:JM,120186
120129 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,120130
120130 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,120132:CD,120138:CD,120139:CD,120145:CD,120149:JM,120129:JM,120121:JM,120186
120132 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,120129:JM,120121:JM,120186
120139 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,120129:JM,120121:JM,120186
120138 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,120129:JM,120121:JM,120186
120145 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,120149:CL,64358
120149 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,120150:CD,120154:CF,120181
120150 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,120154:CL,64358
120154 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,120156:CD,120160:CD,120164
120156 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v33.getP()::JM,120164:CL,135534
120160 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v29.getO3Prime()::JM,120165:CL,135546
120165 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,120167:CD,120172:CD,120173
120164 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,120165:CF,120181
120167 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,120172:CL,104682
120173 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,135122:JM,135125:JM,135128:JM,135119:CF,120181
120172 :: EXPR :: assign :: Z :: v46 = v44 > #(2.1 d)::DD,120173
120181 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,120194
120182 :: CALL :: call :: I :: v17 = v15.size()::JM,120129:JM,120121:JM,120186
120187 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,120116:CD,120121:CD,120122:CD,120181:CD,120182:CD,120186:CD,120194:JM,120129:JM,120192
120186 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,120187
120188 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,120192
120192 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,120106:CD,120111:CD,120182:CD,120186:CD,120187:CD,120188:CD,120194:JM,120192
120194 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,120129:JM,120121:JM,120186:DD,120123:DD,120138:DD,120181:DD,120187
120243 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formIntraResidueBonds()::CD,120250:CD,120254:CD,120395:CD,120399
120250 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,120399:CL,48869
120254 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,120399
120259 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,120399
120264 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,120277:JM,120394:CL,54331
120268 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,120277:JM,120394
120273 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,120277:JM,120394
120277 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::
120278 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v24 = v22.getResidueNumber()::JM,120282:CL,64358
120282 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 71::CF,120284:CD,120288:CD,120293:CD,120297:CD,120312:CD,120316:CD,120317:CD,120385:CD,120389
120284 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::JM,120389
120288 :: CALL :: call :: Z :: v29 = v26.add(v22)::
120293 :: CALL :: call :: Ljava/util/List :: v31 = v22.getAltLocs()::JM,120306:JM,120316:CL,104462
120297 :: CALL :: call :: Ljava/util/Iterator :: v33 = v31.iterator()::JM,120306:JM,120316
120302 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,120306:JM,120316
120307 :: CALL :: call :: Z :: v40 = v26.add(v38)::
120306 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::
120312 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,120306:JM,120316
120317 :: CALL :: call :: Ljava/util/Iterator :: v42 = v26.iterator()::JM,120389
120316 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 109::CD,120302:CD,120306:CD,120307:CD,120312:JM,120316:JM,120389
120322 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,120389
120331 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = getChemComp(v49)::CL,120570
120335 :: CALL :: call :: Ljava/util/List :: v53 = v51.getBonds()::JM,120384:CL,135558
120339 :: CALL :: call :: Ljava/util/Iterator :: v55 = v53.iterator()::JM,120384
120344 :: CALL :: call :: Ljava/lang/Object :: v59 = v55.next()::JM,120384
120353 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v64 = v47.getAtom(v62)::JM,120367:CL,54507
120362 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v68 = v47.getAtom(v66)::JM,120368:CL,54507
120367 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 261::CD,120368:JM,120384
120368 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 261::JM,135122:JM,135125:JM,135128:JM,135119:JM,120384
120380 :: CALL :: call :: Z :: v57 = v55.hasNext()::JM,120384
120385 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,120389
120384 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 192::CD,120344:CD,120353:CD,120362:CD,120367:CD,120380:JM,120384:JM,120389
120389 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 153::CD,120322:CD,120331:CD,120335:CD,120339:CD,120380:CD,120384:CD,120385:JM,120389:JM,120277:JM,120394
120390 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,120277:JM,120394
120395 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,120399
120394 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 48::CD,120273:CD,120277:CD,120278:CD,120282:CD,120390:JM,120394:JM,120399
120399 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,120259:CD,120264:CD,120268:CD,120390:CD,120394:CD,120395:JM,120399
120460 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.trimBondLists()::CD,120467:CD,120471:CD,120541:CD,120545
120467 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,120545:CL,48869
120471 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,120545
120476 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,120545
120481 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,120540:CL,54331
120485 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,120540
120490 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,120540
120495 :: CALL :: call :: Ljava/util/List :: v24 = v22.getAtoms()::JM,120535:CL,114287
120499 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,120535
120504 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.next()::JM,120535
120509 :: CALL :: call :: Ljava/util/List :: v33 = v31.getBonds()::JM,120513:CL,135567
120513 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 123::CD,120514:CD,120518:CD,120522:JM,120535
120514 :: CALL :: call :: Ljava/util/List :: v36 = v31.getBonds()::JM,120522:CL,135567
120518 :: CALL :: call :: I :: v38 = v36.size()::JM,120522
120523 :: CALL :: call :: Ljava/util/List :: v40 = v31.getBonds()::JM,120527:CL,135567
120522 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 123::CD,120523:CD,120527:CD,120528:JM,120535
120527 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
120528 :: CALL :: call :: V :: v41.trimToSize()::
120531 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,120535
120535 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 73::CD,120504:CD,120509:CD,120513:CD,120531:JM,120535:JM,120540
120536 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,120540
120541 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,120545
120540 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 46::CD,120490:CD,120495:CD,120499:CD,120531:CD,120535:CD,120536:JM,120540:JM,120545
120545 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,120476:CD,120481:CD,120485:CD,120536:CD,120540:CD,120541:JM,120545
120571 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::JM,113813:JM,114045
120570 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::CE,120571:CD,120574:CD,120578:CD,120582:CD,120584:CD,120589:CD,120590
120574 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::JM,120584:JM,120589
120578 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::JM,120584:JM,120589
120582 :: EXPR :: reference :: Lorg/biojava/nbio/core/util/SoftHashMap :: v7 = org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.cache::JM,120584:JM,120589
120584 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,120584:JM,120589
120589 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,120590:JM,120598:DD,120620
120590 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 57::CD,120593:CD,120598:CD,120602:CD,120607:CD,120612:CD,120620:CD,120623:CD,120628:CD,120633:CD,120644:CD,120648:CD,120653:CD,120663:CD,120676
120593 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
120598 :: CALL :: call :: Ljava/lang/String :: v41 = v10.getThree_letter_code()::JM,120598
120602 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v38.append(v41)::
120607 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#( read from cache))::
120612 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
120620 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v10::DD,120571
120623 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
120628 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(v6)::JM,120584:JM,120589
120633 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( read from provider ))::
120644 :: CALL :: call :: Ljava/lang/String :: v25 = v23.getCanonicalName()::
120648 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::
120653 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
120663 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v33 = v31.getChemComp(v6)::JM,120676:CL,135691
120676 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v33::DD,120571
120701 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::CE,120702:CD,120708
120702 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::JM,100097:JM,99926
120705 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,120708
120708 :: NORM :: compound :: Ljava/util/List :: return v3::CF,120702
120711 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::JM,173897:JM,173923
120710 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::CE,120711:CD,120717
120714 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,120717
120717 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,120711
120719 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCharge(short)::JM,120724
120724 :: EXPR :: modify :: S :: p0 $this .charge = p1 $inputCharge ::
120730 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.getNextGroup(int,int,int)::CD,120745:CD,120754:CD,120759:CD,120763:JM,120783
120745 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v30 = new java.util.NoSuchElementException::
120754 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,120763:CL,54314
120759 :: CALL :: call :: I :: v13 = v11.size()::JM,120763
120763 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 59::CD,120765:CD,120773:CD,120779:CD,120783:JM,120763
120765 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = p0 $this .getNextGroup(v27, #(0), #(0))::CL,120730
120773 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,120763:JM,120783
120779 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,120783:CL,135909
120783 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 92::CD,120785:CD,120805
120785 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v26 = p0 $this .getNextGroup(p1 $tmp_model , v23, #(0))::CL,120730
120805 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v21 = v16.getAtomGroup(v19)::CL,135922
120841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::CE,120842:CD,120851:CD,120855:JM,120869:JM,120889
120842 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::JM,100651:JM,120878:JM,120898
120851 :: CALL :: call :: I :: v8 = v6.nrModels()::JM,120855:CL,87301
120855 :: PRED :: IF :: Z :: if (p1 $tmp_model  < v8) goto 16::CD,120856:CD,120860:CD,120865:CD,120869
120856 :: NORM :: compound :: Z :: return #(0)::DD,120842
120860 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,120869:CL,54314
120865 :: CALL :: call :: I :: v13 = v11.size()::JM,120869
120869 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 51::CD,120871:CD,120878:CD,120879:CD,120885:CD,120889:JM,120869
120871 :: CALL :: call :: Z :: v26 = p0 $this .hasSubGroup(v24, #(0), #(0))::JM,120878:CL,120841
120879 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,120869:JM,120889
120878 :: NORM :: compound :: Z :: return v26::DD,120842
120885 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,120889:CL,135909
120889 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 87::CD,120891:CD,120898:CD,120900
120891 :: CALL :: call :: Z :: v23 = p0 $this .hasSubGroup(p1 $tmp_model , v20, #(0))::JM,120898:CL,120841
120899 :: NORM :: compound :: Z :: return #(0)::DD,120842
120898 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 87::CD,120899:CD,120900
120900 :: NORM :: compound :: Z :: return #(1)::DD,120842
120943 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::CE,120944:CD,120947:CD,120951:CD,120956:CD,120960
120944 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::JM,100820
120947 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainDescriptionFileName()::CL,136063
120951 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
120956 :: CALL :: call :: Z :: v8 = v5.exists()::JM,120960
120960 :: NORM :: compound :: Z :: return v8::DD,120944
120967 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainDescriptionFile()::CD,120972:CD,120981:CD,120985:CD,120990
120972 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-descripti...))::CL,136098
120981 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainDescriptionFileName()::CL,136063
120985 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
120990 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,136177
121010 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile()::CD,121014:CD,121015:CD,121027:CD,121028:CD,121042
121015 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainDescriptionFileName()::CL,136063
121014 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
121027 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,121028
121028 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
121042 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile(v9)::CL,136394
121059 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainListInstalled()::CD,121066:CD,121070:CD,121083:CD,121095:CD,121106:CD,121118
121063 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainList::JM,121070
121066 :: CALL :: call :: Z :: v5 = v3.get()::JM,121070
121070 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,121072:CD,121076:CD,121100:CD,121126
121072 :: CALL :: call :: Z :: v8 = p0 $this .domainListFileAvailable()::JM,121076:CL,137122
121077 :: CALL :: call :: V :: p0 $this .downloadDomainListFile()::CL,137146
121076 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,121077
121083 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
121092 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainList::
121095 :: CALL :: call :: V :: v16.set(#(0))::
121100 :: CALL :: call :: V :: p0 $this .parseCathDomainList()::CL,137189
121106 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
121115 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainList::
121118 :: CALL :: call :: V :: v24.set(#(0))::
121123 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainList::JM,121126
121126 :: CALL :: call :: V :: v26.set(#(1))::JM,121126
121143 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::JM,100922
121142 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::CE,121143:CD,121146:CD,121150:CD,121155:CD,121159
121146 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomallFileName()::CL,137238
121150 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
121155 :: CALL :: call :: Z :: v8 = v5.exists()::JM,121159
121159 :: NORM :: compound :: Z :: return v8::DD,121143
121166 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomallFile()::CD,121171:CD,121180:CD,121184:CD,121189
121171 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-boundarie...))::CL,136098
121180 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomallFileName()::CL,137238
121184 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
121189 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,136177
121209 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall()::CD,121213:CD,121214:CD,121226:CD,121227:CD,121241
121213 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
121214 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomallFileName()::CL,137238
121227 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
121226 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,121227
121241 :: CALL :: call :: V :: p0 $this .parseCathDomall(v9)::CL,137273
121258 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.releaseReferences()::CD,121264:CD,121266:CD,121270:CD,121304:CD,121308
121264 :: EXPR :: reference :: Ljava/util/Map :: v3 = org.biojava.nbio.structure.ecod.EcodFactory.versionedEcodDBs::JM,121308:JM,121279
121266 :: CALL :: call :: Ljava/util/Set :: v5 = v3.entrySet()::JM,121308:JM,121279
121270 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,121308:JM,121279
121275 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,121308:JM,121279
121279 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,121284
121280 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.getValue()::JM,121284
121285 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.get()::JM,121289
121284 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,121289
121289 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 73::CD,121301:JM,121308:JM,121279
121301 :: CALL :: call :: V :: v7.remove()::
121304 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,121308:JM,121279
121308 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 24::CD,121275:CD,121279:CD,121280:CD,121284:CD,121285:CD,121289:CD,121304:JM,121308
121408 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getVersion()::CD,121412
121412 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,138039
121432 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.indexDomains()::CD,121455:CD,121459:CD,121471:CD,121545:CD,121549
121452 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,121455
121455 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::CD,121456:CF,121459
121456 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,138039
121459 :: NORM :: declaration :: Ljava/util/HashMap :: v13 = new java.util.HashMap::DD,121465
121465 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v13::
121468 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .allDomains::JM,121480:JM,121549
121471 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,121480:JM,121549
121476 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,121480:JM,121549
121481 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getPdbId()::JM,121485:CL,104492
121480 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::
121485 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 122::CD,121486:CD,121490
121486 :: CALL :: call :: Ljava/lang/String :: v29 = v25.getDomainId()::JM,121491:JM,121490:JM,121495:CL,101423
121491 :: CALL :: call :: Z :: v31 = v29.isEmpty()::JM,121491:JM,121495
121490 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 122::CD,121491:CD,121495
121495 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 122::CD,121498:CD,121503
121498 :: CALL :: call :: Ljava/util/regex/Matcher :: v34 = v32.matcher(v29)::
121503 :: CALL :: call :: Ljava/lang/String :: v37 = v34.group(#(1))::
121511 :: CALL :: call :: Z :: v41 = v39.containsKey(v38)::JM,121516
121516 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 152::CF,121527:CD,121520:CD,121525:CD,121534:CD,121587
121520 :: CALL :: call :: Ljava/lang/Object :: v44 = v42.get(v38)::JM,121525
121525 :: EXPR :: assign :: Ljava/lang/Object :: v45 = CHECKCAST v44::DD,121587
121527 :: NORM :: declaration :: Ljava/util/LinkedList :: v46 = new java.util.LinkedList::DD,121587
121534 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.put(v38, v46)::
121540 :: CALL :: call :: Z :: v53 = v51.add(v25)::
121545 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,121480:JM,121549
121549 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 67::CD,121476:CD,121480:CD,121481:CD,121485:CD,121511:CD,121516:CD,121540:CD,121545:CD,121587:JM,121549
121587 :: EXPR :: assign :: null :: PHI v51 = v45, v46::
121795 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::CE,121796:CD,121800:CD,121805:CD,121809:CD,121817:CD,121822:CD,121827:CD,121832:CD,121836:CD,121841:CD,121849:CD,121853:CD,121857:CD,121861:CD,121865
121796 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::JM,101442
121800 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $scopId .trim()::
121805 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
121809 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
121817 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(getDomainByScopID?scopId=))::
121822 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(v5)::
121827 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#(&version=))::
121832 :: CALL :: call :: Ljava/lang/String :: v21 = p0 $this .getScopVersion()::CL,74956
121836 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v19.append(v21)::
121841 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
121849 :: CALL :: call :: Ljava/io/InputStream :: v28 = getInputStream(v6)::CL,75066
121853 :: CALL :: call :: Ljava/lang/String :: v30 = convertStreamToString(v28)::JM,121861:JM,121865:CL,65816
121857 :: CALL :: call :: Ljava/lang/String :: v32 = v30.trim()::JM,121861:JM,121865
121861 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,121861:JM,121865
121865 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 80::CD,121866:CD,121870:CD,121871
121866 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v38 = getScopDomainFromXML(v30)::JM,121870:CL,138194
121871 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,121796
121870 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v38::DD,121796
121902 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.fromString(java.lang.String)::CD,121906:CD,121921:CD,121932
121906 :: PRED :: IF :: Z :: if (p1 $pdb_code  != #(null)) goto 6::CD,121912:CD,121916:CD,121944:CD,121948:CD,121975
121912 :: CALL :: call :: I :: v7 = parseInt(p1 $pdb_code )::JM,121906
121916 :: CALL :: call :: Ljava/lang/Integer :: v9 = valueOf(v7)::
121921 :: CALL :: call :: [Ljava/lang/String :: v13 = p1 $pdb_code .split(#((?<=\d)(?=\D)|(?<=\D)...))::
121928 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v13[#(0)]::
121932 :: CALL :: call :: I :: v19 = parseInt(v17)::
121940 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v13[#(1)]::DD,121975
121944 :: CALL :: call :: V :: v4.setSeqNum(v25)::CL,95873
121949 :: CALL :: call :: V :: v4.setInsCode(#(null))::CL,95884
121948 :: PRED :: IF :: Z :: if (v26 != #(null)) goto 80::CD,121949:CD,121954:CD,121958
121954 :: CALL :: call :: I :: v29 = v26.length()::JM,121958
121959 :: CALL :: call :: C :: v31 = v26.charAt(#(0))::
121958 :: PRED :: IF :: Z :: if (v29 <= #(0)) goto 99::CD,121959:CD,121968
121968 :: CALL :: call :: V :: v4.setInsCode(v33)::CL,95884
121975 :: EXPR :: assign :: null :: PHI v26 = #(null), #(null), v23::DD,121948:JM,121958
121998 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.flagLoading(java.lang.String)::CD,122006:CD,122011
122006 :: CALL :: call :: Z :: v6 = v4.contains(p1 $name )::JM,122011
122011 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 24::CD,122015
122015 :: CALL :: call :: Z :: v10 = v8.add(p1 $name )::
122027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructureById(java.lang.String)::CD,122032:CD,122037
122032 :: CALL :: call :: Ljava/io/InputStream :: v5 = p0 $this .getInputStream(p1 $pdbId )::CL,138268
122037 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getStructure(v5)::CL,54201:CL,138356
122048 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.flagLoadingFinished(java.lang.String)::CD,122056
122056 :: CALL :: call :: Z :: v6 = v4.remove(p1 $name )::
122075 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentEnd()::CD,122082:CD,122141:CD,122148:CD,122269:CD,122273:CD,122291:CD,122295:CD,122341:CD,122345:CD,122361:CD,122365:CD,122381:CD,122385:CD,122691:CD,122695:CD,122718:CD,122724:CD,122728:CD,122735:CD,122739:CD,122919:CD,122922:CD,122925:CD,122932:CD,123039:CD,123043:CD,123044:CD,123048:CD,123079:CD,123084:CD,123089:CD,123097:CD,123101
122079 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .current_chain::DD,122082
122082 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 57::CD,122089:CD,122103:CD,122108
122089 :: CALL :: call :: V :: v12.addGroup(v13)::CL,87059
122103 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = isKnownChain(v17, v18)::JM,122108:CL,138427
122109 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .current_model::
122108 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 78::CD,122115
122112 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v22 = p0 $this .current_chain::
122115 :: CALL :: call :: Z :: v24 = v21.add(v22)::
122141 :: CALL :: call :: V :: v25.addModel(v26)::CL,86312
122145 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .structAsyms::JM,122273:JM,122157
122148 :: CALL :: call :: Ljava/util/Iterator :: v30 = v28.iterator()::JM,122273:JM,122157
122153 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,122273:JM,122157
122157 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,122233
122185 :: CALL :: call :: Ljava/lang/Object :: v49 = v43.put(v45, v47)::
122195 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v53 = p0 $this .getEntityChain(v51)::CL,138472
122200 :: CALL :: call :: Ljava/lang/Object :: v55 = v53.clone()::CL,138541
122205 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .removeSeqResHeterogeneity(v56)::CL,138722
122214 :: CALL :: call :: V :: v58.setChainID(v60)::CL,86912
122218 :: EXPR :: reference :: Ljava/util/List :: v62 = p0 $this .seqResChains::
122221 :: CALL :: call :: Z :: v64 = v62.add(v58)::
122228 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
122233 :: CALL :: call :: Ljava/lang/String :: v70 = v35.getId()::JM,122233
122237 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
122242 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( ))::
122247 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v58)::
122252 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(#(<))::
122257 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
122265 :: CALL :: call :: V :: p0 $this .addCompounds(v35)::CL,138843
122269 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,122273:JM,122157
122273 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 104::CD,122153:CD,122157:CD,122185:CD,122195:CD,122200:CD,122205:CD,122214:CD,122221:CD,122228:CD,122233:CD,122237:CD,122242:CD,122247:CD,122252:CD,122257:CD,122265:CD,122269:JM,122273
122291 :: CALL :: call :: Z :: v93 = v91.isAlignSeqRes()::JM,122295:CL,98545
122295 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 321::CD,122299:CD,122303:CD,122333
122299 :: CALL :: call :: Z :: v96 = v94.isHeaderOnly()::JM,122303:CL,82926
122303 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 321::CD,122310:CD,122333
122310 :: CALL :: call :: V :: p0 $this .alignSeqRes()::CL,139383
122333 :: CALL :: call :: V :: storeUnAlignedSeqRes(v100, v101, v104)::CL,98632
122338 :: EXPR :: reference :: Ljava/util/Map :: v110 = p0 $this .asymStrandId::JM,122345
122341 :: CALL :: call :: Z :: v112 = v110.isEmpty()::JM,122345
122345 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 382::
122352 :: EXPR :: reference :: Ljava/util/Map :: v116 = p0 $this .asymId2StrandIdFromAtomSites::DD,122355
122355 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v116::
122358 :: EXPR :: reference :: Ljava/util/Map :: v117 = p0 $this .asymId2StrandIdFromAtomSites::JM,122365
122361 :: CALL :: call :: Z :: v119 = v117.isEmpty()::JM,122365
122365 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 413::
122372 :: EXPR :: reference :: Ljava/util/Map :: v123 = p0 $this .asymStrandId::DD,122375
122375 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v123::
122381 :: CALL :: call :: Z :: v126 = v124.isUseInternalChainId()::JM,122385:CL,139625
122385 :: PRED :: IF :: Z :: if (v126 != #(0)) goto 845::CD,122603:CD,122607:CD,122683:CD,122687:CD,123111:CD,123114
122390 :: CALL :: call :: Ljava/util/List :: v170 = v168.getModel(v257)::JM,122408:JM,122590:CL,54314
122395 :: NORM :: declaration :: Ljava/util/ArrayList :: v171 = new java.util.ArrayList::
122399 :: CALL :: call :: Ljava/util/Iterator :: v174 = v170.iterator()::JM,122408:JM,122590
122404 :: CALL :: call :: Ljava/lang/Object :: v178 = v174.next()::JM,122408:JM,122590
122409 :: EXPR :: reference :: Ljava/util/Map :: v180 = p0 $this .asymId2StrandIdFromAtomSites::JM,122425:JM,122585
122408 :: EXPR :: assign :: Ljava/lang/Object :: v179 = CHECKCAST v178::
122412 :: CALL :: call :: Ljava/util/Set :: v182 = v180.keySet()::JM,122425:JM,122585
122416 :: CALL :: call :: Ljava/util/Iterator :: v184 = v182.iterator()::JM,122425:JM,122585
122421 :: CALL :: call :: Ljava/lang/Object :: v188 = v184.next()::JM,122425:JM,122585
122425 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::JM,122435
122426 :: CALL :: call :: Ljava/lang/String :: v191 = v179.getChainID()::JM,122435:CL,64429
122430 :: CALL :: call :: Z :: v193 = v191.equals(v189)::JM,122435
122435 :: PRED :: IF :: Z :: if (v193 == #(0)) goto 795::CF,123109:CD,122439:CD,122452:CD,122456:CD,122460:CD,122477:CD,122481:CD,122485:CD,122489:CD,122508:CD,122512:CD,122513:CD,122517:CD,122536:CD,122540:CD,122545:CD,122550:CD,122581:CD,122585:CD,123106:CD,123107:CD,123110
122439 :: CALL :: call :: Ljava/lang/Object :: v196 = v194.get(v189)::
122452 :: CALL :: call :: Ljava/util/List :: v203 = v179.getAtomGroups()::CL,54331
122456 :: CALL :: call :: I :: v205 = v203.size()::
122460 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
122477 :: CALL :: call :: V :: v179.setChainID(v197)::CL,86912
122481 :: CALL :: call :: V :: v179.setInternalChainID(v189)::CL,139634
122485 :: CALL :: call :: Ljava/util/List :: v213 = v179.getAtomGroups()::JM,122512:CL,54331
122489 :: CALL :: call :: Ljava/util/Iterator :: v215 = v213.iterator()::JM,122512
122494 :: CALL :: call :: Ljava/lang/Object :: v219 = v215.next()::JM,122512
122499 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v222 = v220.getResidueNumber()::JM,122503:CL,64358
122503 :: PRED :: IF :: Z :: if (v222 == #(null)) goto 644::CF,123106:CD,122504
122504 :: CALL :: call :: V :: v222.setChainId(v197)::CL,86497
122508 :: CALL :: call :: Z :: v217 = v215.hasNext()::JM,122512
122513 :: CALL :: call :: Ljava/util/List :: v225 = v179.getSeqResGroups()::JM,122540:CL,86992
122512 :: PRED :: IF :: Z :: if (v217 != #(0)) goto 611::CD,122494:CD,122499:CD,122503:CD,122508:CD,123106:JM,122512
122517 :: CALL :: call :: Ljava/util/Iterator :: v227 = v225.iterator()::JM,122540
122522 :: CALL :: call :: Ljava/lang/Object :: v231 = v227.next()::JM,122540
122527 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v234 = v232.getResidueNumber()::JM,122531:CL,64358
122531 :: PRED :: IF :: Z :: if (v234 == #(null)) goto 704::CF,123107:CD,122532
122532 :: CALL :: call :: V :: v234.setChainId(v197)::CL,86497
122536 :: CALL :: call :: Z :: v229 = v227.hasNext()::JM,122540
122540 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 671::CD,122522:CD,122527:CD,122531:CD,122536:CD,123107:JM,122540
122545 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v240 = isKnownChain(v238, v171)::JM,122550:CL,138427
122551 :: CALL :: call :: Z :: v242 = v171.add(v179)::
122550 :: PRED :: IF :: Z :: if (v240 != #(null)) goto 744::CD,122551:CD,122557:CD,122561:CD,122575:CD,122579:CD,123108:CD,123110
122557 :: CALL :: call :: Ljava/util/List :: v244 = v179.getAtomGroups()::JM,122579:CL,54331
122561 :: CALL :: call :: Ljava/util/Iterator :: v246 = v244.iterator()::JM,122579
122566 :: CALL :: call :: Ljava/lang/Object :: v250 = v246.next()::JM,122579
122571 :: CALL :: call :: V :: v240.addGroup(v251)::CL,87059
122575 :: CALL :: call :: Z :: v248 = v246.hasNext()::JM,122579
122579 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 761::CD,122566:CD,122571:CD,122575:CD,123108:JM,122579
122581 :: CALL :: call :: Z :: v186 = v184.hasNext()::JM,122425:JM,122585
122585 :: PRED :: IF :: Z :: if (v186 != #(0)) goto 490::CF,123110:CD,122421:CD,122425:CD,122426:CD,122430:CD,122435:CD,123109:JM,122585
122586 :: CALL :: call :: Z :: v176 = v174.hasNext()::JM,122408:JM,122590
122590 :: PRED :: IF :: Z :: if (v176 != #(0)) goto 459::CD,122404:CD,122408:CD,122412:CD,122416:CD,122581:CD,122585:CD,122586:CD,123109:CD,123110:JM,122590
122594 :: CALL :: call :: V :: v254.setModel(v259, v171)::CL,86365
122599 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v259 + #(1)::DD,123111
122603 :: CALL :: call :: I :: v167 = v165.nrModels()::JM,122607:CL,87301
122607 :: PRED :: IF :: Z :: if (v257 < v167) goto 428::CD,122390:CD,122395:CD,122399:CD,122586:CD,122590:CD,122594:CD,122599:CD,122603:CD,123110:CD,123111
122613 :: CALL :: call :: Ljava/util/List :: v132 = v130.getModel(v161)::JM,122678:CL,54314
122618 :: CALL :: call :: Ljava/util/Iterator :: v134 = v132.iterator()::JM,122678
122623 :: CALL :: call :: Ljava/lang/Object :: v138 = v134.next()::JM,122678
122628 :: EXPR :: reference :: Ljava/util/Map :: v140 = p0 $this .asymId2StrandIdFromAtomSites::JM,122673:JM,122644
122631 :: CALL :: call :: Ljava/util/Set :: v142 = v140.keySet()::JM,122673:JM,122644
122635 :: CALL :: call :: Ljava/util/Iterator :: v144 = v142.iterator()::JM,122673:JM,122644
122640 :: CALL :: call :: Ljava/lang/Object :: v148 = v144.next()::JM,122673:JM,122644
122645 :: CALL :: call :: Ljava/lang/String :: v151 = v139.getChainID()::JM,122654:CL,64429
122644 :: EXPR :: assign :: Ljava/lang/Object :: v149 = CHECKCAST v148::JM,122654
122649 :: CALL :: call :: Z :: v153 = v151.equals(v149)::JM,122654
122654 :: PRED :: IF :: Z :: if (v153 == #(0)) goto 955::CF,123112:CD,122658:CD,122664:CD,122669:CD,122673:CD,123113
122658 :: CALL :: call :: Ljava/lang/Object :: v156 = v154.get(v149)::
122664 :: CALL :: call :: V :: v139.setInternalChainID(v157)::CL,139634
122669 :: CALL :: call :: Z :: v146 = v144.hasNext()::JM,122673:JM,122644
122673 :: PRED :: IF :: Z :: if (v146 != #(0)) goto 902::CF,123113:CD,122640:CD,122644:CD,122645:CD,122649:CD,122654:CD,123112:JM,122673
122674 :: CALL :: call :: Z :: v136 = v134.hasNext()::JM,122678
122679 :: EXPR :: assign :: Ljava/lang/Object :: v160 = v163 + #(1)::DD,123114
122678 :: PRED :: IF :: Z :: if (v136 != #(0)) goto 872::CD,122623:CD,122631:CD,122635:CD,122669:CD,122673:CD,122674:CD,123112:CD,123113:JM,122678:CF,122679
122683 :: CALL :: call :: I :: v129 = v127.nrModels()::JM,122687:CL,87301
122687 :: PRED :: IF :: Z :: if (v161 < v129) goto 849::CD,122613:CD,122618:CD,122674:CD,122678:CD,122679:CD,122683:CD,123113:CD,123114
122691 :: CALL :: call :: Z :: v268 = v266.isHeaderOnly()::JM,122695:CL,82926
122695 :: PRED :: IF :: Z :: if (v268 != #(0)) goto 1028::CD,122699:CD,122703:CD,122710:CD,122714
122699 :: CALL :: call :: Z :: v271 = v269.shouldCreateAtomBonds()::JM,122703:CL,82832
122703 :: PRED :: IF :: Z :: if (v271 == #(0)) goto 1014::CD,122704
122704 :: CALL :: call :: V :: p0 $this .addBonds()::CL,139645
122710 :: CALL :: call :: Z :: v275 = v273.shouldCreateAtomCharges()::JM,122714:CL,82905
122715 :: CALL :: call :: V :: p0 $this .addCharges()::CL,139679
122714 :: PRED :: IF :: Z :: if (v275 == #(0)) goto 1028::CD,122715
122718 :: CALL :: call :: V :: p0 $this .linkCompounds()::CL,139691
122724 :: CALL :: call :: Z :: v280 = v278.isHeaderOnly()::JM,122728:CL,82926
122729 :: CALL :: call :: V :: p0 $this .addSites()::CL,140001
122728 :: PRED :: IF :: Z :: if (v280 != #(0)) goto 1046::CD,122729
122735 :: CALL :: call :: Z :: v284 = v282.isParseBioAssembly()::JM,122739:CL,95297
122739 :: PRED :: IF :: Z :: if (v284 == #(0)) goto 1349::CF,122740:CD,122747:CD,122903:CD,122907:CD,122915
122740 :: NORM :: declaration :: Ljava/util/HashMap :: v285 = new java.util.HashMap::
122744 :: EXPR :: reference :: Ljava/util/List :: v287 = p0 $this .strucAssemblies::JM,122756:JM,122907
122747 :: CALL :: call :: Ljava/util/Iterator :: v289 = v287.iterator()::JM,122756:JM,122907
122752 :: CALL :: call :: Ljava/lang/Object :: v293 = v289.next()::JM,122756:JM,122907
122757 :: NORM :: declaration :: Ljava/util/ArrayList :: v295 = new java.util.ArrayList::
122756 :: EXPR :: assign :: Ljava/lang/Object :: v294 = CHECKCAST v293::JM,122788:JM,122779:JM,122783:JM,123115:JM,122813:JM,122833:CF,122757
122762 :: EXPR :: reference :: Ljava/util/List :: v297 = p0 $this .strucAssemblyGens::JM,122774:JM,122798
122765 :: CALL :: call :: Ljava/util/Iterator :: v299 = v297.iterator()::JM,122774:JM,122798
122770 :: CALL :: call :: Ljava/lang/Object :: v303 = v299.next()::JM,122774:JM,122798
122775 :: CALL :: call :: Ljava/lang/String :: v306 = v304.getAssembly_id()::JM,122788:JM,122775:JM,122783
122774 :: EXPR :: assign :: Ljava/lang/Object :: v304 = CHECKCAST v303::JM,122788:JM,122775:JM,122783
122779 :: CALL :: call :: Ljava/lang/String :: v308 = v294.getId()::JM,122788:JM,122779:JM,122783
122783 :: CALL :: call :: Z :: v310 = v306.equals(v308)::JM,122788:JM,122783
122789 :: CALL :: call :: Z :: v312 = v295.add(v304)::
122788 :: PRED :: IF :: Z :: if (v310 == #(0)) goto 1149::CD,122789:JM,122774:JM,122798
122794 :: CALL :: call :: Z :: v301 = v299.hasNext()::JM,122774:JM,122798
122798 :: PRED :: IF :: Z :: if (v301 != #(0)) goto 1112::CD,122770:CD,122774:CD,122775:CD,122779:CD,122783:CD,122788:CD,122794:JM,122798
122806 :: CALL :: call :: Ljava/util/ArrayList :: v317 = v313.getBioUnitTransformationList(v294, v295, v315)::CL,140434
122813 :: CALL :: call :: Ljava/lang/String :: v320 = v294.getId()::JM,123115:JM,122813
122817 :: CALL :: call :: I :: v322 = parseInt(v320)::JM,123115
122833 :: CALL :: call :: Ljava/lang/String :: v332 = v294.getOligomeric_count()::JM,122833
122837 :: CALL :: call :: I :: v334 = parseInt(v332)::
122876 :: PRED :: IF :: Z :: if (v330 == #(-1)) goto 1327::CD,122881:CD,122885:CD,122889:CD,122893:CD,122897:JM,122756:JM,122907
122881 :: CALL :: call :: V :: v354.setId(v330)::CL,133288
122885 :: CALL :: call :: V :: v354.setMacromolecularSize(v350)::CL,133299
122889 :: CALL :: call :: V :: v354.setTransforms(v317)::CL,133310
122893 :: CALL :: call :: Ljava/lang/Integer :: v360 = valueOf(v330)::
122897 :: CALL :: call :: Ljava/lang/Object :: v362 = v285.put(v360, v354)::
122903 :: CALL :: call :: Z :: v291 = v289.hasNext()::JM,122756:JM,122907
122907 :: PRED :: IF :: Z :: if (v291 != #(0)) goto 1077::CD,122752:CD,122756:CD,122757:CD,122765:CD,122794:CD,122798:JM,140419:JM,140426:CD,122806:CD,122813:CD,122817:CD,122833:CD,122837:CD,122876:CD,122903:CD,123115:JM,122907
122915 :: CALL :: call :: V :: v365.setBioAssemblies(v285)::CL,99579
122919 :: CALL :: call :: V :: p0 $this .setStructNcsOps()::CL,140558
122922 :: CALL :: call :: V :: p0 $this .setCrystallographicInfoMetadata()::CL,140932
122925 :: NORM :: declaration :: Ljava/util/HashMap :: v372 = new java.util.HashMap::JM,123057:JM,123101
122929 :: EXPR :: reference :: Ljava/util/List :: v374 = p0 $this .sequenceDifs::JM,123043
122932 :: CALL :: call :: Ljava/util/Iterator :: v376 = v374.iterator()::JM,123043
122937 :: CALL :: call :: Ljava/lang/Object :: v380 = v376.next()::JM,123043
122942 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SeqMisMatchImpl :: v382 = new org.biojava.nbio.structure.SeqMisMatchImpl::
122950 :: CALL :: call :: V :: v382.setDetails(v385)::CL,140994
122965 :: CALL :: call :: V :: v382.setInsCode(v392)::CL,141005
122973 :: CALL :: call :: V :: v382.setOrigGroup(v395)::CL,141016
122981 :: CALL :: call :: V :: v382.setPdbGroup(v398)::CL,141027
122989 :: CALL :: call :: V :: v382.setPdbResNum(v401)::CL,141038
122997 :: CALL :: call :: V :: v382.setUniProtId(v404)::CL,141049
123005 :: CALL :: call :: V :: v382.setSeqNum(v407)::CL,141060
123013 :: CALL :: call :: Ljava/lang/Object :: v412 = v372.get(v410)::JM,123018
123019 :: PRED :: IF :: Z :: if (v413 != #(null)) goto 1542::CF,123118:CF,123020:CD,123028
123018 :: EXPR :: assign :: Ljava/lang/Object :: v413 = CHECKCAST v412::DD,123019:DD,123118
123020 :: NORM :: declaration :: Ljava/util/ArrayList :: v414 = new java.util.ArrayList::DD,123118
123028 :: CALL :: call :: Ljava/lang/Object :: v419 = v372.put(v417, v414)::
123034 :: CALL :: call :: Z :: v422 = v420.add(v382)::
123039 :: CALL :: call :: Z :: v378 = v376.hasNext()::JM,123043
123043 :: PRED :: IF :: Z :: if (v378 != #(0)) goto 1378::CD,122937:CD,122942:CD,122950:CD,122965:CD,122973:CD,122981:CD,122989:CD,122997:CD,123005:CD,123013:CD,123018:CD,123019:CD,123034:CD,123039:CD,123118:JM,123043:JM,123057:JM,123101
123044 :: CALL :: call :: Ljava/util/Set :: v425 = v372.keySet()::JM,123057:JM,123101
123048 :: CALL :: call :: Ljava/util/Iterator :: v427 = v425.iterator()::JM,123057:JM,123101
123053 :: CALL :: call :: Ljava/lang/Object :: v431 = v427.next()::JM,123057:JM,123101
123057 :: EXPR :: assign :: Ljava/lang/Object :: v432 = CHECKCAST v431::
123061 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v435 = v433.getChainByPDB(v432)::CL,118928
123066 :: CALL :: call :: Ljava/lang/Object :: v437 = v372.get(v432)::
123072 :: CALL :: call :: V :: v435.setSeqMisMatches(v438)::CL,87048
123079 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v443 = new java.lang.StringBuilder::
123084 :: CALL :: call :: Ljava/lang/StringBuilder :: v447 = v443.append(v432)::
123089 :: CALL :: call :: Ljava/lang/String :: v449 = v447.toString()::
123097 :: CALL :: call :: Z :: v429 = v427.hasNext()::JM,123057:JM,123101
123101 :: PRED :: IF :: Z :: if (v429 != #(0)) goto 1573::CD,123053:CD,123057:CD,123061:CD,123066:CD,123072:CD,123097:JM,123101
123107 :: EXPR :: assign :: null :: PHI v262 = v261, v262, v262::JM,122540:DD,123107:DD,123108:DD,123110
123106 :: EXPR :: assign :: null :: PHI v261 = v260, v261, v261::JM,122512:DD,123106:DD,123107
123109 :: EXPR :: assign :: null :: PHI v260 = v259, v260::JM,122425:JM,122585:DD,123106:DD,123109:DD,123110
123108 :: EXPR :: assign :: null :: PHI v263 = v262, v263::JM,122579:DD,123108:DD,123110
123111 :: EXPR :: assign :: null :: PHI v257 = #(0), v256::DD,122607:DD,123110
123110 :: EXPR :: assign :: null :: PHI v259 = v257, v262, v263, v260::JM,122408:JM,122590:DD,122599:DD,123109
123113 :: EXPR :: assign :: null :: PHI v163 = v161, v164, v164::JM,122678:DD,122679:DD,123112
123112 :: EXPR :: assign :: null :: PHI v164 = v163, v164::JM,122673:JM,122644:DD,123112:DD,123113
123115 :: EXPR :: assign :: null :: PHI v330 = v322, #(-1)::JM,122833:DD,122876
123114 :: EXPR :: assign :: null :: PHI v161 = #(0), v160::DD,122687:DD,123113
123118 :: EXPR :: assign :: null :: PHI v420 = v413, v414::
123429 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::JM,102531:JM,102521
123428 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::CE,123429:CD,123433:CD,123437:CD,123441:CD,123445:JM,123504:JM,123461:JM,123477:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123433 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,123446:DD,123462:DD,123740
123437 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .trim()::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123441 :: CALL :: call :: I :: v9 = v7.length()::JM,123504:JM,123445:JM,123461:JM,123477:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123445 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,123446:CD,123447:CD,123451:CD,123455:JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123742
123447 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .trim()::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123446 :: NORM :: compound :: Ljava/util/List :: return v4::DD,123429
123451 :: CALL :: call :: I :: v14 = v12.length()::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123455 :: PRED :: IF :: Z :: if (v14 != #(1)) goto 58::CD,123456:CD,123461:CD,123720:CD,123724:CD,123725:CD,123729:CD,123734:CD,123740:CD,123752:CD,123753:CD,123754:CD,123755:CD,123756:JM,123504:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123455:JM,123742
123456 :: CALL :: call :: Z :: v18 = p1 $line .startsWith(#(;))::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123461 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 58::CD,123462:CD,123720:CD,123724:CD,123725:CD,123729:CD,123734:CD,123740:CD,123752:CD,123753:CD,123754:CD,123755:CD,123756
123462 :: NORM :: compound :: Ljava/util/List :: return v4::DD,123429
123464 :: CALL :: call :: C :: v23 = p1 $line .charAt(v145)::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123469 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(v23)::JM,123504:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123473 :: CALL :: call :: I :: v28 = p1 $line .length()::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123477 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 - #(1)::CF,123478
123479 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v145 + #(1)::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123478 :: PRED :: IF :: Z :: if (v145 >= v29) goto 104::CF,123741:CD,123479:CD,123480:CD,123485
123480 :: CALL :: call :: C :: v32 = p1 $line .charAt(v30)::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123485 :: CALL :: call :: Ljava/lang/Character :: v34 = valueOf(v32)::JM,123504:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123489 :: PRED :: IF :: Z :: if (v145 <= #(0)) goto 122::CF,123742:CD,123490:CD,123491:CD,123496
123491 :: CALL :: call :: C :: v38 = p1 $line .charAt(v36)::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123490 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v145 - #(1)::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123496 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(v38)::JM,123504:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123500 :: CALL :: call :: C :: v43 = v25.charValue()::JM,123504:JM,123545:JM,123625:JM,123741:JM,123742
123505 :: PRED :: IF :: Z :: if (v141 != #(0)) goto 165::CF,123522:CD,123506:CD,123511:CD,123523:CD,123531:CD,123536:CD,123747:CD,123748:CD,123749:CD,123750:CD,123751
123504 :: PRED :: IF :: Z :: if (v43 != #(32)) goto 192::CD,123505:CD,123541:CD,123545:JM,123504:JM,123625:JM,123741:JM,123742
123506 :: CALL :: call :: Z :: v46 = v144.equals(#())::JM,123511
123511 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 162::CD,123512:CD,123516
123512 :: CALL :: call :: Ljava/lang/String :: v48 = v144.trim()::
123516 :: CALL :: call :: Z :: v50 = v4.add(v48)::
123523 :: CALL :: call :: Ljava/lang/String :: v53 = valueOf(v144)::
123522 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
123531 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v51.append(v25)::JM,123750
123536 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::JM,123750
123541 :: CALL :: call :: C :: v60 = v25.charValue()::JM,123504:JM,123545:JM,123625:JM,123741:JM,123742
123545 :: PRED :: IF :: Z :: if (v60 != #(39)) goto 350::CD,123546:CD,123621:CD,123625:JM,123504:JM,123545:JM,123741:JM,123742
123547 :: PRED :: IF :: Z :: if (v143 != #(0)) goto 236::CF,123743:CD,123548
123546 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 302::CD,123547:CD,123559:CD,123595:CD,123743:CD,123744
123549 :: CALL :: call :: C :: v63 = v35.charValue()::JM,123557
123548 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 228::CD,123549:CD,123553:CD,123557:CD,123558:CD,123743:CD,123744
123553 :: CALL :: call :: Z :: v65 = isWhitespace(v63)::JM,123557
123557 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 236::CF,123743:CD,123558:CD,123744
123559 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 275::CF,123576:CD,123560:CD,123565:CD,123577:CD,123585:CD,123590:CD,123747:CD,123748:CD,123749:CD,123750:CD,123751
123558 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v145 + #(1)::DD,123743
123560 :: CALL :: call :: Z :: v70 = v144.equals(#())::JM,123565
123565 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 272::CD,123566:CD,123570
123566 :: CALL :: call :: Ljava/lang/String :: v72 = v144.trim()::
123570 :: CALL :: call :: Z :: v74 = v4.add(v72)::
123577 :: CALL :: call :: Ljava/lang/String :: v77 = valueOf(v144)::
123576 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
123585 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v25)::JM,123750
123590 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::JM,123750
123595 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 320::CD,123596:CD,123600:CD,123747:CD,123748:CD,123749:CD,123750:CD,123751
123596 :: CALL :: call :: C :: v84 = v41.charValue()::JM,123600
123600 :: PRED :: IF :: Z :: if (v84 != #(32)) goto 323::CF,123602:CD,123603:CD,123611:CD,123616:CD,123747:CD,123748:CD,123749:CD,123750:CD,123751
123603 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v144)::
123602 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
123611 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v25)::JM,123750
123616 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,123750
123621 :: CALL :: call :: C :: v94 = v25.charValue()::JM,123504:JM,123545:JM,123625:JM,123741:JM,123742
123625 :: PRED :: IF :: Z :: if (v94 != #(34)) goto 506::CF,123701:CD,123626:CD,123702:CD,123710:CD,123715:CD,123747:CD,123748:CD,123749:CD,123750:CD,123751
123627 :: PRED :: IF :: Z :: if (v142 != #(0)) goto 394::CF,123745:CD,123628
123626 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 460::CD,123627:CD,123639:CD,123675:CD,123745:CD,123746
123629 :: CALL :: call :: C :: v97 = v35.charValue()::JM,123637
123628 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 386::CD,123629:CD,123633:CD,123637:CD,123638:CD,123745:CD,123746
123633 :: CALL :: call :: Z :: v99 = isWhitespace(v97)::JM,123637
123637 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 394::CF,123745:CD,123638:CD,123746
123639 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 433::CF,123656:CD,123640:CD,123645:CD,123657:CD,123665:CD,123670:CD,123747:CD,123748:CD,123749:CD,123750:CD,123751
123638 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v145 + #(1)::DD,123745
123640 :: CALL :: call :: Z :: v104 = v144.equals(#())::JM,123645
123645 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 430::CD,123646:CD,123650
123646 :: CALL :: call :: Ljava/lang/String :: v106 = v144.trim()::
123650 :: CALL :: call :: Z :: v108 = v4.add(v106)::
123657 :: CALL :: call :: Ljava/lang/String :: v111 = valueOf(v144)::
123656 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v109 = new java.lang.StringBuilder::
123665 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v109.append(v25)::JM,123750
123670 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::JM,123750
123675 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 478::CD,123676:CD,123680:CD,123747:CD,123748:CD,123749:CD,123750:CD,123751
123676 :: CALL :: call :: C :: v118 = v41.charValue()::JM,123680
123680 :: PRED :: IF :: Z :: if (v118 != #(32)) goto 481::CF,123682:CD,123683:CD,123691:CD,123696:CD,123747:CD,123748:CD,123749:CD,123750:CD,123751
123683 :: CALL :: call :: Ljava/lang/String :: v121 = valueOf(v144)::
123682 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
123691 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v119.append(v25)::JM,123750
123696 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::JM,123750
123701 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v127 = new java.lang.StringBuilder::
123702 :: CALL :: call :: Ljava/lang/String :: v129 = valueOf(v144)::
123710 :: CALL :: call :: Ljava/lang/StringBuilder :: v132 = v127.append(v25)::JM,123750
123715 :: CALL :: call :: Ljava/lang/String :: v134 = v132.toString()::JM,123750
123719 :: EXPR :: assign :: Ljava/lang/Object :: v140 = v139 + #(1)::DD,123756:CF,123752
123720 :: CALL :: call :: I :: v21 = p1 $line .length()::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123724:JM,123455:JM,123742
123725 :: CALL :: call :: Ljava/lang/String :: v147 = v144.trim()::JM,123734
123724 :: PRED :: IF :: Z :: if (v145 < v21) goto 64::CD,123464:CD,123469:CD,123473:CD,123477:CD,123478:CD,123489:CD,123500:CD,123504:CD,123719:CD,123720:CD,123741:CD,123742:CD,123747:CD,123748:CD,123749:CD,123750:CD,123751:CD,123752:CD,123753:CD,123754:CD,123755:CD,123756:JM,123461:JM,123445:JM,123545:JM,123625:JM,123724:JM,123455:JM,123734
123729 :: CALL :: call :: Z :: v149 = v147.equals(#())::JM,123734
123735 :: CALL :: call :: Z :: v151 = v4.add(v144)::
123734 :: PRED :: IF :: Z :: if (v149 != #(0)) goto 564::CD,123735:CF,123740
123741 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,123548:JM,123557:DD,123628:JM,123637:CF,123489
123740 :: NORM :: compound :: Ljava/util/List :: return v4::DD,123429
123743 :: EXPR :: assign :: null :: PHI v67 = v145, v145, v66::CF,123744:DD,123751
123742 :: EXPR :: assign :: null :: PHI v41 = #(null), v40::JM,123504:JM,123545:JM,123625:JM,123741:JM,123742:DD,123595:JM,123600:DD,123675:JM,123680
123745 :: EXPR :: assign :: null :: PHI v101 = v145, v145, v100::CF,123746:DD,123751
123744 :: EXPR :: assign :: null :: PHI v68 = #(0), #(0), #(1)::DD,123559
123747 :: EXPR :: assign :: null :: PHI v135 = v141, v141, #(0), v141, #(1), v141, #(0), v141, #(1), v141, v141::CF,123748:DD,123752
123746 :: EXPR :: assign :: null :: PHI v102 = #(0), #(0), #(1)::DD,123639
123749 :: EXPR :: assign :: null :: PHI v137 = v143, v143, v143, v143, v143, v143, #(0), v143, #(1), v143, v143::CF,123750:DD,123754
123748 :: EXPR :: assign :: null :: PHI v136 = v142, v142, #(0), v142, #(1), v142, v142, v142, v142, v142, v142::CF,123749:DD,123753
123751 :: EXPR :: assign :: null :: PHI v139 = v145, v145, v67, v67, v145, v145, v101, v101, v145, v145, v145::DD,123719
123750 :: EXPR :: assign :: null :: PHI v138 = #(), v58, #(), v82, v144, v92, #(), v116, v144, v126, v134::CF,123751:DD,123755
123753 :: EXPR :: assign :: null :: PHI v142 = #(0), v136::CF,123754:DD,123627:DD,123748
123752 :: EXPR :: assign :: null :: PHI v141 = #(0), v135::CF,123753:DD,123505:DD,123546:DD,123626:DD,123747
123755 :: EXPR :: assign :: null :: PHI v144 = #(), v138::CF,123756:JM,123511:JM,123565:JM,123645:JM,123734:DD,123750
123754 :: EXPR :: assign :: null :: PHI v143 = #(0), v137::CF,123755:DD,123547:DD,123749
123756 :: EXPR :: assign :: null :: PHI v145 = #(0), v140::JM,123504:JM,123461:JM,123477:JM,123445:JM,123545:JM,123625:JM,123741:JM,123455:JM,123742:DD,123478:DD,123479:DD,123489:DD,123490:DD,123558:DD,123638:DD,123724:DD,123743:DD,123745:DD,123751
123919 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::JM,102913
123918 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::CE,123919:CD,123926:CD,123930:CD,123947:CD,123948:CD,123956:CD,123960:CD,123964:CD,123981:CD,123982:CD,124002:CD,124003:CD,124004:CD,124190:CD,124194:CD,124195:CD,124198:CD,124199:CD,124200:JM,124020
123926 :: CALL :: call :: Ljava/lang/Class :: v9 = forName(p1 $className )::JM,124195:JM,124194:JM,124020:JM,123926:JM,123930
123930 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.newInstance()::JM,124195:JM,124194:JM,124020:JM,123930
123947 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,123919
123948 :: CALL :: call :: [Ljava/lang/reflect/Field :: v20 = getFields(v9)::JM,124002:CL,141071
123956 :: CALL :: call :: [Ljava/lang/reflect/Method :: v24 = v9.getMethods()::JM,123964
123960 :: NORM :: declaration :: Ljava/util/HashMap :: v25 = new java.util.HashMap::
123964 :: EXPR :: assign :: I :: v27 = v24.length::DD,123981
123974 :: CALL :: call :: Ljava/lang/Object :: v33 = v25.put(v31, v29)::
123981 :: PRED :: IF :: Z :: if (v36 < v27) goto 91::CF,123982:CD,123974:CD,123980:CD,124198
123980 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v36 + #(1)::DD,124198
123982 :: NORM :: declaration :: Ljava/util/HashMap :: v37 = new java.util.HashMap::
123995 :: CALL :: call :: Ljava/lang/Object :: v43 = v37.put(v40, v41)::
124001 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v45 + #(1)::DD,124199
124003 :: PRED :: IF :: Z :: if (v45 < v39) goto 140::CD,123995:CD,124001:CD,124002:CD,124199:JM,124195:JM,124194:JM,124020:JM,123926:JM,123930
124002 :: EXPR :: assign :: I :: v39 = v20.length::CF,124003
124004 :: CALL :: call :: Ljava/util/Iterator :: v48 = p2 $loopFields .iterator()::JM,124195:JM,124194:JM,124020:JM,123926:JM,123930
124009 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.next()::JM,124195:JM,124194:JM,124020:JM,123930
124015 :: CALL :: call :: Ljava/lang/Object :: v56 = p3 $lineData .get(v54)::JM,124195:JM,124194:JM,124020:JM,123930
124014 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v97 + #(1)::JM,124195:JM,124194:JM,124020:JM,123930:DD,124200
124021 :: CALL :: call :: Ljava/lang/Object :: v59 = v37.get(v53)::JM,124026
124020 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::DD,124125:JM,124131:JM,124137
124027 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 239::CF,124036:CD,124028:CD,124041:CD,124045:CD,124051:CD,124055:CD,124060:CD,124064:CD,124068:CD,124072:CD,124078:CD,124083:CD,124087:CD,124092:CD,124093:CD,124200
124026 :: EXPR :: assign :: Ljava/lang/Object :: v60 = CHECKCAST v59::DD,124027:JM,124051:JM,124041:JM,124045:JM,124072:JM,124060:JM,124064:JM,124068
124028 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,141248
124036 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
124041 :: CALL :: call :: Ljava/lang/String :: v65 = v60.getName()::JM,124051:JM,124041:JM,124045
124045 :: CALL :: call :: Ljava/lang/String :: v67 = v65.substring(#(0), #(1))::JM,124051:JM,124045
124051 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,124051
124055 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v61.append(v69)::
124060 :: CALL :: call :: Ljava/lang/String :: v73 = v60.getName()::JM,124072:JM,124060
124064 :: CALL :: call :: Ljava/lang/String :: v75 = v60.getName()::JM,124064:JM,124068:JM,124072
124068 :: CALL :: call :: I :: v77 = v75.length()::JM,124068:JM,124072
124072 :: CALL :: call :: Ljava/lang/String :: v79 = v73.substring(#(1), v77)::JM,124072
124078 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v71.append(v79)::
124083 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
124087 :: CALL :: call :: Ljava/lang/Object :: v85 = v25.get(v83)::JM,124092
124093 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 326::CD,124094:CD,124102:CD,124110:CD,124114:CD,124115:CD,124119:CD,124124:CD,124200
124092 :: EXPR :: assign :: Ljava/lang/Object :: v86 = CHECKCAST v85::DD,124093:JM,124102
124094 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,141248
124102 :: CALL :: call :: [Ljava/lang/Class :: v88 = v86.getParameterTypes()::JM,124102
124106 :: EXPR :: reference :: Ljava/lang/Object :: v89 = v88[#(0)]::JM,124119:JM,124124:JM,124110
124110 :: CALL :: call :: Ljava/lang/String :: v91 = v89.getName()::JM,124119:JM,124124:JM,124110
124115 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getName()::JM,124115:JM,124119:JM,124124
124114 :: EXPR :: assign :: Ljava/lang/Class :: v92 = metadata <Application,Ljava/lang/Integer>-><Primordial,Ljava/lang/Class>::JM,124115:JM,124119:JM,124124
124119 :: CALL :: call :: Z :: v96 = v91.equals(v94)::JM,124119:JM,124124
124125 :: PRED :: IF :: Z :: if (v57 == #(null)) goto 459::CF,124200:CD,124126:CD,124131
124124 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 411::CD,124125:CD,124200
124126 :: CALL :: call :: Z :: v101 = v57.equals(#(?))::JM,124131
124131 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 459::CF,124200:CD,124132:CD,124137
124132 :: CALL :: call :: Z :: v104 = v57.equals(#(.))::JM,124137
124137 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 459::CF,124200:CD,124138:CD,124142
124138 :: CALL :: call :: I :: v108 = parseInt(v57)::
124142 :: CALL :: call :: Ljava/lang/Integer :: v110 = valueOf(v108)::
124190 :: CALL :: call :: Z :: v50 = v48.hasNext()::JM,124195:JM,124194:JM,124020:JM,123930
124195 :: NORM :: compound :: Ljava/lang/Object :: return v11::DD,123919
124194 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 179::CD,124009:CD,124014:CD,124015:CD,124020:CD,124021:CD,124026:CD,124027:CD,124190:CD,124200:JM,124194:JM,123930:CF,124195
124199 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,124001:DD,124003:CF,124002
124198 :: EXPR :: assign :: null :: PHI v36 = #(0), v35::DD,123980:DD,123981
124200 :: EXPR :: assign :: null :: PHI v97 = #(-1), v54, v54, v54, v54, v54, v54, v54, v54::JM,124195:JM,124194:JM,124020:JM,123930:DD,124014
124321 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,124329:CD,124343:CD,124347
124326 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124347
124329 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124347
124334 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124347
124339 :: CALL :: call :: V :: v12.newEntity(p1 $entity )::CL,141398
124343 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124347
124347 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124334:CD,124339:CD,124343:JM,124347
124357 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,124365:CD,124379:CD,124383
124362 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124383
124365 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124383
124370 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124383
124375 :: CALL :: call :: V :: v12.newAtomSite(p1 $atom )::CL,141441
124379 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124383
124383 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124370:CD,124375:CD,124379:JM,124383
124393 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,124401:CD,124415:CD,124419
124398 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124419
124401 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124419
124406 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124419
124411 :: CALL :: call :: V :: v12.newDatabasePDBrev(p1 $dbrev )::CL,142276
124415 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124419
124419 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124406:CD,124411:CD,124415:JM,124419
124429 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,124437:CD,124451:CD,124455
124434 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124455
124437 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124455
124442 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124455
124447 :: CALL :: call :: V :: v12.newDatabasePDBrevRecord(p1 $dbrev )::CL,142435
124451 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124455
124455 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124442:CD,124447:CD,124451:JM,124455
124465 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,124473:CD,124487:CD,124491
124470 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124491
124473 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124491
124478 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124491
124483 :: CALL :: call :: V :: v12.newDatabasePDBremark(p1 $remark )::CL,142509
124487 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124491
124491 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124478:CD,124483:CD,124487:JM,124491
124501 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,124509:CD,124523:CD,124527
124506 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124527
124509 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124527
124514 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124527
124519 :: CALL :: call :: V :: v12.newExptl(p1 $exptl )::CL,142610
124523 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124527
124527 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124514:CD,124519:CD,124523:JM,124527
124537 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,124545:CD,124559:CD,124563
124542 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124563
124545 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124563
124550 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124563
124555 :: CALL :: call :: V :: v12.newCell(p1 $cell )::CL,142651
124559 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124563
124563 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124550:CD,124555:CD,124559:JM,124563
124573 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,124581:CD,124595:CD,124599
124578 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124599
124581 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124599
124586 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124599
124591 :: CALL :: call :: V :: v12.newSymmetry(p1 $symmetry )::CL,142850
124595 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124599
124599 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124586:CD,124591:CD,124595:JM,124599
124609 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,124617:CD,124631:CD,124635
124614 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124635
124617 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124635
124622 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124635
124627 :: CALL :: call :: V :: v12.newStructNcsOper(p1 $sNcsOper )::CL,142959
124631 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124635
124635 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124622:CD,124627:CD,124631:JM,124635
124645 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,124653:CD,124667:CD,124671
124650 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124671
124653 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124671
124658 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124671
124663 :: CALL :: call :: V :: v12.newAtomSites(p1 $atomSites )::CL,142982
124667 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124671
124671 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124658:CD,124663:CD,124667:JM,124671
124681 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,124689:CD,124703:CD,124707
124686 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124707
124689 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124707
124694 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124707
124699 :: CALL :: call :: V :: v12.newStructRef(p1 $sref )::CL,143162
124703 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124707
124707 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124694:CD,124699:CD,124703:JM,124707
124717 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,124725:CD,124739:CD,124743
124722 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124743
124725 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124743
124730 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124743
124735 :: CALL :: call :: V :: v12.newStructRefSeq(p1 $sref )::CL,143203
124739 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124743
124743 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124730:CD,124735:CD,124739:JM,124743
124753 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,124761:CD,124775:CD,124779
124758 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124779
124761 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124779
124766 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124779
124771 :: CALL :: call :: V :: v12.newStructRefSeqDif(p1 $sref )::CL,143605
124775 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124779
124779 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124766:CD,124771:CD,124775:JM,124779
124789 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,124797:CD,124811:CD,124815
124794 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124815
124797 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124815
124802 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124815
124807 :: CALL :: call :: V :: v12.newStructSiteGen(p1 $id )::CL,143634
124811 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124815
124815 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124802:CD,124807:CD,124811:JM,124815
124825 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,124833:CD,124847:CD,124851
124830 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124851
124833 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124851
124838 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124851
124843 :: CALL :: call :: V :: v12.newStructSite(p1 $id )::CL,143657
124847 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124851
124851 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124838:CD,124843:CD,124847:JM,124851
124861 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,124869:CD,124883:CD,124887
124866 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124887
124869 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124887
124874 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124887
124879 :: CALL :: call :: V :: v12.newEntityPolySeq(p1 $epolseq )::CL,143788
124883 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124887
124887 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124874:CD,124879:CD,124883:JM,124887
124897 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,124905:CD,124919:CD,124923
124902 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124923
124905 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124923
124910 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124923
124915 :: CALL :: call :: V :: v12.newEntitySrcGen(p1 $entitySrcGen )::CL,144093
124919 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124923
124923 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124910:CD,124915:CD,124919:JM,124923
124933 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,124941:CD,124955:CD,124959
124938 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124959
124941 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124959
124946 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124959
124951 :: CALL :: call :: V :: v12.newEntitySrcNat(p1 $entitySrcNat )::CL,144110
124955 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124959
124959 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124946:CD,124951:CD,124955:JM,124959
124969 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,124977:CD,124991:CD,124995
124974 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,124995
124977 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,124995
124982 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,124995
124987 :: CALL :: call :: V :: v12.newEntitySrcSyn(p1 $entitySrcSyn )::CL,144139
124991 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,124995
124995 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,124982:CD,124987:CD,124991:JM,124995
125005 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,125013:CD,125027:CD,125031
125010 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125031
125013 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125031
125018 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125031
125023 :: CALL :: call :: V :: v12.newStructAsym(p1 $sasym )::CL,144162
125027 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125031
125031 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125018:CD,125023:CD,125027:JM,125031
125041 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,125049:CD,125063:CD,125067
125046 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125067
125049 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125067
125054 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125067
125059 :: CALL :: call :: V :: v12.newPdbxPolySeqScheme(p1 $ppss )::CL,144185
125063 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125067
125067 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125054:CD,125059:CD,125063:JM,125067
125077 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,125085:CD,125099:CD,125103
125082 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125103
125085 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125103
125090 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125103
125095 :: CALL :: call :: V :: v12.newPdbxNonPolyScheme(p1 $ppss )::CL,144258
125099 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125103
125103 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125090:CD,125095:CD,125099:JM,125103
125113 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxEntityNonPoly(org.biojava.nbio.structure.io.mmcif.model.PdbxEntityNonPoly)::CD,125121:CD,125135:CD,125139
125118 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125139
125121 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125139
125126 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125139
125135 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125139
125139 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125126:CD,125135:JM,125139
125149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,125157:CD,125171:CD,125175
125154 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125175
125157 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125175
125162 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125175
125167 :: CALL :: call :: V :: v12.newStructKeywords(p1 $kw )::CL,144355
125171 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125175
125175 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125162:CD,125167:CD,125171:JM,125175
125185 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,125193:CD,125207:CD,125211
125190 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125211
125193 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125211
125198 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125211
125203 :: CALL :: call :: V :: v12.newRefine(p1 $r )::CL,144399
125207 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125211
125211 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125198:CD,125203:CD,125207:JM,125211
125221 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,125229:CD,125243:CD,125247
125226 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125247
125229 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125247
125234 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125247
125239 :: CALL :: call :: V :: v12.newChemComp(p1 $cc )::CL,144609
125243 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125247
125247 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125234:CD,125239:CD,125243:JM,125247
125257 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,125265:CD,125279:CD,125283
125262 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125283
125265 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125283
125270 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125283
125275 :: CALL :: call :: V :: v12.newAuditAuthor(p1 $aa )::CL,144700
125279 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125283
125283 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125270:CD,125275:CD,125279:JM,125283
125293 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,125301:CD,125315:CD,125319
125298 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125319
125301 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125319
125306 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125319
125311 :: CALL :: call :: V :: v12.newChemCompDescriptor(p1 $ccd )::CL,144878
125315 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125319
125319 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125306:CD,125311:CD,125315:JM,125319
125329 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructOper(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,125337:CD,125351:CD,125355
125334 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125355
125337 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125355
125342 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125355
125347 :: CALL :: call :: V :: v12.newPdbxStructOperList(p1 $structOper )::CL,144916
125351 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125355
125355 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125342:CD,125347:CD,125351:JM,125355
125365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,125373:CD,125387:CD,125391
125370 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125391
125373 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125391
125378 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125391
125383 :: CALL :: call :: V :: v12.newPdbxStrucAssembly(p1 $sa )::CL,144945
125387 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125391
125391 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125378:CD,125383:CD,125387:JM,125391
125401 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,125409:CD,125423:CD,125427
125406 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125427
125409 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125427
125414 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125427
125419 :: CALL :: call :: V :: v12.newPdbxStrucAssemblyGen(p1 $sa )::CL,144962
125423 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125427
125427 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125414:CD,125419:CD,125423:JM,125427
125437 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,125445:CD,125459:CD,125463
125442 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125463
125445 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125463
125450 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125463
125455 :: CALL :: call :: V :: v12.newChemCompAtom(p1 $atom )::CL,144991
125459 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125463
125463 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125450:CD,125455:CD,125459:JM,125463
125473 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,125481:CD,125495:CD,125499
125478 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125499
125481 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125499
125486 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125499
125491 :: CALL :: call :: V :: v12.newChemCompBond(p1 $bond )::CL,145027
125495 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125499
125499 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125486:CD,125491:CD,125495:JM,125499
125509 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompIdentifier(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompIdentifier)::CD,125517:CD,125531:CD,125535
125514 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125535
125517 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125535
125522 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125535
125531 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125535
125535 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125522:CD,125531:JM,125535
125545 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompDescriptor)::CD,125553:CD,125567:CD,125571
125550 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125571
125553 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125571
125558 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125571
125567 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125571
125571 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125558:CD,125567:JM,125571
125581 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,125589:CD,125603:CD,125607
125586 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,125607
125589 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,125607
125594 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,125607
125599 :: CALL :: call :: V :: v12.newStructConn(p1 $id )::CL,145087
125603 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,125607
125607 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,125594:CD,125599:CD,125603:JM,125607
125617 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerGeneric(java.lang.String,java.util.List,java.util.List)::CD,125627:CD,125643:CD,125647
125624 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .consumers::JM,125647
125627 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,125647
125632 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,125647
125643 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,125647
125647 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 16::CD,125632:CD,125643:JM,125647
125665 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStruct(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,125673:CD,125677:CD,125686:CD,125694:CD,125701:CD,125712
125673 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,125677:CL,86038
125677 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,70097:JM,70129:JM,70089:JM,70105:JM,70122
125686 :: CALL :: call :: V :: v10.setTitle(v12)::CL,94592
125694 :: CALL :: call :: V :: v10.setIdCode(v15)::CL,94552
125701 :: CALL :: call :: V :: v17.setPDBHeader(v10)::CL,86047
125712 :: CALL :: call :: V :: v19.setPDBCode(v21)::CL,86027
125731 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache)::CE,125732:CD,125747:CD,125763
125732 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache)::JM,104287
125747 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v12 = getBiologicalAssembly(p1 $pdbId , p2 $biolAssemblyNr , p3 $cache , v10)::JM,125763:CL,145169
125763 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v12::DD,125732
125795 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueRange.toString(java.util.List)::
125794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.toString(java.util.List)::CE,125795:CD,125798:CD,125825:CD,125829:CD,125830:CD,125834:CD,125835:JM,125817
125798 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,125834
125803 :: CALL :: call :: Ljava/lang/Object :: v9 = p1 $ranges .get(v20)::JM,125829:JM,125817
125808 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v3.append(v9)::
125813 :: CALL :: call :: I :: v13 = p1 $ranges .size()::JM,125829:JM,125817
125817 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 - #(1)::CF,125818
125819 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v3.append(#(,))::
125818 :: PRED :: IF :: Z :: if (v20 >= v15) goto 44::CD,125819:CF,125824
125825 :: CALL :: call :: I :: v7 = p1 $ranges .size()::JM,125829:JM,125817
125824 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,125835
125829 :: PRED :: IF :: Z :: if (v20 < v7) goto 16::CD,125803:CD,125808:CD,125813:CD,125817:CD,125818:CD,125824:CD,125825:CD,125835:JM,125829:JM,125834
125830 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,125834
125835 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::JM,125817:DD,125818:DD,125824:DD,125829
125834 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,125795
125855 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompoundsFromAlignment()::CD,125859:CD,125863:CD,125908:CD,125912:CD,125916:CD,125917:CD,125921:CD,126524:CD,126528:CD,126529:CD,126595:CD,126599:CD,126601
125859 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::JM,126528:JM,125930:JM,125944:JM,126523:JM,126517:JM,126599
125863 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
125871 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v15 = v13.getChain(v29)::CL,145357
125876 :: CALL :: call :: Z :: v17 = isChainPureNonPolymer(v15)::JM,125880:CL,145374
125880 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 59::CD,125884:CD,125889:CD,125895:CD,125899
125884 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = v18.getChain(v29)::CL,145357
125889 :: CALL :: call :: Z :: v22 = v5.add(v20)::
125895 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v29)::
125899 :: CALL :: call :: Z :: v26 = v3.add(v24)::
125904 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,126601
125908 :: CALL :: call :: Ljava/util/List :: v10 = v8.getChains()::JM,125916:CL,48869
125912 :: CALL :: call :: I :: v12 = v10.size()::JM,125916
125917 :: NORM :: declaration :: Ljava/util/TreeMap :: v30 = new java.util.TreeMap::JM,126517
125916 :: PRED :: IF :: Z :: if (v29 < v12) goto 22::CF,125917:CD,125871:CD,125876:CD,125880:CD,125904:CD,125908:CD,125912:CD,126601
125921 :: CALL :: call :: Ljava/util/Iterator :: v33 = v3.iterator()::JM,126528:JM,125930
125926 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,126528:JM,125930
125931 :: CALL :: call :: I :: v40 = v38.intValue()::JM,125949
125930 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,125949
125935 :: CALL :: call :: Ljava/util/Iterator :: v42 = v3.iterator()::JM,125944:JM,126523
125940 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,125944:JM,126523
125945 :: CALL :: call :: I :: v49 = v47.intValue()::JM,125949
125944 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::JM,125949
125949 :: PRED :: IF :: Z :: if (v49 > v40) goto 163::CD,125954:CD,125962:CD,125967:CD,125971:CD,125979:CD,125989:CD,125995:CD,126000:CD,126519:CD,126523
125954 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v52 = v50.getChain(v40)::CL,145357
125962 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v55 = v53.getChain(v49)::CL,145357
125967 :: NORM :: declaration :: Ljava/util/HashMap :: v56 = new java.util.HashMap::
125971 :: NORM :: declaration :: Ljava/util/HashMap :: v58 = new java.util.HashMap::
125979 :: CALL :: call :: Ljava/lang/String :: v63 = getFullAtomSequence(v61, v56, #(0))::CL,145425
125989 :: CALL :: call :: Ljava/lang/String :: v67 = getFullAtomSequence(v65, v58, #(0))::CL,145425
125995 :: CALL :: call :: Z :: v70 = p0 $this .isProteinSequence(v63)::JM,126000:CL,145756
126001 :: CALL :: call :: Z :: v72 = p0 $this .isProteinSequence(v67)::JM,126006:CL,145756
126000 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 309::CD,126001:CD,126006:CD,126032:CD,126037
126007 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v74 = p0 $this .getProteinSequence(v63)::JM,126017:JM,126602:CL,145772
126006 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 309::CD,126007:CD,126012:CD,126017:CD,126021:CD,126025:CD,126032:CD,126037:CD,126113:CD,126117:CD,126121:CD,126125:CD,126129:CD,126130:CD,126134:CD,126135:CD,126136:CD,126137:CD,126138:CD,126139:CD,126140:CD,126141:CD,126142:CD,126163:CD,126171:CD,126181:CD,126189:CD,126199:CD,126207:CD,126223:CD,126228:CD,126233:CD,126238:CD,126246:CD,126247:CD,126430:CD,126431:CD,126509:CD,126513:CD,126517:CD,126602:CD,126603:CD,126604
126012 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v76 = p0 $this .getProteinSequence(v67)::JM,126021:JM,126603:CL,145772
126017 :: CALL :: call :: I :: v78 = v74.getLength()::JM,126017:JM,126602
126021 :: CALL :: call :: I :: v80 = v76.getLength()::JM,126021:JM,126603
126025 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v82 = p0 $this .alignProtein(v74, v76)::JM,126604:CL,145797
126032 :: CALL :: call :: Z :: v84 = p0 $this .isDNASequence(v63)::JM,126037:CL,145837
126037 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 370::CD,126038:CD,126043:CD,126069:CD,126074
126038 :: CALL :: call :: Z :: v86 = p0 $this .isDNASequence(v67)::JM,126043:CL,145837
126043 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 370::CD,126044:CD,126049:CD,126054:CD,126058:CD,126062:CD,126069:CD,126074:CD,126113:CD,126117:CD,126121:CD,126125:CD,126129:CD,126130:CD,126134:CD,126135:CD,126136:CD,126137:CD,126138:CD,126139:CD,126140:CD,126141:CD,126142:CD,126163:CD,126171:CD,126181:CD,126189:CD,126199:CD,126207:CD,126223:CD,126228:CD,126233:CD,126238:CD,126246:CD,126247:CD,126430:CD,126431:CD,126509:CD,126513:CD,126517:CD,126602:CD,126603:CD,126604
126044 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v88 = p0 $this .getDNASequence(v63)::JM,126054:JM,126602:CL,145853
126049 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v90 = p0 $this .getDNASequence(v67)::JM,126603:JM,126058:CL,145853
126054 :: CALL :: call :: I :: v92 = v88.getLength()::JM,126054:JM,126602
126058 :: CALL :: call :: I :: v94 = v90.getLength()::JM,126603:JM,126058
126062 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v96 = p0 $this .alignDNA(v88, v90)::JM,126604:CL,145878
126069 :: CALL :: call :: Z :: v98 = p0 $this .isRNASequence(v63)::JM,126074:CL,145918
126075 :: CALL :: call :: Z :: v100 = p0 $this .isRNASequence(v67)::JM,126080:CL,145918
126074 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 428::CD,126075:CD,126080:CD,126519:CD,126523
126081 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v102 = p0 $this .getRNASequence(v63)::JM,126091:JM,126602:CL,145934
126080 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 428::CD,126081:CD,126086:CD,126091:CD,126095:CD,126099:CD,126113:CD,126117:CD,126121:CD,126125:CD,126129:CD,126130:CD,126134:CD,126135:CD,126136:CD,126137:CD,126138:CD,126139:CD,126140:CD,126141:CD,126142:CD,126163:CD,126171:CD,126181:CD,126189:CD,126199:CD,126207:CD,126223:CD,126228:CD,126233:CD,126238:CD,126246:CD,126247:CD,126430:CD,126431:CD,126509:CD,126513:CD,126517:CD,126519:CD,126523:CD,126602:CD,126603:CD,126604
126086 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v104 = p0 $this .getRNASequence(v67)::JM,126603:JM,126095:CL,145934
126091 :: CALL :: call :: I :: v106 = v102.getLength()::JM,126091:JM,126602
126095 :: CALL :: call :: I :: v108 = v104.getLength()::JM,126603:JM,126095
126099 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v110 = p0 $this .alignRNA(v102, v104)::JM,126604:CL,145959
126113 :: CALL :: call :: I :: v117 = getNumGaps(v113)::JM,126129:CL,145999
126117 :: CALL :: call :: I :: v119 = getNumGapsQuery(v113)::JM,126137:CL,146035
126121 :: CALL :: call :: I :: v121 = getNumGapsTarget(v113)::JM,126140:CL,146082
126125 :: CALL :: call :: I :: v123 = v113.getLength()::JM,126129:JM,126125
126129 :: EXPR :: assign :: Ljava/lang/Object :: v124 = v123 - v117::DD,126135:JM,126130:JM,126134
126130 :: CALL :: call :: I :: v126 = v113.getNumIdenticals()::JM,126130:JM,126134
126135 :: EXPR :: assign :: D :: v128 = CONVERT I to D v124::CF,126136
126134 :: EXPR :: assign :: D :: v127 = CONVERT I to D v126::DD,126136:CF,126135
126137 :: EXPR :: assign :: D :: v130 = CONVERT I to D v119::DD,126139:CF,126138
126136 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v127 / v128::JM,126163:DD,126246:DD,126430:JM,126471:CF,126137
126139 :: EXPR :: assign :: Ljava/lang/Object :: v132 = v130 / v131::JM,126181:DD,126248:CF,126140
126138 :: EXPR :: assign :: D :: v131 = CONVERT I to D v111::CF,126139
126141 :: EXPR :: assign :: D :: v134 = CONVERT I to D v112::CF,126142
126140 :: EXPR :: assign :: D :: v133 = CONVERT I to D v121::DD,126142:CF,126141
126142 :: EXPR :: assign :: Ljava/lang/Object :: v135 = v133 / v134::JM,126199:DD,126250
126163 :: CALL :: call :: Ljava/lang/Double :: v148 = valueOf(v129)::JM,126163
126171 :: CALL :: call :: Ljava/lang/String :: v150 = format(#(%4.2f), v146)::
126181 :: CALL :: call :: Ljava/lang/Double :: v154 = valueOf(v132)::JM,126181
126189 :: CALL :: call :: Ljava/lang/String :: v156 = format(#(%4.2f), v152)::
126199 :: CALL :: call :: Ljava/lang/Double :: v160 = valueOf(v135)::JM,126199
126207 :: CALL :: call :: Ljava/lang/String :: v162 = format(#(%4.2f), v158)::
126223 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
126228 :: CALL :: call :: Ljava/lang/String :: v170 = v113.toString(#(100))::JM,126228
126233 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v165.append(v170)::
126238 :: CALL :: call :: Ljava/lang/String :: v174 = v172.toString()::
126247 :: PRED :: IF :: Z :: if (v177 <= #(0)) goto 952::CD,126248:CD,126249
126246 :: EXPR :: assign :: Z :: v177 = v129 < #(0.99999 d)::DD,126247
126249 :: PRED :: IF :: Z :: if (v179 >= #(0)) goto 952::CD,126250:CD,126251
126248 :: EXPR :: assign :: Z :: v179 = v132 > #(0.3 d)::DD,126249
126251 :: PRED :: IF :: Z :: if (v180 >= #(0)) goto 952::CD,126256:CD,126261:CD,126408
126250 :: EXPR :: assign :: Z :: v180 = v135 > #(0.3 d)::DD,126251
126256 :: CALL :: call :: Z :: v184 = v30.containsKey(v182)::JM,126261
126261 :: PRED :: IF :: Z :: if (v184 != #(0)) goto 785::CD,126266:CD,126271:CD,126330:CD,126335:CD,126336
126266 :: CALL :: call :: Z :: v188 = v30.containsKey(v186)::JM,126271
126271 :: PRED :: IF :: Z :: if (v188 != #(0)) goto 785::JM,96774:JM,96767:CD,126292:CD,126296:CD,126301:CD,126309:CD,126319:CD,126330:CD,126335:CD,126336
126292 :: CALL :: call :: V :: v196.addChain(v52)::CL,118911
126296 :: CALL :: call :: V :: v196.addChain(v55)::CL,118911
126301 :: CALL :: call :: V :: v196.setMolId(v290)::CL,118973
126309 :: CALL :: call :: Ljava/lang/Object :: v205 = v30.put(v203, v196)::
126319 :: CALL :: call :: Ljava/lang/Object :: v209 = v30.put(v207, v196)::
126330 :: CALL :: call :: Ljava/lang/Object :: v213 = v30.get(v211)::JM,126335
126335 :: EXPR :: assign :: Ljava/lang/Object :: v214 = CHECKCAST v213::DD,126336
126336 :: PRED :: IF :: Z :: if (v214 != #(null)) goto 868::CD,126357:CD,126363:CD,126371:CD,126394:CD,126402
126357 :: CALL :: call :: Ljava/lang/Object :: v225 = v30.get(v223)::
126363 :: CALL :: call :: V :: v226.addChain(v52)::CL,118911
126371 :: CALL :: call :: Ljava/lang/Object :: v231 = v30.put(v229, v226)::
126394 :: CALL :: call :: V :: v214.addChain(v55)::CL,118911
126402 :: CALL :: call :: Ljava/lang/Object :: v242 = v30.put(v240, v214)::
126408 :: CALL :: call :: Z :: v246 = areResNumbersAligned(v52, v55)::CL,146153
126431 :: PRED :: IF :: Z :: if (v256 <= #(0)) goto 1054::CD,126451:CD,126455:CD,126463:CD,126471:CD,126486:CD,126491:CD,126496:CD,126501:JM,126517
126430 :: EXPR :: assign :: Z :: v256 = v129 < #(1.0 d)::DD,126431
126451 :: CALL :: call :: I :: v265 = v113.getNumIdenticals()::JM,126451
126455 :: CALL :: call :: Ljava/lang/Integer :: v267 = valueOf(v265)::
126463 :: CALL :: call :: Ljava/lang/Integer :: v269 = valueOf(v124)::
126471 :: CALL :: call :: Ljava/lang/Double :: v271 = valueOf(v129)::JM,126471
126486 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v274 = new java.lang.StringBuilder::
126491 :: CALL :: call :: Ljava/lang/String :: v277 = v113.toString(#(100))::JM,126491
126496 :: CALL :: call :: Ljava/lang/StringBuilder :: v279 = v274.append(v277)::
126501 :: CALL :: call :: Ljava/lang/String :: v281 = v279.toString()::
126509 :: CALL :: call :: I :: v284 = v30.size()::JM,126517
126513 :: CALL :: call :: I :: v286 = v3.size()::JM,126517
126517 :: PRED :: IF :: Z :: if (v284 != v286) goto 1071::CD,126519:CD,126523
126519 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,125944:JM,126523
126523 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 139::CD,125940:CD,125944:CD,125945:CD,125949:CD,126524:CD,126528:JM,126523
126524 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,126528:JM,125930
126529 :: CALL :: call :: Ljava/util/Iterator :: v294 = v3.iterator()::JM,126599
126528 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 113::CD,125926:CD,125930:CD,125931:CD,125935:CD,126519:CD,126523:JM,126528
126534 :: CALL :: call :: Ljava/lang/Object :: v298 = v294.next()::JM,126599
126546 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v304 = v302.getChain(v301)::CL,145357
126555 :: CALL :: call :: Z :: v308 = v30.containsKey(v306)::JM,126560
126560 :: PRED :: IF :: Z :: if (v308 != #(0)) goto 1202::JM,96774:JM,96767:CD,126576:CD,126581:CD,126589
126576 :: CALL :: call :: V :: v316.addChain(v304)::CL,118911
126581 :: CALL :: call :: V :: v316.setMolId(v325)::CL,118973
126589 :: CALL :: call :: Ljava/lang/Object :: v324 = v30.put(v322, v316)::
126595 :: CALL :: call :: Z :: v296 = v294.hasNext()::JM,126599
126599 :: PRED :: IF :: Z :: if (v296 != #(0)) goto 1102::CD,126534:CD,126546:CD,126555:CD,126560:CD,126595:JM,126599
126601 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,125904:DD,125916
126603 :: EXPR :: assign :: null :: PHI v112 = v80, v94, v108::CF,126604:DD,126141
126602 :: EXPR :: assign :: null :: PHI v111 = v78, v92, v106::CF,126603:DD,126138
126604 :: EXPR :: assign :: null :: PHI v113 = v82, v96, v110::JM,126129:JM,126125:JM,126130:JM,126134:JM,126228:JM,126451:JM,126491
126903 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::JM,104410
126902 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::CE,126903:CD,126906:CD,126910:CD,126914:CD,126947:CD,126951:CD,126952:JM,126923
126906 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,126933:JM,126940:DD,126952
126910 :: CALL :: call :: Ljava/util/Collection :: v6 = p1 $chainIds2entities .values()::JM,126951:JM,126923
126914 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,126951:JM,126923
126919 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,126951:JM,126923
126923 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,126934:JM,126933:JM,126940
126924 :: CALL :: call :: Ljava/util/Iterator :: v16 = v3.iterator()::JM,126933:JM,126940
126929 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,126933:JM,126940
126933 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,126934
126934 :: PRED :: IF :: Z :: if (v21 != v14) goto 71::CD,126936:CD,126940:CD,126953:JM,126933
126936 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,126933:JM,126940
126941 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 93::CD,126942:JM,126951:JM,126923
126940 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,126953:CD,126929:CD,126933:CD,126934:JM,126940
126942 :: CALL :: call :: Z :: v25 = v3.add(v14)::
126947 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,126951:JM,126923
126951 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,126919:CD,126923:CD,126924:CD,126936:CD,126940:CD,126941:CD,126947:CD,126953:JM,126951:CF,126952
126953 :: EXPR :: assign :: null :: PHI v23 = #(1), #(0)::DD,126941
126952 :: NORM :: compound :: Ljava/util/List :: return v3::DD,126903
126979 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.createPurelyNonPolyCompounds(java.util.List)::CD,126984:CD,127019:CD,127023:CD,127027:CD,127028:CD,127032:CD,127104:JM,127037
126984 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,127032:JM,127102
126992 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = v12.getChain(v24)::CL,145357
126997 :: CALL :: call :: Z :: v16 = isChainPureNonPolymer(v14)::JM,127001:CL,145374
127001 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 46::CD,127005:CD,127010:CF,127015
127005 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v19 = v17.getChain(v24)::CL,145357
127010 :: CALL :: call :: Z :: v21 = v4.add(v19)::
127015 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,127104
127019 :: CALL :: call :: Ljava/util/List :: v9 = v7.getChains()::JM,127027:CL,48869
127023 :: CALL :: call :: I :: v11 = v9.size()::JM,127027
127027 :: PRED :: IF :: Z :: if (v24 < v11) goto 14::CD,126992:CD,126997:CD,127001:CD,127015:CD,127019:CD,127023:CD,127104:JM,127032
127028 :: CALL :: call :: Z :: v26 = v4.isEmpty()::JM,127032
127033 :: CALL :: call :: Z :: v28 = p1 $compounds .isEmpty()::JM,127037
127032 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 201::CD,127033:CD,127037:CD,127053:CD,127054:CD,127098:CD,127102:CD,127105
127037 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 108::CD,127043:CF,127053
127043 :: CALL :: call :: Ljava/lang/Object :: v32 = max(p1 $compounds , v29)::
127053 :: EXPR :: assign :: Ljava/lang/Object :: v36 = #(0) + #(1)::DD,127105:JM,127102
127054 :: CALL :: call :: Ljava/util/Iterator :: v38 = v4.iterator()::JM,127102
127059 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,127102
127064 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v44 = new org.biojava.nbio.structure.Compound::JM,127037
127068 :: CALL :: call :: V :: v44.addChain(v43)::CL,118911
127072 :: CALL :: call :: V :: v44.setMolId(v58)::CL,118973
127082 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v58)::
127093 :: CALL :: call :: Z :: v57 = p1 $compounds .add(v44)::JM,127037
127092 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v58 + #(1)::DD,127105:JM,127037
127098 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,127102
127102 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 124::CD,127059:CD,127064:JM,96774:JM,96767:CD,127068:CD,127072:CD,127082:CD,127092:CD,127093:CD,127098:CD,127105:JM,127102
127105 :: EXPR :: assign :: null :: PHI v58 = v36, v55::JM,127102:DD,127092
127104 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::DD,127015:DD,127027
127155 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.clone()::CD,127159:JM,87959:JM,87964:CD,127167:CD,127175:CD,127189:CD,127201:CD,127209:CD,127217:CD,127225:CD,127233:CD,127241
127159 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AtomImpl :: v3 = new org.biojava.nbio.structure.AtomImpl::
127167 :: CALL :: call :: V :: v3.setOccupancy(v6)::CL,94261
127175 :: CALL :: call :: V :: v3.setTempFactor(v9)::CL,94272
127179 :: EXPR :: reference :: C :: v11 = p0 $this .altLoc::DD,127182
127182 :: EXPR :: modify :: C :: v3.altLoc = v11::
127189 :: CALL :: call :: V :: v3.setCharge(v13)::CL,120719
127201 :: CALL :: call :: V :: v3.setX(v18)::CL,127778
127209 :: CALL :: call :: V :: v3.setY(v21)::CL,127794
127217 :: CALL :: call :: V :: v3.setZ(v24)::CL,127810
127225 :: CALL :: call :: V :: v3.setPDBserial(v27)::CL,94204
127233 :: CALL :: call :: V :: v3.setName(v30)::CL,94239
127241 :: CALL :: call :: V :: v3.setElement(v33)::CL,94327
127778 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setX(double)::JM,127786
127783 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
127786 :: EXPR :: modify :: D :: v4[#(0)] = p1 $x ::
127794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setY(double)::JM,127802
127799 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
127802 :: EXPR :: modify :: D :: v4[#(1)] = p1 $y ::
127810 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setZ(double)::JM,127818
127815 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
127818 :: EXPR :: modify :: D :: v4[#(2)] = p1 $z ::
128063 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,128068
128068 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = p1 $cc ::
128075 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::JM,145652:JM,145453
128074 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::CE,128075:CD,128081
128078 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .amino_char::DD,128081
128081 :: NORM :: compound :: Ljava/lang/Character :: return v3::CF,128075
128083 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.set(int,int,double)::JM,128097
128090 :: EXPR :: reference :: [[D :: v6 = p0 $this .A::
128093 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[p1 $i ]::
128097 :: EXPR :: modify :: D :: v7[p2 $j ] = p3 $s ::
129801 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::CE,129802:CD,129808
129802 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::JM,111568
129805 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v3 = p0 $this .obsoleteBehavior::DD,129808
129808 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: return v3::CF,129802
129811 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::JM,111751
129810 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::CF,129811:CD,129813:CD,129815:CD,129816:CD,129824
129813 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.ENUM$VALUES::DD,129815
129815 :: EXPR :: assign :: I :: v4 = v2.length::DD,129816
129816 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::DD,129824
129824 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: return v5::CF,129811
129837 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::CE,129838:CD,129848:CD,129852:JM,130103:JM,130006:JM,129994:JM,129962:JM,129884
129838 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::JM,111906:JM,111901
129848 :: CALL :: call :: Ljava/util/List :: v9 = getStatusIdRecords(v6)::JM,129857:JM,129852:CL,147902
129853 :: CALL :: call :: I :: v12 = v9.size()::JM,129857
129852 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 26::CD,129853:CD,129857:CD,129865
129857 :: PRED :: IF :: Z :: if (v12 == #(1)) goto 41::CD,129865:CD,129866:CD,129872:CD,129877:CD,129878:JM,129857
129865 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,129838
129866 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,129857
129872 :: CALL :: call :: Ljava/lang/Object :: v18 = v15.get(#(structureId))::JM,129877
129877 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,129878:JM,129884
129879 :: CALL :: call :: Z :: v21 = v19.equalsIgnoreCase(p1 $oldPdbId )::JM,129884:JM,130103:JM,130006:JM,129994:JM,129962
129878 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 79::CD,129879:CD,129884:CD,129892
129884 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,129892:CD,129893:CD,129898:CD,129899
129893 :: CALL :: call :: Ljava/lang/Object :: v24 = v15.get(#(status))::JM,129898
129892 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,129838
129899 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 126::CD,129907:CD,129908:CD,129912
129898 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,129899
129907 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,129838
129908 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v27 = fromString(v25)::JM,129912:CL,148272
129912 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 150::CF,129921:CD,129920:CD,129925:CD,129928:CD,129936
129921 :: NORM :: declaration :: Ljava/util/LinkedList :: v28 = new java.util.LinkedList::DD,129942:DD,129974:DD,130053:DD,130067:DD,130130
129920 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,129838
129925 :: CALL :: call :: [I :: v31 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,148491
129928 :: CALL :: call :: I :: v33 = v27.ordinal()::
129932 :: EXPR :: reference :: I :: v34 = v31[v33]::DD,129936
129937 :: CALL :: call :: Z :: v106 = v28.add(p1 $oldPdbId )::JM,130103:JM,130006:JM,129994:JM,129962:JM,129884
129936 :: PRED :: IF :: null :: switch v34::CD,129937:CD,129942:CD,129943:CD,129948:CD,129949:CD,130054:CD,130055:CD,130060:CD,130061
129943 :: CALL :: call :: Ljava/lang/Object :: v66 = v15.get(#(replacedBy))::JM,129948
129942 :: NORM :: compound :: Ljava/util/List :: return v28::DD,129838
129949 :: PRED :: IF :: Z :: if (v67 != #(null)) goto 248::CD,129957:CD,129958:CD,129962:CD,129968:CD,129973
129948 :: EXPR :: assign :: Ljava/lang/Object :: v67 = CHECKCAST v66::DD,129949
129957 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,129838
129958 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,129973
129963 :: CALL :: call :: Z :: v71 = v28.add(p1 $oldPdbId )::JM,130103:JM,130006:JM,129994:JM,129962:JM,129884
129962 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 268::CD,129963:JM,129973
129968 :: CALL :: call :: Z :: v73 = v69.equals(#(NONE))::JM,129973
129973 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 281::CD,129974:CD,129975:CD,129984:CD,129988:CD,130052:CD,130053:CD,130131
129975 :: CALL :: call :: [Ljava/lang/String :: v75 = v69.split(#( ))::JM,129988
129974 :: NORM :: compound :: Ljava/util/List :: return v28::DD,129838
129984 :: CALL :: call :: V :: sort(v75, v76)::
129988 :: EXPR :: assign :: I :: v79 = v75.length::DD,130052
129990 :: EXPR :: reference :: Ljava/lang/Object :: v80 = v75[v101]::DD,130008:DD,130039
129995 :: CALL :: call :: Ljava/util/List :: v82 = getReplacement(v80, p2 $recurse , p3 $includeObsolete )::CL,129837
129994 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 343::CD,129995:CD,130001:CD,130006
130001 :: CALL :: call :: V :: mergeReversed(v28, v82)::CL,148763
130007 :: NORM :: declaration :: [Ljava/lang/String :: v84 = new java.lang.String[]::JM,130012
130006 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 368::CD,130007:CD,130012:CD,130016:CD,130021:CD,130025:CD,130028:CD,130036
130008 :: EXPR :: modify :: Ljava/lang/Object :: v84[#(0)] = v80::
130012 :: CALL :: call :: Ljava/util/List :: v86 = asList(v84)::JM,130012
130016 :: CALL :: call :: V :: mergeReversed(v28, v86)::CL,148763
130021 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v89 = getStatus(v80)::CL,112137
130025 :: CALL :: call :: [I :: v91 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,148491
130028 :: CALL :: call :: I :: v93 = v89.ordinal()::
130032 :: EXPR :: reference :: I :: v94 = v91[v93]::DD,130036
130036 :: PRED :: IF :: null :: switch v94::CD,130038:CD,130043:CD,130047
130039 :: EXPR :: modify :: Ljava/lang/Object :: v95[#(0)] = v80::
130038 :: NORM :: declaration :: [Ljava/lang/String :: v95 = new java.lang.String[]::JM,130043
130043 :: CALL :: call :: Ljava/util/List :: v97 = asList(v95)::JM,130043
130047 :: CALL :: call :: V :: mergeReversed(v28, v97)::CL,148763
130051 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v101 + #(1)::DD,130131
130053 :: NORM :: compound :: Ljava/util/List :: return v28::DD,129838
130052 :: PRED :: IF :: Z :: if (v101 < v79) goto 316::CD,129994:CD,130051:CD,130131:CF,130053
130055 :: CALL :: call :: Ljava/lang/Object :: v37 = v15.get(#(replacedBy))::JM,130060
130054 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,129838
130061 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 470::CD,130062:CD,130067:CD,130068:CD,130072:CD,130077
130060 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,130061
130062 :: CALL :: call :: Z :: v64 = v28.add(p1 $oldPdbId )::JM,130103:JM,130006:JM,129994:JM,129962:JM,129884
130067 :: NORM :: compound :: Ljava/util/List :: return v28::DD,129838
130068 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toUpperCase()::JM,130077
130072 :: CALL :: call :: Z :: v43 = v40.equals(#(NONE))::JM,130077
130077 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 490::CD,130078:CD,130079:CD,130084:CD,130093:CD,130097:CD,130129:CD,130130:CD,130132
130079 :: CALL :: call :: Z :: v45 = v28.add(p1 $oldPdbId )::JM,130103:JM,130006:JM,129994:JM,129962:JM,129884
130078 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,129838
130084 :: CALL :: call :: [Ljava/lang/String :: v48 = v40.split(#( ))::JM,130097
130093 :: CALL :: call :: V :: sort(v48, v49)::
130097 :: EXPR :: assign :: I :: v52 = v48.length::DD,130129
130099 :: EXPR :: reference :: Ljava/lang/Object :: v53 = v48[v62]::DD,130116
130103 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 562::CD,130104:CD,130110:CD,130115:CD,130120:CD,130124
130104 :: CALL :: call :: Ljava/util/List :: v55 = getReplacement(v53, p2 $recurse , p3 $includeObsolete )::CL,129837
130110 :: CALL :: call :: V :: mergeReversed(v28, v55)::CL,148763
130115 :: NORM :: declaration :: [Ljava/lang/String :: v57 = new java.lang.String[]::JM,130120
130116 :: EXPR :: modify :: Ljava/lang/Object :: v57[#(0)] = v53::
130120 :: CALL :: call :: Ljava/util/List :: v59 = asList(v57)::JM,130120
130124 :: CALL :: call :: V :: mergeReversed(v28, v59)::CL,148763
130129 :: PRED :: IF :: Z :: if (v62 < v52) goto 533::CD,130103:CD,130128:CD,130132:CF,130130
130128 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v62 + #(1)::DD,130132
130131 :: EXPR :: assign :: null :: PHI v101 = #(0), v100::DD,130051:DD,130052
130130 :: NORM :: compound :: Ljava/util/List :: return v28::DD,129838
130132 :: EXPR :: assign :: null :: PHI v62 = #(0), v61::DD,130128:DD,130129
130295 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::
130294 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::CE,130295:CD,130300:CD,130340:CD,130344:CD,130361:CD,130362
130301 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $pdbId .substring(#(1), #(3))::JM,130300
130300 :: PRED :: IF :: Z :: if (p2 $obsolete  == #(0)) goto 37::CD,130301:CD,130307:CD,130311:CD,130321:CD,130327:CD,130331:CD,130362:JM,130300
130307 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toLowerCase()::
130311 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::DD,130362
130312 :: EXPR :: reference :: Ljava/io/File :: v21 = p0 $this .obsoleteDirPath::
130321 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .substring(#(1), #(3))::JM,130300
130327 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toLowerCase()::
130331 :: NORM :: declaration :: Ljava/io/File :: v13 = new java.io.File::DD,130362
130332 :: EXPR :: reference :: Ljava/io/File :: v14 = p0 $this .splitDirPath::
130340 :: CALL :: call :: Z :: v26 = v23.exists()::JM,130344
130345 :: CALL :: call :: Z :: v28 = v23.mkdirs()::
130344 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,130345:CF,130361
130361 :: NORM :: compound :: Ljava/io/File :: return v23::DD,130295
130362 :: EXPR :: assign :: null :: PHI v23 = v20, v13::DD,130361
130393 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::
130392 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::CE,130393:CD,130397:CD,130398:CD,130402:CD,130410:CD,130415:CD,130419
130397 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,130419
130398 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $pdbId .toLowerCase()::
130402 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
130410 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v4.append(#(.cif.gz))::JM,130419
130415 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,130419
130419 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,130393
130423 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::CE,130424:CD,130428:CD,130433:CD,130437:CD,130442:CD,130447:CD,130451
130424 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::
130428 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,130451
130433 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $pdbId .toLowerCase()::JM,130451
130437 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(v8)::JM,130451
130442 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#(.ent.gz))::JM,130451
130447 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,130451
130451 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,130424
130457 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::JM,112002:JM,112007:JM,112011
130456 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::CE,130457:CD,130461:CD,130465:CD,130482:CD,130521:CD,130524:JM,130491
130461 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,130465:JM,130482:JM,130491:JM,130524
130465 :: CALL :: call :: Ljava/lang/String :: v9 = v6.getHeaderField(#(Last-Modified))::JM,130465:JM,130482:JM,130491:JM,130524
130483 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v15 = new java.text.SimpleDateFormat::JM,130491:JM,130524
130482 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 92::CF,130524:CF,130483:CD,130491
130491 :: CALL :: call :: Ljava/util/Date :: v20 = v15.parse(v9)::JM,130491:JM,130524
130521 :: NORM :: compound :: Ljava/util/Date :: return v34::CF,130457
130524 :: EXPR :: assign :: null :: PHI v34 = #(null), v20, #(null), #(null)::CF,130521
130541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.downloadFile(java.net.URL,java.io.File)::CD,130550:CD,130555:CD,130559:CD,130564:CD,130568:CD,130577:CD,130593:CD,130598:CD,130647:CD,130651
130550 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
130555 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $destination )::CL,149036
130559 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
130564 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
130568 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
130577 :: CALL :: call :: Ljava/net/URLConnection :: v24 = prepareURLConnection(v22, #(60000))::CL,149089
130593 :: NORM :: declaration :: Ljava/io/FileOutputStream :: v30 = new java.io.FileOutputStream::
130598 :: CALL :: call :: Ljava/nio/channels/FileChannel :: v33 = v30.getChannel()::
130647 :: CALL :: call :: V :: copy(v19, p2 $destination )::CL,149120
130651 :: CALL :: call :: Z :: v63 = v19.delete()::
130709 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::CE,130710:CD,130713:CD,130714:CD,130715:CD,130719:JM,130832:JM,130724
130710 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::JM,112150
130713 :: EXPR :: assign :: I :: v3 = p1 $pdbIds .length::CF,130714
130715 :: CALL :: call :: Ljava/util/List :: v6 = getStatusIdRecords(p1 $pdbIds )::JM,130725:JM,130719:JM,130814:CL,147902
130714 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v4 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,130834
130719 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 26::CD,130720:CD,130724:CD,130725:CD,130728:CD,130737:JM,130814
130720 :: CALL :: call :: I :: v9 = v6.size()::JM,130725:JM,130814
130725 :: PRED :: IF :: Z :: if (v9 == v10) goto 44::CD,130728:CD,130737:CD,130832:CD,130833:CD,130834:CD,130838
130724 :: EXPR :: assign :: I :: v10 = p1 $pdbIds .length::CF,130725
130728 :: CALL :: call :: Ljava/lang/String :: v53 = toString(p1 $pdbIds )::
130737 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,130710
130739 :: CALL :: call :: Ljava/util/Iterator :: v14 = v6.iterator()::JM,130725:JM,130814
130744 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.next()::JM,130814
130749 :: CALL :: call :: Ljava/lang/Object :: v22 = v19.get(#(structureId))::JM,130754
130755 :: PRED :: IF :: Z :: if (v23 == #(null)) goto 186::CF,130836:CD,130760:CD,130765
130754 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,130755:JM,130765
130756 :: EXPR :: reference :: Ljava/lang/Object :: v24 = p1 $pdbIds [v49]::JM,130765
130760 :: CALL :: call :: Z :: v26 = v23.equalsIgnoreCase(v24)::JM,130765
130765 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 110::CD,130767:CD,130772:CD,130773:CD,130794:CD,130835:CD,130836:CD,130837
130767 :: CALL :: call :: Ljava/lang/Object :: v29 = v19.get(#(status))::JM,130772
130773 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 150::CD,130790:CD,130835
130772 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,130773
130785 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
130790 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v36 = fromString(v30)::JM,130835:CL,148272
130794 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 180::
130802 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
130806 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = v37::
130810 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,130814
130815 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 216::CF,130831
130814 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 63::CD,130744:CD,130749:CD,130754:CD,130755:CD,130810:CD,130836:CD,130837:JM,130814:CF,130815
130827 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
130831 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v49 + #(1)::DD,130838
130833 :: PRED :: IF :: Z :: if (v48 < v12) goto 51::CD,130739:CD,130810:CD,130814:CD,130815:CD,130831:CD,130832:CD,130836:CD,130837:CD,130838:JM,130725:CF,130834
130832 :: EXPR :: assign :: I :: v12 = p1 $pdbIds .length::CF,130833
130835 :: EXPR :: assign :: null :: PHI v37 = #(null), v36::DD,130794:DD,130806
130834 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v4::DD,130710
130837 :: EXPR :: assign :: null :: PHI v42 = #(0), v42, v42, #(1)::JM,130814:DD,130815:DD,130837
130836 :: EXPR :: assign :: null :: PHI v49 = v48, v49, v49, v49::CF,130837:DD,130831:DD,130836
130838 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,130833:DD,130836:CF,130832
131460 :: CALL :: call :: V :: p0 $this .setScopVersion(v6)::CL,131497
131472 :: CALL :: call :: V :: p0 $this .addMirror(v8)::CL,150290
131480 :: CALL :: call :: V :: p0 $this .addMirror(v12)::CL,150290
131497 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setScopVersion(java.lang.String)::CD,131503:CD,131512:CD,131517
131503 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v17 = new java.lang.NullPointerException::
131509 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .scopVersion::JM,131517
131512 :: CALL :: call :: Z :: v7 = v5.equals(p1 $scopVersion )::JM,131517
131517 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 29::CD,131525:CD,131532:CD,131539:CD,131546
131522 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v9 = p0 $this .installedCla::JM,131525
131525 :: CALL :: call :: V :: v9.set(#(0))::JM,131525
131529 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedDes::JM,131532
131532 :: CALL :: call :: V :: v11.set(#(0))::JM,131532
131539 :: CALL :: call :: V :: v13.set(#(0))::JM,131539
131536 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedHie::JM,131539
131543 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = p0 $this .installedCom::JM,131546
131546 :: CALL :: call :: V :: v15.set(#(0))::JM,131546
131616 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,131616
131617 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $url )::
131625 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(p2 $claURL )::JM,131616
131630 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
131634 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::JM,131616
131635 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(p1 $url )::
131643 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(p3 $desURL )::JM,131616
131648 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
131652 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,131616
131653 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(p1 $url )::
131661 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v24.append(p4 $hieURL )::JM,131616
131666 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
131670 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::JM,131616
131671 :: CALL :: call :: Ljava/lang/String :: v34 = valueOf(p1 $url )::
131679 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v32.append(p5 $comURL )::JM,131616
131684 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
131714 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::CE,131715:CD,131720:CD,131722:CD,131726:CD,131761:CD,131765:CD,131766:CD,131775:CD,131779:CD,131842:JM,131809:JM,131839
131715 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::
131722 :: CALL :: call :: Ljava/util/Set :: v7 = v5.entrySet()::JM,131735:JM,131765
131720 :: EXPR :: reference :: Ljava/util/Map :: v5 = org.biojava.nbio.structure.scop.BerkeleyScopInstallation.EQUIVALENT_VERSIONS::JM,131735:JM,131765
131726 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,131735:JM,131765
131731 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,131735:JM,131765
131735 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,131740:JM,131757
131736 :: CALL :: call :: Ljava/lang/Object :: v17 = v15.getValue()::JM,131740
131743 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v18[v25]::JM,131752
131740 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,131741
131741 :: EXPR :: assign :: I :: v19 = v18.length::DD,131760
131747 :: CALL :: call :: Z :: v22 = v30.equals(v20)::JM,131752
131752 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 79::CD,131753:CD,131757:CD,131759:CD,131760:CD,131840:CD,131841:CD,131842
131753 :: CALL :: call :: Ljava/lang/Object :: v27 = v15.getKey()::JM,131757
131759 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,131841:CF,131840
131757 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::DD,131842
131760 :: PRED :: IF :: Z :: if (v25 < v19) goto 54::CF,131842:CD,131747:CD,131752
131761 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,131735:JM,131765
131766 :: CALL :: call :: [Ljava/lang/String :: v33 = v29.split(#(\.))::
131765 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 20::CD,131731:CD,131735:CD,131736:CD,131740:CD,131741:CD,131760:CD,131761:CD,131840:CD,131841:CD,131842:JM,131765
131771 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v33[#(0)]::JM,131779
131775 :: CALL :: call :: I :: v36 = parseInt(v34)::JM,131779
131779 :: PRED :: IF :: Z :: if (v36 != #(1)) goto 147::CF,131810:CF,131780:CD,131785:CD,131790:CD,131795:CD,131800:CD,131805:CD,131809:CD,131815:CD,131820:CD,131825:CD,131830:CD,131835:CD,131839
131780 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::JM,131809
131785 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(p1 $fileType )::JM,131809:JM,131842:JM,131839
131790 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(.scop.))::JM,131809:JM,131839
131795 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v58.append(v29)::JM,131809:JM,131839
131800 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(.txt))::JM,131809:JM,131839
131805 :: CALL :: call :: Ljava/lang/String :: v65 = v63.toString()::JM,131809:JM,131839
131810 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::JM,131839
131809 :: NORM :: compound :: Ljava/lang/String :: return v65::DD,131715
131815 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v37.append(p1 $fileType )::JM,131839:JM,131842:JM,131809
131820 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v41.append(#(.scope.))::JM,131809:JM,131839
131825 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v29)::JM,131809:JM,131839
131830 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#(-stable.txt))::JM,131809:JM,131839
131835 :: CALL :: call :: Ljava/lang/String :: v51 = v49.toString()::JM,131809:JM,131839
131839 :: NORM :: compound :: Ljava/lang/String :: return v51::DD,131715
131842 :: EXPR :: assign :: null :: PHI v29 = p2 $version , v28, v30::JM,131735:JM,131765:JM,131809:JM,131839:DD,131840
131840 :: EXPR :: assign :: null :: PHI v30 = v29, v30::CF,131841:JM,131752:DD,131840:DD,131842
131841 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,131759:DD,131760
131884 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.extractRanges(java.lang.String)::CD,131889:CD,131897:CD,131902:CD,131941
131889 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $range .split(#(,))::JM,131939:JM,131941
131894 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .scopVersion::JM,131902
131897 :: CALL :: call :: I :: v10 = v7.compareTo(#(1.73))::JM,131902
131902 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 89::CD,131939:CD,131940:CD,131946:JM,131941
131904 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v6[v29]::JM,131912:JM,131919:JM,131934
131908 :: CALL :: call :: I :: v15 = v13.length()::JM,131912
131914 :: CALL :: call :: C :: v19 = v13.charAt(#(1))::JM,131919
131912 :: PRED :: IF :: Z :: if (v15 >= #(2)) goto 48::CD,131914:CD,131919
131919 :: PRED :: IF :: Z :: if (v19 == #(58)) goto 78::CD,131920:CD,131925:CD,131930:CF,131938
131920 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::JM,131934
131925 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v13)::JM,131934
131930 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,131934
131934 :: EXPR :: modify :: Ljava/lang/Object :: v6[v29] = v27::
131938 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,131946
131939 :: EXPR :: assign :: I :: v12 = v6.length::CF,131940
131940 :: PRED :: IF :: Z :: if (v29 < v12) goto 30::CD,131908:CD,131912:CD,131938:CD,131939:CD,131946:JM,131941
131941 :: CALL :: call :: Ljava/util/List :: v31 = asList(v6)::JM,131941
131946 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,131938:DD,131940:CF,131939
132187 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.toString()::CE,132188:CD,132191:CD,132199:CD,132204:CD,132212:CD,132216:CD,132221:CD,132229:CD,132270:CD,132274:CD,132275:CD,132277:CD,132282:CD,132286
132191 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,132286
132188 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.toString()::JM,113471
132199 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
132196 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::
132204 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
132209 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .groups::
132212 :: CALL :: call :: I :: v14 = v12.size()::
132216 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
132221 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(#( ))::
132226 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::JM,132274
132229 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,132274
132234 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,132274
132252 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toPDB()::CL,150402
132260 :: CALL :: call :: Ljava/lang/String :: v39 = format(#(%s %s), v30)::
132265 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v3.append(v39)::
132270 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,132274
132274 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 55::CD,132234:CD,132252:CD,132260:CD,132265:CD,132270:JM,132274
132275 :: EXPR :: reference :: Ljava/lang/String :: v42 = org.biojava.nbio.structure.Site.lineEnd::
132277 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v3.append(v42)::
132282 :: CALL :: call :: Ljava/lang/String :: v46 = v3.toString()::JM,132286
132286 :: NORM :: compound :: Ljava/lang/String :: return v46::DD,132188
132603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::CE,132604:CD,132610
132607 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v3 = p0 $this .polymerType::DD,132610
132604 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::JM,172375:JM,172363:JM,172366:JM,172383
132610 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v3::CF,132604
132612 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::CE,132613:CD,132619
132613 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::JM,113841:JM,113847:JM,113961:JM,113835:JM,113852:JM,145653:JM,145565:JM,172354:JM,172360
132619 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,132613
132616 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .one_letter_code::DD,132619
132622 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::JM,113857:JM,113858:JM,113862:JM,172353:JM,172347:JM,172348
132621 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::CE,132622:CD,132628
132625 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .mon_nstd_parent_comp_id::DD,132628
132630 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::CE,132631:CD,132637
132631 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::JM,114102:JM,114112
132628 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,132622
132634 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .three_letter_code::DD,132637
132637 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,132631
132648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSwissprotId(java.lang.String)::JM,132653
132653 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .swissprot_id = p1 $sp_id ::
132659 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB(java.lang.StringBuffer)::CD,132680:CD,132686:CD,132707:CD,132713:CD,132734:CD,132740
132680 :: CALL :: call :: Ljava/lang/String :: v13 = format(v4, #(REMARK 800 SITE_IDENT...), v7)::
132686 :: CALL :: call :: Ljava/lang/StringBuffer :: v15 = p1 $stringBuffer .append(v13)::
132707 :: CALL :: call :: Ljava/lang/String :: v22 = format(v16, #(REMARK 800 EVIDENCE_C...), v18)::
132713 :: CALL :: call :: Ljava/lang/StringBuffer :: v24 = p1 $stringBuffer .append(v22)::
132734 :: CALL :: call :: Ljava/lang/String :: v31 = format(v25, #(REMARK 800 SITE_DESCR...), v27)::
132740 :: CALL :: call :: Ljava/lang/StringBuffer :: v33 = p1 $stringBuffer .append(v31)::
132775 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::CE,132776:CD,132780:JM,87936:JM,87930:JM,87933:CD,132786:CD,132805:CD,132806:CD,132810:JM,132803
132776 :: EXIT :: exit :: Lorg/biojava/nbio/structure/jama/Matrix :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::JM,115258:JM,115413
132780 :: NORM :: declaration :: Lorg/biojava/nbio/structure/jama/Matrix :: v4 = new org.biojava.nbio.structure.jama.Matrix::DD,132806
132786 :: CALL :: call :: [[D :: v7 = v4.getArray()::CL,133164
132792 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v7[v18]::
132798 :: EXPR :: modify :: D :: v9[v15] = v12::
132796 :: PRED :: IF :: Z :: if (v18 != v15) goto 45::CD,132807
132802 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,132809:CF,132808
132803 :: PRED :: IF :: Z :: if (v15 < p2 $n ) goto 30::CD,132796:CD,132802:CD,132807:CD,132808:CD,132809:CF,132804
132806 :: NORM :: compound :: Lorg/biojava/nbio/structure/jama/Matrix :: return v4::DD,132776
132807 :: EXPR :: assign :: null :: PHI v12 = #(1.0 d), #(0.0 d)::DD,132798
132804 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,132810
132805 :: PRED :: IF :: Z :: if (v17 < p1 $m ) goto 24::CD,132803:CD,132804:CD,132808:CD,132809:CD,132810:CF,132806
132810 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,132805:DD,132808
132808 :: EXPR :: assign :: null :: PHI v18 = v17, v18::CF,132809:DD,132796:DD,132804:DD,132808
132809 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,132796:DD,132802:DD,132803
132838 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::JM,115322
132837 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::CE,132838:CD,132841:CD,132845:CD,132850:CD,133001:CD,133002
132841 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $oligomer .toLowerCase()::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132845 :: CALL :: call :: Z :: v8 = v5.equals(#(monomeric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132850 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 26::CD,132852:CD,132857:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132927:JM,132892
132852 :: CALL :: call :: Z :: v11 = v5.equals(#(dimeric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132859 :: CALL :: call :: Z :: v14 = v5.equals(#(trimeric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132857 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 41::CD,132859:CD,132864:CD,133002:JM,132962:JM,132899:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132866 :: CALL :: call :: Z :: v17 = v5.equals(#(tetrameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132864 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,132866:CD,132871:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132871 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 71::CD,132873:CD,132878:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132873 :: CALL :: call :: Z :: v20 = v5.equals(#(pentameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132878 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 86::CD,132880:CD,132885:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132880 :: CALL :: call :: Z :: v23 = v5.equals(#(hexameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132887 :: CALL :: call :: Z :: v26 = v5.equals(#(heptameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132885 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 102::CD,132887:CD,132892:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927
132894 :: CALL :: call :: Z :: v29 = v5.equals(#(octameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132892 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 118::CD,132894:CD,132899:CD,133002:JM,132962:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132899 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 134::CD,132901:CD,132906:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132901 :: CALL :: call :: Z :: v32 = v5.equals(#(nonameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132906 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 150::CD,132908:CD,132913:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132908 :: CALL :: call :: Z :: v35 = v5.equals(#(decameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132915 :: CALL :: call :: Z :: v38 = v5.equals(#(undecameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132913 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 166::CD,132915:CD,132920:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132857:JM,132927:JM,132892
132922 :: CALL :: call :: Z :: v41 = v5.equals(#(dodecameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132920 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 182::CD,132922:CD,132927:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132892
132927 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 198::CD,132929:CD,132934:CD,133002:JM,132962:JM,132899:JM,132864:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132929 :: CALL :: call :: Z :: v44 = v5.equals(#(tridecameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132934 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 214::CD,132936:CD,132941:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132936 :: CALL :: call :: Z :: v47 = v5.equals(#(tetradecameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132943 :: CALL :: call :: Z :: v50 = v5.equals(#(pentadecameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132941 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 230::CD,132943:CD,132948:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132950 :: CALL :: call :: Z :: v53 = v5.equals(#(hexadecameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132948 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 246::CD,132950:CD,132955:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132920:JM,132857:JM,132927:JM,132892
132955 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 262::CD,132957:CD,132962:CD,133002:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132957 :: CALL :: call :: Z :: v56 = v5.equals(#(heptadecameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132962 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 278::CD,132964:CD,132969:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132964 :: CALL :: call :: Z :: v59 = v5.equals(#(octadecameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132971 :: CALL :: call :: Z :: v62 = v5.equals(#(nonadecameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132969 :: PRED :: IF :: Z :: if (v59 == #(0)) goto 294::CD,132971:CD,132976:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132978 :: CALL :: call :: Z :: v65 = v5.equals(#(eicosameric))::JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132983:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132976 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 310::CD,132978:CD,132983:CD,133002:JM,132962:JM,132899:JM,132864:JM,132934:JM,132871:JM,132906:JM,132969:JM,132878:JM,132941:JM,132850:JM,132976:JM,132913:JM,132948:JM,132885:JM,132955:JM,132920:JM,132857:JM,132927:JM,132892
132983 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 326::CD,132985:CD,132990:CD,133002
132985 :: CALL :: call :: Z :: v68 = v5.matches(#((\d+).*))::JM,132990
132990 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 347::CF,133002:CD,132991:CD,132997
132991 :: CALL :: call :: Ljava/lang/String :: v71 = v5.replaceAll(#((\d+).*), #($1))::JM,133002
132997 :: CALL :: call :: I :: v73 = parseInt(v71)::JM,133002
133002 :: EXPR :: assign :: null :: PHI v94 = #(1), #(2), #(3), #(4), #(5), #(6), #(7), #(8), #(9), #(10), #(11), #(12), #(13), #(14), #(15), #(16), #(17), #(18), #(19), #(20), #(0), v73::CF,133001
133001 :: NORM :: compound :: I :: return v94::DD,132838
133121 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,133141
133141 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v4::
133164 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getArray()::CE,133165:CD,133171
133165 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.jama.Matrix.getArray()::
133171 :: NORM :: compound :: [[D :: return v3::CF,133165
133168 :: EXPR :: reference :: [[D :: v3 = p0 $this .A::DD,133171
133257 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setId(java.lang.String)::JM,133262
133262 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
133268 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setChainId(java.lang.String)::JM,133273
133273 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
133288 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setId(int)::JM,133293
133293 :: EXPR :: modify :: I :: p0 $this .id = p1 $id ::
133299 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setMacromolecularSize(int)::JM,133304
133304 :: EXPR :: modify :: I :: p0 $this .macromolecularSize = p1 $macromolecularSize ::
133310 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setTransforms(java.util.List)::JM,133315
133315 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transforms = p1 $transforms ::
133365 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolName(java.lang.String)::JM,133370
133370 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = p1 $molName ::
133376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynonyms(java.util.List)::JM,133381
133381 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = p1 $synonyms ::
133387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEcNums(java.util.List)::JM,133392
133392 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = p1 $ecNums ::
133398 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setFragment(java.lang.String)::JM,133403
133403 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = p1 $fragment ::
133409 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEngineered(java.lang.String)::JM,133414
133414 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = p1 $engineered ::
133420 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMutation(java.lang.String)::JM,133425
133425 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = p1 $mutation ::
133431 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setBiologicalUnit(java.lang.String)::JM,133436
133436 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = p1 $biologicalUnit ::
133442 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setDetails(java.lang.String)::JM,133447
133447 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
133453 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynthetic(java.lang.String)::JM,133458
133458 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = p1 $synthetic ::
133464 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismScientific(java.lang.String)::JM,133469
133469 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = p1 $organismScientific ::
133475 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismTaxId(java.lang.String)::JM,133480
133480 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = p1 $organismTaxId ::
133486 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismCommon(java.lang.String)::JM,133491
133491 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = p1 $organismCommon ::
133497 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setStrain(java.lang.String)::JM,133502
133502 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = p1 $strain ::
133508 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setVariant(java.lang.String)::JM,133513
133513 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = p1 $variant ::
133519 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellLine(java.lang.String)::JM,133524
133524 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = p1 $cellLine ::
133530 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setAtcc(java.lang.String)::JM,133535
133535 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = p1 $atcc ::
133541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrgan(java.lang.String)::JM,133546
133546 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = p1 $organ ::
133552 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setTissue(java.lang.String)::JM,133557
133557 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = p1 $tissue ::
133563 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCell(java.lang.String)::JM,133568
133568 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = p1 $cell ::
133574 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganelle(java.lang.String)::JM,133579
133579 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = p1 $organelle ::
133585 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSecretion(java.lang.String)::JM,133590
133590 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = p1 $secretion ::
133596 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setGene(java.lang.String)::JM,133601
133601 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = p1 $gene ::
133607 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellularLocation(java.lang.String)::JM,133612
133612 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = p1 $cellularLocation ::
133618 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystem(java.lang.String)::JM,133623
133623 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = p1 $expressionSystem ::
133629 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTaxId(java.lang.String)::JM,133634
133634 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = p1 $expressionSystemTaxId ::
133640 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemStrain(java.lang.String)::JM,133645
133645 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = p1 $expressionSystemStrain ::
133651 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVariant(java.lang.String)::JM,133656
133656 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = p1 $expressionSystemVariant ::
133662 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellLine(java.lang.String)::JM,133667
133667 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = p1 $expressionSystemCellLine ::
133673 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemAtccNumber(java.lang.String)::JM,133678
133678 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = p1 $expressionSystemAtccNumber ::
133684 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrgan(java.lang.String)::JM,133689
133689 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = p1 $expressionSystemOrgan ::
133695 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTissue(java.lang.String)::JM,133700
133700 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = p1 $expressionSystemTissue ::
133706 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCell(java.lang.String)::JM,133711
133711 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = p1 $expressionSystemCell ::
133717 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrganelle(java.lang.String)::JM,133722
133722 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = p1 $expressionSystemOrganelle ::
133728 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellularLocation(java.lang.String)::JM,133733
133733 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = p1 $expressionSystemCellularLocation ::
133739 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVectorType(java.lang.String)::JM,133744
133744 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = p1 $expressionSystemVectorType ::
133750 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVector(java.lang.String)::JM,133755
133755 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = p1 $expressionSystemVector ::
133761 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemPlasmid(java.lang.String)::JM,133766
133766 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = p1 $expressionSystemPlasmid ::
133772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemGene(java.lang.String)::JM,133777
133777 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = p1 $expressionSystemGene ::
133783 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOtherDetails(java.lang.String)::JM,133788
133788 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = p1 $expressionSystemOtherDetails ::
133801 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = #()::
133804 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = #()::
133813 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setSurname(java.lang.String)::JM,133818
133818 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = p1 $surname ::
133824 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.getSurname()::CE,133825:CD,133831
133825 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Author.getSurname()::
133831 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,133825
133828 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .surname::DD,133831
133833 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setInitials(java.lang.String)::JM,133838
133838 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = p1 $initials ::
133887 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::CE,133888:CD,133893:CD,133894:CD,133898:CD,134231:CD,134235:CD,134240:CD,134241:JM,134082:JM,133905:JM,133983
133888 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::JM,118571
133894 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.clone()::JM,133898
133893 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST p1 $seqResGroups ::JM,133898
133898 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,134236
133900 :: CALL :: call :: Ljava/lang/Object :: v14 = p2 $atmResGroups .get(v90)::JM,134082:JM,133905:JM,134235:JM,133983
133906 :: CALL :: call :: Z :: v17 = v15.isWater()::JM,133910:CL,150591
133905 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,133984:DD,134031:DD,134103
133910 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 48::CD,133916:CD,133920:CD,133924:CD,134230:CD,134231:CD,134235:CD,134239:CD,134240:CD,134241
133916 :: CALL :: call :: Ljava/lang/Integer :: v21 = v19.getSeqNum()::JM,133937:JM,133924:JM,133977:JM,134238:CL,150608
133920 :: CALL :: call :: I :: v23 = v21.intValue()::JM,133937:JM,133924:JM,133977:JM,134238
133924 :: PRED :: IF :: Z :: if (v23 >= #(0)) goto 89::CD,133936:CD,133937:CD,134237
133938 :: CALL :: call :: Ljava/lang/Object :: v25 = p1 $seqResGroups .get(#(0))::JM,134082:JM,133905:JM,134235:JM,133983
133936 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,133888
133937 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 158::CF,134237:CD,133938:CD,133944:CD,133948:CD,133952:CD,133957:CD,133976:CD,133978:CD,134238:JM,134082:JM,133905:JM,134235:JM,133983
133944 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getPDBName()::JM,133957:CL,104483
133948 :: CALL :: call :: Ljava/lang/String :: v30 = v15.getPDBName()::JM,133957:CL,104483
133952 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,133957
133957 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 130::CD,133975:CD,133976:CD,133978:CD,134237:CD,134238
133975 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,133888
133978 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 301::CD,133979:CD,133983:CD,134078:CD,134082:JM,133905:JM,134235
133979 :: CALL :: call :: I :: v38 = p1 $seqResGroups .size()::JM,134082:JM,133905:JM,134235:JM,133983
133976 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 166::CF,134238:CD,133977
133977 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v23 + #(-1)::DD,134238
133983 :: PRED :: IF :: Z :: if (v36 < v38) goto 301::CD,133984:CD,133985:CD,134078:CD,134082:JM,133905:JM,134235:JM,133983
133984 :: EXPR :: assign :: Z :: v39=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,133985
133985 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 241::CD,133988:CD,133993:CD,133998:CD,134003:CD,134007:CD,134012:CD,134017:CD,134022:CD,134030:CD,134031:CD,134032:CD,134239
133988 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::
133993 :: CALL :: call :: Ljava/lang/StringBuilder :: v144 = v140.append(v36)::
133998 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v144.append(#( > seqres! ))::
134003 :: CALL :: call :: I :: v148 = p1 $seqResGroups .size()::JM,134082:JM,133905:JM,134235:JM,133983
134007 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v146.append(v148)::JM,134082:JM,133905:JM,134235
134012 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(#( ))::
134017 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v152.append(v15)::
134022 :: CALL :: call :: Ljava/lang/String :: v156 = v154.toString()::
134030 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,133888
134031 :: EXPR :: assign :: Z :: v40=v15 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,134032
134035 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
134032 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 511::CF,134239:CD,134035:CD,134040:CD,134045:CD,134050:CD,134054:CD,134059:CD,134064:CD,134069:CD,134077:CD,134230:CD,134231:CD,134235:CD,134240:CD,134241
134040 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v119.append(v36)::
134045 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v123.append(#( > seqres! ))::
134050 :: CALL :: call :: I :: v128 = p1 $seqResGroups .size()::JM,134082:JM,133905:JM,134235:JM,133983
134054 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v126.append(v128)::JM,134082:JM,133905:JM,134235
134059 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v130.append(#( ))::
134064 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v15)::
134069 :: CALL :: call :: Ljava/lang/String :: v137 = v135.toString()::
134078 :: CALL :: call :: I :: v42 = p1 $seqResGroups .size()::JM,134082:JM,133905:JM,134235:JM,133983
134077 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,133888
134082 :: PRED :: IF :: Z :: if (v36 < v42) goto 347::CD,134085:CD,134090:CD,134095:CD,134103:CD,134104:CD,134106:CD,134112:CD,134116:CD,134120:CD,134124:CD,134128:CD,134133:CD,134239:JM,134082:JM,133905:JM,134235:JM,133983
134085 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
134090 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v36)::
134095 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
134103 :: EXPR :: assign :: Z :: v52=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,134104
134106 :: CALL :: call :: Ljava/lang/Object :: v54 = p1 $seqResGroups .get(v36)::JM,134082:JM,133905:JM,134235:JM,133983
134104 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 511::CF,134239:CD,134105:CD,134230:CD,134231:CD,134235:CD,134240:CD,134241
134105 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,133888
134112 :: CALL :: call :: Ljava/lang/String :: v57 = v55.getPDBName()::JM,134133:CL,104483
134116 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,134133
134120 :: CALL :: call :: Ljava/lang/String :: v61 = v15.getPDBName()::JM,134133:CL,104483
134124 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,134133
134128 :: CALL :: call :: Z :: v65 = v59.equals(v63)::JM,134133
134133 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 438::CD,134136:CD,134141:CD,134146:CD,134151:CD,134156:CD,134161:CD,134166:CD,134174:CD,134175:CD,134185:CD,134230:CD,134231:CD,134235:CD,134239:CD,134240:CD,134241
134136 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
134141 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v36)::
134146 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v104.append(#( and ATOM record: ))::
134151 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v107.append(v15)::
134156 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v109.append(#( | ))::
134161 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v112.append(v55)::
134166 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::
134174 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,133888
134175 :: CALL :: call :: Ljava/lang/Object :: v67 = v8.set(v36, v15)::
134185 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v36)::
134230 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v90 + #(1)::DD,134241:CF,134240
134231 :: CALL :: call :: I :: v12 = p2 $atmResGroups .size()::JM,134082:JM,133905:JM,134235:JM,133983
134235 :: PRED :: IF :: Z :: if (v90 < v12) goto 23::CD,133900:CD,133905:CD,133906:CD,133910:CD,134236:JM,134082:JM,134235:JM,133983
134238 :: EXPR :: assign :: null :: PHI v36 = v23, v35::DD,133983:DD,134082:JM,133905:JM,134235:CF,133978
134239 :: EXPR :: assign :: null :: PHI v87 = v89, v33, v33, v33::DD,134240:CF,134230
134236 :: NORM :: compound :: Ljava/util/List :: return v8::DD,133888
134237 :: EXPR :: assign :: null :: PHI v33 = v89, #(0)::DD,133976:DD,133978:DD,134239
134240 :: EXPR :: assign :: null :: PHI v89 = #(1), v87::CF,134241:DD,134237:DD,134239
134241 :: EXPR :: assign :: null :: PHI v90 = #(0), v88::JM,134082:JM,133905:JM,133983:DD,134230:DD,134235
134351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideChains(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,134359:CD,134364:CD,134368
134359 :: CALL :: call :: Ljava/util/List :: v7 = p2 $atomRes .getAtomGroups(v5)::JM,134368:CL,54861
134364 :: CALL :: call :: I :: v9 = v7.size()::JM,134368
134368 :: PRED :: IF :: Z :: if (v9 >= #(1)) goto 35::CD,134400:CD,134406
134400 :: CALL :: call :: Z :: v21 = p0 $this .alignNucleotideGroups(v17, v19)::JM,134406:CL,150617
134406 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,134407
134407 :: CALL :: call :: V :: p2 $atomRes .setSeqResGroups(v17)::CL,87001
134430 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::CE,134431:CD,134436:CD,134440:CD,134444:CD,134450:CD,134458:CD,134463:CD,134467:CD,134472:CD,134477:CD,134482:CD,134492:CD,134497:CD,134501:CD,134506:CD,134511:CD,134516:CD,134524:CD,134529:CD,134546:CD,134547:CD,134550:CD,134556:CD,134557:CD,134565:CD,134569
134431 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::JM,118707
134436 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
134440 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
134444 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(0))::CL,145425
134450 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(0))::CL,145425
134458 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
134463 :: CALL :: call :: I :: v19 = v11.length()::
134467 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v15.append(v19)::
134472 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#(): ))::
134477 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v24.append(v11)::
134482 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
134492 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
134497 :: CALL :: call :: I :: v35 = v13.length()::
134501 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(v35)::
134506 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#(): ))::
134511 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(v13)::
134516 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
134524 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v45 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,134565:JM,134570:JM,134569:JM,134574:JM,134607:JM,134557
134529 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v47 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,134565:JM,134570:JM,134569:JM,134574:JM,134607:JM,134557
134546 :: NORM :: compound :: Z :: return #(1)::DD,134431
134547 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v57 = getBlosum65()::JM,134565:JM,134570:JM,134569:JM,134574:JM,134607:JM,134557
134550 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v58 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,134565:JM,134570:JM,134569:JM,134574:JM,134607:JM,134557
134556 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v61 = LOCAL::JM,134565:JM,134570:JM,134569:JM,134574:JM,134607:JM,134557
134557 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v63 = getPairwiseAligner(v45, v47, v61, v58, v57)::JM,134565:JM,134570:JM,134569:JM,134574:JM,134607:JM,134557
134565 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v65 = v63.getPair()::JM,134565:JM,134570:JM,134569:JM,134574:JM,134607:JM,134557
134570 :: CALL :: call :: I :: v68 = v65.getLength()::JM,134570:JM,134574:JM,134607
134569 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 216::CD,134570:CD,134574:CD,134599:JM,134607
134574 :: PRED :: IF :: Z :: if (v68 != #(0)) goto 260::CD,134599:CD,134602:CD,134607:CD,134612:CD,134617:CD,134625:CD,134634
134599 :: NORM :: compound :: Z :: return #(1)::DD,134431
134602 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
134607 :: CALL :: call :: Ljava/lang/String :: v75 = v65.toString(#(100))::JM,134570:JM,134574:JM,134607
134612 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v70.append(v75)::
134617 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
134625 :: CALL :: call :: Z :: v82 = p0 $this .mapChains(p1 $seqRes , p2 $atomRes , v65, v5, v7)::JM,134634:CL,151014
134634 :: NORM :: compound :: Z :: return v82::DD,134431
134698 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::CE,134699:CD,134704:CD,134709:CD,134714:CD,134718:CD,134719:CD,134723:CD,134728:CD,134729:CD,134730:CD,134736:CD,134741:CD,134746:CD,134754:CD,134759
134699 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::JM,118896
134704 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,134718:CL,104449
134709 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,134718
134714 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,134718
134718 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,134729
134719 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,134728:CL,64429
134723 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,134728
134730 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,134718
134728 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,134714:CD,134718:CD,134719:CD,134723:CD,134730:CF,134729
134729 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,134699
134736 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
134741 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,134728
134746 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#(' for PDB id ))::
134751 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .pdb_id::
134754 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::
134759 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
134846 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::JM,119006
134845 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::CE,134846:CD,134861:CD,134866:CD,134871:CD,134879:CD,134883:CD,134888:CD,134893:CD,134902:CD,134908:CD,134912:CD,134917:CD,134921:CD,134926:CD,134930:CD,134935:CD,134936:CD,134937:CD,134943:CD,134948:CD,134953:CD,134958:CD,134963
134861 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
134866 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p3 $modelnr )::JM,134935
134871 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in this structure. (...))::
134879 :: CALL :: call :: I :: v52 = v50.size()::
134876 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .models::
134883 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v49.append(v52)::
134888 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#()))::
134893 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
134902 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v10 = p0 $this .findChain(p1 $chainId , p3 $modelnr )::CL,134698
134908 :: CALL :: call :: Ljava/util/List :: v12 = v10.getAtomGroups()::JM,134921:CL,54331
134912 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,134921
134917 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,134921
134921 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::DD,134936
134926 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,134935:CL,64367
134930 :: CALL :: call :: Z :: v26 = v24.equals(p2 $pdbResnum )::JM,134935
134935 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 129::CD,134917:CD,134921:CD,134926:CD,134930:CD,134937:CF,134936
134936 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v20::DD,134846
134937 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,134921
134943 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
134948 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(p2 $pdbResnum )::JM,134935
134953 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#( in chain ))::
134958 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(p1 $chainId )::JM,134935
134963 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,134935
134992 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocGroup(java.lang.Character)::CD,134997:CD,135002:JM,135013:JM,135067
134997 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .getAtom(#(0))::JM,135002:CL,151630
135002 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 13::CD,135004:CD,135008:CD,135013
135004 :: CALL :: call :: Ljava/lang/Character :: v9 = v6.getAltLoc()::JM,135013:CL,114296
135008 :: CALL :: call :: Z :: v11 = v9.equals(p1 $altLoc )::JM,135013:JM,135067
135015 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .altLocs::DD,135018
135013 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 28::CD,135018
135018 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 47::CD,135022:CD,135026
135019 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .altLocs::JM,135026
135022 :: CALL :: call :: Z :: v15 = v13.isEmpty()::JM,135026
135026 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 49::CD,135031:CD,135069:CD,135073
135031 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,135073
135028 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .altLocs::JM,135073
135036 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,135073
135041 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,135049:CL,114287
135045 :: CALL :: call :: Z :: v27 = v25.isEmpty()::JM,135049
135051 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v29 = v23.getAtom(#(0))::JM,135056:CL,151630
135049 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,135051:CD,135056:CD,135069:CD,135073
135058 :: CALL :: call :: Ljava/lang/Character :: v31 = v29.getAltLoc()::JM,135067:CL,114296
135056 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 109::CD,135058:CD,135062:CD,135067:CD,135069:CD,135073
135062 :: CALL :: call :: Z :: v33 = v31.equals(p1 $altLoc )::JM,135067:JM,135013
135067 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 125::CD,135069:CD,135073
135069 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,135073
135073 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 64::CD,135036:CD,135041:CD,135045:CD,135049:JM,135073
135119 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomA = p1 $atomA ::
135122 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomB = p2 $atomB ::
135125 :: EXPR :: modify :: I :: p0 $this .bondOrder = p3 $bondOrder ::
135128 :: PRED :: IF :: Z :: if (p4 $addSelfToAtoms  == #(0)) goto 28::CD,135129
135129 :: CALL :: call :: V :: p0 $this .addSelfToAtoms()::CL,151662
135197 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addSSBond(org.biojava.nbio.structure.Bond)::CD,135205
135202 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .ssbonds::
135205 :: CALL :: call :: Z :: v6 = v4.add(p1 $ssbond )::
135214 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.toString()::CD,135218:CD,135219:CD,135227:CD,135232:CD,135236:CD,135237:CD,135245:CD,135253:CD,135258:CD,135263:CD,135267:CD,135268:CD,135276:CD,135284:CD,135289:CD,135294:CD,135298:CD,135299:CD,135307:CD,135315:CD,135320:CD,135325:CD,135329:CD,135330:CD,135338:CD,135343:CD,135347:CD,135348:CD,135356:CD,135364:CD,135369:CD,135374:CD,135378:CD,135379:CD,135387:CD,135395:CD,135400:CD,135405:CD,135409:CD,135410:CD,135418:CD,135426:CD,135431:CD,135436:CD,135440:CD,135441:CD,135449:CD,135454
135218 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
135219 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([SSBOND:))::
135227 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
135232 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
135236 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
135237 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
135245 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Chain: ))::
135250 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .chainID1::
135253 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
135258 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
135263 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
135267 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
135268 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
135276 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Residue #: ))::
135281 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::
135284 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
135289 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
135294 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
135298 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
135299 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
135307 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Ins. Code: ))::
135315 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
135312 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .insCode1::
135320 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
135325 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
135330 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
135329 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
135338 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(Atom 2:))::
135343 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
135347 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
135348 :: CALL :: call :: Ljava/lang/String :: v67 = valueOf(v64)::
135356 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(#(	Chain: ))::
135361 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .chainID2::
135364 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v70.append(v71)::
135369 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v73.append(#())::
135374 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
135378 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::
135379 :: CALL :: call :: Ljava/lang/String :: v80 = valueOf(v77)::
135387 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v78.append(#(	Residue #: ))::
135395 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v83.append(v84)::
135392 :: EXPR :: reference :: Ljava/lang/String :: v84 = p0 $this .resnum2::
135400 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#())::
135405 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
135410 :: CALL :: call :: Ljava/lang/String :: v93 = valueOf(v90)::
135409 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
135418 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v91.append(#(	Ins. Code: ))::
135423 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .insCode2::
135426 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(v97)::
135431 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(#())::
135436 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
135440 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
135441 :: CALL :: call :: Ljava/lang/String :: v106 = valueOf(v103)::
135449 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(#(]))::
135454 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
135510 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getC()::CE,135511:CD,135514:CD,135519
135511 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getC()::JM,120011
135514 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(C))::JM,135519:CL,54507
135519 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,135511
135522 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getN()::CE,135523:CD,135526:CD,135531
135523 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getN()::JM,120012
135526 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(N))::JM,135531:CL,54507
135531 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,135523
135534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getP()::CE,135535:CD,135538:CD,135543
135535 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getP()::JM,120164
135538 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(P))::JM,135543:CL,54507
135543 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,135535
135546 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::CE,135547:CD,135550:CD,135555
135547 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::JM,120165
135550 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(O3'))::JM,135555:CL,54507
135555 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,135547
135558 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::CE,135559:CD,135565
135559 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::JM,120384
135562 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,135565
135567 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getBonds()::CE,135568:CD,135574
135565 :: NORM :: compound :: Ljava/util/List :: return v3::CF,135559
135571 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,135574
135568 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.AtomImpl.getBonds()::JM,120513:JM,120522:JM,120527:JM,151735:JM,151673
135574 :: NORM :: compound :: Ljava/util/List :: return v3::CF,135568
135691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::CE,135692:CD,135696:CD,135700:CD,135704:CD,135709
135692 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::JM,120676
135696 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::JM,135709
135700 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::JM,135709
135704 :: CALL :: call :: Z :: v11 = v7.equals(#(?))::JM,135709
135710 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return #(null)::DD,135692
135711 :: CALL :: call :: Z :: v14 = fileExists(v7)::JM,135715:CL,151764
135709 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 23::CD,135710:CD,135711:CD,135715:CD,135719:CD,135723:CD,135728:CD,135855
135715 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 34::CD,135716
135719 :: CALL :: call :: Z :: v17 = fileExists(v7)::JM,135723:CL,151764
135716 :: CALL :: call :: V :: p0 $this .checkDoFirstInstall()::CL,151788
135723 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CF,135855:CD,135724
135724 :: CALL :: call :: Z :: v19 = downloadChemCompRecord(v7)::JM,135855:CL,151877
135728 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 268::CD,135729:JM,84984:JM,164241:JM,152325:JM,164234:JM,164248:CD,135750:CD,135754:CD,135755:CD,135764:CD,135772:CD,135789:CD,135844:CD,135849
135729 :: CALL :: call :: Ljava/lang/String :: v22 = getLocalFileName(v7)::CL,152185
135750 :: CALL :: call :: V :: v28.addMMcifConsumer(v30)::CL,85033
135754 :: NORM :: declaration :: Ljava/io/BufferedReader :: v33 = new java.io.BufferedReader::CF,135755
135755 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v34 = new java.io.InputStreamReader::
135764 :: CALL :: call :: V :: v28.parse(v33)::CL,85050
135772 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v61 = v59.getChemComp(v7)::JM,135789:CL,152345
135789 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v61::DD,135692
135844 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v57 = v54.getChemComp(v7)::JM,135849:CL,152379
135849 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v57::DD,135692
135855 :: EXPR :: assign :: null :: PHI v20 = #(1), v19::DD,135728
135910 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::JM,120783:JM,120889
135909 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::CE,135910:CD,135916:CD,135920
135913 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::JM,135920
135916 :: CALL :: call :: I :: v5 = v3.size()::JM,135920
135922 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::CE,135923:CD,135930:CD,135935:CD,135936
135923 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::JM,138670
135920 :: NORM :: compound :: I :: return v5::CF,135910
135927 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .groups::JM,135935
135930 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $position )::JM,135935
135935 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,135936
135936 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,135923
135949 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,152599
135953 :: EXPR :: modify :: Z :: p0 $this .useCathDomainDescriptionFile = p2 $usingCDDF ::
135959 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::JM,135953:JM,135956:DD,135964
135956 :: EXPR :: modify :: Z :: p0 $this .parseCathFragments = p3 $parseCF ::
135967 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,135953:JM,135956:DD,135972
135964 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainDescription = v8::
135975 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = new java.util.concurrent.atomic.AtomicBoolean::JM,135953:JM,135956:DD,135980
135972 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainList = v11::
135983 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,135953:JM,135956:DD,135988
135980 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedNodeList = v13::
135991 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathVersion = #(4_1_0)::
135988 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomall = v15::
135994 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathDownloadUrl = #(http://download.cathd...)::
135997 :: NORM :: declaration :: Ljava/util/HashMap :: v19 = new java.util.HashMap::JM,135953:JM,135956:DD,136001
136001 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbMap = v19::
136004 :: NORM :: declaration :: Ljava/util/HashMap :: v21 = new java.util.HashMap::JM,135953:JM,135956:DD,136008
136011 :: NORM :: declaration :: Ljava/util/HashMap :: v23 = new java.util.HashMap::JM,135953:JM,135956:DD,136015
136008 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v21::
136015 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .cathTree = v23::
136018 :: EXPR :: reference :: Z :: v25 = p0 $this .parseCathFragments::DD,136021
136022 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,136026
136021 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 130::CD,136022
136026 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .fragmentMap = v26::
136063 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainDescriptionFileName()::CE,136064:CD,136067:CD,136071:CD,136079:CD,136084:CD,136089:CD,136093
136067 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,136093
136064 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.getDomainDescriptionFileName()::
136071 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
136079 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-descripti...))::JM,136093:CL,152644
136084 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::JM,136093
136089 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,136093
136093 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,136064
136098 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildUrl(java.lang.String)::CD,136103:CD,136108:CD,136112:CD,136120:CD,136125:CD,136133:CD,136138:CD,136143:CD,136148:CD,136153:CD,136158
136103 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .buildFileName(p1 $remoteFileName )::CL,152644
136108 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
136112 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
136120 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(#(all-releases))::
136125 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(/v))::
136130 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cathVersion::
136133 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
136138 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(#(/))::
136143 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#(cath-classification-data))::
136148 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#(/))::
136153 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v27.append(v5)::
136158 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
136177 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,136183:CD,136190:CD,136195:CD,136199:CD,136204:CD,136208:CD,136242:CD,136246:CD,136250:CD,136254:CD,136255:CD,136256:CD,136257:CD,136259:CD,136269:CD,136271:CD,136279:CD,136284:CD,136292:CD,136297:CD,136309:CD,136310:CD,136311:CD,136325:CD,136326
136183 :: CALL :: call :: J :: v6 = currentTimeMillis()::JM,136309
136190 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
136195 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $localFile )::CL,149036
136199 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
136204 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
136208 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
136242 :: CALL :: call :: V :: copy(v19, p2 $localFile )::CL,149120
136246 :: CALL :: call :: Z :: v35 = v19.delete()::
136250 :: CALL :: call :: J :: v37 = p2 $localFile .length()::JM,136254
136254 :: EXPR :: assign :: D :: v38 = CONVERT J to D v37::DD,136255
136255 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 / #(1024.0 d)::DD,136256:DD,136258:DD,136325
136258 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v40 / #(1024.0 d)::DD,136325
136259 :: CALL :: call :: J :: v48 = currentTimeMillis()::JM,136309
136256 :: EXPR :: assign :: Z :: v42 = v40 < #(1024.0 d)::DD,136257
136257 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CF,136325:CD,136258:CD,136326
136271 :: CALL :: call :: Ljava/lang/Double :: v58 = valueOf(v45)::JM,136271
136269 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
136279 :: CALL :: call :: Ljava/lang/String :: v60 = format(#(%.1f), v56)::
136284 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v60)::
136292 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v54.append(v46)::
136297 :: CALL :: call :: Ljava/lang/String :: v67 = v65.toString()::
136310 :: EXPR :: assign :: Ljava/lang/Object :: v72 = v70 / #(1000 l)::
136311 :: CALL :: call :: Ljava/lang/Long :: v74 = valueOf(v72)::
136309 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v48 - v6::DD,136310
136326 :: EXPR :: assign :: null :: PHI v46 = #( kB), #( MB)::CF,136259
136325 :: EXPR :: assign :: null :: PHI v45 = v40, v44::CF,136326:JM,136271
136394 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile(java.io.BufferedReader)::CD,136897:CD,136901:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136405 :: CALL :: call :: Z :: v12 = v9.startsWith(#(#))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136410 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 58::CD,136412:CD,136417:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136412 :: CALL :: call :: Z :: v16 = v9.startsWith(#(FORMAT))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136418 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v68 = new org.biojava.nbio.structure.cath.CathDomain::DD,136905
136417 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 127::CF,136418:CD,136422:CD,136431:CD,136435:CD,136439:CD,136443:CD,136448:CD,136453:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136422 :: CALL :: call :: Ljava/lang/String :: v72 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136431 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::DD,136906
136435 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::DD,136907
136439 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::DD,136908
136443 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::DD,136909
136448 :: CALL :: call :: Z :: v19 = v9.startsWith(#(DOMAIN))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136454 :: CALL :: call :: Ljava/lang/String :: v88 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136453 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 151::CD,136454:CD,136464:CD,136469:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136464 :: CALL :: call :: Z :: v22 = v9.startsWith(#(VERSION))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136470 :: CALL :: call :: Ljava/lang/String :: v91 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136469 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 175::CD,136470:CD,136480:CD,136485:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136480 :: CALL :: call :: Z :: v25 = v9.startsWith(#(VERDATE))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136486 :: CALL :: call :: Ljava/lang/String :: v94 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136485 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 223::CD,136486:CD,136513:CD,136518:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136513 :: CALL :: call :: Z :: v28 = v9.startsWith(#(NAME))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136518 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 248::CD,136519:CD,136524:CD,136530:CD,136535:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136519 :: CALL :: call :: Ljava/lang/String :: v104 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136524 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v83.append(v104)::JM,136800:JM,136609:JM,136743:JM,136676:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136568:JM,136760:JM,136702:JM,136637
136530 :: CALL :: call :: Z :: v31 = v9.startsWith(#(SOURCE))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136535 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 273::CD,136536:CD,136541:CD,136547:CD,136552:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136536 :: CALL :: call :: Ljava/lang/String :: v108 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136541 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v84.append(v108)::JM,136800:JM,136609:JM,136743:JM,136676:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136663:JM,136568:JM,136760:JM,136702:JM,136637
136547 :: CALL :: call :: Z :: v34 = v9.startsWith(#(CATHCODE))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136552 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 297::CD,136553:CD,136558:CD,136563:CD,136568:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136760:JM,136702:JM,136637
136553 :: CALL :: call :: Ljava/lang/String :: v112 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136558 :: CALL :: call :: V :: v82.setCATH(v112)::CL,152721
136563 :: CALL :: call :: Z :: v37 = v9.startsWith(#(DLENGTH))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136568 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 327::CD,136569:CD,136574:CD,136578:CD,136587:CD,136592:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136569 :: CALL :: call :: Ljava/lang/String :: v115 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136574 :: CALL :: call :: I :: v117 = parseInt(v115)::JM,136800:JM,136609:JM,136743:JM,136676:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136663:JM,136760:JM,136702:JM,136637
136578 :: CALL :: call :: Ljava/lang/Integer :: v119 = valueOf(v117)::JM,136909
136587 :: CALL :: call :: Z :: v40 = v9.startsWith(#(DSEQH))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136592 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 352::CD,136593:CD,136598:CD,136604:CD,136609:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136593 :: CALL :: call :: Ljava/lang/String :: v122 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136598 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v85.append(v122)::JM,136626:JM,136656:JM,136800:JM,136609:JM,136726:JM,136663:JM,136743:JM,136676:JM,136760:JM,136702:JM,136637:JM,136909
136604 :: CALL :: call :: Z :: v43 = v9.startsWith(#(DSEQS))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136610 :: CALL :: call :: Ljava/lang/String :: v126 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136609 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 378::CD,136610:CD,136615:CD,136621:CD,136626:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136615 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v86.append(v126)::JM,136909:JM,136626:JM,136656:JM,136800:JM,136726:JM,136663:JM,136743:JM,136676:JM,136760:JM,136702:JM,136637
136621 :: CALL :: call :: Z :: v46 = v9.startsWith(#(NSEGMENTS))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136626 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 400::CF,136627:CD,136632:CD,136637:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702
136627 :: NORM :: declaration :: Ljava/util/ArrayList :: v129 = new java.util.ArrayList::DD,136910
136632 :: CALL :: call :: Z :: v49 = v9.startsWith(#(SEGMENT))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136638 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v132 = new org.biojava.nbio.structure.cath.CathSegment::DD,136911
136637 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 440::CF,136638:CD,136642:CD,136646:CD,136651:CD,136656:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136642 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v134 = new java.lang.StringBuilder::DD,136912
136646 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::DD,136913
136651 :: CALL :: call :: Z :: v52 = v9.startsWith(#(SRANGE))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136656 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 514::CD,136657:CD,136663:CD,136664:CD,136670:CD,136676:CD,136677:CD,136687:CD,136697:CD,136702:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136469:JM,136410:JM,136568:JM,136760:JM,136637
136657 :: CALL :: call :: I :: v143 = v9.indexOf(#(=), #(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136663 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v143 + #(1)::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637:JM,136901
136664 :: CALL :: call :: I :: v148 = v9.indexOf(#( ), #(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136670 :: CALL :: call :: I :: v150 = v9.indexOf(#(=), v148)::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136676 :: EXPR :: assign :: Ljava/lang/Object :: v151 = v150 + #(1)::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637:JM,136901
136677 :: CALL :: call :: Ljava/lang/String :: v153 = v9.substring(v145, v148)::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136687 :: CALL :: call :: Ljava/lang/String :: v156 = v9.substring(v151)::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136697 :: CALL :: call :: Z :: v55 = v9.startsWith(#(SLENGTH))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136702 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 544::CD,136703:CD,136708:CD,136712:CD,136721:CD,136726:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136703 :: CALL :: call :: Ljava/lang/String :: v159 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136708 :: CALL :: call :: I :: v161 = parseInt(v159)::JM,136800:JM,136726:JM,136743:JM,136760:JM,136909
136712 :: CALL :: call :: Ljava/lang/Integer :: v163 = valueOf(v161)::
136721 :: CALL :: call :: Z :: v58 = v9.startsWith(#(SSEQH))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136726 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 569::CD,136727:CD,136732:CD,136738:CD,136743:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136727 :: CALL :: call :: Ljava/lang/String :: v166 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136732 :: CALL :: call :: Ljava/lang/StringBuilder :: v168 = v139.append(v166)::JM,136800:JM,136743:JM,136760:JM,136909
136738 :: CALL :: call :: Z :: v61 = v9.startsWith(#(SSEQS))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136743 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 594::CD,136744:CD,136749:CD,136755:CD,136760:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136702:JM,136637
136744 :: CALL :: call :: Ljava/lang/String :: v170 = v9.substring(#(10))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136749 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v140.append(v170)::JM,136800:JM,136760:JM,136909
136755 :: CALL :: call :: Z :: v64 = v9.startsWith(#(ENDSEG))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136760 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 652::CD,136761:CD,136766:CD,136770:CD,136778:CD,136786:CD,136795:CD,136800:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136761 :: CALL :: call :: Z :: v174 = v131.add(v138)::
136766 :: CALL :: call :: I :: v176 = v131.size()::
136770 :: CALL :: call :: Ljava/lang/Integer :: v178 = valueOf(v176)::
136778 :: CALL :: call :: Ljava/lang/String :: v181 = v139.toString()::
136786 :: CALL :: call :: Ljava/lang/String :: v184 = v140.toString()::
136795 :: CALL :: call :: Z :: v67 = v9.startsWith(#(//))::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136800 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 801::CF,136905:CD,136801:CD,136809:CD,136817:CD,136825:CD,136837:CD,136841:CD,136850:CD,136855:CD,136879:CD,136891:CD,136904:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913
136801 :: CALL :: call :: Ljava/lang/String :: v187 = v83.toString()::
136809 :: CALL :: call :: Ljava/lang/String :: v190 = v84.toString()::
136817 :: CALL :: call :: Ljava/lang/String :: v193 = v85.toString()::
136825 :: CALL :: call :: Ljava/lang/String :: v196 = v86.toString()::
136837 :: CALL :: call :: Ljava/lang/String :: v200 = v82.getPdbIdAndChain()::CL,152952
136841 :: CALL :: call :: Ljava/lang/String :: v203 = v200.substring(#(0), #(4))::
136850 :: CALL :: call :: Z :: v206 = v204.containsKey(v203)::JM,136855
136855 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 750::CF,136866:CD,136859:CD,136864:CD,136873:CD,136904
136859 :: CALL :: call :: Ljava/lang/Object :: v209 = v207.get(v203)::JM,136864
136866 :: NORM :: declaration :: Ljava/util/ArrayList :: v211 = new java.util.ArrayList::DD,136904
136864 :: EXPR :: assign :: Ljava/lang/Object :: v210 = CHECKCAST v209::DD,136904
136873 :: CALL :: call :: Ljava/lang/Object :: v215 = v213.put(v203, v211)::
136879 :: CALL :: call :: Z :: v218 = v216.add(v82)::
136891 :: CALL :: call :: Ljava/lang/Object :: v223 = v219.put(v221, v82)::
136897 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $bufferedReader .readLine()::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637
136901 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 45::CD,136405:CD,136410:CD,136897:CD,136905:CD,136906:CD,136907:CD,136908:CD,136909:CD,136910:CD,136911:CD,136912:CD,136913:JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136568:JM,136760:JM,136702:JM,136637
136906 :: EXPR :: assign :: null :: PHI v83 = #(null), v83, v74, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83::CF,136907:DD,136906
136907 :: EXPR :: assign :: null :: PHI v84 = #(null), v84, v76, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84::CF,136908:DD,136907
136904 :: EXPR :: assign :: null :: PHI v216 = v210, v211::
136905 :: EXPR :: assign :: null :: PHI v82 = #(null), v82, v68, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82::CF,136906:DD,136905
136910 :: EXPR :: assign :: null :: PHI v131 = #(null), v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v129, v131, v131, v131, v131, v131, v131, v131, v131::CF,136911:DD,136910
136911 :: EXPR :: assign :: null :: PHI v138 = #(null), v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v132, v138, v138, v138, v138, v138, v138, v138::CF,136912:DD,136911
136908 :: EXPR :: assign :: null :: PHI v85 = #(null), v85, v78, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85::CF,136909:DD,136908
136909 :: EXPR :: assign :: null :: PHI v86 = #(null), v86, v80, v86, v86, v86, v86, v86, v86, v86, v86, v86, v128, v86, v86, v86, v86, v86, v86, v86, v86, v86::CF,136910:DD,136909
136912 :: EXPR :: assign :: null :: PHI v139 = #(null), v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v134, v139, v139, v139, v139, v139, v139, v139::CF,136913:DD,136912
136913 :: EXPR :: assign :: null :: PHI v140 = #(null), v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v136, v140, v140, v140, v140, v140, v140, v140::JM,136800:JM,136417:JM,136609:JM,136518:JM,136743:JM,136676:JM,136901:JM,136453:JM,136485:JM,136552:JM,136909:JM,136626:JM,136592:JM,136656:JM,136726:JM,136535:JM,136663:JM,136469:JM,136410:JM,136568:JM,136760:JM,136702:JM,136637:DD,136913
137122 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::CE,137123:CD,137126:CD,137130:CD,137135:CD,137139
137123 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::JM,121076
137126 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainListFileName()::CL,153039
137130 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
137135 :: CALL :: call :: Z :: v8 = v5.exists()::JM,137139
137139 :: NORM :: compound :: Z :: return v8::DD,137123
137146 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainListFile()::CD,137151:CD,137160:CD,137164:CD,137169
137151 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-list-v%s.txt))::CL,136098
137160 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainListFileName()::CL,153039
137164 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
137169 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,136177
137189 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList()::CD,137193:CD,137194:CD,137206:CD,137207:CD,137221
137194 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainListFileName()::CL,153039
137193 :: NORM :: declaration :: Ljava/io/File :: v3 = new java.io.File::
137206 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,137207
137207 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
137221 :: CALL :: call :: V :: p0 $this .parseCathDomainList(v9)::CL,153074
137238 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomallFileName()::CE,137239:CD,137242:CD,137246:CD,137254:CD,137259:CD,137264:CD,137268
137239 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.getDomallFileName()::
137242 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,137268
137246 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
137254 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-boundarie...))::JM,137268:CL,152644
137259 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::JM,137268
137264 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,137268
137268 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,137239
137273 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall(java.io.BufferedReader)::CD,137809:CD,137813:JM,137284:JM,137290
137279 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,137284:JM,137813:JM,137290
137286 :: CALL :: call :: I :: v12 = v5.length()::JM,137284:JM,137813:JM,137290
137284 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 17::CD,137286:CD,137290:JM,137284:JM,137813
137290 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 30::CD,137292:CD,137305:CD,137310:CD,137314:CD,137322:CD,137327:CD,137331:CD,137640:CD,137644:CD,137648:CD,137824:CD,137825
137292 :: CALL :: call :: [Ljava/lang/String :: v15 = v5.split(#(\s+))::
137301 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v15[#(1)]::JM,137345:JM,137644
137305 :: CALL :: call :: Ljava/lang/String :: v20 = v18.substring(#(1))::JM,137345:JM,137644
137310 :: CALL :: call :: I :: v22 = parseInt(v20)::JM,137345:JM,137644
137314 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,137345:JM,137644
137318 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v15[#(2)]::JM,137799
137322 :: CALL :: call :: Ljava/lang/String :: v28 = v26.substring(#(1))::JM,137799
137327 :: CALL :: call :: I :: v30 = parseInt(v28)::JM,137799
137331 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,137799
137336 :: NORM :: declaration :: Ljava/text/DecimalFormat :: v36 = new java.text.DecimalFormat::JM,137412
137341 :: CALL :: call :: I :: v40 = v24.intValue()::JM,137345:JM,137644
137346 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
137347 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v16)::
137345 :: PRED :: IF :: Z :: if (v40 != #(1)) goto 185::CF,137402:CF,137346:CD,137347:CD,137355:CD,137360:CD,137367:CD,137372:CD,137373:CD,137403:CD,137411:CD,137412:CD,137417:CD,137422:CD,137429:CD,137434:CD,137815
137355 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(#(00))::
137360 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
137367 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v48)::JM,137372
137374 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
137375 :: CALL :: call :: Ljava/lang/String :: v55 = valueOf(v16)::
137372 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::DD,137373:DD,137815
137373 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 232::CF,137815:CF,137374:CD,137375:CD,137383:CD,137388:CD,137395:CD,137400
137383 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(#(01))::
137388 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
137395 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::JM,137400
137402 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
137403 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v16)::
137400 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::DD,137815
137411 :: EXPR :: assign :: J :: v70 = CONVERT I to J v186::JM,137412
137412 :: CALL :: call :: Ljava/lang/String :: v72 = v36.format(v70)::JM,137412
137417 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v66.append(v72)::
137422 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::
137429 :: CALL :: call :: Ljava/lang/Object :: v79 = v77.get(v76)::JM,137434
137434 :: EXPR :: assign :: Ljava/lang/Object :: v80 = CHECKCAST v79::DD,137815
137435 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v15[v185]::JM,137636:JM,137627:JM,137452
137439 :: CALL :: call :: I :: v85 = parseInt(v83)::JM,137636:JM,137627:JM,137452
137443 :: CALL :: call :: Ljava/lang/Integer :: v87 = valueOf(v85)::JM,137636:JM,137627:JM,137452
137447 :: PRED :: IF :: Z :: if (v82 != #(null)) goto 264::CF,137456:CD,137448:CD,137452:CD,137453:CD,137454:CD,137457:CD,137623:CD,137627:CD,137632:CD,137636:CD,137637:CD,137638:CD,137818:CD,137819:CD,137820:CD,137821:CD,137822:CD,137823
137448 :: CALL :: call :: I :: v90 = v87.intValue()::JM,137636:JM,137627:JM,137452
137454 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v185 + v92::DD,137822
137452 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(6) * v90::DD,137453
137453 :: EXPR :: assign :: Ljava/lang/Object :: v92 = v91 + #(1)::CF,137454
137456 :: NORM :: declaration :: Ljava/util/ArrayList :: v94 = new java.util.ArrayList::JM,137636:JM,137627:JM,137452
137457 :: CALL :: call :: I :: v96 = v87.intValue()::JM,137636:JM,137627:JM,137452
137466 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v100 = new org.biojava.nbio.structure.cath.CathSegment::
137470 :: CALL :: call :: Ljava/lang/Integer :: v103 = valueOf(v176)::
137478 :: EXPR :: assign :: Ljava/lang/Object :: v105 = v187 + v175::DD,137479
137479 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v105 + #(1)::
137480 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v15[v106]::JM,137607
137484 :: CALL :: call :: I :: v109 = parseInt(v107)::JM,137607
137488 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v109)::JM,137607
137494 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v15[v113]::JM,137503:DD,137816
137492 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v187 + v175::DD,137493
137493 :: EXPR :: assign :: Ljava/lang/Object :: v113 = v112 + #(2)::
137498 :: CALL :: call :: Z :: v117 = v114.equals(#(-))::JM,137503
137503 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 357::CD,137816
137505 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
137509 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(v111)::
137514 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v119)::
137519 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
137527 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v187 + v175::DD,137528
137528 :: EXPR :: assign :: Ljava/lang/Object :: v131 = v129 + #(4)::
137529 :: EXPR :: reference :: Ljava/lang/Object :: v132 = v15[v131]::JM,137602
137533 :: CALL :: call :: I :: v134 = parseInt(v132)::JM,137602
137537 :: CALL :: call :: Ljava/lang/Integer :: v136 = valueOf(v134)::JM,137602
137542 :: EXPR :: assign :: Ljava/lang/Object :: v139 = v137 + #(5)::
137543 :: EXPR :: reference :: Ljava/lang/Object :: v140 = v15[v139]::JM,137552:DD,137817
137541 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v187 + v175::DD,137542
137547 :: CALL :: call :: Z :: v142 = v140.equals(#(-))::JM,137552
137554 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v144 = new java.lang.StringBuilder::
137552 :: PRED :: IF :: Z :: if (v142 == #(0)) goto 431::CD,137817
137558 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v144.append(v111)::
137563 :: CALL :: call :: Ljava/lang/StringBuilder :: v149 = v147.append(v119)::
137568 :: CALL :: call :: Ljava/lang/String :: v151 = v149.toString()::
137576 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::
137580 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v153.append(v136)::
137585 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v156.append(v143)::
137590 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::
137598 :: CALL :: call :: I :: v163 = v136.intValue()::JM,137602
137602 :: EXPR :: assign :: Ljava/lang/Object :: v164 = #(1) + v163::DD,137607
137603 :: CALL :: call :: I :: v166 = v111.intValue()::JM,137607
137607 :: EXPR :: assign :: Ljava/lang/Object :: v167 = v164 - v166::
137608 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v167)::
137616 :: CALL :: call :: Z :: v172 = v94.add(v100)::
137622 :: EXPR :: assign :: Ljava/lang/Object :: v174 = v176 + #(1)::DD,137821:CF,137818
137623 :: CALL :: call :: I :: v99 = v87.intValue()::JM,137636:JM,137627:JM,137452
137621 :: EXPR :: assign :: Ljava/lang/Object :: v173 = v175 + #(6)::DD,137819:CF,137622
137627 :: PRED :: IF :: Z :: if (v176 <= v99) goto 287::CF,137466:CD,137470:CD,137478:CD,137479:CD,137484:CD,137488:CD,137492:CD,137493:CD,137498:CD,137503:CD,137505:CD,137509:CD,137514:CD,137519:CD,137527:CD,137528:CD,137533:CD,137537:CD,137541:CD,137542:CD,137547:CD,137552:CD,137554:CD,137558:CD,137563:CD,137568:CD,137576:CD,137580:CD,137585:CD,137590:CD,137598:CD,137602:CD,137603:CD,137607:CD,137608:CD,137616:CD,137621:CD,137622:CD,137623:CD,137816:CD,137817:CD,137818:CD,137819:CD,137820:CD,137821
137632 :: CALL :: call :: I :: v179 = v87.intValue()::JM,137636:JM,137627:JM,137452
137638 :: EXPR :: assign :: Ljava/lang/Object :: v182 = v187 + v181::DD,137822
137639 :: EXPR :: assign :: Ljava/lang/Object :: v184 = v189 + #(1)::DD,137825:CF,137824
137636 :: EXPR :: assign :: Ljava/lang/Object :: v180 = #(6) * v179::DD,137637
137637 :: EXPR :: assign :: Ljava/lang/Object :: v181 = v180 + #(1)::CF,137638
137640 :: CALL :: call :: I :: v35 = v24.intValue()::JM,137345:JM,137644
137644 :: PRED :: IF :: Z :: if (v186 <= v35) goto 78::CF,137336:CD,137341:CD,137345:CD,137439:CD,137443:CD,137447:CD,137639:CD,137640:CD,137815:CD,137822:CD,137823:CD,137824:CD,137825
137645 :: EXPR :: reference :: Z :: v190 = p0 $this .parseCathFragments::DD,137648
137650 :: CALL :: call :: I :: v193 = v32.intValue()::JM,137799
137648 :: PRED :: IF :: Z :: if (v190 == #(0)) goto 815::CF,137649:CD,137650:CD,137795:CD,137799:CD,137803:CD,137828:CD,137829:JM,137284:JM,137813:JM,137290
137649 :: NORM :: declaration :: Ljava/util/ArrayList :: v191 = new java.util.ArrayList::JM,137799
137659 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathFragment :: v197 = new org.biojava.nbio.structure.cath.CathFragment::
137663 :: CALL :: call :: Ljava/lang/Integer :: v200 = valueOf(v258)::
137671 :: EXPR :: assign :: Ljava/lang/Object :: v202 = v257 + #(1)::
137672 :: EXPR :: reference :: Ljava/lang/Object :: v203 = v15[v202]::
137676 :: CALL :: call :: I :: v205 = parseInt(v203)::
137680 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
137684 :: EXPR :: assign :: Ljava/lang/Object :: v208 = v257 + #(2)::
137685 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v15[v208]::JM,137694:DD,137826
137689 :: CALL :: call :: Z :: v211 = v209.equals(#(-))::JM,137694
137694 :: PRED :: IF :: Z :: if (v211 == #(0)) goto 652::CD,137826
137696 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v213 = new java.lang.StringBuilder::
137700 :: CALL :: call :: Ljava/lang/StringBuilder :: v216 = v213.append(v207)::
137705 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v216.append(v212)::
137710 :: CALL :: call :: Ljava/lang/String :: v220 = v218.toString()::
137718 :: EXPR :: assign :: Ljava/lang/Object :: v222 = v257 + #(4)::
137719 :: EXPR :: reference :: Ljava/lang/Object :: v223 = v15[v222]::
137723 :: CALL :: call :: I :: v225 = parseInt(v223)::
137727 :: CALL :: call :: Ljava/lang/Integer :: v227 = valueOf(v225)::
137731 :: EXPR :: assign :: Ljava/lang/Object :: v228 = v257 + #(5)::
137732 :: EXPR :: reference :: Ljava/lang/Object :: v229 = v15[v228]::JM,137741:DD,137827
137736 :: CALL :: call :: Z :: v231 = v229.equals(#(-))::JM,137741
137743 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v233 = new java.lang.StringBuilder::
137741 :: PRED :: IF :: Z :: if (v231 == #(0)) goto 720::CD,137827
137747 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v233.append(v227)::
137752 :: CALL :: call :: Ljava/lang/StringBuilder :: v238 = v236.append(v232)::
137757 :: CALL :: call :: Ljava/lang/String :: v240 = v238.toString()::
137770 :: CALL :: call :: Ljava/lang/String :: v246 = v243.replaceAll(#([^0-9]), #())::
137776 :: CALL :: call :: I :: v248 = parseInt(v246)::
137780 :: CALL :: call :: Ljava/lang/Integer :: v250 = valueOf(v248)::
137788 :: CALL :: call :: Z :: v253 = v191.add(v197)::
137794 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v258 + #(1)::DD,137829:CF,137828
137795 :: CALL :: call :: I :: v196 = v32.intValue()::JM,137799
137793 :: EXPR :: assign :: Ljava/lang/Object :: v255 = v257 + #(7)::DD,137828:CF,137794
137799 :: PRED :: IF :: Z :: if (v258 <= v196) goto 588::CF,137659:CD,137663:CD,137671:CD,137676:CD,137680:CD,137684:CD,137689:CD,137694:CD,137696:CD,137700:CD,137705:CD,137710:CD,137718:CD,137723:CD,137727:CD,137731:CD,137736:CD,137741:CD,137743:CD,137747:CD,137752:CD,137757:CD,137770:CD,137776:CD,137780:CD,137788:CD,137793:CD,137794:CD,137795:CD,137826:CD,137827:CD,137828:CD,137829
137803 :: CALL :: call :: Ljava/lang/Object :: v261 = v259.put(v16, v191)::
137809 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,137284:JM,137813:JM,137290
137815 :: EXPR :: assign :: null :: PHI v82 = v52, v65, v80::DD,137447
137813 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,137279:CD,137284:CD,137809:JM,137813:JM,137290
137818 :: EXPR :: assign :: null :: PHI v187 = v185, v187::CF,137819:DD,137478:DD,137492:DD,137527:DD,137541:DD,137638:DD,137818
137819 :: EXPR :: assign :: null :: PHI v175 = #(1), v173::CF,137820:DD,137478:DD,137492:DD,137527:DD,137541:DD,137621
137816 :: EXPR :: assign :: null :: PHI v119 = #(), v114::CF,137505
137817 :: EXPR :: assign :: null :: PHI v143 = #(), v140::CF,137554
137822 :: EXPR :: assign :: null :: PHI v183 = v93, v182::CF,137823:DD,137824
137823 :: EXPR :: assign :: null :: PHI v189 = v186, v188::DD,137639
137820 :: EXPR :: assign :: null :: PHI v188 = v186, v188::CF,137821:DD,137820:DD,137823
137821 :: EXPR :: assign :: null :: PHI v176 = #(1), v174::DD,137622:DD,137627:JM,137636:JM,137452
137826 :: EXPR :: assign :: null :: PHI v212 = #(), v209::CF,137696
137827 :: EXPR :: assign :: null :: PHI v232 = #(), v229::CF,137743
137824 :: EXPR :: assign :: null :: PHI v185 = #(3), v183::CF,137825:DD,137454:DD,137818:DD,137828
137825 :: EXPR :: assign :: null :: PHI v186 = #(1), v184::DD,137411:DD,137644:DD,137820:DD,137823:JM,137345
137828 :: EXPR :: assign :: null :: PHI v257 = v185, v255::CF,137829:DD,137671:DD,137684:DD,137718:DD,137731:DD,137793
137829 :: EXPR :: assign :: null :: PHI v258 = #(1), v256::DD,137794:DD,137799
138039 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.ensureDomainsFileInstalled()::CD,138062
138059 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,138062
138062 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 83::CD,138129:CD,138133:CD,138137
138129 :: CALL :: call :: Z :: v34 = p0 $this .domainsAvailable()::JM,138133:CL,153244
138134 :: CALL :: call :: V :: p0 $this .downloadDomains()::CL,153331
138133 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 144::CD,138134
138137 :: CALL :: call :: V :: p0 $this .parseDomains()::CL,153512
138194 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::CE,138195:CD,138198:CD,138200:CD,138204:CD,138205:CD,138213:CD,138218:CD,138220:CD,138227:CD,138228
138195 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::JM,121870
138198 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextScopDomain::JM,138213:JM,138218:JM,138200
138200 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,138213:JM,138218:JM,138200
138204 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,138213:JM,138218
138205 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
138213 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,138213:JM,138218
138218 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,138227
138220 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
138227 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v13::DD,138195
138228 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
138268 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getInputStream(java.lang.String)::CD,138279:CD,138284:CD,138289:CD,138298:CD,138303:CD,138309:CD,138314:CD,138319:CD,138324
138279 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
138284 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v29.append(p1 $pdbId )::
138289 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
138298 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .downloadStructure(p1 $pdbId )::CL,91325
138303 :: CALL :: call :: Z :: v10 = v8.exists()::
138309 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
138314 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $pdbId )::
138319 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( not found and unable...))::
138324 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
138356 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getStructure(java.io.InputStream)::JM,84984:JM,48532:JM,85014:JM,85007:CD,138379:CD,138386:CD,138390:CD,138391:CD,138400
138379 :: CALL :: call :: V :: v8.setFileParsingParameters(v10)::CL,85022
138386 :: CALL :: call :: V :: v4.addMMcifConsumer(v12)::CL,85033
138390 :: NORM :: declaration :: Ljava/io/BufferedReader :: v14 = new java.io.BufferedReader::CF,138391
138391 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v15 = new java.io.InputStreamReader::
138400 :: CALL :: call :: V :: v4.parse(v14)::CL,85050
138427 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::CE,138428:CD,138451:CD,138455:CD,138457:JM,138448:JM,138438
138428 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::JM,122108:JM,122550:JM,141666:JM,142054
138433 :: CALL :: call :: Ljava/lang/Object :: v8 = p2 $chains .get(v16)::JM,138448:JM,138438:JM,138455
138438 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,138449
138439 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getChainID()::JM,138448:CL,64429
138443 :: CALL :: call :: Z :: v13 = p1 $chainID .equals(v11)::JM,138448:JM,138438:JM,138455
138450 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,138457
138451 :: CALL :: call :: I :: v6 = p2 $chains .size()::JM,138448:JM,138438:JM,138455
138448 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 31::CD,138449:CD,138450:CD,138451:CD,138455:CD,138457
138449 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v9::DD,138428
138455 :: PRED :: IF :: Z :: if (v16 < v6) goto 7::CD,138433:CD,138438:CD,138439:CD,138443:CD,138448:CD,138456:JM,138455
138456 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,138428
138457 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::JM,138448:JM,138438:DD,138450:DD,138455
138472 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntityChain(java.lang.String)::CD,138480:CD,138501:CD,138505:JM,138499
138477 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entityChains::JM,138505
138480 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,138505
138485 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,138505
138490 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getChainID()::JM,138499:CL,64429
138494 :: CALL :: call :: Z :: v16 = v14.equals(p1 $entity_id )::JM,138499
138499 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 39::CD,138501:CD,138505
138501 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,138505
138506 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v17 = new org.biojava.nbio.structure.ChainImpl::
138505 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CF,138506:CD,138485:CD,138490:CD,138494:CD,138499:JM,86881:JM,86869:JM,86888:JM,86874:CD,138510:CD,138517:JM,138505
138510 :: CALL :: call :: V :: v17.setChainID(p1 $entity_id )::CL,86912
138514 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .entityChains::
138517 :: CALL :: call :: Z :: v22 = v20.add(v17)::
138541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.clone()::JM,86881:JM,86869:JM,86888:JM,86874:CD,138553:CD,138561:CD,138568:CD,138575:CD,138582:CD,138605:CD,138609:CD,138613
138553 :: CALL :: call :: V :: v3.setChainID(v6)::CL,86912
138561 :: CALL :: call :: V :: v3.setSwissprotId(v9)::CL,132648
138568 :: CALL :: call :: V :: v3.setCompound(v11)::CL,104427
138575 :: CALL :: call :: V :: v3.setInternalChainID(v13)::CL,139634
138579 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::JM,138609
138582 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,138609
138587 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,138609
138592 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.clone()::CL,105482:CL,105657:CL,105340
138597 :: CALL :: call :: V :: v3.addGroup(v26)::CL,87059
138601 :: CALL :: call :: V :: v26.setChain(v3)::CL,94086
138605 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,138609
138610 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .seqResGroups::DD,138613
138609 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 54::CD,138587:CD,138592:CD,138597:CD,138601:CD,138605:JM,138609
138614 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::
138613 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 211::CF,138614:CD,138621:CD,138660:CD,138664:CD,138665
138618 :: EXPR :: reference :: Ljava/util/List :: v33 = p0 $this .seqResGroups::JM,138664
138621 :: CALL :: call :: Ljava/util/Iterator :: v35 = v33.iterator()::JM,138664
138626 :: CALL :: call :: Ljava/lang/Object :: v39 = v35.next()::JM,138664
138634 :: CALL :: call :: I :: v43 = findMathingGroupIndex(v41, v40)::JM,138639:CL,153603
138639 :: PRED :: IF :: Z :: if (v43 == #(-1)) goto 168::CD,138640:CD,138646:CD,138650:CD,138670
138640 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v46 = v3.getAtomGroup(v43)::JM,138670:CL,135922
138646 :: CALL :: call :: Ljava/lang/Object :: v48 = v40.clone()::JM,138650:CL,105482:CL,105657:CL,105340
138650 :: EXPR :: assign :: Ljava/lang/Object :: v49 = CHECKCAST v48::DD,138670
138651 :: CALL :: call :: V :: v50.setChain(v3)::CL,94086
138655 :: CALL :: call :: Z :: v53 = v31.add(v50)::
138660 :: CALL :: call :: Z :: v37 = v35.hasNext()::JM,138664
138664 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 128::CD,138626:CD,138634:CD,138639:CD,138651:CD,138655:CD,138660:CD,138670:JM,138664
138665 :: CALL :: call :: V :: v3.setSeqResGroups(v31)::CL,87001
138670 :: EXPR :: assign :: null :: PHI v50 = v46, v49::
138722 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::CE,138723:CD,138727:JM,86881:JM,86869:JM,86888:JM,86874:CD,138731:CD,138735:CD,138808:CD,138812:CD,138813:CD,138814
138723 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::
138727 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v4 = new org.biojava.nbio.structure.ChainImpl::DD,138813
138731 :: CALL :: call :: Ljava/util/List :: v8 = p1 $c .getAtomGroups()::JM,138812:CL,54331
138735 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,138812
138740 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.next()::JM,138812
138745 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = new org.biojava.nbio.structure.ResidueNumber::DD,138814
138776 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 93::CD,138777:CD,138782:CD,138783
138777 :: CALL :: call :: Z :: v32 = v43.equals(v17)::JM,138782:CL,40827
138782 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 101::CD,138783:CD,138790:CD,138795:CD,138800
138783 :: CALL :: call :: V :: v4.addGroup(v16)::CL,87059
138790 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
138795 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v16)::
138800 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
138808 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,138812
138814 :: EXPR :: assign :: null :: PHI v43 = #(null), v17::JM,138812:DD,138776
138812 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,138740:CD,138745:JM,93426:JM,93420:JM,93423:CD,138776:CD,138808:CD,138814:JM,138812:CF,138813
138813 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v4::DD,138723
138843 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCompounds(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,138848:CD,138852:CD,138868:CD,138876:CD,139008:CD,139012:CD,139016:CD,139098:CD,139102:CD,139106:CD,139188:CD,139192:CD,139196:CD,139201:CD,139254:JM,138899:JM,139120:JM,139030:JM,139124:JM,138890:JM,139034:JM,139129:JM,138894:JM,139039
138848 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $asym .getEntity_id()::JM,138899:JM,138848:JM,139120:JM,139030:JM,139254:JM,139124:JM,138890:JM,139034:JM,139129:JM,138894:JM,139039
138852 :: CALL :: call :: I :: v8 = parseInt(v6)::JM,138899:JM,139254:JM,139124:JM,139034:JM,139129:JM,138894:JM,139039
138868 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v18 = p0 $this .getEntity(v16)::JM,138978:JM,138915:JM,139140:JM,139141:JM,139050:JM,139210:JM,139051:JM,139211:JM,138920:JM,139145:JM,139150:JM,138959:JM,139055:JM,139215:JM,138963:JM,139060:JM,139220:JM,138968:JM,138969:JM,138910:JM,138911:JM,138973:CL,153651
138873 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .entitySrcGens::JM,139012:JM,138885
138876 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,139012:JM,138885
138881 :: CALL :: call :: Ljava/lang/Object :: v25 = v21.next()::JM,139012:JM,138885
138886 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getEntity_id()::JM,138899:JM,138886:JM,138894
138885 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::JM,138899:JM,138886:JM,138894:JM,138986
138890 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $asym .getEntity_id()::JM,138899:JM,138848:JM,139120:JM,139030:JM,139254:JM,139124:JM,138890:JM,139034:JM,139129:JM,138894:JM,139039
138894 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,138899:JM,138894:JM,139254:JM,139124:JM,139034:JM,139129:JM,139039
138899 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 80::CD,138904:CD,138909
138904 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v35 = v33.getCompoundById(v16)::JM,138909:CL,153711
138910 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 228::CD,138911:CD,138915:CD,138920:JM,138978:JM,139140:JM,139141:JM,139050:JM,139210:JM,139051:JM,139211:JM,139145:JM,139150:JM,138959:JM,139055:JM,139215:JM,138963:JM,139060:JM,139220:JM,138968:JM,138969:JM,138973:JM,139012:JM,138885
138911 :: CALL :: call :: Ljava/lang/String :: v38 = v18.getType()::JM,138978:JM,138915:JM,139140:JM,139141:JM,139050:JM,139210:JM,139051:JM,139211:JM,138920:JM,139145:JM,139150:JM,138959:JM,139055:JM,139215:JM,138963:JM,139060:JM,139220:JM,138968:JM,138969:JM,138911:JM,138973
138909 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 228::CD,138910:JM,139012:JM,138885
138915 :: CALL :: call :: Z :: v41 = v38.equals(#(polymer))::JM,138978:JM,138915:JM,138963:JM,139060:JM,139220:JM,138920:JM,138968:JM,139145:JM,139150:JM,139055:JM,139215:JM,138973
138920 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 166::CD,138921:CD,138931:CD,138938:CD,138944:CD,138959:CD,138963:CD,138968:JM,138978:JM,138915:JM,139140:JM,139141:JM,139050:JM,139210:JM,139051:JM,139211:JM,138920:JM,139145:JM,139150:JM,139055:JM,139215:JM,139060:JM,139220:JM,138969:JM,138911:JM,138973
138921 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v53 = p0 $this .createNewCompoundFromESG(v26, v16)::CL,153751
138931 :: CALL :: call :: V :: v53.setMolName(v55)::CL,133365
138938 :: CALL :: call :: V :: v57.addCompound(v53)::CL,153841
138944 :: CALL :: call :: Ljava/lang/Integer :: v62 = valueOf(v16)::
138959 :: CALL :: call :: Ljava/lang/String :: v43 = v18.getType()::JM,138978:JM,138915:JM,139140:JM,139141:JM,139050:JM,139210:JM,139051:JM,139211:JM,138920:JM,139145:JM,139150:JM,138959:JM,139055:JM,139215:JM,138963:JM,139060:JM,139220:JM,138968:JM,138969:JM,138911:JM,138973
138963 :: CALL :: call :: Z :: v46 = v43.equals(#(non-solvent))::JM,138978:JM,138963:JM,138915:JM,139060:JM,139220:JM,138968:JM,138920:JM,139145:JM,139150:JM,139055:JM,139215:JM,138973
138968 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 228::CD,138969:CD,138973:CD,138978:JM,138915:JM,139140:JM,139141:JM,139050:JM,139210:JM,139051:JM,139211:JM,138920:JM,139145:JM,139150:JM,138959:JM,139055:JM,139215:JM,138963:JM,139060:JM,139220:JM,138968:JM,138911:JM,139012:JM,138885
138969 :: CALL :: call :: Ljava/lang/String :: v48 = v18.getType()::JM,138978:JM,138915:JM,139140:JM,139141:JM,139050:JM,139210:JM,139051:JM,139211:JM,138920:JM,139145:JM,139150:JM,138959:JM,139055:JM,139215:JM,138963:JM,139060:JM,139220:JM,138968:JM,138969:JM,138911:JM,138973
138973 :: CALL :: call :: Z :: v51 = v48.equals(#(water))::JM,138978:JM,138915:JM,138963:JM,139060:JM,139220:JM,138920:JM,138968:JM,139145:JM,139150:JM,139055:JM,139215:JM,138973
138978 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 228::CD,138981:CD,138986:CD,138990:CD,138995:CD,139000:JM,139012:JM,138885
138981 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v67 = new java.lang.StringBuilder::
138986 :: CALL :: call :: Ljava/lang/String :: v71 = v26.getEntity_id()::JM,138986
138990 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v67.append(v71)::
138995 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v73.append(#( that has unknown _en...))::
139000 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
139008 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,139012:JM,138885
139012 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 51::CD,138881:CD,138885:CD,138886:CD,138890:CD,138894:CD,138899:CD,139008:JM,139012
139013 :: EXPR :: reference :: Ljava/util/List :: v80 = p0 $this .entitySrcNats::JM,139025:JM,139102
139016 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,139025:JM,139102
139021 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,139025:JM,139102
139026 :: CALL :: call :: Ljava/lang/String :: v89 = v87.getEntity_id()::JM,139026:JM,139034:JM,139039
139025 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,139026:JM,139034:JM,139039
139030 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $asym .getEntity_id()::JM,138899:JM,138848:JM,139120:JM,139030:JM,139254:JM,139124:JM,138890:JM,139034:JM,139129:JM,138894:JM,139039
139034 :: CALL :: call :: Z :: v93 = v89.equals(v91)::JM,139034:JM,139039:JM,138899:JM,139254:JM,139124:JM,139129:JM,138894
139039 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 281::CD,139044:CD,139049
139044 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v96 = v94.getCompoundById(v16)::JM,139049:CL,153711
139050 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 365::CD,139051:CD,139055:CD,139060:JM,138978:JM,138915:JM,139140:JM,139141:JM,139210:JM,139211:JM,138920:JM,139145:JM,139150:JM,138959:JM,139215:JM,138963:JM,139220:JM,138968:JM,138969:JM,138911:JM,138973:JM,139025:JM,139102
139051 :: CALL :: call :: Ljava/lang/String :: v99 = v18.getType()::JM,138978:JM,138915:JM,139140:JM,139141:JM,139210:JM,139051:JM,139211:JM,138920:JM,139145:JM,139150:JM,138959:JM,139055:JM,139215:JM,138963:JM,139060:JM,139220:JM,138968:JM,138969:JM,138911:JM,138973
139049 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 365::CD,139050:JM,139025:JM,139102
139055 :: CALL :: call :: Z :: v101 = v99.equals(#(polymer))::JM,138978:JM,138915:JM,138963:JM,139060:JM,139220:JM,138920:JM,138968:JM,139145:JM,139150:JM,139055:JM,139215:JM,138973
139060 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 365::CD,139061:CD,139071:CD,139078:CD,139084:JM,139025:JM,139102
139061 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v103 = p0 $this .createNewCompoundFromESN(v87, v16)::CL,153867
139071 :: CALL :: call :: V :: v103.setMolName(v105)::CL,133365
139078 :: CALL :: call :: V :: v107.addCompound(v103)::CL,153841
139084 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v16)::
139098 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,139025:JM,139102
139102 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 252::CD,139021:CD,139025:CD,139026:CD,139030:CD,139034:CD,139039:CD,139098:JM,139102
139103 :: EXPR :: reference :: Ljava/util/List :: v115 = p0 $this .entitySrcSyns::JM,139115:JM,139192
139106 :: CALL :: call :: Ljava/util/Iterator :: v117 = v115.iterator()::JM,139115:JM,139192
139111 :: CALL :: call :: Ljava/lang/Object :: v121 = v117.next()::JM,139115:JM,139192
139115 :: EXPR :: assign :: Ljava/lang/Object :: v122 = CHECKCAST v121::JM,139124:JM,139129:JM,139116
139116 :: CALL :: call :: Ljava/lang/String :: v124 = v122.getEntity_id()::JM,139124:JM,139129:JM,139116
139120 :: CALL :: call :: Ljava/lang/String :: v126 = p1 $asym .getEntity_id()::JM,138899:JM,138848:JM,139120:JM,139030:JM,139254:JM,139124:JM,138890:JM,139034:JM,139129:JM,138894:JM,139039
139124 :: CALL :: call :: Z :: v128 = v124.equals(v126)::JM,139124:JM,139129:JM,138899:JM,139254:JM,139034:JM,138894:JM,139039
139129 :: PRED :: IF :: Z :: if (v128 != #(0)) goto 418::CD,139134:CD,139139
139134 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v131 = v129.getCompoundById(v16)::JM,139139:CL,153711
139139 :: PRED :: IF :: Z :: if (v131 != #(null)) goto 502::CD,139140:JM,139115:JM,139192
139140 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 502::CD,139141:CD,139145:CD,139150:JM,138978:JM,138915:JM,139210:JM,139051:JM,139211:JM,138920:JM,138959:JM,139055:JM,139215:JM,138963:JM,139060:JM,139220:JM,138968:JM,138969:JM,138911:JM,138973:JM,139115:JM,139192
139141 :: CALL :: call :: Ljava/lang/String :: v134 = v18.getType()::JM,138978:JM,138915:JM,139141:JM,139210:JM,139051:JM,139211:JM,138920:JM,139145:JM,139150:JM,138959:JM,139055:JM,139215:JM,138963:JM,139060:JM,139220:JM,138968:JM,138969:JM,138911:JM,138973
139145 :: CALL :: call :: Z :: v136 = v134.equals(#(polymer))::JM,138978:JM,138915:JM,138963:JM,139060:JM,139220:JM,138920:JM,138968:JM,139145:JM,139150:JM,139055:JM,139215:JM,138973
139150 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 502::CD,139151:CD,139161:CD,139168:CD,139174:JM,139115:JM,139192
139151 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v138 = p0 $this .createNewCompoundFromESS(v122, v16)::CL,153937
139161 :: CALL :: call :: V :: v138.setMolName(v140)::CL,133365
139168 :: CALL :: call :: V :: v142.addCompound(v138)::CL,153841
139174 :: CALL :: call :: Ljava/lang/Integer :: v146 = valueOf(v16)::
139188 :: CALL :: call :: Z :: v119 = v117.hasNext()::JM,139115:JM,139192
139192 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 389::CD,139111:CD,139115:CD,139116:CD,139120:CD,139124:CD,139129:CD,139188:JM,139192
139196 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v152 = v150.getCompoundById(v16)::JM,139201:CL,153711
139201 :: PRED :: IF :: Z :: if (v152 != #(null)) goto 599::JM,96774:JM,96767:CD,139206:CD,139210
139206 :: CALL :: call :: V :: v153.setMolId(v16)::CL,118973
139210 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 599::CD,139211:CD,139215:CD,139220:JM,138978:JM,138915:JM,139141:JM,139051:JM,138920:JM,139145:JM,139150:JM,138959:JM,139055:JM,138963:JM,139060:JM,138968:JM,138969:JM,138911:JM,138973
139211 :: CALL :: call :: Ljava/lang/String :: v157 = v18.getType()::JM,138978:JM,138915:JM,139141:JM,139051:JM,139211:JM,138920:JM,139145:JM,139150:JM,138959:JM,139055:JM,139215:JM,138963:JM,139060:JM,139220:JM,138968:JM,138969:JM,138911:JM,138973
139215 :: CALL :: call :: Z :: v159 = v157.equals(#(polymer))::JM,138978:JM,138915:JM,138963:JM,139220:JM,139060:JM,138920:JM,138968:JM,139145:JM,139150:JM,139215:JM,139055:JM,138973
139220 :: PRED :: IF :: Z :: if (v159 == #(0)) goto 599::CD,139225:CD,139232
139225 :: CALL :: call :: V :: v153.setMolName(v161)::CL,133365
139232 :: CALL :: call :: V :: v163.addCompound(v153)::CL,153841
139254 :: EXPR :: assign :: null :: PHI v16 = v8, #(0)::
139383 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.alignSeqRes()::CD,139543:CD,139547:CD,139557
139397 :: CALL :: call :: Ljava/util/List :: v12 = v10.getModel(v79)::CL,54314
139402 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .seqResChains::JM,139538
139405 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,139538
139410 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,139538
139415 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getMatchingAtomRes(v20, v12)::JM,139420:CL,118412
139420 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 84::CF,139433:CD,139459:CD,139463:CD,139467:CD,139525:CD,139529:CD,139530:CD,139549:CD,139550:CD,139554:CD,139555:CD,139556
139433 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::JM,139529
139438 :: CALL :: call :: Ljava/util/List :: v36 = v20.getAtomGroups()::CL,54331
139442 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v47)::
139448 :: CALL :: call :: Ljava/lang/Object :: v41 = v39.clone()::JM,139452:CL,105482:CL,105657:CL,105340
139452 :: EXPR :: assign :: Ljava/lang/Object :: v42 = CHECKCAST v41::
139453 :: CALL :: call :: Z :: v44 = v29.add(v42)::
139458 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v47 + #(1)::DD,139550:CF,139549
139459 :: CALL :: call :: Ljava/util/List :: v32 = v20.getAtomGroups()::JM,139467:CL,54331
139463 :: CALL :: call :: I :: v34 = v32.size()::JM,139467
139467 :: PRED :: IF :: Z :: if (v47 < v34) goto 102::CD,139438:CD,139442:CD,139448:CD,139452:CD,139453:CD,139458:CD,139459:CD,139463:CD,139549:CD,139550
139469 :: CALL :: call :: Ljava/lang/Object :: v51 = v29.get(v75)::
139475 :: CALL :: call :: Ljava/util/List :: v54 = v22.getAtomGroups()::JM,139488:JM,139518:CL,54331
139479 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,139488:JM,139518
139484 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,139488:JM,139518
139488 :: EXPR :: assign :: Ljava/lang/Object :: v61 = CHECKCAST v60::
139489 :: CALL :: call :: I :: v63 = p0 $this .getInternalNr(v61)::JM,139506:CL,153987
139498 :: CALL :: call :: Ljava/lang/Integer :: v67 = v65.getSeqNum()::JM,139506:CL,150608
139502 :: CALL :: call :: I :: v69 = v67.intValue()::JM,139506
139506 :: PRED :: IF :: Z :: if (v69 != v63) goto 248::CF,139551:CD,139507:CD,139514:CD,139518:CD,139552:CD,139553
139507 :: CALL :: call :: Ljava/lang/Object :: v71 = v29.set(v76, v61)::
139514 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,139488:JM,139518
139518 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 192::CF,139553:CD,139484:CD,139488:CD,139489:CD,139498:CD,139502:CD,139506:CD,139551:CD,139552:JM,139518
139519 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 269::CD,139520:CF,139524
139520 :: CALL :: call :: V :: v52.setResidueNumber(#(null))::CL,93626
139524 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v76 + #(1)::DD,139555:CF,139554
139525 :: CALL :: call :: I :: v49 = v29.size()::JM,139529
139530 :: CALL :: call :: V :: v22.setSeqResGroups(v29)::CL,87001
139529 :: PRED :: IF :: Z :: if (v75 < v49) goto 160::CD,139469:CD,139475:CD,139479:CD,139514:CD,139518:CD,139519:CD,139524:CD,139525:CD,139551:CD,139552:CD,139553:CD,139554:CD,139555
139534 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,139538
139538 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 43::CD,139410:CD,139415:CD,139420:CD,139534:CD,139556:JM,139538:CF,139539
139539 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v80 + #(1)::DD,139557
139543 :: CALL :: call :: I :: v9 = v7.nrModels()::JM,139547:CL,87301
139547 :: PRED :: IF :: Z :: if (v79 < v9) goto 17::CD,139397:CD,139405:CD,139534:CD,139538:CD,139539:CD,139543:CD,139556:CD,139557
139550 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::DD,139458:DD,139467
139551 :: EXPR :: assign :: null :: PHI v83 = v82, v83::CF,139552:DD,139551:DD,139554
139549 :: EXPR :: assign :: null :: PHI v81 = v80, v81::CF,139550:DD,139549:DD,139554
139554 :: EXPR :: assign :: null :: PHI v82 = v81, v83::CF,139555:DD,139551:DD,139556
139555 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::DD,139529:DD,139552
139552 :: EXPR :: assign :: null :: PHI v76 = v75, v76::JM,139488:JM,139518:DD,139524:DD,139552
139553 :: EXPR :: assign :: null :: PHI v72 = #(1), #(0)::DD,139519
139556 :: EXPR :: assign :: null :: PHI v80 = v79, v80, v82::JM,139538:DD,139539:DD,139549:DD,139556
139557 :: EXPR :: assign :: null :: PHI v79 = #(0), v78::DD,139547:DD,139556
139626 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::JM,122385:JM,139721:JM,140046
139625 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::CE,139626:CD,139632
139629 :: EXPR :: reference :: Z :: v3 = p0 $this .useInternalChainId::DD,139632
139634 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setInternalChainID(java.lang.String)::JM,139639
139632 :: NORM :: compound :: Z :: return v3::CF,139626
139639 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = p1 $internalChainID ::
139645 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addBonds()::CD,139661:CD,139667
139661 :: CALL :: call :: V :: v3.makeBonds()::CL,99850
139667 :: CALL :: call :: V :: v3.formBondsFromStructConn(v8)::CL,154079
139679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCharges()::CD,139686
139686 :: CALL :: call :: V :: addCharges(v3)::CL,99871
139691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.linkCompounds()::CD,139864:CD,139868:CD,139872:CD,139876:CD,139917:CD,139921:CD,139925
139699 :: CALL :: call :: Ljava/util/List :: v9 = v7.getModel(v74)::JM,139859:CL,54314
139704 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,139859
139709 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,139859
139717 :: CALL :: call :: Z :: v19 = v17.isUseInternalChainId()::JM,139721:CL,139625
139721 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 68::CD,139729:CD,139734:CD,139743:CD,139748:CD,139923
139729 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,139734
139734 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,139923
139743 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,139748
139748 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,139923
139749 :: PRED :: IF :: Z :: if (v32 != #(null)) goto 114::CD,139762:CD,139769:CD,139774:CD,139924
139762 :: CALL :: call :: I :: v40 = parseInt(v32)::
139769 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v43 = v41.getCompoundById(v40)::JM,139774:CL,153711
139774 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 203::CD,139777:JM,96774:JM,96767:CD,139795:CD,139799:CD,139803:CD,139810:CD,139834:CD,139847:CD,139851:CD,139924
139777 :: CALL :: call :: Ljava/lang/Integer :: v47 = valueOf(v40)::
139795 :: CALL :: call :: V :: v51.setMolId(v40)::CL,118973
139799 :: CALL :: call :: V :: v51.addChain(v16)::CL,118911
139803 :: CALL :: call :: V :: v16.setCompound(v51)::CL,104427
139810 :: CALL :: call :: V :: v56.addCompound(v51)::CL,153841
139834 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v40)::
139847 :: CALL :: call :: V :: v43.addChain(v16)::CL,118911
139851 :: CALL :: call :: V :: v16.setCompound(v43)::CL,104427
139855 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,139859
139859 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 25::CD,139709:CD,139717:CD,139721:CD,139749:CD,139855:CD,139923:CD,139924:JM,139859:CF,139860
139860 :: EXPR :: assign :: Ljava/lang/Object :: v73 = v75 + #(1)::DD,139925
139864 :: CALL :: call :: I :: v6 = v4.nrModels()::JM,139868:CL,87301
139868 :: PRED :: IF :: Z :: if (v74 < v6) goto 6::CD,139699:CD,139704:CD,139855:CD,139859:CD,139860:CD,139864:CD,139924:CD,139925
139872 :: CALL :: call :: Ljava/util/List :: v78 = v76.getCompounds()::JM,139921:CL,86164
139876 :: CALL :: call :: Ljava/util/Iterator :: v80 = v78.iterator()::JM,139921
139881 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,139921
139917 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,139921
139923 :: EXPR :: assign :: null :: PHI v32 = v25, v31::DD,139749
139921 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 304::CD,139881:CD,139917:JM,139921
139924 :: EXPR :: assign :: null :: PHI v75 = v74, v75, v75, v75::JM,139859:DD,139860:DD,139924
139925 :: EXPR :: assign :: null :: PHI v74 = #(0), v73::DD,139868:DD,139924
140001 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addSites()::CD,140008:CD,140012:CD,140020:CD,140118:CD,140123:CD,140128:CD,140133:CD,140144:CD,140149:CD,140153:CD,140158:CD,140163:CD,140167:CD,140172:CD,140285:CD,140289:CD,140293:CD,140299:CD,140300
140008 :: CALL :: call :: Ljava/util/List :: v5 = v3.getSites()::JM,140012:JM,140300:CL,86292
140012 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 23::CF,140300:CF,140013
140013 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,140300
140017 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .structSiteGens::JM,140289:JM,140029
140020 :: CALL :: call :: Ljava/util/Iterator :: v12 = v10.iterator()::JM,140289:JM,140029
140025 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.next()::JM,140289:JM,140029
140030 :: CALL :: call :: Ljava/lang/String :: v20 = v18.getSite_id()::JM,140034:JM,140030:JM,140301
140029 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,140034:JM,140030:JM,140301:JM,140035:JM,140233:JM,140238:JM,140302:JM,140047:JM,140052:JM,140056:JM,140064:JM,140065:JM,140070:JM,140303:JM,140060
140034 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 62::CF,140301
140035 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getLabel_comp_id()::JM,140035:JM,140233:JM,140238
140042 :: CALL :: call :: Z :: v27 = v25.isUseInternalChainId()::JM,140046:CL,139625
140046 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 87::CD,140047:CD,140052:CD,140302
140047 :: CALL :: call :: Ljava/lang/String :: v29 = v18.getLabel_asym_id()::JM,140302:JM,140047
140052 :: CALL :: call :: Ljava/lang/String :: v31 = v18.getAuth_asym_id()::JM,140052:JM,140302
140056 :: CALL :: call :: Ljava/lang/String :: v34 = v18.getAuth_seq_id()::JM,140056
140060 :: CALL :: call :: Ljava/lang/String :: v36 = v18.getPdbx_auth_ins_code()::JM,140064:JM,140065:JM,140070:JM,140303:JM,140060
140064 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 127::CF,140303:CD,140065:CD,140070
140065 :: CALL :: call :: Z :: v39 = v36.equals(#(?))::JM,140065:JM,140070:JM,140303
140070 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 127::CF,140303
140074 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v43 = v41.getChainByPDB(v32)::JM,140079:CL,118928
140079 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 289::CF,140305:CD,140080:CD,140096:CD,140100:JM,93426:JM,93420:JM,93423:CD,140110
140080 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,140081:CD,140085
140081 :: CALL :: call :: I :: v45 = v40.length()::JM,140081:JM,140085
140086 :: CALL :: call :: C :: v47 = v40.charAt(#(0))::JM,140086
140085 :: PRED :: IF :: Z :: if (v45 <= #(0)) goto 173::CD,140086:CD,140091
140091 :: CALL :: call :: Ljava/lang/Character :: v49 = valueOf(v47)::
140096 :: CALL :: call :: I :: v53 = parseInt(v34)::
140100 :: CALL :: call :: Ljava/lang/Integer :: v55 = valueOf(v53)::
140110 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v58 = v43.getGroupByPDB(v51)::JM,140305:CL,105813
140118 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v62 = new java.lang.StringBuilder::
140123 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v62.append(v32)::
140128 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v66.append(v34)::
140133 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
140144 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::
140149 :: CALL :: call :: Ljava/lang/String :: v78 = v18.getSite_id()::
140153 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v74.append(v78)::
140158 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v80.append(#( - ))::
140163 :: CALL :: call :: Ljava/lang/String :: v85 = v72.getMessage()::
140167 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v83.append(v85)::
140172 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
140186 :: CALL :: call :: Ljava/util/Iterator :: v98 = v9.iterator()::JM,140210:JM,140195
140185 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 480::CD,140186:CD,140206:CD,140210:CD,140211:CD,140220:CD,140224:CD,140229:CD,140233:CD,140238:CD,140279:CD,140306:CD,140307:CD,140308:CD,140309:JM,140195:JM,140289:JM,140029
140191 :: CALL :: call :: Ljava/lang/Object :: v102 = v98.next()::JM,140210:JM,140195
140195 :: EXPR :: assign :: Ljava/lang/Object :: v103 = CHECKCAST v102::DD,140306
140196 :: CALL :: call :: Ljava/lang/String :: v105 = v103.getSiteID()::JM,140205:CL,115144
140200 :: CALL :: call :: Z :: v107 = v22.equals(v105)::JM,140205
140206 :: CALL :: call :: Z :: v100 = v98.hasNext()::JM,140210:JM,140195
140205 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 337::CF,140306
140210 :: PRED :: IF :: Z :: if (v100 != #(0)) goto 308::CD,140191:CD,140195:CD,140196:CD,140200:CD,140205:CD,140206:CD,140306:JM,140210:CF,140211
140211 :: PRED :: IF :: Z :: if (v108 != #(null)) goto 374::CF,140307:CD,140212:JM,154724:CD,140216
140212 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v110 = new org.biojava.nbio.structure.Site::DD,140307
140216 :: CALL :: call :: V :: v110.setSiteID(v22)::CL,154747
140220 :: CALL :: call :: Ljava/util/List :: v116 = v113.getGroups()::JM,140224:JM,140309:CL,119011
140224 :: PRED :: IF :: Z :: if (v116 != #(null)) goto 397::CF,140309:CF,140225
140225 :: NORM :: declaration :: Ljava/util/ArrayList :: v117 = new java.util.ArrayList::DD,140309
140229 :: CALL :: call :: Ljava/lang/String :: v121 = v94.getPDBName()::JM,140233:JM,140238:CL,104483
140233 :: CALL :: call :: Z :: v123 = v24.equals(v121)::JM,140233:JM,140238
140238 :: PRED :: IF :: Z :: if (v123 != #(0)) goto 452::CD,140241:CD,140246:CD,140251:CD,140256:CD,140261:CD,140270:CD,140275
140241 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v125 = new java.lang.StringBuilder::
140246 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v125.append(v32)::
140251 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(v34)::
140256 :: CALL :: call :: Ljava/lang/StringBuilder :: v134 = v131.append(#( - skipping))::
140261 :: CALL :: call :: Ljava/lang/String :: v136 = v134.toString()::
140270 :: CALL :: call :: Z :: v139 = v119.add(v94)::
140275 :: CALL :: call :: V :: v113.setGroups(v119)::CL,154758
140279 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 480::CD,140280:JM,140289:JM,140029
140280 :: CALL :: call :: Z :: v142 = v9.add(v113)::
140285 :: CALL :: call :: Z :: v14 = v12.hasNext()::JM,140289:JM,140029
140289 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 36::CD,140025:CD,140029:CD,140030:CD,140034:CD,140035:CD,140042:CD,140046:CD,140056:CD,140060:CD,140064:CD,140074:CD,140079:CD,140185:CD,140285:CD,140301:CD,140302:CD,140303:CD,140305:JM,140289
140293 :: CALL :: call :: V :: v143.setSites(v9)::CL,86301
140299 :: EXPR :: assign :: Ljava/lang/Exception :: v72 = catch <exc>::
140302 :: EXPR :: assign :: null :: PHI v32 = v29, v31::JM,140056
140303 :: EXPR :: assign :: null :: PHI v40 = v36, v36, #(null)::DD,140080:JM,140081:JM,140085:JM,140086
140300 :: EXPR :: assign :: null :: PHI v9 = v5, v7::JM,140210:JM,140195
140301 :: EXPR :: assign :: null :: PHI v22 = v20, #()::JM,140035:JM,140233:JM,140238:JM,140205
140306 :: EXPR :: assign :: null :: PHI v108 = #(null), v108, v103::JM,140210:JM,140195:DD,140211:DD,140306:DD,140307
140307 :: EXPR :: assign :: null :: PHI v113 = v108, v110::CF,140308
140305 :: EXPR :: assign :: null :: PHI v94 = #(null), v58, #(null), #(null)::DD,140185
140308 :: EXPR :: assign :: null :: PHI v114 = #(0), #(1)::DD,140279
140309 :: EXPR :: assign :: null :: PHI v119 = v116, v117::
140419 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
140426 :: CALL :: call :: V :: p0 $this .init()::CL,154769
140434 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly,java.util.List,java.util.List)::CD,140441:CD,140447:CD,140497:CD,140501:CD,140506:CD,140515:CD,140520:CD,140525
140441 :: CALL :: call :: V :: p0 $this .init()::CL,154769
140447 :: CALL :: call :: Ljava/util/Iterator :: v8 = p3 $operators .iterator()::JM,140501
140452 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,140501
140457 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v15 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
140465 :: CALL :: call :: V :: v15.setId(v18)::CL,133257
140489 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .modelTransformations::
140492 :: CALL :: call :: Z :: v30 = v28.add(v15)::
140497 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,140501
140501 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,140452:CD,140457:JM,133121:CD,140465:CD,140492:CD,140497:JM,140501
140506 :: CALL :: call :: Ljava/util/ArrayList :: v34 = p0 $this .getBioUnitTransformationsListUnaryOperators(v32)::CL,154794
140515 :: CALL :: call :: Ljava/util/ArrayList :: v38 = p0 $this .getBioUnitTransformationsListBinaryOperators(v36)::CL,154960
140520 :: CALL :: call :: Z :: v40 = v34.addAll(v38)::
140525 :: CALL :: call :: V :: v34.trimToSize()::
140558 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStructNcsOps()::CD,140562:CD,140569:CD,140797:CD,140802:CD,140803:CD,140812:CD,140816:CD,140817:CD,140821
140562 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,140821:JM,140833
140566 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .structNcsOper::JM,140578:JM,140816
140569 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,140578:JM,140816
140574 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,140578:JM,140816
140578 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,140579:JM,140583:JM,140588:JM,140802
140579 :: CALL :: call :: Ljava/lang/String :: v15 = v13.getCode()::JM,140579:JM,140583:JM,140588
140583 :: CALL :: call :: Z :: v18 = v15.equals(#(generate))::JM,140583:JM,140588
140590 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v19 = new javax.vecmath.Matrix4d::
140588 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,140590:CD,140786
140786 :: CALL :: call :: Z :: v91 = v3.add(v19)::
140794 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .structNcsOper::JM,140802
140797 :: CALL :: call :: I :: v97 = v95.indexOf(v13)::JM,140802
140802 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v97 + #(1)::
140803 :: CALL :: call :: Ljava/lang/Integer :: v100 = valueOf(v98)::
140812 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,140578:JM,140816
140816 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 22::CD,140574:CD,140578:CD,140579:CD,140583:CD,140588:CD,140812:JM,140816:JM,140821
140817 :: CALL :: call :: I :: v104 = v3.size()::JM,140821
140821 :: PRED :: IF :: Z :: if (v104 <= #(0)) goto 336::CD,140829:CD,140833:CD,140834:CD,140840
140829 :: CALL :: call :: I :: v109 = v3.size()::JM,140833
140834 :: CALL :: call :: [Ljava/lang/Object :: v112 = v3.toArray(v110)::
140833 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v110 = new javax.vecmath.Matrix4d[]::
140840 :: CALL :: call :: V :: v107.setNcsOperators(v113)::CL,99590
140932 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setCrystallographicInfoMetadata()::CD,140939
140939 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 47::CD,140947:CD,140951:CD,140965
140936 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v3 = p0 $this .parsedScaleMatrix::DD,140939
140947 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v10 = v7.getCrystalCell()::JM,140951:CL,155167
140951 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 44::CD,140959
140959 :: CALL :: call :: Z :: v15 = v12.checkScaleMatrix(v13)::CL,155176
140965 :: CALL :: call :: V :: v7.setNonStandardCoordFrameConvention(v17)::CL,155270
140994 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setDetails(java.lang.String)::JM,140999
140999 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
141005 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setInsCode(java.lang.String)::JM,141010
141010 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode = p1 $insCode ::
141016 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setOrigGroup(java.lang.String)::JM,141021
141021 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .origGroup = p1 $origGroup ::
141027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbGroup(java.lang.String)::JM,141032
141032 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbGroup = p1 $pdbGroup ::
141038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbResNum(java.lang.String)::JM,141043
141043 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbResNum = p1 $pdbResNum ::
141049 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setUniProtId(java.lang.String)::JM,141054
141054 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .uniProtId = p1 $uniProtId ::
141060 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setSeqNum(java.lang.Integer)::JM,141065
141065 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
141071 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::CE,141072:CD,141075:CD,141079:CD,141080:CD,141081:CD,141105:CD,141106:CD,141111:CD,141112:CD,141114:CD,141115
141075 :: CALL :: call :: [Ljava/lang/reflect/Field :: v4 = p1 $c .getDeclaredFields()::JM,141079:JM,141081
141072 :: EXIT :: exit :: [Ljava/lang/reflect/Field :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::JM,124002
141079 :: EXPR :: assign :: I :: v5 = v4.length::CF,141080
141083 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v4[v21]::JM,141092:JM,141097
141080 :: NORM :: declaration :: [Ljava/lang/reflect/Field :: v6 = new java.lang.reflect.Field[]::JM,141106:JM,141111:CF,141081
141081 :: EXPR :: assign :: I :: v8 = v4.length::DD,141105
141091 :: EXPR :: assign :: Ljava/lang/Class :: v12 = metadata <Application,Lorg/biojava/nbio/structure/io/mmcif/model/IgnoreField>-><Primordial,Ljava/lang/Class>::JM,141092:JM,141097
141092 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v14 = v9.getAnnotation(v12)::JM,141092:JM,141097
141098 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 64::CF,141113:CD,141103
141097 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,141098
141103 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v20 + #(1)::DD,141113
141106 :: CALL :: call :: [Ljava/lang/Object :: v23 = copyOf(v6, v20)::JM,141106:JM,141111
141104 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,141115:CF,141114
141105 :: PRED :: IF :: Z :: if (v21 < v8) goto 30::CD,141091:CD,141092:CD,141097:CD,141098:CD,141104:CD,141113:CD,141114:CD,141115:JM,141106:JM,141111
141111 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::CF,141112
141114 :: EXPR :: assign :: null :: PHI v20 = #(0), v18::CF,141115:DD,141103:JM,141106:JM,141111:DD,141113
141115 :: EXPR :: assign :: null :: PHI v21 = #(0), v19::DD,141104:DD,141105
141112 :: NORM :: compound :: [Ljava/lang/reflect/Field :: return v24::DD,141072
141113 :: EXPR :: assign :: null :: PHI v18 = v20, v17::DD,141114:CF,141104
141248 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.produceWarning(java.lang.String,java.lang.String,java.lang.Class,java.util.Set)::CD,141256:CD,141261:CD,141266:CD,141271:CD,141275:CD,141280:CD,141285:CD,141290:CD,141295:CD,141299:CD,141300:CD,141308:CD,141313:CD,141317:CD,141322:CD,141326:CD,141331:CD,141358:JM,141338:JM,141337
141256 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
141261 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $key )::JM,141331:JM,141313:JM,141271:JM,141338:JM,141337:JM,141358
141266 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(#( in ))::JM,141331:JM,141337
141271 :: CALL :: call :: Ljava/lang/String :: v16 = p3 $c .getName()::JM,141331:JM,141313:JM,141271:JM,141338:JM,141337:JM,141358
141275 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v14.append(v16)::
141280 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#( found in file, but n...))::
141285 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v21.append(p2 $val )::JM,141331:JM,141313:JM,141271:JM,141338:JM,141337:JM,141358
141290 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(#()))::JM,141331:JM,141337
141295 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
141299 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
141300 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(p1 $key )::
141308 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#(-))::
141313 :: CALL :: call :: Ljava/lang/String :: v37 = p3 $c .getName()::JM,141331:JM,141313:JM,141271:JM,141338:JM,141337:JM,141358
141317 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v37)::
141322 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
141326 :: CALL :: call :: Z :: v44 = p2 $val .equals(#(?))::JM,141331:JM,141313:JM,141271:JM,141338:JM,141337:JM,141358
141331 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 113::CD,141332:CD,141337:JM,141331:JM,141313:JM,141271:JM,141338:JM,141358
141332 :: CALL :: call :: Z :: v48 = p2 $val .equals(#(.))::JM,141331:JM,141313:JM,141271:JM,141338:JM,141337:JM,141358
141338 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 126::CD,141339
141339 :: CALL :: call :: Z :: v51 = p4 $warnings .contains(v41)::
141337 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 113::CD,141338
141358 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 151::CD,141359
141359 :: CALL :: call :: Z :: v57 = p4 $warnings .add(v41)::
141398 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,141417
141414 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .entities::
141417 :: CALL :: call :: Z :: v11 = v9.add(p1 $entity )::
141441 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,141449:CD,141453:JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141982:JM,141533:JM,141789:JM,141981:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141449 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,141453:CL,82926
141455 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $atom .getLabel_asym_id()::JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141982:JM,141533:JM,141789:JM,141981:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141453 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,141455:CD,141459:CD,141463:CD,141467:CD,141471:CD,141479:CD,141484:CD,141505:CD,141509:CD,141514:CD,141524:CD,141528:CD,141533:CD,141540:CD,141547:CD,141552:CD,141602:CD,141631:CD,141635:CD,141640:JM,93426:JM,93420:JM,93423:CD,141737:CD,141763:CD,141789:CD,141793:CD,141797:CD,141801:CD,141832:CD,141837:CD,141967:CD,141971:CD,142053:CD,142055:CD,142056:CD,142057:JM,141515:JM,141972:JM,141976:JM,141982:JM,141981:JM,141986:JM,141991:JM,141541:JM,141802:JM,141676:JM,141553:JM,141820
141459 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $atom .getGroup_PDB()::JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141982:JM,141533:JM,141789:JM,141981:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141463 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $atom .getAuth_seq_id()::JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141982:JM,141533:JM,141789:JM,141981:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141467 :: CALL :: call :: I :: v15 = parseInt(v13)::JM,141986:JM,141635:JM,141479:JM,141991:JM,141541:JM,141797:JM,141509:JM,141802:JM,141514:JM,141547:JM,141515:JM,141640:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141976:JM,141820:JM,141981
141471 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::JM,141552:JM,141991:JM,141514:JM,142056:JM,141801:JM,141820:JM,141981
141479 :: CALL :: call :: Z :: v23 = v11.equals(#(ATOM))::JM,141986:JM,141635:JM,141479:JM,141991:JM,141541:JM,141797:JM,141509:JM,141802:JM,141514:JM,141547:JM,141515:JM,141640:JM,142056:JM,141801:JM,141484:JM,141676:JM,141552:JM,141553:JM,141976:JM,141820:JM,141981
141484 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 71::CD,141485:CD,141490:CD,141494
141485 :: CALL :: call :: Ljava/lang/Character :: v32 = get1LetterCodeAmino(v19)::CL,113746
141490 :: CALL :: call :: Ljava/lang/Character :: v25 = get1LetterCodeAmino(v19)::JM,141494:CL,113746
141494 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 98::CD,141495
141495 :: CALL :: call :: Ljava/lang/Character :: v28 = valueOf(#(88))::
141505 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $atom .getPdbx_PDB_ins_code()::JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141982:JM,141533:JM,141789:JM,141981:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141509 :: CALL :: call :: Z :: v38 = v35.equals(#(?))::JM,141986:JM,141635:JM,141479:JM,141991:JM,141509:JM,141541:JM,141797:JM,141514:JM,141802:JM,141515:JM,141547:JM,141640:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141976:JM,141820:JM,141981
141514 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 134::CD,141515:CD,141520:JM,141986:JM,141635:JM,141479:JM,141991:JM,141509:JM,141541:JM,141797:JM,141514:JM,141802:JM,141547:JM,141640:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141976:JM,141820:JM,141981
141515 :: CALL :: call :: C :: v40 = v35.charAt(#(0))::JM,141986:JM,141635:JM,141479:JM,141991:JM,141509:JM,141541:JM,141797:JM,141514:JM,141802:JM,141515:JM,141547:JM,141640:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141976:JM,141820:JM,141981
141520 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(v40)::JM,141552:JM,141991:JM,142056:JM,141801:JM,141820:JM,141981
141524 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $atom .getLabel_seq_id()::JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141982:JM,141533:JM,141789:JM,141981:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141528 :: CALL :: call :: J :: v48 = parseLong(v46)::JM,141986:JM,141635:JM,141479:JM,141991:JM,141541:JM,141797:JM,141509:JM,141802:JM,141514:JM,141547:JM,141515:JM,141640:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141976:JM,141820:JM,141981
141533 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $atom .getPdbx_PDB_model_num()::JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141982:JM,141533:JM,141789:JM,141981:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141537 :: EXPR :: reference :: Ljava/lang/String :: v54 = p0 $this .current_nmr_model::DD,141540
141540 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 167::
141541 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
141547 :: CALL :: call :: Z :: v57 = v55.equals(v53)::JM,141552:JM,141547:JM,141986:JM,141635:JM,141479:JM,141991:JM,141797:JM,141509:JM,141802:JM,141514:JM,141515:JM,141640:JM,142056:JM,141801:JM,141676:JM,141484:JM,141553:JM,141976:JM,141820:JM,141981
141544 :: EXPR :: reference :: Ljava/lang/String :: v55 = p0 $this .current_nmr_model::JM,141552:JM,141547
141552 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 248::CD,141559:CD,141582:CD,141586
141553 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
141559 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 214::CD,141566:CD,141573
141556 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .current_chain::DD,141559
141566 :: CALL :: call :: V :: v59.addGroup(v60)::CL,87059
141573 :: CALL :: call :: V :: v62.trimToSize()::CL,93731
141582 :: CALL :: call :: V :: v64.addModel(v65)::CL,86312
141586 :: NORM :: declaration :: Ljava/util/ArrayList :: v67 = new java.util.ArrayList::DD,141590
141590 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v67::
141593 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
141599 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v69 = p0 $this .current_chain::DD,141602
141596 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
141602 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 293::CF,142053:CD,141603:JM,86881:JM,86869:JM,86888:JM,86874:CD,141613:CD,141623
141603 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v70 = new org.biojava.nbio.structure.ChainImpl::DD,141607
141607 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v70::
141613 :: CALL :: call :: V :: v72.setChainID(v9)::CL,86912
141617 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .current_model::
141623 :: CALL :: call :: Z :: v77 = v74.add(v75)::
141620 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v75 = p0 $this .current_chain::
141631 :: CALL :: call :: Ljava/lang/String :: v82 = v80.getChainID()::JM,141635:JM,141640:CL,64429
141635 :: CALL :: call :: Z :: v84 = v9.equals(v82)::JM,141986:JM,141635:JM,141479:JM,141991:JM,141541:JM,141797:JM,141509:JM,141802:JM,141514:JM,141547:JM,141515:JM,141640:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141976:JM,141820:JM,141981
141640 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 434::CF,142055:CD,141647:CD,141661:CD,141666:CD,141685:CD,141710:CD,141715:CD,142054
141647 :: CALL :: call :: V :: v85.addGroup(v86)::CL,87059
141661 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v93 = isKnownChain(v90, v91)::JM,141666:JM,142054:CL,138427
141666 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 361::CD,141667:CD,141671:CD,141676:CD,141680:CD,142054
141667 :: CALL :: call :: Ljava/lang/String :: v95 = v93.getChainID()::JM,141676:CL,64429
141671 :: CALL :: call :: Z :: v97 = v95.equals(v9)::JM,141676:JM,141986:JM,141635:JM,141479:JM,141991:JM,141541:JM,141797:JM,141509:JM,141802:JM,141514:JM,141547:JM,141515:JM,141640:JM,142056:JM,141801:JM,141484:JM,141552:JM,141553:JM,141976:JM,141820:JM,141981
141676 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 371::CF,142054:CD,141680
141680 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v100 = isKnownChain(v9, v98)::JM,142054:CL,138427
141686 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v102 = new org.biojava.nbio.structure.ChainImpl::DD,141690
141685 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 401::CD,141686:JM,86881:JM,86869:JM,86888:JM,86874:CD,141696
141690 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v102::
141696 :: CALL :: call :: V :: v104.setChainID(v9)::CL,86912
141701 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v101::
141707 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v107 = p0 $this .current_chain::JM,141715
141704 :: EXPR :: reference :: Ljava/util/List :: v106 = p0 $this .current_model::JM,141715
141710 :: CALL :: call :: Z :: v109 = v106.contains(v107)::JM,141715
141715 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 434::CF,142055:CD,141722
141719 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v111 = p0 $this .current_chain::
141716 :: EXPR :: reference :: Ljava/util/List :: v110 = p0 $this .current_model::
141722 :: CALL :: call :: Z :: v113 = v110.add(v111)::
141734 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v117 = p0 $this .current_group::DD,141737
141738 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v119 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,141746:CL,155590
141737 :: PRED :: IF :: Z :: if (v117 != #(null)) goto 494::CD,141738:CD,141752:CD,141759:CF,141763
141746 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v119::
141752 :: CALL :: call :: V :: v120.setResidueNumber(v115)::CL,93626
141759 :: CALL :: call :: V :: v122.setPDBName(v19)::CL,93615:CL,93584
141763 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 539::CD,141764:CD,141778:CD,141785:JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141982:JM,141533:JM,141789:JM,141981:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141764 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v125 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,141772:CL,155590
141772 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v125::
141778 :: CALL :: call :: V :: v126.setResidueNumber(v115)::CL,93626
141785 :: CALL :: call :: V :: v128.setPDBName(v19)::CL,93615:CL,93584
141789 :: CALL :: call :: Ljava/lang/String :: v131 = p1 $atom .getLabel_alt_id()::JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141982:JM,141533:JM,141789:JM,141981:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141793 :: CALL :: call :: Ljava/lang/Character :: v134 = valueOf(#(32))::JM,142056
141797 :: CALL :: call :: I :: v136 = v131.length()::JM,141986:JM,141635:JM,141479:JM,141991:JM,141797:JM,141509:JM,141802:JM,141514:JM,141547:JM,141515:JM,142056:JM,141640:JM,141801:JM,141676:JM,141484:JM,141552:JM,141976:JM,141820:JM,141981
141802 :: CALL :: call :: C :: v138 = v131.charAt(#(0))::JM,141986:JM,141635:JM,141479:JM,141991:JM,141797:JM,141509:JM,141802:JM,141514:JM,141547:JM,141515:JM,142056:JM,141640:JM,141801:JM,141676:JM,141484:JM,141552:JM,141976:JM,141820:JM,141981
141801 :: PRED :: IF :: Z :: if (v136 <= #(0)) goto 593::CF,142056:CD,141802:CD,141807:CD,141811:CD,141815:CD,141820:JM,141986:JM,141635:JM,141479:JM,141991:JM,141797:JM,141509:JM,141514:JM,141547:JM,141515:JM,141640:JM,141801:JM,141676:JM,141484:JM,141552:JM,141976:JM,141981
141807 :: CALL :: call :: Ljava/lang/Character :: v140 = valueOf(v138)::JM,141991:JM,142056:JM,141820:JM,141981
141811 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(46))::JM,141820
141815 :: CALL :: call :: Z :: v145 = v140.equals(v143)::JM,142056:JM,141820
141820 :: PRED :: IF :: Z :: if (v145 == #(0)) goto 593::CF,142056:CD,141821
141821 :: CALL :: call :: Ljava/lang/Character :: v147 = valueOf(#(32))::JM,142056
141832 :: CALL :: call :: Z :: v153 = v115.equals(v151)::JM,141837:CL,40827
141837 :: PRED :: IF :: Z :: if (v153 != #(0)) goto 674::CD,141844:CD,141851:CD,141854:CD,141868:CD,141875:CD,141880:CD,141884:CD,141889:CD,142057
141844 :: CALL :: call :: V :: v187.addGroup(v188)::CL,87059
141851 :: CALL :: call :: V :: v190.trimToSize()::CL,93731
141854 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v193 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,141862:CL,155590
141862 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v193::
141868 :: CALL :: call :: V :: v194.setPDBName(v19)::CL,93615:CL,93584
141875 :: CALL :: call :: V :: v196.setResidueNumber(v115)::CL,93626
141880 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(32))::JM,141889
141884 :: CALL :: call :: Z :: v157 = v148.equals(v155)::JM,141889
141890 :: CALL :: call :: Ljava/lang/Character :: v159 = valueOf(#(46))::JM,141899
141889 :: PRED :: IF :: Z :: if (v157 != #(0)) goto 784::CF,142057:CD,141890:CD,141894:CD,141899
141894 :: CALL :: call :: Z :: v161 = v148.equals(v159)::JM,141899
141899 :: PRED :: IF :: Z :: if (v161 != #(0)) goto 784::CF,142057:CD,141902:CD,141907:CD,141912:CD,141920:CD,141925:CD,141930:CD,141935:CD,141943:CD,141952:CD,141956
141902 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v163 = new java.lang.StringBuilder::
141907 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v163.append(v148)::
141912 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v167.append(#( ))::
141920 :: CALL :: call :: Ljava/lang/StringBuilder :: v173 = v170.append(v171)::
141925 :: CALL :: call :: Ljava/lang/StringBuilder :: v175 = v173.append(#( ))::
141930 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v175.append(#(null))::
141935 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
141943 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v182 = p0 $this .getCorrectAltLocGroup(v148, v11, v33, v19, v51)::JM,142057:CL,155800
141952 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v184 = v182.getChain()::JM,141956:CL,54852
141956 :: PRED :: IF :: Z :: if (v184 != #(null)) goto 784::CF,142057:CD,141960
141960 :: CALL :: call :: V :: v182.setChain(v185)::CL,94086
141967 :: CALL :: call :: Z :: v201 = v199.isParseCAOnly()::JM,141971:CL,76337
141971 :: PRED :: IF :: Z :: if (v201 == #(0)) goto 821::CD,141972:CD,141976:CD,141981:CD,142004:CD,142010:CD,142015:CD,142035:CD,142040:JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141982:JM,141533:JM,141789:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141972 :: CALL :: call :: Ljava/lang/String :: v203 = p1 $atom .getLabel_atom_id()::JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141982:JM,141533:JM,141789:JM,141981:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141976 :: CALL :: call :: Z :: v206 = v203.equals(#(CA))::JM,141986:JM,141635:JM,141479:JM,141991:JM,141797:JM,141509:JM,141802:JM,141514:JM,141547:JM,141515:JM,141640:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141976:JM,141820:JM,141981
141982 :: CALL :: call :: Ljava/lang/String :: v208 = p1 $atom .getType_symbol()::JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141982:JM,141533:JM,141789:JM,141981:JM,141986:JM,141479:JM,141991:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141981 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 819::CD,141982:CD,141986:CD,141991:JM,141635:JM,141505:JM,141509:JM,141514:JM,141515:JM,141640:JM,141455:JM,141459:JM,141463:JM,141524:JM,141972:JM,141976:JM,141533:JM,141789:JM,141981:JM,141479:JM,141541:JM,141797:JM,141802:JM,141547:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141553:JM,141820
141986 :: CALL :: call :: Z :: v211 = v208.equals(#(C))::JM,141986:JM,141635:JM,141991:JM,141479:JM,141797:JM,141509:JM,141802:JM,141514:JM,141547:JM,141515:JM,141640:JM,142056:JM,141801:JM,141676:JM,141484:JM,141552:JM,141976:JM,141820:JM,141981
141991 :: PRED :: IF :: Z :: if (v211 != #(0)) goto 821::CD,142004:CD,142010:CD,142015:CD,142035:CD,142040
142004 :: CALL :: call :: Ljava/lang/Object :: v218 = v212.put(v214, v216)::
142010 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v220 = p0 $this .convertAtom(p1 $atom )::CL,156049
142015 :: PRED :: IF :: Z :: if (v198 == #(null)) goto 866::CD,142016:CD,142024
142016 :: CALL :: call :: V :: v198.addAtom(v220)::CL,94338
142024 :: CALL :: call :: V :: v221.addAtom(v220)::CL,94338
142035 :: CALL :: call :: Z :: v229 = v225.hasAtom(v227)::JM,142040:CL,54432
142040 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 906::CD,142044
142044 :: CALL :: call :: V :: v230.addAtom(v220)::CL,94338
142054 :: EXPR :: assign :: null :: PHI v101 = v93, v100::DD,141685:DD,141701
142055 :: EXPR :: assign :: null :: PHI v114 = v79, #(1), #(1)::DD,141763
142053 :: EXPR :: assign :: null :: PHI v79 = #(0), #(1)::DD,142055
142056 :: EXPR :: assign :: null :: PHI v148 = v134, v140, v147::JM,141889:JM,141899
142057 :: EXPR :: assign :: null :: PHI v198 = #(null), #(null), #(null), v182, v182::DD,142015
142276 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,142292:CD,142296:CD,142301:CD,142305:CD,142310:CD,142390
142292 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v10 = v8.getPDBHeader()::JM,142296:CL,86038
142296 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::JM,70097:JM,70129:JM,70089:JM,70105:JM,70122
142301 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $dbrev .getNum()::JM,142305:JM,142310:JM,142301
142305 :: CALL :: call :: Z :: v19 = v16.equals(#(1))::JM,142305:JM,142310
142310 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 126::CD,142320:CD,142345:CD,142371
142320 :: CALL :: call :: V :: v14.setDepDate(v35)::CL,94541
142345 :: CALL :: call :: V :: v14.setModDate(v48)::CL,95635
142371 :: CALL :: call :: V :: v14.setModDate(v24)::CL,95635
142390 :: CALL :: call :: V :: v58.setPDBHeader(v14)::CL,86047
142435 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,142443:CD,142447:CD,142459:CD,142463:CD,142472:CD,142479
142443 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,142447:CL,86038
142447 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 33::JM,70097:JM,70129:JM,70089:JM,70105:JM,70122:CD,142455
142455 :: CALL :: call :: V :: v10.setPDBHeader(v8)::CL,86047
142459 :: CALL :: call :: Ljava/util/List :: v14 = v12.getRevisionRecords()::JM,142463:JM,142479:CL,156263
142463 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 56::CF,142479:CF,142464:CD,142468
142464 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::DD,142479
142468 :: CALL :: call :: V :: v12.setRevisionRecords(v15)::CL,156272
142472 :: CALL :: call :: Z :: v20 = v18.add(p1 $record )::
142479 :: EXPR :: assign :: null :: PHI v18 = v14, v15::
142509 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,142514:CD,142518:CD,142523:CD,142552:CD,142557:CD,142562:JM,142528:JM,142533:JM,142524
142514 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $remark .getId()::JM,142514:JM,142528:JM,142518:JM,142533:JM,142523:JM,142524
142518 :: CALL :: call :: Z :: v8 = v5.equals(#(2))::JM,142528:JM,142518:JM,142533:JM,142523
142523 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 111::CD,142524:CD,142528:CD,142533:JM,142514:JM,142518:JM,142523
142524 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $remark .getText()::JM,142514:JM,142528:JM,142518:JM,142533:JM,142523:JM,142524
142528 :: CALL :: call :: I :: v14 = v11.indexOf(#(ANGSTROM))::JM,142528:JM,142518:JM,142533:JM,142523
142533 :: PRED :: IF :: Z :: if (v14 <= #(5)) goto 111::CD,142578
142552 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
142557 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v11)::JM,142528:JM,142518:JM,142533:JM,142523
142562 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
142578 :: CALL :: call :: V :: v36.setResolution(v23)::CL,95538
142610 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,142626
142626 :: CALL :: call :: Z :: v10 = v6.setExperimentalTechnique(v8)::CL,94603
142651 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,142709:CD,142714:CD,142719:CD,142724:CD,142729:CD,142734:CD,142738:CD,142742:CD,142782:CD,142788:CD,142793:CD,142797:CD,142802:CD,142807:CD,142816
142709 :: CALL :: call :: V :: v28.setA(v30)::CL,94656
142714 :: CALL :: call :: V :: v28.setB(v32)::CL,94667
142719 :: CALL :: call :: V :: v28.setC(v34)::CL,94678
142724 :: CALL :: call :: V :: v28.setAlpha(v36)::CL,94689
142729 :: CALL :: call :: V :: v28.setBeta(v38)::CL,94709
142734 :: CALL :: call :: V :: v28.setGamma(v40)::CL,94729
142738 :: CALL :: call :: Z :: v43 = v28.isCellReasonable()::JM,142742:CL,94749
142742 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 134::CD,142745:CD,142766
142745 :: CALL :: call :: Ljava/lang/Double :: v55 = valueOf(#(10.0 d))::JM,142745
142766 :: CALL :: call :: V :: v49.setCrystalCell(v28)::CL,94784
142782 :: CALL :: call :: V :: v62.setCrystalCell(#(null))::CL,94784
142788 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
142793 :: CALL :: call :: Ljava/lang/String :: v70 = v57.getMessage()::
142797 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
142802 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#(), ignoring _cell ))::
142807 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
142816 :: EXPR :: assign :: Ljava/lang/Exception :: v57 = catch <exc>::
142850 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,142855:CD,142859:CD,142863
142855 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $symmetry .getSpace_group_name_H_M()::JM,142855
142859 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v7 = getSpaceGroup(v5)::JM,142863:CL,94795
142863 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 65::CD,142866:CD,142871:CD,142876:CD,142881:CD,142900:CD,142916:CD,142931
142866 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
142871 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v5)::
142876 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(' not recognised as a...))::
142881 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
142900 :: CALL :: call :: V :: v38.setNonStandardSg(#(1))::CL,94874
142916 :: CALL :: call :: V :: v13.setSpaceGroup(v7)::CL,94885
142931 :: CALL :: call :: V :: v19.setNonStandardSg(#(0))::CL,94874
142959 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,142967
142967 :: CALL :: call :: Z :: v6 = v4.add(p1 $sNcsOper )::
142964 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structNcsOper::
142982 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,142987:CD,143129
142987 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,143103
143103 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .parsedScaleMatrix = v4::
143129 :: CALL :: call :: V :: v66.setNonStandardCoordFrameConvention(#(0))::CL,155270
143162 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,143180
143177 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .strucRefs::
143180 :: CALL :: call :: Z :: v10 = v8.add(p1 $sref )::
143203 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,143208:CD,143216:CD,143224:CD,143232:CD,143240:CD,143248:CD,143253:CD,143305:CD,143309:CD,143313:CD,143317:CD,143321:CD,143322:CD,143326:CD,143335:CD,143336:CD,143340:CD,143349:CD,143353:CD,143358:CD,143362:CD,143367:CD,143375:CD,143379:CD,143387:CD,143391:CD,143395:CD,143399:CD,143403:CD,143407:CD,143408:CD,143412:CD,143421:CD,143422:CD,143426:CD,143435:CD,143439:CD,143444:CD,143448:CD,143453:CD,143461:CD,143465:CD,143473:CD,143480:CD,143484:CD,143489:CD,143496:CD,143507:CD,143516:JM,143261
143208 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v4 = new org.biojava.nbio.structure.DBRef::
143216 :: CALL :: call :: V :: v4.setIdCode(v7)::CL,95675
143224 :: CALL :: call :: V :: v4.setDbAccession(v10)::CL,95798
143232 :: CALL :: call :: V :: v4.setDbIdCode(v13)::CL,95809
143240 :: CALL :: call :: V :: v4.setChainId(v16)::CL,95686
143248 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: v21 = p0 $this .getStructRef(v19)::JM,143253:CL,156292
143253 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 96::CD,143256:CD,143261:CD,143265:CD,143270:CD,143275:CD,143280:CD,143293:CD,143301
143256 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
143261 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $sref .getRef_id()::JM,143426:JM,143399:JM,143335:JM,143336:JM,143305:JM,143407:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143321:JM,143422:JM,143326:JM,143391:JM,143261:JM,143421
143265 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v30.append(v34)::JM,143426:JM,143335:JM,143412:JM,143321:JM,143326:JM,143407:JM,143340:JM,143421
143270 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( for StructRefSeq ))::JM,143335:JM,143321:JM,143407:JM,143421
143275 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(p1 $sref )::
143280 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
143293 :: CALL :: call :: V :: v4.setDatabase(v24)::CL,95787
143301 :: CALL :: call :: V :: v4.setDbIdCode(v27)::CL,95809
143305 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $sref .getPdbx_auth_seq_align_beg()::JM,143426:JM,143399:JM,143335:JM,143336:JM,143305:JM,143407:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143321:JM,143422:JM,143326:JM,143391:JM,143261:JM,143421
143309 :: CALL :: call :: I :: v48 = parseInt(v46)::JM,143426:JM,143335:JM,143412:JM,143321:JM,143326:JM,143407:JM,143340:JM,143421
143313 :: CALL :: call :: Ljava/lang/String :: v50 = p1 $sref .getPdbx_auth_seq_align_end()::JM,143426:JM,143399:JM,143335:JM,143336:JM,143305:JM,143407:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143321:JM,143422:JM,143326:JM,143391:JM,143261:JM,143421
143317 :: CALL :: call :: I :: v52 = parseInt(v50)::JM,143426:JM,143335:JM,143412:JM,143321:JM,143326:JM,143407:JM,143340:JM,143421
143322 :: CALL :: call :: Ljava/lang/String :: v55 = p1 $sref .getPdbx_seq_align_beg_ins_code()::JM,143426:JM,143399:JM,143335:JM,143336:JM,143305:JM,143407:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143321:JM,143422:JM,143326:JM,143391:JM,143261:JM,143421
143321 :: NORM :: declaration :: Ljava/lang/Character :: v53 = new java.lang.Character::JM,143335:JM,143321:JM,143407:JM,143421:JM,143353:JM,143426:JM,143399:JM,143336:JM,143305:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143422:JM,143326:JM,143391:JM,143261
143326 :: CALL :: call :: C :: v58 = v55.charAt(#(0))::JM,143426:JM,143335:JM,143412:JM,143321:JM,143326:JM,143407:JM,143340:JM,143421
143335 :: NORM :: declaration :: Ljava/lang/Character :: v60 = new java.lang.Character::JM,143335:JM,143321:JM,143407:JM,143421:JM,143362:JM,143426:JM,143399:JM,143336:JM,143305:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143422:JM,143326:JM,143391:JM,143261
143336 :: CALL :: call :: Ljava/lang/String :: v62 = p1 $sref .getPdbx_seq_align_end_ins_code()::JM,143426:JM,143399:JM,143335:JM,143336:JM,143305:JM,143407:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143321:JM,143422:JM,143326:JM,143391:JM,143261:JM,143421
143340 :: CALL :: call :: C :: v64 = v62.charAt(#(0))::JM,143426:JM,143335:JM,143412:JM,143321:JM,143326:JM,143407:JM,143340:JM,143421
143349 :: CALL :: call :: C :: v67 = v53.charValue()::JM,143353
143354 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(32))::
143353 :: PRED :: IF :: Z :: if (v67 != #(63)) goto 181::CD,143354
143358 :: CALL :: call :: C :: v74 = v60.charValue()::JM,143362
143362 :: PRED :: IF :: Z :: if (v74 != #(63)) goto 199::CD,143363
143363 :: CALL :: call :: Ljava/lang/Character :: v76 = valueOf(#(32))::
143367 :: CALL :: call :: V :: v4.setSeqBegin(v48)::CL,95743
143375 :: CALL :: call :: V :: v4.setInsertBegin(v80)::CL,95754
143379 :: CALL :: call :: V :: v4.setSeqEnd(v52)::CL,95765
143387 :: CALL :: call :: V :: v4.setInsertEnd(v84)::CL,95776
143391 :: CALL :: call :: Ljava/lang/String :: v87 = p1 $sref .getDb_align_beg()::JM,143426:JM,143399:JM,143335:JM,143336:JM,143305:JM,143407:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143321:JM,143422:JM,143326:JM,143391:JM,143261:JM,143421
143395 :: CALL :: call :: I :: v89 = parseInt(v87)::JM,143426:JM,143335:JM,143412:JM,143321:JM,143326:JM,143407:JM,143340:JM,143421
143399 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $sref .getDb_align_end()::JM,143426:JM,143399:JM,143335:JM,143336:JM,143305:JM,143407:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143321:JM,143422:JM,143326:JM,143391:JM,143261:JM,143421
143403 :: CALL :: call :: I :: v93 = parseInt(v91)::JM,143426:JM,143335:JM,143412:JM,143321:JM,143326:JM,143407:JM,143340:JM,143421
143407 :: NORM :: declaration :: Ljava/lang/Character :: v94 = new java.lang.Character::JM,143335:JM,143321:JM,143407:JM,143421:JM,143439:JM,143426:JM,143399:JM,143336:JM,143305:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143422:JM,143326:JM,143391:JM,143261
143408 :: CALL :: call :: Ljava/lang/String :: v96 = p1 $sref .getPdbx_db_align_beg_ins_code()::JM,143426:JM,143399:JM,143335:JM,143336:JM,143305:JM,143407:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143321:JM,143422:JM,143326:JM,143391:JM,143261:JM,143421
143412 :: CALL :: call :: C :: v98 = v96.charAt(#(0))::JM,143426:JM,143335:JM,143412:JM,143321:JM,143326:JM,143407:JM,143340:JM,143421
143422 :: CALL :: call :: Ljava/lang/String :: v102 = p1 $sref .getPdbx_db_align_end_ins_code()::JM,143426:JM,143399:JM,143335:JM,143336:JM,143305:JM,143407:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143321:JM,143422:JM,143326:JM,143391:JM,143261:JM,143421
143421 :: NORM :: declaration :: Ljava/lang/Character :: v100 = new java.lang.Character::JM,143335:JM,143321:JM,143407:JM,143421:JM,143448:JM,143426:JM,143399:JM,143336:JM,143305:JM,143340:JM,143408:JM,143313:JM,143412:JM,143322:JM,143422:JM,143326:JM,143391:JM,143261
143426 :: CALL :: call :: C :: v104 = v102.charAt(#(0))::JM,143426:JM,143335:JM,143412:JM,143321:JM,143326:JM,143407:JM,143340:JM,143421
143435 :: CALL :: call :: C :: v107 = v94.charValue()::JM,143439
143439 :: PRED :: IF :: Z :: if (v107 != #(63)) goto 297::CD,143440
143440 :: CALL :: call :: Ljava/lang/Character :: v109 = valueOf(#(32))::
143444 :: CALL :: call :: C :: v112 = v100.charValue()::JM,143448
143448 :: PRED :: IF :: Z :: if (v112 != #(63)) goto 315::CD,143449
143449 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(32))::
143453 :: CALL :: call :: V :: v4.setDbSeqBegin(v89)::CL,95820
143461 :: CALL :: call :: V :: v4.setIdbnsBegin(v118)::CL,95831
143465 :: CALL :: call :: V :: v4.setDbSeqEnd(v93)::CL,95842
143473 :: CALL :: call :: V :: v4.setIdbnsEnd(v122)::CL,95853
143480 :: CALL :: call :: Ljava/util/List :: v126 = v124.getDBRefs()::JM,143484:JM,143516:CL,86068
143484 :: PRED :: IF :: Z :: if (v126 != #(null)) goto 370::CF,143516:CF,143485
143485 :: NORM :: declaration :: Ljava/util/ArrayList :: v127 = new java.util.ArrayList::DD,143516
143489 :: CALL :: call :: Z :: v131 = v129.add(v4)::
143496 :: CALL :: call :: Ljava/lang/String :: v134 = v4.toPDB()::CL,156338
143507 :: CALL :: call :: V :: v136.setDBRefs(v129)::CL,86077
143516 :: EXPR :: assign :: null :: PHI v129 = v126, v127::
143605 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,143613
143610 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .sequenceDifs::
143613 :: CALL :: call :: Z :: v6 = v4.add(p1 $sref )::
143634 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,143642
143639 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structSiteGens::
143642 :: CALL :: call :: Z :: v6 = v4.add(p1 $siteGen )::
143657 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,143665:CD,143669:JM,143697:JM,143706
143665 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,143669:CL,82926
143669 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,143674:CD,143678:CD,143683:CD,143707:CD,143711:CD,143712:CD,143721:CD,143729:CD,143733:CD,143742:CD,143747:CD,143748:CD,143749:CD,143750
143674 :: CALL :: call :: Ljava/util/List :: v10 = v8.getSites()::JM,143747:JM,143678:CL,86292
143678 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 36::CF,143747:CF,143679
143679 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,143747
143683 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,143711:JM,143692
143688 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,143711:JM,143692
143692 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,143748
143693 :: CALL :: call :: Ljava/lang/String :: v23 = v21.getSiteID()::JM,143706:CL,115144
143697 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $structSite .getId()::JM,143697:JM,143706
143701 :: CALL :: call :: Z :: v27 = v23.equals(v25)::JM,143706
143706 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 78::CF,143748
143707 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,143711:JM,143692
143711 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 48::CD,143688:CD,143692:CD,143693:CD,143697:CD,143701:CD,143706:CD,143707:CD,143748:JM,143711:CF,143712
143712 :: PRED :: IF :: Z :: if (v28 != #(null)) goto 106::CF,143749:CF,143713:JM,154724:CD,143750
143713 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v29 = new org.biojava.nbio.structure.Site::DD,143749
143721 :: CALL :: call :: V :: v32.setSiteID(v35)::CL,154747
143729 :: CALL :: call :: V :: v32.setDescription(v38)::CL,115209
143734 :: CALL :: call :: Z :: v41 = v14.add(v32)::
143733 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 134::CD,143734
143742 :: CALL :: call :: V :: v42.setSites(v14)::CL,86301
143747 :: EXPR :: assign :: null :: PHI v14 = v10, v12::JM,143711:JM,143692
143750 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::DD,143733
143748 :: EXPR :: assign :: null :: PHI v28 = #(null), v28, v21::JM,143711:JM,143692:DD,143712:DD,143748:DD,143749
143749 :: EXPR :: assign :: null :: PHI v32 = v28, v29::CF,143750
143788 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,143795:CD,143800:CD,143805:CD,143813:CD,143817:CD,143824:CD,143829:CD,143833:CD,143838:CD,143846:CD,143851:CD,144015:JM,143859:JM,143921:JM,143925:JM,143917
143795 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
143800 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $epolseq )::
143805 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
143813 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $epolseq .getEntity_id()::JM,143859:JM,143921:JM,143813:JM,143925:JM,143917
143817 :: CALL :: call :: I :: v17 = parseInt(v15)::JM,143921:JM,143925
143824 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
143829 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
143833 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
143838 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
143846 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v33 = p0 $this .getEntity(v31)::JM,143851:CL,153651
143851 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 114::CD,143854:CD,143859:CD,143863:CD,143868:CD,143873:CD,143886:CD,143895:CD,143899:CD,143994:CD,143998:CD,144006:CD,144010
143854 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v95 = new java.lang.StringBuilder::
143859 :: CALL :: call :: Ljava/lang/String :: v99 = p1 $epolseq .getEntity_id()::JM,143859:JM,143921:JM,143813:JM,143925:JM,143917
143863 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v95.append(v99)::JM,143921:JM,143925
143868 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(. Can not match seque...))::JM,143925
143873 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
143886 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v38 = p0 $this .getEntityChain(v36)::CL,138472
143895 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v42 = getGroupFromChemCompDictionary(v40)::JM,143909:JM,143899:CL,113797
143899 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 176::CD,143900:CD,143904:CD,143908:CD,143917:CD,143921:CD,143925:JM,143859:JM,143813
143900 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v42.getChemComp()::CL,114030
143904 :: CALL :: call :: Z :: v46 = v44.isEmpty()::JM,143908:CL,114090
143910 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 297::CD,143912
143908 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 176::CD,143909:CD,143910:CD,143917:CD,143921:CD,143925:JM,143859:JM,143813
143909 :: EXPR :: assign :: Z :: v81=v42 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,143910
143912 :: CALL :: call :: V :: v82.setRecordType(#(SEQRES))::CL,94519
143917 :: CALL :: call :: Ljava/lang/String :: v49 = p1 $epolseq .getMon_id()::JM,143859:JM,143921:JM,143813:JM,143925:JM,143917
143921 :: CALL :: call :: I :: v51 = v49.length()::JM,143921:JM,143925
143925 :: PRED :: IF :: Z :: if (v51 != #(3)) goto 237::CD,143930:CD,143934:CD,143960:CD,143964
143930 :: CALL :: call :: Ljava/lang/Character :: v56 = get1LetterCodeAmino(v54)::JM,143934:CL,113746
143934 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 237::JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,143939:CD,143947:CD,143951:CD,143960:CD,143964
143939 :: CALL :: call :: V :: v72.setRecordType(#(SEQRES))::CL,94519
143947 :: CALL :: call :: Ljava/lang/Character :: v79 = get1LetterCodeAmino(v77)::CL,113746
143951 :: CALL :: call :: V :: v72.setAminoType(v79)::CL,114231
143960 :: CALL :: call :: Z :: v60 = isNucleotide(v58)::JM,143964:CL,113761
143964 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 262::JM,114147:JM,114163:JM,114165:JM,114167:JM,114140
143994 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v88 = fromString(v86)::CL,121902
143998 :: CALL :: call :: V :: v84.setResidueNumber(v88)::CL,93626
144006 :: CALL :: call :: V :: v84.setPDBName(v91)::CL,93615:CL,93584
144010 :: CALL :: call :: V :: v38.addGroup(v84)::CL,87059
144015 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
144093 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,144101
144098 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcGens::
144101 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcGen )::
144110 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,144118
144115 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcNats::
144118 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcNat )::
144139 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,144147
144147 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcSyn )::
144144 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcSyns::
144162 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,144170
144167 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structAsyms::
144170 :: CALL :: call :: Z :: v6 = v4.add(p1 $sasym )::
144185 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,144197:CD,144202:JM,144208:JM,144204
144197 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,144202
144202 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,144204:CD,144208
144204 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,144208:JM,144204
144208 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,144220:CD,144238
144220 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
144238 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
144258 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,144270:CD,144275:JM,144277:JM,144281
144270 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,144275
144275 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,144277:CD,144281
144277 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,144277:JM,144281
144281 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,144293:CD,144311
144293 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
144311 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
144355 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,144363:CD,144367:CD,144376:CD,144384
144363 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,144367:CL,86038
144367 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,70097:JM,70129:JM,70089:JM,70105:JM,70122
144376 :: CALL :: call :: V :: v10.setDescription(v12)::CL,86153
144384 :: CALL :: call :: V :: v10.setClassification(v15)::CL,94530
144399 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,144411:CD,144415:CD,144416:CD,144455:CD,144462:CD,144467:CD,144471:CD,144476:CD,144481:CD,144485:CD,144490:CD,144498:CD,144502:CD,144503:CD,144534:CD,144538:CD,144571
144411 :: CALL :: call :: F :: v8 = v6.getResolution()::JM,144415:CL,95529
144415 :: EXPR :: assign :: Z :: v10 = v8 < #(99.0 f)::DD,144416
144416 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 58::CD,144424:CD,144428:CD,144436
144424 :: CALL :: call :: F :: v20 = v6.getResolution()::JM,144428:CL,95529
144428 :: CALL :: call :: Ljava/lang/Float :: v22 = valueOf(v20)::JM,144428
144436 :: CALL :: call :: Ljava/lang/String :: v24 = format(#(%4.2f), v18)::
144455 :: CALL :: call :: V :: v6.setResolution(v29)::CL,95538
144462 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
144467 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $r .getLs_d_res_high()::JM,144534:JM,144538
144471 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::JM,144538
144476 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v39.append(#( ))::
144481 :: CALL :: call :: Ljava/lang/String :: v44 = v31.getMessage()::
144485 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(v44)::
144490 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
144498 :: CALL :: call :: F :: v52 = v6.getRfree()::JM,144502:CL,156360
144502 :: EXPR :: assign :: Z :: v54 = v52 < #(1.0 f)::DD,144503
144503 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 157::CD,144511:CD,144515:CD,144523:JM,144534:JM,144538
144511 :: CALL :: call :: F :: v61 = v6.getRfree()::JM,144515:CL,156360
144515 :: CALL :: call :: Ljava/lang/Float :: v63 = valueOf(v61)::JM,144515
144523 :: CALL :: call :: Ljava/lang/String :: v65 = format(#(%4.2f), v59)::
144534 :: CALL :: call :: Ljava/lang/String :: v68 = p1 $r .getLs_R_factor_R_free()::JM,144534:JM,144538
144538 :: PRED :: IF :: Z :: if (v68 != #(null)) goto 179::CD,144554
144554 :: CALL :: call :: V :: v6.setRfree(v73)::CL,99601
144571 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
144609 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,144614:CD,144618:CD,144639:CD,144649:JM,144643
144614 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $c .getId()::JM,144643:JM,144614:JM,144618:JM,144639
144618 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 33::CD,144621:CD,144626:CD,144631:JM,144643:JM,144614:JM,144618:JM,144639
144621 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
144626 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p1 $c )::
144631 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
144639 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $c .getId()::JM,144643:JM,144614:JM,144618:JM,144639
144643 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .latestChemCompId = v17::
144649 :: CALL :: call :: V :: v18.addChemComp(p1 $c )::CL,156369
144700 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,144705:CD,144709:CD,144713:CD,144717:CD,144721:CD,144744:CD,144745:CD,144749:CD,144754:CD,144766:CD,144770:CD,144813:CD,144814
144705 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $aa .getName()::JM,144705:JM,144721:JM,144717
144709 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v6 = new java.lang.StringBuffer::
144713 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
144717 :: CALL :: call :: [C :: v12 = v5.toCharArray()::JM,144721:JM,144717
144723 :: EXPR :: reference :: C :: v14 = v12[v25]::DD,144727:DD,144729
144721 :: EXPR :: assign :: I :: v13 = v12.length::DD,144744
144727 :: PRED :: IF :: Z :: if (v14 != #(32)) goto 62::CD,144729:CD,144812
144731 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 90::CD,144732:CD,144738:CD,144812
144729 :: PRED :: IF :: Z :: if (v14 != #(44)) goto 73::CD,144731:CD,144812
144732 :: CALL :: call :: Ljava/lang/StringBuffer :: v19 = v8.append(v14)::
144738 :: CALL :: call :: Ljava/lang/StringBuffer :: v21 = v6.append(v14)::
144743 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v25 + #(1)::DD,144814:CF,144813
144744 :: PRED :: IF :: Z :: if (v25 < v13) goto 45::CF,144745:CD,144727:CD,144743:CD,144812:CD,144813:CD,144814
144745 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v26 = new java.lang.StringBuffer::
144749 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v26.append(v8)::
144754 :: CALL :: call :: Ljava/lang/StringBuffer :: v31 = v26.append(v6)::
144766 :: CALL :: call :: Ljava/lang/String :: v36 = v34.getAuthors()::JM,144770:CL,94563
144770 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 164::CF,144780:CD,144771:CD,144775:CD,144781:CD,144789:CD,144794:CD,144798:CD,144803:CD,144807
144771 :: CALL :: call :: Ljava/lang/String :: v53 = v26.toString()::
144775 :: CALL :: call :: V :: v34.setAuthors(v53)::CL,94572
144780 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
144781 :: CALL :: call :: Ljava/lang/String :: v40 = valueOf(v36)::
144789 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(#(,))::
144794 :: CALL :: call :: Ljava/lang/String :: v46 = v26.toString()::
144798 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v46)::
144803 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
144807 :: CALL :: call :: V :: v34.setAuthors(v50)::CL,94572
144814 :: EXPR :: assign :: null :: PHI v25 = #(0), v23::DD,144743:DD,144744
144812 :: EXPR :: assign :: null :: PHI v22 = v24, #(1), v24, v24::DD,144813:CF,144743
144813 :: EXPR :: assign :: null :: PHI v24 = #(0), v22::CF,144814:DD,144731:DD,144812
144878 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,144889
144889 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,152345
144916 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStructOperList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,144924
144921 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structOpers::
144924 :: CALL :: call :: Z :: v6 = v4.add(p1 $structOper )::
144945 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,144953
144950 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblies::
144953 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
144962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,144970
144967 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblyGens::
144970 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
144991 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,145002
145002 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,152345
145027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,145038
145038 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,152345
145087 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,145095
145095 :: CALL :: call :: Z :: v6 = v4.add(p1 $structConn )::
145092 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structConn::
145170 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache,org.biojava.nbio.structure.quaternary.io.BioUnitDataProvider)::JM,125763
145169 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache,org.biojava.nbio.structure.quaternary.io.BioUnitDataProvider)::CE,145170:CD,145176:CD,145180:CD,145185:JM,145211
145176 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $pdbId .toLowerCase()::JM,145211:JM,145180
145180 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p4 $provider .getAsymUnit(v7)::JM,145211:JM,145180
145185 :: PRED :: IF :: Z :: if (p2 $biolAssemblyNr  != #(0)) goto 52::CD,145211:CD,145322:CD,145328
145211 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v9::DD,145170
145322 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v36 = v33.rebuildQuaternaryStructure(v9, v29)::JM,145328:CL,156462
145328 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v36::DD,145170
145358 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int)::
145357 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int)::CE,145358:CD,145362:CD,145368
145362 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChain(#(0), p1 $number )::JM,145368:CL,86470
145368 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,145358
145374 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::CE,145375:CD,145378:CD,145382:CD,145407:CD,145411
145375 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::JM,125880:JM,127001
145378 :: CALL :: call :: Ljava/util/List :: v4 = p1 $c .getAtomGroups()::JM,145411:CL,54331
145382 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,145411
145387 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,145411
145392 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v14 = v12.getType()::JM,145398:CL,54408:CL,54424:CL,54416
145398 :: PRED :: IF :: Z :: if (v14 == v15) goto 50::CD,145399:CD,145403:CD,145405:CD,145406
145399 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v17 = v12.getType()::JM,145405:CL,54408:CL,54424:CL,54416
145396 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v15 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,145398
145403 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v18 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,145405
145406 :: NORM :: compound :: Z :: return #(0)::DD,145375
145407 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,145411
145405 :: PRED :: IF :: Z :: if (v17 != v18) goto 52::CD,145406:CD,145407:CD,145411
145411 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 16::CD,145387:CD,145392:CD,145396:CD,145398:CD,145412:JM,145411
145412 :: NORM :: compound :: Z :: return #(1)::DD,145375
145426 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::JM,150643:JM,150647:JM,150648:JM,150652
145425 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::CE,145426:CD,145431:CD,145642:CD,145646:CD,145647:CD,145651:CD,145659:CD,145660:JM,145441:JM,145566
145431 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v5 = new java.lang.StringBuffer::JM,145651
145436 :: CALL :: call :: Ljava/lang/Object :: v11 = p1 $groups .get(v111)::JM,145441:JM,145646
145442 :: EXPR :: assign :: Z :: v13=v12 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,145443
145443 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 100::CD,145445:CD,145449:CD,145453:CD,145454:CD,145458:CD,145462:CD,145468:CD,145473:CD,145475:CD,145479:CD,145652:CD,145657:CD,145658
145441 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,145442
145445 :: CALL :: call :: Ljava/lang/Character :: v16 = v14.getAminoType()::JM,145652:JM,145453:CL,128074
145449 :: CALL :: call :: C :: v18 = v16.charValue()::JM,145652:JM,145453
145454 :: CALL :: call :: Ljava/lang/Integer :: v23 = valueOf(v110)::
145453 :: PRED :: IF :: Z :: if (v18 != #(63)) goto 71::CF,145652
145458 :: CALL :: call :: Ljava/lang/Integer :: v25 = valueOf(v111)::
145462 :: CALL :: call :: Ljava/lang/Object :: v27 = p2 $positionIndex .put(v23, v25)::
145468 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v5.append(v21)::
145475 :: CALL :: call :: Z :: v33 = v12.isWater()::JM,145479:CL,150591
145473 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v110 + #(1)::DD,145657
145479 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 113::CD,145481:CD,145485:CD,145657:CD,145658
145481 :: CALL :: call :: I :: v35 = v12.size()::JM,145485:CL,156679
145486 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v37 = v12.getAtom(#(0))::JM,145491:CL,151630
145485 :: PRED :: IF :: Z :: if (v35 != #(1)) goto 158::CD,145486:CD,145491:CD,145503:CD,145507
145491 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 142::CD,145497:CD,145501:CD,145657:CD,145658
145497 :: CALL :: call :: Z :: v42 = v40.isMetal()::JM,145501:CL,156692
145503 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v12.getChemComp()::JM,145507:CL,114030
145501 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 158::CD,145503:CD,145507:CD,145657:CD,145658
145507 :: PRED :: IF :: Z :: if (v44 != #(null)) goto 189::CD,145510:CD,145520:CD,145522:CD,145526:CD,145531:CD,145657:CD,145658
145510 :: CALL :: call :: Ljava/lang/String :: v48 = v12.toString()::CL,114954:CL,114856:CL,114666
145522 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v52 = v44.getResidueType()::JM,145526:JM,145531:CL,156705
145520 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::JM,145526:JM,145531
145526 :: CALL :: call :: Z :: v54 = v50.equals(v52)::JM,145526:JM,145531
145531 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 237::CD,145538:CD,145543:CD,145556:CD,145560:CD,145565:CD,145580:CD,145584:CD,145624:CD,145628:CD,145653:CD,145654:CD,145655:CD,145656:CD,145657:CD,145658
145538 :: CALL :: call :: Z :: v59 = v55.contains(v57)::JM,145543
145543 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 237::CD,145550:CD,145555:CD,145556:CD,145560:CD,145565:CD,145580:CD,145584:CD,145624:CD,145628:CD,145653:CD,145654:CD,145655:CD,145656:CD,145657:CD,145658
145550 :: CALL :: call :: Z :: v64 = v60.contains(v62)::JM,145555
145555 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 367::CD,145556:CD,145560:CD,145565:CD,145580:CD,145584:CD,145624:CD,145628:CD,145632:CD,145653:CD,145654:CD,145655:CD,145656:CD,145657:CD,145658
145556 :: CALL :: call :: Ljava/lang/String :: v66 = v44.getOne_letter_code()::JM,145653:JM,145565:CL,132612
145560 :: CALL :: call :: Z :: v69 = v66.equals(#(?))::JM,145653:JM,145565
145566 :: PRED :: IF :: Z :: if (p3 $isNucleotideChain  == #(0)) goto 288::CD,145573:CD,145578:CD,145653
145565 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 288::CF,145653:CD,145566
145573 :: CALL :: call :: Z :: v74 = v70.contains(v72)::JM,145578
145578 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 288::CD,145653
145580 :: CALL :: call :: I :: v79 = v77.length()::JM,145584
145587 :: CALL :: call :: Ljava/lang/String :: v83 = v12.toString()::CL,114954:CL,114856:CL,114666
145584 :: PRED :: IF :: Z :: if (v79 <= #(1)) goto 316::CD,145587
145598 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v99)::
145602 :: CALL :: call :: Ljava/lang/Integer :: v90 = valueOf(v112)::
145606 :: CALL :: call :: Ljava/lang/Object :: v92 = p2 $positionIndex .put(v88, v90)::
145612 :: CALL :: call :: C :: v94 = v77.charAt(v100)::
145617 :: CALL :: call :: Ljava/lang/StringBuffer :: v96 = v5.append(v94)::
145622 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v99 + #(1)::DD,145654:CF,145623
145623 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v100 + #(1)::DD,145656:CF,145654
145624 :: CALL :: call :: I :: v86 = v77.length()::JM,145628
145628 :: PRED :: IF :: Z :: if (v100 < v86) goto 322::CD,145598:CD,145602:CD,145606:CD,145612:CD,145617:CD,145622:CD,145623:CD,145624:CD,145654:CD,145655:CD,145656
145632 :: CALL :: call :: Ljava/lang/String :: v104 = v12.toString()::CL,114954:CL,114856:CL,114666
145642 :: CALL :: call :: I :: v9 = p1 $groups .size()::JM,145441:JM,145646
145641 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v113 + #(1)::DD,145660:CF,145659
145646 :: PRED :: IF :: Z :: if (v111 < v9) goto 20::CD,145436:CD,145441:CD,145442:CD,145443:CD,145641:CD,145642:CD,145657:CD,145658:CD,145659:CD,145660:JM,145646:JM,145651
145647 :: CALL :: call :: Ljava/lang/String :: v115 = v5.toString()::JM,145651
145651 :: NORM :: compound :: Ljava/lang/String :: return v115::DD,145426
145654 :: EXPR :: assign :: null :: PHI v99 = v110, v97::CF,145655:DD,145622:DD,145657
145655 :: EXPR :: assign :: null :: PHI v112 = v111, v112::CF,145656:DD,145655:DD,145658
145652 :: EXPR :: assign :: null :: PHI v21 = v18, #(88)::
145653 :: EXPR :: assign :: null :: PHI v77 = v66, #(N), #(X)::JM,145584:JM,145628
145658 :: EXPR :: assign :: null :: PHI v113 = v111, v111, v111, v111, v111, v112, v111::DD,145641
145659 :: EXPR :: assign :: null :: PHI v110 = #(0), v106::CF,145660:DD,145473:DD,145654:DD,145657
145656 :: EXPR :: assign :: null :: PHI v100 = #(0), v98::DD,145623:DD,145628
145657 :: EXPR :: assign :: null :: PHI v106 = v31, v110, v110, v110, v110, v99, v110::CF,145658:DD,145659
145660 :: EXPR :: assign :: null :: PHI v111 = #(0), v109::JM,145441:DD,145646:DD,145655:DD,145658
145756 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::CF,145757:CF,145767:CD,145768
145757 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::JM,126000:JM,126006
145767 :: NORM :: compound :: Z :: return #(0)::CF,145757
145768 :: NORM :: compound :: Z :: return #(1)::CF,145757
145772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::CF,145773:CF,145790:CD,145777:CD,145782
145773 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::JM,126017:JM,126602:JM,126021:JM,126603
145777 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v4 = new org.biojava.nbio.core.sequence.ProteinSequence::DD,145782
145782 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return v4::CF,145773
145790 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return #(null)::CF,145773
145798 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::JM,126604
145797 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::CF,145798:CD,145803:CD,145806:CD,145812:CD,145813:CD,145821:CD,145825
145803 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getIdentity()::JM,145825:JM,145813:JM,145821
145806 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,145825:JM,145813:JM,145821
145812 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,145825:JM,145813:JM,145821:JM,145803
145813 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,145825:JM,145813:JM,145803:JM,145821
145821 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,145825:JM,145813:JM,145821
145825 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,145798
145838 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::JM,126037:JM,126043
145837 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::CF,145838:CF,145848:CD,145849
145848 :: NORM :: compound :: Z :: return #(0)::CF,145838
145849 :: NORM :: compound :: Z :: return #(1)::CF,145838
145854 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/DNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::JM,126054:JM,126602:JM,126603:JM,126058
145853 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::CF,145854:CF,145871:CD,145858:CD,145863
145858 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v4 = new org.biojava.nbio.core.sequence.DNASequence::DD,145863
145863 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return v4::CF,145854
145871 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return #(null)::CF,145854
145878 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::CF,145879:CD,145884:CD,145887:CD,145893:CD,145894:CD,145902:CD,145906
145879 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::JM,126604
145887 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,145906:JM,145894:JM,145902
145884 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,145906:JM,145894:JM,145902
145894 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,145906:JM,145894:JM,145902:JM,145884
145893 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,145906:JM,145894:JM,145902:JM,145884
145902 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,145906:JM,145894:JM,145902
145906 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,145879
145918 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::CF,145919:CF,145929:CD,145930
145919 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::JM,126074:JM,126080
145930 :: NORM :: compound :: Z :: return #(1)::CF,145919
145929 :: NORM :: compound :: Z :: return #(0)::CF,145919
145934 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::CF,145935:CF,145952:CD,145939:CD,145944
145935 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/RNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::JM,126091:JM,126602:JM,126603:JM,126095
145939 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v4 = new org.biojava.nbio.core.sequence.RNASequence::DD,145944
145944 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return v4::CF,145935
145952 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return #(null)::CF,145935
145959 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::CF,145960:CD,145965:CD,145968:CD,145974:CD,145975:CD,145983:CD,145987
145960 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::JM,126604
145965 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,145987:JM,145975:JM,145983
145968 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,145987:JM,145975:JM,145983
145974 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,145987:JM,145975:JM,145983:JM,145965
145975 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,145987:JM,145975:JM,145983:JM,145965
145983 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,145987:JM,145975:JM,145983
145987 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,145960
145999 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,146004:JM,146009:CF,146000:CD,146012:CD,146016:CD,146017:CD,146019:CD,146020
146000 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,126129
146004 :: CALL :: call :: Z :: v8 = p1 $pair .hasGap(v13)::JM,146016:JM,146004:JM,146009:JM,146012
146010 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v12 + #(1)::DD,146018
146011 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v13 + #(1)::DD,146020:CF,146019
146009 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 20::CF,146018:CD,146010
146012 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,146016:JM,146004:JM,146009:JM,146012
146018 :: EXPR :: assign :: null :: PHI v10 = v12, v9::DD,146019:CF,146011
146019 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,146020:DD,146010:DD,146017:DD,146018
146016 :: PRED :: IF :: Z :: if (v13 <= v6) goto 9::CD,146004:CD,146009:CD,146011:CD,146012:CD,146018:CD,146019:CD,146020:JM,146016:CF,146017
146017 :: NORM :: compound :: I :: return v12::CF,146000
146020 :: EXPR :: assign :: null :: PHI v13 = #(1), v11::JM,146004:JM,146009:JM,146012:DD,146011:DD,146016
146035 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,146040:JM,146045:CF,146036:CD,146058:CD,146062:CD,146063:CD,146065:CD,146066
146036 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,126137
146040 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInQueryAt(v19)::JM,146058:JM,146040:JM,146062:JM,146045
146046 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,146050:JM,146055:JM,146046
146045 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,146050:JM,146055:JM,146046
146050 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,146050:JM,146055
146055 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,146064:CD,146056
146058 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,146058:JM,146040:JM,146062:JM,146045
146056 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,146064
146057 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,146066:CF,146065
146062 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,146040:CD,146045:CD,146046:CD,146050:CD,146055:CD,146057:CD,146058:CD,146064:CD,146065:CD,146066:JM,146062:CF,146063
146063 :: NORM :: compound :: I :: return v18::CF,146036
146066 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,146058:JM,146040:JM,146045:DD,146057:DD,146062
146064 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,146065:CF,146057
146065 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,146066:DD,146056:DD,146063:DD,146064
146082 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,146087:JM,146092:CF,146083:CD,146105:CD,146109:CD,146110:CD,146112:CD,146113
146083 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,126140
146087 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInTargetAt(v19)::JM,146087:JM,146105:JM,146092:JM,146109
146092 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,146097:JM,146102:JM,146093
146093 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,146097:JM,146102:JM,146093
146097 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,146097:JM,146102
146102 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,146111:CD,146103
146103 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,146111
146104 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,146113:CF,146112
146105 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,146087:JM,146105:JM,146092:JM,146109
146110 :: NORM :: compound :: I :: return v18::CF,146083
146111 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,146112:CF,146104
146109 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,146087:CD,146092:CD,146093:CD,146097:CD,146102:CD,146104:CD,146105:CD,146111:CD,146112:CD,146113:JM,146109:CF,146110
146112 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,146113:DD,146103:DD,146110:DD,146111
146113 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,146087:JM,146105:JM,146092:DD,146104:DD,146109
146153 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.areResNumbersAligned(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,146158:CD,146162:CD,146166
146158 :: CALL :: call :: Z :: v5 = isProtein(p1 $c1 )::JM,146166:JM,146168:CL,156714
146162 :: CALL :: call :: Z :: v7 = isProtein(p2 $c2 )::JM,146166:CL,156714
146166 :: PRED :: IF :: Z :: if (v5 == v7) goto 21::CD,146168:CD,146184:CD,146267:CD,146271:CD,146336
146171 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c1 .getAtomGroups(v13)::JM,146336:CL,54861
146168 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 39::CD,146171:CD,146179:CD,146336
146179 :: CALL :: call :: Ljava/util/List :: v12 = p1 $c1 .getAtomGroups(v10)::JM,146336:CL,54861
146184 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,146271
146189 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,146271
146198 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v27 = p2 $c2 .getGroupByPDB(v25)::CL,105813
146203 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getPDBName()::JM,146216:CL,104483
146207 :: CALL :: call :: Ljava/lang/String :: v31 = v23.getPDBName()::JM,146216:CL,104483
146211 :: CALL :: call :: Z :: v33 = v29.equals(v31)::JM,146216
146216 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 182::CD,146267:CD,146271
146267 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,146271
146271 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 66::CD,146189:CD,146198:CD,146203:CD,146207:CD,146211:CD,146216:JM,146271
146336 :: EXPR :: assign :: null :: PHI v16 = v15, v12::JM,146271
147902 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::CE,147903:CD,147906:CD,147907:CD,147912:CD,147916:CD,147940:CD,147951:CD,147956:CD,148012:CD,148013:CD,148017:CD,148018:CD,148023:CD,148119:CD,148133:CD,148136:CD,148150:CD,148153:CD,148167:CD,148174:CD,148175
147903 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::JM,129857:JM,129852:JM,130725:JM,130719:JM,130814
147906 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,148024:DD,148168:CF,147907
147907 :: EXPR :: assign :: I :: v4 = p1 $pdbIDs .length::
147912 :: CALL :: call :: Ljava/lang/String :: v8 = getProperty(#(PDB.SERVER))::JM,147912:JM,147916
147916 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 26::CD,147929
147929 :: CALL :: call :: Ljava/lang/String :: v17 = format(#(Got System property %s=%s), v13)::
147940 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v135 = new java.lang.IllegalArgumentException::
147951 :: CALL :: call :: Ljava/lang/String :: v25 = format(#(http://%s/pdb/rest/id...), v23)::JM,148174
147956 :: EXPR :: assign :: I :: v26 = p1 $pdbIDs .length::DD,148012
147962 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toUpperCase()::JM,147973:JM,147981:JM,148173
147966 :: EXPR :: reference :: Ljava/util/Map :: v30 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,147973
147968 :: CALL :: call :: Z :: v32 = v30.containsKey(v29)::JM,147973:JM,147981:JM,148173
147974 :: EXPR :: reference :: Ljava/util/Map :: v33 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,147981
147973 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 148::CF,147988:CD,147974:CD,147976:CD,147981:CD,147982:CD,147989:CD,147997:CD,148002:CD,148007:CD,148173
147976 :: CALL :: call :: Ljava/lang/Object :: v35 = v33.get(v29)::JM,147981:JM,147973:JM,148173
147982 :: CALL :: call :: Z :: v38 = v3.add(v36)::
147981 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::
147988 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v39 = new java.lang.StringBuilder::JM,148173
147989 :: CALL :: call :: Ljava/lang/String :: v41 = valueOf(v52)::
147997 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v39.append(v29)::JM,148173:JM,147973:JM,147981
148002 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#(,))::JM,148173
148007 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::JM,148173
148011 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v53 + #(1)::DD,148175:CF,148174
148012 :: PRED :: IF :: Z :: if (v53 < v26) goto 102::CD,147962:CD,147966:CD,147968:CD,147973:CD,148011:CD,148173:CD,148174:CD,148175:JM,148017
148013 :: CALL :: call :: I :: v55 = v52.length()::JM,148017
148018 :: CALL :: call :: C :: v58 = v52.charAt(v56)::JM,148023
148017 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v55 - #(1)::JM,148023
148023 :: PRED :: IF :: Z :: if (v58 != #(61)) goto 201::CD,148024:CD,148057:CD,148069:CD,148073:CD,148102:CD,148106:CD,148107:CD,148111:CD,148168
148024 :: NORM :: compound :: Ljava/util/List :: return v3::DD,147903
148057 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$PDBStatusXMLHandler :: v75 = new org.biojava.nbio.structure.PDBStatus$PDBStatusXMLHandler::JM,148082:JM,148102:JM,148069:JM,148106:JM,148073:JM,148078:JM,148107
148069 :: CALL :: call :: Ljava/util/List :: v80 = v75.getRecords()::JM,148082:JM,148102:JM,148069:JM,148106:JM,148073:JM,148078
148073 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,148082:JM,148102:JM,148106:JM,148073:JM,148078
148078 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,148082:JM,148102:JM,148106:JM,148078
148082 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,148083:JM,148088
148083 :: CALL :: call :: Ljava/lang/Object :: v90 = v87.get(#(structureId))::JM,148083:JM,148088
148088 :: EXPR :: assign :: Ljava/lang/Object :: v91 = CHECKCAST v90::JM,148089:JM,148093
148089 :: CALL :: call :: Ljava/lang/String :: v93 = v91.toUpperCase()::JM,148089:JM,148093
148094 :: EXPR :: reference :: Ljava/util/Map :: v94 = org.biojava.nbio.structure.PDBStatus.recordsCache::
148093 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 355::CD,148094:CD,148096:JM,148082:JM,148102:JM,148106:JM,148078
148096 :: CALL :: call :: Ljava/lang/Object :: v96 = v94.put(v93, v87)::
148102 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,148082:JM,148102:JM,148106:JM,148078
148106 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 308::CD,148078:CD,148082:CD,148083:CD,148088:CD,148089:CD,148093:CD,148102:JM,148106:JM,148107
148107 :: CALL :: call :: Ljava/util/List :: v98 = v75.getRecords()::JM,148107
148111 :: CALL :: call :: Z :: v112 = v3.addAll(v98)::
148119 :: CALL :: call :: Ljava/lang/String :: v107 = toString(p1 $pdbIDs )::
148133 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,147903
148136 :: CALL :: call :: Ljava/lang/String :: v131 = toString(p1 $pdbIDs )::
148150 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,147903
148153 :: CALL :: call :: Ljava/lang/String :: v120 = toString(p1 $pdbIDs )::
148167 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,147903
148168 :: NORM :: compound :: Ljava/util/List :: return v3::DD,147903
148174 :: EXPR :: assign :: null :: PHI v52 = v25, v50::CF,148175:JM,148017:JM,148023:DD,148173
148175 :: EXPR :: assign :: null :: PHI v53 = #(0), v51::DD,148011:DD,148012
148173 :: EXPR :: assign :: null :: PHI v50 = v52, v49::DD,148174:CF,148011
148272 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::CE,148273:CD,148276:CD,148280:CD,148285:CD,148397:CD,148398:CD,148403:CD,148408:CD,148413:CD,148422:CD,148423
148273 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::JM,129912:JM,130835
148276 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $statusStr .toUpperCase()::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148280 :: CALL :: call :: Z :: v7 = v4.equalsIgnoreCase(#(OBSOLETE))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148286 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v69 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,148423
148285 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 24::CD,148286:CD,148289:CD,148294:CD,148423:JM,148339:JM,148384:JM,148321:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148289 :: CALL :: call :: Z :: v11 = v4.equalsIgnoreCase(#(CURRENT))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148294 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 40::CD,148295:CD,148298:CD,148303:CD,148423:JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148348:JM,148285
148295 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,148423
148298 :: CALL :: call :: Z :: v14 = v4.equalsIgnoreCase(#(AUTH))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148303 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,148304:CD,148307:CD,148312:CD,148423:JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148366:JM,148303:JM,148348:JM,148285
148307 :: CALL :: call :: Z :: v17 = v4.equalsIgnoreCase(#(HOLD))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148304 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,148423
148312 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 72::CD,148313:CD,148316:CD,148321:CD,148423:JM,148339:JM,148384:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148313 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,148423
148316 :: CALL :: call :: Z :: v20 = v4.equalsIgnoreCase(#(HPUB))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148322 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,148423
148321 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 88::CD,148322:CD,148325:CD,148330:CD,148423:JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148325 :: CALL :: call :: Z :: v23 = v4.equalsIgnoreCase(#(POLC))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148330 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 104::CD,148331:CD,148334:CD,148339:CD,148423:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148331 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,148423
148334 :: CALL :: call :: Z :: v26 = v4.equalsIgnoreCase(#(PROC))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148339 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 120::CD,148340:CD,148343:CD,148348:CD,148423:JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148285
148343 :: CALL :: call :: Z :: v29 = v4.equalsIgnoreCase(#(REFI))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148340 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,148423
148348 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 136::CD,148349:CD,148352:CD,148357:CD,148423:JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148349 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,148423
148352 :: CALL :: call :: Z :: v32 = v4.equalsIgnoreCase(#(REPL))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148358 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,148423
148357 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 152::CD,148358:CD,148361:CD,148366:CD,148423:JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148303:JM,148348:JM,148285
148361 :: CALL :: call :: Z :: v35 = v4.equalsIgnoreCase(#(WAIT))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148366 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 168::CD,148367:CD,148370:CD,148375:CD,148423:JM,148339:JM,148384:JM,148321:JM,148294:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148367 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,148423
148370 :: CALL :: call :: Z :: v38 = v4.equalsIgnoreCase(#(WDRN))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148375 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 184::CD,148376:CD,148379:CD,148384:CD,148423:JM,148339:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148379 :: CALL :: call :: Z :: v41 = v4.equalsIgnoreCase(#(MODEL))::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148376 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,148423
148384 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 200::CD,148385:CD,148394:CD,148423
148385 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,148423
148394 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,148423
148398 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v46 = new java.lang.StringBuilder::
148397 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v45 = new java.lang.IllegalArgumentException::
148403 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v46.append(v4)::JM,148339:JM,148384:JM,148321:JM,148294:JM,148375:JM,148357:JM,148330:JM,148312:JM,148366:JM,148303:JM,148348:JM,148285
148408 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v50.append(#('.))::
148413 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
148422 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v70::DD,148273
148423 :: EXPR :: assign :: null :: PHI v70 = v69, v68, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57::CF,148422
148491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CE,148492:CD,148494:CD,148496
148494 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status::DD,148496:DD,148497
148492 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::
148498 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = values()::JM,148501:CL,161464
148496 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,148497:CD,148498:CD,148501:CD,148502:CD,148503:CD,148505:CD,148514:CD,148516:CD,148525:CD,148527:CD,148536:CD,148538:CD,148547:CD,148549:CD,148558:CD,148560:CD,148569:CD,148571:CD,148580:CD,148582:CD,148591:CD,148593:CD,148602:CD,148604:CD,148613:CD,148615:CD,148624:CD,148626:CD,148635:CD,148637:CD,148648
148497 :: NORM :: compound :: [I :: return v2::DD,148492
148502 :: NORM :: declaration :: [I :: v7 = new []::DD,148648
148503 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v8 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::
148501 :: EXPR :: assign :: I :: v6 = v5.length::CF,148502
148505 :: CALL :: call :: I :: v10 = v8.ordinal()::
148509 :: EXPR :: modify :: I :: v7[v10] = #(3)::
148514 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::
148516 :: CALL :: call :: I :: v16 = v14.ordinal()::
148520 :: EXPR :: modify :: I :: v7[v16] = #(2)::
148527 :: CALL :: call :: I :: v22 = v20.ordinal()::
148525 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v20 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::
148531 :: EXPR :: modify :: I :: v7[v22] = #(4)::
148538 :: CALL :: call :: I :: v28 = v26.ordinal()::
148536 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::
148542 :: EXPR :: modify :: I :: v7[v28] = #(5)::
148547 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v32 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::
148549 :: CALL :: call :: I :: v34 = v32.ordinal()::
148553 :: EXPR :: modify :: I :: v7[v34] = #(12)::
148558 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::
148560 :: CALL :: call :: I :: v40 = v38.ordinal()::
148564 :: EXPR :: modify :: I :: v7[v40] = #(1)::
148571 :: CALL :: call :: I :: v46 = v44.ordinal()::
148569 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = org.biojava.nbio.structure.PDBStatus$Status.POLC::
148575 :: EXPR :: modify :: I :: v7[v46] = #(6)::
148582 :: CALL :: call :: I :: v52 = v50.ordinal()::
148580 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = org.biojava.nbio.structure.PDBStatus$Status.PROC::
148586 :: EXPR :: modify :: I :: v7[v52] = #(7)::
148591 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.REFI::
148593 :: CALL :: call :: I :: v58 = v56.ordinal()::
148597 :: EXPR :: modify :: I :: v7[v58] = #(8)::
148602 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REPL::
148604 :: CALL :: call :: I :: v64 = v62.ordinal()::
148608 :: EXPR :: modify :: I :: v7[v64] = #(9)::
148615 :: CALL :: call :: I :: v70 = v68.ordinal()::
148613 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::
148619 :: EXPR :: modify :: I :: v7[v70] = #(13)::
148626 :: CALL :: call :: I :: v76 = v74.ordinal()::
148624 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v74 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::
148630 :: EXPR :: modify :: I :: v7[v76] = #(10)::
148635 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v80 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::
148637 :: CALL :: call :: I :: v82 = v80.ordinal()::
148641 :: EXPR :: modify :: I :: v7[v82] = #(11)::
148648 :: NORM :: compound :: [I :: return v7::DD,148492
148763 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.mergeReversed(java.util.List,java.util.List)::CD,148768:CD,148772:JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148778:JM,148874:JM,148840:JM,148846:JM,148797
148768 :: CALL :: call :: Z :: v5 = p2 $other .isEmpty()::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148778:JM,148874:JM,148840:JM,148846:JM,148797
148774 :: CALL :: call :: Z :: v8 = p1 $merged .isEmpty()::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148778:JM,148874:JM,148840:JM,148846:JM,148797
148772 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 11::CD,148774:CD,148778:JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797
148778 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 29::CD,148779:CD,148785:CD,148789:CD,148793:CD,148797:CD,148851:CD,148855:CD,148878:JM,148803:JM,148817:JM,148865:JM,148823:JM,148772:JM,148778:JM,148874:JM,148840:JM,148846
148779 :: CALL :: call :: Z :: v51 = p1 $merged .addAll(p2 $other )::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148778:JM,148874:JM,148840:JM,148846:JM,148797
148785 :: CALL :: call :: Ljava/util/ListIterator :: v10 = p1 $merged .listIterator()::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148778:JM,148874:JM,148840:JM,148846:JM,148797
148789 :: CALL :: call :: Ljava/util/ListIterator :: v12 = p2 $other .listIterator()::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148778:JM,148874:JM,148840:JM,148846:JM,148797
148793 :: CALL :: call :: Ljava/lang/Object :: v14 = v12.next()::JM,148803:JM,148817:JM,148865:JM,148823:JM,148855:JM,148874:JM,148840:JM,148846:JM,148797
148799 :: CALL :: call :: Ljava/lang/Object :: v19 = v10.next()::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797
148797 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,148878
148803 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,148829:JM,148835:JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797
148804 :: CALL :: call :: Ljava/lang/Object :: v22 = v10.previous()::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797
148809 :: CALL :: call :: V :: v10.add(v31)::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797
148813 :: CALL :: call :: Z :: v27 = v12.hasNext()::JM,148803:JM,148817:JM,148865:JM,148823:JM,148855:JM,148874:JM,148840:JM,148846:JM,148797
148819 :: CALL :: call :: Ljava/lang/Object :: v29 = v12.next()::JM,148803:JM,148817:JM,148865:JM,148823:JM,148855:JM,148874:JM,148840:JM,148846:JM,148797
148817 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 96::CD,148819:CD,148823:CD,148824:CD,148829:CD,148876:JM,148803:JM,148817:JM,148865:JM,148855:JM,148874:JM,148840:JM,148846:JM,148797
148823 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,148876
148824 :: CALL :: call :: I :: v24 = v31.compareTo(v20)::JM,148829
148830 :: CALL :: call :: Z :: v33 = v31.equals(v20)::JM,148835
148829 :: PRED :: IF :: Z :: if (v24 > #(0)) goto 80::CD,148809:CD,148813:CD,148817:CD,148830:CD,148835:CD,148877:JM,148803:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797
148835 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 148::CF,148877:CD,148836:CD,148840:CD,148847:CD,148851:CD,148855:CD,148878:JM,148803:JM,148817:JM,148865:JM,148823:JM,148874:JM,148846:JM,148797
148836 :: CALL :: call :: Z :: v35 = v12.hasNext()::JM,148803:JM,148817:JM,148865:JM,148823:JM,148855:JM,148874:JM,148840:JM,148846:JM,148797
148842 :: CALL :: call :: Ljava/lang/Object :: v37 = v12.next()::JM,148803:JM,148817:JM,148865:JM,148823:JM,148855:JM,148874:JM,148840:JM,148846:JM,148797
148840 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 137::CD,148842:CD,148846:CD,148847:CD,148851:CD,148855:CD,148877:CD,148878:JM,148803:JM,148817:JM,148865:JM,148823:JM,148874:JM,148840:JM,148797
148846 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,148877
148847 :: CALL :: call :: Ljava/lang/Object :: v41 = v10.next()::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797
148851 :: CALL :: call :: Z :: v17 = v10.hasNext()::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797
148855 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 57::CD,148799:CD,148803:CD,148804:CD,148824:CD,148829:CD,148856:CD,148870:CD,148874:CD,148876:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148840:JM,148846:JM,148797
148856 :: CALL :: call :: V :: v10.add(v42)::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797
148861 :: CALL :: call :: Ljava/lang/Object :: v47 = v12.next()::JM,148803:JM,148817:JM,148865:JM,148823:JM,148855:JM,148874:JM,148840:JM,148846:JM,148797
148866 :: CALL :: call :: V :: v10.add(v48)::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797
148865 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797
148870 :: CALL :: call :: Z :: v45 = v12.hasNext()::JM,148803:JM,148817:JM,148865:JM,148823:JM,148855:JM,148874:JM,148840:JM,148846:JM,148797
148874 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 176::CD,148861:CD,148865:CD,148866:CD,148870:JM,148803:JM,148817:JM,148823:JM,148855:JM,148874:JM,148840:JM,148846:JM,148797
148878 :: EXPR :: assign :: null :: PHI v42 = v15, v39::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797:DD,148876
148876 :: EXPR :: assign :: null :: PHI v31 = v42, v30::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148874:JM,148840:JM,148846:JM,148797:JM,148829:JM,148835:DD,148877
148877 :: EXPR :: assign :: null :: PHI v39 = v31, v38::JM,148803:JM,148817:JM,148865:JM,148855:JM,148823:JM,148772:JM,148874:JM,148840:JM,148846:JM,148797:DD,148878
149036 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::CE,149037:CD,149040:CD,149044:CD,149049:CD,149050:CD,149054:CD,149060
149037 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::
149040 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $f .getName()::JM,149044:JM,149060:JM,149050:JM,149049:JM,149054
149044 :: CALL :: call :: I :: v8 = v4.lastIndexOf(#(.))::JM,149044:JM,149060:JM,149050:JM,149049:JM,149054
149050 :: CALL :: call :: I :: v12 = v4.length()::JM,149044:JM,149060:JM,149050:JM,149049:JM,149054
149049 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 + #(1)::JM,149044:JM,149060:JM,149049:JM,149054:JM,149050
149054 :: CALL :: call :: Ljava/lang/String :: v14 = v4.substring(v10, v12)::JM,149044:JM,149060:JM,149050:JM,149049:JM,149054
149060 :: NORM :: compound :: Ljava/lang/String :: return v14::CF,149037
149089 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.prepareURLConnection(java.lang.String,int)::
149120 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.copy(java.io.File,java.io.File)::CD,149134:CD,149139
149134 :: NORM :: declaration :: Ljava/io/FileOutputStream :: v9 = new java.io.FileOutputStream::
149139 :: CALL :: call :: Ljava/nio/channels/FileChannel :: v12 = v9.getChannel()::
150290 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.addMirror(org.biojava.nbio.structure.scop.ScopMirror)::CD,150298
150295 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .mirrors::
150298 :: CALL :: call :: Z :: v6 = v4.add(p1 $scopURLs )::
150402 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toPDB()::CD,150409:CD,150446
150406 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .insCode::DD,150409
150410 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
150409 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 34::CF,150410:CD,150417:CD,150422
150417 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(v8)::
150422 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
150446 :: CALL :: call :: Ljava/lang/String :: v23 = format(#(%s%4d%-2s), v16)::
150591 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.isWater()::CE,150592:CD,150595:CD,150600:CD,150605
150595 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.GroupType.WATERNAMES::JM,150605
150592 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.isWater()::JM,133910:JM,145479:JM,165518
150597 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .pdb_name::JM,150605
150600 :: CALL :: call :: Z :: v6 = v3.contains(v4)::JM,150605
150605 :: NORM :: compound :: Z :: return v6::CF,150592
150608 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::CE,150609:CD,150615
150609 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::JM,133937:JM,133924:JM,133977:JM,134238:JM,139506
150615 :: NORM :: compound :: Ljava/lang/Integer :: return v3::CF,150609
150612 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .seqNum::DD,150615
150618 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::JM,134406
150617 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::CE,150618:CD,150623:CD,150627:CD,150631:CD,150637:CD,150643:CD,150647:CD,150780:CD,150785:CD,150790:CD,150798:CD,150824:CD,150829:CD,150834:CD,150842
150623 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
150627 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
150631 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(1))::JM,150643:JM,150647:CL,145425
150637 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(1))::JM,150648:JM,150652:CL,145425
150643 :: CALL :: call :: Z :: v15 = v11.isEmpty()::JM,150643:JM,150647
150647 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 50::CD,150648:CD,150652:CD,150659
150648 :: CALL :: call :: Z :: v18 = v13.isEmpty()::JM,150648:JM,150652
150652 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 63::CD,150659:CD,150662:CD,150667:CD,150671:CD,150676:CD,150681:CD,150686:CD,150696:CD,150701:CD,150705:CD,150710:CD,150715:CD,150720:CD,150728:CD,150733:CD,150738
150659 :: NORM :: compound :: Z :: return #(1)::DD,150618
150662 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
150667 :: CALL :: call :: I :: v24 = v11.length()::JM,150643:JM,150647
150671 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
150676 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#() ))::
150681 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v29.append(v11)::JM,150643:JM,150647
150686 :: CALL :: call :: Ljava/lang/String :: v33 = v31.toString()::
150696 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
150701 :: CALL :: call :: I :: v40 = v13.length()::JM,150648:JM,150652
150705 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v36.append(v40)::
150710 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v42.append(#() ))::
150715 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v13)::JM,150648:JM,150652
150720 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
150728 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v51 = p0 $this .getNucleotideSequence(v11)::JM,150738:JM,150754:JM,150755:JM,150928:JM,150929:JM,150741:JM,150762:JM,150767:JM,150749:CL,162902
150733 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v53 = p0 $this .getNucleotideSequence(v13)::JM,150930:JM,150754:JM,150739:JM,150806:JM,150811:JM,150745:JM,150799:JM,150749:CL,162902
150738 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 170::CD,150739:CD,150740
150739 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 173::CD,150740:CD,150741:CD,150745:CD,150749:CD,150754:CD,150843:CD,150846:CD,150852:CD,150853:CD,150861:CD,150865:CD,150929:CD,150930:JM,150755:JM,150928:JM,150762:JM,150767
150740 :: NORM :: compound :: Z :: return #(1)::DD,150618
150741 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v56 = v51.getCompoundSet()::JM,150754:JM,150755:JM,150928:JM,150929:JM,150741:JM,150762:JM,150767:JM,150749
150745 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v58 = v53.getCompoundSet()::JM,150930:JM,150754:JM,150806:JM,150811:JM,150745:JM,150799:JM,150749
150749 :: CALL :: call :: Z :: v60 = v56.equals(v58)::JM,150754:JM,150762:JM,150767:JM,150749:JM,150806:JM,150811
150754 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 317::CF,150929:CD,150755:CD,150759:CD,150762:CD,150767:CD,150799:CD,150803:CD,150806:CD,150811:CD,150928:CD,150930:JM,150754:JM,150741:JM,150749
150755 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v62 = v51.getCompoundSet()::JM,150754:JM,150755:JM,150928:JM,150929:JM,150741:JM,150762:JM,150767:JM,150749
150759 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v64 = getRNACompoundSet()::JM,150762:JM,150767
150762 :: CALL :: call :: Z :: v66 = v62.equals(v64)::JM,150754:JM,150762:JM,150767:JM,150749
150767 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 256::CF,150928:CF,150768
150768 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v67 = new org.biojava.nbio.core.sequence.RNASequence::DD,150928
150780 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
150785 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v73.append(v11)::JM,150643:JM,150647
150790 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
150798 :: NORM :: compound :: Z :: return #(1)::DD,150618
150799 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v83 = v53.getCompoundSet()::JM,150930:JM,150754:JM,150806:JM,150811:JM,150745:JM,150799:JM,150749
150803 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v85 = getRNACompoundSet()::JM,150806:JM,150811
150806 :: CALL :: call :: Z :: v87 = v83.equals(v85)::JM,150754:JM,150806:JM,150811:JM,150749
150811 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 317::CF,150929:CF,150812:CD,150930
150812 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v88 = new org.biojava.nbio.core.sequence.RNASequence::DD,150930
150824 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v94 = new java.lang.StringBuilder::
150829 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v94.append(v13)::JM,150648:JM,150652
150834 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
150842 :: NORM :: compound :: Z :: return #(1)::DD,150618
150843 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v104 = getNuc4_4()::JM,150898:JM,150865:JM,150853:JM,150861
150846 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v105 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,150898:JM,150865:JM,150853:JM,150861
150852 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v108 = LOCAL::JM,150898:JM,150865:JM,150853:JM,150861
150853 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v110 = getPairwiseAligner(v101, v102, v108, v105, v104)::JM,150898:JM,150865:JM,150853:JM,150861
150861 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v112 = v110.getPair()::JM,150898:JM,150865:JM,150853:JM,150861
150865 :: PRED :: IF :: Z :: if (v112 != #(null)) goto 408::CD,150890:CD,150893:CD,150898:CD,150903:CD,150908:CD,150916:CD,150925
150890 :: NORM :: compound :: Z :: return #(1)::DD,150618
150893 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v114 = new java.lang.StringBuilder::
150898 :: CALL :: call :: Ljava/lang/String :: v119 = v112.toString(#(100))::JM,150898
150903 :: CALL :: call :: Ljava/lang/StringBuilder :: v121 = v114.append(v119)::
150908 :: CALL :: call :: Ljava/lang/String :: v123 = v121.toString()::
150916 :: CALL :: call :: Z :: v126 = p0 $this .mapDNAChains(p1 $seqRes , p2 $atomRes , v112, v5, v7)::JM,150925:CL,162976
150925 :: NORM :: compound :: Z :: return v126::DD,150618
150930 :: EXPR :: assign :: null :: PHI v102 = v53, v53, v88::CF,150843:JM,150898:JM,150865:JM,150853:JM,150861
150928 :: EXPR :: assign :: null :: PHI v81 = v51, v67::JM,150930:JM,150754:JM,150806:JM,150811:JM,150745:JM,150799:JM,150749:DD,150929
150929 :: EXPR :: assign :: null :: PHI v101 = v51, v81, v81::CF,150930:JM,150898:JM,150865:JM,150853:JM,150861
151014 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,151015:CD,151023:CD,151027:CD,151030:CD,151413:CD,151423:CD,151424:JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151053:JM,151059:JM,151060:JM,151098:JM,151066:JM,151065:JM,151071:JM,151036
151015 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,134634
151023 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151023:JM,151053:JM,151059:JM,151060:JM,151413:JM,151098:JM,151066:JM,151065:JM,151071:JM,151036
151027 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompoundSet :: v12 = getAminoAcidCompoundSet()::JM,151030:JM,151060:JM,151066:JM,151065:JM,151071
151030 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompound :: v15 = v12.getCompoundForString(#(-))::JM,151030:JM,151060:JM,151066:JM,151065:JM,151071
151036 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v172)::JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151023:JM,151053:JM,151059:JM,151060:JM,151413:JM,151098:JM,151066:JM,151065:JM,151071:JM,151036
151042 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v172)::JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151023:JM,151053:JM,151059:JM,151060:JM,151413:JM,151098:JM,151066:JM,151065:JM,151071:JM,151036
151048 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v172)::JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151023:JM,151053:JM,151059:JM,151060:JM,151413:JM,151098:JM,151066:JM,151065:JM,151071:JM,151036
151054 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v172)::JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151023:JM,151053:JM,151059:JM,151060:JM,151413:JM,151098:JM,151066:JM,151065:JM,151071:JM,151036
151053 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151023:JM,151053:JM,151059:JM,151060:JM,151413:JM,151098:JM,151066:JM,151065:JM,151071:JM,151036
151059 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,151042:JM,151059:JM,151073:JM,151078:JM,151060:JM,151066:JM,151065:JM,151071:JM,151053
151060 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,151042:JM,151059:JM,151073:JM,151078:JM,151060:JM,151066:JM,151065:JM,151071:JM,151053
151066 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,151059:JM,151073:JM,151078:JM,151060:JM,151066:JM,151065:JM,151071:JM,151053
151065 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 552::CF,151422:CD,151066:CD,151071:CD,151412:CD,151413:CD,151423:CD,151424:JM,151059:JM,151073:JM,151078:JM,151060:JM,151065:JM,151053
151071 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,151073:CD,151078:CD,151412:CD,151413:CD,151422:CD,151423:CD,151424:JM,151042:JM,151059:JM,151060:JM,151066:JM,151065:JM,151071:JM,151053
151073 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,151042:JM,151059:JM,151073:JM,151078:JM,151060:JM,151066:JM,151065:JM,151071:JM,151053
151078 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 552::CF,151422:CD,151079:CD,151083:CD,151088:CD,151089:CD,151093:CD,151098:CD,151099:CD,151103:CD,151108:CD,151109:CD,151113:CD,151118:CD,151119:CD,151412:CD,151413:CD,151423:CD,151424
151079 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
151083 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,151088
151088 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,151098
151089 :: CALL :: call :: I :: v40 = v38.intValue()::JM,151098
151093 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151023:JM,151053:JM,151059:JM,151060:JM,151413:JM,151098:JM,151066:JM,151065:JM,151071:JM,151036
151098 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,151119
151099 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
151103 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,151108
151108 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,151118
151109 :: CALL :: call :: I :: v50 = v48.intValue()::JM,151118
151113 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151023:JM,151053:JM,151059:JM,151060:JM,151413:JM,151098:JM,151066:JM,151065:JM,151071:JM,151036
151118 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,151120:JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151023:JM,151053:JM,151059:JM,151060:JM,151413:JM,151098:JM,151066:JM,151065:JM,151071:JM,151036:CF,151119
151119 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,151120:CD,151123:CD,151128:CD,151133:CD,151138:CD,151143:CD,151148:CD,151153:CD,151158:CD,151163:CD,151168:CD,151173:CD,151178:CD,151183:CD,151412:CD,151413:CD,151422:CD,151423:CD,151424
151123 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
151120 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,151123:CD,151128:CD,151133:CD,151138:CD,151143:CD,151148:CD,151153:CD,151158:CD,151163:CD,151168:CD,151173:CD,151178:CD,151183:CD,151192:CD,151196:CD,151200:CD,151412:CD,151413:CD,151422:CD,151423:CD,151424
151128 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v172)::
151133 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
151138 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
151143 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
151148 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
151153 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
151158 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
151163 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
151168 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
151173 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
151178 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
151183 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
151192 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,151200:JM,151254:CL,104483
151196 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,151201:JM,151254:CL,104483
151200 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,151201:CD,151240
151201 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 340::CD,151240:CD,151241:CD,151245:CD,151249:CD,151254:CD,151392:CD,151396:CD,151401:CD,151402:CD,151406:CD,151412:CD,151413:CD,151422:CD,151423:CD,151424
151240 :: NORM :: compound :: Z :: return #(1)::DD,151015
151241 :: CALL :: call :: Ljava/lang/String :: v92 = v90.trim()::JM,151254
151245 :: CALL :: call :: Ljava/lang/String :: v94 = v88.trim()::JM,151254
151249 :: CALL :: call :: Z :: v96 = v92.equals(v94)::JM,151254
151254 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 527::CF,151255:CD,151260:CD,151265:CD,151270:CD,151275:CD,151280:CD,151285:CD,151290:CD,151295:CD,151300:CD,151305:CD,151310:CD,151315:CD,151319:CD,151323:CD,151325:CD,151330
151255 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
151260 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v43)::
151265 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(' (position ))::
151270 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v23)::
151275 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v106.append(#() does not align with '))::
151280 :: CALL :: call :: Ljava/lang/StringBuilder :: v111 = v109.append(v53)::
151285 :: CALL :: call :: Ljava/lang/StringBuilder :: v113 = v111.append(#(' (position ))::
151290 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v113.append(v26)::
151295 :: CALL :: call :: Ljava/lang/StringBuilder :: v118 = v115.append(#(), should be: ))::
151300 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v118.append(v17)::
151305 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#( : ))::
151310 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v20)::
151315 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
151319 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v129 = v43.getType()::JM,151330:JM,151325:CL,54408:CL,54424:CL,54416
151323 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v130 = org.biojava.nbio.structure.HetatomImpl.type::JM,151330:JM,151325
151325 :: CALL :: call :: Z :: v132 = v129.equals(v130)::JM,151330:JM,151325
151330 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 493::CD,151331:CD,151335:CD,151337:CD,151342:CD,151370:CD,151371:CD,151379:CD,151384
151331 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v134 = v53.getType()::JM,151337:JM,151342:CL,54408:CL,54424:CL,54416
151335 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v135 = org.biojava.nbio.structure.HetatomImpl.type::JM,151337:JM,151342
151337 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,151337:JM,151342
151342 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 493::CD,151345:CD,151346:CD,151354:CD,151359:CD,151370:CD,151371:CD,151379:CD,151384
151346 :: CALL :: call :: Ljava/lang/String :: v141 = valueOf(v127)::
151345 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
151354 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v139.append(#(. They seem to be het...))::
151359 :: CALL :: call :: Ljava/lang/String :: v147 = v145.toString()::
151370 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v150 = new java.lang.StringBuilder::
151371 :: CALL :: call :: Ljava/lang/String :: v152 = valueOf(v127)::
151379 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v150.append(#(. This could be a pro...))::
151384 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
151392 :: CALL :: call :: Ljava/lang/Integer :: v161 = valueOf(v23)::
151396 :: CALL :: call :: Ljava/lang/Object :: v163 = p4 $seqresIndexPosition .get(v161)::JM,151401
151402 :: CALL :: call :: I :: v166 = v164.intValue()::
151401 :: EXPR :: assign :: Ljava/lang/Object :: v164 = CHECKCAST v163::
151406 :: CALL :: call :: Ljava/lang/Object :: v168 = p1 $seqResGroups .set(v166, v53)::JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151023:JM,151053:JM,151059:JM,151060:JM,151413:JM,151098:JM,151066:JM,151065:JM,151071:JM,151036
151412 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v172 + #(1)::DD,151424:CF,151423
151413 :: PRED :: IF :: Z :: if (v172 <= v9) goto 32::CD,151036:CD,151042:CD,151048:CD,151053:CD,151054:CD,151059:CD,151060:CD,151065:CD,151421:CD,151422:JM,151073:JM,151078:JM,151118:JM,151023:JM,151413:JM,151098:JM,151066:JM,151071
151422 :: EXPR :: assign :: null :: PHI v169 = v171, v171, v171, v171, #(0)::DD,151423:CF,151412
151423 :: EXPR :: assign :: null :: PHI v171 = #(1), v169::CF,151424:DD,151421:DD,151422
151421 :: NORM :: compound :: Z :: return v171::DD,151015
151424 :: EXPR :: assign :: null :: PHI v172 = #(1), v170::JM,151042:JM,151073:JM,151078:JM,151048:JM,151054:JM,151118:JM,151053:JM,151059:JM,151060:JM,151066:JM,151065:JM,151071:JM,151036:JM,151098:DD,151412:DD,151413
151594 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(java.lang.Object,java.lang.Object)::CD,151602
151602 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,163523
151612 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(java.lang.Object,java.lang.Object)::CD,151620
151620 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,163555
151630 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::CE,151631:CD,151635:JM,151653:JM,151643
151631 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::JM,135002:JM,135056:JM,145491
151635 :: PRED :: IF :: Z :: if (p1 $position  < #(0)) goto 18::CD,151639:CD,151643:CD,151644
151639 :: CALL :: call :: I :: v7 = v5.size()::JM,151643
151636 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::JM,151643
151643 :: PRED :: IF :: Z :: if (p1 $position  < v7) goto 20::CD,151644:CD,151648:CD,151653:CD,151654
151644 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,151631
151645 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .atoms::JM,151653
151648 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $position )::JM,151653:JM,151635
151654 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v11::DD,151631
151653 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,151654
151662 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.addSelfToAtoms()::CD,151669:CD,151673:CD,151686:CD,151714:CD,151718:CD,151719:CD,151735:CD,151736
151669 :: CALL :: call :: Ljava/util/List :: v5 = v3.getBonds()::JM,151735:JM,151673:CL,135567
151674 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,151735
151673 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 36::CF,151735:CF,151674:CD,151682
151682 :: CALL :: call :: V :: v10.setBonds(v7)::CL,163587
151686 :: CALL :: call :: Ljava/util/Iterator :: v15 = v12.iterator()::JM,151718
151691 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,151718
151699 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v23 = v20.getOther(v21)::JM,151712:JM,151707:CL,163598
151707 :: CALL :: call :: Z :: v26 = v23.equals(v24)::JM,151712:JM,151707
151704 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v24 = p0 $this .atomB::JM,151712:JM,151707
151714 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,151718
151712 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 84::CD,151714:CD,151718:CD,151736
151718 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 48::CF,151736:CD,151691:CD,151699:CD,151707:CD,151712:JM,151718
151719 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 116::CD,151723:CD,151730
151723 :: CALL :: call :: V :: v29.addBond(p0 $this )::CL,163637
151730 :: CALL :: call :: V :: v31.addBond(p0 $this )::CL,163637
151735 :: EXPR :: assign :: null :: PHI v12 = v5, v7::JM,151718
151736 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,151719
151764 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::CE,151765:CD,151768:CD,151772:CD,151777:CD,151781
151765 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::JM,135715:JM,135723
151768 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,152185
151772 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
151777 :: CALL :: call :: Z :: v8 = v5.exists()::JM,151781
151781 :: NORM :: compound :: Z :: return v8::DD,151765
151788 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.checkDoFirstInstall()::CD,151795
151795 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 8::CF,151797:CD,151798:CD,151805:CD,151811:CD,151815
151792 :: EXPR :: reference :: Z :: v3 = p0 $this .downloadAll::DD,151795
151798 :: EXPR :: reference :: Ljava/io/File :: v6 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
151797 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
151805 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
151811 :: CALL :: call :: Z :: v13 = v9.exists()::JM,151815
151815 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 46::CD,151816:CD,151825:CD,151830:CD,151831
151816 :: CALL :: call :: V :: p0 $this .downloadAllDefinitions()::CL,163671
151825 :: CALL :: call :: [Ljava/lang/String :: v17 = v5.list(v14)::JM,151830
151830 :: EXPR :: assign :: I :: v18 = v17.length::DD,151831
151831 :: PRED :: IF :: Z :: if (v18 >= #(500)) goto 99::CD,151832
151832 :: CALL :: call :: V :: p0 $this .split()::CL,163944
151878 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::JM,135855
151877 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::CE,151878:CD,151881:CD,151885:CD,151890:CD,151895:CD,151899:CD,151916:CD,151917:CD,151922:CD,151927:CD,151932:CD,151938:CD,151943:CD,151948:CD,151956:CD,151961:CD,151965:CD,151980:CD,151981:CD,151999:CD,152003:CD,152004:CD,152007:CD,152013:CD,152017:CD,152030:CD,152064:CD,152067:CD,152072:CD,152076:CD,152081:CD,152086:CD,152091:CD,152096:CD,152100:CD,152105:CD,152113:CD,152117:CD,152122:CD,152127
151881 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,152185
151885 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
151890 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $recordName )::
151895 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
151899 :: CALL :: call :: Ljava/io/File :: v14 = createTempFile(v11, #(cif))::
151916 :: NORM :: compound :: Z :: return #(0)::DD,151878
151917 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
151922 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(p1 $recordName )::
151927 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(.cif))::
151932 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
151938 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
151943 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v32)::
151948 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
151956 :: NORM :: declaration :: Ljava/net/URL :: v43 = new java.net.URL::DD,152127
151961 :: CALL :: call :: Ljava/net/HttpURLConnection :: v46 = openHttpURLConnection(v43)::CL,164172
151965 :: NORM :: declaration :: Ljava/io/PrintWriter :: v47 = new java.io.PrintWriter::DD,152017
151980 :: NORM :: declaration :: Ljava/io/BufferedReader :: v53 = new java.io.BufferedReader::JM,152003:DD,152007:CF,151981
151981 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v54 = new java.io.InputStreamReader::
151995 :: CALL :: call :: V :: v47.println(v60)::
151999 :: CALL :: call :: Ljava/lang/String :: v60 = v53.readLine()::JM,152003
152003 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 177::CD,151995:CD,151999
152007 :: PRED :: IF :: Z :: if (v53 == #(null)) goto 226::CD,152008:CF,152017
152004 :: CALL :: call :: V :: v47.flush()::
152008 :: CALL :: call :: V :: v53.close()::
152013 :: CALL :: call :: V :: v53.close()::
152018 :: CALL :: call :: V :: v47.close()::
152017 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 310::CD,152018
152030 :: CALL :: call :: V :: v47.close()::
152067 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
152064 :: NORM :: compound :: Z :: return #(1)::DD,151878
152072 :: CALL :: call :: Ljava/lang/String :: v94 = v88.toString()::
152076 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
152081 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( OR store locally to ))::
152086 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v4)::
152091 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( Error =))::
152096 :: CALL :: call :: Ljava/lang/String :: v106 = v87.getMessage()::
152100 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v104.append(v106)::
152105 :: CALL :: call :: Ljava/lang/String :: v110 = v108.toString()::
152113 :: CALL :: call :: Z :: v113 = v14.delete()::
152117 :: NORM :: compound :: Z :: return #(0)::DD,151878
152122 :: EXPR :: assign :: Ljava/lang/Exception :: v87 = catch <exc>::
152127 :: EXPR :: assign :: null :: PHI v88 = #(null), v43, v43, v43, v43, v43, v43::
152186 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::
152185 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::CE,152186:CD,152189:CD,152191:CD,152196:CD,152211:CD,152213:CD,152214:CD,152221:CD,152225:CD,152258:CD,152259:CD,152260:CD,152268:CD,152273:CD,152282:CD,152286
152191 :: CALL :: call :: Z :: v5 = v3.contains(p1 $recordName )::JM,152196
152189 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::JM,152196
152196 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 30::CF,152197:CD,152202:CD,152207
152197 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
152202 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $recordName )::JM,152196
152207 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
152211 :: CALL :: call :: V :: initPath()::CL,42535
152214 :: EXPR :: reference :: Ljava/io/File :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
152213 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::
152221 :: CALL :: call :: Z :: v21 = v16.exists()::JM,152225
152225 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 99::CF,152258:CD,152228:CD,152233:CD,152238:CD,152246
152228 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
152233 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v16)::
152238 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
152246 :: CALL :: call :: Z :: v32 = v16.mkdir()::
152258 :: NORM :: declaration :: Ljava/io/File :: v36 = new java.io.File::JM,152286:CF,152259
152259 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
152260 :: CALL :: call :: Ljava/lang/String :: v39 = valueOf(v14)::
152268 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v37.append(#(.cif.gz))::
152273 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::
152282 :: CALL :: call :: Ljava/lang/String :: v48 = v36.toString()::JM,152286
152286 :: NORM :: compound :: Ljava/lang/String :: return v48::DD,152186
152325 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: v4 = new org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary::DD,152329
152329 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: p0 $this .dictionary = v4::
152346 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::JM,135789:JM,152509
152345 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::CE,152346:CD,152353:CD,152358:CD,152359
152353 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::JM,152358
152358 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,152359
152359 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v7::DD,152346
152379 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::CE,152380:CD,152384:CD,152388:CD,152396:CD,152401:CD,152406:CD,152411:CD,152415:CD,152422:CD,152427:CD,152432:CD,152437:CD,152445:CD,152538:CD,152541:CD,152545
152380 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::JM,135849
152384 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::
152388 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::
152396 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
152401 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v7)::
152406 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(.cif.gz))::
152411 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
152415 :: CALL :: call :: Ljava/io/InputStream :: v22 = v10.getResourceAsStream(v20)::JM,152445
152422 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
152427 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v24.append(v7)::
152432 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(#(.cif.gz))::
152437 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
152445 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 112::CD,152453:CD,152456:CD,152464:JM,84984:JM,164241:JM,152325:JM,164234:JM,164248:CD,152473:CD,152477:CD,152478:CD,152492:CD,152500:CD,152509
152453 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v55 = getEmptyChemComp()::JM,152464:CL,164299
152456 :: CALL :: call :: V :: v55.setId(v7)::CL,164338
152464 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v55::DD,152380
152473 :: CALL :: call :: V :: v34.addMMcifConsumer(v36)::CL,85033
152478 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v40 = new java.io.InputStreamReader::
152477 :: NORM :: declaration :: Ljava/io/BufferedReader :: v39 = new java.io.BufferedReader::CF,152478
152492 :: CALL :: call :: V :: v34.parse(v39)::CL,85050
152500 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v49 = v47.getChemComp(v7)::JM,152509:CL,152345
152509 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v49::DD,152380
152538 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v73 = getEmptyChemComp()::JM,152545:CL,164299
152541 :: CALL :: call :: V :: v73.setId(v7)::CL,164338
152545 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v73::DD,152380
152599 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.setCacheLocation(java.lang.String)::CD,152604:CD,152606:CD,152611:CD,152636
152606 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,152611:JM,152636
152604 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,152611:JM,152636
152611 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,152636:CF,152612:CD,152613:CD,152621:CD,152623:CD,152628
152612 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,152636
152613 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
152623 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::JM,152636
152621 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,152636
152628 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::JM,152636
152632 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheLocation = v17::
152636 :: EXPR :: assign :: null :: PHI v17 = p1 $cacheLocation , v16::DD,152632
152644 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::CE,152645:CD,152657:CD,152662
152645 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::JM,136093:JM,137268:JM,153069
152657 :: CALL :: call :: Ljava/lang/String :: v9 = format(p1 $fileNameTemplate , v5)::JM,152662
152662 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,152645
152721 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setCATH(java.lang.String)::CD,152726:CD,152735:CD,152739:CD,152751:CD,152755:CD,152767:CD,152771:CD,152783
152726 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $cathCode .split(#([.]))::
152731 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(0)]::
152735 :: CALL :: call :: I :: v10 = parseInt(v8)::
152739 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
152747 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v6[#(1)]::
152751 :: CALL :: call :: I :: v17 = parseInt(v15)::
152755 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
152763 :: EXPR :: reference :: Ljava/lang/Object :: v22 = v6[#(2)]::
152767 :: CALL :: call :: I :: v24 = parseInt(v22)::
152771 :: CALL :: call :: Ljava/lang/Integer :: v26 = valueOf(v24)::
152779 :: EXPR :: reference :: Ljava/lang/Object :: v29 = v6[#(3)]::
152783 :: CALL :: call :: I :: v31 = parseInt(v29)::
152952 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::CE,152953:CD,152956:CD,152960:CD,152966:CD,152977:CD,152983:CD,152988:CD,153013:CD,153018:CD,153022:CD,153023
152953 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::
152956 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,153022
152957 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .domainName::
152960 :: CALL :: call :: Ljava/lang/String :: v8 = v4.substring(#(0), #(4))::
152966 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
152974 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .domainName::JM,152988
152977 :: CALL :: call :: Ljava/lang/String :: v15 = v12.substring(#(4), #(5))::JM,152988
152983 :: CALL :: call :: Z :: v18 = v15.equals(#(0))::JM,152988
152988 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 65::CF,152989:CD,152997:CD,153003:CD,153008:CD,153023
152989 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::JM,153023
152994 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainName::JM,153023
152997 :: CALL :: call :: Ljava/lang/String :: v25 = v23.substring(#(4), #(5))::JM,153023
153003 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::JM,153023
153008 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::JM,153023
153013 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v3.append(v30)::JM,153022
153018 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,153022
153022 :: NORM :: compound :: Ljava/lang/String :: return v34::DD,152953
153023 :: EXPR :: assign :: null :: PHI v30 = v29, #()::JM,153022
153039 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainListFileName()::CE,153040:CD,153043:CD,153047:CD,153055:CD,153060:CD,153065:CD,153069
153043 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,153069
153040 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.getDomainListFileName()::
153047 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
153055 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-list-v%s.txt))::JM,153069:CL,152644
153060 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::JM,153069
153065 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,153069
153069 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,153040
153074 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList(java.io.BufferedReader)::CD,153152:CD,153156:JM,153085
153080 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,153156:JM,153085
153087 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v12 = p0 $this .parseCathListFileLine(v5)::CL,164393
153085 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 18::CD,153087:CD,153092:CD,153096:CD,153105:CD,153110:CD,153134:CD,153146:CD,153158
153092 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getPdbIdAndChain()::CL,152952
153096 :: CALL :: call :: Ljava/lang/String :: v17 = v14.substring(#(0), #(4))::
153105 :: CALL :: call :: Z :: v20 = v18.containsKey(v17)::JM,153110
153110 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 66::CF,153121:CD,153114:CD,153119:CD,153128:CD,153158
153114 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v17)::JM,153119
153119 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,153158
153121 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,153158
153128 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.put(v17, v25)::
153134 :: CALL :: call :: Z :: v32 = v30.add(v12)::
153146 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.put(v35, v12)::
153152 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,153156:JM,153085
153158 :: EXPR :: assign :: null :: PHI v30 = v24, v25::
153156 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,153080:CD,153085:CD,153152:JM,153156
153244 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::CE,153245:CD,153264:CD,153268:CD,153272:CD,153296:CD,153315
153245 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::JM,138133
153264 :: CALL :: call :: Ljava/io/File :: v11 = p0 $this .getDomainFile()::CL,164634
153268 :: CALL :: call :: Z :: v13 = v11.exists()::JM,153272
153272 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 51::CD,153273:CD,153277:CD,153278:CD,153315
153273 :: CALL :: call :: J :: v16 = v11.length()::JM,153277
153278 :: PRED :: IF :: Z :: if (v26 <= #(0)) goto 51::CD,153315
153277 :: EXPR :: assign :: Z :: v26 = v16 == #(0 l)::DD,153278
153296 :: NORM :: compound :: Z :: return v28::DD,153245
153315 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,153296
153331 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.downloadDomains()::CD,153352:CD,153356:CD,153364:CD,153369:CD,153373:CD,153378:CD,153386:CD,153398:CD,153405:CD,153413:CD,153418:CD,153423:CD,153427:CD,153432
153352 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
153356 :: CALL :: call :: Ljava/lang/String :: v14 = valueOf(v12)::
153364 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v11.append(#(/ecod/distributions/))::
153369 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getDomainFilename()::CL,164656
153373 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
153378 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
153386 :: CALL :: call :: Ljava/io/File :: v27 = p0 $this .getDomainFile()::CL,164634
153398 :: CALL :: call :: V :: downloadFile(v10, v27)::CL,130541
153405 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
153410 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .url::
153413 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v34.append(v37)::
153418 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(#(/ecod/distributions/))::
153423 :: CALL :: call :: Ljava/lang/String :: v43 = p0 $this .getDomainFilename()::CL,164656
153427 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
153432 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
153512 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.parseDomains()::CD,153533:JM,167745:JM,169541:CD,153541
153533 :: CALL :: call :: Ljava/io/File :: v12 = p0 $this .getDomainFile()::CL,164634
153541 :: CALL :: call :: Ljava/util/List :: v15 = v10.getDomains()::JM,153545:CL,164697
153545 :: EXPR :: modify :: Ljava/util/List :: p0 $this .allDomains = v15::
153603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::CE,153604:CD,153608:CD,153621:CD,153625:CD,153627:JM,153618:JM,153617
153604 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::JM,138639
153608 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $atomGroups .iterator()::JM,153618:JM,153617:JM,153625
153613 :: CALL :: call :: Ljava/lang/Object :: v10 = v6.next()::JM,153617:JM,153625
153618 :: PRED :: IF :: Z :: if (p2 $g  != v11) goto 31::CD,153619:CD,153620:CD,153621:CD,153625:CD,153627
153619 :: NORM :: compound :: I :: return v14::DD,153604
153617 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,153618
153620 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v14 + #(1)::DD,153627
153621 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,153617:JM,153625
153626 :: NORM :: compound :: I :: return #(-1)::DD,153604
153627 :: EXPR :: assign :: null :: PHI v14 = #(0), v13::JM,153617:JM,153625:DD,153619:DD,153620
153625 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 15::CD,153613:CD,153617:CD,153618:CD,153626:JM,153625
153651 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::CE,153652:CD,153659:CD,153679:CD,153683:JM,153677
153652 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::JM,138978:JM,138915:JM,139140:JM,139141:JM,139050:JM,139210:JM,139051:JM,139211:JM,138920:JM,139145:JM,139150:JM,138959:JM,139055:JM,139215:JM,138963:JM,139060:JM,139220:JM,138968:JM,138969:JM,138910:JM,138911:JM,138973:JM,143851
153659 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,153683:JM,153668
153656 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entities::JM,153683:JM,153668
153664 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,153683:JM,153668
153668 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,153669:JM,153677:DD,153678
153669 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,153669:JM,153677
153673 :: CALL :: call :: I :: v16 = parseInt(v14)::JM,153677
153678 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return v12::CF,153652
153679 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,153683:JM,153668
153677 :: PRED :: IF :: Z :: if (v16 != p1 $entity_id ) goto 41::CD,153678:CD,153679:CD,153683:JM,153668
153683 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,153664:CD,153668:CD,153669:CD,153673:CD,153677:CD,153696:JM,153683
153696 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return #(null)::CF,153652
153711 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::CE,153712:CD,153719:CD,153735:CD,153739:JM,153733
153712 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::JM,138909:JM,139049:JM,139139:JM,139201:JM,139774
153719 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,153728:JM,153739
153716 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,153728:JM,153739
153724 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,153728:JM,153739
153728 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,153734
153729 :: CALL :: call :: I :: v14 = v12.getMolId()::JM,153733:CL,118876
153734 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v12::DD,153712
153735 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,153728:JM,153739
153733 :: PRED :: IF :: Z :: if (v14 != p1 $molId ) goto 34::CD,153734:CD,153735:CD,153739:JM,153728
153739 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,153724:CD,153728:CD,153729:CD,153733:CD,153740:JM,153739
153740 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return #(null)::DD,153712
153751 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESG(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen,int)::JM,96774:JM,96767:CD,153761:CD,153769:CD,153777:CD,153785:CD,153793:CD,153801:CD,153809:CD,153817
153761 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,118973
153769 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,133530
153777 :: CALL :: call :: V :: v5.setCell(v12)::CL,133563
153785 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,133486
153793 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,133464
153801 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,133475
153809 :: CALL :: call :: V :: v5.setExpressionSystemTaxId(v24)::CL,133629
153817 :: CALL :: call :: V :: v5.setExpressionSystem(v27)::CL,133618
153841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addCompound(org.biojava.nbio.structure.Compound)::CD,153849
153846 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::
153849 :: CALL :: call :: Z :: v6 = v4.add(p1 $compound )::
153867 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESN(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat,int)::JM,96774:JM,96767:CD,153877:CD,153885:CD,153893:CD,153901:CD,153909:CD,153917
153877 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,118973
153885 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,133530
153893 :: CALL :: call :: V :: v5.setCell(v12)::CL,133563
153901 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,133486
153909 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,133464
153917 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,133475
153937 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESS(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn,int)::JM,96774:JM,96767:CD,153947:CD,153955:CD,153963:CD,153971
153947 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,118973
153955 :: CALL :: call :: V :: v5.setOrganismCommon(v9)::CL,133486
153963 :: CALL :: call :: V :: v5.setOrganismScientific(v12)::CL,133464
153971 :: CALL :: call :: V :: v5.setOrganismTaxId(v15)::CL,133475
153987 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::CE,153988:CD,153992:CD,153996:CD,153998:CD,154003
153988 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::JM,139506
153992 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v5 = p1 $atomG .getType()::JM,154003:JM,153998:CL,54408:CL,54424:CL,54416
153998 :: CALL :: call :: Z :: v8 = v5.equals(v6)::JM,154003:JM,153998
153996 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v6 = org.biojava.nbio.structure.GroupType.AMINOACID::JM,154003:JM,153998
154003 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 36::CD,154005:CD,154006:CD,154014:CD,154018:CD,154019:CD,154023:CD,154025:CD,154030
154006 :: CALL :: call :: J :: v32 = v29.getId()::JM,154005:CL,164715
154005 :: NORM :: declaration :: Ljava/lang/Long :: v30 = new java.lang.Long::JM,154005:JM,154018
154014 :: CALL :: call :: I :: v35 = v30.intValue()::JM,154018
154018 :: NORM :: compound :: I :: return v35::DD,153988
154019 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v11 = p1 $atomG .getType()::JM,154025:JM,154030:CL,54408:CL,54424:CL,54416
154023 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v12 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::JM,154025:JM,154030
154025 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,154025:JM,154030
154030 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 71::CD,154032:CD,154033:CD,154041:CD,154045:CD,154047:CD,154048:CD,154056:CD,154060
154032 :: NORM :: declaration :: Ljava/lang/Long :: v23 = new java.lang.Long::JM,154032:JM,154045
154033 :: CALL :: call :: J :: v25 = v22.getId()::JM,154032:CL,164715
154041 :: CALL :: call :: I :: v28 = v23.intValue()::JM,154045
154047 :: NORM :: declaration :: Ljava/lang/Long :: v16 = new java.lang.Long::JM,154047:JM,154060
154045 :: NORM :: compound :: I :: return v28::DD,153988
154048 :: CALL :: call :: J :: v18 = v15.getId()::JM,154047:CL,164715
154056 :: CALL :: call :: I :: v21 = v16.intValue()::JM,154060
154060 :: NORM :: compound :: I :: return v21::DD,153988
154079 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formBondsFromStructConn(java.util.List)::CD,154084:CD,154088:CD,154497:CD,154501:CD,154505:JM,154097
154084 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
154088 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $structConn .iterator()::JM,154097:JM,154501
154093 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,154097:JM,154501
154097 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,154192:JM,154197:JM,154188:JM,154198:JM,154516:JM,154211:JM,154202:JM,154206:JM,154212:JM,154517:JM,154225:JM,154216:JM,154220:JM,154226:JM,154230:JM,154235:JM,154482:JM,154486:JM,154491
154104 :: CALL :: call :: Z :: v19 = v15.contains(v17)::JM,154109
154109 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 55::CD,154188:CD,154192:CD,154197:CD,154202:CD,154206:CD,154211:CD,154216:CD,154220:CD,154225:CD,154516:CD,154517
154188 :: CALL :: call :: Ljava/lang/String :: v62 = v14.getPdbx_ptnr1_label_alt_id()::JM,154192:JM,154197:JM,154188
154192 :: CALL :: call :: Z :: v64 = v62.equals(#(?))::JM,154192:JM,154197
154198 :: CALL :: call :: Ljava/lang/String :: v66 = v14.getPdbx_ptnr1_label_alt_id()::JM,154198:JM,154516
154197 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 218::CF,154516:CD,154198
154202 :: CALL :: call :: Ljava/lang/String :: v69 = v14.getPdbx_ptnr2_label_alt_id()::JM,154211:JM,154202:JM,154206
154206 :: CALL :: call :: Z :: v71 = v69.equals(#(?))::JM,154211:JM,154206
154211 :: PRED :: IF :: Z :: if (v71 != #(0)) goto 239::CF,154517:CD,154212
154212 :: CALL :: call :: Ljava/lang/String :: v73 = v14.getPdbx_ptnr2_label_alt_id()::JM,154212:JM,154517
154216 :: CALL :: call :: Ljava/lang/String :: v76 = v14.getPtnr1_symmetry()::JM,154225:JM,154216:JM,154220
154220 :: CALL :: call :: Z :: v78 = v76.equals(#(1_555))::JM,154225:JM,154220
154226 :: CALL :: call :: Ljava/lang/String :: v80 = v14.getPtnr2_symmetry()::JM,154226:JM,154230:JM,154235
154225 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 265::CD,154226:CD,154230:CD,154235
154230 :: CALL :: call :: Z :: v82 = v80.equals(#(1_555))::JM,154230:JM,154235
154235 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 316::CD,154269:CD,154273:CD,154294:CD,154298:CD,154319:CD,154363:CD,154407
154269 :: CALL :: call :: Z :: v84 = v67.isEmpty()::JM,154273:JM,154269
154275 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
154273 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 327::CF,154275:CD,154280:CD,154285:CD,154290
154280 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v85.append(v67)::
154285 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v89.append(#()))::
154290 :: CALL :: call :: Ljava/lang/String :: v94 = v92.toString()::
154294 :: CALL :: call :: Z :: v97 = v74.isEmpty()::JM,154294:JM,154298
154298 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 366::CF,154300:CD,154305:CD,154310:CD,154315
154300 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
154305 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v74)::
154310 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v101.append(#()))::
154315 :: CALL :: call :: Ljava/lang/String :: v105 = v103.toString()::
154319 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v109 = p0 $this .getAtomFromRecord(v58, v67, v54, v31, v50, v41)::JM,154407:CL,119083
154363 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = p0 $this .getAtomFromRecord(v60, v74, v56, v32, v52, v48)::JM,154441:CL,119083
154407 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 598::CD,154441
154441 :: PRED :: IF :: Z :: if (v111 != #(null)) goto 650::CF,154475:JM,135122:JM,135125:JM,135128:JM,135119:CD,154482:CD,154486:CD,154491
154475 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v112 = new org.biojava.nbio.structure.BondImpl::
154482 :: CALL :: call :: Ljava/lang/String :: v116 = v14.getConn_type_id()::JM,154482:JM,154486:JM,154491
154486 :: CALL :: call :: Z :: v119 = v116.equals(#(disulf))::JM,154486:JM,154491
154491 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 688::CD,154492:JM,154097:JM,154501
154492 :: CALL :: call :: Z :: v146 = v5.add(v112)::
154497 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,154097:JM,154501
154501 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,154093:CD,154097:CD,154104:CD,154109:CD,154497:JM,154501
154505 :: CALL :: call :: V :: v147.setSSBonds(v5)::CL,86281
154516 :: EXPR :: assign :: null :: PHI v67 = #(), v66::JM,154273:JM,154269:JM,154211:JM,154202:JM,154206
154517 :: EXPR :: assign :: null :: PHI v74 = #(), v73::JM,154225:JM,154216:JM,154220:JM,154294:JM,154298
154721 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
154724 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,154728
154731 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
154728 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v5::
154734 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
154747 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setSiteID(java.lang.String)::JM,154752
154752 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
154758 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setGroups(java.util.List)::JM,154763
154763 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $residues ::
154769 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.init()::CD,154780
154780 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,154785
154785 :: EXPR :: modify :: Ljava/util/List :: p0 $this .modelTransformations = v5::
154794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::CE,154795:CD,154799:CD,154806:CD,154910:CD,154914:CD,154915:JM,154820:JM,154825
154795 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::
154799 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,154915
154803 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .psags::JM,154914:JM,154815
154806 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,154914:JM,154815
154811 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,154914:JM,154815
154815 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,154816:JM,154820:JM,154825:JM,154848:JM,154853:JM,154844:JM,154909
154816 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getAssembly_id()::JM,154816:JM,154820:JM,154825
154820 :: CALL :: call :: Z :: v18 = v16.equals(p1 $assemblyId )::JM,154820:JM,154825
154825 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 189::CD,154833:CD,154840:CD,154844:CD,154848:CD,154853:CD,154857:CD,154905:CD,154909:JM,154914:JM,154815
154833 :: CALL :: call :: V :: v19.parseOperatorExpressionString(v21)::CL,164747
154840 :: CALL :: call :: Ljava/util/List :: v25 = v23.getUnaryOperators()::JM,154904:CL,164795
154844 :: CALL :: call :: Ljava/lang/String :: v27 = v14.getAsym_id_list()::JM,154848:JM,154853:JM,154844:JM,154909
154848 :: CALL :: call :: [Ljava/lang/String :: v30 = v27.split(#(,))::JM,154848:JM,154853:JM,154909
154853 :: CALL :: call :: Ljava/util/List :: v32 = asList(v30)::JM,154853:JM,154909
154857 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,154909
154862 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,154909
154867 :: CALL :: call :: Ljava/util/Iterator :: v41 = v25.iterator()::JM,154904
154872 :: CALL :: call :: Ljava/lang/Object :: v45 = v41.next()::JM,154904
154877 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v48 = p0 $this .getModelTransformationMatrix(v46)::CL,164804
154882 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v49 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
154887 :: CALL :: call :: V :: v49.setChainId(v39)::CL,133268
154891 :: CALL :: call :: V :: v49.setId(v46)::CL,133257
154895 :: CALL :: call :: Z :: v54 = v4.add(v49)::
154900 :: CALL :: call :: Z :: v43 = v41.hasNext()::JM,154904
154904 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 117::CD,154872:CD,154877:CD,154882:JM,164897:JM,164886:JM,164904:CD,154887:CD,154891:CD,154895:CD,154900:JM,154904:JM,154909
154905 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,154909
154910 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,154914:JM,154815
154909 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 93::CD,154862:CD,154867:CD,154900:CD,154904:CD,154905:JM,154909:JM,154914:JM,154815
154914 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,154811:CD,154815:CD,154816:CD,154820:CD,154825:CD,154910:JM,154914:CF,154915
154915 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,154795
154960 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::CE,154961:CD,154965:CD,154972:CD,154979:CD,155096:CD,155100:CD,155101:JM,154993:JM,154998
154961 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::
154965 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,155101
154972 :: CALL :: call :: Ljava/util/List :: v8 = v6.getBinaryOperators()::JM,155090:CL,164920
154979 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,154988:JM,155100
154976 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .psags::JM,154988:JM,155100
154984 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::JM,154988:JM,155100
154988 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,154993:JM,154998:JM,154989:JM,155008:JM,154999:JM,155095:JM,155003
154989 :: CALL :: call :: Ljava/lang/String :: v19 = v17.getAssembly_id()::JM,154993:JM,154998:JM,154989
154993 :: CALL :: call :: Z :: v21 = v19.equals(p1 $assemblyId )::JM,154993:JM,154998
154998 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 218::CD,154999:CD,155003:CD,155008:CD,155019:CD,155023:CD,155091:CD,155095:JM,154988:JM,155100
154999 :: CALL :: call :: Ljava/lang/String :: v23 = v17.getAsym_id_list()::JM,155008:JM,154999:JM,155095:JM,155003
155003 :: CALL :: call :: [Ljava/lang/String :: v26 = v23.split(#(,))::JM,155008:JM,155095:JM,155003
155008 :: CALL :: call :: Ljava/util/List :: v28 = asList(v26)::JM,155008:JM,155095
155019 :: CALL :: call :: V :: v29.parseOperatorExpressionString(v31)::CL,164747
155023 :: CALL :: call :: Ljava/util/Iterator :: v34 = v28.iterator()::JM,155095
155028 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,155095
155033 :: CALL :: call :: Ljava/util/Iterator :: v42 = v8.iterator()::JM,155090
155038 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,155090
155048 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v52 = p0 $this .getModelTransformationMatrix(v50)::CL,164804
155058 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v57 = p0 $this .getModelTransformationMatrix(v55)::CL,164804
155063 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v59 = combine(v52, v57)::CL,164947
155068 :: CALL :: call :: V :: v59.setChainId(v39)::CL,133268
155072 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v67)::
155076 :: CALL :: call :: V :: v59.setId(v62)::CL,133257
155080 :: CALL :: call :: Z :: v65 = v4.add(v59)::
155086 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,155090
155085 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v67 + #(1)::DD,155102
155090 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 122::CD,155038:CD,155048:CD,155058:CD,155063:CD,155068:CD,155072:CD,155076:CD,155080:CD,155085:CD,155086:CD,155102:JM,155090:JM,155095
155091 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,155095
155095 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 96::CD,155028:CD,155033:CD,155086:CD,155090:CD,155091:CD,155102:JM,155095:JM,154988:JM,155100
155096 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,154988:JM,155100
155102 :: EXPR :: assign :: null :: PHI v67 = #(1), v66::JM,155090:DD,155085
155100 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 32::CD,154984:CD,154988:CD,154989:CD,154993:CD,154998:CD,155096:JM,155100:CF,155101
155101 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,154961
155167 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::CE,155168:CD,155174
155171 :: EXPR :: reference :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v3 = p0 $this .cell::DD,155174
155168 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::JM,140951
155174 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: return v3::CF,155168
155176 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.checkScaleMatrix(javax.vecmath.Matrix4d)::CD,155181
155181 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v5 = p0 $this .getMTranspose()::CL,164986
155270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardCoordFrameConvention(boolean)::JM,155275
155275 :: EXPR :: modify :: Z :: p0 $this .nonStandardCoordFrameConvention = p1 $nonStandardCoordFrameConvention ::
155590 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::CE,155591:CD,155598:CD,155602:JM,155698:JM,155636:JM,155656:JM,155641:JM,155661
155591 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::JM,141746:JM,141772:JM,141862:JM,155988
155598 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v8 = getGroupFromChemCompDictionary(p4 $null )::JM,155602:JM,155635:JM,155620:JM,155612:JM,155628:CL,113797
155602 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 100::CD,155603:CD,155607:CD,155611:CD,155636:CD,155641:CD,155720:CD,155721:JM,155698:JM,155656:JM,155661
155603 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = v8.getChemComp()::CL,114030
155607 :: CALL :: call :: Z :: v13 = v11.isEmpty()::JM,155611:CL,114090
155611 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 100::CD,155612:CD,155613:CD,155635:CD,155636:CD,155641:CD,155720:CD,155721:JM,155698:JM,155656:JM,155661
155615 :: CALL :: call :: V :: v54.setId(p3 $seq_id )::CL,165094
155612 :: EXPR :: assign :: Z :: v47=v8 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,155613
155613 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 51::CD,155615:CD,155620:CD,155621
155623 :: CALL :: call :: V :: v52.setId(p3 $seq_id )::CL,165094
155620 :: EXPR :: assign :: Z :: v48=v8 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,155621
155621 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 75::CD,155623:CD,155628:CD,155629
155631 :: CALL :: call :: V :: v50.setId(p3 $seq_id )::CL,165094
155628 :: EXPR :: assign :: Z :: v49=v8 INSTANCEOF org.biojava.nbio.structure.HetatomImpl::DD,155629
155629 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 96::CD,155631:CF,155635
155635 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v8::DD,155591
155636 :: CALL :: call :: Z :: v17 = p1 $recordName .equals(#(ATOM))::JM,155698:JM,155636:JM,155656:JM,155641:JM,155661
155642 :: CALL :: call :: Z :: v31 = isNucleotide(p4 $null )::JM,155646:CL,113761
155641 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 201::CD,155642:CD,155646:CD,155684:CD,155688
155646 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 137::CF,155647:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,155651:CD,155656:CD,155721
155647 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v42 = new org.biojava.nbio.structure.NucleotideImpl::DD,155721
155651 :: CALL :: call :: V :: v42.setId(p3 $seq_id )::CL,165094
155656 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 149::CF,155662:CD,155657:CD,155661:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,155666:CD,155721:JM,155698:JM,155636:JM,155641
155657 :: CALL :: call :: C :: v33 = p2 $aminoCode1 .charValue()::JM,155698:JM,155636:JM,155641:JM,155661
155662 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v39 = new org.biojava.nbio.structure.HetatomImpl::DD,155721
155661 :: PRED :: IF :: Z :: if (v33 != #(88)) goto 171::CF,155671:CF,155662:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,155666:CD,155675:CD,155679:CD,155721
155666 :: CALL :: call :: V :: v39.setId(p3 $seq_id )::CL,165094
155671 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v35 = new org.biojava.nbio.structure.AminoAcidImpl::DD,155721
155675 :: CALL :: call :: V :: v35.setAminoType(p2 $aminoCode1 )::CL,114231
155679 :: CALL :: call :: V :: v35.setId(p3 $seq_id )::CL,165094
155684 :: CALL :: call :: Z :: v19 = isNucleotide(p4 $null )::JM,155688:CL,113761
155688 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 230::CF,155689:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,155693:CD,155698:CD,155721
155689 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v27 = new org.biojava.nbio.structure.NucleotideImpl::DD,155721
155693 :: CALL :: call :: V :: v27.setId(p3 $seq_id )::CL,165094
155698 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 261::CF,155712:CF,155699:JM,114147:JM,114163:JM,114165:JM,114167:JM,114140:CD,155703:CD,155707:CD,155716:CD,155721
155699 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v23 = new org.biojava.nbio.structure.AminoAcidImpl::DD,155721
155703 :: CALL :: call :: V :: v23.setAminoType(p2 $aminoCode1 )::CL,114231
155707 :: CALL :: call :: V :: v23.setId(p3 $seq_id )::CL,165094
155712 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v20 = new org.biojava.nbio.structure.HetatomImpl::DD,155721
155716 :: CALL :: call :: V :: v20.setId(p3 $seq_id )::CL,165094
155720 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v45::DD,155591
155721 :: EXPR :: assign :: null :: PHI v45 = v42, v39, v35, v27, v23, v20::CF,155720
155800 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::CE,155801:CD,155812:CD,155816:CD,155820:JM,155886:JM,155836:JM,155905:JM,155910
155801 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::JM,142057
155812 :: CALL :: call :: Ljava/util/List :: v10 = v8.getAtoms()::JM,155820:CL,114287
155816 :: CALL :: call :: I :: v12 = v10.size()::JM,155820
155820 :: PRED :: IF :: Z :: if (v12 <= #(0)) goto 54::CD,155821:CD,155827:CD,155831:CD,155836:CD,155844:CD,155848:CD,155893:CD,155897:JM,155820
155821 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.get(#(0))::JM,155820
155827 :: CALL :: call :: Ljava/lang/Character :: v18 = v16.getAltLoc()::JM,155836:CL,114296
155831 :: CALL :: call :: Z :: v20 = v18.equals(p1 $altLoc )::JM,155836:JM,155886
155836 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 54::CD,155840:CD,155844:CD,155848:CD,155893:CD,155897
155837 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v79 = p0 $this .current_group::DD,155840
155840 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v79::DD,155801
155844 :: CALL :: call :: Ljava/util/List :: v23 = v21.getAltLocs()::JM,155857:JM,155897:CL,104462
155848 :: CALL :: call :: Ljava/util/Iterator :: v25 = v23.iterator()::JM,155857:JM,155897
155853 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,155857:JM,155897
155858 :: CALL :: call :: Ljava/util/List :: v32 = v30.getAtoms()::JM,155892:JM,155866:CL,114287
155857 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,155887
155862 :: CALL :: call :: I :: v34 = v32.size()::JM,155892:JM,155866
155866 :: PRED :: IF :: Z :: if (v34 <= #(0)) goto 160::CD,155867:CD,155888:CD,155892:CD,155893:CD,155897:JM,155866:JM,155857
155867 :: CALL :: call :: Ljava/util/Iterator :: v37 = v32.iterator()::JM,155892:JM,155866
155872 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.next()::JM,155892
155877 :: CALL :: call :: Ljava/lang/Character :: v44 = v42.getAltLoc()::JM,155886:CL,114296
155881 :: CALL :: call :: Z :: v46 = v44.equals(p1 $altLoc )::JM,155886:JM,155836
155886 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,155887:CD,155888:CD,155892
155887 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v30::DD,155801
155888 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,155892
155892 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 121::CD,155872:CD,155877:CD,155881:CD,155886:CD,155893:CD,155897:JM,155892:JM,155857
155893 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,155857:JM,155897
155897 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 78::CD,155853:CD,155857:CD,155858:CD,155862:CD,155866:CD,155901:CD,155905:CD,155910:JM,155897
155901 :: CALL :: call :: Ljava/lang/String :: v49 = v47.getPDBName()::JM,155905:JM,155910:CL,104483
155905 :: CALL :: call :: Z :: v51 = p4 $groupCode3 .equals(v49)::JM,155905:JM,155910
155910 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 268::CD,155914:CD,155918:CD,155922:CD,155958:CD,155966:CD,155977:CD,155984:CD,155988
155914 :: CALL :: call :: Ljava/util/List :: v63 = v61.getAtoms()::JM,155922:CL,114287
155918 :: CALL :: call :: I :: v65 = v63.size()::JM,155922
155922 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 208::CD,155926:CD,155930:CD,155934:CD,155935:CD,155939:CD,155943:CD,155947:CD,155953:CD,155957
155923 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,155926
155926 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,155801
155930 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.clone()::JM,155934:CL,105482:CL,105657:CL,105340
155934 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,155957:CF,155935
155935 :: NORM :: declaration :: Ljava/util/ArrayList :: v70 = new java.util.ArrayList::
155939 :: CALL :: call :: V :: v69.setAtoms(v70)::CL,114317
155943 :: CALL :: call :: Ljava/util/List :: v74 = v69.getAltLocs()::CL,104462
155947 :: CALL :: call :: V :: v74.clear()::
155953 :: CALL :: call :: V :: v76.addAltLoc(v69)::CL,114403
155958 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v53 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p5 $seq_id , p4 $groupCode3 )::JM,155988:CL,155590
155957 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v69::DD,155801
155966 :: CALL :: call :: V :: v53.setPDBName(p4 $groupCode3 )::CL,93615:CL,93584
155977 :: CALL :: call :: V :: v53.setResidueNumber(v57)::CL,93626
155984 :: CALL :: call :: V :: v59.addAltLoc(v53)::CL,114403
155988 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v53::DD,155801
156049 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.convertAtom(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::JM,87959:JM,87964:CD,156058:CD,156062:CD,156066:CD,156074:CD,156102:CD,156106:CD,156110:CD,156122:CD,156134:CD,156138:CD,156142:CD,156184:CD,156207:JM,156147:JM,156148:JM,156153:JM,156143
156058 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $atom .getId()::JM,156147:JM,156148:JM,156058:JM,156138:JM,156153:JM,156142:JM,156143
156062 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,156147:JM,156148:JM,156153:JM,156142:JM,156143
156066 :: CALL :: call :: V :: v4.setPDBserial(v9)::CL,94204
156074 :: CALL :: call :: V :: v4.setName(v12)::CL,94239
156102 :: CALL :: call :: V :: v4.setX(v17)::CL,127778
156106 :: CALL :: call :: V :: v4.setY(v21)::CL,127794
156110 :: CALL :: call :: V :: v4.setZ(v25)::CL,127810
156122 :: CALL :: call :: V :: v4.setOccupancy(v32)::CL,94261
156134 :: CALL :: call :: V :: v4.setTempFactor(v37)::CL,94272
156138 :: CALL :: call :: Ljava/lang/String :: v40 = p1 $atom .getLabel_alt_id()::JM,156147:JM,156148:JM,156058:JM,156138:JM,156153:JM,156142:JM,156143
156142 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 167::CD,156143:CD,156147:CD,156174:JM,156148:JM,156153
156143 :: CALL :: call :: I :: v43 = v40.length()::JM,156147:JM,156148:JM,156153:JM,156143
156147 :: PRED :: IF :: Z :: if (v43 <= #(0)) goto 167::CD,156148:CD,156153:CD,156174:JM,156147:JM,156143
156148 :: CALL :: call :: Z :: v47 = v40.equals(#(.))::JM,156147:JM,156148:JM,156153:JM,156143
156153 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 167::CD,156164:CD,156174
156164 :: CALL :: call :: V :: v4.setAltLoc(v52)::CL,94215
156174 :: CALL :: call :: V :: v4.setAltLoc(v48)::CL,94215
156184 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v61 = valueOfIgnoreCase(v59)::CL,94283
156207 :: CALL :: call :: V :: v4.setElement(v72)::CL,94327
156263 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::CE,156264:CD,156270
156267 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .revisionRecords::DD,156270
156264 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::JM,142463:JM,142479
156270 :: NORM :: compound :: Ljava/util/List :: return v3::CF,156264
156272 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRevisionRecords(java.util.List)::JM,156277
156277 :: EXPR :: modify :: Ljava/util/List :: p0 $this .revisionRecords = p1 $revisionRecords ::
156292 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::CE,156293:CD,156300:CD,156321:CD,156325:JM,156314:JM,156319
156293 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::JM,143253
156297 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucRefs::JM,156309:JM,156325
156300 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,156309:JM,156325
156305 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,156309:JM,156325
156310 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,156310:JM,156314:JM,156319
156309 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,156310:JM,156314:JM,156319:DD,156320
156314 :: CALL :: call :: Z :: v16 = v14.equals(p1 $ref_id )::JM,156314:JM,156319
156319 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,156320:CD,156321:CD,156325:JM,156309
156320 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return v12::DD,156293
156321 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,156309:JM,156325
156326 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return #(null)::DD,156293
156325 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,156305:CD,156309:CD,156310:CD,156314:CD,156319:CD,156326:JM,156325
156338 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB()::CD,156342:CD,156346:CD,156350
156342 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
156346 :: CALL :: call :: V :: p0 $this .toPDB(v3)::CL,165105
156350 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
156360 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRfree()::CE,156361:CD,156367
156361 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getRfree()::JM,144502:JM,144515
156367 :: NORM :: compound :: F :: return v3::CF,156361
156364 :: EXPR :: reference :: F :: v3 = p0 $this .rFree::DD,156367
156369 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.addChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,156381:CD,156387:CD,156391:CD,156411:CD,156415:JM,156416:JM,156421:JM,156392:JM,156397
156381 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $comp )::
156387 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $comp .getPdbx_replaces()::JM,156387:JM,156416:JM,156391:JM,156421:JM,156411:JM,156392:JM,156415:JM,156397
156391 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,156392:CD,156397:JM,156416:JM,156421:JM,156415:JM,156387:JM,156391:JM,156411
156392 :: CALL :: call :: Z :: v14 = v10.equals(#(?))::JM,156416:JM,156421:JM,156392:JM,156415:JM,156397
156397 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 49::CD,156405:JM,156387:JM,156416:JM,156391:JM,156421:JM,156411:JM,156392:JM,156415:JM,156397
156405 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.put(v18, v10)::
156411 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $comp .getPdbx_replaced_by()::JM,156387:JM,156416:JM,156391:JM,156421:JM,156411:JM,156392:JM,156415:JM,156397
156415 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 81::CD,156416:CD,156421:JM,156392:JM,156397
156416 :: CALL :: call :: Z :: v24 = v22.equals(#(?))::JM,156416:JM,156421:JM,156392:JM,156397
156421 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 81::CD,156429
156429 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.put(v27, v22)::
156462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.rebuildQuaternaryStructure(org.biojava.nbio.structure.Structure,java.util.List)::CE,156463:CD,156473:CD,156622
156463 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.rebuildQuaternaryStructure(org.biojava.nbio.structure.Structure,java.util.List)::JM,145328
156473 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $asymUnit .clone()::JM,156473:JM,156622
156622 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,156463
156679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.size()::CE,156680:CD,156686:CD,156690
156683 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::JM,156690
156680 :: EXIT :: exit :: I :: org.biojava.nbio.structure.HetatomImpl.size()::JM,145485
156686 :: CALL :: call :: I :: v5 = v3.size()::JM,156690
156690 :: NORM :: compound :: I :: return v5::CF,156680
156692 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.isMetal()::CE,156693:CD,156699:CD,156703
156693 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Element.isMetal()::JM,145501
156699 :: CALL :: call :: Z :: v5 = v3.isMetal()::JM,156703:CL,165458
156703 :: NORM :: compound :: Z :: return v5::CF,156693
156706 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::JM,145526:JM,145531
156705 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::CE,156706:CD,156712
156709 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v3 = p0 $this .residueType::DD,156712
156714 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::CE,156715:CD,156718:CD,156722:CD,156724
156715 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::JM,146166:JM,146168
156712 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v3::CF,156706
156718 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v4 = getPredominantGroupType(p1 $c )::JM,156724:CL,165467
156722 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v5 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,156724
156726 :: NORM :: compound :: Z :: return #(0)::DD,156715
156724 :: PRED :: IF :: Z :: if (v4 != v5) goto 13::CD,156725:CD,156726
156725 :: NORM :: compound :: Z :: return #(1)::DD,156715
161467 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = org.biojava.nbio.structure.PDBStatus$Status.ENUM$VALUES::DD,161469
161464 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.values()::CF,161465:CD,161467:CD,161469:CD,161470:CD,161478
161465 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.values()::JM,148501
161470 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,161478
161469 :: EXPR :: assign :: I :: v4 = v2.length::DD,161470
161478 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v5::CF,161465
162471 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,166830
162475 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v6 = new java.util.concurrent.atomic.AtomicBoolean::JM,131616:JM,131648:JM,131617:JM,131652:JM,131684:JM,131653:JM,131625:JM,131630:JM,131661:JM,131634:JM,131666:JM,131635:JM,131670:JM,131671:JM,131643:JM,131679:DD,162479
162479 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCla = v6::
162482 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedCla::JM,162485
162485 :: CALL :: call :: V :: v8.set(#(0))::JM,162485
162489 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,131616:JM,131648:JM,131617:JM,131652:JM,131684:JM,131653:JM,131625:JM,131630:JM,131661:JM,131634:JM,131666:JM,131635:JM,131670:JM,131671:JM,131643:JM,131679:DD,162493
162493 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDes = v11::
162499 :: CALL :: call :: V :: v13.set(#(0))::JM,162499
162496 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedDes::JM,162499
162503 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,131616:JM,131648:JM,131617:JM,131652:JM,131684:JM,131653:JM,131625:JM,131630:JM,131661:JM,131634:JM,131666:JM,131635:JM,131670:JM,131671:JM,131643:JM,131679:DD,162507
162507 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedHie = v15::
162510 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v17 = p0 $this .installedHie::JM,162513
162513 :: CALL :: call :: V :: v17.set(#(0))::JM,162513
162517 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v19 = new java.util.concurrent.atomic.AtomicBoolean::JM,131616:JM,131648:JM,131617:JM,131652:JM,131684:JM,131653:JM,131625:JM,131630:JM,131661:JM,131634:JM,131666:JM,131635:JM,131670:JM,131671:JM,131643:JM,131679:DD,162521
162521 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCom = v19::
162527 :: CALL :: call :: V :: v21.set(#(0))::JM,162527
162524 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v21 = p0 $this .installedCom::JM,162527
162534 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::JM,131616:JM,131648:JM,131617:JM,131652:JM,131684:JM,131653:JM,131625:JM,131630:JM,131661:JM,131634:JM,131666:JM,131635:JM,131670:JM,131671:JM,131643:JM,131679
162542 :: NORM :: declaration :: Ljava/util/HashMap :: v27 = new java.util.HashMap::JM,131616:JM,131648:JM,131617:JM,131652:JM,131684:JM,131653:JM,131625:JM,131630:JM,131661:JM,131634:JM,131666:JM,131635:JM,131670:JM,131671:JM,131643:JM,131679
162549 :: NORM :: declaration :: Ljava/util/HashMap :: v29 = new java.util.HashMap::JM,131616:JM,131648:JM,131617:JM,131652:JM,131684:JM,131653:JM,131625:JM,131630:JM,131661:JM,131634:JM,131666:JM,131635:JM,131670:JM,131671:JM,131643:JM,131679
162556 :: NORM :: declaration :: Ljava/util/TreeMap :: v31 = new java.util.TreeMap::JM,131616:JM,131648:JM,131617:JM,131652:JM,131684:JM,131653:JM,131625:JM,131630:JM,131661:JM,131634:JM,131666:JM,131635:JM,131670:JM,131671:JM,131643:JM,131679
162902 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::CE,162903:CD,162907:CD,162917:CD,162927:CD,162946:CD,162951:CD,162956:CD,162964:CD,162965:CD,162969
162903 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/template/Sequence :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::JM,150738:JM,150754:JM,150755:JM,150928:JM,150929:JM,150741:JM,150762:JM,150767:JM,150749:JM,150930:JM,150739:JM,150806:JM,150811:JM,150745:JM,150799
162907 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v5 = new org.biojava.nbio.core.sequence.DNASequence::DD,162969
162917 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v10 = new org.biojava.nbio.core.sequence.RNASequence::DD,162969
162927 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v15 = new org.biojava.nbio.core.sequence.DNASequence::DD,162969
162946 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
162951 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(p1 $seq )::
162956 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
162964 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return #(null)::DD,162903
162965 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return v34::DD,162903
162969 :: EXPR :: assign :: null :: PHI v34 = v5, v10, v15::CF,162965
162976 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,162977:CD,162985:CD,162989:CD,162992:CD,163391:CD,163399:CD,163401:CD,163402:JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,163022:JM,163021:JM,163027:JM,162998:JM,163060:JM,163028:JM,163035:JM,163033:JM,163004
162977 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,150925
162985 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,162985:JM,163022:JM,163021:JM,163027:JM,162998:JM,163028:JM,163060:JM,163035:JM,163033:JM,163391:JM,163004
162989 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/DNACompoundSet :: v12 = getDNACompoundSet()::JM,163027:JM,162992:JM,163028:JM,163033:JM,163022
162992 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v15 = v12.getCompoundForString(#(-))::JM,163027:JM,162992:JM,163028:JM,163033:JM,163022
162998 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v194)::JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,162985:JM,163022:JM,163021:JM,163027:JM,162998:JM,163028:JM,163060:JM,163035:JM,163033:JM,163391:JM,163004
163004 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v194)::JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,162985:JM,163022:JM,163021:JM,163027:JM,162998:JM,163028:JM,163060:JM,163035:JM,163033:JM,163391:JM,163004
163010 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v194)::JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,162985:JM,163022:JM,163021:JM,163027:JM,162998:JM,163028:JM,163060:JM,163035:JM,163033:JM,163391:JM,163004
163015 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,162985:JM,163022:JM,163021:JM,163027:JM,162998:JM,163028:JM,163060:JM,163035:JM,163033:JM,163391:JM,163004
163016 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v194)::JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,162985:JM,163022:JM,163021:JM,163027:JM,162998:JM,163028:JM,163060:JM,163035:JM,163033:JM,163391:JM,163004
163022 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,163027:JM,163040:JM,163015:JM,163028:JM,163035:JM,163033:JM,163022:JM,163004:JM,163021
163021 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,163027:JM,163040:JM,163015:JM,163028:JM,163035:JM,163033:JM,163022:JM,163004:JM,163021
163027 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 567::CF,163400:CD,163028:CD,163033:JM,163027:JM,163040:JM,163015:JM,163035:JM,163022:JM,163021
163028 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,163027:JM,163040:JM,163015:JM,163028:JM,163035:JM,163033:JM,163022:JM,163021
163035 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,163027:JM,163040:JM,163015:JM,163028:JM,163035:JM,163033:JM,163022:JM,163004:JM,163021
163033 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,163035:CD,163040:CD,163400:JM,163027:JM,163015:JM,163028:JM,163033:JM,163022:JM,163004:JM,163021
163040 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 567::CF,163400:CD,163041:CD,163045:CD,163050:CD,163051:CD,163055:CD,163060:CD,163061:CD,163065:CD,163070:CD,163071:CD,163075:CD,163080:CD,163081
163041 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
163045 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,163050
163050 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,163060
163051 :: CALL :: call :: I :: v40 = v38.intValue()::JM,163060
163055 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,162985:JM,163022:JM,163021:JM,163027:JM,162998:JM,163060:JM,163028:JM,163035:JM,163033:JM,163391:JM,163004
163060 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,163081
163061 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
163065 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,163070
163070 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,163080
163071 :: CALL :: call :: I :: v50 = v48.intValue()::JM,163080
163075 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,162985:JM,163022:JM,163021:JM,163027:JM,162998:JM,163060:JM,163028:JM,163035:JM,163033:JM,163391:JM,163004
163082 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,163085:CD,163090:CD,163095:CD,163100:CD,163105:CD,163110:CD,163115:CD,163120:CD,163125:CD,163130:CD,163135:CD,163140:CD,163145:CD,163154:CD,163158:CD,163162:CD,163220:CD,163225:CD,163370:CD,163374:CD,163379:CD,163380:CD,163384:CD,163400
163080 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,163082:JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,162985:JM,163022:JM,163021:JM,163027:JM,162998:JM,163060:JM,163028:JM,163035:JM,163033:JM,163391:JM,163004:CF,163081
163081 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,163082:CD,163085:CD,163090:CD,163095:CD,163100:CD,163105:CD,163110:CD,163115:CD,163120:CD,163125:CD,163130:CD,163135:CD,163140:CD,163145:CD,163400
163085 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
163090 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v194)::
163095 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
163100 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
163105 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
163110 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
163115 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
163120 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
163125 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
163130 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
163135 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
163140 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
163145 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
163154 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,163239:JM,163162:JM,163225:CL,104483
163158 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,163239:JM,163163:JM,163225:CL,104483
163162 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,163163:CD,163166:CD,163171:CD,163176:CD,163181:CD,163186:CD,163191:CD,163196:CD,163201:CD,163206
163163 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 357::CD,163166:CD,163171:CD,163176:CD,163181:CD,163186:CD,163191:CD,163196:CD,163201:CD,163206:JM,163239:JM,163225
163166 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v92 = new java.lang.StringBuilder::
163171 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v92.append(v23)::
163176 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( when trying to align ))::
163181 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v43)::
163186 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( and ))::
163191 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v53)::
163196 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v106.append(#( ))::
163201 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v108.append(v26)::
163206 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
163220 :: CALL :: call :: Z :: v118 = v90.equals(v88)::JM,163239:JM,163225
163226 :: CALL :: call :: Ljava/lang/String :: v120 = v90.trim()::JM,163239:JM,163225
163225 :: PRED :: IF :: Z :: if (v118 != #(0)) goto 542::CD,163226:CD,163230:CD,163234:CD,163239:JM,163225
163230 :: CALL :: call :: Ljava/lang/String :: v122 = v88.trim()::JM,163239:JM,163225
163234 :: CALL :: call :: Z :: v124 = v120.equals(v122)::JM,163239
163239 :: PRED :: IF :: Z :: if (v124 != #(0)) goto 542::CD,163242:CD,163246:CD,163251:CD,163256:CD,163261:CD,163266:CD,163271:CD,163276:CD,163281:CD,163286:CD,163291:CD,163296:CD,163301:CD,163309:CD,163313:CD,163315:CD,163320
163242 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v126 = new java.lang.StringBuilder::
163246 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v126.append(v43)::
163251 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(#( ))::
163256 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v131.append(v23)::
163261 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v133.append(#( does not align with ))::
163266 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(v53)::
163271 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v138.append(#( ))::
163276 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v140.append(v26)::
163281 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( should be: ))::
163286 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(v17)::
163291 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v147.append(#( : ))::
163296 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(v20)::
163301 :: CALL :: call :: Ljava/lang/String :: v154 = v152.toString()::
163309 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v157 = v43.getType()::JM,163315:JM,163320:CL,54408:CL,54424:CL,54416
163315 :: CALL :: call :: Z :: v160 = v157.equals(v158)::JM,163315:JM,163320
163313 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v158 = org.biojava.nbio.structure.HetatomImpl.type::JM,163315:JM,163320
163320 :: PRED :: IF :: Z :: if (v160 == #(0)) goto 501::CD,163321:CD,163325:CD,163327:CD,163332:CD,163342:CD,163347:CD,163352:CD,163357:CD,163362
163321 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v162 = v53.getType()::JM,163332:JM,163327:CL,54408:CL,54424:CL,54416
163327 :: CALL :: call :: Z :: v165 = v162.equals(v163)::JM,163332:JM,163327
163325 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v163 = org.biojava.nbio.structure.HetatomImpl.type::JM,163332:JM,163327
163332 :: PRED :: IF :: Z :: if (v165 == #(0)) goto 501::CD,163342:CD,163347:CD,163352:CD,163357:CD,163362
163342 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
163347 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v43)::
163352 :: CALL :: call :: Ljava/lang/StringBuilder :: v176 = v174.append(#( ))::
163357 :: CALL :: call :: Ljava/lang/StringBuilder :: v178 = v176.append(v53)::
163362 :: CALL :: call :: Ljava/lang/String :: v180 = v178.toString()::
163370 :: CALL :: call :: Ljava/lang/Integer :: v183 = valueOf(v23)::
163374 :: CALL :: call :: Ljava/lang/Object :: v185 = p4 $seqresIndexPosition .get(v183)::JM,163379
163379 :: EXPR :: assign :: Ljava/lang/Object :: v186 = CHECKCAST v185::
163380 :: CALL :: call :: I :: v188 = v186.intValue()::
163384 :: CALL :: call :: Ljava/lang/Object :: v190 = p1 $seqResGroups .set(v188, v53)::JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,162985:JM,163022:JM,163021:JM,163027:JM,162998:JM,163060:JM,163028:JM,163035:JM,163033:JM,163391:JM,163004
163390 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v194 + #(1)::DD,163402:CF,163401
163391 :: PRED :: IF :: Z :: if (v194 <= v9) goto 32::CD,162998:CD,163004:CD,163010:CD,163015:CD,163016:CD,163021:CD,163022:CD,163027:CD,163390:CD,163400:CD,163401:CD,163402:JM,163040:JM,163080:JM,162985:JM,163028:JM,163060:JM,163035:JM,163033:JM,163391
163399 :: NORM :: compound :: Z :: return v193::DD,162977
163402 :: EXPR :: assign :: null :: PHI v194 = #(1), v192::JM,163010:JM,163040:JM,163015:JM,163016:JM,163080:JM,163022:JM,163021:JM,163027:JM,162998:JM,163028:JM,163035:JM,163033:JM,163004:JM,163060:DD,163390:DD,163391
163400 :: EXPR :: assign :: null :: PHI v191 = v193, v193, v193, v193, #(0)::DD,163401:CF,163390
163401 :: EXPR :: assign :: null :: PHI v193 = #(1), v191::CF,163402:DD,163399:DD,163400
163523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,163529:CD,163530:CD,163538:CD,163542
163530 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,163529:CL,118876
163529 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,163529
163538 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,118876
163542 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
163555 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,163561:CD,163562:CD,163570:CD,163574
163562 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,163561:CL,118876
163561 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,163561
163570 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,118876
163574 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
163587 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setBonds(java.util.List)::JM,163592
163592 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = p1 $bonds ::
163598 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::CE,163599:CD,163611:CD,163620
163599 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::JM,151712:JM,151707
163611 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::
163617 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .atomA::DD,163620
163620 :: PRED :: IF :: Z :: if (p1 $exclude  != v6) goto 40::CD,163624:CD,163628
163621 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v8 = p0 $this .atomB::DD,163624
163624 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v8::DD,163599
163625 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v7 = p0 $this .atomA::DD,163628
163628 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v7::DD,163599
163637 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.addBond(org.biojava.nbio.structure.Bond)::CD,163645:CD,163657
163642 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .bonds::DD,163645
163646 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,163651
163645 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 20::CD,163646
163651 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
163654 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .bonds::
163657 :: CALL :: call :: Z :: v11 = v9.add(p1 $bond )::
163671 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadAllDefinitions()::CD,163688:CD,163690:CD,163694:CD,163701:CD,163706:CD,163710:CD,163715:CD,163765:CD,163767:CD,163787:CD,163789:CD,163831
163690 :: CALL :: call :: Z :: v12 = v10.get()::JM,163694
163688 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v10 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,163694
163694 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 79::CD,163730:CD,163732:CD,163736:CD,163751:CD,163772:CD,163794:CD,163799:CD,163804:CD,163805:CD,163806:CD,163811:CD,163816:CD,163824:CD,163826
163701 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
163706 :: CALL :: call :: Ljava/lang/String :: v69 = v63.getMessage()::
163710 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::
163715 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::
163730 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,163732
163732 :: CALL :: call :: V :: v13.set(#(1))::JM,163732
163736 :: CALL :: call :: J :: v17 = currentTimeMillis()::JM,163804
163751 :: CALL :: call :: V :: downloadFile()::CL,167241
163767 :: CALL :: call :: V :: v31.set(#(0))::
163765 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v31 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
163772 :: CALL :: call :: V :: p0 $this .split()::CL,163944
163787 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v40 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
163789 :: CALL :: call :: V :: v40.set(#(0))::
163794 :: CALL :: call :: J :: v43 = currentTimeMillis()::JM,163804
163799 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
163806 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v45.append(v50)::
163804 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v43 - v17::DD,163805
163805 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v48 / #(1000 l)::
163811 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( sec.))::
163816 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
163826 :: CALL :: call :: V :: v59.set(#(0))::JM,163826
163824 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v59 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,163826
163831 :: EXPR :: assign :: Ljava/lang/Exception :: v63 = catch <exc>::
163944 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.split()::CD,163954:CD,163955:CD,163962:CD,163972:CD,163973:CD,163987:CD,163991:CD,164038:CD,164039:CD,164043:CD,164048:CD,164049:CD,164055:CD,164069:CD,164074:CD,164079:CD,164084:CD,164099:CD,164100:CD,164101:CD,164102
163954 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::
163955 :: EXPR :: reference :: Ljava/io/File :: v7 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
163962 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
163972 :: NORM :: declaration :: Ljava/io/BufferedReader :: v17 = new java.io.BufferedReader::JM,164100:DD,164049:CF,163973
163973 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v18 = new java.io.InputStreamReader::
163987 :: CALL :: call :: Ljava/lang/String :: v24 = v17.readLine()::JM,164100
163991 :: NORM :: declaration :: Ljava/io/StringWriter :: v25 = new java.io.StringWriter::DD,164101
163996 :: CALL :: call :: Z :: v29 = v52.startsWith(#(data_))::JM,164001
164002 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 130::CF,164095:CD,164003:CD,164007:CD,164012
164003 :: CALL :: call :: Ljava/lang/String :: v31 = v53.toString()::
164001 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 148::CF,164096:CD,164002:CD,164013:CD,164018:CD,164095:CD,164097:CD,164098
164007 :: CALL :: call :: V :: p0 $this .writeID(v31, v54)::CL,167345
164012 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v51 + #(1)::DD,164095
164013 :: CALL :: call :: Ljava/lang/String :: v38 = v52.substring(#(5))::JM,164098
164018 :: NORM :: declaration :: Ljava/io/StringWriter :: v39 = new java.io.StringWriter::DD,164097
164022 :: CALL :: call :: Ljava/io/StringWriter :: v45 = v42.append(v52)::
164027 :: EXPR :: reference :: Ljava/lang/String :: v46 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.NEWLINE::
164029 :: CALL :: call :: Ljava/io/StringWriter :: v48 = v42.append(v46)::
164034 :: CALL :: call :: Ljava/lang/String :: v50 = v17.readLine()::JM,164100
164038 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 102::CD,163996:CD,164001:CD,164022:CD,164027:CD,164029:CD,164034:CD,164096:CD,164097:CD,164098:CD,164099:CD,164100:CD,164101:CD,164102
164039 :: CALL :: call :: Ljava/lang/String :: v56 = v53.toString()::
164043 :: CALL :: call :: V :: p0 $this .writeID(v56, v54)::CL,167345
164050 :: CALL :: call :: V :: v17.close()::
164048 :: EXPR :: assign :: Ljava/lang/Object :: v58 = v51 + #(1)::CF,164049
164049 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 246::CD,164050
164055 :: CALL :: call :: V :: v17.close()::
164069 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
164074 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v61.append(v58)::
164079 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( chemical component f...))::
164084 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
164095 :: EXPR :: assign :: null :: PHI v35 = v51, v34::DD,164096:JM,164098
164098 :: EXPR :: assign :: null :: PHI v43 = v54, v38::DD,164102
164099 :: EXPR :: assign :: null :: PHI v51 = #(0), v41::CF,164100:DD,164012:DD,164048:DD,164095:DD,164096
164096 :: EXPR :: assign :: null :: PHI v41 = v51, v35::CF,164097:DD,164099
164097 :: EXPR :: assign :: null :: PHI v42 = v53, v39::CF,164098:DD,164101
164102 :: EXPR :: assign :: null :: PHI v54 = #(null), v43::DD,164002:DD,164098:CF,164038
164100 :: EXPR :: assign :: null :: PHI v52 = v24, v50::CF,164101:JM,164001:JM,164098:DD,164038
164101 :: EXPR :: assign :: null :: PHI v53 = v25, v42::CF,164102:DD,164097
164172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL)::CD,164176
164176 :: CALL :: call :: Ljava/net/HttpURLConnection :: v5 = openHttpURLConnection(p1 $url , #(15000))::CL,91159
164234 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::DD,164238
164238 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .dictionary = v4::
164241 :: NORM :: declaration :: Ljava/util/HashMap :: v6 = new java.util.HashMap::DD,164245
164245 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .replaces = v6::
164248 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,164252
164252 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .isreplacedby = v8::
164299 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::CE,164300:CD,164302:JM,167602:JM,167588:JM,167595:CD,164306:CD,164310:CD,164316:CD,164322:CD,164326
164302 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v2 = new org.biojava.nbio.structure.io.mmcif.model.ChemComp::DD,164326
164300 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::JM,152464:JM,152545
164306 :: CALL :: call :: V :: v2.setOne_letter_code(#(?))::CL,167617
164310 :: CALL :: call :: V :: v2.setThree_letter_code(#(???))::CL,167632
164316 :: CALL :: call :: V :: v2.setPolymerType(v8)::CL,167643
164322 :: CALL :: call :: V :: v2.setResidueType(v10)::CL,167654
164326 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v2::DD,164300
164338 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setId(java.lang.String)::JM,164343
164343 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
164394 :: EXIT :: exit :: Lorg/biojava/nbio/structure/cath/CathDomain :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::
164393 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::CE,164394:CD,164398:CD,164402:CD,164419:CD,164423:CD,164435:CD,164439:CD,164451:CD,164455:CD,164467:CD,164471:CD,164483:CD,164487:CD,164499:CD,164503:CD,164515:CD,164519:CD,164531:CD,164535:CD,164547:CD,164551:CD,164563:CD,164591
164398 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v4 = new org.biojava.nbio.structure.cath.CathDomain::DD,164591
164402 :: CALL :: call :: [Ljava/lang/String :: v8 = p1 $line .split(#(\s+))::
164415 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v8[#(1)]::
164419 :: CALL :: call :: I :: v15 = parseInt(v13)::
164423 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::
164431 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v8[#(2)]::
164435 :: CALL :: call :: I :: v22 = parseInt(v20)::
164439 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::
164447 :: EXPR :: reference :: Ljava/lang/Object :: v27 = v8[#(3)]::
164451 :: CALL :: call :: I :: v29 = parseInt(v27)::
164455 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
164463 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v8[#(4)]::
164467 :: CALL :: call :: I :: v36 = parseInt(v34)::
164471 :: CALL :: call :: Ljava/lang/Integer :: v38 = valueOf(v36)::
164479 :: EXPR :: reference :: Ljava/lang/Object :: v41 = v8[#(5)]::
164483 :: CALL :: call :: I :: v43 = parseInt(v41)::
164487 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v43)::
164495 :: EXPR :: reference :: Ljava/lang/Object :: v48 = v8[#(6)]::
164499 :: CALL :: call :: I :: v50 = parseInt(v48)::
164503 :: CALL :: call :: Ljava/lang/Integer :: v52 = valueOf(v50)::
164511 :: EXPR :: reference :: Ljava/lang/Object :: v55 = v8[#(7)]::
164515 :: CALL :: call :: I :: v57 = parseInt(v55)::
164519 :: CALL :: call :: Ljava/lang/Integer :: v59 = valueOf(v57)::
164527 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v8[#(8)]::
164531 :: CALL :: call :: I :: v64 = parseInt(v62)::
164535 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v64)::
164543 :: EXPR :: reference :: Ljava/lang/Object :: v69 = v8[#(9)]::
164547 :: CALL :: call :: I :: v71 = parseInt(v69)::
164551 :: CALL :: call :: Ljava/lang/Integer :: v73 = valueOf(v71)::
164559 :: EXPR :: reference :: Ljava/lang/Object :: v76 = v8[#(10)]::
164563 :: CALL :: call :: I :: v78 = parseInt(v76)::
164591 :: NORM :: compound :: Lorg/biojava/nbio/structure/cath/CathDomain :: return v4::DD,164394
164634 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFile()::CD,164643
164643 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .getDomainFilename()::CL,164656
164656 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::CE,164657:CD,164668:CD,164673
164657 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::
164668 :: CALL :: call :: Ljava/lang/String :: v9 = format(#(ecod.%s.domains.txt), v5)::JM,164673
164673 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,164657
164698 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::JM,153545
164697 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::CE,164698:CD,164704
164701 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .domains::DD,164704
164704 :: NORM :: compound :: Ljava/util/List :: return v3::CF,164698
164715 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getId()::CE,164716:CD,164722
164719 :: EXPR :: reference :: J :: v3 = p0 $this .id::DD,164722
164716 :: EXIT :: exit :: J :: org.biojava.nbio.structure.HetatomImpl.getId()::JM,154005:JM,154032:JM,154047
164722 :: NORM :: compound :: J :: return v3::CF,164716
164747 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.parseOperatorExpressionString(java.lang.String)::CD,164762:CD,164766
164762 :: CALL :: call :: Z :: v11 = isUnaryExpression(v9)::JM,164766:CL,167758
164766 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 34::CD,164767:CD,164775
164767 :: CALL :: call :: Ljava/util/List :: v16 = parseUnaryOperatorExpression(v9)::CL,167797
164775 :: CALL :: call :: Ljava/util/List :: v14 = parseBinaryOperatorExpression(v9)::CL,167807
164795 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::CE,164796:CD,164802
164799 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .unaryOperators::DD,164802
164796 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::JM,154904
164802 :: NORM :: compound :: Ljava/util/List :: return v3::CF,164796
164804 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getModelTransformationMatrix(java.lang.String)::CD,164812:CD,164833:CD,164837:JM,164831
164809 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .modelTransformations::JM,164837
164812 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,164837
164817 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,164837
164822 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,164831:CL,167905
164826 :: CALL :: call :: Z :: v16 = v14.equals(p1 $operator )::JM,164831
164831 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,164833:CD,164837
164833 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,164837
164837 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,164817:CD,164822:CD,164826:CD,164831:CD,164840:CD,164845:CD,164850:JM,133121:JM,164837
164840 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
164845 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $operator )::JM,164831
164850 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
164886 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v5 = new javax.vecmath.Matrix4d::DD,164894
164894 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v5::
164897 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $src .getId()::JM,164901:CL,167905
164901 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = v9::
164904 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $src .getChainId()::JM,164908:CL,167914
164908 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v11::
164920 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::CE,164921:CD,164927
164921 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::JM,155090
164927 :: NORM :: compound :: Ljava/util/List :: return v3::CF,164921
164924 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .binaryOperators::DD,164927
164947 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,164948:CD,164967:JM,133121:CD,164971:CD,164975
164948 :: EXIT :: exit :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::
164967 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v9 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::DD,164975
164971 :: CALL :: call :: V :: v9.setTransformationMatrix(v4)::CL,167923
164975 :: NORM :: compound :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: return v9::DD,164948
164986 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMTranspose()::CD,164993
164990 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Mtransp::DD,164993
164993 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,164998:CD,165002
164998 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v6 = p0 $this .getM()::CL,167934
165002 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v7 = new javax.vecmath.Matrix3d::DD,165006
165006 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Mtransp = v7::
165094 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setId(long)::JM,165099
165099 :: EXPR :: modify :: J :: p0 $this .id = p1 $id ::
165105 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB(java.lang.StringBuffer)::CD,165110:CD,165111:CD,165115:CD,165140:CD,165151:CD,165162:CD,165173:CD,165205:CD,165216:CD,165227:CD,165238:CD,165246:CD,165252:CD,165256:CD,165261
165110 :: NORM :: declaration :: Ljava/util/Formatter :: v4 = new java.util.Formatter::CF,165111
165111 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
165115 :: EXPR :: reference :: Ljava/util/Locale :: v7 = java.util.Locale.UK::
165137 :: EXPR :: reference :: I :: v17 = p0 $this .seqbegin::
165140 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
165151 :: CALL :: call :: Ljava/lang/Character :: v23 = valueOf(v21)::
165148 :: EXPR :: reference :: C :: v21 = p0 $this .insertBegin::
165159 :: EXPR :: reference :: I :: v25 = p0 $this .seqEnd::
165162 :: CALL :: call :: Ljava/lang/Integer :: v27 = valueOf(v25)::
165170 :: EXPR :: reference :: C :: v29 = p0 $this .insertEnd::
165173 :: CALL :: call :: Ljava/lang/Character :: v31 = valueOf(v29)::
165202 :: EXPR :: reference :: I :: v39 = p0 $this .dbSeqBegin::
165205 :: CALL :: call :: Ljava/lang/Integer :: v41 = valueOf(v39)::
165213 :: EXPR :: reference :: C :: v43 = p0 $this .idbnsBegin::
165216 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(v43)::
165227 :: CALL :: call :: Ljava/lang/Integer :: v49 = valueOf(v47)::
165224 :: EXPR :: reference :: I :: v47 = p0 $this .dbSeqEnd::
165235 :: EXPR :: reference :: C :: v51 = p0 $this .idbnsEnd::
165238 :: CALL :: call :: Ljava/lang/Character :: v53 = valueOf(v51)::
165246 :: CALL :: call :: Ljava/util/Formatter :: v55 = v4.format(#(DBREF  %4s %1s %4d%1s...), v11)::
165252 :: CALL :: call :: Ljava/lang/String :: v57 = v4.toString()::
165256 :: CALL :: call :: Ljava/lang/StringBuffer :: v59 = p1 $buf .append(v57)::
165261 :: CALL :: call :: V :: v4.close()::
165458 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.isMetal()::CE,165459:CD,165465
165459 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ElementType.isMetal()::JM,156703
165462 :: EXPR :: reference :: Z :: v3 = p0 $this .metal::DD,165465
165467 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::CE,165468:CD,165473:CD,165478:CD,165484:CD,165489:CD,165495:CD,165500:CD,165504:CD,165520:CD,165524:CD,165525:CD,165526:CD,165527:CD,165528:CD,165529:CD,165530:CD,165531:CD,165532:CD,165649
165465 :: NORM :: compound :: Z :: return v3::CF,165459
165468 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::JM,156724
165473 :: CALL :: call :: Ljava/util/List :: v5 = p1 $c .getAtomGroups(v3)::JM,165552:JM,165526:JM,165621:JM,165528:JM,165560:CL,54861
165478 :: CALL :: call :: I :: v7 = v5.size()::JM,165552:JM,165526:JM,165621:JM,165528:JM,165560
165484 :: CALL :: call :: Ljava/util/List :: v10 = p1 $c .getAtomGroups(v8)::JM,165536:JM,165552:JM,165632:JM,165553:JM,165526:CL,54861
165489 :: CALL :: call :: I :: v12 = v10.size()::JM,165536:JM,165552:JM,165632:JM,165553:JM,165526
165495 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c .getAtomGroups(v13)::JM,165524:JM,165525:CL,54861
165500 :: CALL :: call :: I :: v17 = v15.size()::JM,165524:JM,165525
165504 :: CALL :: call :: Ljava/util/Iterator :: v20 = v15.iterator()::JM,165524:JM,165525
165509 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,165524
165514 :: CALL :: call :: Z :: v27 = v25.isWater()::JM,165518:CL,150591
165518 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 89::CF,165649:CD,165519
165519 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,165649
165520 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,165524
165526 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v7 + v12::DD,165527
165527 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v32 + v31::DD,165529:DD,165537:DD,165545:DD,165622:DD,165633:CF,165528
165524 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 64::CD,165509:CD,165514:CD,165518:CD,165520:CD,165649:JM,165524:CF,165525
165525 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v17 - v30::DD,165527:DD,165544:DD,165553:DD,165560:CF,165526
165530 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 / v35::DD,165531
165531 :: EXPR :: assign :: Z :: v38 = v36 < #(0.95 d)::DD,165532
165528 :: EXPR :: assign :: D :: v34 = CONVERT I to D v7::DD,165530:CF,165529
165529 :: EXPR :: assign :: D :: v35 = CONVERT I to D v33::CF,165530
165535 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v88::DD,165468
165532 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 130::CD,165533:CD,165535:CD,165536:CD,165537:CD,165538:CD,165539:CD,165540
165533 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v88 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,165535
165538 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v39 / v40::DD,165539
165539 :: EXPR :: assign :: Z :: v42 = v41 < #(0.95 d)::DD,165540
165536 :: EXPR :: assign :: D :: v39 = CONVERT I to D v12::DD,165538:CF,165537
165537 :: EXPR :: assign :: D :: v40 = CONVERT I to D v33::CF,165538
165543 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v87::DD,165468
165540 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CD,165541:CD,165543:CD,165544:CD,165545:CD,165546:CD,165547:CD,165548
165541 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v87 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,165543
165546 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v43 / v44::DD,165547
165547 :: EXPR :: assign :: Z :: v46 = v45 < #(0.95 d)::DD,165548
165544 :: EXPR :: assign :: D :: v43 = CONVERT I to D v31::DD,165546:CF,165545
165545 :: EXPR :: assign :: D :: v44 = CONVERT I to D v33::CF,165546
165551 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v86::DD,165468
165548 :: PRED :: IF :: Z :: if (v46 <= #(0)) goto 166::CD,165549:CD,165551:CD,165552:CD,165577:CD,165589:CD,165597:CD,165605:CD,165613:CD,165621:CD,165622:CD,165623:CD,165624:CD,165632:CD,165633:CD,165634:CD,165635:CD,165648:CD,165650
165549 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v86 = org.biojava.nbio.structure.GroupType.HETATM::CF,165551
165554 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v50 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,165650
165552 :: PRED :: IF :: Z :: if (v12 <= v7) goto 194::CD,165553:CD,165560
165553 :: PRED :: IF :: Z :: if (v12 <= v31) goto 183::CD,165554:CD,165557:CD,165650
165557 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v49 = org.biojava.nbio.structure.GroupType.HETATM::DD,165650
165560 :: PRED :: IF :: Z :: if (v7 <= v31) goto 205::CD,165561:CD,165564:CD,165650
165561 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v48 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,165650
165564 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v47 = org.biojava.nbio.structure.GroupType.HETATM::DD,165650
165577 :: CALL :: call :: Ljava/lang/Double :: v59 = valueOf(#(0.95 d))::JM,165577
165589 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v7)::JM,165621
165597 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v12)::JM,165632
165605 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v31)::
165613 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v30)::
165622 :: EXPR :: assign :: D :: v75 = CONVERT I to D v33::CF,165623
165623 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v74 / v75::JM,165624
165621 :: EXPR :: assign :: D :: v74 = CONVERT I to D v7::DD,165623:CF,165622
165624 :: CALL :: call :: Ljava/lang/Double :: v78 = valueOf(v76)::JM,165624
165634 :: EXPR :: assign :: Ljava/lang/Object :: v82 = v80 / v81::JM,165635
165635 :: CALL :: call :: Ljava/lang/Double :: v84 = valueOf(v82)::JM,165635
165632 :: EXPR :: assign :: D :: v80 = CONVERT I to D v12::DD,165634:CF,165633
165633 :: EXPR :: assign :: D :: v81 = CONVERT I to D v33::CF,165634
165650 :: EXPR :: assign :: null :: PHI v51 = v50, v49, v48, v47::DD,165648
165648 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v51::DD,165468
165649 :: EXPR :: assign :: null :: PHI v30 = #(0), v30, v29::JM,165524:DD,165519:DD,165525:DD,165649
166218 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::
166217 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::CE,166218:CD,166225:CD,166231
166225 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,166231:CL,168417
166231 :: NORM :: compound :: I :: return v8::CF,166218
166235 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::CE,166236:CD,166243:CD,166249
166236 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::
166243 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,166249:CL,168472
166249 :: NORM :: compound :: I :: return v8::CF,166236
166254 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::
166253 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::CE,166254:CD,166261:CD,166267
166261 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,166267:CL,168486
166267 :: NORM :: compound :: I :: return v8::CF,166254
166830 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setCacheLocation(java.lang.String)::CD,166835:CD,166837:CD,166842
166835 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::JM,166842
166837 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,166842
166842 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,166843:CD,166844:CD,166852:CD,166854:CD,166859
166843 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
166844 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
166854 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::
166852 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::
166859 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
167241 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFile()::CD,167244:CD,167246:CD,167248:CD,167251:CD,167254:CD,167262:CD,167267:CD,167272:CD,167281:CD,167286
167246 :: CALL :: call :: V :: initServerName()::CL,169275
167244 :: CALL :: call :: V :: initPath()::CL,169252
167251 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
167248 :: CALL :: call :: Ljava/lang/String :: v5 = getLocalFileName()::CL,169290
167254 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
167262 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(/))::
167267 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(pub/pdb/data/monomers...))::
167272 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
167281 :: NORM :: declaration :: Ljava/io/File :: v21 = new java.io.File::
167286 :: CALL :: call :: V :: downloadFileFromRemote(v19, v21)::CL,169348
167331 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::CF,167332:CD,167337:CD,167342
167332 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::
167337 :: CALL :: call :: Z :: v7 = p2 $file .endsWith(#(.cif.gz))::JM,167337:JM,167342
167342 :: NORM :: compound :: Z :: return v7::CF,167332
167345 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.writeID(java.lang.String,java.lang.String)::CD,167351:CD,167355:CD,167374:CD,167378:CD,167381:CD,167387
167351 :: CALL :: call :: Ljava/lang/String :: v6 = getLocalFileName(p2 $currentID )::CL,152185
167355 :: NORM :: declaration :: Ljava/io/PrintWriter :: v8 = new java.io.PrintWriter::DD,167381
167374 :: CALL :: call :: V :: v8.print(v15)::
167378 :: CALL :: call :: V :: v8.flush()::
167382 :: CALL :: call :: V :: v8.close()::
167381 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 108::CD,167382
167387 :: CALL :: call :: V :: v8.close()::
167588 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,167592
167595 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,167599
167592 :: EXPR :: modify :: Ljava/util/List :: p0 $this .descriptors = v4::
167599 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
167602 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,167606
167606 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v8::
167617 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setOne_letter_code(java.lang.String)::CD,167625:JM,167622
167622 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .one_letter_code = p1 $one_letter_code ::
167625 :: CALL :: call :: V :: p0 $this .setStandardFlag()::CL,169516
167632 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setThree_letter_code(java.lang.String)::JM,167637
167637 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .three_letter_code = p1 $three_letter_code ::
167643 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setPolymerType(org.biojava.nbio.structure.io.mmcif.chem.PolymerType)::JM,167648
167648 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p1 $polymerType ::
167654 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setResidueType(org.biojava.nbio.structure.io.mmcif.chem.ResidueType)::JM,167659
167659 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: p0 $this .residueType = p1 $residueType ::
167745 :: NORM :: declaration :: Ljava/io/BufferedReader :: v4 = new java.io.BufferedReader::JM,167745:JM,169541
167758 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,167776:JM,167775:JM,167773:CF,167759:CD,167762:CD,167767:CD,167772
167759 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,164766
167762 :: CALL :: call :: I :: v5 = p1 $expression .indexOf(#(())::JM,167762:JM,167776:JM,167767:JM,167775:JM,167772:JM,167773
167767 :: CALL :: call :: I :: v7 = p1 $expression .lastIndexOf(#(())::JM,167762:JM,167776:JM,167767:JM,167775:JM,167772:JM,167773
167774 :: NORM :: compound :: Z :: return #(1)::CF,167759
167775 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 38::CD,167776:CD,167779
167772 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 23::CD,167773:CD,167774
167773 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 25::CD,167774:CD,167775:CD,167778:CD,167779
167778 :: NORM :: compound :: Z :: return v10::CF,167759
167779 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,167778
167776 :: PRED :: IF :: Z :: if (v7 <= v5) goto 38::CD,167779
167797 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseUnaryOperatorExpression(java.lang.String)::CD,167801
167801 :: CALL :: call :: Ljava/util/List :: v4 = parseSubExpression(p1 $operatorExpression )::CL,169551
167807 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseBinaryOperatorExpression(java.lang.String)::CD,167817:CD,167818:CD,167823:CD,167828:CD,167839:CD,167840:CD,167845:CD,167850:CD,167863:CD,167871:CD,167881
167818 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
167817 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
167823 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $expression )::
167828 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
167839 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v31 = new java.lang.IllegalArgumentException::
167840 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
167845 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(p1 $expression )::
167850 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
167863 :: CALL :: call :: Ljava/util/List :: v22 = parseSubExpression(v20)::CL,169551
167871 :: CALL :: call :: Ljava/util/List :: v26 = parseSubExpression(v24)::CL,169551
167881 :: CALL :: call :: Ljava/util/List :: v30 = v27.getOrderedPairs()::CL,169705
167906 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::JM,164831:JM,164901
167905 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::CE,167906:CD,167912
167909 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,167912
167914 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::CE,167915:CD,167921
167915 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::JM,164908
167912 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,167906
167918 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,167921
167923 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setTransformationMatrix(javax.vecmath.Matrix4d)::JM,167928
167921 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,167915
167928 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = p1 $transformation ::
167934 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getM()::CD,167941
167938 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .M::DD,167941
167941 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,167946:CD,167956
167946 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,167950
167950 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .M = v5::
167956 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v9 = p0 $this .getMInv()::CL,169799
168418 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::JM,166231
168417 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,168418:CD,168423:CD,168427:CD,168431:CD,168436:JM,168452:JM,168440:JM,168461
168423 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $t1 .getId()::JM,168423:JM,168452:JM,168436:JM,168427:JM,168440:JM,168431:JM,168461
168427 :: CALL :: call :: Ljava/lang/String :: v8 = p2 $t2 .getId()::JM,168423:JM,168452:JM,168436:JM,168427:JM,168440:JM,168431:JM,168461
168431 :: CALL :: call :: Z :: v10 = v6.equals(v8)::JM,168436:JM,168431:JM,168461
168436 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 43::CD,168440:CD,168444:CD,168452:CD,168456:CD,168461:CD,168462:CD,168463
168437 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .val$chainIds::JM,168461
168440 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $t1 .getChainId()::JM,168423:JM,168452:JM,168436:JM,168427:JM,168440:JM,168431:JM,168461
168444 :: CALL :: call :: I :: v16 = v12.indexOf(v14)::JM,168461:JM,168436:JM,168431
168449 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .val$chainIds::JM,168461
168452 :: CALL :: call :: Ljava/lang/String :: v19 = p2 $t2 .getChainId()::JM,168423:JM,168452:JM,168436:JM,168427:JM,168440:JM,168431:JM,168461
168456 :: CALL :: call :: I :: v21 = v17.indexOf(v19)::JM,168461:JM,168436:JM,168431
168462 :: NORM :: compound :: I :: return v22::CF,168418
168463 :: NORM :: compound :: I :: return #(0)::CF,168418
168461 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v16 - v21::CF,168462
168472 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::CE,168473:CD,168478:CD,168483
168473 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::JM,166249
168478 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,168483
168483 :: NORM :: compound :: I :: return v6::CF,168473
168486 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::CE,168487:CD,168492:CD,168497
168487 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::JM,166267
168492 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,168497
168497 :: NORM :: compound :: I :: return v6::CF,168487
169255 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::DD,169257
169252 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initPath()::CD,169255:CD,169257
169257 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 21::JM,43540:JM,43547
169275 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initServerName()::CD,169278:CD,169280
169278 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.serverName::DD,169280
169280 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 12::CD,169281
169281 :: CALL :: call :: Ljava/lang/String :: v5 = getServerName()::CL,53013
169290 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::CE,169291:CD,169293:CD,169294:CD,169301:CD,169305:CD,169321:CD,169327:CD,169331
169291 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::
169294 :: EXPR :: reference :: Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::
169293 :: NORM :: declaration :: Ljava/io/File :: v2 = new java.io.File::
169301 :: CALL :: call :: Z :: v7 = v2.exists()::JM,169305
169305 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 39::CF,169321:CD,169317
169317 :: CALL :: call :: Z :: v15 = v2.mkdir()::
169321 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::JM,169331
169327 :: CALL :: call :: Ljava/lang/String :: v20 = v16.toString()::JM,169331
169331 :: NORM :: compound :: Ljava/lang/String :: return v20::DD,169291
169348 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFileFromRemote(java.net.URL,java.io.File)::CD,169355:CD,169360:CD,169365:CD,169370:CD,169375
169355 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
169360 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $remoteURL )::
169365 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v9.append(#( to: ))::
169370 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v12.append(p2 $localFile )::
169375 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
169516 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setStandardFlag()::CD,169520
169520 :: CALL :: call :: Z :: v4 = isStandardChemComp(p0 $this )::JM,169524:CL,172331
169524 :: EXPR :: modify :: Z :: p0 $this .standard = v4::
169541 :: CALL :: call :: V :: p0 $this .parse(p1 $reader )::CL,172421
169551 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseSubExpression(java.lang.String)::CD,169555:CD,169561:CD,169567:CD,169572:CD,169577:CD,169578:CD,169583:CD,169588:CD,169597:CD,169601:CD,169632:CD,169636:JM,169610
169555 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $expression .replace(#((), #())::JM,169555:JM,169572:JM,169636:JM,169610:JM,169561:JM,169567
169561 :: CALL :: call :: Ljava/lang/String :: v9 = v6.replace(#()), #())::JM,169572:JM,169636:JM,169610:JM,169561:JM,169567
169567 :: CALL :: call :: [Ljava/lang/String :: v13 = v9.split(#(,))::JM,169572:JM,169636:JM,169610:JM,169567
169572 :: CALL :: call :: Ljava/util/List :: v15 = asList(v13)::JM,169572:JM,169636:JM,169610
169578 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
169577 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v17 = new java.lang.IllegalArgumentException::
169583 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $expression )::JM,169555:JM,169572:JM,169636:JM,169610:JM,169561:JM,169567
169588 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,169572:JM,169636:JM,169610:JM,169561:JM,169567
169597 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::
169601 :: CALL :: call :: Ljava/util/Iterator :: v29 = v15.iterator()::JM,169636:JM,169610
169606 :: CALL :: call :: Ljava/lang/Object :: v34 = v29.next()::JM,169636:JM,169610
169610 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,169616
169611 :: CALL :: call :: Z :: v38 = v35.contains(#(-))::JM,169616
169616 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 117::CD,169617:CD,169621:CD,169627
169617 :: CALL :: call :: Ljava/util/List :: v40 = expandRange(v35)::CL,173310
169621 :: CALL :: call :: Z :: v42 = v26.addAll(v40)::
169627 :: CALL :: call :: Z :: v44 = v26.add(v35)::
169632 :: CALL :: call :: Z :: v31 = v29.hasNext()::JM,169636:JM,169610
169636 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 79::CD,169606:CD,169610:CD,169611:CD,169616:CD,169632:JM,169636
169705 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.CartesianProduct.getOrderedPairs()::CD,169709:CD,169713:CD,169720:CD,169724:CD,169732:CD,169771:CD,169775
169710 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .list1::JM,169724
169709 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
169713 :: CALL :: call :: I :: v6 = v4.size()::JM,169724
169717 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .list2::JM,169724
169720 :: CALL :: call :: I :: v9 = v7.size()::JM,169724
169724 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v6 * v9::
169729 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .list1::JM,169775
169732 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,169775
169737 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,169775
169742 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .list2::JM,169770
169745 :: CALL :: call :: Ljava/util/Iterator :: v23 = v21.iterator()::JM,169770
169750 :: CALL :: call :: Ljava/lang/Object :: v27 = v23.next()::JM,169770
169755 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/OrderedPair :: v29 = new org.biojava.nbio.structure.quaternary.OrderedPair::
169761 :: CALL :: call :: Z :: v32 = v3.add(v29)::
169766 :: CALL :: call :: Z :: v25 = v23.hasNext()::JM,169770
169770 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 66::CD,169750:CD,169755:JM,173415:JM,173418:CD,169761:CD,169766:JM,169770:JM,169775
169771 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,169775
169775 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 41::CD,169737:CD,169745:CD,169766:CD,169770:CD,169771:JM,169775
169799 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMInv()::CD,169806
169803 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Minv::DD,169806
169806 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,169811:CD,169865
169811 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,169882
169865 :: CALL :: call :: D :: v34 = p0 $this .getCstar()::CL,173476
169882 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Minv = v5::
172331 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,172332:CD,172335:CD,172339:CD,172343:CD,172347
172335 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getMon_nstd_parent_comp_id()::JM,172353:JM,172347:JM,172348:CL,132621
172332 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,169524
172339 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $cc .getOne_letter_code()::JM,172354:JM,172360:CL,132612
172343 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v8 = p1 $cc .getPolymerType()::JM,172375:JM,172363:JM,172366:JM,172383:CL,132603
172347 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 29::CD,172348:CD,172353:CD,172354
172348 :: CALL :: call :: Z :: v12 = v4.equals(#(?))::JM,172353:JM,172348
172354 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 88::CD,172355:CD,172360:CD,172390
172355 :: CALL :: call :: Z :: v15 = v6.equals(#(?))::JM,172360
172353 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 88::CD,172354:CD,172390
172363 :: PRED :: IF :: Z :: if (v8 == v16) goto 57::CD,172364:CD,172366:CD,172367:CD,172372
172360 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 88::CD,172361:CD,172363:CD,172390
172361 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v16 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::CF,172363
172366 :: PRED :: IF :: Z :: if (v8 != v17) goto 62::CD,172367:CD,172372:CD,172373:CD,172375
172367 :: CALL :: call :: Z :: v25 = performPeptideCheck(p1 $cc , v6)::JM,172372:CL,173846
172364 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::CF,172366
172375 :: PRED :: IF :: Z :: if (v8 != v18) goto 74::CD,172376:CD,172380:CD,172381:CD,172383
172372 :: NORM :: compound :: Z :: return v25::DD,172332
172373 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v18 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::CF,172375
172376 :: CALL :: call :: Z :: v23 = performRNACheck(p1 $cc )::JM,172380:CL,173885
172383 :: PRED :: IF :: Z :: if (v8 != v19) goto 86::CD,172384:CD,172388:CD,172389
172380 :: NORM :: compound :: Z :: return v23::DD,172332
172381 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v19 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::CF,172383
172384 :: CALL :: call :: Z :: v21 = performDNACheck(p1 $cc )::JM,172388:CL,173904
172390 :: NORM :: compound :: Z :: return #(0)::DD,172332
172388 :: NORM :: compound :: Z :: return v21::DD,172332
172389 :: NORM :: compound :: Z :: return #(0)::DD,172332
172421 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.parse(java.io.BufferedReader)::CD,172426:CD,172431:CD,172435:CD,172439:CD,172861:CD,172866:CD,172871:CD,172915:CD,172966:CD,172970:CD,172994:CD,172995:CD,172996:CD,172997:CD,173002:CD,173003:CD,173004:CD,173005:CD,173006
172426 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
172431 :: CALL :: call :: Ljava/util/regex/Pattern :: v9 = compile(#(^\s*#.*ECOD\s*version...))::
172435 :: CALL :: call :: Ljava/util/regex/Pattern :: v12 = compile(#(^\s*#.*))::
172439 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $in .readLine()::JM,172970:JM,173005
172444 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v9.matcher(v251)::JM,172453
172449 :: CALL :: call :: Z :: v22 = v20.matches()::JM,172453
172454 :: CALL :: call :: Ljava/lang/String :: v38 = v20.group(#(1))::JM,172453
172453 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 78::CD,172454:CD,172463:CD,172468:CD,172472:CD,172998:CD,172999:CD,173000:CD,173001:JM,172453
172463 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v12.matcher(v251)::JM,172472
172468 :: CALL :: call :: Z :: v27 = v25.matches()::JM,172472
172472 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 874::CF,172998:CD,172473:CD,172478:CD,172479
172473 :: CALL :: call :: [Ljava/lang/String :: v30 = v251.split(#(	))::JM,172482:JM,172674:JM,172480:JM,172502:JM,172478
172478 :: EXPR :: assign :: I :: v31 = v30.length::DD,172479
172479 :: PRED :: IF :: Z :: if (v31 == #(13)) goto 131::CD,172480:CD,172481:CD,172484:CD,172489:CD,172493:CD,172497:CD,172502:CD,172503:CD,172544:CD,172549:CD,172554:CD,172555:CD,172599:CD,172600:CD,172614:CD,172615:CD,172629:CD,172630:CD,172644:CD,172645:CD,172659:CD,172664:CD,172669:CD,172674:CD,172675:CD,172681:CD,172690:CD,172699:CD,172708:CD,172717:CD,172726:CD,172731:CD,172736:CD,172787:CD,172792:CD,172830:CD,172852:CD,172977:CD,172979:CD,172984:CD,172986:CD,172991:CD,172992:CD,172998:CD,172999:CD,173000:CD,173001
172482 :: EXPR :: assign :: I :: v35 = v30.length::DD,172483
172483 :: PRED :: IF :: Z :: if (v35 != #(15)) goto 826::CD,172484:CD,172489:CD,172493:CD,172497:CD,172502:CD,172503:CD,172544:CD,172549:CD,172554:CD,172555:CD,172599:CD,172600:CD,172614:CD,172615:CD,172629:CD,172630:CD,172644:CD,172645:CD,172659:CD,172664:CD,172669:CD,172674:CD,172675:CD,172681:CD,172690:CD,172699:CD,172708:CD,172717:CD,172726:CD,172731:CD,172736:CD,172787:CD,172792:CD,172830:CD,172852:CD,172881:CD,172977:CD,172979:CD,172984:CD,172986:CD,172991:CD,172992:CD,172998:CD,172999:CD,173000:CD,173001
172480 :: EXPR :: assign :: I :: v33 = v30.length::DD,172481
172481 :: PRED :: IF :: Z :: if (v33 == #(14)) goto 131::CD,172482:CD,172483:CD,172484:CD,172489:CD,172493:CD,172497:CD,172502:CD,172503:CD,172544:CD,172549:CD,172554:CD,172555:CD,172599:CD,172600:CD,172614:CD,172615:CD,172629:CD,172630:CD,172644:CD,172645:CD,172659:CD,172664:CD,172669:CD,172674:CD,172675:CD,172681:CD,172690:CD,172699:CD,172708:CD,172717:CD,172726:CD,172731:CD,172736:CD,172787:CD,172792:CD,172830:CD,172852:CD,172977:CD,172979:CD,172984:CD,172986:CD,172991:CD,172992:CD,172998:CD,172999:CD,173000:CD,173001
172484 :: EXPR :: assign :: Ljava/lang/Object :: v39 = #(0) + #(1)::DD,172497
172485 :: EXPR :: reference :: Ljava/lang/Object :: v40 = v30[#(0)]::
172489 :: CALL :: call :: J :: v42 = parseLong(v40)::
172493 :: CALL :: call :: Ljava/lang/Long :: v44 = valueOf(v42)::
172497 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v39 + #(1)::DD,172504:DD,172977
172502 :: EXPR :: assign :: I :: v47 = v30.length::DD,172503
172503 :: PRED :: IF :: Z :: if (v47 < #(14)) goto 233::CF,172977:CD,172504:CD,172509:CD,172514
172504 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v45 + #(1)::DD,172977
172505 :: EXPR :: reference :: Ljava/lang/Object :: v49 = v30[v45]::JM,172514:JM,172525
172509 :: CALL :: call :: Z :: v52 = v49.equalsIgnoreCase(#(MANUAL_REP))::JM,172514
172514 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 197::CD,172520:CD,172525:CD,172977
172520 :: CALL :: call :: Z :: v57 = v49.equalsIgnoreCase(#(AUTO_NONREP))::JM,172525
172525 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 212::CD,172534:CD,172977
172534 :: CALL :: call :: Ljava/lang/Integer :: v64 = valueOf(v252)::
172544 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v66 + #(1)::DD,172659
172549 :: CALL :: call :: [Ljava/lang/String :: v72 = v69.split(#(\.))::JM,172614:JM,172599:JM,172644:JM,172629:JM,172554:JM,172556
172554 :: EXPR :: assign :: I :: v73 = v72.length::DD,172555
172555 :: PRED :: IF :: Z :: if (v73 < #(3)) goto 261::CD,172556:CD,172557:CD,172558:CD,172979
172558 :: PRED :: IF :: Z :: if (v249 <= #(1)) goto 294::CD,172567:CD,172577:CD,172579:CD,172979
172556 :: EXPR :: assign :: I :: v76 = v72.length::CF,172557
172557 :: PRED :: IF :: Z :: if (#(4) >= v76) goto 324::CF,172979:CD,172558
172567 :: CALL :: call :: Ljava/lang/Integer :: v83 = valueOf(v252)::
172579 :: PRED :: IF :: Z :: if (v249 == #(0)) goto 324::CF,172979:CD,172588:CD,172598
172577 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v249 + #(-1)::DD,172979
172588 :: CALL :: call :: Ljava/lang/Integer :: v93 = valueOf(v252)::
172598 :: EXPR :: assign :: Ljava/lang/Object :: v95 = v249 + #(-1)::DD,172979
172599 :: EXPR :: assign :: I :: v97 = v72.length::DD,172600
172600 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 346::CD,172605:CD,172609
172601 :: EXPR :: reference :: Ljava/lang/Object :: v98 = v72[#(0)]::
172605 :: CALL :: call :: I :: v100 = parseInt(v98)::
172609 :: CALL :: call :: Ljava/lang/Integer :: v102 = valueOf(v100)::
172614 :: EXPR :: assign :: I :: v104 = v72.length::DD,172615
172615 :: PRED :: IF :: Z :: if (v104 <= #(1)) goto 369::CD,172620:CD,172624
172616 :: EXPR :: reference :: Ljava/lang/Object :: v105 = v72[#(1)]::
172620 :: CALL :: call :: I :: v107 = parseInt(v105)::
172624 :: CALL :: call :: Ljava/lang/Integer :: v109 = valueOf(v107)::
172630 :: PRED :: IF :: Z :: if (v111 <= #(2)) goto 392::CD,172635:CD,172639
172631 :: EXPR :: reference :: Ljava/lang/Object :: v113 = v72[#(2)]::
172629 :: EXPR :: assign :: I :: v111 = v72.length::DD,172630
172635 :: CALL :: call :: I :: v115 = parseInt(v113)::
172639 :: CALL :: call :: Ljava/lang/Integer :: v117 = valueOf(v115)::
172646 :: EXPR :: reference :: Ljava/lang/Object :: v120 = v72[#(3)]::
172644 :: EXPR :: assign :: I :: v119 = v72.length::DD,172645
172645 :: PRED :: IF :: Z :: if (v119 <= #(3)) goto 417::CD,172650:CD,172654
172650 :: CALL :: call :: I :: v122 = parseInt(v120)::
172654 :: CALL :: call :: Ljava/lang/Integer :: v124 = valueOf(v122)::
172659 :: EXPR :: assign :: Ljava/lang/Object :: v126 = v68 + #(1)::DD,172664
172664 :: EXPR :: assign :: Ljava/lang/Object :: v128 = v126 + #(1)::DD,172669
172669 :: EXPR :: assign :: Ljava/lang/Object :: v130 = v128 + #(1)::DD,172676:DD,172984
172674 :: EXPR :: assign :: I :: v132 = v30.length::DD,172675
172675 :: PRED :: IF :: Z :: if (v132 < #(15)) goto 468::CF,172984:CD,172676
172676 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v130 + #(1)::DD,172984
172681 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v135 + #(1)::DD,172690
172690 :: EXPR :: assign :: Ljava/lang/Object :: v141 = v137 + #(1)::DD,172699
172699 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v141 + #(1)::DD,172708
172708 :: EXPR :: assign :: Ljava/lang/Object :: v149 = v145 + #(1)::DD,172717
172717 :: EXPR :: assign :: Ljava/lang/Object :: v153 = v149 + #(1)::DD,172726
172726 :: EXPR :: assign :: Ljava/lang/Object :: v157 = v153 + #(1)::
172727 :: EXPR :: reference :: Ljava/lang/Object :: v158 = v30[v153]::JM,172736:JM,172743
172731 :: CALL :: call :: Z :: v161 = v158.equals(#(NOT_DOMAIN_ASSEMBLY))::JM,172736
172738 :: CALL :: call :: Z :: v164 = v158.equals(#(IS_DOMAIN_ASSEMBLY))::JM,172743
172736 :: PRED :: IF :: Z :: if (v161 == #(0)) goto 563::CD,172738:CD,172743:CD,172986
172743 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 624::CD,172744:CD,172774:CD,172778:CD,172986
172744 :: PRED :: IF :: Z :: if (v248 <= #(1)) goto 598::CD,172748:CD,172757:CD,172759:CD,172986
172748 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v252)::
172759 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 636::CF,172986:CD,172763:CD,172772
172757 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v248 + #(-1)::DD,172986
172763 :: CALL :: call :: Ljava/lang/Integer :: v176 = valueOf(v252)::
172774 :: CALL :: call :: J :: v180 = parseLong(v158)::
172772 :: EXPR :: assign :: Ljava/lang/Object :: v178 = v248 + #(-1)::DD,172986
172778 :: CALL :: call :: Ljava/lang/Long :: v182 = valueOf(v180)::
172783 :: EXPR :: reference :: Ljava/lang/Object :: v186 = v30[v157]::JM,172792:JM,172793:JM,172797
172787 :: CALL :: call :: Z :: v189 = v186.equals(#(NO_LIGANDS_4A))::JM,172792
172792 :: PRED :: IF :: Z :: if (v189 != #(0)) goto 663::CD,172793:CD,172797:CD,172991:CD,172992
172793 :: CALL :: call :: Z :: v191 = v186.isEmpty()::JM,172793:JM,172797
172797 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 675::CD,172802:CD,172807:CD,172808:CD,172813:CD,172829:CD,172988:CD,172989:CD,172990:CD,172991:CD,172992
172802 :: CALL :: call :: [Ljava/lang/String :: v194 = v186.split(#(,))::JM,172808:JM,172813
172807 :: NORM :: declaration :: Ljava/util/LinkedHashSet :: v195 = new java.util.LinkedHashSet::CF,172808
172808 :: EXPR :: assign :: I :: v196 = v194.length::
172813 :: EXPR :: assign :: I :: v198 = v194.length::DD,172829
172823 :: CALL :: call :: Z :: v203 = v195.add(v201)::
172830 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v209 = new org.biojava.nbio.structure.ecod.EcodDomain::
172828 :: EXPR :: assign :: Ljava/lang/Object :: v204 = v205 + #(1)::DD,172990:CF,172988
172829 :: PRED :: IF :: Z :: if (v205 < v198) goto 710::CF,172991:CD,172823:CD,172828:CD,172988:CD,172989:CD,172990
172852 :: CALL :: call :: Z :: v212 = v4.add(v209)::
172861 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v219 = new java.lang.StringBuilder::
172866 :: CALL :: call :: Ljava/lang/StringBuilder :: v223 = v219.append(v261)::
172871 :: CALL :: call :: Ljava/lang/String :: v225 = v223.toString()::
172881 :: PRED :: IF :: Z :: if (v250 <= #(1)) goto 852::CD,172885:CD,172894:CD,172896:CD,172998:CD,172999:CD,173000:CD,173001
172885 :: CALL :: call :: Ljava/lang/Integer :: v231 = valueOf(v252)::
172894 :: EXPR :: assign :: Ljava/lang/Object :: v233 = v250 + #(-1)::DD,173000
172896 :: PRED :: IF :: Z :: if (v250 != #(0)) goto 874::CF,172998:CD,172900:CD,172909:CD,172999:CD,173000:CD,173001
172900 :: CALL :: call :: Ljava/lang/Integer :: v238 = valueOf(v252)::
172910 :: CALL :: call :: Ljava/lang/String :: v246 = p1 $in .readLine()::JM,172970:JM,173005
172909 :: EXPR :: assign :: Ljava/lang/Object :: v240 = v248 + #(-1)::DD,172998
172914 :: EXPR :: assign :: Ljava/lang/Object :: v247 = v263 + #(1)::DD,173006:CF,173002
172915 :: PRED :: IF :: Z :: if (v251 != #(null)) goto 48::CD,172444:CD,172449:CD,172453:CD,172910:CD,172914:CD,172998:CD,172999:CD,173000:CD,173001:CD,173002:CD,173003:CD,173004:CD,173005:CD,173006
172966 :: CALL :: call :: V :: p1 $in .close()::JM,172970:JM,173005
172970 :: PRED :: IF :: Z :: if (p1 $in  == #(null)) goto 967::CD,172971:JM,173005
172971 :: CALL :: call :: V :: p1 $in .close()::JM,173005
172979 :: EXPR :: assign :: null :: PHI v96 = v249, v86, v249, v95::CF,172599:DD,172995:DD,172999
172977 :: EXPR :: assign :: null :: PHI v66 = v45, v48, v48, v48::DD,172544
172986 :: EXPR :: assign :: null :: PHI v183 = v248, v171, v248, v178, v248::DD,172994:DD,172998
172984 :: EXPR :: assign :: null :: PHI v135 = v130, v133::DD,172681
172990 :: EXPR :: assign :: null :: PHI v205 = #(0), v204::DD,172828:DD,172829
172991 :: EXPR :: assign :: null :: PHI v256 = v250, v253::CF,172992:DD,172996:DD,173000
172988 :: EXPR :: assign :: null :: PHI v253 = v250, v253::CF,172989:DD,172988:DD,172991:DD,172996
172989 :: EXPR :: assign :: null :: PHI v255 = v252, v255::CF,172990:DD,172989:DD,172992:DD,172997
172994 :: EXPR :: assign :: null :: PHI v214 = v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v183, v183, v183, v183, v183, v183, v183, v183, v183::DD,172998
172995 :: EXPR :: assign :: null :: PHI v215 = v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96::DD,172999
172992 :: EXPR :: assign :: null :: PHI v258 = v252, v255::DD,172997:DD,173001
172998 :: EXPR :: assign :: null :: PHI v241 = v248, v248, v183, v214, v248, v248, v240::CF,172999:DD,173002
172999 :: EXPR :: assign :: null :: PHI v242 = v249, v249, v96, v215, v249, v249, v249::CF,173000:DD,173003
172996 :: EXPR :: assign :: null :: PHI v259 = v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v253, v253, v256, v256::DD,173000
172997 :: EXPR :: assign :: null :: PHI v261 = v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v255, v255, v258, v258::DD,173001
173002 :: EXPR :: assign :: null :: PHI v248 = #(1), v241::CF,173003:DD,172744:DD,172757:DD,172759:DD,172772:DD,172909:DD,172986:DD,172994:DD,172998
173003 :: EXPR :: assign :: null :: PHI v249 = #(5), v242::CF,173004:DD,172558:DD,172577:DD,172579:DD,172598:DD,172979:DD,172995:DD,172999
173000 :: EXPR :: assign :: null :: PHI v243 = v250, v250, v256, v259, v233, v250, v250::CF,173001:DD,173004
173001 :: EXPR :: assign :: null :: PHI v263 = v252, v252, v258, v261, v252, v252, v252::JM,172970:JM,173005:DD,172914
173006 :: EXPR :: assign :: null :: PHI v252 = #(1), v247::DD,172989:DD,172992:DD,172997:DD,173001:CF,172915
173004 :: EXPR :: assign :: null :: PHI v250 = #(10), v243::CF,173005:DD,172881:DD,172894:DD,172896:DD,172988:DD,172991:DD,172996:DD,173000
173005 :: EXPR :: assign :: null :: PHI v251 = v17, v246::CF,173006:DD,172915
173310 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::CE,173311:CD,173314:CD,173323:CD,173331:CD,173336:CD,173337:CD,173342:CD,173347:CD,173356:CD,173357:CD,173358:CD,173374:CD,173375:CD,173377
173311 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::
173314 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $expression .split(#(-))::
173319 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[#(0)]::JM,173377:JM,173357
173323 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,173377:JM,173357
173327 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v6[#(1)]::JM,173374:JM,173357
173331 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,173374:JM,173357
173336 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v16 = new java.lang.IllegalArgumentException::
173337 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
173342 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $expression )::
173347 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
173358 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v26 + #(1)::
173356 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,173375:CF,173357
173357 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v13 - v9::DD,173358
173364 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v34)::
173368 :: CALL :: call :: Z :: v32 = v25.add(v30)::
173374 :: PRED :: IF :: Z :: if (v34 <= v13) goto 75::CD,173364:CD,173368:CD,173373:CD,173377:CF,173375
173375 :: NORM :: compound :: Ljava/util/List :: return v25::DD,173311
173373 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v34 + #(1)::DD,173377
173377 :: EXPR :: assign :: null :: PHI v34 = v9, v33::DD,173373:DD,173374
173415 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element1 = p1 $element1 ::
173418 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element2 = p2 $element2 ::
173476 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getCstar()::CD,173495
173495 :: CALL :: call :: D :: v11 = p0 $this .getVolume()::CL,174070
173846 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::CE,173847:CD,173851:CD,173853:CD,173857:CD,173862
173847 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::JM,172372
173851 :: EXPR :: reference :: Ljava/lang/Character :: v4 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_ONE_LETTER_CODE::JM,173862
173853 :: CALL :: call :: Ljava/lang/String :: v6 = v4.toString()::JM,173862
173857 :: CALL :: call :: Z :: v8 = p2 $one .equals(v6)::JM,173862
173862 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 16::CD,173863:CD,173868:CD,173872
173863 :: NORM :: compound :: Z :: return #(0)::DD,173847
173868 :: CALL :: call :: Ljava/lang/Character :: v13 = getAminoOneLetter(v11)::JM,173872:CL,175232
173874 :: NORM :: compound :: Z :: return #(1)::DD,173847
173872 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 30::CD,173873:CD,173874
173873 :: NORM :: compound :: Z :: return #(0)::DD,173847
173886 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,172380
173885 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,173886:CD,173889:CD,173893:CD,173897
173889 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,173897:CL,120710
173893 :: CALL :: call :: I :: v6 = v4.length()::JM,173897
173898 :: NORM :: compound :: Z :: return #(1)::CF,173886
173899 :: NORM :: compound :: Z :: return #(0)::CF,173886
173897 :: PRED :: IF :: Z :: if (v6 != #(1)) goto 14::CD,173898:CD,173899
173904 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,173905:CD,173908:CD,173912:CD,173914:CD,173918:CD,173923
173905 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,172388
173908 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,173923:CL,120710
173914 :: CALL :: call :: Ljava/lang/String :: v7 = v5.toString()::JM,173923
173912 :: EXPR :: reference :: Ljava/lang/Character :: v5 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_NUCLEOTIDE::JM,173923
173918 :: CALL :: call :: Z :: v9 = v4.equals(v7)::JM,173923
173923 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,173924:CD,173929:CD,173933
173924 :: NORM :: compound :: Z :: return #(0)::DD,173905
173929 :: CALL :: call :: Ljava/lang/Character :: v14 = getDNAOneLetter(v12)::JM,173933:CL,175247
173934 :: NORM :: compound :: Z :: return #(0)::DD,173905
173935 :: NORM :: compound :: Z :: return #(1)::DD,173905
173933 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 33::CD,173934:CD,173935
174070 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getVolume()::CD,174077:CD,174078
174074 :: EXPR :: reference :: D :: v3 = p0 $this .volume::DD,174077
174078 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 16::CD,174089:CD,174093:CD,174097:CD,174104:CD,174108:CD,174109:CD,174113:CD,174120:CD,174124:CD,174125:CD,174129:CD,174136:CD,174140:CD,174141:CD,174145:CD,174149:CD,174153:CD,174157:CD,174161:CD,174165:CD,174166:CD,174167:CD,174171
174077 :: EXPR :: assign :: Z :: v5 = v3 < #(0.0 d)::DD,174078
174083 :: EXPR :: reference :: D :: v7 = p0 $this .a::DD,174089
174086 :: EXPR :: reference :: D :: v8 = p0 $this .b::DD,174089
174090 :: EXPR :: reference :: D :: v10 = p0 $this .c::DD,174093
174089 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 * v8::DD,174093
174094 :: EXPR :: reference :: D :: v13 = p0 $this .alphaRad::JM,174097:JM,174108
174093 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 * v10::DD,174171
174097 :: CALL :: call :: D :: v15 = cos(v13)::JM,174097:JM,174108
174101 :: EXPR :: reference :: D :: v16 = p0 $this .alphaRad::JM,174104:JM,174108
174104 :: CALL :: call :: D :: v18 = cos(v16)::JM,174104:JM,174108
174110 :: EXPR :: reference :: D :: v21 = p0 $this .betaRad::JM,174113:JM,174124
174108 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v15 * v18::CF,174109
174109 :: EXPR :: assign :: Ljava/lang/Object :: v20 = #(1.0 d) - v19::DD,174125
174113 :: CALL :: call :: D :: v23 = cos(v21)::JM,174113:JM,174124
174117 :: EXPR :: reference :: D :: v24 = p0 $this .betaRad::JM,174120:JM,174124
174120 :: CALL :: call :: D :: v26 = cos(v24)::JM,174120:JM,174124
174126 :: EXPR :: reference :: D :: v29 = p0 $this .gammaRad::JM,174129:JM,174140
174124 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v23 * v26::CF,174125
174125 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v20 - v27::DD,174141
174129 :: CALL :: call :: D :: v31 = cos(v29)::JM,174129:JM,174140
174133 :: EXPR :: reference :: D :: v32 = p0 $this .gammaRad::JM,174136:JM,174140
174136 :: CALL :: call :: D :: v34 = cos(v32)::JM,174136:JM,174140
174142 :: EXPR :: reference :: D :: v38 = p0 $this .alphaRad::JM,174145:JM,174149
174140 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v31 * v34::CF,174141
174141 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v28 - v35::DD,174166
174145 :: CALL :: call :: D :: v40 = cos(v38)::JM,174145:JM,174149
174150 :: EXPR :: reference :: D :: v42 = p0 $this .betaRad::JM,174153:JM,174157
174149 :: EXPR :: assign :: Ljava/lang/Object :: v41 = #(2.0 d) * v40::DD,174157
174153 :: CALL :: call :: D :: v44 = cos(v42)::JM,174153:JM,174157
174158 :: EXPR :: reference :: D :: v46 = p0 $this .gammaRad::JM,174161:JM,174165
174157 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v41 * v44::DD,174165
174161 :: CALL :: call :: D :: v48 = cos(v46)::JM,174161:JM,174165
174166 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v36 + v49::JM,174167:JM,174171
174167 :: CALL :: call :: D :: v52 = sqrt(v50)::JM,174167:JM,174171
174165 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v45 * v48::CF,174166
174171 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v11 * v52::DD,174172
174172 :: EXPR :: modify :: D :: p0 $this .volume = v53::
175232 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::CE,175233:CD,175238:CD,175243:CD,175244
175233 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::JM,173872
175238 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,175243
175243 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,175244
175247 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::CE,175248:CD,175253:CD,175258:CD,175259
175244 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,175233
175248 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::JM,173933
175253 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,175258
175258 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,175259
175259 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,175248
