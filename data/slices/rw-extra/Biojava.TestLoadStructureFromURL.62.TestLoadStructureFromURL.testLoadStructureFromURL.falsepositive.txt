[82]
1 :: ENTR :: entry :: null :: org.biojava.nbio.structure.TestLoadStructureFromURL.testLoadStructureFromURL()::JM,29555:JM,29548:CD,9:CD,13:CD,19:CD,22:CD,26:CD,69:CD,74:CD,76:CD,92:CD,150:CD,151
9 :: CALL :: call :: Ljava/lang/String :: v6 = v3.getCacheFilePath()::CL,29577
13 :: NORM :: declaration :: Ljava/io/File :: v7 = new java.io.File::DD,150
19 :: CALL :: call :: V :: v7.deleteOnExit()::
22 :: CALL :: call :: Z :: v12 = v7.exists()::JM,26
26 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 60::CD,29:CD,34:CD,39
29 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
34 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v15.append(v7)::
39 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
69 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v34 = v25.getStructure(#(1znf))::CL,29875
74 :: EXPR :: reference :: [Ljava/lang/String :: v35 = org.biojava.nbio.structure.io.PDBFileReader.PDB_SPLIT_DIR::DD,76
76 :: EXPR :: assign :: I :: v36 = v35.length::DD,92
78 :: EXPR :: reference :: Ljava/lang/Object :: v37 = v35[v44]::
82 :: NORM :: declaration :: Ljava/io/File :: v38 = new java.io.File::DD,150
91 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v44 + #(1)::DD,151:CF,150
92 :: PRED :: IF :: Z :: if (v44 < v36) goto 110::CD,82:CD,91:CD,150:CD,151
150 :: EXPR :: assign :: null :: PHI v43 = v7, v38::CF,151
151 :: EXPR :: assign :: null :: PHI v44 = #(0), v42::DD,91:DD,92
728 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.<clinit>()::CD,731:CD,748:CD,750
731 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::DD,748
732 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
736 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
740 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
744 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(pdb)::
748 :: EXPR :: modify :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.PDB_SPLIT_DIR = v3::
750 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
751 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
755 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
759 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
763 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(pdb)::
798 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.<clinit>()::CD,802:CD,837:CD,842:CD,846:CD,851:CD,868
802 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
837 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
842 :: CALL :: call :: Ljava/lang/String :: v27 = v21.getMessage()::
846 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(v27)::
851 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
868 :: EXPR :: assign :: Ljava/lang/Exception :: v21 = catch <exc>::
891 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.<clinit>()::CD,894:CD,900:CD,902:CD,908:CD,910:CD,916:CD,918:CD,924:CD,926:CD,932:CD,934:CD,935:CD,941:CD,947:CD,953:CD,959
894 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,900
900 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY = v2::
902 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,908
908 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES = v6::
910 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,916
916 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED = v10::
918 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,924
924 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED = v14::
926 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v18 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior::DD,932
932 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD = v18::
934 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v23 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::
935 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v24 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::DD,937
937 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(0)] = v24::
941 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v25 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::DD,943
943 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(1)] = v25::
947 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::DD,949
949 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(2)] = v26::
953 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v27 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::DD,955
955 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(3)] = v27::
959 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v28 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::DD,961
961 :: EXPR :: modify :: Ljava/lang/Object :: v23[#(4)] = v28::
1010 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.ObsoleteBehavior.<clinit>()::CD,1013:CD,1019:CD,1021:CD,1027:CD,1029:CD,1035:CD,1037:CD,1038:CD,1044:CD,1050
1013 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v2 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1019
1019 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT = v2::
1021 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v6 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1027
1027 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE = v6::
1029 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v10 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior::DD,1035
1035 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION = v10::
1037 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v15 = new org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior[]::
1038 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v16 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::DD,1040
1040 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(0)] = v16::
1044 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v17 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::DD,1046
1046 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(1)] = v17::
1050 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.THROW_EXCEPTION::DD,1052
1052 :: EXPR :: modify :: Ljava/lang/Object :: v15[#(2)] = v18::
1154 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.<clinit>()::CD,1164:CD,1171:CD,1178
1164 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^(?:CATH:)?([0-9][a-z...), #(2))::
1171 :: CALL :: call :: Ljava/util/regex/Pattern :: v11 = compile(#(^(?:SCOP:)?d([0-9][a-...), #(2))::
1178 :: CALL :: call :: Ljava/util/regex/Pattern :: v14 = compile(#(^(?:ECOD:)?e([0-9][a-...), #(2))::
1200 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
1261 :: CALL :: call :: J :: v35 = lowMask(#(-_.!~*'()))::
1267 :: CALL :: call :: J :: v37 = highMask(#(-_.!~*'()))::
1287 :: CALL :: call :: J :: v46 = lowMask(#(;/?:@&=+$,[]))::
1293 :: CALL :: call :: J :: v48 = highMask(#(;/?:@&=+$,[]))::
1317 :: CALL :: call :: J :: v61 = lowMask(#(:@&=+$,))::
1326 :: CALL :: call :: J :: v65 = highMask(#(:@&=+$,))::
1335 :: CALL :: call :: J :: v70 = lowMask(#(;/))::
1344 :: CALL :: call :: J :: v74 = highMask(#(;/))::
1351 :: CALL :: call :: J :: v78 = lowMask(#(-))::
1357 :: CALL :: call :: J :: v80 = highMask(#(-))::
1363 :: CALL :: call :: J :: v83 = lowMask(#(.))::
1369 :: CALL :: call :: J :: v85 = highMask(#(.))::
1378 :: CALL :: call :: J :: v90 = lowMask(#(;:&=+$,))::
1387 :: CALL :: call :: J :: v94 = highMask(#(;:&=+$,))::
1397 :: CALL :: call :: J :: v100 = lowMask(#($,;:@&=+))::
1406 :: CALL :: call :: J :: v104 = highMask(#($,;:@&=+))::
1421 :: CALL :: call :: J :: v113 = lowMask(#(.:@[]))::
1436 :: CALL :: call :: J :: v121 = highMask(#(.:@[]))::
1445 :: CALL :: call :: J :: v126 = lowMask(#(%))::
1454 :: CALL :: call :: J :: v130 = highMask(#(%))::
1461 :: CALL :: call :: J :: v134 = lowMask(#([))::
1467 :: CALL :: call :: J :: v136 = highMask(#([))::
1475 :: CALL :: call :: J :: v140 = lowMask(#(+-.))::
1484 :: CALL :: call :: J :: v144 = highMask(#(+-.))::
1494 :: CALL :: call :: J :: v150 = lowMask(#(;?:@&=+$,))::
1503 :: CALL :: call :: J :: v154 = highMask(#(;?:@&=+$,))::
1510 :: NORM :: declaration :: [C :: v157 = new []::
1511 :: EXPR :: modify :: C :: v157[#(0)] = #(48)::
1515 :: EXPR :: modify :: C :: v157[#(1)] = #(49)::
1519 :: EXPR :: modify :: C :: v157[#(2)] = #(50)::
1523 :: EXPR :: modify :: C :: v157[#(3)] = #(51)::
1527 :: EXPR :: modify :: C :: v157[#(4)] = #(52)::
1531 :: EXPR :: modify :: C :: v157[#(5)] = #(53)::
1535 :: EXPR :: modify :: C :: v157[#(6)] = #(54)::
1539 :: EXPR :: modify :: C :: v157[#(7)] = #(55)::
1543 :: EXPR :: modify :: C :: v157[#(8)] = #(56)::
1547 :: EXPR :: modify :: C :: v157[#(9)] = #(57)::
1551 :: EXPR :: modify :: C :: v157[#(10)] = #(65)::
1555 :: EXPR :: modify :: C :: v157[#(11)] = #(66)::
1559 :: EXPR :: modify :: C :: v157[#(12)] = #(67)::
1563 :: EXPR :: modify :: C :: v157[#(13)] = #(68)::
1567 :: EXPR :: modify :: C :: v157[#(14)] = #(69)::
1571 :: EXPR :: modify :: C :: v157[#(15)] = #(70)::
1873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.<clinit>()::CD,1876:CD,1882:CD,1884:CD,1890:CD,1892:CD,1898:CD,1900:CD,1906:CD,1908:CD,1914:CD,1916:CD,1922:CD,1924:CD,1930:CD,1932:CD,1938:CD,1940:CD,1941:CD,1947:CD,1953:CD,1959:CD,1965:CD,1971:CD,1977:CD,1983
1876 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,1882
1882 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDB = v2::
1884 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v6 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,1890
1890 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.SCOP = v6::
1892 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v10 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,1898
1898 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.PDP = v10::
1900 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,1906
1906 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.CATH = v14::
1908 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v18 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,1914
1914 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.URL = v18::
1916 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v22 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,1922
1922 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.FILE = v22::
1924 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,1930
1930 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.ECOD = v26::
1932 :: NORM :: declaration :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v30 = new org.biojava.nbio.structure.align.client.StructureName$Source::DD,1938
1938 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName$Source.BIO = v30::
1940 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v35 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::
1941 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v36 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::DD,1943
1943 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
1947 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v37 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::DD,1949
1949 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = v37::
1953 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::DD,1955
1955 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = v38::
1959 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v39 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::DD,1961
1961 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = v39::
1965 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v40 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::DD,1967
1967 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = v40::
1971 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v41 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::DD,1973
1973 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(5)] = v41::
1977 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v42 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::DD,1979
1979 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(6)] = v42::
1983 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v43 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::DD,1985
1985 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(7)] = v43::
2092 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.<clinit>()::CD,2095
2095 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:PDP:)([0-9][a-z0-...), #(2))::
2106 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.<clinit>()::CD,2109
2109 :: CALL :: call :: Ljava/util/regex/Pattern :: v5 = compile(#(^(?:BIO:)([0-9][a-z0-...), #(2))::
2132 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.<clinit>()::CD,2142
2142 :: CALL :: call :: Ljava/util/regex/Pattern :: v8 = compile(#(^([0-9][a-z0-9]{3})([...), #(2))::
2154 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.<clinit>()::CD,2157
2157 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
2166 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.<clinit>()::CD,2176:CD,2180
2176 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::JM,2180
2180 :: CALL :: call :: Ljava/util/Map :: v8 = synchronizedMap(v5)::JM,2180
2194 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.<clinit>()::CD,2204
2204 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
2218 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.<clinit>()::CD,2221:CD,2227
2221 :: CALL :: call :: Ljava/util/regex/Pattern :: v4 = compile(#(^\s*([a-zA-Z0-9]+|_)(...))::
2227 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^\s*([a-zA-Z0-9]+|_)$))::
2297 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.<clinit>()::CD,2307:CD,2323
2307 :: CALL :: call :: Lorg/biojava/nbio/structure/align/util/ResourceManager :: v7 = getResourceManager(#(jfatcat))::CL,30353
2323 :: NORM :: declaration :: Ljava/util/Random :: v13 = new java.util.Random::
2526 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.<clinit>()::CD,2536
2536 :: CALL :: call :: Ljava/util/regex/Pattern :: v7 = compile(#(^e(....).+\d+$))::
7999 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.<clinit>()::CD,8002:CD,8010:CD,8015:CD,8023:CD,8028:CD,8036:CD,8041
8002 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
8010 :: NORM :: declaration :: [Ljava/lang/String :: v7 = new java.lang.String[]::
8011 :: EXPR :: modify :: Ljava/lang/Object :: v7[#(0)] = #(1.75A)::
8015 :: CALL :: call :: Ljava/lang/Object :: v11 = v4.put(#(2.01), v7)::
8023 :: NORM :: declaration :: [Ljava/lang/String :: v14 = new java.lang.String[]::
8024 :: EXPR :: modify :: Ljava/lang/Object :: v14[#(0)] = #(1.75B)::
8028 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.put(#(2.02), v14)::
8036 :: NORM :: declaration :: [Ljava/lang/String :: v20 = new java.lang.String[]::
8037 :: EXPR :: modify :: Ljava/lang/Object :: v20[#(0)] = #(1.75C)::
8041 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.put(#(2.03), v20)::
14531 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.<clinit>()::CD,14534:JM,36513:JM,39171:JM,39235:JM,36517:JM,36521:JM,36525:JM,32397:JM,36529:JM,39185:JM,39249:JM,39221:JM,36509:JM,39229:JM,30605:CD,14549:CD,14551:JM,36561:JM,36565:JM,36569:JM,36557:CD,14566:CD,14568:CD,14578:CD,14580:CD,14581:CD,14587:CD,14593
14534 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,14549
14549 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB = v2::
14551 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v10 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,14566
14566 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF = v10::
14568 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v18 = new org.biojava.nbio.structure.StructureIO$StructureFiletype::DD,14578
14578 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN = v18::
14580 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v25 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::
14581 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v26 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::DD,14583
14583 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(0)] = v26::
14587 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::DD,14589
14589 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(1)] = v27::
14593 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v28 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,14595
14595 :: EXPR :: modify :: Ljava/lang/Object :: v25[#(2)] = v28::
14691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.<clinit>()::CD,14694:CD,14713
14694 :: NORM :: declaration :: [Ljava/lang/String :: v3 = new java.lang.String[]::
14695 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(0)] = #(data)::
14699 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(1)] = #(structures)::
14703 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(2)] = #(divided)::
14707 :: EXPR :: modify :: Ljava/lang/Object :: v3[#(3)] = #(mmCIF)::
14713 :: NORM :: declaration :: [Ljava/lang/String :: v12 = new java.lang.String[]::
14714 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(0)] = #(data)::
14718 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(1)] = #(structures)::
14722 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(2)] = #(obsolete)::
14726 :: EXPR :: modify :: Ljava/lang/Object :: v12[#(3)] = #(mmCIF)::
14785 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.<clinit>()::CD,14801:CD,14802:CD,14843:CD,14853:CD,14854:CD,14875:CD,14885:CD,14886:CD,15023
14801 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::CF,14802
14802 :: NORM :: declaration :: [Ljava/lang/String :: v10 = new java.lang.String[]::JM,14843
14803 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(0)] = #(MOL_ID:)::
14807 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(1)] = #(MOLECULE:)::
14811 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(2)] = #(CHAIN:)::
14815 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(3)] = #(SYNONYM:)::
14819 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(4)] = #(EC:)::
14823 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(5)] = #(FRAGMENT:)::
14827 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(6)] = #(ENGINEERED:)::
14831 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(7)] = #(MUTATION:)::
14835 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(8)] = #(BIOLOGICAL_UNIT:)::
14839 :: EXPR :: modify :: Ljava/lang/Object :: v10[#(9)] = #(OTHER_DETAILS:)::
14843 :: CALL :: call :: Ljava/util/List :: v32 = asList(v10)::JM,14843
14853 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::CF,14854
14854 :: NORM :: declaration :: [Ljava/lang/String :: v35 = new java.lang.String[]::JM,14875
14855 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = #(HETEROGEN:)::
14859 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(1)] = #(ENGINEEREED:)::
14863 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(2)] = #(FRAGMENT,)::
14867 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(3)] = #(MUTANT:)::
14871 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(4)] = #(SYNTHETIC:)::
14875 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,14875
14885 :: NORM :: declaration :: Ljava/util/ArrayList :: v44 = new java.util.ArrayList::CF,14886
14886 :: NORM :: declaration :: [Ljava/lang/String :: v46 = new java.lang.String[]::JM,15023
14887 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(0)] = #(ENGINEERED:)::
14891 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(1)] = #(MOL_ID:)::
14895 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(2)] = #(SYNTHETIC:)::
14899 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(3)] = #(FRAGMENT:)::
14903 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(4)] = #(ORGANISM_SCIENTIFIC:)::
14907 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(5)] = #(ORGANISM_COMMON:)::
14911 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(6)] = #(ORGANISM_TAXID:)::
14915 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(7)] = #(STRAIN:)::
14919 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(8)] = #(VARIANT:)::
14923 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(9)] = #(CELL_LINE:)::
14927 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(10)] = #(ATCC:)::
14931 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(11)] = #(ORGAN:)::
14935 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(12)] = #(TISSUE:)::
14939 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(13)] = #(CELL:)::
14943 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(14)] = #(ORGANELLE:)::
14947 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(15)] = #(SECRETION:)::
14951 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(16)] = #(GENE:)::
14955 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(17)] = #(CELLULAR_LOCATION:)::
14959 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(18)] = #(EXPRESSION_SYSTEM:)::
14963 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(19)] = #(EXPRESSION_SYSTEM_TAXID:)::
14967 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(20)] = #(EXPRESSION_SYSTEM_STRAIN:)::
14971 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(21)] = #(EXPRESSION_SYSTEM_VAR...)::
14975 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(22)] = #(EXPRESSION_SYSTEM_CEL...)::
14979 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(23)] = #(EXPRESSION_SYSTEM_ATC...)::
14983 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(24)] = #(EXPRESSION_SYSTEM_ORGAN:)::
14987 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(25)] = #(EXPRESSION_SYSTEM_TISSUE:)::
14991 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(26)] = #(EXPRESSION_SYSTEM_CELL:)::
14995 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(27)] = #(EXPRESSION_SYSTEM_ORG...)::
14999 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(28)] = #(EXPRESSION_SYSTEM_CEL...)::
15003 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(29)] = #(EXPRESSION_SYSTEM_VEC...)::
15007 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(30)] = #(EXPRESSION_SYSTEM_VECTOR:)::
15011 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(31)] = #(EXPRESSION_SYSTEM_PLA...)::
15015 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(32)] = #(EXPRESSION_SYSTEM_GENE:)::
15019 :: EXPR :: modify :: Ljava/lang/Object :: v46[#(33)] = #(OTHER_DETAILS:)::
15023 :: CALL :: call :: Ljava/util/List :: v100 = asList(v46)::JM,15023
15225 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.<clinit>()::CD,15229:CD,15244
15229 :: CALL :: call :: Z :: v4 = v2.desiredAssertionStatus()::
15244 :: NORM :: declaration :: Ljava/util/Hashtable :: v11 = new java.util.Hashtable::
15259 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.<clinit>()::CD,15262:CD,15268:CD,15270:CD,15276:CD,15278:CD,15284:CD,15286:CD,15292:CD,15294:CD,15300:CD,15302:CD,15308:CD,15310:CD,15316:CD,15318:CD,15324:CD,15326:CD,15332:CD,15334:CD,15340:CD,15342:CD,15348:CD,15350:CD,15356:CD,15358:CD,15364:CD,15366:CD,15367:CD,15373:CD,15379:CD,15385:CD,15391:CD,15397:CD,15403:CD,15409:CD,15415:CD,15421:CD,15427:CD,15433:CD,15439
15262 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15268
15268 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE = v2::
15270 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v6 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15276
15276 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.CURRENT = v6::
15278 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v10 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15284
15284 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.AUTH = v10::
15286 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15292
15292 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HOLD = v14::
15294 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v18 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15300
15300 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.HPUB = v18::
15302 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v22 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15308
15308 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.POLC = v22::
15310 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15316
15316 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.PROC = v26::
15318 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v30 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15324
15324 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REFI = v30::
15326 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v34 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15332
15332 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.REPL = v34::
15334 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15340
15340 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WAIT = v38::
15342 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v42 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15348
15348 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.WDRN = v42::
15350 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v46 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15356
15356 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.MODEL = v46::
15358 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = new org.biojava.nbio.structure.PDBStatus$Status::DD,15364
15364 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN = v50::
15366 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v55 = new org.biojava.nbio.structure.PDBStatus$Status[]::
15367 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,15369
15369 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(0)] = v56::
15373 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,15375
15375 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(1)] = v57::
15379 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,15381
15381 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(2)] = v58::
15385 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,15387
15387 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(3)] = v59::
15391 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,15393
15393 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(4)] = v60::
15397 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,15399
15399 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(5)] = v61::
15403 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,15405
15405 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(6)] = v62::
15409 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,15411
15411 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(7)] = v63::
15415 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,15417
15417 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(8)] = v64::
15421 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,15423
15423 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(9)] = v65::
15427 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,15429
15429 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(10)] = v66::
15433 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,15435
15435 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(11)] = v67::
15439 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,15441
15441 :: EXPR :: modify :: Ljava/lang/Object :: v55[#(12)] = v68::
15541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.<clinit>()::CD,15551:CD,15559:CD,15563:CD,15571:CD,15575:CD,15583:CD,15587:CD,15595:CD,15599:CD,15607:CD,15611:CD,15619:CD,15623:CD,15631:CD,15635:CD,15643:CD,15647:CD,15655:CD,15659:CD,15667:CD,15671:CD,15679:CD,15683:CD,15691:CD,15695:CD,15703:CD,15707:CD,15715:CD,15719:CD,15727:CD,15731:CD,15739:CD,15743:CD,15751:CD,15755:CD,15763:CD,15767:CD,15775:CD,15779:CD,15787:CD,15791:CD,15799:CD,15803:CD,15811:CD,15815:CD,15823:CD,15827:CD,15835:CD,15839:CD,15847:CD,15851:CD,15859:CD,15863:CD,15869:CD,15875:CD,15924:CD,15953:CD,15954:CD,15962:CD,15966:CD,15974:CD,15978:CD,15986:CD,15990:CD,15998:CD,16002:CD,16010:CD,16014:CD,16022:CD,16026:CD,16034:CD,16038:CD,16046:CD,16050:CD,16058:CD,16062:CD,16070:CD,16074:CD,16082:CD,16086:CD,16094:CD,16098:CD,16106:CD,16110:CD,16118:CD,16122:CD,16130:CD,16134:CD,16142:CD,16146:CD,16154:CD,16158:CD,16166:CD,16170:CD,16178:CD,16182:CD,16190:CD,16194:CD,16202:CD,16206:CD,16214:CD,16218:CD,16226:CD,16230:CD,16238:CD,16242:CD,16250:CD,16254:CD,16260:CD,16270:CD,16279:CD,16288:CD,16294
15551 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
15559 :: CALL :: call :: Ljava/lang/Character :: v11 = valueOf(#(65))::
15563 :: CALL :: call :: Ljava/lang/Object :: v13 = v7.put(#(DA), v11)::
15571 :: CALL :: call :: Ljava/lang/Character :: v18 = valueOf(#(67))::
15575 :: CALL :: call :: Ljava/lang/Object :: v20 = v14.put(#(DC), v18)::
15583 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(#(71))::
15587 :: CALL :: call :: Ljava/lang/Object :: v27 = v21.put(#(DG), v25)::
15595 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(84))::
15599 :: CALL :: call :: Ljava/lang/Object :: v34 = v28.put(#(DT), v32)::
15607 :: CALL :: call :: Ljava/lang/Character :: v39 = valueOf(#(73))::
15611 :: CALL :: call :: Ljava/lang/Object :: v41 = v35.put(#(DI), v39)::
15619 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(#(65))::
15623 :: CALL :: call :: Ljava/lang/Object :: v47 = v42.put(#(A), v45)::
15631 :: CALL :: call :: Ljava/lang/Character :: v51 = valueOf(#(71))::
15635 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.put(#(G), v51)::
15643 :: CALL :: call :: Ljava/lang/Character :: v57 = valueOf(#(67))::
15647 :: CALL :: call :: Ljava/lang/Object :: v59 = v54.put(#(C), v57)::
15655 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(85))::
15659 :: CALL :: call :: Ljava/lang/Object :: v66 = v60.put(#(U), v64)::
15667 :: CALL :: call :: Ljava/lang/Character :: v70 = valueOf(#(73))::
15671 :: CALL :: call :: Ljava/lang/Object :: v72 = v67.put(#(I), v70)::
15679 :: CALL :: call :: Ljava/lang/Character :: v77 = valueOf(#(88))::
15683 :: CALL :: call :: Ljava/lang/Object :: v79 = v73.put(#(TAF), v77)::
15691 :: CALL :: call :: Ljava/lang/Character :: v83 = valueOf(#(88))::
15695 :: CALL :: call :: Ljava/lang/Object :: v85 = v80.put(#(TC1), v83)::
15703 :: CALL :: call :: Ljava/lang/Character :: v89 = valueOf(#(88))::
15707 :: CALL :: call :: Ljava/lang/Object :: v91 = v86.put(#(TFE), v89)::
15715 :: CALL :: call :: Ljava/lang/Character :: v95 = valueOf(#(88))::
15719 :: CALL :: call :: Ljava/lang/Object :: v97 = v92.put(#(TFO), v95)::
15727 :: CALL :: call :: Ljava/lang/Character :: v101 = valueOf(#(88))::
15731 :: CALL :: call :: Ljava/lang/Object :: v103 = v98.put(#(TGP), v101)::
15739 :: CALL :: call :: Ljava/lang/Character :: v107 = valueOf(#(88))::
15743 :: CALL :: call :: Ljava/lang/Object :: v109 = v104.put(#(THX), v107)::
15751 :: CALL :: call :: Ljava/lang/Character :: v113 = valueOf(#(88))::
15755 :: CALL :: call :: Ljava/lang/Object :: v115 = v110.put(#(TLC), v113)::
15763 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(#(88))::
15767 :: CALL :: call :: Ljava/lang/Object :: v121 = v116.put(#(TLN), v119)::
15775 :: CALL :: call :: Ljava/lang/Character :: v125 = valueOf(#(88))::
15779 :: CALL :: call :: Ljava/lang/Object :: v127 = v122.put(#(LCG), v125)::
15787 :: CALL :: call :: Ljava/lang/Character :: v131 = valueOf(#(88))::
15791 :: CALL :: call :: Ljava/lang/Object :: v133 = v128.put(#(TP1), v131)::
15799 :: CALL :: call :: Ljava/lang/Character :: v137 = valueOf(#(88))::
15803 :: CALL :: call :: Ljava/lang/Object :: v139 = v134.put(#(CP1), v137)::
15811 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(88))::
15815 :: CALL :: call :: Ljava/lang/Object :: v145 = v140.put(#(TPN), v143)::
15823 :: CALL :: call :: Ljava/lang/Character :: v149 = valueOf(#(88))::
15827 :: CALL :: call :: Ljava/lang/Object :: v151 = v146.put(#(CPN), v149)::
15835 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(88))::
15839 :: CALL :: call :: Ljava/lang/Object :: v157 = v152.put(#(GPN), v155)::
15847 :: CALL :: call :: Ljava/lang/Character :: v161 = valueOf(#(88))::
15851 :: CALL :: call :: Ljava/lang/Object :: v163 = v158.put(#(APN), v161)::
15859 :: CALL :: call :: Ljava/lang/Character :: v167 = valueOf(#(88))::
15863 :: CALL :: call :: Ljava/lang/Object :: v169 = v164.put(#(TPC), v167)::
15869 :: NORM :: declaration :: Ljava/util/HashMap :: v170 = new java.util.HashMap::
15875 :: NORM :: declaration :: [Ljava/lang/String :: v173 = new java.lang.String[]::DD,15924
15876 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(0)] = #(C)::
15880 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(1)] = #(G)::
15884 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(2)] = #(A)::
15888 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(3)] = #(T)::
15892 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(4)] = #(U)::
15896 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(5)] = #(I)::
15900 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(6)] = #(+C)::
15904 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(7)] = #(+G)::
15908 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(8)] = #(+A)::
15912 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(9)] = #(+T)::
15916 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(10)] = #(+U)::
15920 :: EXPR :: modify :: Ljava/lang/Object :: v173[#(11)] = #(+I)::
15924 :: EXPR :: assign :: I :: v193 = v173.length::DD,15953
15926 :: EXPR :: reference :: Ljava/lang/Object :: v194 = v173[v206]::JM,15936
15932 :: CALL :: call :: I :: v197 = v194.length()::JM,15936
15936 :: EXPR :: assign :: Ljava/lang/Object :: v198 = v197 - #(1)::
15937 :: CALL :: call :: C :: v200 = v194.charAt(v198)::
15942 :: CALL :: call :: Ljava/lang/Character :: v202 = valueOf(v200)::
15946 :: CALL :: call :: Ljava/lang/Object :: v204 = v195.put(v194, v202)::
15952 :: EXPR :: assign :: Ljava/lang/Object :: v205 = v206 + #(1)::DD,16294
15953 :: PRED :: IF :: Z :: if (v206 < v193) goto 530::CF,15954:CD,15932:CD,15936:CD,15937:CD,15942:CD,15946:CD,15952:CD,16294
15954 :: NORM :: declaration :: Ljava/util/HashMap :: v207 = new java.util.HashMap::
15962 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(71))::
15966 :: CALL :: call :: Ljava/lang/Object :: v214 = v209.put(#(GLY), v212)::
15974 :: CALL :: call :: Ljava/lang/Character :: v218 = valueOf(#(65))::
15978 :: CALL :: call :: Ljava/lang/Object :: v220 = v215.put(#(ALA), v218)::
15986 :: CALL :: call :: Ljava/lang/Character :: v225 = valueOf(#(86))::
15990 :: CALL :: call :: Ljava/lang/Object :: v227 = v221.put(#(VAL), v225)::
15998 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(76))::
16002 :: CALL :: call :: Ljava/lang/Object :: v234 = v228.put(#(LEU), v232)::
16010 :: CALL :: call :: Ljava/lang/Character :: v238 = valueOf(#(73))::
16014 :: CALL :: call :: Ljava/lang/Object :: v240 = v235.put(#(ILE), v238)::
16022 :: CALL :: call :: Ljava/lang/Character :: v245 = valueOf(#(70))::
16026 :: CALL :: call :: Ljava/lang/Object :: v247 = v241.put(#(PHE), v245)::
16034 :: CALL :: call :: Ljava/lang/Character :: v252 = valueOf(#(89))::
16038 :: CALL :: call :: Ljava/lang/Object :: v254 = v248.put(#(TYR), v252)::
16046 :: CALL :: call :: Ljava/lang/Character :: v259 = valueOf(#(87))::
16050 :: CALL :: call :: Ljava/lang/Object :: v261 = v255.put(#(TRP), v259)::
16058 :: CALL :: call :: Ljava/lang/Character :: v266 = valueOf(#(80))::
16062 :: CALL :: call :: Ljava/lang/Object :: v268 = v262.put(#(PRO), v266)::
16070 :: CALL :: call :: Ljava/lang/Character :: v273 = valueOf(#(72))::
16074 :: CALL :: call :: Ljava/lang/Object :: v275 = v269.put(#(HIS), v273)::
16082 :: CALL :: call :: Ljava/lang/Character :: v280 = valueOf(#(75))::
16086 :: CALL :: call :: Ljava/lang/Object :: v282 = v276.put(#(LYS), v280)::
16094 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(82))::
16098 :: CALL :: call :: Ljava/lang/Object :: v289 = v283.put(#(ARG), v287)::
16106 :: CALL :: call :: Ljava/lang/Character :: v294 = valueOf(#(83))::
16110 :: CALL :: call :: Ljava/lang/Object :: v296 = v290.put(#(SER), v294)::
16118 :: CALL :: call :: Ljava/lang/Character :: v300 = valueOf(#(84))::
16122 :: CALL :: call :: Ljava/lang/Object :: v302 = v297.put(#(THR), v300)::
16130 :: CALL :: call :: Ljava/lang/Character :: v307 = valueOf(#(69))::
16134 :: CALL :: call :: Ljava/lang/Object :: v309 = v303.put(#(GLU), v307)::
16142 :: CALL :: call :: Ljava/lang/Character :: v314 = valueOf(#(81))::
16146 :: CALL :: call :: Ljava/lang/Object :: v316 = v310.put(#(GLN), v314)::
16154 :: CALL :: call :: Ljava/lang/Character :: v321 = valueOf(#(68))::
16158 :: CALL :: call :: Ljava/lang/Object :: v323 = v317.put(#(ASP), v321)::
16166 :: CALL :: call :: Ljava/lang/Character :: v328 = valueOf(#(78))::
16170 :: CALL :: call :: Ljava/lang/Object :: v330 = v324.put(#(ASN), v328)::
16178 :: CALL :: call :: Ljava/lang/Character :: v334 = valueOf(#(67))::
16182 :: CALL :: call :: Ljava/lang/Object :: v336 = v331.put(#(CYS), v334)::
16190 :: CALL :: call :: Ljava/lang/Character :: v341 = valueOf(#(77))::
16194 :: CALL :: call :: Ljava/lang/Object :: v343 = v337.put(#(MET), v341)::
16202 :: CALL :: call :: Ljava/lang/Character :: v347 = valueOf(#(77))::
16206 :: CALL :: call :: Ljava/lang/Object :: v349 = v344.put(#(MSE), v347)::
16214 :: CALL :: call :: Ljava/lang/Character :: v353 = valueOf(#(85))::
16218 :: CALL :: call :: Ljava/lang/Object :: v355 = v350.put(#(CSE), v353)::
16226 :: CALL :: call :: Ljava/lang/Character :: v359 = valueOf(#(85))::
16230 :: CALL :: call :: Ljava/lang/Object :: v361 = v356.put(#(SEC), v359)::
16238 :: CALL :: call :: Ljava/lang/Character :: v366 = valueOf(#(79))::
16242 :: CALL :: call :: Ljava/lang/Object :: v368 = v362.put(#(PYH), v366)::
16250 :: CALL :: call :: Ljava/lang/Character :: v372 = valueOf(#(79))::
16254 :: CALL :: call :: Ljava/lang/Object :: v374 = v369.put(#(PYL), v372)::
16260 :: NORM :: declaration :: Ljava/util/HashSet :: v375 = new java.util.HashSet::
16270 :: CALL :: call :: Z :: v380 = v377.add(v378)::
16279 :: CALL :: call :: Z :: v384 = v381.add(v382)::
16288 :: CALL :: call :: Z :: v388 = v385.add(v386)::
16294 :: EXPR :: assign :: null :: PHI v206 = #(0), v205::DD,15952:DD,15953
16523 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.<clinit>()::CD,16526:CD,16527:JM,30722:JM,30692:JM,30725:JM,30695:JM,30728:JM,30698:JM,30731:JM,30701:JM,30734:JM,30704:JM,30707:JM,30710:JM,30713:JM,30716:JM,30719:CD,16555:CD,16557:CD,16558:CD,16614:CD,16616:CD,16617:CD,16673:CD,16675:CD,16676:CD,16716:CD,16718:CD,16719:CD,16747:CD,16749:CD,16750:CD,16778:CD,16780:CD,16805:CD,16807:CD,16808:CD,16836:CD,16838:CD,16839:CD,16871:CD,16873:CD,16874:CD,16910:CD,16912:CD,16913:CD,16945:CD,16947:CD,16972:CD,16974:CD,16975:CD,17007:CD,17009:CD,17010:CD,17042:CD,17044:CD,17045:CD,17081:CD,17083:CD,17084:CD,17140:CD,17142:CD,17143:CD,17199:CD,17201:CD,17202:CD,17258:CD,17260:CD,17261:CD,17317:CD,17319:CD,17344:CD,17346:CD,17347:CD,17379:CD,17381:CD,17382:CD,17414:CD,17416:CD,17417:CD,17453:CD,17455:CD,17456:CD,17500:CD,17502:CD,17503:CD,17551:CD,17553:CD,17554:CD,17610:CD,17612:CD,17613:CD,17677:CD,17679:CD,17680:CD,17736:CD,17738:CD,17739:CD,17787:CD,17789:CD,17790:CD,17834:CD,17836:CD,17837:CD,17877:CD,17879:CD,17880:CD,17912:CD,17914:CD,17915:CD,17951:CD,17953:CD,17954:CD,18010:CD,18012:CD,18013:CD,18057:CD,18059:CD,18060:CD,18104:CD,18106:CD,18107:CD,18159:CD,18161:CD,18162:CD,18190:CD,18192:CD,18193:CD,18225:CD,18227:CD,18228:CD,18260:CD,18262:CD,18263:CD,18299:CD,18301:CD,18302:CD,18342:CD,18344:CD,18345:CD,18393:CD,18395:CD,18396:CD,18452:CD,18454:CD,18455:CD,18515:CD,18517:CD,18518:CD,18578:CD,18580:CD,18581:CD,18633:CD,18635:CD,18636:CD,18672:CD,18674:CD,18675:CD,18715:CD,18717:CD,18718:CD,18750:CD,18752:CD,18753:CD,18789:CD,18791:CD,18792:CD,18828:CD,18830:CD,18831:CD,18867:CD,18869:CD,18870:CD,18914:CD,18916:CD,18917:CD,18965:CD,18967:CD,18968:CD,19012:CD,19014:CD,19015:CD,19047:CD,19049:CD,19050:CD,19078:CD,19080:CD,19081:CD,19113:CD,19115:CD,19116:CD,19152:CD,19154:CD,19155:CD,19191:CD,19193:CD,19194:CD,19230:CD,19232:CD,19233:CD,19265:CD,19267:CD,19268:CD,19300:CD,19302:CD,19303:CD,19335:CD,19337:CD,19338:CD,19374:CD,19376:CD,19377:CD,19417:CD,19419:CD,19420:CD,19456:CD,19458:CD,19459:CD,19491:CD,19493:CD,19494:CD,19526:CD,19528:CD,19529:CD,19565:CD,19567:CD,19568:CD,19600:CD,19602:CD,19603:CD,19631:CD,19633:CD,19634:CD,19670:CD,19672:CD,19673:CD,19717:CD,19719:CD,19720:CD,19776:CD,19778:CD,19779:CD,19839:CD,19841:CD,19842:CD,19906:CD,19908:CD,19909:CD,19969:CD,19971:CD,19972:CD,20028:CD,20030:CD,20031:CD,20075:CD,20077:CD,20078:CD,20114:CD,20116:CD,20117:CD,20153:CD,20155:CD,20156:CD,20192:CD,20194:CD,20195:CD,20235:CD,20237:CD,20238:CD,20282:CD,20284:CD,20285:CD,20329:CD,20331:CD,20332:CD,20364:CD,20366:CD,20367:CD,20395:CD,20397:CD,20398:CD,20426:CD,20428:CD,20429:CD,20461:CD,20463:CD,20464:CD,20500:CD,20502:CD,20503:CD,20543:CD,20545:CD,20546:CD,20590:CD,20592:CD,20593:CD,20637:CD,20639:CD,20640:CD,20688:CD,20690:CD,20691:CD,20739:CD,20741:CD,20742:CD,20774:CD,20776:CD,20777:CD,20813:CD,20815:CD,20816:CD,20852:CD,20854:CD,20855:CD,20887:CD,20889:CD,20890:CD,20922:CD,20924:CD,20925:CD,20957:CD,20959:CD,20960:CD,20992:CD,20994:CD,20995:CD,21023:CD,21025:CD,21049:CD,21051:CD,21052:CD,21058:CD,21064:CD,21070:CD,21076:CD,21082:CD,21088:CD,21094:CD,21100:CD,21106:CD,21112:CD,21118:CD,21124:CD,21130:CD,21136:CD,21142:CD,21148:CD,21154:CD,21160:CD,21166:CD,21172:CD,21178:CD,21184:CD,21190:CD,21196:CD,21202:CD,21208:CD,21214:CD,21220:CD,21226:CD,21232:CD,21238:CD,21244:CD,21250:CD,21256:CD,21262:CD,21268:CD,21274:CD,21280:CD,21286:CD,21292:CD,21298:CD,21304:CD,21310:CD,21316:CD,21322:CD,21328:CD,21334:CD,21340:CD,21346:CD,21352:CD,21358:CD,21364:CD,21370:CD,21376:CD,21382:CD,21388:CD,21394:CD,21400:CD,21406:CD,21412:CD,21418:CD,21424:CD,21430:CD,21436:CD,21442:CD,21448:CD,21454:CD,21460:CD,21466:CD,21472:CD,21478:CD,21484:CD,21490:CD,21496:CD,21502:CD,21508:CD,21514:CD,21520:CD,21526:CD,21532:CD,21538:CD,21544:CD,21550:CD,21556:CD,21562:CD,21568:CD,21574:CD,21580:CD,21586:CD,21592:CD,21598:CD,21604:CD,21610:CD,21616:CD,21622:CD,21628:CD,21634:CD,21640:CD,21646:CD,21652:CD,21658:CD,21664:CD,21670:CD,21676:CD,21682:CD,21690:CD,21696:CD,21699:CD,21722:CD,21724
16526 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v2 = new org.biojava.nbio.structure.Element::DD,16555:CF,16527
16527 :: NORM :: declaration :: [I :: v10 = new []::
16528 :: EXPR :: modify :: I :: v10[#(0)] = #(1)::
16555 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.H = v2::
16557 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v14 = new org.biojava.nbio.structure.Element::DD,16614:CF,16558
16558 :: NORM :: declaration :: [I :: v24 = new []::
16559 :: EXPR :: modify :: I :: v24[#(0)] = #(-4)::
16563 :: EXPR :: modify :: I :: v24[#(1)] = #(-3)::
16567 :: EXPR :: modify :: I :: v24[#(2)] = #(-2)::
16571 :: EXPR :: modify :: I :: v24[#(4)] = #(-1)::
16575 :: EXPR :: modify :: I :: v24[#(5)] = #(1)::
16579 :: EXPR :: modify :: I :: v24[#(6)] = #(2)::
16583 :: EXPR :: modify :: I :: v24[#(7)] = #(3)::
16587 :: EXPR :: modify :: I :: v24[#(8)] = #(4)::
16614 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.C = v14::
16616 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v35 = new org.biojava.nbio.structure.Element::DD,16673:CF,16617
16617 :: NORM :: declaration :: [I :: v41 = new []::
16618 :: EXPR :: modify :: I :: v41[#(0)] = #(-3)::
16622 :: EXPR :: modify :: I :: v41[#(1)] = #(-2)::
16626 :: EXPR :: modify :: I :: v41[#(2)] = #(-1)::
16630 :: EXPR :: modify :: I :: v41[#(4)] = #(1)::
16634 :: EXPR :: modify :: I :: v41[#(5)] = #(2)::
16638 :: EXPR :: modify :: I :: v41[#(6)] = #(3)::
16642 :: EXPR :: modify :: I :: v41[#(7)] = #(4)::
16646 :: EXPR :: modify :: I :: v41[#(8)] = #(5)::
16673 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.N = v35::
16675 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v45 = new org.biojava.nbio.structure.Element::DD,16716:CF,16676
16676 :: NORM :: declaration :: [I :: v51 = new []::
16677 :: EXPR :: modify :: I :: v51[#(0)] = #(-2)::
16681 :: EXPR :: modify :: I :: v51[#(1)] = #(-1)::
16685 :: EXPR :: modify :: I :: v51[#(3)] = #(1)::
16689 :: EXPR :: modify :: I :: v51[#(4)] = #(2)::
16716 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.O = v45::
16718 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v55 = new org.biojava.nbio.structure.Element::DD,16747:CF,16719
16719 :: NORM :: declaration :: [I :: v58 = new []::
16720 :: EXPR :: modify :: I :: v58[#(1)] = #(1)::
16747 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.D = v55::
16749 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v61 = new org.biojava.nbio.structure.Element::DD,16778:CF,16750
16750 :: NORM :: declaration :: [I :: v64 = new []::
16751 :: EXPR :: modify :: I :: v64[#(1)] = #(1)::
16778 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.T = v61::
16780 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v67 = new org.biojava.nbio.structure.Element::DD,16805
16805 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.He = v67::
16807 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v77 = new org.biojava.nbio.structure.Element::DD,16836:CF,16808
16808 :: NORM :: declaration :: [I :: v83 = new []::
16809 :: EXPR :: modify :: I :: v83[#(1)] = #(1)::
16836 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Li = v77::
16838 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v87 = new org.biojava.nbio.structure.Element::DD,16871:CF,16839
16839 :: NORM :: declaration :: [I :: v92 = new []::
16840 :: EXPR :: modify :: I :: v92[#(1)] = #(1)::
16844 :: EXPR :: modify :: I :: v92[#(2)] = #(2)::
16871 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Be = v87::
16873 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v96 = new org.biojava.nbio.structure.Element::DD,16910:CF,16874
16874 :: NORM :: declaration :: [I :: v101 = new []::
16875 :: EXPR :: modify :: I :: v101[#(1)] = #(1)::
16879 :: EXPR :: modify :: I :: v101[#(2)] = #(2)::
16883 :: EXPR :: modify :: I :: v101[#(3)] = #(3)::
16910 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.B = v96::
16912 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v105 = new org.biojava.nbio.structure.Element::DD,16945:CF,16913
16913 :: NORM :: declaration :: [I :: v111 = new []::
16914 :: EXPR :: modify :: I :: v111[#(0)] = #(-1)::
16918 :: EXPR :: modify :: I :: v111[#(2)] = #(1)::
16945 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.F = v105::
16947 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v115 = new org.biojava.nbio.structure.Element::DD,16972
16972 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ne = v115::
16974 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v125 = new org.biojava.nbio.structure.Element::DD,17007:CF,16975
16975 :: NORM :: declaration :: [I :: v130 = new []::
16976 :: EXPR :: modify :: I :: v130[#(0)] = #(-1)::
16980 :: EXPR :: modify :: I :: v130[#(2)] = #(1)::
17007 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Na = v125::
17009 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v134 = new org.biojava.nbio.structure.Element::DD,17042:CF,17010
17010 :: NORM :: declaration :: [I :: v140 = new []::
17011 :: EXPR :: modify :: I :: v140[#(1)] = #(1)::
17015 :: EXPR :: modify :: I :: v140[#(2)] = #(2)::
17042 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mg = v134::
17044 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v144 = new org.biojava.nbio.structure.Element::DD,17081:CF,17045
17045 :: NORM :: declaration :: [I :: v149 = new []::
17046 :: EXPR :: modify :: I :: v149[#(1)] = #(1)::
17050 :: EXPR :: modify :: I :: v149[#(2)] = #(2)::
17054 :: EXPR :: modify :: I :: v149[#(3)] = #(3)::
17081 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Al = v144::
17083 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v153 = new org.biojava.nbio.structure.Element::DD,17140:CF,17084
17084 :: NORM :: declaration :: [I :: v159 = new []::
17085 :: EXPR :: modify :: I :: v159[#(0)] = #(-4)::
17089 :: EXPR :: modify :: I :: v159[#(1)] = #(-3)::
17093 :: EXPR :: modify :: I :: v159[#(2)] = #(-2)::
17097 :: EXPR :: modify :: I :: v159[#(3)] = #(-1)::
17101 :: EXPR :: modify :: I :: v159[#(5)] = #(1)::
17105 :: EXPR :: modify :: I :: v159[#(6)] = #(2)::
17109 :: EXPR :: modify :: I :: v159[#(7)] = #(3)::
17113 :: EXPR :: modify :: I :: v159[#(8)] = #(4)::
17140 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Si = v153::
17142 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v163 = new org.biojava.nbio.structure.Element::DD,17199:CF,17143
17143 :: NORM :: declaration :: [I :: v170 = new []::
17144 :: EXPR :: modify :: I :: v170[#(0)] = #(-3)::
17148 :: EXPR :: modify :: I :: v170[#(1)] = #(-2)::
17152 :: EXPR :: modify :: I :: v170[#(2)] = #(-1)::
17156 :: EXPR :: modify :: I :: v170[#(4)] = #(1)::
17160 :: EXPR :: modify :: I :: v170[#(5)] = #(2)::
17164 :: EXPR :: modify :: I :: v170[#(6)] = #(3)::
17168 :: EXPR :: modify :: I :: v170[#(7)] = #(4)::
17172 :: EXPR :: modify :: I :: v170[#(8)] = #(5)::
17199 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.P = v163::
17201 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v174 = new org.biojava.nbio.structure.Element::DD,17258:CF,17202
17202 :: NORM :: declaration :: [I :: v181 = new []::
17203 :: EXPR :: modify :: I :: v181[#(0)] = #(-2)::
17207 :: EXPR :: modify :: I :: v181[#(1)] = #(-1)::
17211 :: EXPR :: modify :: I :: v181[#(3)] = #(1)::
17215 :: EXPR :: modify :: I :: v181[#(4)] = #(2)::
17219 :: EXPR :: modify :: I :: v181[#(5)] = #(3)::
17223 :: EXPR :: modify :: I :: v181[#(6)] = #(4)::
17227 :: EXPR :: modify :: I :: v181[#(7)] = #(5)::
17231 :: EXPR :: modify :: I :: v181[#(8)] = #(6)::
17258 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.S = v174::
17260 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v185 = new org.biojava.nbio.structure.Element::DD,17317:CF,17261
17261 :: NORM :: declaration :: [I :: v192 = new []::
17262 :: EXPR :: modify :: I :: v192[#(0)] = #(-1)::
17266 :: EXPR :: modify :: I :: v192[#(2)] = #(1)::
17270 :: EXPR :: modify :: I :: v192[#(3)] = #(2)::
17274 :: EXPR :: modify :: I :: v192[#(4)] = #(3)::
17278 :: EXPR :: modify :: I :: v192[#(5)] = #(4)::
17282 :: EXPR :: modify :: I :: v192[#(6)] = #(5)::
17286 :: EXPR :: modify :: I :: v192[#(7)] = #(6)::
17290 :: EXPR :: modify :: I :: v192[#(8)] = #(7)::
17317 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cl = v185::
17319 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v196 = new org.biojava.nbio.structure.Element::DD,17344
17344 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ar = v196::
17346 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v204 = new org.biojava.nbio.structure.Element::DD,17379:CF,17347
17347 :: NORM :: declaration :: [I :: v211 = new []::
17348 :: EXPR :: modify :: I :: v211[#(0)] = #(-1)::
17352 :: EXPR :: modify :: I :: v211[#(2)] = #(1)::
17379 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.K = v204::
17381 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v214 = new org.biojava.nbio.structure.Element::DD,17414:CF,17382
17382 :: NORM :: declaration :: [I :: v219 = new []::
17383 :: EXPR :: modify :: I :: v219[#(1)] = #(1)::
17387 :: EXPR :: modify :: I :: v219[#(2)] = #(2)::
17414 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ca = v214::
17416 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v223 = new org.biojava.nbio.structure.Element::DD,17453:CF,17417
17417 :: NORM :: declaration :: [I :: v230 = new []::
17418 :: EXPR :: modify :: I :: v230[#(1)] = #(1)::
17422 :: EXPR :: modify :: I :: v230[#(2)] = #(2)::
17426 :: EXPR :: modify :: I :: v230[#(3)] = #(3)::
17453 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sc = v223::
17455 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v234 = new org.biojava.nbio.structure.Element::DD,17500:CF,17456
17456 :: NORM :: declaration :: [I :: v239 = new []::
17457 :: EXPR :: modify :: I :: v239[#(0)] = #(-1)::
17461 :: EXPR :: modify :: I :: v239[#(2)] = #(1)::
17465 :: EXPR :: modify :: I :: v239[#(3)] = #(2)::
17469 :: EXPR :: modify :: I :: v239[#(4)] = #(3)::
17473 :: EXPR :: modify :: I :: v239[#(5)] = #(4)::
17500 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ti = v234::
17502 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v242 = new org.biojava.nbio.structure.Element::DD,17551:CF,17503
17503 :: NORM :: declaration :: [I :: v248 = new []::
17504 :: EXPR :: modify :: I :: v248[#(0)] = #(-1)::
17508 :: EXPR :: modify :: I :: v248[#(2)] = #(1)::
17512 :: EXPR :: modify :: I :: v248[#(3)] = #(2)::
17516 :: EXPR :: modify :: I :: v248[#(4)] = #(3)::
17520 :: EXPR :: modify :: I :: v248[#(5)] = #(4)::
17524 :: EXPR :: modify :: I :: v248[#(6)] = #(5)::
17551 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.V = v242::
17553 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v252 = new org.biojava.nbio.structure.Element::DD,17610:CF,17554
17554 :: NORM :: declaration :: [I :: v258 = new []::
17555 :: EXPR :: modify :: I :: v258[#(0)] = #(-2)::
17559 :: EXPR :: modify :: I :: v258[#(1)] = #(-1)::
17563 :: EXPR :: modify :: I :: v258[#(3)] = #(1)::
17567 :: EXPR :: modify :: I :: v258[#(4)] = #(2)::
17571 :: EXPR :: modify :: I :: v258[#(5)] = #(3)::
17575 :: EXPR :: modify :: I :: v258[#(6)] = #(4)::
17579 :: EXPR :: modify :: I :: v258[#(7)] = #(5)::
17583 :: EXPR :: modify :: I :: v258[#(8)] = #(6)::
17610 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cr = v252::
17612 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v262 = new org.biojava.nbio.structure.Element::DD,17677:CF,17613
17613 :: NORM :: declaration :: [I :: v269 = new []::
17614 :: EXPR :: modify :: I :: v269[#(0)] = #(-3)::
17618 :: EXPR :: modify :: I :: v269[#(1)] = #(-2)::
17622 :: EXPR :: modify :: I :: v269[#(2)] = #(-1)::
17626 :: EXPR :: modify :: I :: v269[#(4)] = #(1)::
17630 :: EXPR :: modify :: I :: v269[#(5)] = #(2)::
17634 :: EXPR :: modify :: I :: v269[#(6)] = #(3)::
17638 :: EXPR :: modify :: I :: v269[#(7)] = #(4)::
17642 :: EXPR :: modify :: I :: v269[#(8)] = #(5)::
17646 :: EXPR :: modify :: I :: v269[#(9)] = #(6)::
17650 :: EXPR :: modify :: I :: v269[#(10)] = #(7)::
17677 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mn = v262::
17679 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v272 = new org.biojava.nbio.structure.Element::DD,17736:CF,17680
17680 :: NORM :: declaration :: [I :: v276 = new []::
17681 :: EXPR :: modify :: I :: v276[#(0)] = #(-2)::
17685 :: EXPR :: modify :: I :: v276[#(1)] = #(-1)::
17689 :: EXPR :: modify :: I :: v276[#(3)] = #(1)::
17693 :: EXPR :: modify :: I :: v276[#(4)] = #(2)::
17697 :: EXPR :: modify :: I :: v276[#(5)] = #(3)::
17701 :: EXPR :: modify :: I :: v276[#(6)] = #(4)::
17705 :: EXPR :: modify :: I :: v276[#(7)] = #(5)::
17709 :: EXPR :: modify :: I :: v276[#(8)] = #(6)::
17736 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fe = v272::
17738 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v280 = new org.biojava.nbio.structure.Element::DD,17787:CF,17739
17739 :: NORM :: declaration :: [I :: v285 = new []::
17740 :: EXPR :: modify :: I :: v285[#(0)] = #(-1)::
17744 :: EXPR :: modify :: I :: v285[#(2)] = #(1)::
17748 :: EXPR :: modify :: I :: v285[#(3)] = #(2)::
17752 :: EXPR :: modify :: I :: v285[#(4)] = #(3)::
17756 :: EXPR :: modify :: I :: v285[#(5)] = #(4)::
17760 :: EXPR :: modify :: I :: v285[#(6)] = #(5)::
17787 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Co = v280::
17789 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v288 = new org.biojava.nbio.structure.Element::DD,17834:CF,17790
17790 :: NORM :: declaration :: [I :: v295 = new []::
17791 :: EXPR :: modify :: I :: v295[#(0)] = #(-1)::
17795 :: EXPR :: modify :: I :: v295[#(2)] = #(1)::
17799 :: EXPR :: modify :: I :: v295[#(3)] = #(2)::
17803 :: EXPR :: modify :: I :: v295[#(4)] = #(3)::
17807 :: EXPR :: modify :: I :: v295[#(5)] = #(4)::
17834 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ni = v288::
17836 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v299 = new org.biojava.nbio.structure.Element::DD,17877:CF,17837
17837 :: NORM :: declaration :: [I :: v305 = new []::
17838 :: EXPR :: modify :: I :: v305[#(1)] = #(1)::
17842 :: EXPR :: modify :: I :: v305[#(2)] = #(2)::
17846 :: EXPR :: modify :: I :: v305[#(3)] = #(3)::
17850 :: EXPR :: modify :: I :: v305[#(4)] = #(4)::
17877 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cu = v299::
17879 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v308 = new org.biojava.nbio.structure.Element::DD,17912:CF,17880
17880 :: NORM :: declaration :: [I :: v313 = new []::
17881 :: EXPR :: modify :: I :: v313[#(1)] = #(1)::
17885 :: EXPR :: modify :: I :: v313[#(2)] = #(2)::
17912 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zn = v308::
17914 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v317 = new org.biojava.nbio.structure.Element::DD,17951:CF,17915
17915 :: NORM :: declaration :: [I :: v321 = new []::
17916 :: EXPR :: modify :: I :: v321[#(1)] = #(1)::
17920 :: EXPR :: modify :: I :: v321[#(2)] = #(2)::
17924 :: EXPR :: modify :: I :: v321[#(3)] = #(3)::
17951 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ga = v317::
17953 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v324 = new org.biojava.nbio.structure.Element::DD,18010:CF,17954
17954 :: NORM :: declaration :: [I :: v329 = new []::
17955 :: EXPR :: modify :: I :: v329[#(0)] = #(-4)::
17959 :: EXPR :: modify :: I :: v329[#(1)] = #(-3)::
17963 :: EXPR :: modify :: I :: v329[#(2)] = #(-2)::
17967 :: EXPR :: modify :: I :: v329[#(3)] = #(-1)::
17971 :: EXPR :: modify :: I :: v329[#(5)] = #(1)::
17975 :: EXPR :: modify :: I :: v329[#(6)] = #(2)::
17979 :: EXPR :: modify :: I :: v329[#(7)] = #(3)::
17983 :: EXPR :: modify :: I :: v329[#(8)] = #(4)::
18010 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ge = v324::
18012 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v333 = new org.biojava.nbio.structure.Element::DD,18057:CF,18013
18013 :: NORM :: declaration :: [I :: v338 = new []::
18014 :: EXPR :: modify :: I :: v338[#(0)] = #(-3)::
18018 :: EXPR :: modify :: I :: v338[#(2)] = #(1)::
18022 :: EXPR :: modify :: I :: v338[#(3)] = #(2)::
18026 :: EXPR :: modify :: I :: v338[#(4)] = #(3)::
18030 :: EXPR :: modify :: I :: v338[#(5)] = #(5)::
18057 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.As = v333::
18059 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v342 = new org.biojava.nbio.structure.Element::DD,18104:CF,18060
18060 :: NORM :: declaration :: [I :: v348 = new []::
18061 :: EXPR :: modify :: I :: v348[#(0)] = #(-2)::
18065 :: EXPR :: modify :: I :: v348[#(2)] = #(1)::
18069 :: EXPR :: modify :: I :: v348[#(3)] = #(2)::
18073 :: EXPR :: modify :: I :: v348[#(4)] = #(4)::
18077 :: EXPR :: modify :: I :: v348[#(5)] = #(6)::
18104 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Se = v342::
18106 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v351 = new org.biojava.nbio.structure.Element::DD,18159:CF,18107
18107 :: NORM :: declaration :: [I :: v355 = new []::
18108 :: EXPR :: modify :: I :: v355[#(0)] = #(-1)::
18112 :: EXPR :: modify :: I :: v355[#(2)] = #(1)::
18116 :: EXPR :: modify :: I :: v355[#(3)] = #(2)::
18120 :: EXPR :: modify :: I :: v355[#(4)] = #(3)::
18124 :: EXPR :: modify :: I :: v355[#(5)] = #(4)::
18128 :: EXPR :: modify :: I :: v355[#(6)] = #(5)::
18132 :: EXPR :: modify :: I :: v355[#(7)] = #(7)::
18159 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Br = v351::
18161 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v359 = new org.biojava.nbio.structure.Element::DD,18190:CF,18162
18162 :: NORM :: declaration :: [I :: v364 = new []::
18163 :: EXPR :: modify :: I :: v364[#(1)] = #(2)::
18190 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Kr = v359::
18192 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v368 = new org.biojava.nbio.structure.Element::DD,18225:CF,18193
18193 :: NORM :: declaration :: [I :: v374 = new []::
18194 :: EXPR :: modify :: I :: v374[#(0)] = #(-1)::
18198 :: EXPR :: modify :: I :: v374[#(2)] = #(1)::
18225 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rb = v368::
18227 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v377 = new org.biojava.nbio.structure.Element::DD,18260:CF,18228
18228 :: NORM :: declaration :: [I :: v382 = new []::
18229 :: EXPR :: modify :: I :: v382[#(1)] = #(1)::
18233 :: EXPR :: modify :: I :: v382[#(2)] = #(2)::
18260 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sr = v377::
18262 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v386 = new org.biojava.nbio.structure.Element::DD,18299:CF,18263
18263 :: NORM :: declaration :: [I :: v391 = new []::
18264 :: EXPR :: modify :: I :: v391[#(1)] = #(1)::
18268 :: EXPR :: modify :: I :: v391[#(2)] = #(2)::
18272 :: EXPR :: modify :: I :: v391[#(3)] = #(3)::
18299 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Y = v386::
18301 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v394 = new org.biojava.nbio.structure.Element::DD,18342:CF,18302
18302 :: NORM :: declaration :: [I :: v401 = new []::
18303 :: EXPR :: modify :: I :: v401[#(1)] = #(1)::
18307 :: EXPR :: modify :: I :: v401[#(2)] = #(2)::
18311 :: EXPR :: modify :: I :: v401[#(3)] = #(3)::
18315 :: EXPR :: modify :: I :: v401[#(4)] = #(4)::
18342 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Zr = v394::
18344 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v405 = new org.biojava.nbio.structure.Element::DD,18393:CF,18345
18345 :: NORM :: declaration :: [I :: v411 = new []::
18346 :: EXPR :: modify :: I :: v411[#(0)] = #(-1)::
18350 :: EXPR :: modify :: I :: v411[#(2)] = #(1)::
18354 :: EXPR :: modify :: I :: v411[#(3)] = #(2)::
18358 :: EXPR :: modify :: I :: v411[#(4)] = #(3)::
18362 :: EXPR :: modify :: I :: v411[#(5)] = #(4)::
18366 :: EXPR :: modify :: I :: v411[#(6)] = #(5)::
18393 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nb = v405::
18395 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v414 = new org.biojava.nbio.structure.Element::DD,18452:CF,18396
18396 :: NORM :: declaration :: [I :: v420 = new []::
18397 :: EXPR :: modify :: I :: v420[#(0)] = #(-2)::
18401 :: EXPR :: modify :: I :: v420[#(1)] = #(-1)::
18405 :: EXPR :: modify :: I :: v420[#(3)] = #(1)::
18409 :: EXPR :: modify :: I :: v420[#(4)] = #(2)::
18413 :: EXPR :: modify :: I :: v420[#(5)] = #(3)::
18417 :: EXPR :: modify :: I :: v420[#(6)] = #(4)::
18421 :: EXPR :: modify :: I :: v420[#(7)] = #(5)::
18425 :: EXPR :: modify :: I :: v420[#(8)] = #(6)::
18452 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Mo = v414::
18454 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v424 = new org.biojava.nbio.structure.Element::DD,18515:CF,18455
18455 :: NORM :: declaration :: [I :: v431 = new []::
18456 :: EXPR :: modify :: I :: v431[#(0)] = #(-3)::
18460 :: EXPR :: modify :: I :: v431[#(1)] = #(-1)::
18464 :: EXPR :: modify :: I :: v431[#(3)] = #(1)::
18468 :: EXPR :: modify :: I :: v431[#(4)] = #(2)::
18472 :: EXPR :: modify :: I :: v431[#(5)] = #(3)::
18476 :: EXPR :: modify :: I :: v431[#(6)] = #(4)::
18480 :: EXPR :: modify :: I :: v431[#(7)] = #(5)::
18484 :: EXPR :: modify :: I :: v431[#(8)] = #(6)::
18488 :: EXPR :: modify :: I :: v431[#(9)] = #(7)::
18515 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tc = v424::
18517 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v434 = new org.biojava.nbio.structure.Element::DD,18578:CF,18518
18518 :: NORM :: declaration :: [I :: v440 = new []::
18519 :: EXPR :: modify :: I :: v440[#(0)] = #(-2)::
18523 :: EXPR :: modify :: I :: v440[#(2)] = #(1)::
18527 :: EXPR :: modify :: I :: v440[#(3)] = #(2)::
18531 :: EXPR :: modify :: I :: v440[#(4)] = #(3)::
18535 :: EXPR :: modify :: I :: v440[#(5)] = #(4)::
18539 :: EXPR :: modify :: I :: v440[#(6)] = #(5)::
18543 :: EXPR :: modify :: I :: v440[#(7)] = #(6)::
18547 :: EXPR :: modify :: I :: v440[#(8)] = #(7)::
18551 :: EXPR :: modify :: I :: v440[#(9)] = #(8)::
18578 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ru = v434::
18580 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v443 = new org.biojava.nbio.structure.Element::DD,18633:CF,18581
18581 :: NORM :: declaration :: [I :: v448 = new []::
18582 :: EXPR :: modify :: I :: v448[#(0)] = #(-1)::
18586 :: EXPR :: modify :: I :: v448[#(2)] = #(1)::
18590 :: EXPR :: modify :: I :: v448[#(3)] = #(2)::
18594 :: EXPR :: modify :: I :: v448[#(4)] = #(3)::
18598 :: EXPR :: modify :: I :: v448[#(5)] = #(4)::
18602 :: EXPR :: modify :: I :: v448[#(6)] = #(5)::
18606 :: EXPR :: modify :: I :: v448[#(7)] = #(6)::
18633 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rh = v443::
18635 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v452 = new org.biojava.nbio.structure.Element::DD,18672:CF,18636
18636 :: NORM :: declaration :: [I :: v456 = new []::
18637 :: EXPR :: modify :: I :: v456[#(1)] = #(1)::
18641 :: EXPR :: modify :: I :: v456[#(2)] = #(2)::
18645 :: EXPR :: modify :: I :: v456[#(3)] = #(4)::
18672 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pd = v452::
18674 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v459 = new org.biojava.nbio.structure.Element::DD,18715:CF,18675
18675 :: NORM :: declaration :: [I :: v463 = new []::
18676 :: EXPR :: modify :: I :: v463[#(1)] = #(1)::
18680 :: EXPR :: modify :: I :: v463[#(2)] = #(2)::
18684 :: EXPR :: modify :: I :: v463[#(3)] = #(3)::
18688 :: EXPR :: modify :: I :: v463[#(4)] = #(4)::
18715 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ag = v459::
18717 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v467 = new org.biojava.nbio.structure.Element::DD,18750:CF,18718
18718 :: NORM :: declaration :: [I :: v471 = new []::
18719 :: EXPR :: modify :: I :: v471[#(1)] = #(1)::
18723 :: EXPR :: modify :: I :: v471[#(2)] = #(2)::
18750 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cd = v467::
18752 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v475 = new org.biojava.nbio.structure.Element::DD,18789:CF,18753
18753 :: NORM :: declaration :: [I :: v479 = new []::
18754 :: EXPR :: modify :: I :: v479[#(1)] = #(1)::
18758 :: EXPR :: modify :: I :: v479[#(2)] = #(2)::
18762 :: EXPR :: modify :: I :: v479[#(3)] = #(3)::
18789 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.In = v475::
18791 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v483 = new org.biojava.nbio.structure.Element::DD,18828:CF,18792
18792 :: NORM :: declaration :: [I :: v490 = new []::
18793 :: EXPR :: modify :: I :: v490[#(0)] = #(-4)::
18797 :: EXPR :: modify :: I :: v490[#(2)] = #(2)::
18801 :: EXPR :: modify :: I :: v490[#(3)] = #(4)::
18828 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sn = v483::
18830 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v493 = new org.biojava.nbio.structure.Element::DD,18867:CF,18831
18831 :: NORM :: declaration :: [I :: v498 = new []::
18832 :: EXPR :: modify :: I :: v498[#(0)] = #(-3)::
18836 :: EXPR :: modify :: I :: v498[#(2)] = #(3)::
18840 :: EXPR :: modify :: I :: v498[#(3)] = #(5)::
18867 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sb = v493::
18869 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v502 = new org.biojava.nbio.structure.Element::DD,18914:CF,18870
18870 :: NORM :: declaration :: [I :: v507 = new []::
18871 :: EXPR :: modify :: I :: v507[#(0)] = #(-2)::
18875 :: EXPR :: modify :: I :: v507[#(2)] = #(2)::
18879 :: EXPR :: modify :: I :: v507[#(3)] = #(4)::
18883 :: EXPR :: modify :: I :: v507[#(4)] = #(5)::
18887 :: EXPR :: modify :: I :: v507[#(5)] = #(6)::
18914 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Te = v502::
18916 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v511 = new org.biojava.nbio.structure.Element::DD,18965:CF,18917
18917 :: NORM :: declaration :: [I :: v515 = new []::
18918 :: EXPR :: modify :: I :: v515[#(0)] = #(-1)::
18922 :: EXPR :: modify :: I :: v515[#(2)] = #(1)::
18926 :: EXPR :: modify :: I :: v515[#(3)] = #(3)::
18930 :: EXPR :: modify :: I :: v515[#(4)] = #(4)::
18934 :: EXPR :: modify :: I :: v515[#(5)] = #(5)::
18938 :: EXPR :: modify :: I :: v515[#(6)] = #(7)::
18965 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.I = v511::
18967 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v519 = new org.biojava.nbio.structure.Element::DD,19012:CF,18968
18968 :: NORM :: declaration :: [I :: v524 = new []::
18969 :: EXPR :: modify :: I :: v524[#(1)] = #(1)::
18973 :: EXPR :: modify :: I :: v524[#(2)] = #(2)::
18977 :: EXPR :: modify :: I :: v524[#(3)] = #(4)::
18981 :: EXPR :: modify :: I :: v524[#(4)] = #(6)::
18985 :: EXPR :: modify :: I :: v524[#(5)] = #(8)::
19012 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Xe = v519::
19014 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v528 = new org.biojava.nbio.structure.Element::DD,19047:CF,19015
19015 :: NORM :: declaration :: [I :: v533 = new []::
19016 :: EXPR :: modify :: I :: v533[#(0)] = #(-1)::
19020 :: EXPR :: modify :: I :: v533[#(2)] = #(1)::
19047 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cs = v528::
19049 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v537 = new org.biojava.nbio.structure.Element::DD,19078:CF,19050
19050 :: NORM :: declaration :: [I :: v542 = new []::
19051 :: EXPR :: modify :: I :: v542[#(1)] = #(2)::
19078 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ba = v537::
19080 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v546 = new org.biojava.nbio.structure.Element::DD,19113:CF,19081
19081 :: NORM :: declaration :: [I :: v549 = new []::
19082 :: EXPR :: modify :: I :: v549[#(1)] = #(2)::
19086 :: EXPR :: modify :: I :: v549[#(2)] = #(3)::
19113 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.La = v546::
19115 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v552 = new org.biojava.nbio.structure.Element::DD,19152:CF,19116
19116 :: NORM :: declaration :: [I :: v557 = new []::
19117 :: EXPR :: modify :: I :: v557[#(1)] = #(2)::
19121 :: EXPR :: modify :: I :: v557[#(2)] = #(3)::
19125 :: EXPR :: modify :: I :: v557[#(3)] = #(4)::
19152 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ce = v552::
19154 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v560 = new org.biojava.nbio.structure.Element::DD,19191:CF,19155
19155 :: NORM :: declaration :: [I :: v565 = new []::
19156 :: EXPR :: modify :: I :: v565[#(1)] = #(2)::
19160 :: EXPR :: modify :: I :: v565[#(2)] = #(3)::
19164 :: EXPR :: modify :: I :: v565[#(3)] = #(4)::
19191 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pr = v560::
19193 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v568 = new org.biojava.nbio.structure.Element::DD,19230:CF,19194
19194 :: NORM :: declaration :: [I :: v572 = new []::
19195 :: EXPR :: modify :: I :: v572[#(1)] = #(2)::
19199 :: EXPR :: modify :: I :: v572[#(2)] = #(3)::
19203 :: EXPR :: modify :: I :: v572[#(3)] = #(4)::
19230 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Nd = v568::
19232 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v575 = new org.biojava.nbio.structure.Element::DD,19265:CF,19233
19233 :: NORM :: declaration :: [I :: v580 = new []::
19234 :: EXPR :: modify :: I :: v580[#(1)] = #(2)::
19238 :: EXPR :: modify :: I :: v580[#(2)] = #(3)::
19265 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pm = v575::
19267 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v583 = new org.biojava.nbio.structure.Element::DD,19300:CF,19268
19268 :: NORM :: declaration :: [I :: v589 = new []::
19269 :: EXPR :: modify :: I :: v589[#(1)] = #(2)::
19273 :: EXPR :: modify :: I :: v589[#(2)] = #(3)::
19300 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Sm = v583::
19302 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v593 = new org.biojava.nbio.structure.Element::DD,19335:CF,19303
19303 :: NORM :: declaration :: [I :: v598 = new []::
19304 :: EXPR :: modify :: I :: v598[#(1)] = #(2)::
19308 :: EXPR :: modify :: I :: v598[#(2)] = #(3)::
19335 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Eu = v593::
19337 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v601 = new org.biojava.nbio.structure.Element::DD,19374:CF,19338
19338 :: NORM :: declaration :: [I :: v605 = new []::
19339 :: EXPR :: modify :: I :: v605[#(1)] = #(1)::
19343 :: EXPR :: modify :: I :: v605[#(2)] = #(2)::
19347 :: EXPR :: modify :: I :: v605[#(3)] = #(3)::
19374 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Gd = v601::
19376 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v608 = new org.biojava.nbio.structure.Element::DD,19417:CF,19377
19377 :: NORM :: declaration :: [I :: v614 = new []::
19378 :: EXPR :: modify :: I :: v614[#(1)] = #(1)::
19382 :: EXPR :: modify :: I :: v614[#(2)] = #(2)::
19386 :: EXPR :: modify :: I :: v614[#(3)] = #(3)::
19390 :: EXPR :: modify :: I :: v614[#(4)] = #(4)::
19417 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tb = v608::
19419 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v617 = new org.biojava.nbio.structure.Element::DD,19456:CF,19420
19420 :: NORM :: declaration :: [I :: v621 = new []::
19421 :: EXPR :: modify :: I :: v621[#(1)] = #(2)::
19425 :: EXPR :: modify :: I :: v621[#(2)] = #(3)::
19429 :: EXPR :: modify :: I :: v621[#(3)] = #(4)::
19456 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Dy = v617::
19458 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v624 = new org.biojava.nbio.structure.Element::DD,19491:CF,19459
19459 :: NORM :: declaration :: [I :: v628 = new []::
19460 :: EXPR :: modify :: I :: v628[#(1)] = #(2)::
19464 :: EXPR :: modify :: I :: v628[#(2)] = #(3)::
19491 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ho = v624::
19493 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v632 = new org.biojava.nbio.structure.Element::DD,19526:CF,19494
19494 :: NORM :: declaration :: [I :: v638 = new []::
19495 :: EXPR :: modify :: I :: v638[#(1)] = #(2)::
19499 :: EXPR :: modify :: I :: v638[#(2)] = #(3)::
19526 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Er = v632::
19528 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v641 = new org.biojava.nbio.structure.Element::DD,19565:CF,19529
19529 :: NORM :: declaration :: [I :: v646 = new []::
19530 :: EXPR :: modify :: I :: v646[#(1)] = #(2)::
19534 :: EXPR :: modify :: I :: v646[#(2)] = #(3)::
19538 :: EXPR :: modify :: I :: v646[#(3)] = #(4)::
19565 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tm = v641::
19567 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v649 = new org.biojava.nbio.structure.Element::DD,19600:CF,19568
19568 :: NORM :: declaration :: [I :: v654 = new []::
19569 :: EXPR :: modify :: I :: v654[#(1)] = #(2)::
19573 :: EXPR :: modify :: I :: v654[#(2)] = #(3)::
19600 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Yb = v649::
19602 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v657 = new org.biojava.nbio.structure.Element::DD,19631:CF,19603
19603 :: NORM :: declaration :: [I :: v662 = new []::
19604 :: EXPR :: modify :: I :: v662[#(1)] = #(3)::
19631 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lu = v657::
19633 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v665 = new org.biojava.nbio.structure.Element::DD,19670:CF,19634
19634 :: NORM :: declaration :: [I :: v669 = new []::
19635 :: EXPR :: modify :: I :: v669[#(1)] = #(2)::
19639 :: EXPR :: modify :: I :: v669[#(2)] = #(3)::
19643 :: EXPR :: modify :: I :: v669[#(3)] = #(4)::
19670 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hf = v665::
19672 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v672 = new org.biojava.nbio.structure.Element::DD,19717:CF,19673
19673 :: NORM :: declaration :: [I :: v677 = new []::
19674 :: EXPR :: modify :: I :: v677[#(0)] = #(-1)::
19678 :: EXPR :: modify :: I :: v677[#(2)] = #(2)::
19682 :: EXPR :: modify :: I :: v677[#(3)] = #(3)::
19686 :: EXPR :: modify :: I :: v677[#(4)] = #(4)::
19690 :: EXPR :: modify :: I :: v677[#(5)] = #(5)::
19717 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ta = v672::
19719 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v680 = new org.biojava.nbio.structure.Element::DD,19776:CF,19720
19720 :: NORM :: declaration :: [I :: v685 = new []::
19721 :: EXPR :: modify :: I :: v685[#(0)] = #(-2)::
19725 :: EXPR :: modify :: I :: v685[#(1)] = #(-1)::
19729 :: EXPR :: modify :: I :: v685[#(3)] = #(1)::
19733 :: EXPR :: modify :: I :: v685[#(4)] = #(2)::
19737 :: EXPR :: modify :: I :: v685[#(5)] = #(3)::
19741 :: EXPR :: modify :: I :: v685[#(6)] = #(4)::
19745 :: EXPR :: modify :: I :: v685[#(7)] = #(5)::
19749 :: EXPR :: modify :: I :: v685[#(8)] = #(6)::
19776 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.W = v680::
19778 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v689 = new org.biojava.nbio.structure.Element::DD,19839:CF,19779
19779 :: NORM :: declaration :: [I :: v694 = new []::
19780 :: EXPR :: modify :: I :: v694[#(0)] = #(-3)::
19784 :: EXPR :: modify :: I :: v694[#(1)] = #(-1)::
19788 :: EXPR :: modify :: I :: v694[#(3)] = #(1)::
19792 :: EXPR :: modify :: I :: v694[#(4)] = #(2)::
19796 :: EXPR :: modify :: I :: v694[#(5)] = #(3)::
19800 :: EXPR :: modify :: I :: v694[#(6)] = #(4)::
19804 :: EXPR :: modify :: I :: v694[#(7)] = #(5)::
19808 :: EXPR :: modify :: I :: v694[#(8)] = #(6)::
19812 :: EXPR :: modify :: I :: v694[#(9)] = #(7)::
19839 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Re = v689::
19841 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v697 = new org.biojava.nbio.structure.Element::DD,19906:CF,19842
19842 :: NORM :: declaration :: [I :: v701 = new []::
19843 :: EXPR :: modify :: I :: v701[#(0)] = #(-2)::
19847 :: EXPR :: modify :: I :: v701[#(1)] = #(-1)::
19851 :: EXPR :: modify :: I :: v701[#(3)] = #(1)::
19855 :: EXPR :: modify :: I :: v701[#(4)] = #(2)::
19859 :: EXPR :: modify :: I :: v701[#(5)] = #(3)::
19863 :: EXPR :: modify :: I :: v701[#(6)] = #(4)::
19867 :: EXPR :: modify :: I :: v701[#(7)] = #(5)::
19871 :: EXPR :: modify :: I :: v701[#(8)] = #(6)::
19875 :: EXPR :: modify :: I :: v701[#(9)] = #(7)::
19879 :: EXPR :: modify :: I :: v701[#(10)] = #(8)::
19906 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Os = v697::
19908 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v704 = new org.biojava.nbio.structure.Element::DD,19969:CF,19909
19909 :: NORM :: declaration :: [I :: v707 = new []::
19910 :: EXPR :: modify :: I :: v707[#(0)] = #(-3)::
19914 :: EXPR :: modify :: I :: v707[#(1)] = #(-1)::
19918 :: EXPR :: modify :: I :: v707[#(3)] = #(1)::
19922 :: EXPR :: modify :: I :: v707[#(4)] = #(2)::
19926 :: EXPR :: modify :: I :: v707[#(5)] = #(3)::
19930 :: EXPR :: modify :: I :: v707[#(6)] = #(4)::
19934 :: EXPR :: modify :: I :: v707[#(7)] = #(5)::
19938 :: EXPR :: modify :: I :: v707[#(8)] = #(6)::
19942 :: EXPR :: modify :: I :: v707[#(9)] = #(8)::
19969 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ir = v704::
19971 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v710 = new org.biojava.nbio.structure.Element::DD,20028:CF,19972
19972 :: NORM :: declaration :: [I :: v713 = new []::
19973 :: EXPR :: modify :: I :: v713[#(0)] = #(-2)::
19977 :: EXPR :: modify :: I :: v713[#(1)] = #(-1)::
19981 :: EXPR :: modify :: I :: v713[#(3)] = #(1)::
19985 :: EXPR :: modify :: I :: v713[#(4)] = #(2)::
19989 :: EXPR :: modify :: I :: v713[#(5)] = #(3)::
19993 :: EXPR :: modify :: I :: v713[#(6)] = #(4)::
19997 :: EXPR :: modify :: I :: v713[#(7)] = #(5)::
20001 :: EXPR :: modify :: I :: v713[#(8)] = #(6)::
20028 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pt = v710::
20030 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v716 = new org.biojava.nbio.structure.Element::DD,20075:CF,20031
20031 :: NORM :: declaration :: [I :: v720 = new []::
20032 :: EXPR :: modify :: I :: v720[#(0)] = #(-1)::
20036 :: EXPR :: modify :: I :: v720[#(2)] = #(1)::
20040 :: EXPR :: modify :: I :: v720[#(3)] = #(2)::
20044 :: EXPR :: modify :: I :: v720[#(4)] = #(3)::
20048 :: EXPR :: modify :: I :: v720[#(5)] = #(5)::
20075 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Au = v716::
20077 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v724 = new org.biojava.nbio.structure.Element::DD,20114:CF,20078
20078 :: NORM :: declaration :: [I :: v727 = new []::
20079 :: EXPR :: modify :: I :: v727[#(1)] = #(1)::
20083 :: EXPR :: modify :: I :: v727[#(2)] = #(2)::
20087 :: EXPR :: modify :: I :: v727[#(3)] = #(4)::
20114 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Hg = v724::
20116 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v731 = new org.biojava.nbio.structure.Element::DD,20153:CF,20117
20117 :: NORM :: declaration :: [I :: v735 = new []::
20118 :: EXPR :: modify :: I :: v735[#(0)] = #(-1)::
20122 :: EXPR :: modify :: I :: v735[#(2)] = #(1)::
20126 :: EXPR :: modify :: I :: v735[#(3)] = #(3)::
20153 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Tl = v731::
20155 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v738 = new org.biojava.nbio.structure.Element::DD,20192:CF,20156
20156 :: NORM :: declaration :: [I :: v742 = new []::
20157 :: EXPR :: modify :: I :: v742[#(0)] = #(-4)::
20161 :: EXPR :: modify :: I :: v742[#(2)] = #(2)::
20165 :: EXPR :: modify :: I :: v742[#(3)] = #(4)::
20192 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pb = v738::
20194 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v746 = new org.biojava.nbio.structure.Element::DD,20235:CF,20195
20195 :: NORM :: declaration :: [I :: v750 = new []::
20196 :: EXPR :: modify :: I :: v750[#(0)] = #(-3)::
20200 :: EXPR :: modify :: I :: v750[#(2)] = #(1)::
20204 :: EXPR :: modify :: I :: v750[#(3)] = #(3)::
20208 :: EXPR :: modify :: I :: v750[#(4)] = #(5)::
20235 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bi = v746::
20237 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v753 = new org.biojava.nbio.structure.Element::DD,20282:CF,20238
20238 :: NORM :: declaration :: [I :: v757 = new []::
20239 :: EXPR :: modify :: I :: v757[#(0)] = #(-2)::
20243 :: EXPR :: modify :: I :: v757[#(2)] = #(2)::
20247 :: EXPR :: modify :: I :: v757[#(3)] = #(4)::
20251 :: EXPR :: modify :: I :: v757[#(4)] = #(5)::
20255 :: EXPR :: modify :: I :: v757[#(5)] = #(6)::
20282 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Po = v753::
20284 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v760 = new org.biojava.nbio.structure.Element::DD,20329:CF,20285
20285 :: NORM :: declaration :: [I :: v764 = new []::
20286 :: EXPR :: modify :: I :: v764[#(0)] = #(-1)::
20290 :: EXPR :: modify :: I :: v764[#(2)] = #(1)::
20294 :: EXPR :: modify :: I :: v764[#(3)] = #(3)::
20298 :: EXPR :: modify :: I :: v764[#(4)] = #(5)::
20302 :: EXPR :: modify :: I :: v764[#(5)] = #(7)::
20329 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.At = v760::
20331 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v767 = new org.biojava.nbio.structure.Element::DD,20364:CF,20332
20332 :: NORM :: declaration :: [I :: v771 = new []::
20333 :: EXPR :: modify :: I :: v771[#(1)] = #(2)::
20337 :: EXPR :: modify :: I :: v771[#(2)] = #(6)::
20364 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Rn = v767::
20366 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v774 = new org.biojava.nbio.structure.Element::DD,20395:CF,20367
20367 :: NORM :: declaration :: [I :: v778 = new []::
20368 :: EXPR :: modify :: I :: v778[#(1)] = #(1)::
20395 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fr = v774::
20397 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v782 = new org.biojava.nbio.structure.Element::DD,20426:CF,20398
20398 :: NORM :: declaration :: [I :: v787 = new []::
20399 :: EXPR :: modify :: I :: v787[#(1)] = #(2)::
20426 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ra = v782::
20428 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v790 = new org.biojava.nbio.structure.Element::DD,20461:CF,20429
20429 :: NORM :: declaration :: [I :: v794 = new []::
20430 :: EXPR :: modify :: I :: v794[#(1)] = #(2)::
20434 :: EXPR :: modify :: I :: v794[#(2)] = #(3)::
20461 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Ac = v790::
20463 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v797 = new org.biojava.nbio.structure.Element::DD,20500:CF,20464
20464 :: NORM :: declaration :: [I :: v802 = new []::
20465 :: EXPR :: modify :: I :: v802[#(1)] = #(2)::
20469 :: EXPR :: modify :: I :: v802[#(2)] = #(3)::
20473 :: EXPR :: modify :: I :: v802[#(3)] = #(4)::
20500 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Th = v797::
20502 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v805 = new org.biojava.nbio.structure.Element::DD,20543:CF,20503
20503 :: NORM :: declaration :: [I :: v808 = new []::
20504 :: EXPR :: modify :: I :: v808[#(1)] = #(2)::
20508 :: EXPR :: modify :: I :: v808[#(2)] = #(3)::
20512 :: EXPR :: modify :: I :: v808[#(3)] = #(4)::
20516 :: EXPR :: modify :: I :: v808[#(4)] = #(5)::
20543 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pa = v805::
20545 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v811 = new org.biojava.nbio.structure.Element::DD,20590:CF,20546
20546 :: NORM :: declaration :: [I :: v816 = new []::
20547 :: EXPR :: modify :: I :: v816[#(1)] = #(2)::
20551 :: EXPR :: modify :: I :: v816[#(2)] = #(3)::
20555 :: EXPR :: modify :: I :: v816[#(3)] = #(4)::
20559 :: EXPR :: modify :: I :: v816[#(4)] = #(5)::
20563 :: EXPR :: modify :: I :: v816[#(5)] = #(6)::
20590 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.U = v811::
20592 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v819 = new org.biojava.nbio.structure.Element::DD,20637:CF,20593
20593 :: NORM :: declaration :: [I :: v823 = new []::
20594 :: EXPR :: modify :: I :: v823[#(1)] = #(3)::
20598 :: EXPR :: modify :: I :: v823[#(2)] = #(4)::
20602 :: EXPR :: modify :: I :: v823[#(3)] = #(5)::
20606 :: EXPR :: modify :: I :: v823[#(4)] = #(6)::
20610 :: EXPR :: modify :: I :: v823[#(5)] = #(7)::
20637 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Np = v819::
20639 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v826 = new org.biojava.nbio.structure.Element::DD,20688:CF,20640
20640 :: NORM :: declaration :: [I :: v829 = new []::
20641 :: EXPR :: modify :: I :: v829[#(1)] = #(3)::
20645 :: EXPR :: modify :: I :: v829[#(2)] = #(4)::
20649 :: EXPR :: modify :: I :: v829[#(3)] = #(5)::
20653 :: EXPR :: modify :: I :: v829[#(4)] = #(6)::
20657 :: EXPR :: modify :: I :: v829[#(5)] = #(7)::
20661 :: EXPR :: modify :: I :: v829[#(6)] = #(8)::
20688 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Pu = v826::
20690 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v832 = new org.biojava.nbio.structure.Element::DD,20739:CF,20691
20691 :: NORM :: declaration :: [I :: v835 = new []::
20692 :: EXPR :: modify :: I :: v835[#(1)] = #(2)::
20696 :: EXPR :: modify :: I :: v835[#(2)] = #(3)::
20700 :: EXPR :: modify :: I :: v835[#(3)] = #(4)::
20704 :: EXPR :: modify :: I :: v835[#(4)] = #(5)::
20708 :: EXPR :: modify :: I :: v835[#(5)] = #(6)::
20712 :: EXPR :: modify :: I :: v835[#(6)] = #(7)::
20739 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Am = v832::
20741 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v838 = new org.biojava.nbio.structure.Element::DD,20774:CF,20742
20742 :: NORM :: declaration :: [I :: v841 = new []::
20743 :: EXPR :: modify :: I :: v841[#(1)] = #(3)::
20747 :: EXPR :: modify :: I :: v841[#(2)] = #(4)::
20774 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cm = v838::
20776 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v844 = new org.biojava.nbio.structure.Element::DD,20813:CF,20777
20777 :: NORM :: declaration :: [I :: v848 = new []::
20778 :: EXPR :: modify :: I :: v848[#(1)] = #(2)::
20782 :: EXPR :: modify :: I :: v848[#(2)] = #(3)::
20786 :: EXPR :: modify :: I :: v848[#(3)] = #(4)::
20813 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Bk = v844::
20815 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v851 = new org.biojava.nbio.structure.Element::DD,20852:CF,20816
20816 :: NORM :: declaration :: [I :: v854 = new []::
20817 :: EXPR :: modify :: I :: v854[#(1)] = #(2)::
20821 :: EXPR :: modify :: I :: v854[#(2)] = #(3)::
20825 :: EXPR :: modify :: I :: v854[#(3)] = #(4)::
20852 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Cf = v851::
20854 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v857 = new org.biojava.nbio.structure.Element::DD,20887:CF,20855
20855 :: NORM :: declaration :: [I :: v860 = new []::
20856 :: EXPR :: modify :: I :: v860[#(1)] = #(2)::
20860 :: EXPR :: modify :: I :: v860[#(2)] = #(3)::
20887 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Es = v857::
20889 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v863 = new org.biojava.nbio.structure.Element::DD,20922:CF,20890
20890 :: NORM :: declaration :: [I :: v866 = new []::
20891 :: EXPR :: modify :: I :: v866[#(1)] = #(2)::
20895 :: EXPR :: modify :: I :: v866[#(2)] = #(3)::
20922 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Fm = v863::
20924 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v869 = new org.biojava.nbio.structure.Element::DD,20957:CF,20925
20925 :: NORM :: declaration :: [I :: v872 = new []::
20926 :: EXPR :: modify :: I :: v872[#(1)] = #(2)::
20930 :: EXPR :: modify :: I :: v872[#(2)] = #(3)::
20957 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Md = v869::
20959 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v875 = new org.biojava.nbio.structure.Element::DD,20992:CF,20960
20960 :: NORM :: declaration :: [I :: v877 = new []::
20961 :: EXPR :: modify :: I :: v877[#(1)] = #(2)::
20965 :: EXPR :: modify :: I :: v877[#(2)] = #(3)::
20992 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.No = v875::
20994 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v880 = new org.biojava.nbio.structure.Element::DD,21023:CF,20995
20995 :: NORM :: declaration :: [I :: v883 = new []::
20996 :: EXPR :: modify :: I :: v883[#(1)] = #(3)::
21023 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.Lr = v880::
21025 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Element :: v886 = new org.biojava.nbio.structure.Element::DD,21049
21049 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.R = v886::
21051 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v891 = new org.biojava.nbio.structure.Element[]::
21052 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v892 = org.biojava.nbio.structure.Element.H::DD,21054
21054 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(0)] = v892::
21058 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v893 = org.biojava.nbio.structure.Element.C::DD,21060
21060 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(1)] = v893::
21064 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v894 = org.biojava.nbio.structure.Element.N::DD,21066
21066 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(2)] = v894::
21070 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v895 = org.biojava.nbio.structure.Element.O::DD,21072
21072 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(3)] = v895::
21076 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v896 = org.biojava.nbio.structure.Element.D::DD,21078
21078 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(4)] = v896::
21082 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v897 = org.biojava.nbio.structure.Element.T::DD,21084
21084 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(5)] = v897::
21088 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v898 = org.biojava.nbio.structure.Element.He::DD,21090
21090 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(6)] = v898::
21094 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v899 = org.biojava.nbio.structure.Element.Li::DD,21096
21096 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(7)] = v899::
21100 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v900 = org.biojava.nbio.structure.Element.Be::DD,21102
21102 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(8)] = v900::
21106 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v901 = org.biojava.nbio.structure.Element.B::DD,21108
21108 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(9)] = v901::
21112 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v902 = org.biojava.nbio.structure.Element.F::DD,21114
21114 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(10)] = v902::
21118 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v903 = org.biojava.nbio.structure.Element.Ne::DD,21120
21120 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(11)] = v903::
21124 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v904 = org.biojava.nbio.structure.Element.Na::DD,21126
21126 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(12)] = v904::
21130 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v905 = org.biojava.nbio.structure.Element.Mg::DD,21132
21132 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(13)] = v905::
21136 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v906 = org.biojava.nbio.structure.Element.Al::DD,21138
21138 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(14)] = v906::
21142 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v907 = org.biojava.nbio.structure.Element.Si::DD,21144
21144 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(15)] = v907::
21148 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v908 = org.biojava.nbio.structure.Element.P::DD,21150
21150 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(16)] = v908::
21154 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v909 = org.biojava.nbio.structure.Element.S::DD,21156
21156 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(17)] = v909::
21160 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v910 = org.biojava.nbio.structure.Element.Cl::DD,21162
21162 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(18)] = v910::
21166 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v911 = org.biojava.nbio.structure.Element.Ar::DD,21168
21168 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(19)] = v911::
21172 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v912 = org.biojava.nbio.structure.Element.K::DD,21174
21174 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(20)] = v912::
21178 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v913 = org.biojava.nbio.structure.Element.Ca::DD,21180
21180 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(21)] = v913::
21184 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v914 = org.biojava.nbio.structure.Element.Sc::DD,21186
21186 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(22)] = v914::
21190 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v915 = org.biojava.nbio.structure.Element.Ti::DD,21192
21192 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(23)] = v915::
21196 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v916 = org.biojava.nbio.structure.Element.V::DD,21198
21198 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(24)] = v916::
21202 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v917 = org.biojava.nbio.structure.Element.Cr::DD,21204
21204 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(25)] = v917::
21208 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v918 = org.biojava.nbio.structure.Element.Mn::DD,21210
21210 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(26)] = v918::
21214 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v919 = org.biojava.nbio.structure.Element.Fe::DD,21216
21216 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(27)] = v919::
21220 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v920 = org.biojava.nbio.structure.Element.Co::DD,21222
21222 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(28)] = v920::
21226 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v921 = org.biojava.nbio.structure.Element.Ni::DD,21228
21228 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(29)] = v921::
21232 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v922 = org.biojava.nbio.structure.Element.Cu::DD,21234
21234 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(30)] = v922::
21238 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v923 = org.biojava.nbio.structure.Element.Zn::DD,21240
21240 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(31)] = v923::
21244 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v924 = org.biojava.nbio.structure.Element.Ga::DD,21246
21246 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(32)] = v924::
21250 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v925 = org.biojava.nbio.structure.Element.Ge::DD,21252
21252 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(33)] = v925::
21256 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v926 = org.biojava.nbio.structure.Element.As::DD,21258
21258 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(34)] = v926::
21262 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v927 = org.biojava.nbio.structure.Element.Se::DD,21264
21264 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(35)] = v927::
21268 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v928 = org.biojava.nbio.structure.Element.Br::DD,21270
21270 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(36)] = v928::
21274 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v929 = org.biojava.nbio.structure.Element.Kr::DD,21276
21276 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(37)] = v929::
21280 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v930 = org.biojava.nbio.structure.Element.Rb::DD,21282
21282 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(38)] = v930::
21286 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v931 = org.biojava.nbio.structure.Element.Sr::DD,21288
21288 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(39)] = v931::
21292 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v932 = org.biojava.nbio.structure.Element.Y::DD,21294
21294 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(40)] = v932::
21298 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v933 = org.biojava.nbio.structure.Element.Zr::DD,21300
21300 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(41)] = v933::
21304 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v934 = org.biojava.nbio.structure.Element.Nb::DD,21306
21306 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(42)] = v934::
21310 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v935 = org.biojava.nbio.structure.Element.Mo::DD,21312
21312 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(43)] = v935::
21316 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v936 = org.biojava.nbio.structure.Element.Tc::DD,21318
21318 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(44)] = v936::
21322 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v937 = org.biojava.nbio.structure.Element.Ru::DD,21324
21324 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(45)] = v937::
21328 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v938 = org.biojava.nbio.structure.Element.Rh::DD,21330
21330 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(46)] = v938::
21334 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v939 = org.biojava.nbio.structure.Element.Pd::DD,21336
21336 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(47)] = v939::
21340 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v940 = org.biojava.nbio.structure.Element.Ag::DD,21342
21342 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(48)] = v940::
21346 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v941 = org.biojava.nbio.structure.Element.Cd::DD,21348
21348 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(49)] = v941::
21352 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v942 = org.biojava.nbio.structure.Element.In::DD,21354
21354 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(50)] = v942::
21358 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v943 = org.biojava.nbio.structure.Element.Sn::DD,21360
21360 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(51)] = v943::
21364 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v944 = org.biojava.nbio.structure.Element.Sb::DD,21366
21366 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(52)] = v944::
21370 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v945 = org.biojava.nbio.structure.Element.Te::DD,21372
21372 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(53)] = v945::
21376 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v946 = org.biojava.nbio.structure.Element.I::DD,21378
21378 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(54)] = v946::
21382 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v947 = org.biojava.nbio.structure.Element.Xe::DD,21384
21384 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(55)] = v947::
21388 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v948 = org.biojava.nbio.structure.Element.Cs::DD,21390
21390 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(56)] = v948::
21394 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v949 = org.biojava.nbio.structure.Element.Ba::DD,21396
21396 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(57)] = v949::
21400 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v950 = org.biojava.nbio.structure.Element.La::DD,21402
21402 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(58)] = v950::
21406 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v951 = org.biojava.nbio.structure.Element.Ce::DD,21408
21408 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(59)] = v951::
21412 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v952 = org.biojava.nbio.structure.Element.Pr::DD,21414
21414 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(60)] = v952::
21418 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v953 = org.biojava.nbio.structure.Element.Nd::DD,21420
21420 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(61)] = v953::
21424 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v954 = org.biojava.nbio.structure.Element.Pm::DD,21426
21426 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(62)] = v954::
21430 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v955 = org.biojava.nbio.structure.Element.Sm::DD,21432
21432 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(63)] = v955::
21436 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v956 = org.biojava.nbio.structure.Element.Eu::DD,21438
21438 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(64)] = v956::
21442 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v957 = org.biojava.nbio.structure.Element.Gd::DD,21444
21444 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(65)] = v957::
21448 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v958 = org.biojava.nbio.structure.Element.Tb::DD,21450
21450 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(66)] = v958::
21454 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v959 = org.biojava.nbio.structure.Element.Dy::DD,21456
21456 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(67)] = v959::
21460 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v960 = org.biojava.nbio.structure.Element.Ho::DD,21462
21462 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(68)] = v960::
21466 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v961 = org.biojava.nbio.structure.Element.Er::DD,21468
21468 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(69)] = v961::
21472 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v962 = org.biojava.nbio.structure.Element.Tm::DD,21474
21474 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(70)] = v962::
21478 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v963 = org.biojava.nbio.structure.Element.Yb::DD,21480
21480 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(71)] = v963::
21484 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v964 = org.biojava.nbio.structure.Element.Lu::DD,21486
21486 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(72)] = v964::
21490 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v965 = org.biojava.nbio.structure.Element.Hf::DD,21492
21492 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(73)] = v965::
21496 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v966 = org.biojava.nbio.structure.Element.Ta::DD,21498
21498 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(74)] = v966::
21502 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v967 = org.biojava.nbio.structure.Element.W::DD,21504
21504 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(75)] = v967::
21508 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v968 = org.biojava.nbio.structure.Element.Re::DD,21510
21510 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(76)] = v968::
21514 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v969 = org.biojava.nbio.structure.Element.Os::DD,21516
21516 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(77)] = v969::
21520 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v970 = org.biojava.nbio.structure.Element.Ir::DD,21522
21522 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(78)] = v970::
21526 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v971 = org.biojava.nbio.structure.Element.Pt::DD,21528
21528 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(79)] = v971::
21532 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v972 = org.biojava.nbio.structure.Element.Au::DD,21534
21534 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(80)] = v972::
21538 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v973 = org.biojava.nbio.structure.Element.Hg::DD,21540
21540 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(81)] = v973::
21544 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v974 = org.biojava.nbio.structure.Element.Tl::DD,21546
21546 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(82)] = v974::
21550 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v975 = org.biojava.nbio.structure.Element.Pb::DD,21552
21552 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(83)] = v975::
21556 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v976 = org.biojava.nbio.structure.Element.Bi::DD,21558
21558 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(84)] = v976::
21562 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v977 = org.biojava.nbio.structure.Element.Po::DD,21564
21564 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(85)] = v977::
21568 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v978 = org.biojava.nbio.structure.Element.At::DD,21570
21570 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(86)] = v978::
21574 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v979 = org.biojava.nbio.structure.Element.Rn::DD,21576
21576 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(87)] = v979::
21580 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v980 = org.biojava.nbio.structure.Element.Fr::DD,21582
21582 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(88)] = v980::
21586 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v981 = org.biojava.nbio.structure.Element.Ra::DD,21588
21588 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(89)] = v981::
21592 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v982 = org.biojava.nbio.structure.Element.Ac::DD,21594
21594 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(90)] = v982::
21598 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v983 = org.biojava.nbio.structure.Element.Th::DD,21600
21600 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(91)] = v983::
21604 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v984 = org.biojava.nbio.structure.Element.Pa::DD,21606
21606 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(92)] = v984::
21610 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v985 = org.biojava.nbio.structure.Element.U::DD,21612
21612 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(93)] = v985::
21616 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v986 = org.biojava.nbio.structure.Element.Np::DD,21618
21618 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(94)] = v986::
21622 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v987 = org.biojava.nbio.structure.Element.Pu::DD,21624
21624 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(95)] = v987::
21628 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v988 = org.biojava.nbio.structure.Element.Am::DD,21630
21630 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(96)] = v988::
21634 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v989 = org.biojava.nbio.structure.Element.Cm::DD,21636
21636 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(97)] = v989::
21640 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v990 = org.biojava.nbio.structure.Element.Bk::DD,21642
21642 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(98)] = v990::
21646 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v991 = org.biojava.nbio.structure.Element.Cf::DD,21648
21648 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(99)] = v991::
21652 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v992 = org.biojava.nbio.structure.Element.Es::DD,21654
21654 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(100)] = v992::
21658 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v993 = org.biojava.nbio.structure.Element.Fm::DD,21660
21660 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(101)] = v993::
21664 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v994 = org.biojava.nbio.structure.Element.Md::DD,21666
21666 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(102)] = v994::
21670 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v995 = org.biojava.nbio.structure.Element.No::DD,21672
21672 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(103)] = v995::
21676 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v996 = org.biojava.nbio.structure.Element.Lr::DD,21678
21678 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(104)] = v996::
21682 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v997 = org.biojava.nbio.structure.Element.R::DD,21684
21684 :: EXPR :: modify :: Ljava/lang/Object :: v891[#(105)] = v997::
21690 :: NORM :: declaration :: Ljava/util/HashMap :: v998 = new java.util.HashMap::
21696 :: CALL :: call :: [Lorg/biojava/nbio/structure/Element :: v1001 = values()::JM,21699:CL,30771
21699 :: EXPR :: assign :: I :: v1002 = v1001.length::DD,21722
21715 :: CALL :: call :: Ljava/lang/Object :: v1010 = v1004.put(v1008, v1003)::
21721 :: EXPR :: assign :: Ljava/lang/Object :: v1011 = v1012 + #(1)::DD,21724
21722 :: PRED :: IF :: Z :: if (v1012 < v1002) goto 7461::CD,21715:CD,21721:CD,21724
21724 :: EXPR :: assign :: null :: PHI v1012 = #(0), v1011::DD,21721:DD,21722
25336 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.<clinit>()::CD,25352:CD,25358
25352 :: CALL :: call :: Ljava/util/regex/Pattern :: v10 = compile(#(.*\s([A-Z]+)(\s'.+')?...))::
25358 :: CALL :: call :: Ljava/util/TreeMap :: v12 = parseSpaceGroupsXML()::CL,30798
25418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.<clinit>()::CD,25428:CD,25436:CD,25443:CD,25450:CD,25457:CD,25464:CD,25471
25428 :: NORM :: declaration :: Ljava/util/HashSet :: v5 = new java.util.HashSet::
25436 :: CALL :: call :: Z :: v10 = v7.add(#(disulf))::
25443 :: CALL :: call :: Z :: v14 = v11.add(#(covale))::
25450 :: CALL :: call :: Z :: v18 = v15.add(#(covale_base))::
25457 :: CALL :: call :: Z :: v22 = v19.add(#(covale_phosphate))::
25464 :: CALL :: call :: Z :: v26 = v23.add(#(covale_sugar))::
25471 :: CALL :: call :: Z :: v30 = v27.add(#(modres))::
25505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucType.<clinit>()::CD,25508:CD,25509:JM,30992:JM,30989:CD,25520:CD,25522:CD,25523:CD,25534:CD,25536:CD,25537:CD,25548:CD,25550:CD,25551:CD,25562:CD,25564:CD,25565:CD,25576:CD,25578:CD,25579:CD,25590:CD,25592:CD,25593:CD,25604:CD,25606:CD,25607:CD,25618:CD,25620:CD,25621:CD,25627:CD,25633:CD,25639:CD,25645:CD,25651:CD,25657:CD,25663
25508 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v2 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25520
25509 :: CALL :: call :: Ljava/lang/Character :: v8 = valueOf(#(72))::
25520 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix4 = v2::
25522 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v10 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25534
25523 :: CALL :: call :: Ljava/lang/Character :: v16 = valueOf(#(69))::
25534 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.extended = v10::
25536 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v18 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25548
25537 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(66))::
25548 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bridge = v18::
25550 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v26 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25562
25551 :: CALL :: call :: Ljava/lang/Character :: v32 = valueOf(#(71))::
25562 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix3 = v26::
25564 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v34 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25576
25565 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(#(73))::
25576 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.helix5 = v34::
25578 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v42 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25590
25579 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(84))::
25590 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.turn = v42::
25592 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v50 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25604
25593 :: CALL :: call :: Ljava/lang/Character :: v56 = valueOf(#(83))::
25604 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.bend = v50::
25606 :: NORM :: declaration :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v58 = new org.biojava.nbio.structure.secstruc.SecStrucType::DD,25618
25607 :: CALL :: call :: Ljava/lang/Character :: v64 = valueOf(#(32))::
25618 :: EXPR :: modify :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: org.biojava.nbio.structure.secstruc.SecStrucType.coil = v58::
25620 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v67 = new org.biojava.nbio.structure.secstruc.SecStrucType[]::
25621 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v68 = org.biojava.nbio.structure.secstruc.SecStrucType.helix4::DD,25623
25623 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(0)] = v68::
25627 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v69 = org.biojava.nbio.structure.secstruc.SecStrucType.extended::DD,25629
25629 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(1)] = v69::
25633 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v70 = org.biojava.nbio.structure.secstruc.SecStrucType.bridge::DD,25635
25635 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(2)] = v70::
25639 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v71 = org.biojava.nbio.structure.secstruc.SecStrucType.helix3::DD,25641
25641 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(3)] = v71::
25645 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v72 = org.biojava.nbio.structure.secstruc.SecStrucType.helix5::DD,25647
25647 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(4)] = v72::
25651 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v73 = org.biojava.nbio.structure.secstruc.SecStrucType.turn::DD,25653
25653 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(5)] = v73::
25657 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v74 = org.biojava.nbio.structure.secstruc.SecStrucType.bend::DD,25659
25659 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(6)] = v74::
25663 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v75 = org.biojava.nbio.structure.secstruc.SecStrucType.coil::DD,25665
25665 :: EXPR :: modify :: Ljava/lang/Object :: v67[#(7)] = v75::
25746 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.<clinit>()::JM,31019
25820 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.<clinit>()::CD,25823:CD,25826:JM,31100:JM,31103:CD,25837:CD,25839:CD,25842:CD,25853:CD,25855:CD,25856:CD,25866:CD,25868:CD,25869:CD,25875:CD,25881:CD,25889:CD,25902
25823 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v2 = new org.biojava.nbio.structure.GroupType::DD,25837
25826 :: CALL :: call :: Ljava/util/Set :: v8 = matchPolymerTypes(v6)::CL,31027
25837 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.AMINOACID = v2::
25839 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v10 = new org.biojava.nbio.structure.GroupType::DD,25853
25842 :: CALL :: call :: Ljava/util/Set :: v16 = matchPolymerTypes(v14)::CL,31027
25853 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.NUCLEOTIDE = v10::
25855 :: NORM :: declaration :: Lorg/biojava/nbio/structure/GroupType :: v18 = new org.biojava.nbio.structure.GroupType::DD,25866
25856 :: CALL :: call :: Ljava/util/Set :: v23 = getHetatmTypes()::CL,31114
25866 :: EXPR :: modify :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.GroupType.HETATM = v18::
25868 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/GroupType :: v26 = new org.biojava.nbio.structure.GroupType[]::
25869 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v27 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,25871
25871 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(0)] = v27::
25875 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v28 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,25877
25877 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(1)] = v28::
25881 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v29 = org.biojava.nbio.structure.GroupType.HETATM::DD,25883
25883 :: EXPR :: modify :: Ljava/lang/Object :: v26[#(2)] = v29::
25889 :: NORM :: declaration :: [Ljava/lang/String :: v30 = new java.lang.String[]::JM,25902
25890 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(0)] = #(HOH)::
25894 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(1)] = #(DOD)::
25898 :: EXPR :: modify :: Ljava/lang/Object :: v30[#(2)] = #(WAT)::
25902 :: CALL :: call :: Ljava/util/List :: v35 = asList(v30)::JM,25902
25948 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.<clinit>()::CD,25951:JM,31203:CD,25958:CD,25960:CD,25967:CD,25969:CD,25976:CD,25978:CD,25985:CD,25987:CD,25994:CD,25996:CD,26003:CD,26005:CD,26012:CD,26014:CD,26021:CD,26023:CD,26030:CD,26032:CD,26039:CD,26041:CD,26048:CD,26050:CD,26051:CD,26057:CD,26063:CD,26069:CD,26075:CD,26081:CD,26087:CD,26093:CD,26099:CD,26105:CD,26111
25951 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v2 = new org.biojava.nbio.structure.ElementType::DD,25958
25958 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.METALLOID = v2::
25960 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v6 = new org.biojava.nbio.structure.ElementType::DD,25967
25967 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.OTHER_NONMETAL = v6::
25969 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v10 = new org.biojava.nbio.structure.ElementType::DD,25976
25976 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.HALOGEN = v10::
25978 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v14 = new org.biojava.nbio.structure.ElementType::DD,25985
25985 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.NOBLE_GAS = v14::
25987 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v18 = new org.biojava.nbio.structure.ElementType::DD,25994
25994 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALI_METAL = v18::
25996 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v22 = new org.biojava.nbio.structure.ElementType::DD,26003
26003 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL = v22::
26005 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v26 = new org.biojava.nbio.structure.ElementType::DD,26012
26012 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.LANTHANOID = v26::
26014 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v30 = new org.biojava.nbio.structure.ElementType::DD,26021
26021 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.ACTINOID = v30::
26023 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v34 = new org.biojava.nbio.structure.ElementType::DD,26030
26030 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.TRANSITION_METAL = v34::
26032 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v38 = new org.biojava.nbio.structure.ElementType::DD,26039
26039 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL = v38::
26041 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ElementType :: v42 = new org.biojava.nbio.structure.ElementType::DD,26048
26048 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: org.biojava.nbio.structure.ElementType.UNKNOWN = v42::
26050 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ElementType :: v47 = new org.biojava.nbio.structure.ElementType[]::
26051 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v48 = org.biojava.nbio.structure.ElementType.METALLOID::DD,26053
26053 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(0)] = v48::
26057 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v49 = org.biojava.nbio.structure.ElementType.OTHER_NONMETAL::DD,26059
26059 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(1)] = v49::
26063 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v50 = org.biojava.nbio.structure.ElementType.HALOGEN::DD,26065
26065 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(2)] = v50::
26069 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v51 = org.biojava.nbio.structure.ElementType.NOBLE_GAS::DD,26071
26071 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(3)] = v51::
26075 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v52 = org.biojava.nbio.structure.ElementType.ALKALI_METAL::DD,26077
26077 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(4)] = v52::
26081 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v53 = org.biojava.nbio.structure.ElementType.ALKALINE_EARTH_METAL::DD,26083
26083 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(5)] = v53::
26087 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v54 = org.biojava.nbio.structure.ElementType.LANTHANOID::DD,26089
26089 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(6)] = v54::
26093 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v55 = org.biojava.nbio.structure.ElementType.ACTINOID::DD,26095
26095 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(7)] = v55::
26099 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v56 = org.biojava.nbio.structure.ElementType.TRANSITION_METAL::DD,26101
26101 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(8)] = v56::
26105 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v57 = org.biojava.nbio.structure.ElementType.POST_TRANSITION_METAL::DD,26107
26107 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(9)] = v57::
26111 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ElementType :: v58 = org.biojava.nbio.structure.ElementType.UNKNOWN::DD,26113
26113 :: EXPR :: modify :: Ljava/lang/Object :: v47[#(10)] = v58::
26210 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.<clinit>()::CD,26213:JM,31232:JM,31226:JM,31229:CD,26222:CD,26224:CD,26233:CD,26235:CD,26244:CD,26246:CD,26255:CD,26257:CD,26266:CD,26268:CD,26277:CD,26279:CD,26288:CD,26290:CD,26299:CD,26301:CD,26310:CD,26312:CD,26321:CD,26323:CD,26332:CD,26334:CD,26335:CD,26341:CD,26347:CD,26353:CD,26359:CD,26365:CD,26371:CD,26377:CD,26383:CD,26389:CD,26395:CD,26403
26213 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,26222
26222 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION = v2::
26224 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v8 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,26233
26233 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR = v8::
26235 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v12 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,26244
26244 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR = v12::
26246 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v17 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,26255
26255 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY = v17::
26257 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v22 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,26266
26266 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY = v22::
26268 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v27 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,26277
26277 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION = v27::
26279 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v32 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,26288
26288 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION = v32::
26290 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v37 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,26299
26299 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING = v37::
26301 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v42 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,26310
26310 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION = v42::
26312 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v47 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,26321
26321 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER = v47::
26323 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v52 = new org.biojava.nbio.structure.ExperimentalTechnique::DD,26332
26332 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY = v52::
26334 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v58 = new org.biojava.nbio.structure.ExperimentalTechnique[]::
26335 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v59 = org.biojava.nbio.structure.ExperimentalTechnique.XRAY_DIFFRACTION::DD,26337
26337 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
26341 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v60 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_NMR::DD,26343
26343 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
26347 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v61 = org.biojava.nbio.structure.ExperimentalTechnique.SOLID_STATE_NMR::DD,26349
26349 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
26353 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v62 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_MICROSCOPY::DD,26355
26355 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
26359 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v63 = org.biojava.nbio.structure.ExperimentalTechnique.ELECTRON_CRYSTALLOGRAPHY::DD,26361
26361 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
26365 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v64 = org.biojava.nbio.structure.ExperimentalTechnique.FIBER_DIFFRACTION::DD,26367
26367 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
26371 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v65 = org.biojava.nbio.structure.ExperimentalTechnique.NEUTRON_DIFFRACTION::DD,26373
26373 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
26377 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v66 = org.biojava.nbio.structure.ExperimentalTechnique.SOLUTION_SCATTERING::DD,26379
26379 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
26383 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v67 = org.biojava.nbio.structure.ExperimentalTechnique.POWDER_DIFFRACTION::DD,26385
26385 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
26389 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v68 = org.biojava.nbio.structure.ExperimentalTechnique.FLUORESCENCE_TRANSFER::DD,26391
26391 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
26395 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v69 = org.biojava.nbio.structure.ExperimentalTechnique.INFRARED_SPECTROSCOPY::DD,26397
26397 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
26403 :: CALL :: call :: Ljava/util/HashMap :: v71 = initExpTechStr2Value()::CL,31245
26546 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.<clinit>()::CD,26549:JM,31306:CD,26556:CD,26558:CD,26565:CD,26567:CD,26574:CD,26576:CD,26583:CD,26585:CD,26592:CD,26594:CD,26601:CD,26603:CD,26610:CD,26612:CD,26619:CD,26621:CD,26628:CD,26630:CD,26637:CD,26639:CD,26646:CD,26648:CD,26649:CD,26655:CD,26661:CD,26667:CD,26673:CD,26679:CD,26685:CD,26691:CD,26697:CD,26703:CD,26709:CD,26717:CD,26723:CD,26728:CD,26734:CD,26740:CD,26745:CD,26751:CD,26757:CD,26762:CD,26768:CD,26774:CD,26781:CD,26788:CD,26800:CD,26803
26549 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,26556
26556 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide = v2::
26558 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v7 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,26565
26565 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide = v7::
26567 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v12 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,26574
26574 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna = v12::
26576 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,26583
26583 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna = v17::
26585 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v22 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,26592
26592 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna = v22::
26594 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v27 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,26601
26601 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide = v27::
26603 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,26610
26610 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide = v32::
26612 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v37 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,26619
26619 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer = v37::
26621 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v42 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,26628
26628 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide = v42::
26630 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v47 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,26637
26637 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid = v47::
26639 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v52 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType::DD,26646
26646 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown = v52::
26648 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v58 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::
26649 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v59 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::DD,26651
26651 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(0)] = v59::
26655 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v60 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::DD,26657
26657 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(1)] = v60::
26661 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v61 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::DD,26663
26663 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(2)] = v61::
26667 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v62 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::DD,26669
26669 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(3)] = v62::
26673 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v63 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dnarna::DD,26675
26675 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(4)] = v63::
26679 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v64 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.polysaccharide::DD,26681
26681 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(5)] = v64::
26685 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v65 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.lpolysaccharide::DD,26687
26687 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(6)] = v65::
26691 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v66 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.otherPolymer::DD,26693
26693 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(7)] = v66::
26697 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v67 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.cyclicPeptide::DD,26699
26699 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(8)] = v67::
26703 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v68 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptideNucleicAcid::DD,26705
26705 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(9)] = v68::
26709 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v69 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.unknown::DD,26711
26711 :: EXPR :: modify :: Ljava/lang/Object :: v58[#(10)] = v69::
26717 :: NORM :: declaration :: Ljava/util/HashSet :: v70 = new java.util.HashSet::JM,26728
26723 :: CALL :: call :: Z :: v74 = v70.add(v72)::
26728 :: CALL :: call :: Ljava/util/Set :: v76 = unmodifiableSet(v70)::JM,26728
26734 :: NORM :: declaration :: Ljava/util/HashSet :: v77 = new java.util.HashSet::JM,26745
26740 :: CALL :: call :: Z :: v81 = v77.add(v79)::
26745 :: CALL :: call :: Ljava/util/Set :: v83 = unmodifiableSet(v77)::JM,26745
26751 :: NORM :: declaration :: Ljava/util/HashSet :: v84 = new java.util.HashSet::JM,26762
26757 :: CALL :: call :: Z :: v88 = v84.add(v86)::
26762 :: CALL :: call :: Ljava/util/Set :: v90 = unmodifiableSet(v84)::JM,26762
26768 :: NORM :: declaration :: Ljava/util/HashSet :: v91 = new java.util.HashSet::
26774 :: CALL :: call :: Z :: v95 = v91.add(v93)::
26781 :: CALL :: call :: Z :: v98 = v91.add(v96)::
26788 :: CALL :: call :: Z :: v101 = v91.add(v99)::
26800 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v106 = values()::JM,26803:CL,31315
26803 :: CALL :: call :: Ljava/util/List :: v108 = asList(v106)::JM,26803
26938 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.<clinit>()::CD,26954:CD,26961:CD,26965:CD,26967:CD,26969:CD,26974:CD,26976:CD,26981:CD,26983:CD,26988:CD,26990
26954 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::
26961 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,26965
26965 :: EXPR :: modify :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs = v11::
26967 :: EXPR :: reference :: Ljava/util/List :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
26969 :: CALL :: call :: Z :: v16 = v13.add(#(CON))::
26974 :: EXPR :: reference :: Ljava/util/List :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
26976 :: CALL :: call :: Z :: v20 = v17.add(#(PRN))::
26981 :: EXPR :: reference :: Ljava/util/List :: v21 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
26983 :: CALL :: call :: Z :: v24 = v21.add(#(AUX))::
26988 :: EXPR :: reference :: Ljava/util/List :: v25 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::
26990 :: CALL :: call :: Z :: v28 = v25.add(#(NUL))::
27013 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.PerformanceBehavior.<clinit>()::CD,27016:CD,27022:CD,27024:CD,27030:CD,27032:CD,27033:CD,27039
27016 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v2 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,27022
27022 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY = v2::
27024 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v6 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior::DD,27030
27030 :: EXPR :: modify :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE = v6::
27032 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = new org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior[]::
27033 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v12 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::DD,27035
27035 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(0)] = v12::
27039 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v13 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.LESS_MEMORY_SLOWER_PERFORMANCE::DD,27041
27041 :: EXPR :: modify :: Ljava/lang/Object :: v11[#(1)] = v13::
27076 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.<clinit>()::CD,27079:JM,31415:JM,31418:CD,27087:CD,27089:CD,27099:CD,27101:CD,27111:CD,27113:CD,27123:CD,27125:CD,27135:CD,27137:CD,27147:CD,27149:CD,27159:CD,27161:CD,27171:CD,27173:CD,27183:CD,27185:CD,27195:CD,27197:CD,27207:CD,27209:CD,27219:CD,27221:CD,27231:CD,27233:CD,27243:CD,27245:CD,27255:CD,27257:CD,27267:CD,27269:CD,27279:CD,27281:CD,27291:CD,27293:CD,27303:CD,27305:CD,27315:CD,27317:CD,27327:CD,27329:CD,27339:CD,27341:CD,27351:CD,27353:CD,27363:CD,27365:CD,27375:CD,27377:CD,27387:CD,27389:CD,27399:CD,27401:CD,27411:CD,27413:CD,27421:CD,27423:CD,27431:CD,27433:CD,27434:CD,27440:CD,27446:CD,27452:CD,27458:CD,27464:CD,27470:CD,27476:CD,27482:CD,27488:CD,27494:CD,27500:CD,27506:CD,27512:CD,27518:CD,27524:CD,27530:CD,27536:CD,27542:CD,27548:CD,27554:CD,27560:CD,27566:CD,27572:CD,27578:CD,27584:CD,27590:CD,27596:CD,27602:CD,27608
27079 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27087
27087 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn = v2::
27089 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v8 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27099
27099 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking = v8::
27101 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v14 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27111
27111 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking = v14::
27113 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v20 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27123
27123 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine = v20::
27125 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v26 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27135
27135 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike = v26::
27137 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v32 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27147
27147 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus = v32::
27149 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v38 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27159
27159 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus = v38::
27161 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v44 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27171
27171 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus = v44::
27173 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27183
27183 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus = v50::
27185 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v56 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27195
27195 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking = v56::
27197 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v62 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27207
27207 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking = v62::
27209 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v68 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27219
27219 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus = v68::
27221 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v74 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27231
27231 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus = v74::
27233 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v80 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27243
27243 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus = v80::
27245 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v86 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27255
27255 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus = v86::
27257 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v92 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27267
27267 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide = v92::
27269 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v98 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27279
27279 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking = v98::
27281 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v104 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27291
27291 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking = v104::
27293 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v110 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27303
27303 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide = v110::
27305 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v116 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27315
27315 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking = v116::
27317 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v122 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27327
27327 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking = v122::
27329 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v128 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27339
27339 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide = v128::
27341 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v133 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27351
27351 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking = v133::
27353 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v139 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27363
27363 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking = v139::
27365 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v145 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27375
27375 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking = v145::
27377 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v151 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27387
27387 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking = v151::
27389 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v157 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27399
27399 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking = v157::
27401 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v163 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27411
27411 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking = v163::
27413 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v169 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27421
27421 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer = v169::
27423 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v174 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType::DD,27431
27431 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp = v174::
27433 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v180 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::
27434 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v181 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.atomn::DD,27436
27436 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(0)] = v181::
27440 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v182 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideLinking::DD,27442
27442 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(1)] = v182::
27446 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v183 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::DD,27448
27448 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(2)] = v183::
27452 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v184 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.glycine::DD,27454
27454 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(3)] = v184::
27458 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v185 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.peptideLike::DD,27460
27460 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(4)] = v185::
27464 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v186 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideAminoTerminus::DD,27466
27466 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(5)] = v186::
27470 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v187 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideAminoTerminus::DD,27472
27472 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(6)] = v187::
27476 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v188 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dPeptideCarboxyTerminus::DD,27478
27478 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(7)] = v188::
27482 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v189 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideCarboxyTerminus::DD,27484
27484 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(8)] = v189::
27488 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v190 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dnaLinking::DD,27490
27490 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(9)] = v190::
27494 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v191 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rnaLinking::DD,27496
27496 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(10)] = v191::
27500 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v192 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna3PrimeTerminus::DD,27502
27502 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(11)] = v192::
27506 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v193 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna3PrimeTerminus::DD,27508
27508 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(12)] = v193::
27512 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v194 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dna5PrimeTerminus::DD,27514
27514 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(13)] = v194::
27518 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v195 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.rna5PrimeTerminus::DD,27520
27520 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(14)] = v195::
27524 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v196 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide::DD,27526
27526 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(15)] = v196::
27530 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v197 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and14linking::DD,27532
27532 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(16)] = v197::
27536 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v198 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dSaccharide14and16linking::DD,27538
27538 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(17)] = v198::
27542 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v199 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide::DD,27544
27544 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(18)] = v199::
27548 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v200 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and14linking::DD,27550
27550 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(19)] = v200::
27554 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v201 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lSaccharide14and16linking::DD,27556
27556 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(20)] = v201::
27560 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v202 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.saccharide::DD,27562
27562 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(21)] = v202::
27566 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v203 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dBetaPeptideCGammaLinking::DD,27568
27568 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(22)] = v203::
27572 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v204 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.dGammaPeptideCDeltaLinking::DD,27574
27574 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(23)] = v204::
27578 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v205 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lBetaPeptideCGammaLinking::DD,27580
27580 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(24)] = v205::
27584 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v206 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lGammaPeptideCDeltaLinking::DD,27586
27586 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(25)] = v206::
27590 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v207 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lDNALinking::DD,27592
27592 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(26)] = v207::
27596 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v208 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lRNALinking::DD,27598
27598 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(27)] = v208::
27602 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v209 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.nonPolymer::DD,27604
27604 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(28)] = v209::
27608 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v210 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.otherChemComp::DD,27610
27610 :: EXPR :: modify :: Ljava/lang/Object :: v180[#(29)] = v210::
27925 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.<clinit>()::CD,27928:CD,27934:CD,27940:CD,27944:CD,27948:CD,27954:CD,27958:CD,27964:CD,27968:CD,27974:CD,27978:CD,27984:CD,27988:CD,27994:CD,27998:CD,28004:CD,28008:CD,28014:CD,28018:CD,28024:CD,28028:CD,28034:CD,28038:CD,28044:CD,28048:CD,28054:CD,28058:CD,28064:CD,28068:CD,28074:CD,28078:CD,28084:CD,28088:CD,28094:CD,28098:CD,28104:CD,28108:CD,28114:CD,28118:CD,28124:CD,28128:CD,28134:CD,28138:CD,28144:CD,28148:CD,28154:CD,28158:CD,28164:CD,28168:CD,28172:CD,28174:CD,28178:CD,28182:CD,28188:CD,28192:CD,28198:CD,28202:CD,28208:CD,28212:CD,28218:CD,28222:CD,28228:CD,28232:CD,28238:CD,28242:CD,28248:CD,28252:CD,28258:CD,28262:CD,28268:CD,28272:CD,28278:CD,28282:CD,28288:CD,28292:CD,28298:CD,28302:CD,28308:CD,28312:CD,28318:CD,28322:CD,28328:CD,28332:CD,28338:CD,28342:CD,28348:CD,28352:CD,28358:CD,28362:CD,28368:CD,28372:CD,28378:CD,28382:CD,28388:CD,28392:CD,28398:CD,28402:CD,28408:CD,28412:CD,28416:CD,28422:CD,28426:CD,28432:CD,28436:CD,28442:CD,28446:CD,28452:CD,28456:CD,28462:CD,28466:CD,28472:CD,28476:CD,28480:CD,28482:CD,28486:CD,28490:CD,28496:CD,28500:CD,28506:CD,28510:CD,28516:CD,28520:CD,28526:CD,28530:CD,28536:CD,28540:CD,28546:CD,28550:CD,28556:CD,28560:CD,28562:CD,28566:CD,28571:CD,28573:CD,28577
27928 :: CALL :: call :: Ljava/lang/Character :: v4 = valueOf(#(88))::
27934 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(#(78))::
27940 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,28164:JM,28168:JM,28172
27944 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(65))::
27948 :: CALL :: call :: Ljava/lang/Object :: v15 = v8.put(#(ALA), v13)::
27954 :: CALL :: call :: Ljava/lang/Character :: v19 = valueOf(#(68))::
27958 :: CALL :: call :: Ljava/lang/Object :: v21 = v8.put(#(ASP), v19)::
27964 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(78))::
27968 :: CALL :: call :: Ljava/lang/Object :: v26 = v8.put(#(ASN), v24)::
27974 :: CALL :: call :: Ljava/lang/Character :: v30 = valueOf(#(66))::
27978 :: CALL :: call :: Ljava/lang/Object :: v32 = v8.put(#(ASX), v30)::
27984 :: CALL :: call :: Ljava/lang/Character :: v36 = valueOf(#(82))::
27988 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.put(#(ARG), v36)::
27994 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(#(67))::
27998 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.put(#(CYS), v42)::
28004 :: CALL :: call :: Ljava/lang/Character :: v48 = valueOf(#(69))::
28008 :: CALL :: call :: Ljava/lang/Object :: v50 = v8.put(#(GLU), v48)::
28014 :: CALL :: call :: Ljava/lang/Character :: v54 = valueOf(#(81))::
28018 :: CALL :: call :: Ljava/lang/Object :: v56 = v8.put(#(GLN), v54)::
28024 :: CALL :: call :: Ljava/lang/Character :: v60 = valueOf(#(71))::
28028 :: CALL :: call :: Ljava/lang/Object :: v62 = v8.put(#(GLY), v60)::
28034 :: CALL :: call :: Ljava/lang/Character :: v66 = valueOf(#(90))::
28038 :: CALL :: call :: Ljava/lang/Object :: v68 = v8.put(#(GLX), v66)::
28044 :: CALL :: call :: Ljava/lang/Character :: v72 = valueOf(#(72))::
28048 :: CALL :: call :: Ljava/lang/Object :: v74 = v8.put(#(HIS), v72)::
28054 :: CALL :: call :: Ljava/lang/Character :: v78 = valueOf(#(73))::
28058 :: CALL :: call :: Ljava/lang/Object :: v80 = v8.put(#(ILE), v78)::
28064 :: CALL :: call :: Ljava/lang/Character :: v84 = valueOf(#(75))::
28068 :: CALL :: call :: Ljava/lang/Object :: v86 = v8.put(#(LYS), v84)::
28074 :: CALL :: call :: Ljava/lang/Character :: v90 = valueOf(#(76))::
28078 :: CALL :: call :: Ljava/lang/Object :: v92 = v8.put(#(LEU), v90)::
28084 :: CALL :: call :: Ljava/lang/Character :: v96 = valueOf(#(77))::
28088 :: CALL :: call :: Ljava/lang/Object :: v98 = v8.put(#(MET), v96)::
28094 :: CALL :: call :: Ljava/lang/Character :: v102 = valueOf(#(70))::
28098 :: CALL :: call :: Ljava/lang/Object :: v104 = v8.put(#(PHE), v102)::
28104 :: CALL :: call :: Ljava/lang/Character :: v108 = valueOf(#(80))::
28108 :: CALL :: call :: Ljava/lang/Object :: v110 = v8.put(#(PRO), v108)::
28114 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(83))::
28118 :: CALL :: call :: Ljava/lang/Object :: v116 = v8.put(#(SER), v114)::
28124 :: CALL :: call :: Ljava/lang/Character :: v120 = valueOf(#(84))::
28128 :: CALL :: call :: Ljava/lang/Object :: v122 = v8.put(#(THR), v120)::
28134 :: CALL :: call :: Ljava/lang/Character :: v126 = valueOf(#(87))::
28138 :: CALL :: call :: Ljava/lang/Object :: v128 = v8.put(#(TRP), v126)::
28144 :: CALL :: call :: Ljava/lang/Character :: v132 = valueOf(#(89))::
28148 :: CALL :: call :: Ljava/lang/Object :: v134 = v8.put(#(TYR), v132)::
28154 :: CALL :: call :: Ljava/lang/Character :: v138 = valueOf(#(86))::
28158 :: CALL :: call :: Ljava/lang/Object :: v140 = v8.put(#(VAL), v138)::
28164 :: CALL :: call :: Ljava/util/Map :: v142 = synchronizedMap(v8)::JM,28164:JM,28168:JM,28172
28168 :: CALL :: call :: Ljava/util/Map :: v144 = unmodifiableMap(v142)::JM,28168:JM,28172
28172 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1 = v144::
28174 :: NORM :: declaration :: Ljava/util/HashMap :: v145 = new java.util.HashMap::JM,28402:JM,28398
28178 :: CALL :: call :: Ljava/lang/Character :: v148 = valueOf(#(65))::
28182 :: CALL :: call :: Ljava/lang/Object :: v150 = v145.put(v148, #(ALA))::
28188 :: CALL :: call :: Ljava/lang/Character :: v152 = valueOf(#(68))::
28192 :: CALL :: call :: Ljava/lang/Object :: v154 = v145.put(v152, #(ASP))::
28198 :: CALL :: call :: Ljava/lang/Character :: v156 = valueOf(#(78))::
28202 :: CALL :: call :: Ljava/lang/Object :: v158 = v145.put(v156, #(ASN))::
28208 :: CALL :: call :: Ljava/lang/Character :: v160 = valueOf(#(66))::
28212 :: CALL :: call :: Ljava/lang/Object :: v162 = v145.put(v160, #(ASX))::
28218 :: CALL :: call :: Ljava/lang/Character :: v164 = valueOf(#(82))::
28222 :: CALL :: call :: Ljava/lang/Object :: v166 = v145.put(v164, #(ARG))::
28228 :: CALL :: call :: Ljava/lang/Character :: v168 = valueOf(#(67))::
28232 :: CALL :: call :: Ljava/lang/Object :: v170 = v145.put(v168, #(CYS))::
28238 :: CALL :: call :: Ljava/lang/Character :: v172 = valueOf(#(69))::
28242 :: CALL :: call :: Ljava/lang/Object :: v174 = v145.put(v172, #(GLU))::
28248 :: CALL :: call :: Ljava/lang/Character :: v176 = valueOf(#(81))::
28252 :: CALL :: call :: Ljava/lang/Object :: v178 = v145.put(v176, #(GLN))::
28258 :: CALL :: call :: Ljava/lang/Character :: v180 = valueOf(#(71))::
28262 :: CALL :: call :: Ljava/lang/Object :: v182 = v145.put(v180, #(GLY))::
28268 :: CALL :: call :: Ljava/lang/Character :: v184 = valueOf(#(90))::
28272 :: CALL :: call :: Ljava/lang/Object :: v186 = v145.put(v184, #(GLX))::
28278 :: CALL :: call :: Ljava/lang/Character :: v188 = valueOf(#(72))::
28282 :: CALL :: call :: Ljava/lang/Object :: v190 = v145.put(v188, #(HIS))::
28288 :: CALL :: call :: Ljava/lang/Character :: v192 = valueOf(#(73))::
28292 :: CALL :: call :: Ljava/lang/Object :: v194 = v145.put(v192, #(ILE))::
28298 :: CALL :: call :: Ljava/lang/Character :: v196 = valueOf(#(75))::
28302 :: CALL :: call :: Ljava/lang/Object :: v198 = v145.put(v196, #(LYS))::
28308 :: CALL :: call :: Ljava/lang/Character :: v200 = valueOf(#(76))::
28312 :: CALL :: call :: Ljava/lang/Object :: v202 = v145.put(v200, #(LEU))::
28318 :: CALL :: call :: Ljava/lang/Character :: v204 = valueOf(#(77))::
28322 :: CALL :: call :: Ljava/lang/Object :: v206 = v145.put(v204, #(MET))::
28328 :: CALL :: call :: Ljava/lang/Character :: v208 = valueOf(#(70))::
28332 :: CALL :: call :: Ljava/lang/Object :: v210 = v145.put(v208, #(PHE))::
28338 :: CALL :: call :: Ljava/lang/Character :: v212 = valueOf(#(80))::
28342 :: CALL :: call :: Ljava/lang/Object :: v214 = v145.put(v212, #(PRO))::
28348 :: CALL :: call :: Ljava/lang/Character :: v216 = valueOf(#(83))::
28352 :: CALL :: call :: Ljava/lang/Object :: v218 = v145.put(v216, #(SER))::
28358 :: CALL :: call :: Ljava/lang/Character :: v220 = valueOf(#(84))::
28362 :: CALL :: call :: Ljava/lang/Object :: v222 = v145.put(v220, #(THR))::
28368 :: CALL :: call :: Ljava/lang/Character :: v224 = valueOf(#(87))::
28372 :: CALL :: call :: Ljava/lang/Object :: v226 = v145.put(v224, #(TRP))::
28378 :: CALL :: call :: Ljava/lang/Character :: v228 = valueOf(#(89))::
28382 :: CALL :: call :: Ljava/lang/Object :: v230 = v145.put(v228, #(TYR))::
28388 :: CALL :: call :: Ljava/lang/Character :: v232 = valueOf(#(86))::
28392 :: CALL :: call :: Ljava/lang/Object :: v234 = v145.put(v232, #(VAL))::
28398 :: CALL :: call :: Ljava/util/Map :: v236 = synchronizedMap(v145)::JM,28402:JM,28398
28402 :: CALL :: call :: Ljava/util/Map :: v238 = unmodifiableMap(v236)::JM,28402
28408 :: NORM :: declaration :: Ljava/util/HashMap :: v239 = new java.util.HashMap::JM,28480:JM,28472:JM,28476
28412 :: CALL :: call :: Ljava/lang/Character :: v243 = valueOf(#(65))::
28416 :: CALL :: call :: Ljava/lang/Object :: v245 = v239.put(#(DA), v243)::
28422 :: CALL :: call :: Ljava/lang/Character :: v248 = valueOf(#(67))::
28426 :: CALL :: call :: Ljava/lang/Object :: v250 = v239.put(#(DC), v248)::
28432 :: CALL :: call :: Ljava/lang/Character :: v253 = valueOf(#(71))::
28436 :: CALL :: call :: Ljava/lang/Object :: v255 = v239.put(#(DG), v253)::
28442 :: CALL :: call :: Ljava/lang/Character :: v258 = valueOf(#(73))::
28446 :: CALL :: call :: Ljava/lang/Object :: v260 = v239.put(#(DI), v258)::
28452 :: CALL :: call :: Ljava/lang/Character :: v264 = valueOf(#(85))::
28456 :: CALL :: call :: Ljava/lang/Object :: v266 = v239.put(#(DU), v264)::
28462 :: CALL :: call :: Ljava/lang/Character :: v269 = valueOf(#(84))::
28466 :: CALL :: call :: Ljava/lang/Object :: v271 = v239.put(#(DT), v269)::
28472 :: CALL :: call :: Ljava/util/Map :: v273 = synchronizedMap(v239)::JM,28480:JM,28472:JM,28476
28476 :: CALL :: call :: Ljava/util/Map :: v275 = unmodifiableMap(v273)::JM,28480:JM,28476
28480 :: EXPR :: modify :: Ljava/util/Map :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1 = v275::
28482 :: NORM :: declaration :: Ljava/util/HashMap :: v276 = new java.util.HashMap::JM,28546:JM,28550
28486 :: CALL :: call :: Ljava/lang/Character :: v279 = valueOf(#(65))::
28490 :: CALL :: call :: Ljava/lang/Object :: v281 = v276.put(v279, #(DA))::
28496 :: CALL :: call :: Ljava/lang/Character :: v283 = valueOf(#(67))::
28500 :: CALL :: call :: Ljava/lang/Object :: v285 = v276.put(v283, #(DC))::
28506 :: CALL :: call :: Ljava/lang/Character :: v287 = valueOf(#(71))::
28510 :: CALL :: call :: Ljava/lang/Object :: v289 = v276.put(v287, #(DG))::
28516 :: CALL :: call :: Ljava/lang/Character :: v291 = valueOf(#(73))::
28520 :: CALL :: call :: Ljava/lang/Object :: v293 = v276.put(v291, #(DI))::
28526 :: CALL :: call :: Ljava/lang/Character :: v295 = valueOf(#(85))::
28530 :: CALL :: call :: Ljava/lang/Object :: v297 = v276.put(v295, #(DU))::
28536 :: CALL :: call :: Ljava/lang/Character :: v299 = valueOf(#(84))::
28540 :: CALL :: call :: Ljava/lang/Object :: v301 = v276.put(v299, #(DT))::
28546 :: CALL :: call :: Ljava/util/Map :: v303 = synchronizedMap(v276)::JM,28546:JM,28550
28550 :: CALL :: call :: Ljava/util/Map :: v305 = unmodifiableMap(v303)::JM,28550
28556 :: NORM :: declaration :: Ljava/util/ArrayList :: v306 = new java.util.ArrayList::
28560 :: EXPR :: reference :: Ljava/util/Map :: v308 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.AMINO_ACID_LOOKUP_3TO1::
28562 :: CALL :: call :: Ljava/util/Set :: v310 = v308.keySet()::
28566 :: CALL :: call :: Z :: v312 = v306.addAll(v310)::
28571 :: EXPR :: reference :: Ljava/util/Map :: v313 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.DNA_LOOKUP_2TO1::
28573 :: CALL :: call :: Ljava/util/Set :: v315 = v313.keySet()::
28577 :: CALL :: call :: Z :: v317 = v306.addAll(v315)::
29548 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .initPdbFilePath()::CL,31429
29555 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .initCacheFilePath()::CL,31755
29577 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::CE,29578:CD,29584
29578 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getCacheFilePath()::
29581 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .cacheFilePath::DD,29584
29584 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,29578
29736 :: NORM :: declaration :: Ljava/util/TreeSet :: v6 = new java.util.TreeSet::JM,29762:JM,29744:JM,29740
29740 :: CALL :: call :: Ljava/util/Collection :: v9 = synchronizedCollection(v6)::JM,29744:JM,29740
29744 :: EXPR :: modify :: Ljava/util/Collection :: p0 $this .currentlyLoading = v9::
29755 :: EXPR :: reference :: Ljava/lang/String :: v13 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::JM,29762
29757 :: CALL :: call :: Z :: v15 = p1 $pdbFilePath .endsWith(v13)::JM,29762
29762 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 65::CF,29763:CD,29764:CD,29772:CD,29774:CD,29779
29763 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
29764 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(p1 $pdbFilePath )::
29772 :: EXPR :: reference :: Ljava/lang/String :: v21 = org.biojava.nbio.structure.align.util.AtomCache.FILE_SEPARATOR::
29774 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v17.append(v21)::
29779 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
29783 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(biojava.cache.files), #(true))::
29788 :: CALL :: call :: V :: p0 $this .setPath(v26)::CL,32375
29805 :: EXPR :: reference :: Ljava/util/Collection :: v34 = p0 $this .currentlyLoading::
29808 :: CALL :: call :: V :: v34.clear()::
29875 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(java.lang.String)::JM,32429:CD,29885
29885 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getStructure(v4)::CL,32441
29987 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .toString()::
30353 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.ResourceManager.getResourceManager(java.lang.String)::JM,35968:JM,35976
30580 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::CE,30581:CD,30587:CD,30591
30581 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.LocalPDBDirectory.getExtensions()::JM,100720:JM,100676
30584 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .extensions::JM,30587:JM,30591
30587 :: CALL :: call :: Ljava/util/List :: v5 = unmodifiableList(v3)::JM,30587:JM,30591
30591 :: NORM :: compound :: Ljava/util/List :: return v5::DD,30581
30605 :: EXPR :: modify :: Ljava/util/List :: p0 $this .extensions = p3 $extensions ::
30692 :: EXPR :: modify :: I :: p0 $this .atomicNumber = p3 $atomicNumber ::
30695 :: EXPR :: modify :: I :: p0 $this .period = p4 $period ::
30698 :: EXPR :: modify :: F :: p0 $this .VDWRadius = p6 $VDWRadius ::
30701 :: EXPR :: modify :: F :: p0 $this .covalentRadius = p7 $covalentRadius ::
30704 :: EXPR :: modify :: I :: p0 $this .valenceElectronCount = p8 $valenceElectronCount ::
30707 :: EXPR :: modify :: I :: p0 $this .minimumValence = p9 $minimumValence ::
30710 :: EXPR :: modify :: I :: p0 $this .maximumValence = p10 $maximumValence ::
30713 :: EXPR :: modify :: I :: p0 $this .commonValence = p11 $commonValence ::
30716 :: EXPR :: modify :: I :: p0 $this .maximumCovalentValence = p12 $maximumCovalentValence ::
30719 :: EXPR :: modify :: F :: p0 $this .atomicMass = p13 $atomicMass ::
30722 :: EXPR :: modify :: I :: p0 $this .coreElectronCount = p14 $coreElectronCount ::
30725 :: EXPR :: modify :: I :: p0 $this .oxidationState = p15 $oxidationState ::
30728 :: EXPR :: modify :: [I :: p0 $this .allOxidationStates = p16 $allOxidationStates ::
30731 :: EXPR :: modify :: F :: p0 $this .paulingElectronegativity = p17 $paulingElectronegativity ::
30734 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ElementType :: p0 $this .elementType = p18 $elementType ::
30771 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.values()::CF,30772:CD,30774:CD,30776:CD,30777:CD,30785
30772 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.Element.values()::JM,21699
30774 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/Element :: v2 = org.biojava.nbio.structure.Element.ENUM$VALUES::DD,30776
30776 :: EXPR :: assign :: I :: v4 = v2.length::DD,30777
30777 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Element :: v5 = new org.biojava.nbio.structure.Element[]::DD,30785
30785 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Element :: return v5::CF,30772
30798 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML()::CD,30802:CD,30806:CD,30811:CD,30821:CD,30825:CD,30832:CD,30837:CD,30841:CD,30846:CD,30854:CD,30860:CD,30865:CD,30869:CD,30874:CD,30882:CD,30885:CD,30891:CD,30895:CD,30937:CD,30941:CD,30943:CD,30944:CD,30945
30802 :: CALL :: call :: Ljava/lang/ClassLoader :: v4 = v2.getClassLoader()::JM,30811
30806 :: CALL :: call :: Ljava/io/InputStream :: v7 = v4.getResourceAsStream(#(org/biojava/nbio/stru...))::JM,30811
30811 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CF,30821:CD,30818
30818 :: CALL :: call :: V :: exit(#(1))::
30821 :: NORM :: declaration :: Ljava/util/TreeMap :: v14 = new java.util.TreeMap::DD,30945
30825 :: CALL :: call :: Ljava/util/TreeMap :: v17 = parseSpaceGroupsXML(v7)::JM,30945:CL,36597
30832 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
30837 :: CALL :: call :: Ljava/lang/String :: v37 = v31.getMessage()::
30841 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::
30846 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
30854 :: CALL :: call :: V :: exit(#(1))::
30860 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
30865 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
30869 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
30874 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
30882 :: CALL :: call :: V :: exit(#(1))::
30885 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
30891 :: CALL :: call :: Ljava/util/Collection :: v49 = v45.values()::JM,30904:JM,30941
30895 :: CALL :: call :: Ljava/util/Iterator :: v51 = v49.iterator()::JM,30904:JM,30941
30900 :: CALL :: call :: Ljava/lang/Object :: v56 = v51.next()::JM,30904:JM,30941
30904 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::JM,30920:JM,30924
30914 :: CALL :: call :: Ljava/lang/Object :: v63 = v59.put(v61, v57)::
30920 :: CALL :: call :: Ljava/lang/String :: v65 = v57.getAltShortSymbol()::JM,30920:JM,30924
30924 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 181::CD,30931:JM,30904:JM,30941
30931 :: CALL :: call :: Ljava/lang/Object :: v70 = v66.put(v68, v57)::
30937 :: CALL :: call :: Z :: v53 = v51.hasNext()::JM,30904:JM,30941
30941 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 136::CD,30900:CD,30904:CD,30914:CD,30920:CD,30924:CD,30937:JM,30941
30943 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
30944 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
30945 :: EXPR :: assign :: null :: PHI v45 = v17, v14, v14::CF,30885:JM,30904:JM,30941
30989 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
30992 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .type = p4 $stype ::
31010 :: EXPR :: modify :: Z :: p0 $this .downloadAll = #(0)::
31019 :: CALL :: call :: V :: initPath()::CL,36619
31027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.matchPolymerTypes(java.util.Set)::CD,31031:CD,31035:CD,31038:CD,31059:CD,31065
31031 :: NORM :: declaration :: Ljava/util/HashSet :: v3 = new java.util.HashSet::
31035 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v6 = values()::JM,31038:CL,36648
31038 :: EXPR :: assign :: I :: v7 = v6.length::DD,31059
31047 :: CALL :: call :: Z :: v12 = p1 $allowedTypes .contains(v10)::JM,31052
31052 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 48::CD,31053:CF,31058
31053 :: CALL :: call :: Z :: v14 = v3.add(v9)::
31058 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,31065
31059 :: PRED :: IF :: Z :: if (v17 < v7) goto 25::CD,31047:CD,31052:CD,31058:CD,31065
31065 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,31058:DD,31059
31100 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
31103 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .types = p4 $types ::
31114 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupType.getHetatmTypes()::CD,31117:CD,31121:CD,31124:CD,31160:CD,31166
31117 :: NORM :: declaration :: Ljava/util/HashSet :: v2 = new java.util.HashSet::
31121 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = values()::JM,31124:CL,36648
31124 :: EXPR :: assign :: I :: v6 = v5.length::DD,31160
31136 :: CALL :: call :: Z :: v13 = v11.contains(v8)::JM,31141
31141 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 64::CD,31148:CD,31153:CF,31159
31148 :: CALL :: call :: Z :: v18 = v16.contains(v8)::JM,31153
31153 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 64::CD,31154:CF,31159
31154 :: CALL :: call :: Z :: v20 = v2.add(v8)::
31159 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v23 + #(1)::DD,31166
31160 :: PRED :: IF :: Z :: if (v23 < v6) goto 24::CD,31136:CD,31141:CD,31159:CD,31166
31166 :: EXPR :: assign :: null :: PHI v23 = #(0), v22::DD,31159:DD,31160
31203 :: EXPR :: modify :: Z :: p0 $this .metal = p3 $metal ::
31226 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p3 $name ::
31229 :: EXPR :: modify :: Z :: p0 $this .isCrystallographic = p4 $isXtallographic ::
31232 :: EXPR :: modify :: Z :: p0 $this .isNmr = p5 $isNmr ::
31245 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.initExpTechStr2Value()::CD,31248:CD,31252:CD,31255:CD,31272:CD,31274
31248 :: NORM :: declaration :: Ljava/util/HashMap :: v2 = new java.util.HashMap::
31252 :: CALL :: call :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = values()::JM,31255:CL,36700
31255 :: EXPR :: assign :: I :: v6 = v5.length::DD,31272
31265 :: CALL :: call :: Ljava/lang/Object :: v12 = v2.put(v10, v8)::
31271 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,31274
31272 :: PRED :: IF :: Z :: if (v15 < v6) goto 24::CD,31265:CD,31271:CD,31274
31274 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,31271:DD,31272
31306 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .entity_poly_type = p3 $entity_poly_type ::
31315 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::CF,31316:CD,31318:CD,31320:CD,31321:CD,31329
31316 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.chem.PolymerType.values()::JM,26803
31318 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.ENUM$VALUES::DD,31320
31320 :: EXPR :: assign :: I :: v4 = v2.length::DD,31321
31321 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.PolymerType[]::DD,31329
31329 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v5::CF,31316
31415 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p3 $pt ::
31418 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chem_comp_type = p4 $chem_comp_type ::
31429 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initPdbFilePath()::CD,31433:CD,31437:CD,31628:CD,31630:CD,31635:CD,31657
31433 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_DIR))::JM,31442:JM,31446:JM,31433:JM,31657:JM,31437
31437 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 118::CD,31438:CD,31442:CD,31446:CD,31508:CD,31511:CD,31516:JM,31657
31438 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::JM,31442:JM,31446:JM,31657
31442 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,31442:JM,31446
31446 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 118::CD,31455:CD,31460:CD,31464:CD,31508:CD,31511:CD,31516
31455 :: NORM :: declaration :: Ljava/io/File :: v61 = new java.io.File::
31460 :: CALL :: call :: Z :: v64 = v61.isDirectory()::JM,31464
31464 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 97::CD,31489:CD,31494:CD,31498:CD,31657
31489 :: CALL :: call :: Ljava/lang/String :: v77 = getProperty(#(java.io.tmpdir))::JM,31489:JM,31657
31494 :: CALL :: call :: Z :: v66 = v61.canWrite()::JM,31498
31498 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 297::CF,31657
31508 :: CALL :: call :: Ljava/util/Map :: v13 = getenv()::
31511 :: CALL :: call :: Z :: v15 = v13.containsKey(#(PDB_DIR))::JM,31516
31516 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 260::CD,31517:CD,31522:CD,31523:CD,31527:CD,31531:CD,31599:CD,31623:CD,31657
31517 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.get(#(PDB_DIR))::JM,31522
31522 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,31527:JM,31531
31523 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,31527:JM,31531
31527 :: CALL :: call :: Z :: v22 = v20.isEmpty()::JM,31527:JM,31531
31531 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 260::CD,31532:CD,31537:CD,31546:CD,31551:CD,31555:CD,31599:CD,31623:CD,31657
31532 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(PDB_DIR))::JM,31537
31537 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::DD,31657
31546 :: NORM :: declaration :: Ljava/io/File :: v41 = new java.io.File::
31551 :: CALL :: call :: Z :: v44 = v41.isDirectory()::JM,31555
31555 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 237::CD,31580:CD,31585:CD,31589:CD,31657
31580 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,31657:JM,31580
31585 :: CALL :: call :: Z :: v46 = v41.canWrite()::JM,31589
31589 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 297::CF,31657
31599 :: CALL :: call :: Ljava/lang/String :: v25 = getProperty(#(java.io.tmpdir))::JM,31657:JM,31599
31623 :: CALL :: call :: Ljava/lang/String :: v34 = setProperty(#(PDB_DIR), v25)::
31628 :: EXPR :: reference :: Ljava/lang/String :: v80 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,31635
31630 :: CALL :: call :: Z :: v82 = v78.endsWith(v80)::JM,31635
31635 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 328::CF,31636:CD,31637:CD,31645:CD,31647:CD,31652
31636 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v83 = new java.lang.StringBuilder::
31637 :: CALL :: call :: Ljava/lang/String :: v85 = valueOf(v78)::
31645 :: EXPR :: reference :: Ljava/lang/String :: v87 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
31647 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v83.append(v87)::
31652 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
31657 :: EXPR :: assign :: null :: PHI v78 = v77, v6, v6, v57, v37, v37, v25::JM,31635
31755 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.initCacheFilePath()::CD,31759:CD,31763:CD,32024:CD,32026:CD,32031:CD,32053
31759 :: CALL :: call :: Ljava/lang/String :: v6 = getProperty(#(PDB_CACHE_DIR))::JM,31763:JM,32053:JM,31759
31763 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 138::CD,31772:CD,31777:CD,31781:CD,31850:CD,31853:CD,31858
31772 :: NORM :: declaration :: Ljava/io/File :: v69 = new java.io.File::
31777 :: CALL :: call :: Z :: v72 = v69.isDirectory()::JM,31781
31781 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 87::CD,31806:CD,31811:CD,31815:CD,32053
31806 :: CALL :: call :: Ljava/lang/String :: v92 = getProperty(#(java.io.tmpdir))::JM,32053:JM,31806
31811 :: CALL :: call :: Z :: v74 = v69.canWrite()::JM,31815
31815 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 385::CF,32053:CD,31840:CD,31844
31840 :: CALL :: call :: Ljava/lang/String :: v82 = getProperty(#(java.io.tmpdir))::JM,31840:JM,32053
31844 :: CALL :: call :: Ljava/lang/String :: v84 = setProperty(#(PDB_CACHE_DIR), v82)::
31850 :: CALL :: call :: Ljava/util/Map :: v8 = getenv()::
31853 :: CALL :: call :: Z :: v10 = v8.containsKey(#(PDB_CACHE_DIR))::JM,31858
31858 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 282::CF,31946:CD,31859:CD,31864:CD,31873:CD,31878:CD,31882:CD,31954:CD,31958
31859 :: CALL :: call :: Ljava/lang/Object :: v39 = v8.get(#(PDB_CACHE_DIR))::JM,31864
31864 :: EXPR :: assign :: Ljava/lang/Object :: v40 = CHECKCAST v39::DD,32053
31873 :: NORM :: declaration :: Ljava/io/File :: v44 = new java.io.File::
31878 :: CALL :: call :: Z :: v47 = v44.isDirectory()::JM,31882
31882 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 237::CD,31907:CD,31912:CD,31916:CD,32053
31907 :: CALL :: call :: Ljava/lang/String :: v65 = getProperty(#(java.io.tmpdir))::JM,31907:JM,32053
31912 :: CALL :: call :: Z :: v49 = v44.canWrite()::JM,31916
31916 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 385::CF,32053:CD,31941
31941 :: CALL :: call :: Ljava/lang/String :: v57 = getProperty(#(java.io.tmpdir))::JM,31941:JM,32053
31946 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
31947 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdbFilePath::
31954 :: CALL :: call :: Z :: v16 = v12.canWrite()::JM,31958
31958 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 341::CD,31982:CD,31988:CD,32019:CD,32053
31959 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdbFilePath::DD,32053
31982 :: CALL :: call :: Ljava/lang/String :: v37 = setProperty(#(PDB_CACHE_DIR), v31)::
31988 :: CALL :: call :: Ljava/lang/String :: v19 = getProperty(#(java.io.tmpdir))::JM,31988:JM,32053
32019 :: CALL :: call :: Ljava/lang/String :: v30 = setProperty(#(PDB_CACHE_DIR), v19)::
32024 :: EXPR :: reference :: Ljava/lang/String :: v95 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::JM,32031
32026 :: CALL :: call :: Z :: v97 = v93.endsWith(v95)::JM,32031
32031 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 416::CF,32032:CD,32033:CD,32041:CD,32043:CD,32048
32032 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
32033 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v93)::
32041 :: EXPR :: reference :: Ljava/lang/String :: v102 = org.biojava.nbio.structure.align.util.UserConfiguration.lineSplit::
32043 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(v102)::
32048 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
32053 :: EXPR :: assign :: null :: PHI v93 = v92, v6, v82, v65, v40, v57, v31, v19::JM,32031
32375 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.setPath(java.lang.String)::CD,32380
32380 :: CALL :: call :: Ljava/lang/String :: v5 = expandUserHome(p1 $path )::CL,37014
32397 :: CALL :: call :: V :: p0 $this .setDefault()::CL,37079
32429 :: CALL :: call :: V :: p0 $this .init()::CL,37144
32441 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructure(org.biojava.nbio.structure.StructureIdentifier)::CD,32446:CD,32451
32446 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v5 = p1 $strucId .loadStructure(p0 $this )::CL,37696
32451 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $strucId .reduce(v5)::CL,37713
32838 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::CE,32839:CD,32842:CD,32846:CD,32855:CD,32856:CD,32860:CD,32869:CD,32870:CD,32874:CD,32883:CD,32884:CD,32888:CD,32897:CD,32898:CD,32902:CD,32911:CD,32912:CD,32916:CD,32925:CD,32926:CD,32927:CD,32928:CD,32929:CD,32930:CD,32931:CD,32932
32839 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.SSBondImpl.hashCode()::
32842 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,32855
32843 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainID1::DD,32846
32846 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,32851:CD,32927
32848 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainID1::JM,32927
32851 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,32927
32855 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,32856
32856 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,32869
32857 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainID2::DD,32860
32860 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,32865:CD,32928
32862 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainID2::JM,32928
32865 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,32928
32869 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,32870
32870 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,32883
32871 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .insCode1::DD,32874
32874 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,32879:CD,32929
32876 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::JM,32929
32879 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,32929
32883 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,32884
32884 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,32897
32885 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,32888
32888 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,32893:CD,32930
32890 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,32930
32893 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,32930
32897 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,32898
32898 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,32911
32899 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::DD,32902
32902 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,32907:CD,32931
32904 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .resnum1::JM,32931
32907 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,32931
32911 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,32912
32912 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,32925
32913 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .resnum2::DD,32916
32916 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,32921:CD,32932
32918 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .resnum2::JM,32932
32921 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,32932
32925 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,32926
32926 :: NORM :: compound :: I :: return v48::CF,32839
32927 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,32855
32928 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,32869
32929 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,32883
32930 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,32897
32931 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,32911
32932 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,32925
33097 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.hashCode()::CE,33098:CD,33101:CD,33105:CD,33114:CD,33115:CD,33119:CD,33128:CD,33129:CD,33133:CD,33142:CD,33143:CD,33144:CD,33145:CD,33146
33098 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.hashCode()::JM,33400:JM,33401
33101 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,33114
33102 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chainId::DD,33105
33105 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,33110:CD,33144
33107 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chainId::JM,33144
33110 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,33144
33114 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,33115
33115 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,33128
33116 :: EXPR :: reference :: Ljava/lang/Character :: v15 = p0 $this .insCode::DD,33119
33119 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,33124:CD,33145
33121 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::JM,33145
33124 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,33145
33128 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,33129
33129 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,33142
33130 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,33133
33133 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,33138:CD,33146
33135 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::JM,33146
33138 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,33146
33142 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,33143
33143 :: NORM :: compound :: I :: return v27::CF,33098
33144 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,33114
33145 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,33128
33146 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,33142
33212 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.hashCode()::CE,33213:CD,33216:CD,33220:CD,33229:CD,33230:CD,33234:CD,33243:CD,33244:CD,33248:CD,33257:CD,33258:CD,33262:CD,33271:CD,33272:CD,33273:CD,33274:CD,33275:CD,33276
33213 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.hashCode()::
33216 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(37) * #(5)::DD,33229
33217 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::DD,33220
33220 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,33224:CD,33273
33221 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .siteID::JM,33273
33224 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,33273
33229 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,33230
33230 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(37) * v13::DD,33243
33231 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::DD,33234
33234 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 50::CD,33238:CD,33274
33238 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,33274
33243 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,33244
33244 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(37) * v20::DD,33257
33245 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .evCode::DD,33248
33248 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 74::CD,33252:CD,33275
33249 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .evCode::JM,33275
33252 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,33275
33257 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,33258
33258 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(37) * v27::DD,33271
33259 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .description::DD,33262
33262 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 98::CD,33266:CD,33276
33263 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::JM,33276
33266 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,33276
33271 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,33272
33272 :: NORM :: compound :: I :: return v34::DD,33213
33273 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,33229
33274 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,33243
33275 :: EXPR :: assign :: null :: PHI v26 = v25, #(0)::CF,33257
33276 :: EXPR :: assign :: null :: PHI v33 = v32, #(0)::CF,33271
33352 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.hashCode()::CE,33353:CD,33356:CD,33360:CD,33369:CD,33370:CD,33374:CD,33383:CD,33384:CD,33388:CD,33397:CD,33398:CD,33399:CD,33400:CD,33401
33353 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueRange.hashCode()::
33356 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,33369
33357 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .chain::DD,33360
33360 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,33365:CD,33399
33362 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .chain::JM,33399
33365 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,33399
33369 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,33370
33370 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,33383
33371 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v15 = p0 $this .end::DD,33374
33374 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,33379:CD,33400
33379 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,33400:CL,33097
33383 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,33384
33384 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,33397
33385 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = p0 $this .start::DD,33388
33388 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,33393:CD,33401
33393 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,33401:CL,33097
33397 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,33398
33398 :: NORM :: compound :: I :: return v27::CF,33353
33399 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,33369
33400 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,33383
33401 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,33397
33428 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::CE,33429:CD,33432:CD,33436:CD,33445:CD,33446:CD,33450:CD,33459:CD,33460:CD,33464:CD,33473:CD,33474:CD,33478:CD,33487:CD,33488:CD,33492:CD,33501:CD,33502:CD,33506:CD,33515:CD,33516:CD,33520:CD,33529:CD,33530:CD,33534:CD,33543:CD,33544:CD,33548:CD,33557:CD,33558:CD,33562:CD,33571:CD,33572:CD,33576:CD,33585:CD,33586:CD,33590:CD,33599:CD,33600:CD,33604:CD,33613:CD,33614:CD,33618:CD,33627:CD,33628:CD,33632:CD,33641:CD,33642:CD,33646:CD,33655:CD,33656:CD,33660:CD,33669:CD,33670:CD,33671:CD,33672:CD,33673:CD,33674:CD,33675:CD,33676:CD,33677:CD,33678:CD,33679:CD,33680:CD,33681:CD,33682:CD,33683:CD,33684:CD,33685:CD,33686:CD,33687
33429 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ecod.EcodDomain.hashCode()::
33432 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(31) * #(1)::DD,33445
33433 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .architectureName::DD,33436
33436 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 21::CD,33441:CD,33671
33438 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .architectureName::JM,33671
33441 :: CALL :: call :: I :: v10 = v8.hashCode()::JM,33671
33445 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,33446
33446 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(31) * v13::DD,33459
33447 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .chainId::DD,33450
33450 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 45::CD,33455:CD,33672
33452 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .chainId::JM,33672
33455 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,33672
33459 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,33460
33460 :: EXPR :: assign :: Ljava/lang/Object :: v21 = #(31) * v20::DD,33473
33461 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .domainId::DD,33464
33464 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 69::CD,33469:CD,33673
33466 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::JM,33673
33469 :: CALL :: call :: I :: v25 = v23.hashCode()::JM,33673
33473 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v21 + v26::DD,33474
33474 :: EXPR :: assign :: Ljava/lang/Object :: v28 = #(31) * v27::DD,33487
33475 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,33478
33478 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 93::CD,33483:CD,33674
33480 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,33674
33483 :: CALL :: call :: I :: v32 = v30.hashCode()::JM,33674
33487 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v28 + v33::DD,33488
33488 :: EXPR :: assign :: Ljava/lang/Object :: v35 = #(31) * v34::DD,33501
33489 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::DD,33492
33492 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 117::CD,33497:CD,33675
33494 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = p0 $this .fGroup::JM,33675
33497 :: CALL :: call :: I :: v39 = v37.hashCode()::JM,33675
33501 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v35 + v40::DD,33502
33502 :: EXPR :: assign :: Ljava/lang/Object :: v42 = #(31) * v41::DD,33515
33503 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p0 $this .hGroup::DD,33506
33506 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 141::CD,33511:CD,33676
33508 :: EXPR :: reference :: Ljava/lang/Integer :: v44 = p0 $this .hGroup::JM,33676
33511 :: CALL :: call :: I :: v46 = v44.hashCode()::JM,33676
33515 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v42 + v47::DD,33516
33516 :: EXPR :: assign :: Ljava/lang/Object :: v49 = #(31) * v48::DD,33529
33517 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .hGroupName::DD,33520
33520 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 165::CD,33525:CD,33677
33522 :: EXPR :: reference :: Ljava/lang/String :: v51 = p0 $this .hGroupName::JM,33677
33525 :: CALL :: call :: I :: v53 = v51.hashCode()::JM,33677
33529 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v49 + v54::DD,33530
33530 :: EXPR :: assign :: Ljava/lang/Object :: v56 = #(31) * v55::DD,33543
33531 :: EXPR :: reference :: Ljava/lang/Long :: v57 = p0 $this .assemblyId::DD,33534
33534 :: PRED :: IF :: Z :: if (v57 != #(null)) goto 189::CD,33539:CD,33678
33536 :: EXPR :: reference :: Ljava/lang/Long :: v58 = p0 $this .assemblyId::JM,33678
33539 :: CALL :: call :: I :: v60 = v58.hashCode()::JM,33678
33543 :: EXPR :: assign :: Ljava/lang/Object :: v62 = v56 + v61::DD,33544
33544 :: EXPR :: assign :: Ljava/lang/Object :: v63 = #(31) * v62::DD,33557
33545 :: EXPR :: reference :: Ljava/util/Set :: v64 = p0 $this .ligands::DD,33548
33548 :: PRED :: IF :: Z :: if (v64 != #(null)) goto 213::CD,33553:CD,33679
33553 :: CALL :: call :: I :: v67 = v65.hashCode()::JM,33679
33557 :: EXPR :: assign :: Ljava/lang/Object :: v69 = v63 + v68::DD,33558
33558 :: EXPR :: assign :: Ljava/lang/Object :: v70 = #(31) * v69::DD,33571
33559 :: EXPR :: reference :: Ljava/lang/Boolean :: v71 = p0 $this .manual::DD,33562
33562 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 239::CD,33567:CD,33680
33564 :: EXPR :: reference :: Ljava/lang/Boolean :: v72 = p0 $this .manual::JM,33680
33567 :: CALL :: call :: I :: v74 = v72.hashCode()::JM,33680
33571 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v70 + v75::DD,33572
33572 :: EXPR :: assign :: Ljava/lang/Object :: v77 = #(31) * v76::DD,33585
33573 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .pdbId::DD,33576
33576 :: PRED :: IF :: Z :: if (v78 != #(null)) goto 263::CD,33581:CD,33681
33578 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .pdbId::JM,33681
33581 :: CALL :: call :: I :: v81 = v79.hashCode()::JM,33681
33585 :: EXPR :: assign :: Ljava/lang/Object :: v83 = v77 + v82::DD,33586
33586 :: EXPR :: assign :: Ljava/lang/Object :: v84 = #(31) * v83::DD,33599
33587 :: EXPR :: reference :: Ljava/lang/String :: v85 = p0 $this .range::DD,33590
33590 :: PRED :: IF :: Z :: if (v85 != #(null)) goto 287::CD,33595:CD,33682
33592 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .range::JM,33682
33595 :: CALL :: call :: I :: v88 = v86.hashCode()::JM,33682
33599 :: EXPR :: assign :: Ljava/lang/Object :: v90 = v84 + v89::DD,33600
33600 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(31) * v90::DD,33613
33601 :: EXPR :: reference :: Ljava/lang/Integer :: v92 = p0 $this .tGroup::DD,33604
33604 :: PRED :: IF :: Z :: if (v92 != #(null)) goto 311::CD,33609:CD,33683
33606 :: EXPR :: reference :: Ljava/lang/Integer :: v93 = p0 $this .tGroup::JM,33683
33609 :: CALL :: call :: I :: v95 = v93.hashCode()::JM,33683
33613 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v91 + v96::DD,33614
33614 :: EXPR :: assign :: Ljava/lang/Object :: v98 = #(31) * v97::DD,33627
33615 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .tGroupName::DD,33618
33618 :: PRED :: IF :: Z :: if (v99 != #(null)) goto 335::CD,33623:CD,33684
33620 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .tGroupName::JM,33684
33623 :: CALL :: call :: I :: v102 = v100.hashCode()::JM,33684
33627 :: EXPR :: assign :: Ljava/lang/Object :: v104 = v98 + v103::DD,33628
33628 :: EXPR :: assign :: Ljava/lang/Object :: v105 = #(31) * v104::DD,33641
33629 :: EXPR :: reference :: Ljava/lang/Long :: v106 = p0 $this .uid::DD,33632
33632 :: PRED :: IF :: Z :: if (v106 != #(null)) goto 359::CD,33637:CD,33685
33634 :: EXPR :: reference :: Ljava/lang/Long :: v107 = p0 $this .uid::JM,33685
33637 :: CALL :: call :: I :: v109 = v107.hashCode()::JM,33685
33641 :: EXPR :: assign :: Ljava/lang/Object :: v111 = v105 + v110::DD,33642
33642 :: EXPR :: assign :: Ljava/lang/Object :: v112 = #(31) * v111::DD,33655
33643 :: EXPR :: reference :: Ljava/lang/Integer :: v113 = p0 $this .xGroup::DD,33646
33646 :: PRED :: IF :: Z :: if (v113 != #(null)) goto 383::CD,33651:CD,33686
33648 :: EXPR :: reference :: Ljava/lang/Integer :: v114 = p0 $this .xGroup::JM,33686
33651 :: CALL :: call :: I :: v116 = v114.hashCode()::JM,33686
33655 :: EXPR :: assign :: Ljava/lang/Object :: v118 = v112 + v117::DD,33656
33656 :: EXPR :: assign :: Ljava/lang/Object :: v119 = #(31) * v118::DD,33669
33657 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .xGroupName::DD,33660
33660 :: PRED :: IF :: Z :: if (v120 != #(null)) goto 407::CD,33665:CD,33687
33662 :: EXPR :: reference :: Ljava/lang/String :: v121 = p0 $this .xGroupName::JM,33687
33665 :: CALL :: call :: I :: v123 = v121.hashCode()::JM,33687
33669 :: EXPR :: assign :: Ljava/lang/Object :: v125 = v119 + v124::DD,33670
33670 :: NORM :: compound :: I :: return v125::DD,33429
33671 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,33445
33672 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::CF,33459
33673 :: EXPR :: assign :: null :: PHI v26 = #(0), v25::CF,33473
33674 :: EXPR :: assign :: null :: PHI v33 = #(0), v32::CF,33487
33675 :: EXPR :: assign :: null :: PHI v40 = #(0), v39::CF,33501
33676 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::CF,33515
33677 :: EXPR :: assign :: null :: PHI v54 = #(0), v53::CF,33529
33678 :: EXPR :: assign :: null :: PHI v61 = #(0), v60::CF,33543
33679 :: EXPR :: assign :: null :: PHI v68 = #(0), v67::CF,33557
33680 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::CF,33571
33681 :: EXPR :: assign :: null :: PHI v82 = #(0), v81::CF,33585
33682 :: EXPR :: assign :: null :: PHI v89 = #(0), v88::CF,33599
33683 :: EXPR :: assign :: null :: PHI v96 = #(0), v95::CF,33613
33684 :: EXPR :: assign :: null :: PHI v103 = #(0), v102::CF,33627
33685 :: EXPR :: assign :: null :: PHI v110 = #(0), v109::CF,33641
33686 :: EXPR :: assign :: null :: PHI v117 = #(0), v116::CF,33655
33687 :: EXPR :: assign :: null :: PHI v124 = #(0), v123::CF,33669
33812 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.hashCode()::CE,33813:CD,33816:CD,33820:CD,33829:CD,33830:CD,33834:CD,33843:CD,33844:CD,33845:CD,33846
33813 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Author.hashCode()::
33816 :: EXPR :: assign :: Ljava/lang/Object :: v5 = #(19) * #(3)::DD,33829
33817 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .surname::DD,33820
33820 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 24::CD,33824:CD,33845
33821 :: EXPR :: reference :: Ljava/lang/String :: v9 = p0 $this .surname::JM,33845
33824 :: CALL :: call :: I :: v11 = v9.hashCode()::JM,33845
33829 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v5 + v12::DD,33830
33830 :: EXPR :: assign :: Ljava/lang/Object :: v14 = #(19) * v13::DD,33843
33831 :: EXPR :: reference :: Ljava/lang/String :: v15 = p0 $this .initials::DD,33834
33834 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 48::CD,33838:CD,33846
33835 :: EXPR :: reference :: Ljava/lang/String :: v16 = p0 $this .initials::JM,33846
33838 :: CALL :: call :: I :: v18 = v16.hashCode()::JM,33846
33843 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v14 + v19::DD,33844
33844 :: NORM :: compound :: I :: return v20::CF,33813
33845 :: EXPR :: assign :: null :: PHI v12 = v11, #(0)::CF,33829
33846 :: EXPR :: assign :: null :: PHI v19 = v18, #(0)::CF,33843
33977 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::CE,33978:CD,33982:JM,33984:JM,33986:JM,33990:JM,33994:JM,33996
33978 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodDomain.equals(java.lang.Object)::
33982 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,33983:CD,33984
33983 :: NORM :: compound :: Z :: return #(1)::DD,33978
33984 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,33985:CD,33986:CD,33990:CD,33994:JM,33984:JM,33996:JM,33982
33985 :: NORM :: compound :: Z :: return #(0)::DD,33978
33986 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,33984:JM,33986:JM,33990:JM,33994:JM,33996:JM,33982
33990 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,33986:JM,33990:JM,33994:JM,33996:JM,33982
33994 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,33995:CD,33996:CD,34000
33995 :: NORM :: compound :: Z :: return #(0)::DD,33978
33996 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
33997 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .architectureName::DD,34000
34000 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,34004:CD,34012:CD,34017
34001 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.architectureName::DD,34004
34004 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,34005:CD,34022
34005 :: NORM :: compound :: Z :: return #(0)::DD,33978
34006 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .architectureName::JM,34017
34009 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.architectureName::JM,34017
34012 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,34017
34017 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,34018:CD,34022
34018 :: NORM :: compound :: Z :: return #(0)::DD,33978
34019 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainId::DD,34022
34022 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,34026:CD,34034:CD,34039
34023 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainId::DD,34026
34026 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,34027:CD,34044
34027 :: NORM :: compound :: Z :: return #(0)::DD,33978
34028 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainId::JM,34039
34031 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainId::JM,34039
34034 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,34039
34039 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,34040:CD,34044
34040 :: NORM :: compound :: Z :: return #(0)::DD,33978
34041 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainId::DD,34044
34044 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,34048:CD,34056:CD,34061
34045 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.domainId::DD,34048
34048 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,34049:CD,34066
34049 :: NORM :: compound :: Z :: return #(0)::DD,33978
34050 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .domainId::JM,34061
34053 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.domainId::JM,34061
34056 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,34061
34061 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,34062:CD,34066
34062 :: NORM :: compound :: Z :: return #(0)::DD,33978
34063 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .fGroupName::DD,34066
34066 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,34070:CD,34078:CD,34083
34067 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.fGroupName::DD,34070
34070 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,34071:CD,34088
34071 :: NORM :: compound :: Z :: return #(0)::DD,33978
34072 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .fGroupName::JM,34083
34075 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.fGroupName::JM,34083
34078 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,34083
34083 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,34084:CD,34088
34084 :: NORM :: compound :: Z :: return #(0)::DD,33978
34085 :: EXPR :: reference :: Ljava/lang/Integer :: v35 = p0 $this .fGroup::DD,34088
34088 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,34092:CD,34100:CD,34105
34089 :: EXPR :: reference :: Ljava/lang/Integer :: v40 = v9.fGroup::DD,34092
34092 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,34093:CD,34110
34093 :: NORM :: compound :: Z :: return #(0)::DD,33978
34094 :: EXPR :: reference :: Ljava/lang/Integer :: v36 = p0 $this .fGroup::JM,34105
34097 :: EXPR :: reference :: Ljava/lang/Integer :: v37 = v9.fGroup::JM,34105
34100 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,34105
34105 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,34106:CD,34110
34106 :: NORM :: compound :: Z :: return #(0)::DD,33978
34107 :: EXPR :: reference :: Ljava/lang/Integer :: v41 = p0 $this .hGroup::DD,34110
34110 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,34114:CD,34122:CD,34127
34111 :: EXPR :: reference :: Ljava/lang/Integer :: v46 = v9.hGroup::DD,34114
34114 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,34115:CD,34132
34115 :: NORM :: compound :: Z :: return #(0)::DD,33978
34116 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .hGroup::JM,34127
34119 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = v9.hGroup::JM,34127
34122 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,34127
34127 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,34128:CD,34132
34128 :: NORM :: compound :: Z :: return #(0)::DD,33978
34129 :: EXPR :: reference :: Ljava/lang/String :: v47 = p0 $this .hGroupName::DD,34132
34132 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 240::CD,34136:CD,34144:CD,34149
34133 :: EXPR :: reference :: Ljava/lang/String :: v52 = v9.hGroupName::DD,34136
34136 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 256::CD,34137:CD,34154
34137 :: NORM :: compound :: Z :: return #(0)::DD,33978
34138 :: EXPR :: reference :: Ljava/lang/String :: v48 = p0 $this .hGroupName::JM,34149
34141 :: EXPR :: reference :: Ljava/lang/String :: v49 = v9.hGroupName::JM,34149
34144 :: CALL :: call :: Z :: v51 = v48.equals(v49)::JM,34149
34149 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 256::CD,34150:CD,34154
34150 :: NORM :: compound :: Z :: return #(0)::DD,33978
34151 :: EXPR :: reference :: Ljava/lang/Long :: v53 = p0 $this .assemblyId::DD,34154
34154 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 272::CD,34158:CD,34166:CD,34171
34155 :: EXPR :: reference :: Ljava/lang/Long :: v58 = v9.assemblyId::DD,34158
34158 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 288::CD,34159:CD,34176
34159 :: NORM :: compound :: Z :: return #(0)::DD,33978
34160 :: EXPR :: reference :: Ljava/lang/Long :: v54 = p0 $this .assemblyId::JM,34171
34163 :: EXPR :: reference :: Ljava/lang/Long :: v55 = v9.assemblyId::JM,34171
34166 :: CALL :: call :: Z :: v57 = v54.equals(v55)::JM,34171
34171 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 288::CD,34172:CD,34176
34172 :: NORM :: compound :: Z :: return #(0)::DD,33978
34173 :: EXPR :: reference :: Ljava/util/Set :: v59 = p0 $this .ligands::DD,34176
34176 :: PRED :: IF :: Z :: if (v59 != #(null)) goto 304::CD,34180:CD,34188:CD,34193
34177 :: EXPR :: reference :: Ljava/util/Set :: v64 = v9.ligands::DD,34180
34180 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 322::CD,34181:CD,34198
34181 :: NORM :: compound :: Z :: return #(0)::DD,33978
34188 :: CALL :: call :: Z :: v63 = v60.equals(v61)::JM,34193
34193 :: PRED :: IF :: Z :: if (v63 != #(0)) goto 322::CD,34194:CD,34198
34194 :: NORM :: compound :: Z :: return #(0)::DD,33978
34195 :: EXPR :: reference :: Ljava/lang/Boolean :: v65 = p0 $this .manual::DD,34198
34198 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 338::CD,34202:CD,34210:CD,34215
34199 :: EXPR :: reference :: Ljava/lang/Boolean :: v70 = v9.manual::DD,34202
34202 :: PRED :: IF :: Z :: if (v70 == #(null)) goto 354::CD,34203:CD,34220
34203 :: NORM :: compound :: Z :: return #(0)::DD,33978
34204 :: EXPR :: reference :: Ljava/lang/Boolean :: v66 = p0 $this .manual::JM,34215
34207 :: EXPR :: reference :: Ljava/lang/Boolean :: v67 = v9.manual::JM,34215
34210 :: CALL :: call :: Z :: v69 = v66.equals(v67)::JM,34215
34215 :: PRED :: IF :: Z :: if (v69 != #(0)) goto 354::CD,34216:CD,34220
34216 :: NORM :: compound :: Z :: return #(0)::DD,33978
34217 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .pdbId::DD,34220
34220 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 370::CD,34224:CD,34232:CD,34237
34221 :: EXPR :: reference :: Ljava/lang/String :: v76 = v9.pdbId::DD,34224
34224 :: PRED :: IF :: Z :: if (v76 == #(null)) goto 386::CD,34225:CD,34242
34225 :: NORM :: compound :: Z :: return #(0)::DD,33978
34226 :: EXPR :: reference :: Ljava/lang/String :: v72 = p0 $this .pdbId::JM,34237
34229 :: EXPR :: reference :: Ljava/lang/String :: v73 = v9.pdbId::JM,34237
34232 :: CALL :: call :: Z :: v75 = v72.equals(v73)::JM,34237
34237 :: PRED :: IF :: Z :: if (v75 != #(0)) goto 386::CD,34238:CD,34242
34238 :: NORM :: compound :: Z :: return #(0)::DD,33978
34239 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .range::DD,34242
34242 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 402::CD,34246:CD,34254:CD,34259
34243 :: EXPR :: reference :: Ljava/lang/String :: v82 = v9.range::DD,34246
34246 :: PRED :: IF :: Z :: if (v82 == #(null)) goto 418::CD,34247:CD,34264
34247 :: NORM :: compound :: Z :: return #(0)::DD,33978
34248 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .range::JM,34259
34251 :: EXPR :: reference :: Ljava/lang/String :: v79 = v9.range::JM,34259
34254 :: CALL :: call :: Z :: v81 = v78.equals(v79)::JM,34259
34259 :: PRED :: IF :: Z :: if (v81 != #(0)) goto 418::CD,34260:CD,34264
34260 :: NORM :: compound :: Z :: return #(0)::DD,33978
34261 :: EXPR :: reference :: Ljava/lang/Integer :: v83 = p0 $this .tGroup::DD,34264
34264 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 434::CD,34268:CD,34276:CD,34281
34265 :: EXPR :: reference :: Ljava/lang/Integer :: v88 = v9.tGroup::DD,34268
34268 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 450::CD,34269:CD,34286
34269 :: NORM :: compound :: Z :: return #(0)::DD,33978
34270 :: EXPR :: reference :: Ljava/lang/Integer :: v84 = p0 $this .tGroup::JM,34281
34273 :: EXPR :: reference :: Ljava/lang/Integer :: v85 = v9.tGroup::JM,34281
34276 :: CALL :: call :: Z :: v87 = v84.equals(v85)::JM,34281
34281 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 450::CD,34282:CD,34286
34282 :: NORM :: compound :: Z :: return #(0)::DD,33978
34283 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .tGroupName::DD,34286
34286 :: PRED :: IF :: Z :: if (v89 != #(null)) goto 466::CD,34290:CD,34298:CD,34303
34287 :: EXPR :: reference :: Ljava/lang/String :: v94 = v9.tGroupName::DD,34290
34290 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 482::CD,34291:CD,34308
34291 :: NORM :: compound :: Z :: return #(0)::DD,33978
34292 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .tGroupName::JM,34303
34295 :: EXPR :: reference :: Ljava/lang/String :: v91 = v9.tGroupName::JM,34303
34298 :: CALL :: call :: Z :: v93 = v90.equals(v91)::JM,34303
34303 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 482::CD,34304:CD,34308
34304 :: NORM :: compound :: Z :: return #(0)::DD,33978
34305 :: EXPR :: reference :: Ljava/lang/Long :: v95 = p0 $this .uid::DD,34308
34308 :: PRED :: IF :: Z :: if (v95 != #(null)) goto 498::CD,34312:CD,34320:CD,34325
34309 :: EXPR :: reference :: Ljava/lang/Long :: v100 = v9.uid::DD,34312
34312 :: PRED :: IF :: Z :: if (v100 == #(null)) goto 514::CD,34313:CD,34330
34313 :: NORM :: compound :: Z :: return #(0)::DD,33978
34314 :: EXPR :: reference :: Ljava/lang/Long :: v96 = p0 $this .uid::JM,34325
34317 :: EXPR :: reference :: Ljava/lang/Long :: v97 = v9.uid::JM,34325
34320 :: CALL :: call :: Z :: v99 = v96.equals(v97)::JM,34325
34325 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 514::CD,34326:CD,34330
34326 :: NORM :: compound :: Z :: return #(0)::DD,33978
34327 :: EXPR :: reference :: Ljava/lang/Integer :: v101 = p0 $this .xGroup::DD,34330
34330 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 530::CD,34334:CD,34342:CD,34347
34331 :: EXPR :: reference :: Ljava/lang/Integer :: v106 = v9.xGroup::DD,34334
34334 :: PRED :: IF :: Z :: if (v106 == #(null)) goto 546::CD,34335:CD,34352
34335 :: NORM :: compound :: Z :: return #(0)::DD,33978
34336 :: EXPR :: reference :: Ljava/lang/Integer :: v102 = p0 $this .xGroup::JM,34347
34339 :: EXPR :: reference :: Ljava/lang/Integer :: v103 = v9.xGroup::JM,34347
34342 :: CALL :: call :: Z :: v105 = v102.equals(v103)::JM,34347
34347 :: PRED :: IF :: Z :: if (v105 != #(0)) goto 546::CD,34348:CD,34352
34348 :: NORM :: compound :: Z :: return #(0)::DD,33978
34349 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .xGroupName::DD,34352
34352 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 562::CD,34356:CD,34364:CD,34369
34353 :: EXPR :: reference :: Ljava/lang/String :: v112 = v9.xGroupName::DD,34356
34356 :: PRED :: IF :: Z :: if (v112 == #(null)) goto 578::CD,34357:CD,34371
34357 :: NORM :: compound :: Z :: return #(0)::DD,33978
34358 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .xGroupName::JM,34369
34361 :: EXPR :: reference :: Ljava/lang/String :: v109 = v9.xGroupName::JM,34369
34364 :: CALL :: call :: Z :: v111 = v108.equals(v109)::JM,34369
34369 :: PRED :: IF :: Z :: if (v111 != #(0)) goto 578::CD,34370:CD,34371
34370 :: NORM :: compound :: Z :: return #(0)::DD,33978
34371 :: NORM :: compound :: Z :: return #(1)::DD,33978
34537 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::CE,34538:CD,34542:JM,34544:JM,34548:JM,34552:JM,34554
34538 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Author.equals(java.lang.Object)::
34542 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,34543:CD,34544:CD,34548:CD,34552:JM,34554:JM,34542
34543 :: NORM :: compound :: Z :: return #(0)::CF,34538
34544 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,34544:JM,34548:JM,34552:JM,34554:JM,34542
34548 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,34544:JM,34548:JM,34552:JM,34554:JM,34542
34552 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,34553:CD,34554:CD,34558
34553 :: NORM :: compound :: Z :: return #(0)::CF,34538
34554 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
34555 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .surname::DD,34558
34558 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,34562:CD,34570:CD,34575
34559 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.surname::DD,34562
34562 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,34576:CD,34580:CD,34599:CD,34600
34564 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .surname::JM,34575
34567 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.surname::JM,34575
34570 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,34575
34575 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,34576:CD,34580:CD,34599:CD,34600
34576 :: NORM :: compound :: Z :: return #(0)::CF,34538
34577 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .initials::DD,34580
34580 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 75::CD,34584:CD,34592:CD,34597
34581 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.initials::DD,34584
34584 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 93::CD,34600
34586 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .initials::JM,34597
34589 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.initials::JM,34597
34592 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,34597
34597 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 93::CD,34600
34599 :: NORM :: compound :: Z :: return v24::CF,34538
34600 :: EXPR :: assign :: null :: PHI v24 = #(0), #(1)::CF,34599
34626 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::CE,34627:CD,34631:JM,34643:JM,34645:JM,34633:JM,34635:JM,34639
34627 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SSBondImpl.equals(java.lang.Object)::
34631 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,34632:CD,34633
34632 :: NORM :: compound :: Z :: return #(1)::CF,34627
34633 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,34634:CD,34635:CD,34639:CD,34643:JM,34645:JM,34631:JM,34633
34634 :: NORM :: compound :: Z :: return #(0)::CF,34627
34635 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,34643:JM,34645:JM,34631:JM,34633:JM,34635:JM,34639
34639 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,34643:JM,34645:JM,34631:JM,34635:JM,34639
34643 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,34644:CD,34645:CD,34649
34644 :: NORM :: compound :: Z :: return #(0)::CF,34627
34645 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
34646 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainID1::DD,34649
34649 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,34653:CD,34661:CD,34666
34650 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainID1::DD,34653
34653 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,34654:CD,34671
34654 :: NORM :: compound :: Z :: return #(0)::CF,34627
34655 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainID1::JM,34666
34658 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainID1::JM,34666
34661 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,34666
34666 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,34667:CD,34671
34667 :: NORM :: compound :: Z :: return #(0)::CF,34627
34668 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .chainID2::DD,34671
34671 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,34675:CD,34683:CD,34688
34672 :: EXPR :: reference :: Ljava/lang/String :: v22 = v9.chainID2::DD,34675
34675 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,34676:CD,34693
34676 :: NORM :: compound :: Z :: return #(0)::CF,34627
34677 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .chainID2::JM,34688
34680 :: EXPR :: reference :: Ljava/lang/String :: v19 = v9.chainID2::JM,34688
34683 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,34688
34688 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,34689:CD,34693
34689 :: NORM :: compound :: Z :: return #(0)::CF,34627
34690 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .insCode1::DD,34693
34693 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,34697:CD,34705:CD,34710
34694 :: EXPR :: reference :: Ljava/lang/String :: v28 = v9.insCode1::DD,34697
34697 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,34698:CD,34715
34698 :: NORM :: compound :: Z :: return #(0)::CF,34627
34699 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .insCode1::JM,34710
34702 :: EXPR :: reference :: Ljava/lang/String :: v25 = v9.insCode1::JM,34710
34705 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,34710
34710 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,34711:CD,34715
34711 :: NORM :: compound :: Z :: return #(0)::CF,34627
34712 :: EXPR :: reference :: Ljava/lang/String :: v29 = p0 $this .insCode2::DD,34715
34715 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 144::CD,34719:CD,34727:CD,34732
34716 :: EXPR :: reference :: Ljava/lang/String :: v34 = v9.insCode2::DD,34719
34719 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 160::CD,34720:CD,34737
34720 :: NORM :: compound :: Z :: return #(0)::CF,34627
34721 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .insCode2::JM,34732
34724 :: EXPR :: reference :: Ljava/lang/String :: v31 = v9.insCode2::JM,34732
34727 :: CALL :: call :: Z :: v33 = v30.equals(v31)::JM,34732
34732 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 160::CD,34733:CD,34737
34733 :: NORM :: compound :: Z :: return #(0)::CF,34627
34734 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::DD,34737
34737 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 176::CD,34741:CD,34749:CD,34754
34738 :: EXPR :: reference :: Ljava/lang/String :: v40 = v9.resnum1::DD,34741
34741 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 192::CD,34742:CD,34759
34742 :: NORM :: compound :: Z :: return #(0)::CF,34627
34743 :: EXPR :: reference :: Ljava/lang/String :: v36 = p0 $this .resnum1::JM,34754
34746 :: EXPR :: reference :: Ljava/lang/String :: v37 = v9.resnum1::JM,34754
34749 :: CALL :: call :: Z :: v39 = v36.equals(v37)::JM,34754
34754 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 192::CD,34755:CD,34759
34755 :: NORM :: compound :: Z :: return #(0)::CF,34627
34756 :: EXPR :: reference :: Ljava/lang/String :: v41 = p0 $this .resnum2::DD,34759
34759 :: PRED :: IF :: Z :: if (v41 != #(null)) goto 208::CD,34763:CD,34771:CD,34776
34760 :: EXPR :: reference :: Ljava/lang/String :: v46 = v9.resnum2::DD,34763
34763 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 224::CD,34764:CD,34778
34764 :: NORM :: compound :: Z :: return #(0)::CF,34627
34765 :: EXPR :: reference :: Ljava/lang/String :: v42 = p0 $this .resnum2::JM,34776
34768 :: EXPR :: reference :: Ljava/lang/String :: v43 = v9.resnum2::JM,34776
34771 :: CALL :: call :: Z :: v45 = v42.equals(v43)::JM,34776
34776 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 224::CD,34777:CD,34778
34777 :: NORM :: compound :: Z :: return #(0)::CF,34627
34778 :: NORM :: compound :: Z :: return #(1)::CF,34627
35032 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::CE,35033:CD,35037:JM,35041:JM,35045:JM,35049:JM,35051:JM,35039
35033 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueNumber.equals(java.lang.Object)::JM,35435:JM,35457:JM,71797:JM,75099:JM,90573
35037 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,35038:CD,35039
35038 :: NORM :: compound :: Z :: return #(1)::CF,35033
35039 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,35040:CD,35041:CD,35045:CD,35049:JM,35051:JM,35037:JM,35039
35040 :: NORM :: compound :: Z :: return #(0)::CF,35033
35041 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,35041:JM,35045:JM,35049:JM,35051:JM,35037:JM,35039
35045 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,35041:JM,35045:JM,35049:JM,35051:JM,35037
35049 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,35050:CD,35051:CD,35055
35050 :: NORM :: compound :: Z :: return #(0)::CF,35033
35051 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
35052 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chainId::DD,35055
35055 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,35059:CD,35067:CD,35072
35056 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chainId::DD,35059
35059 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,35060:CD,35077
35060 :: NORM :: compound :: Z :: return #(0)::CF,35033
35061 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chainId::JM,35072
35064 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chainId::JM,35072
35067 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,35072
35072 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,35073:CD,35077
35073 :: NORM :: compound :: Z :: return #(0)::CF,35033
35074 :: EXPR :: reference :: Ljava/lang/Character :: v17 = p0 $this .insCode::DD,35077
35077 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,35081:CD,35089:CD,35094
35078 :: EXPR :: reference :: Ljava/lang/Character :: v22 = v9.insCode::DD,35081
35081 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,35082:CD,35099
35082 :: NORM :: compound :: Z :: return #(0)::CF,35033
35083 :: EXPR :: reference :: Ljava/lang/Character :: v18 = p0 $this .insCode::JM,35094
35086 :: EXPR :: reference :: Ljava/lang/Character :: v19 = v9.insCode::JM,35094
35089 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,35094
35094 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,35095:CD,35099
35095 :: NORM :: compound :: Z :: return #(0)::CF,35033
35096 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p0 $this .seqNum::DD,35099
35099 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,35103:CD,35111:CD,35116
35100 :: EXPR :: reference :: Ljava/lang/Integer :: v28 = v9.seqNum::DD,35103
35103 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,35104:CD,35118
35104 :: NORM :: compound :: Z :: return #(0)::CF,35033
35105 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::JM,35116
35108 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = v9.seqNum::JM,35116
35111 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,35116
35116 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,35117:CD,35118
35117 :: NORM :: compound :: Z :: return #(0)::CF,35033
35118 :: NORM :: compound :: Z :: return #(1)::CF,35033
35230 :: ENTR :: entry :: null :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::CE,35231:CD,35235:CD,35236:JM,35238
35231 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.secstruc.SecStrucInfo.equals(java.lang.Object)::
35235 :: EXPR :: assign :: Z :: v4=p1 $o  INSTANCEOF org.biojava.nbio.structure.secstruc.SecStrucInfo::DD,35236
35236 :: PRED :: IF :: Z :: if (v4 != #(0)) goto 10::CD,35237:CD,35238:CD,35245
35237 :: NORM :: compound :: Z :: return #(0)::CF,35231
35238 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST p1 $o ::
35239 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v7 = p0 $this .type::DD,35245
35242 :: EXPR :: reference :: Lorg/biojava/nbio/structure/secstruc/SecStrucType :: v8 = v6.type::DD,35245
35245 :: PRED :: IF :: Z :: if (v7 != v8) goto 28::CD,35246:CD,35247
35246 :: NORM :: compound :: Z :: return #(1)::CF,35231
35247 :: NORM :: compound :: Z :: return #(0)::CF,35231
35373 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::CE,35374:CD,35378:JM,35392:JM,35380:JM,35382:JM,35386:JM,35390
35374 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ResidueRange.equals(java.lang.Object)::
35378 :: PRED :: IF :: Z :: if (p0 $this  != p1 $obj ) goto 8::CD,35379:CD,35380
35379 :: NORM :: compound :: Z :: return #(1)::CF,35374
35380 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 14::CD,35381:CD,35382:CD,35386:CD,35390:JM,35392:JM,35378:JM,35380
35381 :: NORM :: compound :: Z :: return #(0)::CF,35374
35382 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,35392:JM,35378:JM,35380:JM,35382:JM,35386:JM,35390
35386 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,35392:JM,35378:JM,35382:JM,35386:JM,35390
35390 :: PRED :: IF :: Z :: if (v6 == v8) goto 27::CD,35391:CD,35392:CD,35396
35391 :: NORM :: compound :: Z :: return #(0)::CF,35374
35392 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
35393 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .chain::DD,35396
35396 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 48::CD,35400:CD,35408:CD,35413
35397 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.chain::DD,35400
35400 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 64::CD,35401:CD,35418
35401 :: NORM :: compound :: Z :: return #(0)::CF,35374
35402 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .chain::JM,35413
35405 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.chain::JM,35413
35408 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,35413
35413 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 64::CD,35414:CD,35418
35414 :: NORM :: compound :: Z :: return #(0)::CF,35374
35415 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = p0 $this .end::DD,35418
35418 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 80::CD,35422:CD,35430:CD,35435
35419 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v22 = v9.end::DD,35422
35422 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 96::CD,35423:CD,35440
35423 :: NORM :: compound :: Z :: return #(0)::CF,35374
35430 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,35435:CL,35032
35435 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,35436:CD,35440
35436 :: NORM :: compound :: Z :: return #(0)::CF,35374
35437 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v23 = p0 $this .start::DD,35440
35440 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 112::CD,35444:CD,35452:CD,35457
35441 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v28 = v9.start::DD,35444
35444 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 128::CD,35445:CD,35459
35445 :: NORM :: compound :: Z :: return #(0)::CF,35374
35452 :: CALL :: call :: Z :: v27 = v24.equals(v25)::JM,35457:CL,35032
35457 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 128::CD,35458:CD,35459
35458 :: NORM :: compound :: Z :: return #(0)::CF,35374
35459 :: NORM :: compound :: Z :: return #(1)::CF,35374
35499 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::CE,35500:CD,35504:JM,35506:JM,35510:JM,35514:JM,35516
35500 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Site.equals(java.lang.Object)::
35504 :: PRED :: IF :: Z :: if (p1 $obj  != #(null)) goto 7::CD,35505:CD,35506:CD,35510:CD,35514:JM,35504:JM,35516
35505 :: NORM :: compound :: Z :: return #(0)::DD,35500
35506 :: CALL :: call :: Ljava/lang/Class :: v6 = p0 $this .getClass()::JM,35504:JM,35506:JM,35510:JM,35514:JM,35516
35510 :: CALL :: call :: Ljava/lang/Class :: v8 = p1 $obj .getClass()::JM,35504:JM,35506:JM,35510:JM,35514:JM,35516
35514 :: PRED :: IF :: Z :: if (v6 == v8) goto 20::CD,35515:CD,35516:CD,35520
35515 :: NORM :: compound :: Z :: return #(0)::DD,35500
35516 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST p1 $obj ::
35517 :: EXPR :: reference :: Ljava/lang/String :: v10 = p0 $this .siteID::DD,35520
35520 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 42::CD,35524:CD,35532:CD,35537
35521 :: EXPR :: reference :: Ljava/lang/String :: v16 = v9.siteID::DD,35524
35524 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 58::CD,35538:CD,35545
35526 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .siteID::JM,35537
35529 :: EXPR :: reference :: Ljava/lang/String :: v12 = v9.siteID::JM,35537
35532 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,35537
35537 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 58::CD,35538:CD,35545
35538 :: NORM :: compound :: Z :: return #(0)::DD,35500
35539 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .groups::DD,35545
35542 :: EXPR :: reference :: Ljava/util/List :: v18 = v9.groups::DD,35545
35545 :: PRED :: IF :: Z :: if (v17 == v18) goto 94::CD,35549:CD,35566
35546 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::DD,35549
35549 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 92::CD,35556:CD,35561:CD,35562
35556 :: CALL :: call :: Z :: v23 = v20.equals(v21)::JM,35561
35561 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 94::CD,35562:CD,35566
35562 :: NORM :: compound :: Z :: return #(0)::DD,35500
35563 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .evCode::DD,35566
35566 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 111::CD,35570:CD,35578:CD,35583
35567 :: EXPR :: reference :: Ljava/lang/String :: v29 = v9.evCode::DD,35570
35570 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 127::CD,35584:CD,35588
35572 :: EXPR :: reference :: Ljava/lang/String :: v25 = p0 $this .evCode::JM,35583
35575 :: EXPR :: reference :: Ljava/lang/String :: v26 = v9.evCode::JM,35583
35578 :: CALL :: call :: Z :: v28 = v25.equals(v26)::JM,35583
35583 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 127::CD,35584:CD,35588
35584 :: NORM :: compound :: Z :: return #(0)::DD,35500
35585 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .description::DD,35588
35588 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 144::CD,35592:CD,35600:CD,35605
35589 :: EXPR :: reference :: Ljava/lang/String :: v35 = v9.description::DD,35592
35592 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 160::CD,35606:CD,35607
35594 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .description::JM,35605
35597 :: EXPR :: reference :: Ljava/lang/String :: v32 = v9.description::JM,35605
35600 :: CALL :: call :: Z :: v34 = v31.equals(v32)::JM,35605
35605 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 160::CD,35606:CD,35607
35606 :: NORM :: compound :: Z :: return #(0)::DD,35500
35607 :: NORM :: compound :: Z :: return #(1)::DD,35500
35968 :: CALL :: call :: Ljava/util/ResourceBundle :: v6 = getBundle(p1 $bundleName )::JM,35972
35972 :: EXPR :: modify :: Ljava/util/ResourceBundle :: p0 $this .RESOURCE_BUNDLE = v6::
35976 :: CALL :: call :: V :: v7.printStackTrace()::
36509 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent))::CL,39276
36513 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb))::CL,39276
36517 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.gz))::CL,39276
36521 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.gz))::CL,39276
36525 :: CALL :: call :: V :: p0 $this .addExtension(#(.ent.Z))::CL,39276
36529 :: CALL :: call :: V :: p0 $this .addExtension(#(.pdb.Z))::CL,39276
36557 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif))::CL,39276
36561 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif))::CL,39276
36565 :: CALL :: call :: V :: p0 $this .addExtension(#(.cif.gz))::CL,39276
36569 :: CALL :: call :: V :: p0 $this .addExtension(#(.mmcif.gz))::CL,39276
36597 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::CE,36598:CD,36601:CD,36605:CD,36609:CD,36613
36598 :: EXIT :: exit :: Ljava/util/TreeMap :: org.biojava.nbio.structure.xtal.SymoplibParser.parseSpaceGroupsXML(java.io.InputStream)::JM,30945
36601 :: CALL :: call :: Ljava/lang/String :: v4 = convertStreamToString(p1 $spaceGroupIS )::CL,39316
36605 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: v6 = fromXML(v4)::JM,36609:JM,36613:CL,39374
36609 :: CALL :: call :: Ljava/util/TreeMap :: v8 = v6.getMapProperty()::JM,36609:JM,36613
36613 :: NORM :: compound :: Ljava/util/TreeMap :: return v8::DD,36598
36619 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.initPath()::CD,36622:CD,36624
36622 :: EXPR :: reference :: Ljava/io/File :: v2 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::DD,36624
36624 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 28::JM,29555:JM,29548:CD,36629:CD,36630:CD,36638
36629 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::DD,36638
36630 :: CALL :: call :: Ljava/lang/String :: v8 = v4.getCacheFilePath()::CL,29577
36638 :: EXPR :: modify :: Ljava/io/File :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path = v6::
36648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::CF,36649:CD,36651:CD,36653:CD,36654:CD,36662
36649 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.chem.ResidueType.values()::JM,31038:JM,31124
36651 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v2 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.ENUM$VALUES::DD,36653
36653 :: EXPR :: assign :: I :: v4 = v2.length::DD,36654
36654 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v5 = new org.biojava.nbio.structure.io.mmcif.chem.ResidueType[]::DD,36662
36662 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v5::CF,36649
36700 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.values()::CF,36701:CD,36703:CD,36705:CD,36706:CD,36714
36701 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.values()::JM,31255
36703 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v2 = org.biojava.nbio.structure.ExperimentalTechnique.ENUM$VALUES::DD,36705
36705 :: EXPR :: assign :: I :: v4 = v2.length::DD,36706
36706 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = new org.biojava.nbio.structure.ExperimentalTechnique[]::DD,36714
36714 :: NORM :: compound :: [Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v5::CF,36701
37014 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::CE,37015:CD,37018:CD,37023:CD,37025:CD,37030:CD,37034:CD,37039:CD,37067:CD,37068
37015 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.expandUserHome(java.lang.String)::JM,39249
37018 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,37039
37023 :: EXPR :: reference :: Ljava/lang/String :: v6 = java.io.File.separator::JM,37039
37025 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,37039
37030 :: CALL :: call :: Ljava/lang/String :: v10 = v8.toString()::JM,37039
37034 :: CALL :: call :: Z :: v12 = p1 $file .startsWith(v10)::JM,37068:JM,37039
37039 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 53::CF,37068:CF,37040:CD,37045:CD,37053:CD,37058:CD,37063
37040 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::JM,37068
37045 :: CALL :: call :: Ljava/lang/String :: v19 = valueOf(v17)::
37053 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $file .substring(#(1))::JM,37068:JM,37039
37058 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v14.append(v23)::JM,37068
37063 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,37068
37067 :: NORM :: compound :: Ljava/lang/String :: return v28::DD,37015
37068 :: EXPR :: assign :: null :: PHI v28 = p1 $file , v27::CF,37067
37079 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.setDefault()::
37083 :: EXPR :: modify :: Z :: p0 $this .parseSecStruc = #(0)::
37086 :: EXPR :: modify :: Z :: p0 $this .alignSeqRes = #(1)::
37089 :: EXPR :: modify :: Z :: p0 $this .parseCAOnly = #(0)::
37092 :: EXPR :: modify :: Z :: p0 $this .headerOnly = #(0)::
37095 :: EXPR :: modify :: Z :: p0 $this .updateRemediatedFiles = #(0)::
37098 :: EXPR :: modify :: [Ljava/lang/String :: p0 $this .fullAtomNames = #(null)::
37101 :: EXPR :: modify :: I :: p0 $this .maxAtoms = #(2147483647)::
37104 :: EXPR :: modify :: I :: p0 $this .atomCaThreshold = #(500000)::
37107 :: EXPR :: modify :: Z :: p0 $this .parseBioAssembly = #(0)::
37110 :: EXPR :: modify :: Z :: p0 $this .createAtomBonds = #(0)::
37113 :: EXPR :: modify :: Z :: p0 $this .createAtomCharges = #(1)::
37116 :: EXPR :: modify :: Z :: p0 $this .useInternalChainId = #(0)::
37144 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.init()::CD,37151:CD,37160:CD,37161:CD,37211:CD,37216:CD,37221:CD,37241:CD,37246:CD,37251:CD,37268:CD,37273:CD,37278:CD,37298:CD,37303:CD,37308:CD,37325:CD,37330:CD,37335:CD,37352:CD,37357:CD,37362:CD,37393:CD,37398:CD,37403:CD,37414:CD,37422:CD,37427
37151 :: CALL :: call :: [Ljava/lang/String :: v7 = v3.split(#(:), #(2))::JM,37160
37160 :: EXPR :: assign :: I :: v9 = v7.length::DD,37161
37161 :: PRED :: IF :: Z :: if (v9 <= #(1)) goto 396::CD,37170:CD,37174:CD,37188:CD,37439:CD,37444
37162 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(1)]::JM,37377
37170 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
37174 :: CALL :: call :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v17 = valueOf(v15)::JM,37178:CL,39904
37178 :: EXPR :: modify :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: p0 $this .mySource = v17::
37185 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = p0 $this .mySource::DD,37188
37188 :: PRED :: IF :: Z :: if (v20 == #(null)) goto 396::CD,37189:CD,37195:CD,37203:CD,37439:CD,37444
37189 :: CALL :: call :: [I :: v78 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,39917
37192 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v79 = p0 $this .mySource::
37195 :: CALL :: call :: I :: v81 = v79.ordinal()::
37199 :: EXPR :: reference :: I :: v82 = v78[v81]::DD,37203
37203 :: PRED :: IF :: null :: switch v82::CD,37204:CD,37234:CD,37261:CD,37291:CD,37318:CD,37345:CD,37372:CD,37377:CD,37386
37204 :: CALL :: call :: Z :: v168 = p0 $this .initFromScop(v11)::CL,40060
37211 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
37216 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v11)::
37221 :: CALL :: call :: Ljava/lang/String :: v176 = v174.toString()::
37234 :: CALL :: call :: Z :: v157 = p0 $this .initFromPDP(v155)::CL,40119
37241 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
37246 :: CALL :: call :: Ljava/lang/StringBuilder :: v163 = v159.append(v11)::
37251 :: CALL :: call :: Ljava/lang/String :: v165 = v163.toString()::
37261 :: CALL :: call :: Z :: v145 = p0 $this .initFromCATH(v11)::CL,40171
37268 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
37273 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v11)::
37278 :: CALL :: call :: Ljava/lang/String :: v153 = v151.toString()::
37291 :: CALL :: call :: Z :: v134 = p0 $this .initFromBIO(v132)::CL,40230
37298 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::
37303 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v136.append(v11)::
37308 :: CALL :: call :: Ljava/lang/String :: v142 = v140.toString()::
37318 :: CALL :: call :: Z :: v122 = p0 $this .initFromECOD(v11)::CL,40271
37325 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
37330 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v124.append(v11)::
37335 :: CALL :: call :: Ljava/lang/String :: v130 = v128.toString()::
37345 :: CALL :: call :: Z :: v111 = p0 $this .initFromPDB(v11)::CL,40324
37352 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v113 = new java.lang.StringBuilder::
37357 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v113.append(v11)::
37362 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
37372 :: CALL :: call :: Z :: v95 = v11.startsWith(#(/))::JM,37377
37377 :: PRED :: IF :: Z :: if (v95 != #(0)) goto 333::CD,37386
37386 :: CALL :: call :: Z :: v98 = p0 $this .initFromURL(v96)::CL,40429
37393 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
37398 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v11)::
37403 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
37414 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
37422 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v84.append(v87)::
37427 :: CALL :: call :: Ljava/lang/String :: v91 = v89.toString()::
37439 :: CALL :: call :: Z :: v24 = p0 $this .initFromScop(v22)::JM,37444:CL,40060
37444 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 408::CD,37449:CD,37454
37449 :: CALL :: call :: Z :: v27 = p0 $this .initFromCATH(v25)::JM,37454:CL,40171
37454 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 420::CD,37459:CD,37464
37459 :: CALL :: call :: Z :: v30 = p0 $this .initFromECOD(v28)::JM,37464:CL,40271
37464 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 432::CD,37469:CD,37474
37469 :: CALL :: call :: Z :: v33 = p0 $this .initFromURL(v31)::JM,37474:CL,40429
37474 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 442::CF,37476:CD,37480:CD,37488:CD,37492
37476 :: NORM :: declaration :: Ljava/io/File :: v34 = new java.io.File::JM,37517:JM,37560
37480 :: CALL :: call :: Ljava/lang/String :: v37 = expandUserHome(v35)::CL,37014
37488 :: CALL :: call :: Z :: v40 = v34.canRead()::JM,37492
37492 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 577::CD,37493:CD,37497:CD,37593
37493 :: CALL :: call :: Z :: v42 = v34.isDirectory()::JM,37497
37497 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 577::CD,37501:CD,37506:CD,37593
37501 :: CALL :: call :: Z :: v49 = v46.matches(#(\d\w\w\w))::JM,37506
37506 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 531::CD,37517:CD,37521:CD,37560:CD,37564
37517 :: CALL :: call :: Ljava/io/File :: v68 = v34.getAbsoluteFile()::JM,37517
37521 :: CALL :: call :: Ljava/lang/String :: v70 = v68.getParent()::
37560 :: CALL :: call :: Ljava/io/File :: v56 = v34.getAbsoluteFile()::JM,37560
37564 :: CALL :: call :: Ljava/lang/String :: v58 = v56.getParent()::
37593 :: CALL :: call :: Z :: v45 = p0 $this .initFromPDB(v43)::CL,40324
37696 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,37701:CD,37705
37701 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v5 = p0 $this .getBaseIdentifier()::CL,40524
37705 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.loadStructure(p1 $cache )::CL,41001:CL,40953:CL,40969:CL,40985:CL,40936:CL,41244:CL,41268
37713 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.reduce(org.biojava.nbio.structure.Structure)::CD,37718:CD,37722
37718 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIdentifier :: v5 = p0 $this .getBaseIdentifier()::CL,40524
37722 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,41837:CL,41871:CL,41905:CL,41289:CL,41854:CL,41888
39171 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::JM,39185:JM,32397
39185 :: PRED :: IF :: Z :: if (p1 $path  != #(null)) goto 61::JM,29555:JM,29548:CD,39190:CD,39206:CD,39249
39190 :: CALL :: call :: Ljava/lang/String :: v20 = v17.getPdbFilePath()::JM,39249:CL,43915
39206 :: CALL :: call :: Ljava/lang/String :: v11 = expandUserHome(p1 $path )::JM,39249:CL,37014
39221 :: NORM :: declaration :: Ljava/io/File :: v27 = new java.io.File::JM,39185:JM,32397
39229 :: CALL :: call :: Ljava/lang/String :: v30 = getServerName()::CL,43924
39235 :: CALL :: call :: V :: p0 $this .initPaths()::CL,44021
39249 :: EXPR :: assign :: null :: PHI v26 = v20, v11::CF,39221:JM,39185:JM,32397
39276 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.addExtension(java.lang.String)::CD,39284
39281 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .extensions::
39284 :: CALL :: call :: Z :: v6 = v4.add(p1 $s )::
39316 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.convertStreamToString(java.io.InputStream)::CD,39320:CD,39321:CD,39330:CD,39347:CD,39351:CD,39352
39320 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,39351:CF,39321
39321 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
39330 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
39335 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,39351
39340 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.xtal.SymoplibParser.newline::
39342 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
39347 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,39351
39351 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,39335:CD,39340:CD,39342:CD,39347
39352 :: CALL :: call :: Ljava/lang/String :: v19 = v7.toString()::
39374 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::CE,39375:CD,39378:CD,39384:CD,39388:CD,39392:CD,39393:CD,39401:CD,39406:CD,39407
39375 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: org.biojava.nbio.structure.xtal.io.SpaceGroupMapRoot.fromXML(java.lang.String)::JM,36609:JM,36613
39378 :: NORM :: declaration :: [Ljava/lang/Class :: v5 = new java.lang.Class[]::JM,39384:JM,39401:JM,39388:JM,39406
39384 :: CALL :: call :: Ljavax/xml/bind/JAXBContext :: v9 = newInstance(v5)::JM,39384:JM,39401:JM,39388:JM,39406
39388 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v11 = v9.createUnmarshaller()::JM,39401:JM,39388:JM,39406
39392 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v12 = new java.io.ByteArrayInputStream::JM,39401:JM,39406:JM,39378
39393 :: CALL :: call :: [B :: v14 = p1 $xml .getBytes()::JM,39378
39401 :: CALL :: call :: Ljava/lang/Object :: v17 = v11.unmarshal(v12)::JM,39401:JM,39406
39406 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,39407
39407 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/io/SpaceGroupMapRoot :: return v18::DD,39375
39904 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::CE,39905:CD,39909:CD,39914:CD,39915
39905 :: EXIT :: exit :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.valueOf(java.lang.String)::JM,37178
39909 :: CALL :: call :: Ljava/lang/Enum :: v5 = valueOf(v3, p1 $null )::JM,39914
39914 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,39915
39915 :: NORM :: compound :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v6::DD,39905
39917 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CE,39918:CD,39920:CD,39922
39918 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::
39920 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.align.client.StructureName.$SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source::DD,39922:DD,39923
39922 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,39923:CD,39924:CD,39927:CD,39928:CD,39929:CD,39931:CD,39940:CD,39942:CD,39951:CD,39953:CD,39962:CD,39964:CD,39973:CD,39975:CD,39984:CD,39986:CD,39995:CD,39997:CD,40006:CD,40008:CD,40019
39923 :: NORM :: compound :: [I :: return v2::DD,39918
39924 :: CALL :: call :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = values()::JM,39927:CL,44724
39927 :: EXPR :: assign :: I :: v6 = v5.length::CF,39928
39928 :: NORM :: declaration :: [I :: v7 = new []::DD,40019
39929 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v8 = org.biojava.nbio.structure.align.client.StructureName$Source.BIO::
39931 :: CALL :: call :: I :: v10 = v8.ordinal()::
39935 :: EXPR :: modify :: I :: v7[v10] = #(8)::
39940 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v14 = org.biojava.nbio.structure.align.client.StructureName$Source.CATH::
39942 :: CALL :: call :: I :: v16 = v14.ordinal()::
39946 :: EXPR :: modify :: I :: v7[v16] = #(4)::
39951 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v20 = org.biojava.nbio.structure.align.client.StructureName$Source.ECOD::
39953 :: CALL :: call :: I :: v22 = v20.ordinal()::
39957 :: EXPR :: modify :: I :: v7[v22] = #(7)::
39962 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v26 = org.biojava.nbio.structure.align.client.StructureName$Source.FILE::
39964 :: CALL :: call :: I :: v28 = v26.ordinal()::
39968 :: EXPR :: modify :: I :: v7[v28] = #(6)::
39973 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v32 = org.biojava.nbio.structure.align.client.StructureName$Source.PDB::
39975 :: CALL :: call :: I :: v34 = v32.ordinal()::
39979 :: EXPR :: modify :: I :: v7[v34] = #(1)::
39984 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v38 = org.biojava.nbio.structure.align.client.StructureName$Source.PDP::
39986 :: CALL :: call :: I :: v40 = v38.ordinal()::
39990 :: EXPR :: modify :: I :: v7[v40] = #(3)::
39995 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v44 = org.biojava.nbio.structure.align.client.StructureName$Source.SCOP::
39997 :: CALL :: call :: I :: v46 = v44.ordinal()::
40001 :: EXPR :: modify :: I :: v7[v46] = #(2)::
40006 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v50 = org.biojava.nbio.structure.align.client.StructureName$Source.URL::
40008 :: CALL :: call :: I :: v52 = v50.ordinal()::
40012 :: EXPR :: modify :: I :: v7[v52] = #(5)::
40019 :: NORM :: compound :: [I :: return v7::DD,39918
40060 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::CE,40061:CD,40067:CD,40072:CD,40076
40061 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromScop(java.lang.String)::JM,37444
40067 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,40076
40072 :: CALL :: call :: Z :: v8 = v6.matches()::JM,40076
40076 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,40082:CD,40087:CD,40094:CD,40102:CD,40103
40082 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,40076
40087 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
40094 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,40076
40102 :: NORM :: compound :: Z :: return #(1)::DD,40061
40103 :: NORM :: compound :: Z :: return #(0)::DD,40061
40119 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDP(java.lang.String)::CD,40126:CD,40131:CD,40135
40126 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,40135
40131 :: CALL :: call :: Z :: v8 = v6.matches()::JM,40135
40135 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 39::CD,40136:CD,40141:CD,40148:JM,40135
40136 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,40135
40141 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::
40148 :: CALL :: call :: Ljava/lang/String :: v17 = v6.group(#(2))::JM,40135
40171 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::CE,40172:CD,40178:CD,40183:CD,40187
40172 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromCATH(java.lang.String)::JM,37454
40178 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,40187
40183 :: CALL :: call :: Z :: v8 = v6.matches()::JM,40187
40187 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 46::CD,40193:CD,40198:CD,40205:CD,40213:CD,40214
40193 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,40187
40198 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
40205 :: CALL :: call :: Ljava/lang/String :: v18 = v6.group(#(2))::JM,40187
40213 :: NORM :: compound :: Z :: return #(1)::DD,40172
40214 :: NORM :: compound :: Z :: return #(0)::DD,40172
40230 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromBIO(java.lang.String)::CD,40237:CD,40242:CD,40246
40237 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,40246
40242 :: CALL :: call :: Z :: v8 = v6.matches()::JM,40246
40246 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 30::CD,40247:CD,40252:JM,40246
40247 :: CALL :: call :: Ljava/lang/String :: v12 = v6.group(#(1))::JM,40246
40252 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::
40271 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::CE,40272:CD,40278:CD,40283:CD,40287
40272 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromECOD(java.lang.String)::JM,37464
40278 :: CALL :: call :: Ljava/util/regex/Matcher :: v6 = v4.matcher(p1 $name )::JM,40287
40283 :: CALL :: call :: Z :: v8 = v6.matches()::JM,40287
40287 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 42::CD,40293:CD,40298:CD,40308:CD,40309
40293 :: CALL :: call :: Ljava/lang/String :: v13 = v6.group(#(1))::JM,40287
40298 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toUpperCase()::
40308 :: NORM :: compound :: Z :: return #(1)::DD,40272
40309 :: NORM :: compound :: Z :: return #(0)::DD,40272
40324 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromPDB(java.lang.String)::JM,44880:JM,44881:JM,44805:JM,44837:JM,44823:JM,44841:JM,44811:JM,44796:CD,40349:CD,40353:CD,40357
40349 :: CALL :: call :: Ljava/util/Set :: v10 = getChainIds(v5)::JM,40357:CL,44947
40353 :: CALL :: call :: I :: v12 = v10.size()::JM,40357
40357 :: PRED :: IF :: Z :: if (v12 != #(1)) goto 66::CD,40358:CD,40362:JM,40357
40358 :: CALL :: call :: Ljava/util/Iterator :: v19 = v10.iterator()::JM,40357
40362 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.next()::
40429 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::CE,40430:CD,40459:CD,40469:CD,40470
40430 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.client.StructureName.initFromURL(java.lang.String)::JM,37474
40459 :: CALL :: call :: Ljava/lang/String :: v19 = guessPDBID(v17)::CL,45003
40469 :: NORM :: compound :: Z :: return #(1)::DD,40430
40470 :: NORM :: compound :: Z :: return #(0)::DD,40430
40524 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getBaseIdentifier()::CD,40531:CD,40579:CD,40587:CD,40592:CD,40722:CD,40730:CD,40735:CD,40758:CD,40766:CD,40771:CD,40799:CD,40807:CD,40812:CD,40848:CD,40856:CD,40861
40528 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v3 = p0 $this .base::DD,40531
40531 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 489::CD,40532:CD,40538:CD,40546
40532 :: CALL :: call :: [I :: v6 = $SWITCH_TABLE$org$biojava$nbio$structure$align$client$StructureName$Source()::CL,39917
40535 :: EXPR :: reference :: Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v7 = p0 $this .mySource::
40538 :: CALL :: call :: I :: v9 = v7.ordinal()::
40542 :: EXPR :: reference :: I :: v10 = v6[v9]::DD,40546
40546 :: PRED :: IF :: null :: switch v10::CD,40547:CD,40554:CD,40563:CD,40569:CD,40606:CD,40609:CD,40620:CD,40679:CD,40695:CD,40705:CD,40709:JM,45844:JM,53102:CD,40789:JM,46132:JM,46151:JM,46156:JM,46127:JM,46143:JM,44880:JM,44881:JM,44805:JM,44837:JM,44823:JM,44841:JM,44811:JM,44796
40547 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v132 = getCathDatabase()::CL,45038
40554 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v136 = v132.getDescriptionByCathId(v134)::CL,45066
40563 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v116 = getEcodDatabase()::CL,45098
40569 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v119 = v116.getDomainsById(v117)::CL,45109
40579 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v122 = new java.lang.StringBuilder::
40584 :: EXPR :: reference :: Ljava/lang/String :: v125 = p0 $this .name::
40587 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v122.append(v125)::
40592 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::
40606 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v93 = getSCOP()::CL,45250
40609 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v95 = guessScopDomain(v91, v93)::JM,40614:CL,45261
40614 :: EXPR :: modify :: Lorg/biojava/nbio/structure/StructureIdentifier :: p0 $this .base = v95::
40617 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIdentifier :: v96 = p0 $this .base::DD,40620
40620 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 489::CD,40624:CD,40629
40621 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .chainId::JM,40629
40624 :: CALL :: call :: Z :: v100 = v97.equals(#(_))::JM,40629
40629 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 185::JM,44880:JM,44881:JM,44805:JM,44837:JM,44823:JM,44841:JM,44811:JM,44796:CD,40649
40649 :: CALL :: call :: Ljava/util/List :: v105 = parseMultiple(v103)::CL,45662
40679 :: CALL :: call :: [Ljava/lang/String :: v63 = v59.split(#(:), #(2))::
40695 :: CALL :: call :: Ljava/lang/String :: v70 = expandUserHome(v68)::CL,37014
40705 :: CALL :: call :: Ljava/net/URI :: v75 = v72.toURI()::
40709 :: CALL :: call :: Ljava/net/URL :: v77 = v75.toURL()::
40722 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
40727 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .name::
40730 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v83)::
40735 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::
40758 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
40763 :: EXPR :: reference :: Ljava/lang/String :: v53 = p0 $this .name::
40766 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
40771 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
40789 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/PDPDomain :: v33 = v28.getPDPDomain(v31)::CL,45861
40799 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
40804 :: EXPR :: reference :: Ljava/lang/String :: v39 = p0 $this .name::
40807 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v36.append(v39)::
40812 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
40848 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
40856 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v12.append(v15)::
40861 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
40936 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,40945
40945 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $cache .getStructure(v5)::CL,29875
40953 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,40961
40961 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = v4.loadStructure(p1 $cache )::CL,41244
40969 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,40977
40977 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p1 $cache .getStructureForPdbId(v4)::CL,46208
40985 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,40993
40993 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = p1 $cache .getStructureForPdbId(v4)::CL,46208
41001 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,41006:CD,41011:CD,41015:CD,41020:CD,41056:CD,41070:CD,41072:CD,41084:CD,41087:CD,41095:CD,41143:CD,41195:CD,41196
41006 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v4 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::DD,41195
41011 :: CALL :: call :: Ljava/util/Map :: v7 = parseQuery(v5)::CL,46296
41015 :: CALL :: call :: Z :: v21 = v7.containsKey(#(format))::JM,41020
41020 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 90::CF,41195:CD,41021:CD,41041
41021 :: CALL :: call :: Ljava/lang/Object :: v24 = v7.get(#(format))::
41041 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v34 = guessFiletype(v32)::JM,41195:CL,46463
41056 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
41070 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v38 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::CF,41072
41072 :: PRED :: IF :: Z :: if (v36 != v38) goto 107::CF,41196:CD,41080
41080 :: CALL :: call :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v43 = guessFiletype(v41)::JM,41196:CL,46463
41084 :: CALL :: call :: [I :: v46 = $SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::CL,46541
41087 :: CALL :: call :: I :: v48 = v44.ordinal()::
41091 :: EXPR :: reference :: I :: v49 = v46[v48]::DD,41095
41095 :: PRED :: IF :: null :: switch v49::CD,41138:JM,36513:JM,39171:JM,39235:JM,36517:JM,36521:JM,36525:JM,32397:JM,36529:JM,39185:JM,39249:JM,39221:JM,36509:JM,39229:CD,41187
41138 :: CALL :: call :: V :: v71.parse(v79)::CL,46691
41143 :: CALL :: call :: V :: v84.printStackTrace()::
41187 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v65 = v50.getStructure(v63)::CL,47679
41195 :: EXPR :: assign :: null :: PHI v36 = v4, v34, v4::DD,41072:DD,41196
41196 :: EXPR :: assign :: null :: PHI v44 = v36, v43::
41244 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,41249:CD,41253
41249 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getPdbId()::JM,41253:CL,44938
41253 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 13::CD,41255
41255 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v8 = p1 $cache .getStructureForPdbId(v5)::CL,46208
41268 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BioAssemblyIdentifier.loadStructure(org.biojava.nbio.structure.align.util.AtomCache)::CD,41279
41279 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $cache .getBiologicalAssembly(v4, v5)::CL,47706
41289 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.reduce(org.biojava.nbio.structure.Structure)::JM,47778:JM,47750:JM,56103:JM,47785:JM,47757:JM,47764:JM,47733:JM,56087:JM,56120:JM,47771:JM,47743:JM,56095:JM,56127:CD,41314:CD,41326:CD,41342:CD,41350:CD,41355:CD,41360:CD,41364:CD,41369:CD,41378:CD,41382:CD,41387:CD,41391:CD,41395:CD,41556:CD,41560:CD,41690:CD,41694:CD,41708
41314 :: CALL :: call :: Ljava/lang/String :: v13 = p0 $this .toString()::CL,47852
41326 :: CALL :: call :: V :: v4.setDBRefs(v16)::CL,47882
41342 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
41350 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v23.append(v26)::
41355 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v28.append(#( of ))::
41360 :: CALL :: call :: Ljava/lang/String :: v33 = v4.getPDBCode()::CL,47812
41364 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(v33)::
41369 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v35.append(#( ))::
41378 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getDescription()::CL,47949
41382 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
41387 :: CALL :: call :: Ljava/lang/String :: v46 = v44.toString()::
41391 :: CALL :: call :: V :: v22.setDescription(v46)::CL,47958
41395 :: CALL :: call :: Ljava/util/List :: v49 = p1 $s .getCompounds()::CL,47969
41424 :: NORM :: declaration :: Ljava/util/ArrayList :: v62 = new java.util.ArrayList::
41428 :: CALL :: call :: V :: v4.addModel(v62)::CL,48117
41432 :: CALL :: call :: Ljava/util/List :: v66 = p0 $this .getResidueRanges()::JM,41440:CL,48161
41436 :: CALL :: call :: Z :: v68 = v66.isEmpty()::JM,41440
41440 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 255::CD,41441:CD,41465:CD,41470:CD,41476:CD,41480:CD,41684:CD,41688:CD,41705:CD,41706:CD,41707
41441 :: CALL :: call :: Ljava/util/List :: v163 = p1 $s .getCompounds()::CL,47969
41465 :: CALL :: call :: Ljava/util/List :: v172 = p1 $s .getModel(v178)::CL,48170
41470 :: CALL :: call :: V :: v4.setModel(v178, v172)::CL,48187
41476 :: CALL :: call :: Ljava/util/List :: v70 = p0 $this .getResidueRanges()::JM,41688:CL,48161
41480 :: CALL :: call :: Ljava/util/Iterator :: v72 = v70.iterator()::JM,41688
41485 :: CALL :: call :: Ljava/lang/Object :: v76 = v72.next()::JM,41688
41490 :: CALL :: call :: Ljava/lang/String :: v79 = v77.getChainId()::JM,41507:CL,48265
41494 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v81 = v77.getStart()::JM,41581:CL,48274
41498 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v83 = v77.getEnd()::JM,41582:CL,48283
41502 :: CALL :: call :: Z :: v86 = v79.equals(#(_))::JM,41507
41507 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 391::CD,41508:CD,41532:CD,41549
41508 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v88 = p1 $s .getChain(v179, #(0))::CL,48292
41532 :: CALL :: call :: I :: v96 = p1 $s .size()::CL,48339
41549 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v104 = p1 $s .getChainByPDB(v79, v179)::CL,48373
41556 :: CALL :: call :: I :: v107 = parseInt(v79)::JM,41507
41560 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v109 = p1 $s .getChain(v179, v107)::CL,48292
41581 :: PRED :: IF :: Z :: if (v81 != #(null)) goto 482::CD,41582:CD,41588:CD,41594:CD,41701
41582 :: PRED :: IF :: Z :: if (v83 != #(null)) goto 482::CD,41583:CD,41588:CD,41594:CD,41701
41583 :: CALL :: call :: Ljava/util/List :: v117 = v115.getAtomGroups()::JM,41701:CL,48461
41588 :: CALL :: call :: [Lorg/biojava/nbio/structure/Group :: v119 = v115.getGroupsByPDB(v81, v83)::JM,41701:JM,41594:CL,48470
41594 :: CALL :: call :: Ljava/util/List :: v121 = asList(v119)::JM,41701:JM,41594
41598 :: PRED :: IF :: Z :: if (v160 == #(null)) goto 532::CD,41599:CD,41603:CD,41608:CD,41620:CD,41702
41599 :: CALL :: call :: Ljava/lang/String :: v124 = v115.getChainID()::JM,41608:CL,48319
41603 :: CALL :: call :: Z :: v126 = v160.equals(v124)::JM,41608
41608 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 532::CD,41609:CD,41620:CD,41702
41609 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v128 = v4.getChainByPDB(v160, v179)::JM,41702:CL,48373
41620 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v132 = v4.getChainByPDB(v130, v179)::JM,41702:CL,48373
41627 :: PRED :: IF :: Z :: if (v135 != #(null)) goto 617::JM,48721:JM,48709:JM,48728:JM,48714:CD,41640:CD,41649
41640 :: CALL :: call :: V :: v4.addChain(v136, v179)::CL,48763
41649 :: CALL :: call :: V :: v136.setSeqResGroups(v143)::CL,48841
41661 :: CALL :: call :: Ljava/util/Iterator :: v150 = v122.iterator()::JM,41679
41666 :: CALL :: call :: Ljava/lang/Object :: v154 = v150.next()::JM,41679
41671 :: CALL :: call :: V :: v148.addGroup(v155)::CL,48899
41675 :: CALL :: call :: Z :: v152 = v150.hasNext()::JM,41679
41679 :: PRED :: IF :: Z :: if (v152 != #(0)) goto 629::CD,41666:CD,41671:CD,41675:CD,41704:JM,41679
41680 :: CALL :: call :: Ljava/lang/String :: v158 = v148.getChainID()::JM,41706:CL,48319
41684 :: CALL :: call :: Z :: v74 = v72.hasNext()::JM,41688
41688 :: PRED :: IF :: Z :: if (v74 != #(0)) goto 270::CF,41707:CD,41485:CD,41490:CD,41494:CD,41498:CD,41502:CD,41507:CD,41581:CD,41598:CD,41627:CD,41661:CD,41675:CD,41679:CD,41680:CD,41684:CD,41701:CD,41702:CD,41704:CD,41705:CD,41706:JM,41688
41689 :: EXPR :: assign :: Ljava/lang/Object :: v176 = v181 + #(1)::DD,41708
41690 :: CALL :: call :: I :: v60 = p1 $s .nrModels()::JM,41694:CL,49141
41694 :: PRED :: IF :: Z :: if (v178 < v60) goto 177::CD,41424:CD,41428:CD,41432:CD,41436:CD,41440:CD,41689:CD,41690:CD,41707:CD,41708
41701 :: EXPR :: assign :: null :: PHI v122 = v117, v121::JM,41679:CF,41598
41702 :: EXPR :: assign :: null :: PHI v135 = v128, v132, #(null)::DD,41627
41704 :: EXPR :: assign :: null :: PHI v180 = v179, v180::JM,41679:DD,41704:DD,41705
41705 :: EXPR :: assign :: null :: PHI v179 = v178, v180::CF,41706:DD,41704:DD,41707
41706 :: EXPR :: assign :: null :: PHI v160 = #(null), v158::JM,41688:DD,41598:JM,41608
41707 :: EXPR :: assign :: null :: PHI v181 = v178, v179::DD,41689
41708 :: EXPR :: assign :: null :: PHI v178 = #(0), v176::DD,41694:DD,41705:DD,41707
41837 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.reduce(org.biojava.nbio.structure.Structure)::CD,41842:CD,41846
41842 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,49154
41846 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,41289
41854 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.reduce(org.biojava.nbio.structure.Structure)::CD,41859:CD,41863
41859 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,49180
41863 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,41289
41871 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.reduce(org.biojava.nbio.structure.Structure)::CD,41876:CD,41880
41876 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,49351
41880 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,41289
41888 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.reduce(org.biojava.nbio.structure.Structure)::CD,41893:CD,41897
41893 :: CALL :: call :: Lorg/biojava/nbio/structure/SubstructureIdentifier :: v5 = p0 $this .toCanonical()::CL,49377
41897 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = v5.reduce(p1 $input )::CL,41289
41905 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.PDPDomain.reduce(org.biojava.nbio.structure.Structure)::CD,41913
41913 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v6 = v4.reduce(p1 $input )::CL,41289
41938 :: EXPR :: modify :: I :: p0 $this .port = #(-1)::
41941 :: EXPR :: modify :: I :: p0 $this .hashCode = #(-1)::
41944 :: PRED :: IF :: Z :: if (p3 $handler  == #(null)) goto 50::CF,41945:CD,41948:JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41945 :: CALL :: call :: Ljava/lang/SecurityManager :: v11 = getSecurityManager()::JM,41948
41948 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 50::CD,41949:JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41949 :: CALL :: call :: V :: p0 $this .checkSpecifyHandler(v11)::
41953 :: CALL :: call :: I :: v14 = p2 $spec .length()::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41958 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v21 + #(-1)::DD,42217
41959 :: PRED :: IF :: Z :: if (v21 <= #(0)) goto 89::CF,42218:CD,41960:CD,41961:CD,41966
41960 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v21 - #(1)::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41961 :: CALL :: call :: C :: v18 = p2 $spec .charAt(v16)::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41966 :: PRED :: IF :: Z :: if (v18 <= #(32)) goto 58::CD,41958:CD,41959:CD,42217:CD,42218
41968 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,42218
41969 :: PRED :: IF :: Z :: if (v25 >= v21) goto 111::CD,41970:CD,41975:JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41970 :: CALL :: call :: C :: v23 = p2 $spec .charAt(v25)::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41975 :: PRED :: IF :: Z :: if (v23 <= #(32)) goto 82::CD,41968:CD,41969:CD,42218:JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41976 :: CALL :: call :: Z :: v29 = p2 $spec .regionMatches(#(1), v25, #(url:), #(0), #(4))::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41985 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 123::CF,42219:CD,41986
41986 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v25 + #(4)::DD,42219
41987 :: CALL :: call :: I :: v33 = p2 $spec .length()::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41991 :: PRED :: IF :: Z :: if (v31 >= v33) goto 147::CF,42220:CD,41992:CD,41997:JM,41985:JM,41991:JM,42217:JM,42026:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41992 :: CALL :: call :: C :: v35 = p2 $spec .charAt(v31)::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
41997 :: PRED :: IF :: Z :: if (v35 != #(35)) goto 147::CF,42220
41999 :: PRED :: IF :: Z :: if (v39 != #(58)) goto 192::CD,42000:CD,42006:CD,42010:CD,42015:CD,42018:CD,42019:CD,42221:CD,42222:CD,42223:JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174
42000 :: CALL :: call :: Ljava/lang/String :: v45 = p2 $spec .substring(v31, v43)::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
42006 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toLowerCase()::JM,42223:JM,42015
42010 :: CALL :: call :: Z :: v49 = p0 $this .isValidProtocol(v47)::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,42030:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015:JM,42223
42015 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 224::CF,42222:CD,42016:CD,42223
42016 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v43 + #(1)::DD,42222
42018 :: EXPR :: assign :: Ljava/lang/Object :: v42 = v43 + #(1)::DD,42221
42019 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 224::CF,42222:CD,42020:CD,42223
42020 :: PRED :: IF :: Z :: if (v43 >= v21) goto 224::CF,42222:CD,42021:CD,42026:CD,42223:JM,41985:JM,41991:JM,42217:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
42021 :: CALL :: call :: C :: v39 = p2 $spec .charAt(v43)::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
42026 :: PRED :: IF :: Z :: if (v39 != #(47)) goto 154::CF,42222:CD,41999
42027 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .protocol = v52::
42030 :: PRED :: IF :: Z :: if (p1 $context  == #(null)) goto 344::CF,42226:CD,42031
42031 :: PRED :: IF :: Z :: if (v52 == #(null)) goto 249::CD,42035:CD,42040:CD,42041:CD,42048:CD,42058:CD,42224:CD,42225:CD,42226:CD,42227
42032 :: EXPR :: reference :: Ljava/lang/String :: v53 = p1 $context .protocol::JM,42040
42035 :: CALL :: call :: Z :: v55 = v52.equalsIgnoreCase(v53)::JM,42040
42040 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 344::CF,42226:CD,42041:CD,42048:CD,42058:CD,42224:CD,42225:CD,42227
42041 :: PRED :: IF :: Z :: if (p3 $handler  != #(null)) goto 258::CF,42224
42042 :: EXPR :: reference :: Ljava/net/URLStreamHandler :: v56 = p1 $context .handler::DD,42224
42045 :: EXPR :: reference :: Ljava/lang/String :: v58 = p1 $context .path::DD,42048
42048 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 281::CF,42225:CD,42052:CD,42057
42049 :: EXPR :: reference :: Ljava/lang/String :: v59 = p1 $context .path::JM,42052:JM,42057
42052 :: CALL :: call :: Z :: v62 = v59.startsWith(#(/))::JM,42052:JM,42057
42057 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 281::CF,42225
42058 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 344::CF,42226:CD,42227
42059 :: EXPR :: reference :: Ljava/lang/String :: v64 = p1 $context .protocol::DD,42062
42062 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .protocol = v64::
42065 :: EXPR :: reference :: Ljava/lang/String :: v65 = p1 $context .authority::DD,42068
42068 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authority = v65::
42071 :: EXPR :: reference :: Ljava/lang/String :: v66 = p1 $context .userInfo::DD,42074
42074 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .userInfo = v66::
42077 :: EXPR :: reference :: Ljava/lang/String :: v67 = p1 $context .host::DD,42080
42080 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .host = v67::
42083 :: EXPR :: reference :: I :: v68 = p1 $context .port::DD,42086
42086 :: EXPR :: modify :: I :: p0 $this .port = v68::
42089 :: EXPR :: reference :: Ljava/lang/String :: v69 = p1 $context .file::DD,42092
42092 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .file = v69::
42095 :: EXPR :: reference :: Ljava/lang/String :: v70 = p1 $context .path::DD,42098
42098 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .path = v70::
42105 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v99 = new java.net.MalformedURLException::
42106 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
42111 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(p2 $spec )::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
42116 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::JM,42229:JM,42166:JM,42167:JM,42174
42125 :: PRED :: IF :: Z :: if (v71 != #(null)) goto 420::CF,42228:CD,42129
42129 :: CALL :: call :: Ljava/net/URLStreamHandler :: v77 = getURLStreamHandler(v75)::JM,42228
42134 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v89 = new java.net.MalformedURLException::
42135 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
42140 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .protocol::
42143 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v90.append(v93)::
42148 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
42157 :: EXPR :: modify :: Ljava/net/URLStreamHandler :: p0 $this .handler = v78::
42160 :: CALL :: call :: I :: v80 = p2 $spec .indexOf(#(35), v51)::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
42166 :: PRED :: IF :: Z :: if (v80 < #(0)) goto 458::CF,42229:CD,42167:CD,42168
42167 :: EXPR :: assign :: Ljava/lang/Object :: v81 = v80 + #(1)::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42229:JM,42166:JM,41975:JM,42167:JM,42174:JM,42015:JM,42224:JM,42226:JM,41944:JM,42041
42168 :: CALL :: call :: Ljava/lang/String :: v83 = p2 $spec .substring(v81, v21)::JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42224:JM,42226:JM,42229:JM,42166:JM,41975:JM,42167:JM,41944:JM,42041:JM,42174:JM,42015
42174 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = v83::
42177 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 498::CD,42178
42178 :: PRED :: IF :: Z :: if (v51 != v84) goto 498::CD,42188
42179 :: EXPR :: reference :: Ljava/lang/String :: v85 = p1 $context .query::DD,42182
42182 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .query = v85::
42185 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .ref::DD,42188
42188 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 498::
42189 :: EXPR :: reference :: Ljava/lang/String :: v87 = p1 $context .ref::DD,42192
42192 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = v87::
42204 :: NORM :: declaration :: Ljava/net/MalformedURLException :: v116 = new java.net.MalformedURLException::
42205 :: CALL :: call :: Ljava/lang/String :: v118 = v108.getMessage()::
42217 :: EXPR :: assign :: null :: PHI v21 = v14, v20::DD,41958:DD,41959:DD,41960:DD,41969:DD,42020:JM,41985:JM,42166:JM,41975:JM,41991:JM,42167:JM,42217:JM,42026:JM,41997:JM,41966:JM,42174:JM,41999:DD,42229
42218 :: EXPR :: assign :: null :: PHI v25 = #(0), #(0), v24::DD,41968:DD,41969:JM,41985:JM,41991:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42229:JM,42166:JM,41975:JM,42167:JM,42174:JM,42015:DD,41986:DD,42219
42219 :: EXPR :: assign :: null :: PHI v31 = v25, v30::DD,41991:JM,41985:JM,42217:JM,42026:JM,41997:JM,41966:JM,41999:JM,42229:JM,42166:JM,41975:JM,42167:JM,42174:JM,42015:DD,42221:DD,42222:JM,42224:JM,42226:JM,41944:JM,42041
42220 :: EXPR :: assign :: null :: PHI v37 = #(0), #(0), #(1)::DD,42019
42221 :: EXPR :: assign :: null :: PHI v43 = v31, v42::JM,41985:JM,42229:JM,42166:JM,41975:JM,41991:JM,42167:JM,42217:JM,42026:JM,41997:JM,41966:JM,42174:JM,41999:DD,42016:DD,42018:DD,42020:JM,42015:CF,42019
42222 :: EXPR :: assign :: null :: PHI v51 = v31, v50, v31, v31, v31::CF,42223:JM,41985:JM,42229:JM,42166:JM,41975:JM,41991:JM,42167:JM,42217:JM,42026:JM,41997:JM,41966:JM,42174:JM,41999:DD,42178
42223 :: EXPR :: assign :: null :: PHI v52 = #(null), v47, #(null), #(null), #(null)::DD,42027:DD,42031:JM,42040:DD,42225
42224 :: EXPR :: assign :: null :: PHI v57 = p3 $handler , v56::DD,42226
42225 :: EXPR :: assign :: null :: PHI v63 = v52, v52, #(null)::DD,42058
42226 :: EXPR :: assign :: null :: PHI v71 = p3 $handler , p3 $handler , v57, v57::CF,42227:DD,42125:DD,42228
42227 :: EXPR :: assign :: null :: PHI v73 = #(0), #(0), #(0), #(1)::DD,42177
42228 :: EXPR :: assign :: null :: PHI v78 = v71, v77::DD,42157
42229 :: EXPR :: assign :: null :: PHI v84 = v21, v80::DD,42178:CF,42177
43915 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::CE,43916:CD,43922
43916 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.util.UserConfiguration.getPdbFilePath()::JM,39249
43919 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbFilePath::DD,43922
43922 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,43916
43924 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getServerName()::CD,43927:CD,43931
43927 :: CALL :: call :: Ljava/lang/String :: v4 = getProperty(#(PDB.FILE.SERVER))::JM,43936:JM,43954:JM,43940:JM,43927:JM,43960:JM,43931
43931 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 23::CD,43932:CD,43936:CD,43940:JM,43954:JM,43960
43932 :: CALL :: call :: Ljava/lang/String :: v7 = v4.trim()::JM,43936:JM,43954:JM,43940:JM,43960
43936 :: CALL :: call :: Z :: v9 = v7.isEmpty()::JM,43936:JM,43954:JM,43940:JM,43960
43940 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 42::CD,43949:CD,43954:JM,43936:JM,43940:JM,43960
43949 :: CALL :: call :: Z :: v13 = v4.startsWith(#(http://))::JM,43936:JM,43954:JM,43940:JM,43960
43954 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 90::CD,43955:CD,43960:JM,43936:JM,43954:JM,43940
43955 :: CALL :: call :: Z :: v16 = v4.startsWith(#(ftp://))::JM,43936:JM,43954:JM,43940:JM,43960
43960 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 90::CD,43969:CD,43974:CD,43979
43969 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
43974 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v20.append(v4)::JM,43936:JM,43954:JM,43940:JM,43960
43979 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::JM,43936:JM,43940
44021 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.initPaths()::CD,44025:CD,44029:CD,44033:CD,44054:CD,44055:CD,44056:CD,44077:CD,44078:CD,44079:CD,44086:CD,44117:CD,44118:CD,44143:CD,44144:CD,44146:CD,44147:CD,44148:CD,44149
44025 :: CALL :: call :: [Ljava/lang/String :: v4 = p0 $this .getSplitDirPath()::JM,44117:JM,44054:CL,51455:CL,51447
44029 :: CALL :: call :: [Ljava/lang/String :: v6 = p0 $this .getObsoleteDirPath()::JM,44077:JM,44143:CL,51463:CL,51471
44033 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
44039 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(/))::
44044 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v4[v20]::
44048 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v7.append(v15)::
44053 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,44146
44054 :: EXPR :: assign :: I :: v11 = v4.length::CF,44055
44055 :: PRED :: IF :: Z :: if (v20 < v11) goto 31::CF,44056:CD,44039:CD,44048:CD,44053:CD,44054:CD,44146
44056 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
44062 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(#(/))::
44067 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v6[v30]::
44071 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v21.append(v26)::
44076 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,44147
44077 :: EXPR :: assign :: I :: v23 = v6.length::CF,44078
44078 :: PRED :: IF :: Z :: if (v30 < v23) goto 77::CD,44062:CD,44071:CD,44076:CD,44077:CD,44147
44079 :: CALL :: call :: Ljava/lang/String :: v32 = v7.toString()::
44086 :: CALL :: call :: Ljava/lang/String :: v34 = v21.toString()::
44093 :: EXPR :: reference :: Ljava/io/File :: v35 = p0 $this .path::DD,44096
44096 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v35::
44100 :: NORM :: declaration :: Ljava/io/File :: v37 = new java.io.File::DD,44113
44101 :: EXPR :: reference :: Ljava/io/File :: v38 = p0 $this .splitDirPath::
44104 :: EXPR :: reference :: Ljava/lang/Object :: v39 = v4[v42]::
44113 :: EXPR :: modify :: Ljava/io/File :: p0 $this .splitDirPath = v37::
44116 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,44148
44117 :: EXPR :: assign :: I :: v36 = v4.length::CF,44118
44118 :: PRED :: IF :: Z :: if (v42 < v36) goto 133::CD,44100:CD,44116:CD,44117:CD,44148
44119 :: EXPR :: reference :: Ljava/io/File :: v43 = p0 $this .path::DD,44122
44122 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v43::
44126 :: NORM :: declaration :: Ljava/io/File :: v45 = new java.io.File::DD,44139
44127 :: EXPR :: reference :: Ljava/io/File :: v46 = p0 $this .obsoleteDirPath::
44130 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v6[v50]::
44139 :: EXPR :: modify :: Ljava/io/File :: p0 $this .obsoleteDirPath = v45::
44142 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,44149
44143 :: EXPR :: assign :: I :: v44 = v6.length::CF,44144
44144 :: PRED :: IF :: Z :: if (v50 < v44) goto 176::CD,44126:CD,44142:CD,44143:CD,44149
44146 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::DD,44053:DD,44055:CF,44054
44147 :: EXPR :: assign :: null :: PHI v30 = #(0), v29::DD,44076:DD,44078:CF,44077
44148 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,44116:DD,44118:CF,44117
44149 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::DD,44142:DD,44144:CF,44143
44724 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::CF,44725:CD,44727:CD,44729:CD,44730:CD,44738
44725 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: org.biojava.nbio.structure.align.client.StructureName.Source.values()::JM,39927
44727 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v2 = org.biojava.nbio.structure.align.client.StructureName$Source.ENUM$VALUES::DD,44729
44729 :: EXPR :: assign :: I :: v4 = v2.length::DD,44730
44730 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: v5 = new org.biojava.nbio.structure.align.client.StructureName$Source[]::DD,44738
44738 :: NORM :: compound :: [Lorg/biojava/nbio/structure/align/client/StructureName$Source :: return v5::CF,44725
44796 :: CALL :: call :: [Ljava/lang/String :: v7 = p1 $id .split(#(\.))::JM,44880
44805 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v36 = new java.lang.IllegalArgumentException::
44811 :: CALL :: call :: Ljava/lang/String :: v42 = v40.getSimpleName()::
44823 :: CALL :: call :: Ljava/lang/String :: v44 = format(#(Malformed %s: %s), v38)::
44833 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v7[#(0)]::JM,44841
44837 :: CALL :: call :: I :: v15 = v13.length()::JM,44841
44841 :: PRED :: IF :: Z :: if (v15 == #(4)) goto 101::CD,44859:CD,44873
44842 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v7[#(0)]::DD,44846
44846 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v20::
44859 :: CALL :: call :: Ljava/lang/String :: v26 = format(#(Unrecognized PDB code %s), v23)::
44873 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toUpperCase()::JM,44877
44877 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v19::
44880 :: EXPR :: assign :: I :: v28 = v7.length::DD,44881
44881 :: PRED :: IF :: Z :: if (v28 != #(2)) goto 133::CD,44886:CD,44890:CD,44898
44882 :: EXPR :: reference :: Ljava/lang/Object :: v31 = v7[#(1)]::
44886 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::
44890 :: CALL :: call :: Ljava/util/List :: v35 = parseMultiple(v33)::JM,44894:CL,45662
44894 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v35::
44898 :: NORM :: declaration :: Ljava/util/LinkedList :: v29 = new java.util.LinkedList::DD,44902
44902 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = v29::
44938 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getPdbId()::CE,44939:CD,44945
44939 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.SubstructureIdentifier.getPdbId()::JM,41253
44942 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,44945
44945 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,44939
44947 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::CE,44948:CD,44951:CD,44955:CD,44959:CD,44979:CD,44983:CD,44984
44948 :: EXIT :: exit :: Ljava/util/Set :: org.biojava.nbio.structure.align.client.StructureName.getChainIds(org.biojava.nbio.structure.SubstructureIdentifier)::JM,40357
44951 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::DD,44984
44955 :: CALL :: call :: Ljava/util/List :: v6 = p1 $si .getResidueRanges()::JM,44983:CL,48161
44959 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,44983
44964 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,44983
44969 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainId()::JM,44973:CL,48265
44973 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 57::CD,44974:JM,44983
44974 :: CALL :: call :: Z :: v19 = v3.add(v16)::
44979 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,44983
44983 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 26::CD,44964:CD,44969:CD,44973:CD,44979:JM,44983:CF,44984
44984 :: NORM :: compound :: Ljava/util/Set :: return v3::DD,44948
45003 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.guessPDBID(java.lang.String)::CD,45009:CD,45014:CD,45018
45009 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $name )::JM,45018
45014 :: CALL :: call :: Z :: v7 = v5.matches()::JM,45018
45018 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 25::CD,45019:CD,45024:JM,45018
45019 :: CALL :: call :: Ljava/lang/String :: v12 = v5.group(#(1))::JM,45018
45024 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toUpperCase()::
45038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathFactory.getCathDatabase()::CD,45041:CD,45043
45041 :: EXPR :: reference :: Lorg/biojava/nbio/structure/cath/CathDatabase :: v2 = org.biojava.nbio.structure.cath.CathFactory.cath::DD,45043
45043 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 16::JM,67744:JM,67780:JM,67718:JM,67752:JM,67722:JM,29548:JM,67725:JM,67790:JM,67728:JM,29555:JM,67766:JM,67736:JM,67773
45066 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDescriptionByCathId(java.lang.String)::CD,45074:CD,45085
45071 :: EXPR :: reference :: Z :: v4 = p0 $this .useCathDomainDescriptionFile::DD,45074
45074 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 15::CD,45075:CD,45079
45075 :: CALL :: call :: V :: p0 $this .ensureDomainDescriptionInstalled()::CL,51837
45079 :: CALL :: call :: V :: p0 $this .ensureDomallInstalled()::CL,51920
45085 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $cathId )::
45098 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase()::CD,45103
45103 :: CALL :: call :: Lorg/biojava/nbio/structure/ecod/EcodDatabase :: v4 = getEcodDatabase(v2)::CL,52027
45109 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsById(java.lang.String)::CD,45114:JM,45188:JM,45115:JM,45119
45114 :: PRED :: IF :: Z :: if (p1 $ecodId  == #(null)) goto 12::CD,45115:CD,45119:JM,45188
45115 :: CALL :: call :: Z :: v6 = p1 $ecodId .isEmpty()::JM,45188:JM,45115:JM,45119
45119 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 13::CD,45123:CD,45128:CD,45132:CD,45138:CD,45143
45123 :: CALL :: call :: Ljava/util/regex/Matcher :: v10 = v8.matcher(p1 $ecodId )::JM,45132
45128 :: CALL :: call :: Z :: v12 = v10.matches()::JM,45132
45132 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 38::CD,45133:JM,45132
45133 :: CALL :: call :: Ljava/lang/String :: v15 = v10.group(#(1))::JM,45132
45138 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getDomainsForPdb(v16)::JM,45143:JM,45194:CL,52255
45143 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 62::CD,45155:CD,45159:CD,45169:CD,45190:CD,45194
45155 :: CALL :: call :: I :: v22 = v18.size()::JM,45194
45159 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,45194
45169 :: CALL :: call :: Ljava/util/Iterator :: v27 = v18.iterator()::JM,45194
45174 :: CALL :: call :: Ljava/lang/Object :: v31 = v27.next()::JM,45194
45179 :: CALL :: call :: Ljava/lang/String :: v34 = v32.getDomainId()::JM,45188:CL,52457
45183 :: CALL :: call :: Z :: v36 = p1 $ecodId .equals(v34)::JM,45188:JM,45115:JM,45119
45188 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 125::CD,45190:CD,45194
45190 :: CALL :: call :: Z :: v29 = v27.hasNext()::JM,45194
45194 :: PRED :: IF :: Z :: if (v29 != #(0)) goto 98::CD,45174:CD,45179:CD,45183:CD,45188:JM,45194
45250 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP()::CD,45255
45255 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v4 = getSCOP(v2)::CL,52466
45261 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::CE,45262:CD,45266:CD,45270:CD,45275
45262 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.align.client.StructureName.guessScopDomain(java.lang.String,org.biojava.nbio.structure.scop.ScopDatabase)::JM,40614
45266 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,45538:JM,45446:JM,45495:JM,45451
45270 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v7 = p2 $scopDB .getDomainByScopID(p1 $name )::JM,45275:JM,45276:CL,52478:CL,52540
45275 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 22::CD,45276:CD,45279:CD,45284:CD,45289:CD,45299:CD,45304:CD,45308:CD,45438:CD,45442:CD,45446
45276 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v7::DD,45262
45279 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
45284 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v10.append(p1 $name )::
45289 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
45299 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v18.matcher(p1 $name )::JM,45377:JM,45410:JM,45365:JM,45416:JM,45371:JM,45308
45304 :: CALL :: call :: Z :: v22 = v20.matches()::JM,45377:JM,45410:JM,45365:JM,45416:JM,45371:JM,45308
45308 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 265::CD,45309:CD,45314:CD,45319:CD,45324:CD,45329:CD,45433:CD,45437:JM,45377:JM,45410:JM,45365:JM,45416:JM,45371:JM,45308:JM,45538:JM,45446:JM,45495:JM,45451
45309 :: CALL :: call :: Ljava/lang/String :: v26 = v20.group(#(1))::JM,45377:JM,45410:JM,45365:JM,45416:JM,45371:JM,45308
45314 :: CALL :: call :: Ljava/lang/String :: v29 = v20.group(#(2))::JM,45377:JM,45410:JM,45365:JM,45416:JM,45371:JM,45308
45319 :: CALL :: call :: Ljava/lang/String :: v32 = v20.group(#(3))::JM,45377:JM,45410:JM,45365:JM,45416:JM,45371:JM,45308
45324 :: CALL :: call :: Ljava/util/List :: v34 = p2 $scopDB .getDomainsForPDB(v26)::JM,45338:JM,45437:CL,52645:CL,52755
45329 :: CALL :: call :: Ljava/util/Iterator :: v36 = v34.iterator()::JM,45338:JM,45437
45334 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,45338:JM,45437
45338 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
45345 :: CALL :: call :: Ljava/util/regex/Matcher :: v46 = v42.matcher(v44)::JM,45410:JM,45427:JM,45365:JM,45399:JM,45354:JM,45388
45350 :: CALL :: call :: Z :: v48 = v46.matches()::JM,45410:JM,45427:JM,45365:JM,45399:JM,45354:JM,45388
45354 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 256::CD,45355:CD,45360:CD,45365:JM,45410:JM,45427:JM,45399:JM,45354:JM,45388:JM,45338:JM,45437
45355 :: CALL :: call :: Ljava/lang/String :: v50 = v46.group(#(2))::JM,45410:JM,45427:JM,45365:JM,45399:JM,45354:JM,45388
45360 :: CALL :: call :: Z :: v52 = v29.equals(v50)::JM,45377:JM,45410:JM,45365:JM,45416:JM,45371:JM,45427:JM,45399:JM,45388
45365 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 210::CD,45366:CD,45371:CD,45400:CD,45405:CD,45410:JM,45377:JM,45365:JM,45416:JM,45427:JM,45399:JM,45354:JM,45388
45366 :: CALL :: call :: Z :: v55 = v29.equals(#(_))::JM,45377:JM,45410:JM,45365:JM,45416:JM,45371
45371 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 210::CD,45372:CD,45377:CD,45400:CD,45405:CD,45410:JM,45365:JM,45416:JM,45371:JM,45427:JM,45399:JM,45354:JM,45388
45372 :: CALL :: call :: Z :: v58 = v29.equals(#(.))::JM,45377:JM,45410:JM,45365:JM,45416:JM,45371
45377 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 210::CD,45378:CD,45383:CD,45388:CD,45400:CD,45405:CD,45410:JM,45427:JM,45365:JM,45399:JM,45354
45378 :: CALL :: call :: Ljava/lang/String :: v60 = v46.group(#(2))::JM,45410:JM,45427:JM,45365:JM,45399:JM,45354:JM,45388
45383 :: CALL :: call :: Z :: v62 = v60.equals(#(_))::JM,45410:JM,45427:JM,45365:JM,45399:JM,45388
45388 :: PRED :: IF :: Z :: if (v62 != #(0)) goto 210::CD,45389:CD,45394:CD,45399:CD,45400:CD,45405:CD,45410:JM,45427:JM,45365:JM,45354:JM,45388
45389 :: CALL :: call :: Ljava/lang/String :: v64 = v46.group(#(2))::JM,45410:JM,45427:JM,45365:JM,45399:JM,45354:JM,45388
45394 :: CALL :: call :: Z :: v66 = v64.equals(#(.))::JM,45410:JM,45427:JM,45365:JM,45399:JM,45388
45399 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 256::CD,45400:CD,45405:CD,45410:JM,45427:JM,45365:JM,45399:JM,45354:JM,45388:JM,45338:JM,45437
45400 :: CALL :: call :: Ljava/lang/String :: v68 = v46.group(#(3))::JM,45410:JM,45427:JM,45365:JM,45399:JM,45354:JM,45388
45405 :: CALL :: call :: Z :: v70 = v32.equals(v68)::JM,45377:JM,45410:JM,45365:JM,45416:JM,45371:JM,45427:JM,45399:JM,45388
45410 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 248::CD,45411:CD,45416:CD,45428:JM,45377:JM,45410:JM,45365:JM,45371
45411 :: CALL :: call :: Z :: v72 = v32.equals(#(_))::JM,45377:JM,45410:JM,45365:JM,45416:JM,45371
45416 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 248::CD,45417:CD,45422:CD,45427:CD,45428:JM,45410:JM,45365:JM,45399:JM,45354:JM,45388
45417 :: CALL :: call :: Ljava/lang/String :: v74 = v46.group(#(3))::JM,45410:JM,45427:JM,45365:JM,45399:JM,45354:JM,45388
45422 :: CALL :: call :: Z :: v76 = v74.equals(#(_))::JM,45410:JM,45427:JM,45365:JM,45399:JM,45388
45427 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 256::CD,45428:JM,45338:JM,45437
45428 :: CALL :: call :: Z :: v78 = v4.add(v41)::
45433 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,45338:JM,45437
45437 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 108::CD,45334:CD,45338:CD,45345:CD,45350:CD,45354:CD,45433:JM,45437:JM,45538:JM,45446:JM,45495:JM,45451
45438 :: CALL :: call :: Ljava/util/Iterator :: v80 = v4.iterator()::JM,45538:JM,45446:JM,45495:JM,45451
45442 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,45538:JM,45446:JM,45495:JM,45451
45446 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 446::CD,45447:CD,45451:CD,45452:CD,45454:CD,45458:CD,45558:CD,45559:JM,45538:JM,45446:JM,45495
45447 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,45538:JM,45446:JM,45495:JM,45451
45451 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,45558
45452 :: EXPR :: reference :: Lorg/slf4j/Logger :: v86 = org.biojava.nbio.structure.align.client.StructureName.logger::JM,45458:JM,45454
45454 :: CALL :: call :: Z :: v88 = v86.isWarnEnabled()::JM,45458:JM,45454
45458 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 444::CF,45459:CD,45463:CD,45468:CD,45472:CD,45477:CD,45482:CD,45486:CD,45491:CD,45495:CD,45539:CD,45543:CD,45550:CF,45558
45459 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v89 = new java.lang.StringBuilder::
45463 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
45468 :: CALL :: call :: Ljava/lang/String :: v95 = v85.getScopId()::CL,52902
45472 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v91.append(v95)::
45477 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v97.append(#(.))::
45482 :: CALL :: call :: Ljava/lang/String :: v101 = v99.toString()::
45486 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v89.append(v101)::
45491 :: CALL :: call :: Z :: v105 = v80.hasNext()::JM,45538:JM,45446:JM,45495:JM,45451
45495 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 422::CD,45496:CD,45534:CD,45538:JM,45539
45496 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v89.append(#( Other possibilities: ))::
45502 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::JM,45538:JM,45446:JM,45495:JM,45451
45503 :: CALL :: call :: Ljava/lang/Object :: v113 = v80.next()::JM,45538:JM,45446:JM,45495:JM,45451
45512 :: CALL :: call :: Ljava/lang/String :: v118 = valueOf(v116)::
45520 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v111.append(#( ))::
45525 :: CALL :: call :: Ljava/lang/String :: v124 = v122.toString()::
45529 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v89.append(v124)::
45534 :: CALL :: call :: Z :: v110 = v80.hasNext()::JM,45538:JM,45446:JM,45495:JM,45451
45538 :: PRED :: IF :: Z :: if (v110 != #(0)) goto 371::CD,45502:CD,45503:CD,45512:CD,45520:CD,45525:CD,45529:CD,45534:JM,45539
45539 :: CALL :: call :: Ljava/lang/String :: v129 = getProperty(#(line.separator))::JM,45539
45543 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v89.append(v129)::
45550 :: CALL :: call :: Ljava/lang/String :: v134 = v89.toString()::
45558 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v85::DD,45262
45559 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,45262
45662 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::CE,45663:CD,45666:CD,45670:CD,45675:CD,45681:CD,45686:CD,45698:CD,45703:CD,45704:CD,45709:CD,45725:CD,45726:CD,45727:CD,45729
45663 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.lang.String)::JM,44894
45666 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $s .trim()::JM,45675:JM,45727
45670 :: CALL :: call :: Z :: v7 = v4.startsWith(#(())::JM,45675:JM,45727
45675 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 23::CF,45727:CD,45676:JM,45675
45676 :: CALL :: call :: Ljava/lang/String :: v11 = v4.substring(#(1))::JM,45675:JM,45727
45681 :: CALL :: call :: Z :: v15 = v12.endsWith(#()))::JM,45686
45686 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 44::CD,45687:CD,45691:CD,45692
45687 :: CALL :: call :: I :: v17 = v12.length()::JM,45691
45691 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v17 - #(1)::
45692 :: CALL :: call :: Ljava/lang/String :: v20 = v12.substring(#(0), v18)::
45698 :: CALL :: call :: [Ljava/lang/String :: v24 = v21.split(#(,))::JM,45704:JM,45709
45703 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,45726:CF,45704
45704 :: EXPR :: assign :: I :: v26 = v24.length::
45709 :: EXPR :: assign :: I :: v28 = v24.length::DD,45725
45715 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v31 = parse(v29)::CL,52911
45719 :: CALL :: call :: Z :: v33 = v25.add(v31)::
45724 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v35 + #(1)::DD,45729
45725 :: PRED :: IF :: Z :: if (v35 < v28) goto 75::CD,45715:CD,45719:CD,45724:CD,45729:CF,45726
45726 :: NORM :: compound :: Ljava/util/List :: return v25::DD,45663
45727 :: EXPR :: assign :: null :: PHI v12 = v4, v11::JM,45686:JM,45691
45729 :: EXPR :: assign :: null :: PHI v35 = #(0), v34::DD,45724:DD,45725
45783 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
45786 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p2 $ranges ::
45844 :: PRED :: IF :: Z :: if (p1 $useCache  != #(0)) goto 25::CD,45849
45849 :: CALL :: call :: V :: p0 $this .loadRepresentativeDomains()::CL,53125
45861 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.getPDPDomain(java.lang.String)::CD,45869:CD,45888:CD,45893:CD,45953:CD,45958:CD,45963:CD,45973:CD,45978:CD,45983:CD,45993:CD,45997:CD,46043:CD,46047:JM,53665:JM,45783:JM,45786:JM,53660:JM,53676:CD,46056:CD,46057
45866 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .serializedCache::DD,45869
45869 :: PRED :: IF :: Z :: if (v5 == #(null)) goto 38::CF,46056:CD,45873:CD,45878
45873 :: CALL :: call :: Z :: v8 = v6.containsKey(p1 $pdpDomainName )::JM,45878
45878 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 38::CF,46056:CD,45882:CD,45887
45882 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p1 $pdpDomainName )::JM,45887
45887 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,46056
45888 :: CALL :: call :: Z :: v16 = p0 $this .checkDomainRanges(v14)::JM,45893:CL,53355
45893 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 186::CF,46057:CD,45895:CD,45899:CD,45907:CD,45912:CD,45917:CD,45932:CD,45936:CD,45940:CD,45944
45895 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
45899 :: CALL :: call :: Ljava/lang/String :: v21 = valueOf(v19)::
45907 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v18.append(#(getPDPDomain?pdpId=))::
45912 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(p1 $pdpDomainName )::
45917 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
45932 :: CALL :: call :: Ljava/io/InputStream :: v35 = getInputStream(v17)::CL,53407
45936 :: CALL :: call :: Ljava/lang/String :: v56 = convertStreamToString(v35)::CL,53421
45940 :: CALL :: call :: Ljava/util/SortedSet :: v58 = getDomainRangesFromXML(v56)::JM,45944:JM,46057:CL,53529
45944 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 186::CF,46057:CD,45945
45945 :: CALL :: call :: V :: p0 $this .cache(p1 $pdpDomainName , v58)::CL,53581
45953 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
45958 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v38.append(p1 $pdpDomainName )::
45963 :: CALL :: call :: Ljava/lang/String :: v44 = v42.toString()::
45973 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
45978 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v47.append(p1 $pdpDomainName )::
45983 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::
45993 :: NORM :: declaration :: Ljava/util/ArrayList :: v61 = new java.util.ArrayList::
45997 :: CALL :: call :: Ljava/util/Iterator :: v64 = v60.iterator()::JM,46047
46002 :: CALL :: call :: Ljava/lang/Object :: v68 = v64.next()::JM,46047
46034 :: CALL :: call :: Ljava/util/List :: v80 = v70.getResidueRanges()::CL,48161
46038 :: CALL :: call :: Z :: v82 = v61.addAll(v80)::
46043 :: CALL :: call :: Z :: v66 = v64.hasNext()::JM,46047
46047 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 208::CD,46002:JM,44880:JM,44881:JM,44805:JM,44837:JM,44823:JM,44841:JM,44811:JM,44796:CD,46034:CD,46038:CD,46043:JM,46047
46056 :: EXPR :: assign :: null :: PHI v14 = #(null), #(null), v13::DD,46057
46057 :: EXPR :: assign :: null :: PHI v60 = v14, v58, v58::JM,46047:CF,45993
46127 :: CALL :: call :: Ljava/util/regex/Matcher :: v7 = v5.matcher(p1 $name )::JM,46156
46132 :: CALL :: call :: Z :: v9 = v7.matches()::JM,46156
46143 :: CALL :: call :: Ljava/lang/String :: v13 = v7.group(#(1))::JM,46156
46151 :: CALL :: call :: Ljava/lang/String :: v16 = v7.group(#(2))::JM,46156
46156 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 63::CD,46157:CD,46162:JM,46156
46157 :: CALL :: call :: Ljava/lang/String :: v19 = v7.group(#(2))::JM,46156
46162 :: CALL :: call :: I :: v21 = parseInt(v19)::
46191 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getThePdbId()::CD,46198
46195 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::
46198 :: CALL :: call :: Ljava/lang/String :: v7 = v3.substring(#(0), #(4))::
46208 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getStructureForPdbId(java.lang.String)::CD,46213:CD,46221:CD,46226:CD,46231
46213 :: PRED :: IF :: Z :: if (p1 $pdbId  != #(null)) goto 7::CD,46254:CD,46259:CD,46263
46221 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
46226 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(p1 $pdbId )::
46231 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
46254 :: CALL :: call :: Z :: v9 = p0 $this .checkLoading(p1 $pdbId )::JM,46259:CL,53718
46259 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 42::CD,46254
46260 :: EXPR :: reference :: Z :: v19 = p0 $this .useMmCif::DD,46263
46263 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 87::CD,46264:CD,46270
46264 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v23 = p0 $this .loadStructureFromCifByPdbId(p1 $pdbId )::CL,53734
46270 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v21 = p0 $this .loadStructureFromPdbByPdbId(p1 $pdbId )::CL,53810
46296 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.parseQuery(java.net.URL)::CD,46300:CD,46304:CD,46308:JM,46324:JM,46309:JM,46313:JM,46319
46300 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v3 = new java.util.LinkedHashMap::
46304 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $url .getQuery()::JM,46308:JM,46324:JM,46309:JM,46313:JM,46319
46308 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 25::CD,46309:CD,46313:JM,46324:JM,46319
46309 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,46324:JM,46309:JM,46313:JM,46319
46313 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 27::CD,46315:CD,46319:CD,46324:CD,46376:CD,46380:JM,46308:JM,46309:JM,46313
46315 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $url .getQuery()::JM,46308:JM,46324:JM,46309:JM,46313:JM,46319
46319 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#(&))::JM,46324:JM,46309:JM,46313:JM,46319
46324 :: EXPR :: assign :: I :: v16 = v15.length::DD,46376
46369 :: CALL :: call :: Ljava/lang/Object :: v40 = v3.put(v38, v36)::
46375 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v42 + #(1)::DD,46380
46376 :: PRED :: IF :: Z :: if (v42 < v16) goto 54::CD,46369:CD,46375:CD,46380
46380 :: EXPR :: assign :: null :: PHI v42 = #(0), v41::DD,46375:DD,46376
46463 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.guessFiletype(java.lang.String)::CE,46464:CD,46467:CD,46471:CD,46474:CD,46511:CD,46516
46464 :: EXIT :: exit :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO.guessFiletype(java.lang.String)::JM,41195:JM,41196
46467 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $filename .toLowerCase()::JM,46503
46471 :: CALL :: call :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v6 = values()::JM,46474:CL,53886
46474 :: EXPR :: assign :: I :: v7 = v6.length::DD,46511
46476 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v6[v25]::JM,46480:JM,46484:JM,46489:JM,46505:JM,46493:JM,46509:DD,46504
46480 :: CALL :: call :: Ljava/util/List :: v11 = v9.getExtensions()::JM,46480:JM,46484:JM,46489:JM,46505:JM,46493:JM,46509
46484 :: CALL :: call :: Ljava/util/Iterator :: v13 = v11.iterator()::JM,46484:JM,46489:JM,46505:JM,46493:JM,46509
46489 :: CALL :: call :: Ljava/lang/Object :: v17 = v13.next()::JM,46489:JM,46505:JM,46493:JM,46509
46493 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,46503:JM,46494
46494 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toLowerCase()::JM,46503:JM,46494
46498 :: CALL :: call :: Z :: v22 = v4.endsWith(v20)::JM,46503
46503 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 66::CF,46515:CD,46504:CD,46505:CD,46509
46504 :: NORM :: compound :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v9::DD,46464
46505 :: CALL :: call :: Z :: v15 = v13.hasNext()::JM,46489:JM,46505:JM,46493:JM,46509
46509 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 40::CD,46489:CD,46493:CD,46494:CD,46498:CD,46503:CD,46510:CD,46511:CD,46516:CD,46515:JM,46505:JM,46509
46510 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v26 + #(1)::DD,46516
46511 :: PRED :: IF :: Z :: if (v25 < v7) goto 22::CD,46480:CD,46484:CD,46505:CD,46509:CD,46512:CD,46514:CD,46515
46512 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v27 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::CF,46514
46514 :: NORM :: compound :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v27::DD,46464
46515 :: EXPR :: assign :: null :: PHI v26 = v25, v26::JM,46489:JM,46505:JM,46493:JM,46509:DD,46510:DD,46515
46516 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,46511:DD,46515
46541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::CE,46542:CD,46544:CD,46546
46542 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype()::
46544 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.URLIdentifier.$SWITCH_TABLE$org$biojava$nbio$structure$StructureIO$StructureFiletype::DD,46546:DD,46547
46546 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,46547:CD,46548:CD,46551:CD,46552:CD,46553:CD,46555:CD,46564:CD,46566:CD,46575:CD,46577:CD,46588
46547 :: NORM :: compound :: [I :: return v2::DD,46542
46548 :: CALL :: call :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v5 = values()::JM,46551:CL,53886
46551 :: EXPR :: assign :: I :: v6 = v5.length::CF,46552
46552 :: NORM :: declaration :: [I :: v7 = new []::DD,46588
46553 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v8 = org.biojava.nbio.structure.StructureIO$StructureFiletype.CIF::
46555 :: CALL :: call :: I :: v10 = v8.ordinal()::
46559 :: EXPR :: modify :: I :: v7[v10] = #(2)::
46564 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v14 = org.biojava.nbio.structure.StructureIO$StructureFiletype.PDB::
46566 :: CALL :: call :: I :: v16 = v14.ordinal()::
46570 :: EXPR :: modify :: I :: v7[v16] = #(1)::
46575 :: EXPR :: reference :: Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v20 = org.biojava.nbio.structure.StructureIO$StructureFiletype.UNKNOWN::
46577 :: CALL :: call :: I :: v22 = v20.ordinal()::
46581 :: EXPR :: modify :: I :: v7[v22] = #(3)::
46588 :: NORM :: compound :: [I :: return v7::DD,46542
46616 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
46639 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: v4 = new org.biojava.nbio.structure.io.FileParsingParameters::DD,46643
46643 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: p0 $this .params = v4::
46646 :: CALL :: call :: V :: p0 $this .documentStart()::CL,53913
46663 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setFileParsingParameters(org.biojava.nbio.structure.io.FileParsingParameters)::JM,46668
46668 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/FileParsingParameters :: p0 $this .params = p1 $params ::
46674 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.addMMcifConsumer(org.biojava.nbio.structure.io.mmcif.MMcifConsumer)::CD,46682
46679 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::
46682 :: CALL :: call :: Z :: v6 = v4.add(p1 $consumer )::
46691 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.parse(java.io.BufferedReader)::CD,46696:CD,46699:CD,46706:CD,46710:CD,46714:CD,46718:CD,46722:JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46696 :: CALL :: call :: V :: p0 $this .triggerDocumentStart()::CL,54113
46699 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v5 = new org.biojava.nbio.structure.io.mmcif.model.Struct::DD,46703
46703 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v5::
46706 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,47053:JM,47288
46710 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::DD,47321
46714 :: NORM :: declaration :: Ljava/util/HashSet :: v13 = new java.util.HashSet::
46718 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $buf .readLine()::JM,47168:JM,46722:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46722 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 70::CD,46723:CD,46728:CD,46731:CD,46736:CD,46741:CD,46746:CD,46754:CD,47319:CD,47320:CD,47321:CD,47322:JM,47168:JM,46818:JM,47106:JM,46758:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,46878
46723 :: CALL :: call :: Z :: v19 = v16.startsWith(#(data_))::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46728 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 988::CF,47319:CD,46731:CD,46736:CD,46741:CD,46746:CD,46754:CD,47269:CD,47273:CD,47320:CD,47321:CD,47322
46731 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v238 = new java.lang.StringBuilder::
46736 :: CALL :: call :: Ljava/lang/StringBuilder :: v242 = v238.append(v16)::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46741 :: CALL :: call :: Ljava/lang/StringBuilder :: v244 = v242.append(#('))::JM,46768:JM,47168:JM,46818:JM,47106:JM,46835:JM,46963:JM,46804:JM,46762:JM,47322:JM,46878
46746 :: CALL :: call :: Ljava/lang/String :: v246 = v244.toString()::JM,46963
46754 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,54155
46758 :: CALL :: call :: Z :: v23 = v21.isEmpty()::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46762 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 988::CF,47319:CD,46763:CD,46768:CD,47269:CD,47273:CD,47320:CD,47321:CD,47322:JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,46762:JM,46835:JM,46963:JM,46804:JM,46878
46763 :: CALL :: call :: Z :: v27 = v21.startsWith(#(#))::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46768 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 123::CD,46772:CD,46773:CD,46781:CD,46786:CD,46791:CD,46799:CD,46804:CD,46812:CD,47269:CD,47273:CD,47317:CD,47318:CD,47319:CD,47320:CD,47321:CD,47322
46772 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::JM,46773
46773 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(v75)::JM,46773
46781 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#( ))::
46786 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(v21)::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46791 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,47168:JM,46818:JM,47106:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46799 :: CALL :: call :: Z :: v42 = v21.startsWith(#(data_))::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46804 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 187::CF,47317:CD,46805:CD,47318
46805 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 187::CF,47317:CD,46806:CD,46809
46806 :: CALL :: call :: V :: v154.clear()::
46809 :: CALL :: call :: V :: v9.clear()::
46812 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 692::CD,46813:CD,46818:CD,47101:CD,47106:JM,47168:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46813 :: CALL :: call :: Z :: v47 = v21.startsWith(#(loop_))::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46818 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 217::CD,46819:CD,46823:CD,46828:CD,47269:CD,47273:CD,47319:CD,47320:CD,47321:CD,47322
46819 :: CALL :: call :: V :: v9.clear()::
46823 :: CALL :: call :: Z :: v50 = v21.matches(#(\s*_\w+.*))::JM,46828
46828 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 555::CD,46829:CD,47012:CD,47021:CD,47025:CD,47036:CD,47045:CD,47049:CD,47053:CD,47090:CD,47097:CD,47269:CD,47273:CD,47319:CD,47320:CD,47321:CD,47322
46829 :: PRED :: IF :: Z :: if (v155 == #(0)) goto 445::CD,46830:CD,46835:CD,46954:CD,46958:CD,46963:CD,47269:CD,47273:CD,47319:CD,47320:CD,47321:CD,47322:JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,46762:JM,46768:JM,46804:JM,46878
46830 :: CALL :: call :: Z :: v53 = v21.startsWith(#(_))::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46835 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 445::CD,46842:CD,46845:CD,46852:CD,46856:CD,46954:CD,46958:CD,46963:CD,47269:CD,47273:CD,47319:CD,47320:CD,47321:CD,47322:JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,46762:JM,46768:JM,46835:JM,46804:JM,46878
46842 :: CALL :: call :: V :: v9.clear()::
46845 :: CALL :: call :: Ljava/util/List :: v82 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,46866:JM,46856:JM,46923:CL,54188
46852 :: CALL :: call :: I :: v84 = v82.size()::JM,46866:JM,46856:JM,46923
46856 :: PRED :: IF :: Z :: if (v84 >= #(1)) goto 292::CD,46857:CD,46861:CD,46866:CD,46867:CD,46872:CD,47269:CD,47273:CD,47319:CD,47320:CD,47321:CD,47322:JM,46856:JM,46923
46857 :: CALL :: call :: V :: v154.clear()::
46861 :: CALL :: call :: Ljava/lang/Object :: v87 = v82.get(#(0))::JM,46866:JM,46856:JM,46923
46866 :: EXPR :: assign :: Ljava/lang/Object :: v88 = CHECKCAST v87::JM,46872:JM,47322:JM,46924
46867 :: CALL :: call :: I :: v91 = v88.indexOf(#(.))::JM,46872:JM,47322:JM,46924
46872 :: PRED :: IF :: Z :: if (v91 >= #(0)) goto 377::CD,46873:CD,46878:CD,46912:CD,46918:CD,46923:CD,46924:CD,46925:CD,46929:CD,46935:CD,46940:CD,47269:CD,47273:CD,47319:CD,47320:CD,47321:CD,47322:JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804
46873 :: CALL :: call :: Z :: v93 = v21.startsWith(#(data_))::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46878 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 364::CD,46881:CD,46886:CD,46891:CD,46896:CD,46904:CD,46908:CD,47269:CD,47273:CD,47319:CD,47320:CD,47321:CD,47322
46881 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v227 = new java.lang.StringBuilder::
46886 :: CALL :: call :: Ljava/lang/StringBuilder :: v230 = v227.append(v21)::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46891 :: CALL :: call :: Ljava/lang/StringBuilder :: v232 = v230.append(#('))::JM,47168:JM,47106:JM,46963:JM,47322
46896 :: CALL :: call :: Ljava/lang/String :: v234 = v232.toString()::JM,46963
46904 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,54155
46908 :: CALL :: call :: V :: v154.clear()::
46912 :: CALL :: call :: Ljava/lang/String :: v96 = v88.substring(#(0), v91)::JM,47322:JM,46924
46918 :: CALL :: call :: Ljava/lang/Object :: v98 = v82.get(#(1))::JM,46866:JM,46856:JM,46923
46923 :: EXPR :: assign :: Ljava/lang/Object :: v99 = CHECKCAST v98::CF,46924
46924 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v91 + #(1)::
46925 :: CALL :: call :: I :: v102 = v88.length()::
46929 :: CALL :: call :: Ljava/lang/String :: v104 = v88.substring(v100, v102)::
46935 :: CALL :: call :: Z :: v106 = v9.add(v104)::
46940 :: CALL :: call :: Z :: v108 = v154.add(v99)::
46954 :: CALL :: call :: Ljava/lang/String :: v55 = v21.trim()::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
46958 :: CALL :: call :: I :: v58 = v55.indexOf(#(46))::JM,47168:JM,47106:JM,46963:JM,47322
46963 :: PRED :: IF :: Z :: if (v58 <= #(-1)) goto 534::CD,46964:CD,46977:CD,46990:CD,46991:CD,47319:CD,47320:CD,47321:CD,47322
46964 :: CALL :: call :: [Ljava/lang/String :: v62 = v55.split(#(\.))::JM,46990
46969 :: EXPR :: reference :: Ljava/lang/Object :: v63 = v62[#(0)]::DD,47322
46973 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v62[#(1)]::
46977 :: CALL :: call :: Z :: v67 = v9.add(v65)::
46990 :: EXPR :: assign :: I :: v71 = v62.length::DD,46991
46991 :: PRED :: IF :: Z :: if (v71 <= #(2)) goto 988::CF,47319:CD,47320:CD,47321:CD,47322
47012 :: CALL :: call :: Ljava/util/List :: v121 = p0 $this .processLine(v21, p1 $buf , v119)::JM,47321:JM,47053:CL,54188
47021 :: CALL :: call :: I :: v125 = v121.size()::JM,47321:JM,47053
47025 :: CALL :: call :: Ljava/lang/Integer :: v127 = valueOf(v125)::JM,47053
47036 :: CALL :: call :: Ljava/lang/String :: v132 = v121.toString()::
47045 :: CALL :: call :: I :: v135 = v121.size()::JM,47321:JM,47053
47049 :: CALL :: call :: I :: v137 = v9.size()::JM,47053
47053 :: PRED :: IF :: Z :: if (v135 == v137) goto 673::CD,47057:CD,47061:CD,47069:CD,47073
47057 :: CALL :: call :: I :: v143 = v9.size()::
47061 :: CALL :: call :: Ljava/lang/Integer :: v145 = valueOf(v143)::
47069 :: CALL :: call :: I :: v147 = v121.size()::JM,47321:JM,47053
47073 :: CALL :: call :: Ljava/lang/Integer :: v149 = valueOf(v147)::
47090 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v121, v13)::CL,54504
47097 :: CALL :: call :: V :: v121.clear()::JM,47321:JM,47053
47101 :: CALL :: call :: Z :: v157 = v21.startsWith(#(loop_))::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
47106 :: PRED :: IF :: Z :: if (v157 == #(0)) goto 749::CD,47107:CD,47115:CD,47135:CD,47142:CD,47146:CD,47269:CD,47273:CD,47319:CD,47320:CD,47321:CD,47322
47107 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 722::CD,47108
47108 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,54504
47115 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,55925
47135 :: CALL :: call :: Ljava/util/List :: v167 = p0 $this .processLine(v21, p1 $buf , #(2))::JM,47156:JM,47239:JM,47146:CL,54188
47142 :: CALL :: call :: I :: v169 = v167.size()::JM,47156:JM,47239:JM,47146
47146 :: PRED :: IF :: Z :: if (v169 >= #(1)) goto 795::CD,47147:CD,47151:CD,47156:CD,47157:CD,47162:CD,47269:CD,47273:CD,47319:CD,47320:CD,47321:CD,47322:JM,47239:JM,47146
47147 :: CALL :: call :: V :: v154.clear()::
47151 :: CALL :: call :: Ljava/lang/Object :: v172 = v167.get(#(0))::JM,47156:JM,47239:JM,47146
47156 :: EXPR :: assign :: Ljava/lang/Object :: v173 = CHECKCAST v172::JM,47240:JM,47162:JM,47322:JM,47214
47157 :: CALL :: call :: I :: v175 = v173.indexOf(#(.))::JM,47240:JM,47162:JM,47322:JM,47214
47162 :: PRED :: IF :: Z :: if (v175 >= #(0)) goto 877::CD,47163:CD,47168:CD,47202:CD,47228:CD,47234:CD,47239:CD,47240:CD,47241:CD,47245:CD,47251:CD,47256:CD,47269:CD,47273:CD,47319:CD,47320:CD,47321:CD,47322:JM,46818:JM,47106:JM,46758:JM,46728:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,46878
47163 :: CALL :: call :: Z :: v177 = v21.startsWith(#(data_))::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
47168 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 867::CD,47171:CD,47176:CD,47181:CD,47186:CD,47194:CD,47198:CD,47269:CD,47273:CD,47319:CD,47320:CD,47321:CD,47322
47171 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v214 = new java.lang.StringBuilder::
47176 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v214.append(v21)::JM,47168:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
47181 :: CALL :: call :: Ljava/lang/StringBuilder :: v221 = v218.append(#('))::JM,46963
47186 :: CALL :: call :: Ljava/lang/String :: v223 = v221.toString()::
47194 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,54155
47198 :: CALL :: call :: V :: v154.clear()::
47202 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 923::CD,47203:CD,47209:CD,47214:JM,47322
47203 :: CALL :: call :: Ljava/lang/String :: v180 = v173.substring(#(0), v175)::JM,47214:JM,47240:JM,47322
47209 :: CALL :: call :: Z :: v182 = v180.equals(v73)::JM,47322:JM,47214
47214 :: PRED :: IF :: Z :: if (v182 != #(0)) goto 923::CD,47215:CD,47222:JM,47322
47215 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,54504
47222 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,55925
47228 :: CALL :: call :: Ljava/lang/String :: v186 = v173.substring(#(0), v175)::JM,47322:JM,47240:JM,47214
47234 :: CALL :: call :: Ljava/lang/Object :: v188 = v167.get(#(1))::JM,47156:JM,47239:JM,47146
47239 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::CF,47240
47240 :: EXPR :: assign :: Ljava/lang/Object :: v190 = v175 + #(1)::
47241 :: CALL :: call :: I :: v192 = v173.length()::
47245 :: CALL :: call :: Ljava/lang/String :: v194 = v173.substring(v190, v192)::
47251 :: CALL :: call :: Z :: v196 = v9.add(v194)::
47256 :: CALL :: call :: Z :: v198 = v154.add(v189)::
47269 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $buf .readLine()::JM,47168:JM,46722:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,47322:JM,46878
47273 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 105::CD,46758:CD,46762:CD,47274:CD,47305:CD,47313:CD,47319:CD,47320:CD,47321:CD,47322:JM,47168:JM,46818:JM,47106:JM,46728:JM,47273:JM,46768:JM,46835:JM,46963:JM,46804:JM,46878
47274 :: PRED :: IF :: Z :: if (v73 == #(null)) goto 1051::CD,47275:CD,47279
47275 :: CALL :: call :: I :: v202 = v154.size()::JM,47279
47279 :: PRED :: IF :: Z :: if (v202 <= #(0)) goto 1051::CD,47280:CD,47284:CD,47288
47280 :: CALL :: call :: I :: v204 = v154.size()::JM,47288
47284 :: CALL :: call :: I :: v206 = v9.size()::JM,47288
47288 :: PRED :: IF :: Z :: if (v204 != v206) goto 1051::CD,47289:CD,47296
47289 :: CALL :: call :: V :: p0 $this .endLineChecks(v73, v9, v154, v13)::CL,54504
47296 :: CALL :: call :: V :: p0 $this .resetBuffers(v9, v154, v13)::CL,55925
47302 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: v209 = p0 $this .struct::DD,47305
47305 :: PRED :: IF :: Z :: if (v209 == #(null)) goto 1066::CD,47309
47309 :: CALL :: call :: V :: p0 $this .triggerStructData(v210)::CL,55945
47313 :: CALL :: call :: V :: p0 $this .triggerDocumentEnd()::CL,54155
47317 :: EXPR :: assign :: null :: PHI v76 = v75, v75, #(0)::CF,47318:DD,46812:DD,47319
47318 :: EXPR :: assign :: null :: PHI v155 = v153, v153, #(0)::DD,46829:DD,47320:CF,46812
47319 :: EXPR :: assign :: null :: PHI v75 = #(0), v75, v75, #(1), #(0), #(0), #(0), v76, v76, v76, v76, #(1), #(0), #(0), #(0)::CF,47320:JM,46773:DD,46805:DD,47317:DD,47319
47320 :: EXPR :: assign :: null :: PHI v153 = #(0), v153, v153, #(0), #(0), #(0), #(0), v155, v155, v155, #(1), #(0), v155, v155, v155::CF,47321:DD,47318:DD,47320
47321 :: EXPR :: assign :: null :: PHI v154 = v11, v154, v154, v154, v154, v154, v154, v154, v154, v154, v121, v154, v154, v154, v154::CF,47322:JM,47279:JM,47288:DD,47321
47322 :: EXPR :: assign :: null :: PHI v73 = #(null), v73, v73, v73, v73, #(null), v96, v63, v63, v55, v73, #(null), v73, #(null), v186::JM,47168:JM,46722:JM,46818:JM,47106:JM,46758:JM,46728:JM,47273:JM,46762:JM,46768:JM,46835:JM,46963:JM,46804:JM,46878:DD,47107:DD,47202:JM,47214:DD,47274:DD,47322
47679 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructure(java.net.URL)::CD,47693
47693 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p0 $this .getStructure(v7)::CL,55981
47706 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getBiologicalAssembly(java.lang.String,int)::CD,47712
47712 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getBiologicalAssembly(p1 $pdbId , p2 $bioAssemblyId , #(1))::CL,56012
47733 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,56095:JM,56127:DD,47737
47737 :: EXPR :: modify :: Ljava/util/List :: p0 $this .models = v4::
47740 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #()::
47743 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,56095:JM,56127:DD,47747
47747 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = v7::
47750 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,56095:JM,56127:DD,47754
47754 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v9::
47757 :: NORM :: declaration :: Ljava/util/ArrayList :: v11 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,56095:JM,56127:DD,47761
47761 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = v11::
47764 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBHeader :: v13 = new org.biojava.nbio.structure.PDBHeader::DD,47768
47768 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = v13::
47771 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,56095:JM,56127:DD,47775
47775 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = v15::
47778 :: NORM :: declaration :: Ljava/util/ArrayList :: v17 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,56095:JM,56127:DD,47782
47782 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = v17::
47785 :: NORM :: declaration :: Ljava/util/ArrayList :: v19 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,56095:JM,56127:DD,47789
47789 :: EXPR :: modify :: Ljava/util/List :: p0 $this .hetAtoms = v19::
47812 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBCode()::CE,47813:CD,47819
47813 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.StructureImpl.getPDBCode()::
47816 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_id::DD,47819
47819 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,47813
47821 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBCode(java.lang.String)::JM,47826
47826 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_id = p1 $pdb_id_ ::
47832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::CE,47833:CD,47839
47833 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBHeader :: org.biojava.nbio.structure.StructureImpl.getPDBHeader()::JM,65136:JM,75558:JM,75709:JM,77629
47836 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBHeader :: v3 = p0 $this .pdbHeader::DD,47839
47839 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBHeader :: return v3::CF,47833
47841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setPDBHeader(org.biojava.nbio.structure.PDBHeader)::JM,47846
47846 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBHeader :: p0 $this .pdbHeader = p1 $pdbHeader ::
47852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.toString()::CD,47856
47856 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getIdentifier()::CL,56154
47873 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::CE,47874:CD,47880
47874 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getDBRefs()::JM,76746:JM,76778
47877 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .dbrefs::DD,47880
47880 :: NORM :: compound :: Ljava/util/List :: return v3::CF,47874
47882 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setDBRefs(java.util.List)::CD,47888:CD,47894:CD,47908:CD,47912:JM,47913
47888 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
47894 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $dbrefs .iterator()::JM,47912:JM,47913
47899 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,47912
47904 :: CALL :: call :: V :: v12.setParent(p0 $this )::CL,56211
47908 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,47912
47912 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,47899:CD,47904:CD,47908:JM,47912
47913 :: EXPR :: modify :: Ljava/util/List :: p0 $this .dbrefs = p1 $dbrefs ::
47949 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getDescription()::CE,47950:CD,47956
47950 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getDescription()::
47953 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .description::DD,47956
47956 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,47950
47958 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDescription(java.lang.String)::JM,47963
47963 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
47969 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompounds()::CE,47970:CD,47976:CD,48041
47970 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getCompounds()::JM,73106
47973 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .compounds::DD,47976
47976 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 19::CD,47980:CD,47984:CD,47990:CD,48000:CD,48033:CD,48037
47977 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .compounds::JM,47984
47980 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,47984
47984 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 113::CD,47990:CD,48000:CD,48033:CD,48037
47990 :: CALL :: call :: Ljava/util/List :: v12 = v9.findCompounds()::JM,47994:CL,56237
47994 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = v12::
47997 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .compounds::JM,48037
48000 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,48037
48005 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,48037
48010 :: CALL :: call :: Ljava/util/List :: v22 = v20.getChains()::JM,48032:CL,56261
48014 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,48032
48019 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,48032
48024 :: CALL :: call :: V :: v29.setCompound(v20)::CL,56270
48028 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,48032
48032 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 75::CD,48019:CD,48024:CD,48028:JM,48032:JM,48037
48033 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,48037
48037 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 50::CD,48005:CD,48010:CD,48014:CD,48028:CD,48032:CD,48033:JM,48037
48038 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .compounds::DD,48041
48041 :: NORM :: compound :: Ljava/util/List :: return v31::DD,47970
48066 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCompounds(java.util.List)::JM,48071
48071 :: EXPR :: modify :: Ljava/util/List :: p0 $this .compounds = p1 $molList ::
48086 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSSBonds(java.util.List)::JM,48091
48091 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ssbonds = p1 $ssbonds ::
48097 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getSites()::CE,48098:CD,48104
48098 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getSites()::JM,73197:JM,73485:JM,77009:JM,76940
48101 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .sites::DD,48104
48104 :: NORM :: compound :: Ljava/util/List :: return v3::CF,48098
48106 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setSites(java.util.List)::JM,48111
48111 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sites = p1 $sites ::
48117 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addModel(java.util.List)::CD,48122:CD,48136:CD,48140:CD,48144
48122 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $model .iterator()::JM,48140
48127 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,48140
48132 :: CALL :: call :: V :: v11.setStructure(p0 $this )::CL,56281
48136 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,48140
48140 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,48127:CD,48132:CD,48136:JM,48140
48141 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .models::
48144 :: CALL :: call :: Z :: v15 = v13.add(p1 $model )::JM,48140
48161 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::CE,48162:CD,48168
48162 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.SubstructureIdentifier.getResidueRanges()::JM,41440:JM,41688:JM,44983
48165 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .ranges::DD,48168
48168 :: NORM :: compound :: Ljava/util/List :: return v3::CF,48162
48170 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getModel(int)::CE,48171:CD,48178:CD,48183:CD,48184
48171 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getModel(int)::JM,56302:JM,62049:JM,61867:JM,62137:JM,73044:JM,79545:JM,117463:JM,117569
48175 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,48183
48178 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $modelnr )::JM,48183
48183 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,48184
48184 :: NORM :: compound :: Ljava/util/List :: return v7::DD,48171
48187 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setModel(int,java.util.List)::CD,48194:CD,48200:CD,48214:CD,48218:CD,48222:CD,48226
48194 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v24 = new java.lang.IllegalArgumentException::
48200 :: CALL :: call :: Ljava/util/Iterator :: v7 = p2 $model .iterator()::JM,48218
48205 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,48218
48210 :: CALL :: call :: V :: v13.setStructure(p0 $this )::CL,56281
48214 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,48218
48218 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 28::CD,48205:CD,48210:CD,48214:JM,48218
48219 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .models::JM,48226
48222 :: CALL :: call :: Z :: v17 = v15.isEmpty()::JM,48226
48226 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 81::CD,48230:CD,48239
48227 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .models::
48230 :: CALL :: call :: Z :: v23 = v21.add(p2 $model )::JM,48218
48236 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .models::
48239 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.set(p1 $position , p2 $model )::JM,48218
48265 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getChainId()::CE,48266:CD,48272
48266 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueRange.getChainId()::JM,41507:JM,44973
48269 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chain::DD,48272
48272 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,48266
48274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getStart()::CE,48275:CD,48281
48275 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueRange.getStart()::JM,41581
48278 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .start::DD,48281
48281 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,48275
48283 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.getEnd()::CE,48284:CD,48290
48284 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.ResidueRange.getEnd()::JM,41582
48287 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .end::DD,48290
48290 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,48284
48292 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::CE,48293:CD,48301:CD,48306:CD,48307:CD,48312:CD,48313
48293 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int,int)::JM,79479
48298 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .models::JM,48306
48301 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.get(p1 $modelnr )::JM,48306:JM,48312
48306 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::JM,48312
48307 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p2 $number )::JM,48312:JM,48306
48312 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,48313
48313 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,48293
48319 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getChainID()::CE,48320:CD,48326
48320 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ChainImpl.getChainID()::JM,41608:JM,41706:JM,48403:JM,61894:JM,62113:JM,71454:JM,71514:JM,74897:JM,74902:JM,74938:JM,85463:JM,90302:JM,90339:JM,103620:JM,108588:JM,108648:JM,122810
48323 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainID::DD,48326
48326 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,48320
48328 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setChainId(java.lang.String)::JM,48333
48333 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
48339 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.size()::CD,48346:CD,48350
48343 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .models::JM,48350
48346 :: CALL :: call :: Z :: v6 = v4.isEmpty()::JM,48350
48350 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 34::CD,48354
48351 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .models::
48354 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(#(0))::
48373 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::CE,48374:CD,48379:CD,48384:CD,48389:CD,48393:CD,48394:CD,48398:CD,48403:CD,48404:CD,48405:CD,48411:CD,48416:CD,48421:CD,48426:CD,48434:CD,48439
48374 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String,int)::JM,41702:JM,74329
48379 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,48393:CL,56292
48384 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,48393
48389 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,48393
48393 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,48404
48394 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,48403:CL,48319
48398 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,48403
48403 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,48389:CD,48393:CD,48394:CD,48398:CD,48405:CF,48404
48404 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,48374
48405 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,48393
48411 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
48416 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,48403
48421 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#('))::
48426 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#( for PDB id ))::
48431 :: EXPR :: reference :: Ljava/lang/String :: v31 = p0 $this .pdb_id::
48434 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(v31)::
48439 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
48461 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::CE,48462:CD,48468
48462 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups()::JM,41701:JM,61971:JM,62038:JM,71827:JM,72491:JM,72512:JM,72542:JM,79522:JM,86613:JM,101972:JM,101855:JM,102118:JM,113042:JM,112969:JM,122948
48465 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,48468
48468 :: NORM :: compound :: Ljava/util/List :: return v3::CF,48462
48470 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupsByPDB(org.biojava.nbio.structure.ResidueNumber,org.biojava.nbio.structure.ResidueNumber)::CE,48471:CD,48476:CD,48480:CD,48484:CD,48491:CD,48537:CD,48542:CD,48547:CD,48555:CD,48560:CD,48570:CD,48574:CD,48577:CD,48582:CD,48587:CD,48595:CD,48600:CD,48611:CD,48616:CD,48621:CD,48629:CD,48634:CD,48643:CD,48647:CD,48648:CD,48653:CD,48654:CD,48657
48471 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupsByPDB(org.biojava.nbio.structure.ResidueNumber,org.biojava.nbio.structure.ResidueNumber)::JM,41701:JM,41594
48476 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $start .toString()::JM,48514:CL,56305
48480 :: CALL :: call :: Ljava/lang/String :: v8 = p2 $end .toString()::JM,48534:CL,56305
48484 :: NORM :: declaration :: Ljava/util/ArrayList :: v9 = new java.util.ArrayList::JM,48647:JM,48653
48488 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .groups::JM,48500:JM,48574
48491 :: CALL :: call :: Ljava/util/Iterator :: v13 = v11.iterator()::JM,48500:JM,48574
48496 :: CALL :: call :: Ljava/lang/Object :: v18 = v13.next()::JM,48500:JM,48574
48500 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::
48505 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,48514:CL,56305
48509 :: CALL :: call :: Z :: v25 = v23.equals(v6)::JM,48514
48514 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 77::CF,48655
48515 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,48516
48516 :: CALL :: call :: Z :: v30 = v9.add(v19)::
48525 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,48534:CL,56305
48529 :: CALL :: call :: Z :: v36 = v34.equals(v8)::JM,48534
48534 :: PRED :: IF :: Z :: if (v36 == #(0)) goto 159::CF,48657:CD,48570:CD,48574
48537 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v77 = new java.lang.StringBuilder::
48542 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(v6)::JM,48514
48547 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v80.append(#( in chain ))::
48552 :: EXPR :: reference :: Ljava/lang/String :: v83 = p0 $this .chainID::
48555 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v82.append(v83)::
48560 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::
48570 :: CALL :: call :: Z :: v16 = v13.hasNext()::JM,48500:JM,48574
48574 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 42::CD,48496:CD,48500:CD,48505:CD,48509:CD,48514:CD,48515:CD,48525:CD,48529:CD,48534:CD,48655:CD,48657:JM,48574
48577 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
48582 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v63.append(v6)::JM,48514
48587 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v67.append(#( in chain ))::
48592 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .chainID::
48595 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(v70)::
48600 :: CALL :: call :: Ljava/lang/String :: v74 = v72.toString()::
48611 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v48 = new java.lang.StringBuilder::
48616 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v48.append(v8)::JM,48534
48621 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( in chain ))::
48626 :: EXPR :: reference :: Ljava/lang/String :: v56 = p0 $this .chainID::
48629 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(v56)::
48634 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
48643 :: CALL :: call :: I :: v42 = v9.size()::JM,48647
48647 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/Group :: v43 = new org.biojava.nbio.structure.Group[]::JM,48653
48648 :: CALL :: call :: [Ljava/lang/Object :: v45 = v9.toArray(v43)::JM,48653
48653 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::CF,48654
48654 :: NORM :: compound :: [Lorg/biojava/nbio/structure/Group :: return v46::DD,48471
48655 :: EXPR :: assign :: null :: PHI v27 = v37, #(1)::DD,48515:DD,48657
48657 :: EXPR :: assign :: null :: PHI v37 = #(0), v27::DD,48655
48706 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = #(null)::
48709 :: EXPR :: reference :: Ljava/lang/String :: v5 = org.biojava.nbio.structure.ChainImpl.DEFAULT_CHAIN_ID::DD,48711
48711 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = v5::
48714 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,48718
48718 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v6::
48721 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,48725
48725 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = v8::
48728 :: NORM :: declaration :: Ljava/util/HashMap :: v10 = new java.util.HashMap::DD,48732
48732 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbResnumMap = v10::
48735 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = #(null)::
48752 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setChainID(java.lang.String)::JM,48757
48757 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainID = p1 $nam ::
48763 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addChain(org.biojava.nbio.structure.Chain,int)::CD,48776:CD,48780:JM,48807
48773 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .models::JM,48780
48776 :: CALL :: call :: Z :: v8 = v6.isEmpty()::JM,48780
48780 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 50::CF,48781:CD,48785:CD,48793:CD,48802:CD,48807:CD,48808
48781 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::
48785 :: CALL :: call :: Z :: v19 = v16.add(p1 $chain )::JM,48807
48790 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .models::
48793 :: CALL :: call :: Z :: v22 = v20.add(v16)::
48799 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .models::JM,48807
48802 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.get(p2 $modelnr )::JM,48807
48807 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::
48808 :: CALL :: call :: Z :: v15 = v13.add(p1 $chain )::JM,48807
48832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::CE,48833:CD,48839
48833 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getSeqResGroups()::JM,61999:JM,101554:JM,101611:JM,101546:JM,101699:JM,101764:JM,101707
48836 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .seqResGroups::DD,48839
48839 :: NORM :: compound :: Ljava/util/List :: return v3::CF,48833
48841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqResGroups(java.util.List)::CD,48846:CD,48860:CD,48864:JM,48865
48846 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,48864:JM,48865
48851 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,48864
48856 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,56376
48860 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,48864
48864 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,48851:CD,48856:CD,48860:JM,48864
48865 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResGroups = p1 $groups ::
48888 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSeqMisMatches(java.util.List)::JM,48893
48893 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqMisMatches = p1 $seqMisMatches ::
48899 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.addGroup(org.biojava.nbio.structure.Group)::CD,48904:CD,48908:CD,48912:CD,48926:CD,48930:CD,48934:CD,48939:CD,48943:CD,48948:CD,49080:JM,49058
48904 :: CALL :: call :: V :: p1 $group .setChain(p0 $this )::CL,56376
48908 :: CALL :: call :: Ljava/util/List :: v6 = p1 $group .getAltLocs()::JM,48930:CL,56406
48912 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,48930
48917 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,48930
48922 :: CALL :: call :: V :: v14.setChain(p0 $this )::CL,56376
48926 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,48930
48930 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 23::CD,48917:CD,48922:CD,48926:JM,48930
48931 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .groups::
48934 :: CALL :: call :: Z :: v18 = v16.add(p1 $group )::JM,49058
48939 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v21 = p1 $group .getResidueNumber()::JM,48943:CL,56367
48943 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 78::CF,49080:CD,48944
48944 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::JM,49080:CL,56305
48948 :: PRED :: IF :: Z :: if (v24 == #(null)) goto 252::CD,48952:CD,48956:CD,48957:CD,48964:CD,48969
48949 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .groups::JM,48956
48952 :: CALL :: call :: I :: v27 = v25.size()::JM,48956
48956 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v27 - #(1)::
48957 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
48964 :: CALL :: call :: Z :: v34 = v32.containsKey(v24)::JM,48969
48969 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 240::CD,48999:CD,49004:CD,49005:CD,49009:CD,49029:CD,49034:CD,49035:CD,49039:CD,49058:CD,49059:CD,49073
48993 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .groups::
48999 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v24)::JM,49004
49004 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::
49005 :: CALL :: call :: I :: v54 = v52.intValue()::
49009 :: CALL :: call :: Ljava/lang/Object :: v56 = v48.get(v54)::
49023 :: EXPR :: reference :: Ljava/util/List :: v61 = p0 $this .groups::
49029 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v24)::JM,49034
49034 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::
49035 :: CALL :: call :: I :: v67 = v65.intValue()::
49039 :: CALL :: call :: Ljava/lang/Object :: v69 = v61.get(v67)::
49058 :: EXPR :: assign :: Z :: v74=p1 $group  INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,49059
49059 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 252::CD,49063
49063 :: CALL :: call :: Ljava/lang/Object :: v77 = v75.put(v24, v31)::
49073 :: CALL :: call :: Ljava/lang/Object :: v37 = v35.put(v24, v31)::
49080 :: EXPR :: assign :: null :: PHI v24 = #(null), v23::DD,48948
49141 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.nrModels()::CE,49142:CD,49148:CD,49152
49142 :: EXIT :: exit :: I :: org.biojava.nbio.structure.StructureImpl.nrModels()::JM,41694:JM,62066:JM,62146:JM,72571:JM,72749:JM,73053:JM,86624:JM,104177:JM,117555
49145 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .models::JM,49152
49148 :: CALL :: call :: I :: v5 = v3.size()::JM,49152
49152 :: NORM :: compound :: I :: return v5::CF,49142
49154 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.toCanonical()::CD,49167
49167 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,45662
49180 :: ENTR :: entry :: null :: org.biojava.nbio.structure.URLIdentifier.toCanonical()::CD,49190:CD,49194:CD,49199:CD,49206:CD,49211:CD,49254:CD,49262:CD,49267:CD,49276:CD,49307:CD,49308
49190 :: CALL :: call :: Ljava/util/Map :: v8 = parseQuery(v6)::CL,46296
49194 :: CALL :: call :: Z :: v22 = v8.containsKey(#(pdbid))::JM,49199
49199 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 40::CF,49307:CD,49200:CD,49205
49200 :: CALL :: call :: Ljava/lang/Object :: v25 = v8.get(#(pdbid))::JM,49205
49205 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::DD,49307
49206 :: CALL :: call :: Z :: v30 = v8.containsKey(#(residues))::JM,49211
49211 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 69::CD,49212:CD,49218:CD,49223:CD,49228:CD,49308
49212 :: CALL :: call :: Ljava/lang/Object :: v44 = v8.get(#(residues))::
49218 :: CALL :: call :: Ljava/util/List :: v47 = parseMultiple(v45)::CL,45662
49223 :: CALL :: call :: Z :: v33 = v8.containsKey(#(chainid))::JM,49228
49228 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 141::CF,49308:CD,49229:CD,49230:CD,49231:CD,49247
49229 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/ResidueRange :: v35 = new org.biojava.nbio.structure.ResidueRange[]::JM,49247:CF,49230
49230 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v36 = new org.biojava.nbio.structure.ResidueRange::DD,49243
49231 :: CALL :: call :: Ljava/lang/Object :: v38 = v8.get(#(chainid))::
49243 :: EXPR :: modify :: Ljava/lang/Object :: v35[#(0)] = v36::
49247 :: CALL :: call :: Ljava/util/List :: v42 = asList(v35)::JM,49247
49254 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
49262 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
49267 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
49276 :: PRED :: IF :: Z :: if (v49 != #(null)) goto 168::CD,49295
49295 :: CALL :: call :: Ljava/lang/String :: v62 = guessPDBID(v60)::CL,45003
49307 :: EXPR :: assign :: null :: PHI v27 = #(null), v26::DD,49308
49308 :: EXPR :: assign :: null :: PHI v49 = v27, v27, v27, #(null)::DD,49276
49351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.toCanonical()::CD,49364
49364 :: CALL :: call :: Ljava/util/List :: v9 = parseMultiple(v7)::CL,56499
49377 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.toCanonical()::CD,49381:CD,49385:CD,49389:CD,49393:CD,49397:CD,49398:CD,49403:CD,49407:CD,49411:CD,49441:CD,49445:CD,49447
49381 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
49385 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getDomainName()::CL,56555
49389 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getDomainName()::JM,49397:CL,56555
49393 :: CALL :: call :: I :: v10 = v8.length()::JM,49397
49397 :: EXPR :: assign :: Ljava/lang/Object :: v12 = v10 - #(3)::
49398 :: CALL :: call :: C :: v14 = v6.charAt(v12)::
49403 :: CALL :: call :: Ljava/lang/String :: v16 = valueOf(v14)::
49407 :: CALL :: call :: Ljava/util/List :: v18 = p0 $this .getSegments()::JM,49445:CL,56564
49411 :: CALL :: call :: Ljava/util/Iterator :: v20 = v18.iterator()::JM,49445
49416 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.next()::JM,49445
49421 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v27 = new org.biojava.nbio.structure.ResidueRange::
49436 :: CALL :: call :: Z :: v34 = v3.add(v27)::
49441 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,49445
49445 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 44::CD,49416:CD,49421:JM,56618:JM,56604:CD,49436:CD,49441:JM,49445
49447 :: CALL :: call :: Ljava/lang/String :: v37 = p0 $this .getThePdbId()::CL,46191
49484 :: CALL :: call :: V :: p1 $sm .checkPermission(v4)::
49495 :: EXIT :: exit :: Ljava/net/URLStreamHandler :: java.net.URL.getURLStreamHandler(java.lang.String)::JM,42228
49498 :: EXPR :: reference :: Ljava/util/Hashtable :: v3 = java.net.URL.handlers::JM,49505
49500 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $protocol )::JM,49505:JM,49682:JM,49685:JM,49512:JM,49656:JM,49609:JM,49646:JM,49679
49505 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::DD,49506:DD,49679:DD,49687
49506 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 315::CF,49687:CD,49507:CD,49509:CD,49517:CD,49639:CD,49641:CD,49646:CD,49647:CD,49675:CD,49679:CD,49680:CD,49684
49507 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v9 = java.net.URL.factory::DD,49509
49509 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 36::CF,49679:CD,49510:CD,49512:CD,49680
49510 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v10 = java.net.URL.factory::JM,49512:JM,49679
49512 :: CALL :: call :: Ljava/net/URLStreamHandler :: v12 = v10.createURLStreamHandler(p1 $protocol )::JM,49512:JM,49679:JM,49505:JM,49682:JM,49685:JM,49656:JM,49609:JM,49646
49517 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 233::CF,49684:CD,49524:CD,49528:CD,49529:CD,49548:CD,49549:CD,49557:CD,49562:CD,49566:CD,49630:CD,49683
49524 :: CALL :: call :: Ljava/lang/Object :: v21 = doPrivileged(v16)::JM,49528
49528 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,49529
49529 :: PRED :: IF :: Z :: if (v22 == #()) goto 88::CF,49530:CD,49531:CD,49539:CD,49544
49530 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
49531 :: CALL :: call :: Ljava/lang/String :: v25 = valueOf(v22)::
49539 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v23.append(#(|))::
49544 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
49548 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
49549 :: CALL :: call :: Ljava/lang/String :: v35 = valueOf(v32)::
49557 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(#(sun.net.www.protocol))::
49562 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
49566 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v42 = new java.util.StringTokenizer::JM,49635
49573 :: CALL :: call :: Ljava/lang/String :: v47 = v42.nextToken()::
49577 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::
49581 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::JM,49682:JM,49609
49582 :: CALL :: call :: Ljava/lang/String :: v52 = valueOf(v49)::
49590 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v50.append(#(.))::JM,49682:JM,49609
49595 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p1 $protocol )::JM,49682:JM,49609:JM,49505:JM,49685:JM,49512:JM,49656:JM,49646:JM,49679
49600 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#(.Handler))::JM,49682:JM,49685:JM,49609:JM,49646
49605 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::JM,49682:JM,49609
49609 :: CALL :: call :: Ljava/lang/Class :: v65 = forName(v63)::JM,49682:JM,49609
49614 :: CALL :: call :: Ljava/lang/ClassLoader :: v68 = getSystemClassLoader()::JM,49682
49618 :: CALL :: call :: Ljava/lang/Class :: v70 = v68.loadClass(v63)::JM,49682:JM,49609
49623 :: PRED :: IF :: Z :: if (v72 == #(null)) goto 222::CF,49683:CD,49624:CD,49628
49624 :: CALL :: call :: Ljava/lang/Object :: v75 = v72.newInstance()::JM,49624:JM,49628
49628 :: EXPR :: assign :: Ljava/lang/Object :: v76 = CHECKCAST v75::DD,49683
49630 :: PRED :: IF :: Z :: if (v77 != #(null)) goto 233::CF,49684:CD,49631:CD,49635
49631 :: CALL :: call :: Z :: v45 = v42.hasMoreTokens()::JM,49635
49635 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 127::CF,49684:CD,49573:CD,49577:CD,49581:CD,49582:CD,49590:CD,49595:CD,49600:CD,49605:CD,49609:CD,49623:CD,49630:CD,49682:CD,49683
49639 :: EXPR :: reference :: Ljava/util/Hashtable :: v82 = java.net.URL.handlers::JM,49646
49641 :: CALL :: call :: Ljava/lang/Object :: v84 = v82.get(p1 $protocol )::JM,49646:JM,49505:JM,49682:JM,49685:JM,49512:JM,49656:JM,49609:JM,49679
49646 :: EXPR :: assign :: Ljava/lang/Object :: v85 = CHECKCAST v84::DD,49647:DD,49649:DD,49685
49647 :: PRED :: IF :: Z :: if (v85 == #(null)) goto 265::CD,49649:CD,49650:CD,49661:CD,49662:CD,49675:CD,49685:CD,49686:CD,49687
49649 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v85::DD,49495
49650 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 287::CF,49685:CD,49651:CD,49653
49651 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v86 = java.net.URL.factory::DD,49653
49653 :: PRED :: IF :: Z :: if (v86 == #(null)) goto 287::CF,49685:CD,49654:CD,49656
49654 :: EXPR :: reference :: Ljava/net/URLStreamHandlerFactory :: v87 = java.net.URL.factory::JM,49685:JM,49656
49656 :: CALL :: call :: Ljava/net/URLStreamHandler :: v89 = v87.createURLStreamHandler(p1 $protocol )::JM,49685:JM,49656:JM,49505:JM,49682:JM,49512:JM,49609:JM,49646:JM,49679
49661 :: PRED :: IF :: Z :: if (v90 == #(null)) goto 294::CF,49686
49662 :: PRED :: IF :: Z :: if (v91 == #(null)) goto 307::CD,49663:CD,49665
49663 :: EXPR :: reference :: Ljava/util/Hashtable :: v92 = java.net.URL.handlers::
49665 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.put(p1 $protocol , v91)::JM,49505:JM,49682:JM,49685:JM,49512:JM,49656:JM,49609:JM,49646:JM,49679
49675 :: NORM :: compound :: Ljava/net/URLStreamHandler :: return v96::DD,49495
49679 :: EXPR :: assign :: null :: PHI v14 = v6, v12::CF,49680:DD,49517:DD,49683:DD,49684
49680 :: EXPR :: assign :: null :: PHI v15 = #(0), #(1)::DD,49650:CF,49517
49682 :: EXPR :: assign :: null :: PHI v72 = v65, #(null), v70::DD,49623:JM,49624:JM,49628
49683 :: EXPR :: assign :: null :: PHI v77 = v14, v77, v76, v77::DD,49630:DD,49683:DD,49684
49684 :: EXPR :: assign :: null :: PHI v80 = v14, v77, v77::DD,49686
49685 :: EXPR :: assign :: null :: PHI v90 = v85, v85, v89::DD,49661:DD,49686
49686 :: EXPR :: assign :: null :: PHI v91 = v80, v90::DD,49662:JM,49505:JM,49682:JM,49685:JM,49609:JM,49646:JM,49679:DD,49687
49687 :: EXPR :: assign :: null :: PHI v96 = v6, v91::CF,49675
51447 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::CF,51448:CD,51451:CD,51453
51448 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getSplitDirPath()::JM,44117:JM,44054
51451 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_SPLIT_DIR::CF,51453
51453 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,51448
51455 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::CF,51456:CD,51459:CD,51461
51456 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getSplitDirPath()::JM,44117:JM,44054
51459 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_SPLIT_DIR::CF,51461
51461 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,51456
51463 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::CF,51464:CD,51467:CD,51469
51464 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getObsoleteDirPath()::JM,44077:JM,44143
51467 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.PDBFileReader.PDB_OBSOLETE_DIR::CF,51469
51469 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,51464
51471 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::CF,51472:CD,51475:CD,51477
51472 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getObsoleteDirPath()::JM,44077:JM,44143
51475 :: EXPR :: reference :: [Ljava/lang/String :: v3 = org.biojava.nbio.structure.io.MMCIFFileReader.MMCIF_OBSOLETE_DIR::CF,51477
51477 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,51472
51837 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainDescriptionInstalled()::CD,51844:CD,51848:CD,51861:CD,51873:CD,51884:CD,51896
51841 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainDescription::JM,51848
51844 :: CALL :: call :: Z :: v5 = v3.get()::JM,51848
51848 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,51850:CD,51854:CD,51878:CD,51904
51850 :: CALL :: call :: Z :: v8 = p0 $this .domainDescriptionFileAvailable()::JM,51854:CL,59541
51854 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,51855
51855 :: CALL :: call :: V :: p0 $this .downloadDomainDescriptionFile()::CL,59565
51861 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
51870 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainDescription::
51873 :: CALL :: call :: V :: v16.set(#(0))::
51878 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile()::CL,59608
51884 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
51893 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainDescription::
51896 :: CALL :: call :: V :: v24.set(#(0))::
51901 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainDescription::JM,51904
51904 :: CALL :: call :: V :: v26.set(#(1))::JM,51904
51920 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomallInstalled()::CD,51924:CD,51930:CD,51934:CD,51963:CD,51975:CD,51986:CD,51998
51924 :: CALL :: call :: V :: p0 $this .ensureDomainListInstalled()::CL,59657
51927 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v4 = p0 $this .installedDomainList::JM,51934
51930 :: CALL :: call :: Z :: v6 = v4.get()::JM,51934
51934 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 24::CD,51938:CD,51946:CD,51950
51935 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v33 = p0 $this .installedDomall::JM,51938
51938 :: CALL :: call :: V :: v33.set(#(0))::JM,51938
51943 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedDomall::JM,51950
51946 :: CALL :: call :: Z :: v10 = v8.get()::JM,51950
51950 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 35::CD,51952:CD,51956:CD,51980:CD,52006
51952 :: CALL :: call :: Z :: v12 = p0 $this .domallFileAvailable()::JM,51956:CL,59740
51956 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 74::CD,51957
51957 :: CALL :: call :: V :: p0 $this .downloadDomallFile()::CL,59764
51963 :: CALL :: call :: Ljava/lang/String :: v18 = v14.getMessage()::
51972 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v20 = p0 $this .installedDomall::
51975 :: CALL :: call :: V :: v20.set(#(0))::
51980 :: CALL :: call :: V :: p0 $this .parseCathDomall()::CL,59807
51986 :: CALL :: call :: Ljava/lang/String :: v26 = v23.getMessage()::
51995 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v28 = p0 $this .installedDomall::
51998 :: CALL :: call :: V :: v28.set(#(0))::
52003 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v30 = p0 $this .installedDomall::JM,52006
52006 :: CALL :: call :: V :: v30.set(#(1))::JM,52006
52027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.getEcodDatabase(java.lang.String)::CD,52031:CD,52036:CD,52041:CD,52046:CD,52059:CD,52064:CD,52069:CD,52077:CD,52081:CD,52085:CD,52090:CD,52091:CD,52097:CD,52182:CD,52187:CD,52192:CD,52206:CD,52207
52031 :: PRED :: IF :: Z :: if (p1 $version  != #(null)) goto 8::CF,52206:CD,52032
52032 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.ecod.EcodFactory.defaultVersion::DD,52206
52036 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
52041 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(v5)::
52046 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
52059 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
52064 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(v5)::
52069 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
52077 :: CALL :: call :: V :: releaseReferences()::CL,59856
52081 :: CALL :: call :: Ljava/lang/String :: v28 = v5.toLowerCase()::
52085 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,52090
52090 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,52091:JM,52096
52091 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 96::CF,52207:CD,52092:CD,52096
52092 :: CALL :: call :: Ljava/lang/Object :: v33 = v31.get()::JM,52096
52096 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::DD,52207
52097 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 210::CD,52101:JM,29555:JM,29548:CD,52119:CD,52127:CD,52131:CD,52136:CD,52144:CD,52148:CD,52152:CD,52157
52101 :: CALL :: call :: Ljava/lang/String :: v40 = v38.getSimpleName()::
52119 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodInstallation :: v46 = new org.biojava.nbio.structure.ecod.EcodInstallation::
52127 :: CALL :: call :: Ljava/lang/String :: v50 = v5.toLowerCase()::
52131 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v51 = new java.lang.ref.SoftReference::
52136 :: CALL :: call :: Ljava/lang/Object :: v54 = v48.put(v50, v51)::
52144 :: CALL :: call :: Ljava/lang/String :: v57 = v46.getVersion()::CL,60006
52148 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toLowerCase()::
52152 :: CALL :: call :: Z :: v61 = v55.containsKey(v59)::JM,52157
52157 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 210::CD,52160:CD,52164:CD,52168:CD,52173
52160 :: CALL :: call :: Ljava/lang/String :: v65 = v46.getVersion()::CL,60006
52164 :: CALL :: call :: Ljava/lang/String :: v68 = v65.toLowerCase()::
52168 :: NORM :: declaration :: Ljava/lang/ref/SoftReference :: v69 = new java.lang.ref.SoftReference::
52173 :: CALL :: call :: Ljava/lang/Object :: v72 = v63.put(v68, v69)::
52182 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::
52187 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v76.append(v5)::
52192 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
52206 :: EXPR :: assign :: null :: PHI v5 = p1 $version , v4::
52207 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,52097
52255 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::CE,52256:CD,52315:CD,52316:CD,52324:CD,52329:CD,52330
52256 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainsForPdb(java.lang.String)::JM,45143:JM,45194
52293 :: CALL :: call :: V :: p0 $this .indexDomains()::CL,60030
52312 :: EXPR :: reference :: Ljava/util/Map :: v11 = p0 $this .domainMap::DD,52315
52315 :: PRED :: IF :: Z :: if (v11 == #(null)) goto 27::CD,52293:CF,52316
52316 :: PRED :: IF :: Z :: if (p1 $pdbId  == #(null)) goto 96::CD,52317
52317 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $pdbId .toLowerCase()::
52324 :: CALL :: call :: Ljava/lang/Object :: v32 = v30.get(v29)::JM,52329
52329 :: EXPR :: assign :: Ljava/lang/Object :: v33 = CHECKCAST v32::DD,52330:JM,52381
52330 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 139::CF,52348:CD,52347:CD,52349:CD,52357:CD,52377:CD,52381:CD,52398
52347 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,52256
52348 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,52398
52349 :: CALL :: call :: I :: v36 = v33.size()::
52357 :: CALL :: call :: Ljava/util/Iterator :: v39 = v33.iterator()::JM,52381
52362 :: CALL :: call :: Ljava/lang/Object :: v44 = v39.next()::JM,52381
52367 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v46 = new org.biojava.nbio.structure.ecod.EcodDomain::
52372 :: CALL :: call :: Z :: v49 = v34.add(v46)::
52377 :: CALL :: call :: Z :: v41 = v39.hasNext()::JM,52381
52381 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 166::CD,52362:CD,52367:CD,52372:CD,52377:JM,52381
52398 :: NORM :: compound :: Ljava/util/List :: return v34::DD,52256
52457 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::CE,52458:CD,52464
52458 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getDomainId()::JM,45188:JM,60088:JM,60089:JM,60093
52461 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainId::DD,52464
52464 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,52458
52466 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String)::CD,52470
52470 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDatabase :: v5 = getSCOP(p1 $version , #(0))::CL,60393
52478 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::CE,52479:CD,52483:CD,52488:CD,52489:CD,52490:CD,52498:CD,52503:CD,52508:CD,52513:CD,52518:CD,52522:CD,52527:CD,52537
52479 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainByScopID(java.lang.String)::JM,45275:JM,45276
52483 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = p0 $this .requestRemoteDomainByScopID(p1 $scopId )::JM,52488:CL,60513
52488 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v5::DD,52479
52489 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v7 = new java.lang.RuntimeException::
52490 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
52495 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .server::
52498 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(v11)::
52503 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(getDomainByScopID?scopId=))::
52508 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(p1 $scopId )::
52513 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#(&version=))::
52518 :: CALL :: call :: Ljava/lang/String :: v23 = p0 $this .getScopVersion()::CL,60608
52522 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v23)::
52527 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
52537 :: EXPR :: assign :: Ljava/lang/Exception :: v6 = catch <exc>::
52540 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::CE,52541:CD,52545:CD,52561:CD,52566:CD,52571:CD,52580:CD,52586:CD,52591:JM,52612
52541 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainByScopID(java.lang.String)::JM,45275:JM,45276
52545 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,60718
52561 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
52566 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v31.append(p1 $scopId )::JM,52612
52571 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,52612
52580 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $scopId .substring(#(1), #(5))::JM,52612
52586 :: CALL :: call :: Ljava/util/List :: v16 = p0 $this .getDomainsForPDB(v14)::JM,52602:JM,52618:JM,52591:CL,52645
52591 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 71::CD,52592:CD,52593:CD,52614:CD,52618:JM,52602
52592 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,52541
52593 :: CALL :: call :: Ljava/util/Iterator :: v19 = v16.iterator()::JM,52602:JM,52618
52598 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,52602:JM,52618
52602 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,52613
52603 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getScopId()::JM,52612:CL,52902
52607 :: CALL :: call :: Z :: v29 = v27.equalsIgnoreCase(p1 $scopId )::JM,52612
52612 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 110::CD,52613:CD,52614:CD,52618:JM,52602
52613 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v25::DD,52541
52614 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,52602:JM,52618
52618 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,52598:CD,52602:CD,52603:CD,52607:CD,52612:CD,52619:JM,52618
52619 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,52541
52645 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::CE,52646:CD,52650:CD,52663:CD,52667:CD,52672:CD,52673:CD,52677:CD,52700:CD,52701:CD,52706:CD,52711:CD,52716:CD,52733
52646 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.ScopInstallation.getDomainsForPDB(java.lang.String)::JM,45338:JM,45437:JM,52602:JM,52618:JM,52591
52650 :: CALL :: call :: V :: p0 $this .ensureClaInstalled()::CL,60718
52663 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .toLowerCase()::
52667 :: CALL :: call :: Ljava/lang/Object :: v12 = v8.get(v10)::JM,52672
52672 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,52677:JM,52730:CF,52673
52673 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,52678:DD,52731
52677 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 49::CD,52678:CD,52679:CD,52726:CD,52730:CD,52731
52678 :: NORM :: compound :: Ljava/util/List :: return v14::DD,52646
52679 :: CALL :: call :: Ljava/util/Iterator :: v18 = v13.iterator()::JM,52730
52684 :: CALL :: call :: Ljava/lang/Object :: v23 = v18.next()::JM,52730
52689 :: CALL :: call :: Ljava/lang/Object :: v26 = v24.clone()::JM,52693:CL,60782
52693 :: EXPR :: assign :: Ljava/lang/Object :: v27 = CHECKCAST v26::
52694 :: CALL :: call :: Z :: v29 = v14.add(v27)::
52700 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v31 = new java.lang.RuntimeException::
52701 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
52706 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v32.append(v34)::
52711 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( subclass does not su...))::
52716 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
52726 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,52730
52730 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 61::CD,52684:CD,52689:CD,52693:CD,52694:CD,52726:JM,52730:CF,52731
52731 :: NORM :: compound :: Ljava/util/List :: return v14::DD,52646
52733 :: EXPR :: assign :: Ljava/lang/Exception :: v30 = catch <exc>::
52755 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::CE,52756:CD,52761:CD,52765:CD,52773:CD,52778:CD,52783:CD,52788:CD,52792:CD,52797:CD,52805:CD,52809:CD,52813:CD,52817:CD,52821:CD,52831:CD,52832:CD,52840:CD,52845:CD,52850:CD,52855:CD,52860:CD,52864:CD,52869:CD,52879:CD,52880:CD,52881
52756 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getDomainsForPDB(java.lang.String)::JM,45338:JM,45437
52761 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
52765 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
52773 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getDomainsForPDB?pdbId=))::
52778 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p1 $pdbId )::
52783 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(&version=))::
52788 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getScopVersion()::CL,60608
52792 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
52797 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
52805 :: CALL :: call :: Ljava/io/InputStream :: v27 = getInputStream(v5)::CL,53407
52809 :: CALL :: call :: Ljava/lang/String :: v29 = convertStreamToString(v27)::JM,52817:JM,52821:CL,53421
52813 :: CALL :: call :: Ljava/lang/String :: v31 = v29.trim()::JM,52817:JM,52821
52817 :: CALL :: call :: Z :: v33 = v31.isEmpty()::JM,52817:JM,52821
52821 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 139::CF,52881:CD,52822:CD,52826
52822 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: v36 = fromXML(v29)::JM,52881:JM,52826:CL,60920
52826 :: CALL :: call :: Ljava/util/List :: v38 = v36.getScopDomain()::JM,52881:JM,52826
52831 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v40 = new java.lang.RuntimeException::
52832 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
52837 :: EXPR :: reference :: Ljava/lang/String :: v44 = p0 $this .server::
52840 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(v44)::
52845 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v46.append(#(getDomainsForPDB?pdbId=))::
52850 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v48.append(p1 $pdbId )::
52855 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v50.append(#(&version=))::
52860 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .getScopVersion()::CL,60608
52864 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
52869 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::
52879 :: NORM :: compound :: Ljava/util/List :: return v60::DD,52756
52880 :: EXPR :: assign :: Ljava/lang/Exception :: v39 = catch <exc>::
52881 :: EXPR :: assign :: null :: PHI v60 = #(null), v38::CF,52879
52902 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::CE,52903:CD,52909
52903 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.ScopDomain.getScopId()::JM,52612
52906 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .scopId::DD,52909
52909 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,52903
52911 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::CE,52912:CD,52917:CD,52922:CD,52926:CD,52979:CD,52980:CD,52985:CD,52990:CD,52995:CD,53025:CD,53026:CD,53031:CD,53036:CD,53045
52912 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueRange :: org.biojava.nbio.structure.ResidueRange.parse(java.lang.String)::JM,56526
52917 :: CALL :: call :: Ljava/util/regex/Matcher :: v5 = v3.matcher(p1 $s )::JM,52937:JM,52956:JM,52926
52922 :: CALL :: call :: Z :: v7 = v5.matches()::JM,52937:JM,52956:JM,52926
52926 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 125::CD,52927:CD,52932:CD,52937:CD,52971:CD,52978:CD,53007:CD,53012:CD,53017:CD,53024:JM,52956:JM,52926
52927 :: CALL :: call :: Ljava/lang/String :: v28 = v5.group(#(1))::JM,52937:JM,52956:JM,52926
52932 :: CALL :: call :: Ljava/lang/String :: v31 = v5.group(#(2))::JM,52937:JM,52956:JM,52926
52937 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 80::CD,52938:CD,52943:CD,52951:CD,52956:JM,52937:JM,52926
52938 :: CALL :: call :: Ljava/lang/String :: v33 = v5.group(#(2))::JM,52937:JM,52956:JM,52926
52943 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = fromString(v33)::CL,60986
52951 :: CALL :: call :: Ljava/lang/String :: v39 = v5.group(#(3))::JM,52937:JM,52956:JM,52926
52956 :: PRED :: IF :: Z :: if (v39 != #(null)) goto 67::CD,52958:CD,52963:JM,52937:JM,52956:JM,52926
52958 :: CALL :: call :: Ljava/lang/String :: v41 = v5.group(#(3))::JM,52937:JM,52956:JM,52926
52963 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v43 = fromString(v41)::CL,60986
52971 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v47 = new org.biojava.nbio.structure.ResidueRange::DD,52978
52978 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v47::DD,52912
52979 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v53 = new java.lang.IllegalArgumentException::
52980 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
52985 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v54.append(p1 $s )::
52990 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#( was not valid))::
52995 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
53007 :: CALL :: call :: Ljava/util/regex/Matcher :: v11 = v9.matcher(p1 $s )::
53012 :: CALL :: call :: Z :: v13 = v11.matches()::
53017 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueRange :: v23 = new org.biojava.nbio.structure.ResidueRange::DD,53024
53024 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueRange :: return v23::DD,52912
53025 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v14 = new java.lang.IllegalArgumentException::
53026 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
53031 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v15.append(p1 $s )::
53036 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
53045 :: EXPR :: assign :: Ljava/lang/Exception :: v49 = catch <exc>::
53102 :: PRED :: IF :: Z :: if (p1 $cacheFileName  == #(null)) goto 18::CD,53103
53103 :: CALL :: call :: Ljava/util/Map :: v7 = p0 $this .reloadFromFile()::CL,61082
53125 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.loadRepresentativeDomains()::CD,53130:CD,53134:CD,53142:CD,53147:CD,53162:CD,53166:CD,53170:CD,53174:CD,53180:CD,53184:CD,53193:CD,53197:CD,53244:CD,53248:CD,53252:CD,53260:CD,53265:CD,53275:CD,53283:CD,53288
53130 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
53134 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
53142 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v5.append(#(getRepresentativePDPD...))::
53147 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
53162 :: CALL :: call :: Ljava/io/InputStream :: v20 = getInputStream(v4)::CL,53407
53166 :: CALL :: call :: Ljava/lang/String :: v22 = convertStreamToString(v20)::CL,53421
53170 :: CALL :: call :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: v24 = fromXML(v22)::JM,53248:JM,53202:JM,53174:JM,53206:JM,53207:JM,53193:JM,53180:JM,53212:JM,53244:JM,53197:CL,61278
53174 :: CALL :: call :: Ljava/util/Map :: v26 = v24.getAssignments()::JM,53248:JM,53202:JM,53174:JM,53206:JM,53207:JM,53193:JM,53180:JM,53212:JM,53244:JM,53197
53180 :: CALL :: call :: I :: v30 = v26.size()::JM,53248:JM,53202:JM,53206:JM,53207:JM,53193:JM,53180:JM,53212:JM,53244:JM,53197
53184 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,53248:JM,53202:JM,53206:JM,53212:JM,53244:JM,53197
53193 :: CALL :: call :: Ljava/util/Set :: v35 = v26.keySet()::JM,53248:JM,53202:JM,53206:JM,53207:JM,53193:JM,53180:JM,53212:JM,53244:JM,53197
53197 :: CALL :: call :: Ljava/util/Iterator :: v37 = v35.iterator()::JM,53248:JM,53202:JM,53206:JM,53212:JM,53244:JM,53197
53202 :: CALL :: call :: Ljava/lang/Object :: v42 = v37.next()::JM,53248:JM,53202:JM,53206:JM,53244
53206 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::JM,53248:JM,53202:JM,53206:JM,53207:JM,53212:JM,53244:JM,53197:JM,53193:JM,53180
53207 :: CALL :: call :: Ljava/lang/Object :: v45 = v26.get(v43)::JM,53248:JM,53202:JM,53206:JM,53207:JM,53193:JM,53180:JM,53212:JM,53244:JM,53197
53212 :: EXPR :: assign :: Ljava/lang/Object :: v46 = CHECKCAST v45::JM,53222:JM,53213
53213 :: CALL :: call :: [Ljava/lang/String :: v49 = v46.split(#(,))::JM,53222:JM,53213
53218 :: NORM :: declaration :: Ljava/util/TreeSet :: v50 = new java.util.TreeSet::
53222 :: EXPR :: assign :: I :: v52 = v49.length::DD,53234
53228 :: CALL :: call :: Z :: v55 = v50.add(v53)::
53233 :: EXPR :: assign :: Ljava/lang/Object :: v57 = v58 + #(1)::DD,53300
53234 :: PRED :: IF :: Z :: if (v58 < v52) goto 165::CD,53228:CD,53233:CD,53300
53238 :: CALL :: call :: Ljava/lang/Object :: v61 = v59.put(v43, v50)::
53244 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,53248:JM,53202:JM,53206:JM,53244
53248 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 105::CD,53202:CD,53206:CD,53207:CD,53212:CD,53213:CD,53218:CD,53222:CD,53234:CD,53238:CD,53244:CD,53300:JM,53248
53252 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
53257 :: EXPR :: reference :: Ljava/lang/String :: v68 = p0 $this .server::
53260 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(v68)::
53265 :: CALL :: call :: Ljava/lang/String :: v72 = v70.toString()::
53275 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
53280 :: EXPR :: reference :: Ljava/lang/String :: v78 = p0 $this .server::
53283 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v78)::
53288 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
53300 :: EXPR :: assign :: null :: PHI v58 = #(0), v57::DD,53233:DD,53234
53355 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::CE,53356:CD,53360:JM,53376:JM,53365:JM,53388
53356 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.domain.RemotePDPProvider.checkDomainRanges(java.util.SortedSet)::JM,45893
53360 :: PRED :: IF :: Z :: if (p1 $domainRanges  == #(null)) goto 14::CD,53361:CD,53365:CD,53366:JM,53360:JM,53376:JM,53388
53361 :: CALL :: call :: I :: v6 = p1 $domainRanges .size()::JM,53360:JM,53376:JM,53365:JM,53388
53365 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 16::CD,53366:CD,53367:CD,53384:CD,53388:JM,53360:JM,53376:JM,53365
53366 :: NORM :: compound :: Z :: return #(1)::DD,53356
53367 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $domainRanges .iterator()::JM,53360:JM,53376:JM,53365:JM,53388
53372 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,53376:JM,53388
53376 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,53377:JM,53382
53377 :: PRED :: IF :: Z :: if (v14 == #(null)) goto 49::CD,53378:CD,53382:CD,53384:CD,53388:JM,53376
53378 :: CALL :: call :: I :: v16 = v14.length()::JM,53382
53382 :: PRED :: IF :: Z :: if (v16 <= #(0)) goto 49::CD,53383:CD,53384:CD,53388:JM,53376
53383 :: NORM :: compound :: Z :: return #(0)::DD,53356
53384 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,53376:JM,53388
53388 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 26::CD,53372:CD,53376:CD,53377:CD,53389:JM,53388
53389 :: NORM :: compound :: Z :: return #(1)::DD,53356
53407 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL)::CD,53411
53411 :: CALL :: call :: Ljava/io/InputStream :: v6 = getInputStream(p1 $url , #(1), #(15000))::CL,61320
53421 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::CE,53422:CD,53425:CD,53426:CD,53435:CD,53452:CD,53456:CD,53500:CD,53504
53422 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.align.client.JFatCatClient.convertStreamToString(java.io.InputStream)::JM,52817:JM,52821:JM,60579:JM,60583:JM,60650
53425 :: NORM :: declaration :: Ljava/io/BufferedReader :: v3 = new java.io.BufferedReader::JM,53456:CF,53426
53426 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v4 = new java.io.InputStreamReader::
53435 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::JM,53504
53440 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(v11)::JM,53456
53445 :: EXPR :: reference :: Ljava/lang/String :: v14 = org.biojava.nbio.structure.align.client.JFatCatClient.newline::
53447 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(v14)::
53452 :: CALL :: call :: Ljava/lang/String :: v11 = v3.readLine()::JM,53456
53456 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 31::CD,53440:CD,53445:CD,53447:CD,53452
53500 :: CALL :: call :: Ljava/lang/String :: v33 = v7.toString()::JM,53504
53504 :: NORM :: compound :: Ljava/lang/String :: return v33::DD,53422
53529 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::CE,53530:CD,53533:CD,53535:CD,53539:CD,53540:CD,53548:CD,53553:CD,53554:CD,53559:CD,53566:CD,53567
53530 :: EXIT :: exit :: Ljava/util/SortedSet :: org.biojava.nbio.structure.scop.server.XMLUtil.getDomainRangesFromXML(java.lang.String)::JM,45944:JM,46057
53533 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextStringSortedSet::JM,53553:JM,53548:JM,53535
53535 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,53553:JM,53548:JM,53535
53539 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,53553:JM,53548
53540 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
53548 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,53553:JM,53548
53553 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,53554:JM,53566
53554 :: CALL :: call :: Ljava/util/TreeSet :: v15 = v13.getData()::JM,53554:JM,53566
53559 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v17 = new java.lang.RuntimeException::
53566 :: NORM :: compound :: Ljava/util/SortedSet :: return v15::DD,53530
53567 :: EXPR :: assign :: Ljava/lang/Exception :: v16 = catch <exc>::
53581 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.cache(java.lang.Object,java.lang.Object)::CD,53587
53587 :: PRED :: IF :: Z :: if (p2 $data  != #(null)) goto 6::CD,53592
53589 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .serializedCache::DD,53592
53592 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 61::CD,53604:CD,53613:CD,53617:CD,53621:CD,53622
53604 :: CALL :: call :: Ljava/lang/Object :: v12 = v10.put(p1 $name , p2 $data )::
53610 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .serializedCache::JM,53621
53613 :: CALL :: call :: Ljava/util/Set :: v15 = v13.keySet()::JM,53621
53617 :: CALL :: call :: I :: v17 = v15.size()::JM,53621
53621 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 % #(1000)::DD,53622
53622 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 61::CD,53623
53623 :: CALL :: call :: V :: p0 $this .flushCache()::CL,61387
53660 :: CALL :: call :: Ljava/util/regex/Matcher :: v9 = v6.matcher(v7)::
53665 :: CALL :: call :: Z :: v11 = v9.matches()::
53676 :: CALL :: call :: Ljava/lang/String :: v15 = v9.group(#(1))::
53718 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.checkLoading(java.lang.String)::CE,53719:CD,53726:CD,53731
53719 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.align.util.AtomCache.checkLoading(java.lang.String)::JM,46259
53726 :: CALL :: call :: Z :: v6 = v4.contains(p1 $name )::JM,53731
53731 :: NORM :: compound :: Z :: return v6::DD,53719
53734 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.loadStructureFromCifByPdbId(java.lang.String)::CD,53739:JM,36561:JM,39185:JM,39249:JM,39171:JM,39235:JM,36565:JM,39221:JM,36569:JM,36557:JM,39229:JM,32397:CD,53772:CD,53776:CD,53782:CD,53787
53739 :: CALL :: call :: V :: p0 $this .flagLoading(p1 $pdbId )::CL,61457
53772 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $pdbId .toLowerCase()::
53776 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v17 = v5.getStructureById(v15)::CL,61486
53782 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,61507
53787 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,61507
53810 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.loadStructureFromPdbByPdbId(java.lang.String)::CD,53815:JM,36513:JM,39171:JM,39235:JM,36517:JM,36521:JM,36525:JM,32397:JM,36529:JM,39185:JM,39249:JM,39221:JM,36509:JM,39229:CD,53848:CD,53852:CD,53858:CD,53863
53815 :: CALL :: call :: V :: p0 $this .flagLoading(p1 $pdbId )::CL,61457
53848 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $pdbId .toLowerCase()::
53852 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v17 = v5.getStructureById(v15)::CL,61486
53858 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,61507
53863 :: CALL :: call :: V :: p0 $this .flagLoadingFinished(p1 $pdbId )::CL,61507
53886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.StructureFiletype.values()::CF,53887:CD,53889:CD,53891:CD,53892:CD,53900
53887 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: org.biojava.nbio.structure.StructureIO.StructureFiletype.values()::JM,46474:JM,46551
53889 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v2 = org.biojava.nbio.structure.StructureIO$StructureFiletype.ENUM$VALUES::DD,53891
53891 :: EXPR :: assign :: I :: v4 = v2.length::DD,53892
53892 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: v5 = new org.biojava.nbio.structure.StructureIO$StructureFiletype[]::DD,53900
53900 :: NORM :: compound :: [Lorg/biojava/nbio/structure/StructureIO$StructureFiletype :: return v5::CF,53887
53913 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentStart()::CD,53917:JM,47778:JM,47750:JM,56103:JM,47785:JM,47757:JM,47764:JM,47733:JM,56087:JM,56120:JM,47771:JM,47743:JM,56095:JM,56127:CD,53933:CD,53940:CD,53947:CD,53954:CD,53961:CD,53968:CD,53975:CD,53982:CD,53989:CD,53996:CD,54003:CD,54010:CD,54017:CD,54024:CD,54031:CD,54038:CD,54045:CD,54052:CD,54059
53917 :: NORM :: declaration :: Lorg/biojava/nbio/structure/StructureImpl :: v3 = new org.biojava.nbio.structure.StructureImpl::DD,53921
53921 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .structure = v3::
53924 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
53927 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
53930 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = #(null)::
53933 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,53937
53937 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v6::
53940 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,53944
53944 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entities = v8::
53947 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::DD,53951
53951 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucRefs = v10::
53954 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,53958
53958 :: EXPR :: modify :: Ljava/util/List :: p0 $this .seqResChains = v12::
53961 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::DD,53965
53965 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entityChains = v14::
53968 :: NORM :: declaration :: Ljava/util/ArrayList :: v16 = new java.util.ArrayList::DD,53972
53972 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structAsyms = v16::
53975 :: NORM :: declaration :: Ljava/util/HashMap :: v18 = new java.util.HashMap::DD,53979
53979 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v18::
53982 :: NORM :: declaration :: Ljava/util/HashMap :: v20 = new java.util.HashMap::DD,53986
53986 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v20::
53989 :: NORM :: declaration :: Ljava/util/HashMap :: v22 = new java.util.HashMap::DD,53993
53993 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2entityId = v22::
53996 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::DD,54000
54000 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structOpers = v24::
54003 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::DD,54007
54007 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblies = v26::
54010 :: NORM :: declaration :: Ljava/util/ArrayList :: v28 = new java.util.ArrayList::DD,54014
54014 :: EXPR :: modify :: Ljava/util/List :: p0 $this .strucAssemblyGens = v28::
54017 :: NORM :: declaration :: Ljava/util/ArrayList :: v30 = new java.util.ArrayList::DD,54021
54021 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcGens = v30::
54024 :: NORM :: declaration :: Ljava/util/ArrayList :: v32 = new java.util.ArrayList::DD,54028
54028 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcNats = v32::
54031 :: NORM :: declaration :: Ljava/util/ArrayList :: v34 = new java.util.ArrayList::DD,54035
54035 :: EXPR :: modify :: Ljava/util/List :: p0 $this .entitySrcSyns = v34::
54038 :: NORM :: declaration :: Ljava/util/ArrayList :: v36 = new java.util.ArrayList::DD,54042
54042 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structConn = v36::
54045 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::DD,54049
54049 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structNcsOper = v38::
54052 :: NORM :: declaration :: Ljava/util/ArrayList :: v40 = new java.util.ArrayList::DD,54056
54056 :: EXPR :: modify :: Ljava/util/List :: p0 $this .sequenceDifs = v40::
54059 :: NORM :: declaration :: Ljava/util/ArrayList :: v42 = new java.util.ArrayList::DD,54063
54063 :: EXPR :: modify :: Ljava/util/List :: p0 $this .structSiteGens = v42::
54113 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentStart()::CD,54120:CD,54133:CD,54137
54117 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,54137
54120 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,54137
54125 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,54137
54130 :: CALL :: call :: V :: v11.documentStart()::CL,53913
54133 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,54137
54137 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,54125:CD,54130:CD,54133:JM,54137
54155 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerDocumentEnd()::CD,54162:CD,54175:CD,54179
54159 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .consumers::JM,54179
54162 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,54179
54167 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,54179
54172 :: CALL :: call :: V :: v11.documentEnd()::CL,61534
54175 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,54179
54179 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,54167:CD,54172:CD,54175:JM,54179
54188 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::CE,54189:CD,54195:CD,54199:CD,54204:CD,54270:CD,54274:CD,54342:CD,54343:CD,54344:CD,54348:CD,54349:CD,54350:JM,54340:JM,54334
54189 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processLine(java.lang.String,java.io.BufferedReader,int)::JM,46866:JM,46856:JM,46923:JM,47321:JM,47053:JM,47156:JM,47239:JM,47146
54195 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,54274:DD,54329:JM,54334:DD,54335:DD,54341
54199 :: CALL :: call :: Z :: v12 = v48.startsWith(#(;))::JM,54204
54204 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 96::CD,54205:CD,54238
54205 :: PRED :: IF :: Z :: if (v49 != #(0)) goto 76::CD,54206:CD,54210:CD,54228:CD,54232:CD,54348:CD,54349:CD,54350
54206 :: CALL :: call :: I :: v26 = v48.length()::JM,54210
54210 :: PRED :: IF :: Z :: if (v26 <= #(1)) goto 57::CF,54222:CF,54211:CD,54212:CD,54348:CD,54349:CD,54350
54211 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::DD,54350
54212 :: CALL :: call :: Ljava/lang/String :: v29 = v48.substring(#(1))::
54222 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::DD,54350
54228 :: CALL :: call :: Ljava/lang/String :: v35 = v50.toString()::
54232 :: CALL :: call :: Z :: v37 = v6.add(v35)::
54238 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 111::CD,54239:CD,54245:CD,54250:CD,54265:CD,54269:CD,54345:CD,54346:CD,54347:CD,54348:CD,54349:CD,54350
54239 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v50.append(v48)::
54245 :: CALL :: call :: Ljava/util/List :: v14 = p0 $this .processSingleLine(v48)::JM,54259:JM,54269:CL,62887
54250 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,54259:JM,54269
54255 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,54259:JM,54269
54259 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::
54260 :: CALL :: call :: Z :: v23 = v6.add(v21)::
54265 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,54259:JM,54269
54269 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 130::CF,54348:CD,54255:CD,54259:CD,54260:CD,54265:CD,54345:CD,54346:CD,54347:JM,54269
54270 :: CALL :: call :: I :: v43 = v6.size()::JM,54274
54274 :: PRED :: IF :: Z :: if (v43 <= p3 $fieldLength ) goto 238::CD,54277:CD,54282:CD,54286:CD,54291:CD,54296:CD,54301:CD,54306:CD,54311:CD,54316:CD,54321:CD,54329:CD,54330:CD,54334
54277 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
54282 :: CALL :: call :: I :: v60 = v6.size()::
54286 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(v60)::
54291 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(#() should be ())::
54296 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(p3 $fieldLength )::JM,54340:JM,54342:JM,54334
54301 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v67.append(#() at line ))::
54306 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(v54)::
54311 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( got lineData: ))::
54316 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v6)::
54321 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
54329 :: NORM :: compound :: Ljava/util/List :: return v6::DD,54189
54330 :: CALL :: call :: I :: v45 = v6.size()::JM,54334
54334 :: PRED :: IF :: Z :: if (v45 != p3 $fieldLength ) goto 251::CD,54335:CD,54336:CD,54340:CD,54342:CD,54343:CD,54344:JM,54274:JM,54334
54335 :: NORM :: compound :: Ljava/util/List :: return v6::DD,54189
54336 :: CALL :: call :: Ljava/lang/String :: v47 = p2 $buf .readLine()::JM,54274:JM,54340:JM,54342:JM,54334
54340 :: PRED :: IF :: Z :: if (v47 != #(null)) goto 18::CF,54342:CD,54199:CD,54204:CD,54270:CD,54274:CD,54341:CD,54343:CD,54344:CD,54348:CD,54349:CD,54350
54341 :: NORM :: compound :: Ljava/util/List :: return v6::DD,54189
54342 :: EXPR :: assign :: null :: PHI v48 = v47, p1 $line ::CF,54343:JM,54204:JM,54210:DD,54345:DD,54348
54343 :: EXPR :: assign :: null :: PHI v49 = v40, #(0)::CF,54344:DD,54205:DD,54238:DD,54346:DD,54349
54344 :: EXPR :: assign :: null :: PHI v50 = v41, #(null)::DD,54347:DD,54350:JM,54204
54345 :: EXPR :: assign :: null :: PHI v51 = v48, v51::CF,54346:DD,54345:DD,54348
54346 :: EXPR :: assign :: null :: PHI v52 = v49, v52::CF,54347:DD,54346:DD,54349
54347 :: EXPR :: assign :: null :: PHI v53 = v50, v53::JM,54259:JM,54269:DD,54347:DD,54350
54348 :: EXPR :: assign :: null :: PHI v54 = v48, v48, v48, v48, v51::CF,54349
54349 :: EXPR :: assign :: null :: PHI v40 = #(1), #(1), #(0), v49, v52::CF,54350:DD,54343
54350 :: EXPR :: assign :: null :: PHI v41 = v27, v31, #(null), v50, v53::JM,54274:DD,54344
54504 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.endLineChecks(java.lang.String,java.util.List,java.util.List,java.util.Set)::CD,54514:CD,54539:CD,54540:CD,54545:CD,54549:CD,54554:CD,54559:CD,54563:CD,54568:CD,54573:CD,54578:CD,54583:CD,54588:CD,54593:CD,54598:CD,54607:CD,54612:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54514 :: CALL :: call :: Ljava/lang/String :: v10 = p2 $loopFields .toString()::
54539 :: NORM :: declaration :: Ljava/io/IOException :: v393 = new java.io.IOException::
54540 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v394 = new java.lang.StringBuilder::
54545 :: CALL :: call :: I :: v398 = p3 $lineData .size()::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54549 :: CALL :: call :: Ljava/lang/StringBuilder :: v400 = v394.append(v398)::
54554 :: CALL :: call :: Ljava/lang/StringBuilder :: v403 = v400.append(#() != fields length ())::
54559 :: CALL :: call :: I :: v405 = p2 $loopFields .size()::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54563 :: CALL :: call :: Ljava/lang/StringBuilder :: v407 = v403.append(v405)::
54568 :: CALL :: call :: Ljava/lang/StringBuilder :: v410 = v407.append(#() category: ))::
54573 :: CALL :: call :: Ljava/lang/StringBuilder :: v412 = v410.append(p1 $category )::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54578 :: CALL :: call :: Ljava/lang/StringBuilder :: v415 = v412.append(#( fields: ))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54583 :: CALL :: call :: Ljava/lang/StringBuilder :: v417 = v415.append(p2 $loopFields )::
54588 :: CALL :: call :: Ljava/lang/StringBuilder :: v420 = v417.append(#( DATA: ))::
54593 :: CALL :: call :: Ljava/lang/StringBuilder :: v422 = v420.append(p3 $lineData )::
54598 :: CALL :: call :: Ljava/lang/String :: v424 = v422.toString()::
54607 :: CALL :: call :: Z :: v18 = p1 $category .equals(#(_entity))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54612 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 159::CD,54618:CD,54627:CD,54632:CD,54637:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54618 :: CALL :: call :: Ljava/lang/Object :: v386 = p0 $this .buildObject(v384, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54627 :: CALL :: call :: V :: p0 $this .triggerNewEntity(v387)::CL,63780
54632 :: CALL :: call :: Z :: v22 = p1 $category .equals(#(_struct))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54637 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 192::CD,54643:CD,54651:CD,54656:CD,54661:JM,55361:JM,54786:JM,55236:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54643 :: CALL :: call :: Ljava/lang/Object :: v380 = p0 $this .buildObject(v378, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::JM,54651:CL,63377
54651 :: EXPR :: assign :: Ljava/lang/Object :: v381 = CHECKCAST v380::DD,54652
54652 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/Struct :: p0 $this .struct = v381::
54656 :: CALL :: call :: Z :: v25 = p1 $category .equals(#(_atom_site))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54661 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 230::CD,54667:CD,54676:CD,54681:CD,54686:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54667 :: CALL :: call :: Ljava/lang/Object :: v373 = p0 $this .buildObject(v371, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54676 :: CALL :: call :: V :: p0 $this .triggerNewAtomSite(v374)::CL,63816
54681 :: CALL :: call :: Z :: v28 = p1 $category .equals(#(_database_PDB_rev))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54686 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 268::CD,54692:CD,54701:CD,54706:CD,54711:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,55161:JM,55036:JM,55486:JM,54911
54692 :: CALL :: call :: Ljava/lang/Object :: v366 = p0 $this .buildObject(v364, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54701 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrev(v367)::CL,63852
54706 :: CALL :: call :: Z :: v31 = p1 $category .equals(#(_database_PDB_rev_record))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54711 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 306::CD,54717:CD,54726:CD,54731:CD,54736:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54717 :: CALL :: call :: Ljava/lang/Object :: v359 = p0 $this .buildObject(v357, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54726 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBrevRecord(v360)::CL,63888
54731 :: CALL :: call :: Z :: v34 = p1 $category .equals(#(_database_PDB_remark))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54736 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 344::CD,54742:CD,54751:CD,54756:CD,54761:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54742 :: CALL :: call :: Ljava/lang/Object :: v352 = p0 $this .buildObject(v350, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54751 :: CALL :: call :: V :: p0 $this .triggerNewDatabasePDBremark(v353)::CL,63924
54756 :: CALL :: call :: Z :: v37 = p1 $category .equals(#(_exptl))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54761 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 382::CD,54767:CD,54776:CD,54781:CD,54786:JM,55361:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54767 :: CALL :: call :: Ljava/lang/Object :: v345 = p0 $this .buildObject(v343, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54776 :: CALL :: call :: V :: p0 $this .triggerExptl(v346)::CL,63960
54781 :: CALL :: call :: Z :: v40 = p1 $category .equals(#(_cell))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54786 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 420::CD,54792:CD,54801:CD,54806:CD,54811:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54792 :: CALL :: call :: Ljava/lang/Object :: v338 = p0 $this .buildObject(v336, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54801 :: CALL :: call :: V :: p0 $this .triggerNewCell(v339)::CL,63996
54806 :: CALL :: call :: Z :: v43 = p1 $category .equals(#(_symmetry))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54811 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 458::CD,54817:CD,54826:CD,54831:CD,54836:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54817 :: CALL :: call :: Ljava/lang/Object :: v331 = p0 $this .buildObject(v329, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54826 :: CALL :: call :: V :: p0 $this .triggerNewSymmetry(v332)::CL,64032
54831 :: CALL :: call :: Z :: v46 = p1 $category .equals(#(_struct_ncs_oper))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54836 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 496::CD,54842:CD,54851:CD,54856:CD,54861:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54842 :: CALL :: call :: Ljava/lang/Object :: v324 = p0 $this .buildObject(v322, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54851 :: CALL :: call :: V :: p0 $this .triggerNewStructNcsOper(v325)::CL,64068
54856 :: CALL :: call :: Z :: v49 = p1 $category .equals(#(_atom_sites))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54861 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 534::CD,54867:CD,54876:CD,54881:CD,54886:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54867 :: CALL :: call :: Ljava/lang/Object :: v317 = p0 $this .buildObject(v315, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54876 :: CALL :: call :: V :: p0 $this .triggerNewAtomSites(v318)::CL,64104
54881 :: CALL :: call :: Z :: v52 = p1 $category .equals(#(_struct_ref))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54886 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 572::CD,54892:CD,54901:CD,54906:CD,54911:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486
54892 :: CALL :: call :: Ljava/lang/Object :: v310 = p0 $this .buildObject(v308, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54901 :: CALL :: call :: V :: p0 $this .triggerNewStrucRef(v311)::CL,64140
54906 :: CALL :: call :: Z :: v55 = p1 $category .equals(#(_struct_ref_seq))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54911 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 610::CD,54917:CD,54926:CD,54931:CD,54936:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54917 :: CALL :: call :: Ljava/lang/Object :: v303 = p0 $this .buildObject(v301, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54926 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeq(v304)::CL,64176
54931 :: CALL :: call :: Z :: v58 = p1 $category .equals(#(_struct_ref_seq_dif))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54936 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 648::CD,54942:CD,54951:CD,54956:CD,54961:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54942 :: CALL :: call :: Ljava/lang/Object :: v296 = p0 $this .buildObject(v294, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54951 :: CALL :: call :: V :: p0 $this .triggerNewStrucRefSeqDif(v297)::CL,64212
54956 :: CALL :: call :: Z :: v61 = p1 $category .equals(#(_struct_site_gen))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54961 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 686::CD,54967:CD,54976:CD,54981:CD,54986:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54967 :: CALL :: call :: Ljava/lang/Object :: v289 = p0 $this .buildObject(v287, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
54976 :: CALL :: call :: V :: p0 $this .triggerNewStructSiteGen(v290)::CL,64248
54981 :: CALL :: call :: Z :: v64 = p1 $category .equals(#(_struct_site))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54986 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 724::CD,54992:CD,55001:CD,55006:CD,55011:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
54992 :: CALL :: call :: Ljava/lang/Object :: v282 = p0 $this .buildObject(v280, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55001 :: CALL :: call :: V :: p0 $this .triggerNewStructSite(v283)::CL,64284
55006 :: CALL :: call :: Z :: v67 = p1 $category .equals(#(_entity_poly_seq))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55011 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 762::CD,55017:CD,55026:CD,55031:CD,55036:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55486:JM,54911
55017 :: CALL :: call :: Ljava/lang/Object :: v275 = p0 $this .buildObject(v273, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55026 :: CALL :: call :: V :: p0 $this .triggerNewEntityPolySeq(v276)::CL,64320
55031 :: CALL :: call :: Z :: v70 = p1 $category .equals(#(_entity_src_gen))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55036 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 800::CD,55042:CD,55051:CD,55056:CD,55061:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55042 :: CALL :: call :: Ljava/lang/Object :: v268 = p0 $this .buildObject(v266, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55051 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcGen(v269)::CL,64356
55056 :: CALL :: call :: Z :: v73 = p1 $category .equals(#(_entity_src_nat))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55061 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 838::CD,55067:CD,55076:CD,55081:CD,55086:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55067 :: CALL :: call :: Ljava/lang/Object :: v261 = p0 $this .buildObject(v259, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55076 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcNat(v262)::CL,64392
55081 :: CALL :: call :: Z :: v76 = p1 $category .equals(#(_pdbx_entity_src_syn))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55086 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 876::CD,55092:CD,55101:CD,55106:CD,55111:JM,55361:JM,54786:JM,55236:JM,54661:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55092 :: CALL :: call :: Ljava/lang/Object :: v254 = p0 $this .buildObject(v252, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55101 :: CALL :: call :: V :: p0 $this .triggerNewEntitySrcSyn(v255)::CL,64428
55106 :: CALL :: call :: Z :: v79 = p1 $category .equals(#(_struct_asym))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55111 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 914::CD,55117:CD,55126:CD,55131:CD,55136:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55117 :: CALL :: call :: Ljava/lang/Object :: v247 = p0 $this .buildObject(v245, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55126 :: CALL :: call :: V :: p0 $this .triggerNewStructAsym(v248)::CL,64464
55131 :: CALL :: call :: Z :: v82 = p1 $category .equals(#(_pdbx_poly_seq_scheme))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55136 :: PRED :: IF :: Z :: if (v82 == #(0)) goto 952::CD,55142:CD,55151:CD,55156:CD,55161:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55036:JM,55486:JM,54911
55142 :: CALL :: call :: Ljava/lang/Object :: v240 = p0 $this .buildObject(v238, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55151 :: CALL :: call :: V :: p0 $this .triggerNewPdbxPolySeqScheme(v241)::CL,64500
55156 :: CALL :: call :: Z :: v85 = p1 $category .equals(#(_pdbx_nonpoly_scheme))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55161 :: PRED :: IF :: Z :: if (v85 == #(0)) goto 990::CD,55167:CD,55176:CD,55181:CD,55186:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55167 :: CALL :: call :: Ljava/lang/Object :: v233 = p0 $this .buildObject(v231, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55176 :: CALL :: call :: V :: p0 $this .triggerNewPdbxNonPolyScheme(v234)::CL,64536
55181 :: CALL :: call :: Z :: v88 = p1 $category .equals(#(_pdbx_entity_nonpoly))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55186 :: PRED :: IF :: Z :: if (v88 == #(0)) goto 1028::CD,55192:CD,55201:CD,55206:CD,55211:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55192 :: CALL :: call :: Ljava/lang/Object :: v226 = p0 $this .buildObject(v224, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55201 :: CALL :: call :: V :: p0 $this .triggerNewPdbxEntityNonPoly(v227)::CL,64572
55206 :: CALL :: call :: Z :: v91 = p1 $category .equals(#(_struct_keywords))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55211 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 1066::CD,55217:CD,55226:CD,55231:CD,55236:JM,55361:JM,54786:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55217 :: CALL :: call :: Ljava/lang/Object :: v219 = p0 $this .buildObject(v217, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55226 :: CALL :: call :: V :: p0 $this .triggerNewStructKeywords(v220)::CL,64608
55231 :: CALL :: call :: Z :: v94 = p1 $category .equals(#(_refine))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55236 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 1104::CD,55242:CD,55251:CD,55256:CD,55261:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55242 :: CALL :: call :: Ljava/lang/Object :: v212 = p0 $this .buildObject(v210, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55251 :: CALL :: call :: V :: p0 $this .triggerNewRefine(v213)::CL,64644
55256 :: CALL :: call :: Z :: v97 = p1 $category .equals(#(_chem_comp))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55261 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 1142::CD,55267:CD,55276:CD,55281:CD,55286:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55267 :: CALL :: call :: Ljava/lang/Object :: v205 = p0 $this .buildObject(v203, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55276 :: CALL :: call :: V :: p0 $this .triggerNewChemComp(v206)::CL,64680
55281 :: CALL :: call :: Z :: v100 = p1 $category .equals(#(_audit_author))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55286 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 1180::CD,55292:CD,55301:CD,55306:CD,55311:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55292 :: CALL :: call :: Ljava/lang/Object :: v198 = p0 $this .buildObject(v196, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55301 :: CALL :: call :: V :: p0 $this .triggerNewAuditAuthor(v199)::CL,64716
55306 :: CALL :: call :: Z :: v103 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55311 :: PRED :: IF :: Z :: if (v103 == #(0)) goto 1218::CD,55317:CD,55326:CD,55331:CD,55336:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55317 :: CALL :: call :: Ljava/lang/Object :: v191 = p0 $this .buildObject(v189, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55326 :: CALL :: call :: V :: p0 $this .triggerNewChemCompDescriptor(v192)::CL,64752
55331 :: CALL :: call :: Z :: v106 = p1 $category .equals(#(_pdbx_struct_oper_list))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55336 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 1256::CD,55342:CD,55351:CD,55356:CD,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55342 :: CALL :: call :: Ljava/lang/Object :: v184 = p0 $this .buildObject(v182, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55351 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructOper(v185)::CL,64788
55356 :: CALL :: call :: Z :: v109 = p1 $category .equals(#(_pdbx_struct_assembly))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55361 :: PRED :: IF :: Z :: if (v109 == #(0)) goto 1294::CD,55367:CD,55376:CD,55381:CD,55386:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55367 :: CALL :: call :: Ljava/lang/Object :: v177 = p0 $this .buildObject(v175, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55376 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssembly(v178)::CL,64824
55381 :: CALL :: call :: Z :: v112 = p1 $category .equals(#(_pdbx_struct_assembly_gen))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55386 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 1332::CD,55392:CD,55401:CD,55406:CD,55411:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55392 :: CALL :: call :: Ljava/lang/Object :: v170 = p0 $this .buildObject(v168, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55401 :: CALL :: call :: V :: p0 $this .triggerNewPdbxStructAssemblyGen(v171)::CL,64860
55406 :: CALL :: call :: Z :: v115 = p1 $category .equals(#(_chem_comp_atom))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55411 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 1370::CD,55417:CD,55426:CD,55431:CD,55436:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55417 :: CALL :: call :: Ljava/lang/Object :: v163 = p0 $this .buildObject(v161, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55426 :: CALL :: call :: V :: p0 $this .triggerNewChemCompAtom(v164)::CL,64896
55431 :: CALL :: call :: Z :: v118 = p1 $category .equals(#(_chem_comp_bond))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55436 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 1408::CD,55442:CD,55451:CD,55456:CD,55461:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55442 :: CALL :: call :: Ljava/lang/Object :: v156 = p0 $this .buildObject(v154, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55451 :: CALL :: call :: V :: p0 $this .triggerNewChemCompBond(v157)::CL,64932
55456 :: CALL :: call :: Z :: v121 = p1 $category .equals(#(_pdbx_chem_comp_ident...))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55461 :: PRED :: IF :: Z :: if (v121 == #(0)) goto 1446::CD,55467:CD,55476:CD,55481:CD,55486:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,54911
55467 :: CALL :: call :: Ljava/lang/Object :: v149 = p0 $this .buildObject(v147, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55476 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompIdentifier(v150)::CL,64968
55481 :: CALL :: call :: Z :: v123 = p1 $category .equals(#(_pdbx_chem_comp_descr...))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55486 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 1484::CD,55492:CD,55501:CD,55506:CD,55511:JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55492 :: CALL :: call :: Ljava/lang/Object :: v142 = p0 $this .buildObject(v140, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55501 :: CALL :: call :: V :: p0 $this .triggerNewPdbxChemCompDescriptor(v143)::CL,65004
55506 :: CALL :: call :: Z :: v126 = p1 $category .equals(#(_struct_conn))::JM,55361:JM,54786:JM,55236:JM,54661:JM,55111:JM,54986:JM,55436:JM,54861:JM,55311:JM,54736:JM,55186:JM,54612:JM,55061:JM,55511:JM,54936:JM,55386:JM,54811:JM,55261:JM,54686:JM,55136:JM,55011:JM,55461:JM,54886:JM,55336:JM,54761:JM,55211:JM,54637:JM,55086:JM,54961:JM,55411:JM,54836:JM,55286:JM,54711:JM,55161:JM,55036:JM,55486:JM,54911
55511 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 1518::CD,55517:CD,55526:CD,55538
55517 :: CALL :: call :: Ljava/lang/Object :: v135 = p0 $this .buildObject(v133, p2 $loopFields , p3 $lineData , p4 $loopWarnings )::CL,63377
55526 :: CALL :: call :: V :: p0 $this .triggerNewStructConn(v136)::CL,65040
55538 :: CALL :: call :: V :: p0 $this .triggerGeneric(p1 $category , p2 $loopFields , p3 $lineData )::CL,65076
55925 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.resetBuffers(java.util.List,java.util.List,java.util.Set)::CD,55932:CD,55935:CD,55938
55932 :: CALL :: call :: V :: p1 $loopFields .clear()::
55935 :: CALL :: call :: V :: p2 $lineData .clear()::
55938 :: CALL :: call :: V :: p3 $loopWarnings .clear()::
55945 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerStructData(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,55953:CD,55967:CD,55971
55950 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,55971
55953 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,55971
55958 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,55971
55963 :: CALL :: call :: V :: v12.setStruct(p1 $struct )::CL,65124
55967 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,55971
55971 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,55958:CD,55963:CD,55967:JM,55971
55981 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getStructure(java.io.InputStream)::JM,65216:JM,65281:JM,65251:JM,65315:JM,65223:JM,56103:JM,65258:JM,65322:JM,65389:JM,32397:JM,65230:JM,65329:JM,65237:JM,56087:JM,56120:JM,65209:JM,65339:JM,65244:JM,65308:JM,56095:JM,56127:CD,55998
55998 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v10 = v4.parsePDBFile(p1 $inStream )::CL,65508
56012 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.getBiologicalAssembly(java.lang.String,int,boolean)::CD,56050:CD,56056:JM,56057
56050 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v8 = getBiologicalAssembly(p1 $pdbId , p2 $bioAssemblyId , p0 $this )::JM,56056:CL,65529
56056 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 63::CD,56057
56057 :: PRED :: IF :: Z :: if (p3 $bioAssemblyFallback  == #(0)) goto 63::CD,56058
56058 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v11 = getBiologicalAssembly(p1 $pdbId , #(0), p0 $this )::CL,65529
56087 :: NORM :: declaration :: Ljava/util/Date :: v4 = new java.util.Date::DD,56092
56092 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = v4::
56095 :: NORM :: declaration :: Ljava/util/Date :: v7 = new java.util.Date::DD,56100
56100 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = v7::
56103 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v9 = new java.text.SimpleDateFormat::DD,56111
56111 :: EXPR :: modify :: Ljava/text/DateFormat :: p0 $this .dateFormat = v9::
56114 :: EXPR :: modify :: F :: p0 $this .resolution = #(99.0 f)::
56117 :: EXPR :: modify :: F :: p0 $this .rFree = #(1.0 f)::
56120 :: NORM :: declaration :: Ljava/util/HashMap :: v15 = new java.util.HashMap::DD,56124
56124 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = v15::
56127 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: v17 = new org.biojava.nbio.structure.PDBCrystallographicInfo::DD,56131
56131 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = v17::
56154 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SubstructureIdentifier.getIdentifier()::CD,56161:CD,56165
56158 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .ranges::JM,56165
56161 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,56165
56165 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 17::CF,56170:CD,56174:CD,56182:CD,56190:CD,56194:CD,56199
56170 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
56174 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
56182 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(.))::
56190 :: CALL :: call :: Ljava/lang/String :: v17 = toString(v15)::CL,65601
56194 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v14.append(v17)::
56199 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
56211 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setParent(org.biojava.nbio.structure.Structure)::JM,56216
56216 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $s ::
56237 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::CE,56238:CD,56241:CD,56245:CD,56249:CD,56253
56238 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findCompounds()::JM,47994
56241 :: CALL :: call :: Ljava/util/TreeMap :: v4 = p0 $this .findCompoundsFromAlignment()::CL,65662
56245 :: CALL :: call :: Ljava/util/List :: v6 = findUniqueCompounds(v4)::JM,56253:CL,66709
56249 :: CALL :: call :: V :: p0 $this .createPurelyNonPolyCompounds(v6)::CL,66786
56253 :: NORM :: compound :: Ljava/util/List :: return v6::DD,56238
56261 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getChains()::CE,56262:CD,56268
56262 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Compound.getChains()::JM,48032
56265 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .chains::DD,56268
56268 :: NORM :: compound :: Ljava/util/List :: return v3::CF,56262
56270 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setCompound(org.biojava.nbio.structure.Compound)::JM,56275
56275 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .mol = p1 $mol ::
56281 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setStructure(org.biojava.nbio.structure.Structure)::JM,56286
56286 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Structure :: p0 $this .parent = p1 $parent ::
56292 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains(int)::CE,56293:CD,56297:CD,56302
56293 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains(int)::JM,48393:JM,86618:JM,107617:JM,122800
56297 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(p1 $modelnr )::JM,56302:CL,48170
56302 :: NORM :: compound :: Ljava/util/List :: return v5::DD,56293
56305 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toString()::CE,56306:CD,56309:CD,56316:CD,56320:CD,56328:CD,56349:CD,56353
56306 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.toString()::JM,48514:JM,48534:JM,49080:JM,108620:JM,108680:JM,122962
56309 :: NORM :: declaration :: Ljava/io/StringWriter :: v3 = new java.io.StringWriter::JM,56353
56316 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
56320 :: CALL :: call :: Ljava/io/StringWriter :: v9 = v3.append(v7)::
56325 :: EXPR :: reference :: Ljava/lang/Character :: v10 = p0 $this .insCode::DD,56328
56328 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 52::CD,56332:CD,56336:JM,56353
56329 :: EXPR :: reference :: Ljava/lang/Character :: v12 = p0 $this .insCode::JM,56336
56332 :: CALL :: call :: C :: v14 = v12.charValue()::JM,56336
56336 :: PRED :: IF :: Z :: if (v14 == #(32)) goto 52::CD,56340:CD,56344:JM,56353
56337 :: EXPR :: reference :: Ljava/lang/Character :: v16 = p0 $this .insCode::
56340 :: CALL :: call :: C :: v18 = v16.charValue()::
56344 :: CALL :: call :: Ljava/io/StringWriter :: v20 = v3.append(v18)::
56349 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,56353
56353 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,56306
56367 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::CE,56368:CD,56374
56368 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ResidueNumber :: org.biojava.nbio.structure.HetatomImpl.getResidueNumber()::JM,48943:JM,61962:JM,61990:JM,101574:JM,101579:JM,101727:JM,101732:JM,101860
56371 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v3 = p0 $this .residueNumber::DD,56374
56374 :: NORM :: compound :: Lorg/biojava/nbio/structure/ResidueNumber :: return v3::CF,56368
56376 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChain(org.biojava.nbio.structure.Chain)::CD,56387:JM,56381
56381 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = p1 $chain ::
56384 :: EXPR :: reference :: Lorg/biojava/nbio/structure/ResidueNumber :: v4 = p0 $this .residueNumber::DD,56387
56387 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 25::CD,56395
56395 :: CALL :: call :: V :: v6.setChainId(v8)::CL,48328
56406 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::CE,56407:CD,56413
56407 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAltLocs()::JM,48930:JM,84729:JM,84738:JM,84766:JM,84889:JM,84898:JM,84926:JM,86603:JM,87920:JM,88324:JM,88284:JM,97378:JM,97412:JM,101894:JM,101884:JM,103941:JM,103981
56410 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,56413
56413 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 16::CF,56414:CD,56418:CD,56422
56414 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,56418
56418 :: NORM :: compound :: Ljava/util/List :: return v6::DD,56407
56419 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::DD,56422
56422 :: NORM :: compound :: Ljava/util/List :: return v5::DD,56407
56427 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::CE,56428:CD,56434
56428 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.getPDBName()::JM,73418:JM,73423:JM,80614:JM,88337:JM,88332:JM,103805:JM,103994:JM,122039:JM,122215:JM,127013:JM,127067:JM,127014:JM,128771:JM,128757:JM,128694:JM,128695
56431 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdb_name::DD,56434
56434 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,56428
56436 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::CE,56437:CD,56443
56437 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodDomain.getPdbId()::JM,60083
56440 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .pdbId::DD,56443
56443 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,56437
56499 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.parseMultiple(java.util.List)::CD,56503:CD,56504:CD,56512:CD,56532:CD,56536
56503 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,56536
56504 :: CALL :: call :: I :: v5 = p1 $ranges .size()::JM,56536
56512 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $ranges .iterator()::JM,56536
56517 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,56536
56522 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueRange :: v16 = parse(v14)::JM,56526:CL,52911
56526 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 55::CD,56527:JM,56536
56527 :: CALL :: call :: Z :: v19 = v3.add(v16)::
56532 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,56536
56536 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,56517:CD,56522:CD,56526:CD,56532:JM,56536
56555 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::CE,56556:CD,56562
56556 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getDomainName()::JM,49397
56559 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .domainName::DD,56562
56562 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,56556
56564 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::CE,56565:CD,56571
56565 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.cath.CathDomain.getSegments()::JM,49445
56568 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .segments::DD,56571
56571 :: NORM :: compound :: Ljava/util/List :: return v3::CF,56565
56604 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v8 = fromString(p2 $start )::CL,60986
56618 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v12 = fromString(p3 $end )::CL,60986
59541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::CE,59542:CD,59545:CD,59554:CD,59558
59542 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainDescriptionFileAvailable()::JM,51854
59545 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainDescriptionFileName()::CL,67832
59554 :: CALL :: call :: Z :: v8 = v5.exists()::JM,59558
59558 :: NORM :: compound :: Z :: return v8::DD,59542
59565 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainDescriptionFile()::CD,59570:CD,59579:CD,59588
59570 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-descripti...))::CL,67867
59579 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainDescriptionFileName()::CL,67832
59588 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,67946
59608 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile()::CD,59613:CD,59625:CD,59626:CD,59640
59613 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainDescriptionFileName()::CL,67832
59625 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,59626
59626 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
59640 :: CALL :: call :: V :: p0 $this .parseCathDomainDescriptionFile(v9)::CL,68163
59657 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.ensureDomainListInstalled()::CD,59664:CD,59668:CD,59681:CD,59693:CD,59704:CD,59716
59661 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedDomainList::JM,59668
59664 :: CALL :: call :: Z :: v5 = v3.get()::JM,59668
59668 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,59670:CD,59674:CD,59698:CD,59724
59670 :: CALL :: call :: Z :: v8 = p0 $this .domainListFileAvailable()::JM,59674:CL,68891
59674 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 51::CD,59675
59675 :: CALL :: call :: V :: p0 $this .downloadDomainListFile()::CL,68915
59681 :: CALL :: call :: Ljava/lang/String :: v14 = v10.getMessage()::
59690 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v16 = p0 $this .installedDomainList::
59693 :: CALL :: call :: V :: v16.set(#(0))::
59698 :: CALL :: call :: V :: p0 $this .parseCathDomainList()::CL,68958
59704 :: CALL :: call :: Ljava/lang/String :: v22 = v19.getMessage()::
59713 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v24 = p0 $this .installedDomainList::
59716 :: CALL :: call :: V :: v24.set(#(0))::
59721 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v26 = p0 $this .installedDomainList::JM,59724
59724 :: CALL :: call :: V :: v26.set(#(1))::JM,59724
59740 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::CE,59741:CD,59744:CD,59753:CD,59757
59741 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domallFileAvailable()::JM,51956
59744 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomallFileName()::CL,69007
59753 :: CALL :: call :: Z :: v8 = v5.exists()::JM,59757
59757 :: NORM :: compound :: Z :: return v8::DD,59741
59764 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomallFile()::CD,59769:CD,59778:CD,59787
59769 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-boundarie...))::CL,67867
59778 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomallFileName()::CL,69007
59787 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,67946
59807 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall()::CD,59812:CD,59824:CD,59825:CD,59839
59812 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomallFileName()::CL,69007
59824 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,59825
59825 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
59839 :: CALL :: call :: V :: p0 $this .parseCathDomall(v9)::CL,69042
59856 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodFactory.releaseReferences()::CD,59862:CD,59864:CD,59868:CD,59902:CD,59906
59862 :: EXPR :: reference :: Ljava/util/Map :: v3 = org.biojava.nbio.structure.ecod.EcodFactory.versionedEcodDBs::JM,59906:JM,59877
59864 :: CALL :: call :: Ljava/util/Set :: v5 = v3.entrySet()::JM,59906:JM,59877
59868 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,59906:JM,59877
59873 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,59906:JM,59877
59877 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,59882
59878 :: CALL :: call :: Ljava/lang/Object :: v15 = v13.getValue()::JM,59882
59882 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::JM,59887
59883 :: CALL :: call :: Ljava/lang/Object :: v18 = v16.get()::JM,59887
59887 :: PRED :: IF :: Z :: if (v18 != #(null)) goto 73::CD,59899:JM,59906:JM,59877
59899 :: CALL :: call :: V :: v7.remove()::
59902 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,59906:JM,59877
59906 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 24::CD,59873:CD,59877:CD,59878:CD,59882:CD,59883:CD,59887:CD,59902:JM,59906
60006 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getVersion()::CD,60010
60010 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,69942
60030 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.indexDomains()::CD,60053:CD,60057:CD,60069:CD,60143:CD,60147
60050 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,60053
60053 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::CD,60054:CF,60057
60054 :: CALL :: call :: V :: p0 $this .ensureDomainsFileInstalled()::CL,69942
60057 :: NORM :: declaration :: Ljava/util/HashMap :: v13 = new java.util.HashMap::DD,60063
60063 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v13::
60066 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .allDomains::JM,60147:JM,60078
60069 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,60147:JM,60078
60074 :: CALL :: call :: Ljava/lang/Object :: v24 = v19.next()::JM,60147:JM,60078
60078 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::
60079 :: CALL :: call :: Ljava/lang/String :: v27 = v25.getPdbId()::JM,60083:CL,56436
60083 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 122::CD,60084:CD,60088
60084 :: CALL :: call :: Ljava/lang/String :: v29 = v25.getDomainId()::JM,60088:JM,60089:JM,60093:CL,52457
60088 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 122::CD,60089:CD,60093
60089 :: CALL :: call :: Z :: v31 = v29.isEmpty()::JM,60089:JM,60093
60093 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 122::CD,60096:CD,60101
60096 :: CALL :: call :: Ljava/util/regex/Matcher :: v34 = v32.matcher(v29)::
60101 :: CALL :: call :: Ljava/lang/String :: v37 = v34.group(#(1))::
60109 :: CALL :: call :: Z :: v41 = v39.containsKey(v38)::JM,60114
60114 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 152::CF,60125:CD,60118:CD,60123:CD,60132:CD,60185
60118 :: CALL :: call :: Ljava/lang/Object :: v44 = v42.get(v38)::JM,60123
60123 :: EXPR :: assign :: Ljava/lang/Object :: v45 = CHECKCAST v44::DD,60185
60125 :: NORM :: declaration :: Ljava/util/LinkedList :: v46 = new java.util.LinkedList::DD,60185
60132 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.put(v38, v46)::
60138 :: CALL :: call :: Z :: v53 = v51.add(v25)::
60143 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,60147:JM,60078
60147 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 67::CD,60074:CD,60078:CD,60079:CD,60083:CD,60109:CD,60114:CD,60138:CD,60143:CD,60185:JM,60147
60185 :: EXPR :: assign :: null :: PHI v51 = v45, v46::
60393 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopFactory.getSCOP(java.lang.String,boolean)::CD,60403:CD,60408:CD,60409
60403 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,60408
60408 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,60410:DD,60411:DD,60444:CF,60409
60409 :: PRED :: IF :: Z :: if (p2 $forceLocalData  == #(0)) goto 81::CD,60410:CD,60444
60410 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 36::CD,60411:CD,60412:CD,60416:JM,99137:JM,99136:JM,99012:JM,99204:JM,99145:JM,99016:JM,99150:JM,99155:JM,99026:JM,99154:JM,99030:JM,99163:JM,70113:JM,99040:JM,99168:JM,99173:JM,99172:JM,99047:JM,98984:JM,70125:JM,29548:JM,99181:JM,98988:JM,99055:JM,29555:JM,99186:JM,70133:JM,99191:JM,98998:JM,99062:JM,99190:JM,99002:JM,99069:JM,99199:CD,60430:CD,60436
60411 :: EXPR :: assign :: Z :: v25=v10 INSTANCEOF org.biojava.nbio.structure.scop.LocalScopDatabase::DD,60412
60412 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 79::CD,60416:JM,99137:JM,99136:JM,99012:JM,99204:JM,99145:JM,99016:JM,99150:JM,99155:JM,99026:JM,99154:JM,99030:JM,99163:JM,70113:JM,99040:JM,99168:JM,99173:JM,99172:JM,99047:JM,98984:JM,70125:JM,29548:JM,99181:JM,98988:JM,99055:JM,29555:JM,99186:JM,70133:JM,99191:JM,98998:JM,99062:JM,99190:JM,99002:JM,99069:JM,99199:CD,60430:CD,60436
60416 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getSimpleName()::
60430 :: CALL :: call :: V :: v31.setScopVersion(v6)::CL,70150
60436 :: CALL :: call :: Ljava/lang/Object :: v36 = v34.put(v6, v31)::
60444 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 127::CD,60448:CD,60468
60448 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getSimpleName()::
60468 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.put(v6, v18)::
60513 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::CE,60514:CD,60518:CD,60523:CD,60527:CD,60535:CD,60540:CD,60545:CD,60550:CD,60554:CD,60559:CD,60567:CD,60571:CD,60575:CD,60579:CD,60583
60514 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.RemoteScopInstallation.requestRemoteDomainByScopID(java.lang.String)::JM,52488
60518 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $scopId .trim()::
60523 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
60527 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
60535 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v7.append(#(getDomainByScopID?scopId=))::
60540 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(v5)::
60545 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(#(&version=))::
60550 :: CALL :: call :: Ljava/lang/String :: v21 = p0 $this .getScopVersion()::CL,60608
60554 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v19.append(v21)::
60559 :: CALL :: call :: Ljava/lang/String :: v25 = v23.toString()::
60567 :: CALL :: call :: Ljava/io/InputStream :: v28 = getInputStream(v6)::CL,53407
60571 :: CALL :: call :: Ljava/lang/String :: v30 = convertStreamToString(v28)::JM,60579:JM,60583:CL,53421
60575 :: CALL :: call :: Ljava/lang/String :: v32 = v30.trim()::JM,60579:JM,60583
60579 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,60579:JM,60583
60583 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 80::CD,60584:CD,60588:CD,60589
60584 :: CALL :: call :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v38 = getScopDomainFromXML(v30)::JM,60588:CL,70249
60588 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v38::DD,60514
60589 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return #(null)::DD,60514
60608 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::CE,60609:CD,60615:CD,60668:CD,60669:CD,60677:CD,60682:CD,60687:CD,60700:CD,60701
60609 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.RemoteScopInstallation.getScopVersion()::
60612 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .version::DD,60615
60615 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 106::CD,60617:CD,60621:CD,60629:CD,60634:CD,60642:CD,60646:CD,60656
60617 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
60621 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
60629 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(getScopVersion))::
60634 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
60642 :: CALL :: call :: Ljava/io/InputStream :: v18 = getInputStream(v5)::CL,53407
60646 :: CALL :: call :: Ljava/lang/String :: v20 = convertStreamToString(v18)::JM,60650:CL,53421
60650 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v20::
60653 :: EXPR :: reference :: Ljava/lang/String :: v21 = p0 $this .version::DD,60656
60656 :: PRED :: IF :: Z :: if (v21 == #(null)) goto 106::CD,60660
60657 :: EXPR :: reference :: Ljava/lang/String :: v22 = p0 $this .version::JM,60664
60660 :: CALL :: call :: Ljava/lang/String :: v24 = v22.trim()::JM,60664
60664 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .version = v24::
60668 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v26 = new java.lang.RuntimeException::
60669 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
60674 :: EXPR :: reference :: Ljava/lang/String :: v30 = p0 $this .server::
60677 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v27.append(v30)::
60682 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v32.append(#(getScopVersion))::
60687 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
60697 :: EXPR :: reference :: Ljava/lang/String :: v38 = p0 $this .version::DD,60700
60700 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,60609
60701 :: EXPR :: assign :: Ljava/lang/Exception :: v25 = catch <exc>::
60718 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.ensureClaInstalled()::CD,60725:CD,60729
60722 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v3 = p0 $this .installedCla::JM,60729
60725 :: CALL :: call :: Z :: v5 = v3.get()::JM,60729
60729 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 12::CD,60731:CD,60735:CD,60739:CD,60745
60731 :: CALL :: call :: Z :: v8 = p0 $this .claFileAvailable()::JM,60735:CL,70295
60735 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 23::CD,60736
60736 :: CALL :: call :: V :: p0 $this .downloadClaFile()::CL,70333
60739 :: CALL :: call :: V :: p0 $this .parseClassification()::CL,70425
60742 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedCla::JM,60745
60745 :: CALL :: call :: V :: v11.set(#(1))::JM,60745
60782 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.clone()::CE,60783:CD,60786:CD,60790:CD,60798:CD,60806:CD,60814:CD,60822:CD,60830:CD,60838:CD,60846:CD,60854:CD,60862:CD,60870:CD,60878:CD,60886:CD,60890
60783 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.scop.ScopDomain.clone()::JM,52693
60786 :: CALL :: call :: Ljava/lang/Object :: v4 = p0 $this .clone()::
60790 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v5 = new org.biojava.nbio.structure.scop.ScopDomain::DD,60890
60798 :: CALL :: call :: V :: v5.setClassId(v8)::CL,70492
60806 :: CALL :: call :: V :: v5.setClassificationId(v11)::CL,70512
60814 :: CALL :: call :: V :: v5.setDomainId(v14)::CL,70532
60822 :: CALL :: call :: V :: v5.setFamilyId(v17)::CL,70552
60830 :: CALL :: call :: V :: v5.setFoldId(v20)::CL,70572
60838 :: CALL :: call :: V :: v5.setPdbId(v23)::CL,70583
60846 :: CALL :: call :: V :: v5.setPx(v26)::CL,70603
60854 :: CALL :: call :: V :: v5.setRanges(v29)::CL,70614
60862 :: CALL :: call :: V :: v5.setScopId(v32)::CL,70625
60870 :: CALL :: call :: V :: v5.setSpeciesId(v35)::CL,70645
60878 :: CALL :: call :: V :: v5.setSunid(v38)::CL,70665
60886 :: CALL :: call :: V :: v5.setSuperfamilyId(v41)::CL,70685
60890 :: NORM :: compound :: Ljava/lang/Object :: return v5::DD,60783
60920 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::CE,60921:CD,60924:CD,60926:CD,60930:CD,60931:CD,60939:CD,60944:CD,60946:CD,60947:CD,60953:CD,60958:CD,60963:CD,60973:CD,60974
60921 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: org.biojava.nbio.structure.scop.server.ScopDomains.fromXML(java.lang.String)::JM,52881:JM,52826
60924 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.ScopDomains.jaxbContext::JM,60944:JM,60939:JM,60926
60926 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,60944:JM,60939:JM,60926
60930 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,60944:JM,60939
60931 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
60939 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,60944:JM,60939
60944 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,60973
60946 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
60947 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::
60953 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(v19)::
60958 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( from XML))::
60963 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
60973 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/server/ScopDomains :: return v13::DD,60921
60974 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
60986 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.fromString(java.lang.String)::CD,60990:CD,61005:CD,61016
60990 :: PRED :: IF :: Z :: if (p1 $pdb_code  != #(null)) goto 6::CD,60996:CD,61000:CD,61028:CD,61032:CD,61059
60996 :: CALL :: call :: I :: v7 = parseInt(p1 $pdb_code )::JM,60990
61000 :: CALL :: call :: Ljava/lang/Integer :: v9 = valueOf(v7)::
61005 :: CALL :: call :: [Ljava/lang/String :: v13 = p1 $pdb_code .split(#((?<=\d)(?=\D)|(?<=\D)...))::
61012 :: EXPR :: reference :: Ljava/lang/Object :: v17 = v13[#(0)]::
61016 :: CALL :: call :: I :: v19 = parseInt(v17)::
61024 :: EXPR :: reference :: Ljava/lang/Object :: v23 = v13[#(1)]::DD,61059
61028 :: CALL :: call :: V :: v4.setSeqNum(v25)::CL,70705
61032 :: PRED :: IF :: Z :: if (v26 != #(null)) goto 80::CD,61033:CD,61038:CD,61042
61033 :: CALL :: call :: V :: v4.setInsCode(#(null))::CL,70716
61038 :: CALL :: call :: I :: v29 = v26.length()::JM,61042
61042 :: PRED :: IF :: Z :: if (v29 <= #(0)) goto 99::CD,61043:CD,61052
61043 :: CALL :: call :: C :: v31 = v26.charAt(#(0))::
61052 :: CALL :: call :: V :: v4.setInsCode(v33)::CL,70716
61059 :: EXPR :: assign :: null :: PHI v26 = #(null), #(null), v23::DD,61032:JM,61042
61082 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.reloadFromFile()::CD,61086:CD,61090:CD,61097:CD,61101
61086 :: CALL :: call :: Ljava/io/File :: v4 = p0 $this .getCacheFile()::JM,61137:JM,61109:CL,70727
61090 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
61097 :: CALL :: call :: Z :: v8 = v4.exists()::JM,61101
61101 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 55::CD,61104:CD,61109:CD,61113:CD,61118:CD,61132:CD,61137:CD,61141:CD,61146:CD,61159:CD,61164:CD,61168:CD,61172:CD,61194:CD,61199:CD,61203:CD,61208:CD,61216:CD,61220:CD,61224:CD,61229:CD,61234
61104 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
61109 :: CALL :: call :: Ljava/lang/String :: v67 = v4.getAbsolutePath()::JM,61137:JM,61109
61113 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
61118 :: CALL :: call :: Ljava/lang/String :: v71 = v69.toString()::
61132 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
61137 :: CALL :: call :: Ljava/lang/String :: v15 = v4.getAbsolutePath()::JM,61137:JM,61109
61141 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v11.append(v15)::
61146 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toString()::
61159 :: NORM :: declaration :: Ljava/io/ObjectInputStream :: v23 = new java.io.ObjectInputStream::
61164 :: CALL :: call :: Ljava/lang/Object :: v26 = v23.readObject()::JM,61168
61168 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v26::DD,61169
61169 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .serializedCache = v32::
61172 :: CALL :: call :: V :: v23.close()::
61194 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
61199 :: CALL :: call :: Ljava/lang/String :: v42 = v4.getName()::JM,61137:JM,61109
61203 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
61208 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( size: ))::
61213 :: EXPR :: reference :: Ljava/util/Map :: v48 = p0 $this .serializedCache::
61216 :: CALL :: call :: Ljava/util/Set :: v50 = v48.keySet()::
61220 :: CALL :: call :: I :: v52 = v50.size()::
61224 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v47.append(v52)::
61229 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#( cached records.))::
61234 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
61278 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::CE,61279:CD,61282:CD,61284:CD,61288:CD,61289:CD,61297:CD,61302:CD,61304:CD,61307:CD,61309
61279 :: EXIT :: exit :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: org.biojava.nbio.structure.domain.AssignmentXMLSerializer.fromXML(java.lang.String)::JM,53248:JM,53202:JM,53174:JM,53206:JM,53207:JM,53193:JM,53180:JM,53212:JM,53244:JM,53197
61282 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.domain.AssignmentXMLSerializer.jaxbContext::JM,61297:JM,61284:JM,61302
61284 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,61297:JM,61284:JM,61302
61288 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,61297:JM,61302
61289 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
61297 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,61297:JM,61302
61302 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,61309
61304 :: CALL :: call :: V :: v14.printStackTrace()::
61307 :: NORM :: compound :: Lorg/biojava/nbio/structure/domain/AssignmentXMLSerializer :: return v17::DD,61279
61309 :: EXPR :: assign :: null :: PHI v17 = v13, #(null)::CF,61307
61320 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.getInputStream(java.net.URL,boolean,int)::CD,61326
61326 :: CALL :: call :: Ljava/net/HttpURLConnection :: v7 = openHttpURLConnection(p1 $url , p3 $timeout )::CL,70990
61387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.flushCache()::CD,61394
61391 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .serializedCache::DD,61394
61394 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 9::CD,61400:CD,61409:CD,61417:CD,61421
61400 :: CALL :: call :: Ljava/io/File :: v7 = p0 $this .getCacheFile()::CL,70727
61409 :: NORM :: declaration :: Ljava/io/ObjectOutputStream :: v10 = new java.io.ObjectOutputStream::
61414 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .serializedCache::
61417 :: CALL :: call :: V :: v10.writeObject(v12)::
61421 :: CALL :: call :: V :: v10.close()::
61457 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.flagLoading(java.lang.String)::CD,61465:CD,61470
61465 :: CALL :: call :: Z :: v6 = v4.contains(p1 $name )::JM,61470
61470 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 24::CD,61474
61474 :: CALL :: call :: Z :: v10 = v8.add(p1 $name )::
61486 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getStructureById(java.lang.String)::CD,61491:CD,61496
61491 :: CALL :: call :: Ljava/io/InputStream :: v5 = p0 $this .getInputStream(p1 $pdbId )::CL,71274
61496 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .getStructure(v5)::CL,71362:CL,55981
61507 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.AtomCache.flagLoadingFinished(java.lang.String)::CD,61515
61515 :: CALL :: call :: Z :: v6 = v4.remove(p1 $name )::
61534 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.documentEnd()::CD,61541:CD,61600:CD,61607:CD,61728:CD,61732:CD,61750:CD,61754:CD,61800:CD,61804:CD,61820:CD,61824:CD,61840:CD,61844:CD,62150:CD,62154:CD,62177:CD,62183:CD,62187:CD,62194:CD,62198:CD,62378:CD,62381:CD,62384:CD,62391:CD,62498:CD,62502:CD,62503:CD,62507:CD,62538:CD,62543:CD,62548:CD,62556:CD,62560
61538 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .current_chain::DD,61541
61541 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 57::CD,61548:CD,61562:CD,61567
61548 :: CALL :: call :: V :: v12.addGroup(v13)::CL,48899
61562 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = isKnownChain(v17, v18)::JM,61567:CL,71433
61567 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 78::CD,61574
61568 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .current_model::
61571 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v22 = p0 $this .current_chain::
61574 :: CALL :: call :: Z :: v24 = v21.add(v22)::
61600 :: CALL :: call :: V :: v25.addModel(v26)::CL,48117
61604 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .structAsyms::JM,61616:JM,61732
61607 :: CALL :: call :: Ljava/util/Iterator :: v30 = v28.iterator()::JM,61616:JM,61732
61612 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,61616:JM,61732
61616 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,61692
61644 :: CALL :: call :: Ljava/lang/Object :: v49 = v43.put(v45, v47)::
61654 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v53 = p0 $this .getEntityChain(v51)::CL,71487
61659 :: CALL :: call :: Ljava/lang/Object :: v55 = v53.clone()::CL,71556
61664 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .removeSeqResHeterogeneity(v56)::CL,71737
61673 :: CALL :: call :: V :: v58.setChainID(v60)::CL,48752
61677 :: EXPR :: reference :: Ljava/util/List :: v62 = p0 $this .seqResChains::
61680 :: CALL :: call :: Z :: v64 = v62.add(v58)::
61687 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
61692 :: CALL :: call :: Ljava/lang/String :: v70 = v35.getId()::JM,61692
61696 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
61701 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#( ))::
61706 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v75.append(v58)::
61711 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v77.append(#(<))::
61716 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::
61724 :: CALL :: call :: V :: p0 $this .addCompounds(v35)::CL,71858
61728 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,61616:JM,61732
61732 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 104::CD,61612:CD,61616:CD,61644:CD,61654:CD,61659:CD,61664:CD,61673:CD,61680:CD,61687:CD,61692:CD,61696:CD,61701:CD,61706:CD,61711:CD,61716:CD,61724:CD,61728:JM,61732
61750 :: CALL :: call :: Z :: v93 = v91.isAlignSeqRes()::JM,61754:CL,72398
61754 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 321::CD,61758:CD,61762:CD,61792
61758 :: CALL :: call :: Z :: v96 = v94.isHeaderOnly()::JM,61762:CL,71478
61762 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 321::CD,61769:CD,61792
61769 :: CALL :: call :: V :: p0 $this .alignSeqRes()::CL,72407
61792 :: CALL :: call :: V :: storeUnAlignedSeqRes(v100, v101, v104)::CL,72649
61797 :: EXPR :: reference :: Ljava/util/Map :: v110 = p0 $this .asymStrandId::JM,61804
61800 :: CALL :: call :: Z :: v112 = v110.isEmpty()::JM,61804
61804 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 382::
61811 :: EXPR :: reference :: Ljava/util/Map :: v116 = p0 $this .asymId2StrandIdFromAtomSites::DD,61814
61814 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymStrandId = v116::
61817 :: EXPR :: reference :: Ljava/util/Map :: v117 = p0 $this .asymId2StrandIdFromAtomSites::JM,61824
61820 :: CALL :: call :: Z :: v119 = v117.isEmpty()::JM,61824
61824 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 413::
61831 :: EXPR :: reference :: Ljava/util/Map :: v123 = p0 $this .asymStrandId::DD,61834
61834 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .asymId2StrandIdFromAtomSites = v123::
61840 :: CALL :: call :: Z :: v126 = v124.isUseInternalChainId()::JM,61844:CL,72792
61844 :: PRED :: IF :: Z :: if (v126 != #(0)) goto 845::CD,62062:CD,62066:CD,62142:CD,62146:CD,62570:CD,62573
61849 :: CALL :: call :: Ljava/util/List :: v170 = v168.getModel(v257)::JM,62049:JM,61867:CL,48170
61854 :: NORM :: declaration :: Ljava/util/ArrayList :: v171 = new java.util.ArrayList::
61858 :: CALL :: call :: Ljava/util/Iterator :: v174 = v170.iterator()::JM,62049:JM,61867
61863 :: CALL :: call :: Ljava/lang/Object :: v178 = v174.next()::JM,62049:JM,61867
61867 :: EXPR :: assign :: Ljava/lang/Object :: v179 = CHECKCAST v178::
61868 :: EXPR :: reference :: Ljava/util/Map :: v180 = p0 $this .asymId2StrandIdFromAtomSites::JM,61884:JM,62044
61871 :: CALL :: call :: Ljava/util/Set :: v182 = v180.keySet()::JM,61884:JM,62044
61875 :: CALL :: call :: Ljava/util/Iterator :: v184 = v182.iterator()::JM,61884:JM,62044
61880 :: CALL :: call :: Ljava/lang/Object :: v188 = v184.next()::JM,61884:JM,62044
61884 :: EXPR :: assign :: Ljava/lang/Object :: v189 = CHECKCAST v188::JM,61894
61885 :: CALL :: call :: Ljava/lang/String :: v191 = v179.getChainID()::JM,61894:CL,48319
61889 :: CALL :: call :: Z :: v193 = v191.equals(v189)::JM,61894
61894 :: PRED :: IF :: Z :: if (v193 == #(0)) goto 795::CF,62568:CD,61898:CD,61911:CD,61915:CD,61919:CD,61936:CD,61940:CD,61944:CD,61948:CD,61967:CD,61971:CD,61972:CD,61976:CD,61995:CD,61999:CD,62004:CD,62009:CD,62040:CD,62044:CD,62565:CD,62566:CD,62569
61898 :: CALL :: call :: Ljava/lang/Object :: v196 = v194.get(v189)::
61911 :: CALL :: call :: Ljava/util/List :: v203 = v179.getAtomGroups()::CL,48461
61915 :: CALL :: call :: I :: v205 = v203.size()::
61919 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
61936 :: CALL :: call :: V :: v179.setChainID(v197)::CL,48752
61940 :: CALL :: call :: V :: v179.setInternalChainID(v189)::CL,72801
61944 :: CALL :: call :: Ljava/util/List :: v213 = v179.getAtomGroups()::JM,61971:CL,48461
61948 :: CALL :: call :: Ljava/util/Iterator :: v215 = v213.iterator()::JM,61971
61953 :: CALL :: call :: Ljava/lang/Object :: v219 = v215.next()::JM,61971
61958 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v222 = v220.getResidueNumber()::JM,61962:CL,56367
61962 :: PRED :: IF :: Z :: if (v222 == #(null)) goto 644::CF,62565:CD,61963
61963 :: CALL :: call :: V :: v222.setChainId(v197)::CL,48328
61967 :: CALL :: call :: Z :: v217 = v215.hasNext()::JM,61971
61971 :: PRED :: IF :: Z :: if (v217 != #(0)) goto 611::CD,61953:CD,61958:CD,61962:CD,61967:CD,62565:JM,61971
61972 :: CALL :: call :: Ljava/util/List :: v225 = v179.getSeqResGroups()::JM,61999:CL,48832
61976 :: CALL :: call :: Ljava/util/Iterator :: v227 = v225.iterator()::JM,61999
61981 :: CALL :: call :: Ljava/lang/Object :: v231 = v227.next()::JM,61999
61986 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v234 = v232.getResidueNumber()::JM,61990:CL,56367
61990 :: PRED :: IF :: Z :: if (v234 == #(null)) goto 704::CF,62566:CD,61991
61991 :: CALL :: call :: V :: v234.setChainId(v197)::CL,48328
61995 :: CALL :: call :: Z :: v229 = v227.hasNext()::JM,61999
61999 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 671::CD,61981:CD,61986:CD,61990:CD,61995:CD,62566:JM,61999
62004 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v240 = isKnownChain(v238, v171)::JM,62009:CL,71433
62009 :: PRED :: IF :: Z :: if (v240 != #(null)) goto 744::CD,62010:CD,62016:CD,62020:CD,62034:CD,62038:CD,62567:CD,62569
62010 :: CALL :: call :: Z :: v242 = v171.add(v179)::
62016 :: CALL :: call :: Ljava/util/List :: v244 = v179.getAtomGroups()::JM,62038:CL,48461
62020 :: CALL :: call :: Ljava/util/Iterator :: v246 = v244.iterator()::JM,62038
62025 :: CALL :: call :: Ljava/lang/Object :: v250 = v246.next()::JM,62038
62030 :: CALL :: call :: V :: v240.addGroup(v251)::CL,48899
62034 :: CALL :: call :: Z :: v248 = v246.hasNext()::JM,62038
62038 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 761::CD,62025:CD,62030:CD,62034:CD,62567:JM,62038
62040 :: CALL :: call :: Z :: v186 = v184.hasNext()::JM,61884:JM,62044
62044 :: PRED :: IF :: Z :: if (v186 != #(0)) goto 490::CF,62569:CD,61880:CD,61884:CD,61885:CD,61889:CD,61894:CD,62568:JM,62044
62045 :: CALL :: call :: Z :: v176 = v174.hasNext()::JM,62049:JM,61867
62049 :: PRED :: IF :: Z :: if (v176 != #(0)) goto 459::CD,61863:CD,61867:CD,61871:CD,61875:CD,62040:CD,62044:CD,62045:CD,62568:CD,62569:JM,62049
62053 :: CALL :: call :: V :: v254.setModel(v259, v171)::CL,48187
62058 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v259 + #(1)::DD,62570
62062 :: CALL :: call :: I :: v167 = v165.nrModels()::JM,62066:CL,49141
62066 :: PRED :: IF :: Z :: if (v257 < v167) goto 428::CD,61849:CD,61854:CD,61858:CD,62045:CD,62049:CD,62053:CD,62058:CD,62062:CD,62569:CD,62570
62072 :: CALL :: call :: Ljava/util/List :: v132 = v130.getModel(v161)::JM,62137:CL,48170
62077 :: CALL :: call :: Ljava/util/Iterator :: v134 = v132.iterator()::JM,62137
62082 :: CALL :: call :: Ljava/lang/Object :: v138 = v134.next()::JM,62137
62087 :: EXPR :: reference :: Ljava/util/Map :: v140 = p0 $this .asymId2StrandIdFromAtomSites::JM,62132:JM,62103
62090 :: CALL :: call :: Ljava/util/Set :: v142 = v140.keySet()::JM,62132:JM,62103
62094 :: CALL :: call :: Ljava/util/Iterator :: v144 = v142.iterator()::JM,62132:JM,62103
62099 :: CALL :: call :: Ljava/lang/Object :: v148 = v144.next()::JM,62132:JM,62103
62103 :: EXPR :: assign :: Ljava/lang/Object :: v149 = CHECKCAST v148::JM,62113
62104 :: CALL :: call :: Ljava/lang/String :: v151 = v139.getChainID()::JM,62113:CL,48319
62108 :: CALL :: call :: Z :: v153 = v151.equals(v149)::JM,62113
62113 :: PRED :: IF :: Z :: if (v153 == #(0)) goto 955::CF,62571:CD,62117:CD,62123:CD,62128:CD,62132:CD,62572
62117 :: CALL :: call :: Ljava/lang/Object :: v156 = v154.get(v149)::
62123 :: CALL :: call :: V :: v139.setInternalChainID(v157)::CL,72801
62128 :: CALL :: call :: Z :: v146 = v144.hasNext()::JM,62132:JM,62103
62132 :: PRED :: IF :: Z :: if (v146 != #(0)) goto 902::CF,62572:CD,62099:CD,62103:CD,62104:CD,62108:CD,62113:CD,62571:JM,62132
62133 :: CALL :: call :: Z :: v136 = v134.hasNext()::JM,62137
62137 :: PRED :: IF :: Z :: if (v136 != #(0)) goto 872::CD,62082:CD,62090:CD,62094:CD,62128:CD,62132:CD,62133:CD,62571:CD,62572:JM,62137:CF,62138
62138 :: EXPR :: assign :: Ljava/lang/Object :: v160 = v163 + #(1)::DD,62573
62142 :: CALL :: call :: I :: v129 = v127.nrModels()::JM,62146:CL,49141
62146 :: PRED :: IF :: Z :: if (v161 < v129) goto 849::CD,62072:CD,62077:CD,62133:CD,62137:CD,62138:CD,62142:CD,62572:CD,62573
62150 :: CALL :: call :: Z :: v268 = v266.isHeaderOnly()::JM,62154:CL,71478
62154 :: PRED :: IF :: Z :: if (v268 != #(0)) goto 1028::CD,62158:CD,62162:CD,62169:CD,62173
62158 :: CALL :: call :: Z :: v271 = v269.shouldCreateAtomBonds()::JM,62162:CL,72812
62162 :: PRED :: IF :: Z :: if (v271 == #(0)) goto 1014::CD,62163
62163 :: CALL :: call :: V :: p0 $this .addBonds()::CL,72821
62169 :: CALL :: call :: Z :: v275 = v273.shouldCreateAtomCharges()::JM,62173:CL,72855
62173 :: PRED :: IF :: Z :: if (v275 == #(0)) goto 1028::CD,62174
62174 :: CALL :: call :: V :: p0 $this .addCharges()::CL,72864
62177 :: CALL :: call :: V :: p0 $this .linkCompounds()::CL,72876
62183 :: CALL :: call :: Z :: v280 = v278.isHeaderOnly()::JM,62187:CL,71478
62187 :: PRED :: IF :: Z :: if (v280 != #(0)) goto 1046::CD,62188
62188 :: CALL :: call :: V :: p0 $this .addSites()::CL,73186
62194 :: CALL :: call :: Z :: v284 = v282.isParseBioAssembly()::JM,62198:CL,73597
62198 :: PRED :: IF :: Z :: if (v284 == #(0)) goto 1349::CF,62199:CD,62206:CD,62362:CD,62366:CD,62374
62199 :: NORM :: declaration :: Ljava/util/HashMap :: v285 = new java.util.HashMap::
62203 :: EXPR :: reference :: Ljava/util/List :: v287 = p0 $this .strucAssemblies::JM,62215:JM,62366
62206 :: CALL :: call :: Ljava/util/Iterator :: v289 = v287.iterator()::JM,62215:JM,62366
62211 :: CALL :: call :: Ljava/lang/Object :: v293 = v289.next()::JM,62215:JM,62366
62215 :: EXPR :: assign :: Ljava/lang/Object :: v294 = CHECKCAST v293::JM,62242:JM,62247:JM,62238:JM,62272:JM,62574:JM,62292:CF,62216
62216 :: NORM :: declaration :: Ljava/util/ArrayList :: v295 = new java.util.ArrayList::
62221 :: EXPR :: reference :: Ljava/util/List :: v297 = p0 $this .strucAssemblyGens::JM,62257:JM,62233
62224 :: CALL :: call :: Ljava/util/Iterator :: v299 = v297.iterator()::JM,62257:JM,62233
62229 :: CALL :: call :: Ljava/lang/Object :: v303 = v299.next()::JM,62257:JM,62233
62233 :: EXPR :: assign :: Ljava/lang/Object :: v304 = CHECKCAST v303::JM,62242:JM,62247:JM,62234
62234 :: CALL :: call :: Ljava/lang/String :: v306 = v304.getAssembly_id()::JM,62242:JM,62247:JM,62234
62238 :: CALL :: call :: Ljava/lang/String :: v308 = v294.getId()::JM,62242:JM,62247:JM,62238
62242 :: CALL :: call :: Z :: v310 = v306.equals(v308)::JM,62242:JM,62247
62247 :: PRED :: IF :: Z :: if (v310 == #(0)) goto 1149::CD,62248:JM,62257:JM,62233
62248 :: CALL :: call :: Z :: v312 = v295.add(v304)::
62253 :: CALL :: call :: Z :: v301 = v299.hasNext()::JM,62257:JM,62233
62257 :: PRED :: IF :: Z :: if (v301 != #(0)) goto 1112::CD,62229:CD,62233:CD,62234:CD,62238:CD,62242:CD,62247:CD,62253:JM,62257
62265 :: CALL :: call :: Ljava/util/ArrayList :: v317 = v313.getBioUnitTransformationList(v294, v295, v315)::CL,73628
62272 :: CALL :: call :: Ljava/lang/String :: v320 = v294.getId()::JM,62272:JM,62574
62276 :: CALL :: call :: I :: v322 = parseInt(v320)::JM,62574
62292 :: CALL :: call :: Ljava/lang/String :: v332 = v294.getOligomeric_count()::JM,62292
62296 :: CALL :: call :: I :: v334 = parseInt(v332)::
62335 :: PRED :: IF :: Z :: if (v330 == #(-1)) goto 1327::CD,62340:CD,62344:CD,62348:CD,62352:CD,62356:JM,62215:JM,62366
62340 :: CALL :: call :: V :: v354.setId(v330)::CL,73761
62344 :: CALL :: call :: V :: v354.setMacromolecularSize(v350)::CL,73772
62348 :: CALL :: call :: V :: v354.setTransforms(v317)::CL,73783
62352 :: CALL :: call :: Ljava/lang/Integer :: v360 = valueOf(v330)::
62356 :: CALL :: call :: Ljava/lang/Object :: v362 = v285.put(v360, v354)::
62362 :: CALL :: call :: Z :: v291 = v289.hasNext()::JM,62215:JM,62366
62366 :: PRED :: IF :: Z :: if (v291 != #(0)) goto 1077::CD,62211:CD,62215:CD,62216:CD,62224:CD,62253:CD,62257:JM,73620:JM,73613:CD,62265:CD,62272:CD,62276:CD,62292:CD,62296:CD,62335:CD,62362:CD,62574:JM,62366
62374 :: CALL :: call :: V :: v365.setBioAssemblies(v285)::CL,73794
62378 :: CALL :: call :: V :: p0 $this .setStructNcsOps()::CL,73805
62381 :: CALL :: call :: V :: p0 $this .setCrystallographicInfoMetadata()::CL,74179
62384 :: NORM :: declaration :: Ljava/util/HashMap :: v372 = new java.util.HashMap::JM,62560:JM,62516
62388 :: EXPR :: reference :: Ljava/util/List :: v374 = p0 $this .sequenceDifs::JM,62502
62391 :: CALL :: call :: Ljava/util/Iterator :: v376 = v374.iterator()::JM,62502
62396 :: CALL :: call :: Ljava/lang/Object :: v380 = v376.next()::JM,62502
62401 :: NORM :: declaration :: Lorg/biojava/nbio/structure/SeqMisMatchImpl :: v382 = new org.biojava.nbio.structure.SeqMisMatchImpl::
62409 :: CALL :: call :: V :: v382.setDetails(v385)::CL,74241
62424 :: CALL :: call :: V :: v382.setInsCode(v392)::CL,74252
62432 :: CALL :: call :: V :: v382.setOrigGroup(v395)::CL,74263
62440 :: CALL :: call :: V :: v382.setPdbGroup(v398)::CL,74274
62448 :: CALL :: call :: V :: v382.setPdbResNum(v401)::CL,74285
62456 :: CALL :: call :: V :: v382.setUniProtId(v404)::CL,74296
62464 :: CALL :: call :: V :: v382.setSeqNum(v407)::CL,74307
62472 :: CALL :: call :: Ljava/lang/Object :: v412 = v372.get(v410)::JM,62477
62477 :: EXPR :: assign :: Ljava/lang/Object :: v413 = CHECKCAST v412::DD,62478:DD,62577
62478 :: PRED :: IF :: Z :: if (v413 != #(null)) goto 1542::CF,62577:CF,62479:CD,62487
62479 :: NORM :: declaration :: Ljava/util/ArrayList :: v414 = new java.util.ArrayList::DD,62577
62487 :: CALL :: call :: Ljava/lang/Object :: v419 = v372.put(v417, v414)::
62493 :: CALL :: call :: Z :: v422 = v420.add(v382)::
62498 :: CALL :: call :: Z :: v378 = v376.hasNext()::JM,62502
62502 :: PRED :: IF :: Z :: if (v378 != #(0)) goto 1378::CD,62396:CD,62401:CD,62409:CD,62424:CD,62432:CD,62440:CD,62448:CD,62456:CD,62464:CD,62472:CD,62477:CD,62478:CD,62493:CD,62498:CD,62577:JM,62502:JM,62560:JM,62516
62503 :: CALL :: call :: Ljava/util/Set :: v425 = v372.keySet()::JM,62560:JM,62516
62507 :: CALL :: call :: Ljava/util/Iterator :: v427 = v425.iterator()::JM,62560:JM,62516
62512 :: CALL :: call :: Ljava/lang/Object :: v431 = v427.next()::JM,62560:JM,62516
62516 :: EXPR :: assign :: Ljava/lang/Object :: v432 = CHECKCAST v431::
62520 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v435 = v433.getChainByPDB(v432)::CL,74318
62525 :: CALL :: call :: Ljava/lang/Object :: v437 = v372.get(v432)::
62531 :: CALL :: call :: V :: v435.setSeqMisMatches(v438)::CL,48888
62538 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v443 = new java.lang.StringBuilder::
62543 :: CALL :: call :: Ljava/lang/StringBuilder :: v447 = v443.append(v432)::
62548 :: CALL :: call :: Ljava/lang/String :: v449 = v447.toString()::
62556 :: CALL :: call :: Z :: v429 = v427.hasNext()::JM,62560:JM,62516
62560 :: PRED :: IF :: Z :: if (v429 != #(0)) goto 1573::CD,62512:CD,62516:CD,62520:CD,62525:CD,62531:CD,62556:JM,62560
62565 :: EXPR :: assign :: null :: PHI v261 = v260, v261, v261::JM,61971:DD,62565:DD,62566
62566 :: EXPR :: assign :: null :: PHI v262 = v261, v262, v262::JM,61999:DD,62566:DD,62567:DD,62569
62567 :: EXPR :: assign :: null :: PHI v263 = v262, v263::JM,62038:DD,62567:DD,62569
62568 :: EXPR :: assign :: null :: PHI v260 = v259, v260::JM,61884:JM,62044:DD,62565:DD,62568:DD,62569
62569 :: EXPR :: assign :: null :: PHI v259 = v257, v262, v263, v260::JM,62049:JM,61867:DD,62058:DD,62568
62570 :: EXPR :: assign :: null :: PHI v257 = #(0), v256::DD,62066:DD,62569
62571 :: EXPR :: assign :: null :: PHI v164 = v163, v164::JM,62132:JM,62103:DD,62571:DD,62572
62572 :: EXPR :: assign :: null :: PHI v163 = v161, v164, v164::JM,62137:DD,62138:DD,62571
62573 :: EXPR :: assign :: null :: PHI v161 = #(0), v160::DD,62146:DD,62572
62574 :: EXPR :: assign :: null :: PHI v330 = v322, #(-1)::JM,62292:DD,62335
62577 :: EXPR :: assign :: null :: PHI v420 = v413, v414::
62887 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::CE,62888:CD,62892:CD,62896:CD,62900:CD,62904:JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,63004:JM,63084:JM,63183
62888 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.processSingleLine(java.lang.String)::JM,54259:JM,54269
62892 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,62905:DD,62921:DD,63199
62896 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .trim()::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62900 :: CALL :: call :: I :: v9 = v7.length()::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62904 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,62905:CD,62906:CD,62910:CD,62914:JM,63200:JM,63201:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62905 :: NORM :: compound :: Ljava/util/List :: return v4::DD,62888
62906 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .trim()::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62910 :: CALL :: call :: I :: v14 = v12.length()::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62914 :: PRED :: IF :: Z :: if (v14 != #(1)) goto 58::CD,62915:CD,62920:CD,63179:CD,63183:CD,63184:CD,63188:CD,63193:CD,63199:CD,63211:CD,63212:CD,63213:CD,63214:CD,63215:JM,63200:JM,63201:JM,62914:JM,62963:JM,62936:JM,62904:JM,63004:JM,63084
62915 :: CALL :: call :: Z :: v18 = p1 $line .startsWith(#(;))::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62920 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 58::CD,62921:CD,63179:CD,63183:CD,63184:CD,63188:CD,63193:CD,63199:CD,63211:CD,63212:CD,63213:CD,63214:CD,63215
62921 :: NORM :: compound :: Ljava/util/List :: return v4::DD,62888
62923 :: CALL :: call :: C :: v23 = p1 $line .charAt(v145)::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62928 :: CALL :: call :: Ljava/lang/Character :: v25 = valueOf(v23)::JM,63200:JM,63201:JM,62914:JM,62963:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62932 :: CALL :: call :: I :: v28 = p1 $line .length()::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62936 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v28 - #(1)::CF,62937
62937 :: PRED :: IF :: Z :: if (v145 >= v29) goto 104::CF,63200:CD,62938:CD,62939:CD,62944
62938 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v145 + #(1)::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62939 :: CALL :: call :: C :: v32 = p1 $line .charAt(v30)::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62944 :: CALL :: call :: Ljava/lang/Character :: v34 = valueOf(v32)::JM,63200:JM,63201:JM,62914:JM,62963:JM,62904:JM,63004:JM,63084:JM,63183
62948 :: PRED :: IF :: Z :: if (v145 <= #(0)) goto 122::CF,63201:CD,62949:CD,62950:CD,62955
62949 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v145 - #(1)::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62950 :: CALL :: call :: C :: v38 = p1 $line .charAt(v36)::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
62955 :: CALL :: call :: Ljava/lang/Character :: v40 = valueOf(v38)::JM,63200:JM,63201:JM,62914:JM,62963:JM,62904:JM,63004:JM,63084:JM,63183
62959 :: CALL :: call :: C :: v43 = v25.charValue()::JM,63200:JM,63201:JM,62963:JM,63004:JM,63084
62963 :: PRED :: IF :: Z :: if (v43 != #(32)) goto 192::CD,62964:CD,63000:CD,63004:JM,63200:JM,63201:JM,62963:JM,63084
62964 :: PRED :: IF :: Z :: if (v141 != #(0)) goto 165::CF,62981:CD,62965:CD,62970:CD,62982:CD,62990:CD,62995:CD,63206:CD,63207:CD,63208:CD,63209:CD,63210
62965 :: CALL :: call :: Z :: v46 = v144.equals(#())::JM,62970
62970 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 162::CD,62971:CD,62975
62971 :: CALL :: call :: Ljava/lang/String :: v48 = v144.trim()::
62975 :: CALL :: call :: Z :: v50 = v4.add(v48)::
62981 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
62982 :: CALL :: call :: Ljava/lang/String :: v53 = valueOf(v144)::
62990 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v51.append(v25)::JM,63209
62995 :: CALL :: call :: Ljava/lang/String :: v58 = v56.toString()::JM,63209
63000 :: CALL :: call :: C :: v60 = v25.charValue()::JM,63200:JM,63201:JM,62963:JM,63004:JM,63084
63004 :: PRED :: IF :: Z :: if (v60 != #(39)) goto 350::CD,63005:CD,63080:CD,63084:JM,63200:JM,63201:JM,62963:JM,63004
63005 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 302::CD,63006:CD,63018:CD,63054:CD,63202:CD,63203
63006 :: PRED :: IF :: Z :: if (v143 != #(0)) goto 236::CF,63202:CD,63007
63007 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 228::CD,63008:CD,63012:CD,63016:CD,63017:CD,63202:CD,63203
63008 :: CALL :: call :: C :: v63 = v35.charValue()::JM,63016
63012 :: CALL :: call :: Z :: v65 = isWhitespace(v63)::JM,63016
63016 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 236::CF,63202:CD,63017:CD,63203
63017 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v145 + #(1)::DD,63202
63018 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 275::CF,63035:CD,63019:CD,63024:CD,63036:CD,63044:CD,63049:CD,63206:CD,63207:CD,63208:CD,63209:CD,63210
63019 :: CALL :: call :: Z :: v70 = v144.equals(#())::JM,63024
63024 :: PRED :: IF :: Z :: if (v70 != #(0)) goto 272::CD,63025:CD,63029
63025 :: CALL :: call :: Ljava/lang/String :: v72 = v144.trim()::
63029 :: CALL :: call :: Z :: v74 = v4.add(v72)::
63035 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v75 = new java.lang.StringBuilder::
63036 :: CALL :: call :: Ljava/lang/String :: v77 = valueOf(v144)::
63044 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v75.append(v25)::JM,63209
63049 :: CALL :: call :: Ljava/lang/String :: v82 = v80.toString()::JM,63209
63054 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 320::CD,63055:CD,63059:CD,63206:CD,63207:CD,63208:CD,63209:CD,63210
63055 :: CALL :: call :: C :: v84 = v41.charValue()::JM,63059
63059 :: PRED :: IF :: Z :: if (v84 != #(32)) goto 323::CF,63061:CD,63062:CD,63070:CD,63075:CD,63206:CD,63207:CD,63208:CD,63209:CD,63210
63061 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
63062 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v144)::
63070 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v25)::JM,63209
63075 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,63209
63080 :: CALL :: call :: C :: v94 = v25.charValue()::JM,63200:JM,63201:JM,62963:JM,63004:JM,63084
63084 :: PRED :: IF :: Z :: if (v94 != #(34)) goto 506::CF,63160:CD,63085:CD,63161:CD,63169:CD,63174:CD,63206:CD,63207:CD,63208:CD,63209:CD,63210
63085 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 460::CD,63086:CD,63098:CD,63134:CD,63204:CD,63205
63086 :: PRED :: IF :: Z :: if (v142 != #(0)) goto 394::CF,63204:CD,63087
63087 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 386::CD,63088:CD,63092:CD,63096:CD,63097:CD,63204:CD,63205
63088 :: CALL :: call :: C :: v97 = v35.charValue()::JM,63096
63092 :: CALL :: call :: Z :: v99 = isWhitespace(v97)::JM,63096
63096 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 394::CF,63204:CD,63097:CD,63205
63097 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v145 + #(1)::DD,63204
63098 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 433::CF,63115:CD,63099:CD,63104:CD,63116:CD,63124:CD,63129:CD,63206:CD,63207:CD,63208:CD,63209:CD,63210
63099 :: CALL :: call :: Z :: v104 = v144.equals(#())::JM,63104
63104 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 430::CD,63105:CD,63109
63105 :: CALL :: call :: Ljava/lang/String :: v106 = v144.trim()::
63109 :: CALL :: call :: Z :: v108 = v4.add(v106)::
63115 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v109 = new java.lang.StringBuilder::
63116 :: CALL :: call :: Ljava/lang/String :: v111 = valueOf(v144)::
63124 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v109.append(v25)::JM,63209
63129 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::JM,63209
63134 :: PRED :: IF :: Z :: if (v41 == #(null)) goto 478::CD,63135:CD,63139:CD,63206:CD,63207:CD,63208:CD,63209:CD,63210
63135 :: CALL :: call :: C :: v118 = v41.charValue()::JM,63139
63139 :: PRED :: IF :: Z :: if (v118 != #(32)) goto 481::CF,63141:CD,63142:CD,63150:CD,63155:CD,63206:CD,63207:CD,63208:CD,63209:CD,63210
63141 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
63142 :: CALL :: call :: Ljava/lang/String :: v121 = valueOf(v144)::
63150 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v119.append(v25)::JM,63209
63155 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::JM,63209
63160 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v127 = new java.lang.StringBuilder::
63161 :: CALL :: call :: Ljava/lang/String :: v129 = valueOf(v144)::
63169 :: CALL :: call :: Ljava/lang/StringBuilder :: v132 = v127.append(v25)::JM,63209
63174 :: CALL :: call :: Ljava/lang/String :: v134 = v132.toString()::JM,63209
63178 :: EXPR :: assign :: Ljava/lang/Object :: v140 = v139 + #(1)::DD,63215:CF,63211
63179 :: CALL :: call :: I :: v21 = p1 $line .length()::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:JM,63183
63183 :: PRED :: IF :: Z :: if (v145 < v21) goto 64::CD,62923:CD,62928:CD,62932:CD,62936:CD,62937:CD,62948:CD,62959:CD,62963:CD,63178:CD,63179:CD,63200:CD,63201:CD,63206:CD,63207:CD,63208:CD,63209:CD,63210:CD,63211:CD,63212:CD,63213:CD,63214:CD,63215:JM,62914:JM,62920:JM,62904:JM,63004:JM,63084:JM,63183:JM,63193
63184 :: CALL :: call :: Ljava/lang/String :: v147 = v144.trim()::JM,63193
63188 :: CALL :: call :: Z :: v149 = v147.equals(#())::JM,63193
63193 :: PRED :: IF :: Z :: if (v149 != #(0)) goto 564::CD,63194:CF,63199
63194 :: CALL :: call :: Z :: v151 = v4.add(v144)::
63199 :: NORM :: compound :: Ljava/util/List :: return v4::DD,62888
63200 :: EXPR :: assign :: null :: PHI v35 = #(null), v34::DD,63007:JM,63016:DD,63087:JM,63096:CF,62948
63201 :: EXPR :: assign :: null :: PHI v41 = #(null), v40::JM,63200:JM,63201:JM,62963:JM,63004:JM,63084:DD,63054:JM,63059:DD,63134:JM,63139
63202 :: EXPR :: assign :: null :: PHI v67 = v145, v145, v66::CF,63203:DD,63210
63203 :: EXPR :: assign :: null :: PHI v68 = #(0), #(0), #(1)::DD,63018
63204 :: EXPR :: assign :: null :: PHI v101 = v145, v145, v100::CF,63205:DD,63210
63205 :: EXPR :: assign :: null :: PHI v102 = #(0), #(0), #(1)::DD,63098
63206 :: EXPR :: assign :: null :: PHI v135 = v141, v141, #(0), v141, #(1), v141, #(0), v141, #(1), v141, v141::CF,63207:DD,63211
63207 :: EXPR :: assign :: null :: PHI v136 = v142, v142, #(0), v142, #(1), v142, v142, v142, v142, v142, v142::CF,63208:DD,63212
63208 :: EXPR :: assign :: null :: PHI v137 = v143, v143, v143, v143, v143, v143, #(0), v143, #(1), v143, v143::CF,63209:DD,63213
63209 :: EXPR :: assign :: null :: PHI v138 = #(), v58, #(), v82, v144, v92, #(), v116, v144, v126, v134::CF,63210:DD,63214
63210 :: EXPR :: assign :: null :: PHI v139 = v145, v145, v67, v67, v145, v145, v101, v101, v145, v145, v145::DD,63178
63211 :: EXPR :: assign :: null :: PHI v141 = #(0), v135::CF,63212:DD,62964:DD,63005:DD,63085:DD,63206
63212 :: EXPR :: assign :: null :: PHI v142 = #(0), v136::CF,63213:DD,63086:DD,63207
63213 :: EXPR :: assign :: null :: PHI v143 = #(0), v137::CF,63214:DD,63006:DD,63208
63214 :: EXPR :: assign :: null :: PHI v144 = #(), v138::CF,63215:JM,62970:JM,63024:JM,63104:JM,63193:DD,63209
63215 :: EXPR :: assign :: null :: PHI v145 = #(0), v140::JM,63200:JM,63201:JM,62914:JM,62963:JM,62920:JM,62936:JM,62904:JM,63004:JM,63084:DD,62937:DD,62938:DD,62948:DD,62949:DD,63017:DD,63097:DD,63183:DD,63202:DD,63204:DD,63210
63377 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::CE,63378:CD,63385:CD,63389:CD,63406:CD,63407:CD,63415:CD,63419:CD,63423:CD,63440:CD,63441:CD,63461:CD,63462:CD,63463:CD,63649:CD,63653:CD,63654:CD,63657:CD,63658:CD,63659:JM,63479
63378 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.buildObject(java.lang.String,java.util.List,java.util.List,java.util.Set)::JM,54651
63385 :: CALL :: call :: Ljava/lang/Class :: v9 = forName(p1 $className )::JM,63653:JM,63654:JM,63479:JM,63385:JM,63389
63389 :: CALL :: call :: Ljava/lang/Object :: v11 = v9.newInstance()::JM,63653:JM,63654:JM,63479:JM,63389
63406 :: NORM :: compound :: Ljava/lang/Object :: return #(null)::DD,63378
63407 :: CALL :: call :: [Ljava/lang/reflect/Field :: v20 = getFields(v9)::JM,63461:CL,74333
63415 :: CALL :: call :: [Ljava/lang/reflect/Method :: v24 = v9.getMethods()::JM,63423
63419 :: NORM :: declaration :: Ljava/util/HashMap :: v25 = new java.util.HashMap::
63423 :: EXPR :: assign :: I :: v27 = v24.length::DD,63440
63433 :: CALL :: call :: Ljava/lang/Object :: v33 = v25.put(v31, v29)::
63439 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v36 + #(1)::DD,63657
63440 :: PRED :: IF :: Z :: if (v36 < v27) goto 91::CF,63441:CD,63433:CD,63439:CD,63657
63441 :: NORM :: declaration :: Ljava/util/HashMap :: v37 = new java.util.HashMap::
63454 :: CALL :: call :: Ljava/lang/Object :: v43 = v37.put(v40, v41)::
63460 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v45 + #(1)::DD,63658
63461 :: EXPR :: assign :: I :: v39 = v20.length::CF,63462
63462 :: PRED :: IF :: Z :: if (v45 < v39) goto 140::CD,63454:CD,63460:CD,63461:CD,63658:JM,63653:JM,63654:JM,63479:JM,63385:JM,63389
63463 :: CALL :: call :: Ljava/util/Iterator :: v48 = p2 $loopFields .iterator()::JM,63653:JM,63654:JM,63479:JM,63385:JM,63389
63468 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.next()::JM,63653:JM,63654:JM,63479:JM,63389
63473 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v97 + #(1)::JM,63653:JM,63654:JM,63479:JM,63389:DD,63659
63474 :: CALL :: call :: Ljava/lang/Object :: v56 = p3 $lineData .get(v54)::JM,63653:JM,63654:JM,63479:JM,63389
63479 :: EXPR :: assign :: Ljava/lang/Object :: v57 = CHECKCAST v56::DD,63584:JM,63590:JM,63596
63480 :: CALL :: call :: Ljava/lang/Object :: v59 = v37.get(v53)::JM,63485
63485 :: EXPR :: assign :: Ljava/lang/Object :: v60 = CHECKCAST v59::DD,63486:JM,63504:JM,63510:JM,63500:JM,63531:JM,63519:JM,63523:JM,63527
63486 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 239::CF,63495:CD,63487:CD,63500:CD,63504:CD,63510:CD,63514:CD,63519:CD,63523:CD,63527:CD,63531:CD,63537:CD,63542:CD,63546:CD,63551:CD,63552:CD,63659
63487 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,74510
63495 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
63500 :: CALL :: call :: Ljava/lang/String :: v65 = v60.getName()::JM,63504:JM,63510:JM,63500
63504 :: CALL :: call :: Ljava/lang/String :: v67 = v65.substring(#(0), #(1))::JM,63504:JM,63510
63510 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,63510
63514 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v61.append(v69)::
63519 :: CALL :: call :: Ljava/lang/String :: v73 = v60.getName()::JM,63531:JM,63519
63523 :: CALL :: call :: Ljava/lang/String :: v75 = v60.getName()::JM,63523:JM,63527:JM,63531
63527 :: CALL :: call :: I :: v77 = v75.length()::JM,63527:JM,63531
63531 :: CALL :: call :: Ljava/lang/String :: v79 = v73.substring(#(1), v77)::JM,63531
63537 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v71.append(v79)::
63542 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
63546 :: CALL :: call :: Ljava/lang/Object :: v85 = v25.get(v83)::JM,63551
63551 :: EXPR :: assign :: Ljava/lang/Object :: v86 = CHECKCAST v85::DD,63552:JM,63561
63552 :: PRED :: IF :: Z :: if (v86 != #(null)) goto 326::CD,63553:CD,63561:CD,63569:CD,63573:CD,63574:CD,63578:CD,63583:CD,63659
63553 :: CALL :: call :: V :: p0 $this .produceWarning(v53, v57, v9, p4 $warnings )::CL,74510
63561 :: CALL :: call :: [Ljava/lang/Class :: v88 = v86.getParameterTypes()::JM,63561
63565 :: EXPR :: reference :: Ljava/lang/Object :: v89 = v88[#(0)]::JM,63569:JM,63578:JM,63583
63569 :: CALL :: call :: Ljava/lang/String :: v91 = v89.getName()::JM,63569:JM,63578:JM,63583
63573 :: EXPR :: assign :: Ljava/lang/Class :: v92 = metadata <Application,Ljava/lang/Integer>-><Primordial,Ljava/lang/Class>::JM,63574:JM,63578:JM,63583
63574 :: CALL :: call :: Ljava/lang/String :: v94 = v92.getName()::JM,63574:JM,63578:JM,63583
63578 :: CALL :: call :: Z :: v96 = v91.equals(v94)::JM,63578:JM,63583
63583 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 411::CD,63584:CD,63659
63584 :: PRED :: IF :: Z :: if (v57 == #(null)) goto 459::CF,63659:CD,63585:CD,63590
63585 :: CALL :: call :: Z :: v101 = v57.equals(#(?))::JM,63590
63590 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 459::CF,63659:CD,63591:CD,63596
63591 :: CALL :: call :: Z :: v104 = v57.equals(#(.))::JM,63596
63596 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 459::CF,63659:CD,63597:CD,63601
63597 :: CALL :: call :: I :: v108 = parseInt(v57)::
63601 :: CALL :: call :: Ljava/lang/Integer :: v110 = valueOf(v108)::
63649 :: CALL :: call :: Z :: v50 = v48.hasNext()::JM,63653:JM,63654:JM,63479:JM,63389
63653 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 179::CD,63468:CD,63473:CD,63474:CD,63479:CD,63480:CD,63485:CD,63486:CD,63649:CD,63659:JM,63653:JM,63389:CF,63654
63654 :: NORM :: compound :: Ljava/lang/Object :: return v11::DD,63378
63657 :: EXPR :: assign :: null :: PHI v36 = #(0), v35::DD,63439:DD,63440
63658 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,63460:DD,63462:CF,63461
63659 :: EXPR :: assign :: null :: PHI v97 = #(-1), v54, v54, v54, v54, v54, v54, v54, v54::JM,63653:JM,63654:JM,63479:JM,63389:DD,63473
63780 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,63788:CD,63802:CD,63806
63785 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,63806
63788 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,63806
63793 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,63806
63798 :: CALL :: call :: V :: v12.newEntity(p1 $entity )::CL,74660
63802 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,63806
63806 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,63793:CD,63798:CD,63802:JM,63806
63816 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,63824:CD,63838:CD,63842
63821 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,63842
63824 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,63842
63829 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,63842
63834 :: CALL :: call :: V :: v12.newAtomSite(p1 $atom )::CL,74703
63838 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,63842
63842 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,63829:CD,63834:CD,63838:JM,63842
63852 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,63860:CD,63874:CD,63878
63857 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,63878
63860 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,63878
63865 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,63878
63870 :: CALL :: call :: V :: v12.newDatabasePDBrev(p1 $dbrev )::CL,75538
63874 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,63878
63878 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,63865:CD,63870:CD,63874:JM,63878
63888 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,63896:CD,63910:CD,63914
63893 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,63914
63896 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,63914
63901 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,63914
63906 :: CALL :: call :: V :: v12.newDatabasePDBrevRecord(p1 $dbrev )::CL,75697
63910 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,63914
63914 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,63901:CD,63906:CD,63910:JM,63914
63924 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,63932:CD,63946:CD,63950
63929 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,63950
63932 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,63950
63937 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,63950
63942 :: CALL :: call :: V :: v12.newDatabasePDBremark(p1 $remark )::CL,75771
63946 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,63950
63950 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,63937:CD,63942:CD,63946:JM,63950
63960 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,63968:CD,63982:CD,63986
63965 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,63986
63968 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,63986
63973 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,63986
63978 :: CALL :: call :: V :: v12.newExptl(p1 $exptl )::CL,75872
63982 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,63986
63986 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,63973:CD,63978:CD,63982:JM,63986
63996 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,64004:CD,64018:CD,64022
64001 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64022
64004 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64022
64009 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64022
64014 :: CALL :: call :: V :: v12.newCell(p1 $cell )::CL,75913
64018 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64022
64022 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64009:CD,64014:CD,64018:JM,64022
64032 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,64040:CD,64054:CD,64058
64037 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64058
64040 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64058
64045 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64058
64050 :: CALL :: call :: V :: v12.newSymmetry(p1 $symmetry )::CL,76112
64054 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64058
64058 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64045:CD,64050:CD,64054:JM,64058
64068 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,64076:CD,64090:CD,64094
64073 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64094
64076 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64094
64081 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64094
64086 :: CALL :: call :: V :: v12.newStructNcsOper(p1 $sNcsOper )::CL,76221
64090 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64094
64094 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64081:CD,64086:CD,64090:JM,64094
64104 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,64112:CD,64126:CD,64130
64109 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64130
64112 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64130
64117 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64130
64122 :: CALL :: call :: V :: v12.newAtomSites(p1 $atomSites )::CL,76244
64126 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64130
64130 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64117:CD,64122:CD,64126:JM,64130
64140 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,64148:CD,64162:CD,64166
64145 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64166
64148 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64166
64153 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64166
64158 :: CALL :: call :: V :: v12.newStructRef(p1 $sref )::CL,76424
64162 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64166
64166 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64153:CD,64158:CD,64162:JM,64166
64176 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,64184:CD,64198:CD,64202
64181 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64202
64184 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64202
64189 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64202
64194 :: CALL :: call :: V :: v12.newStructRefSeq(p1 $sref )::CL,76465
64198 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64202
64202 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64189:CD,64194:CD,64198:JM,64202
64212 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStrucRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,64220:CD,64234:CD,64238
64217 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64238
64220 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64238
64225 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64238
64230 :: CALL :: call :: V :: v12.newStructRefSeqDif(p1 $sref )::CL,76867
64234 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64238
64238 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64225:CD,64230:CD,64234:JM,64238
64248 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,64256:CD,64270:CD,64274
64253 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64274
64256 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64274
64261 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64274
64266 :: CALL :: call :: V :: v12.newStructSiteGen(p1 $id )::CL,76896
64270 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64274
64274 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64261:CD,64266:CD,64270:JM,64274
64284 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,64292:CD,64306:CD,64310
64289 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64310
64292 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64310
64297 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64310
64302 :: CALL :: call :: V :: v12.newStructSite(p1 $id )::CL,76919
64306 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64310
64310 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64297:CD,64302:CD,64306:JM,64310
64320 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,64328:CD,64342:CD,64346
64325 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64346
64328 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64346
64333 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64346
64338 :: CALL :: call :: V :: v12.newEntityPolySeq(p1 $epolseq )::CL,77050
64342 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64346
64346 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64333:CD,64338:CD,64342:JM,64346
64356 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,64364:CD,64378:CD,64382
64361 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64382
64364 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64382
64369 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64382
64374 :: CALL :: call :: V :: v12.newEntitySrcGen(p1 $entitySrcGen )::CL,77355
64378 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64382
64382 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64369:CD,64374:CD,64378:JM,64382
64392 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,64400:CD,64414:CD,64418
64397 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64418
64400 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64418
64405 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64418
64410 :: CALL :: call :: V :: v12.newEntitySrcNat(p1 $entitySrcNat )::CL,77372
64414 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64418
64418 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64405:CD,64410:CD,64414:JM,64418
64428 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,64436:CD,64450:CD,64454
64433 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64454
64436 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64454
64441 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64454
64446 :: CALL :: call :: V :: v12.newEntitySrcSyn(p1 $entitySrcSyn )::CL,77401
64450 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64454
64454 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64441:CD,64446:CD,64450:JM,64454
64464 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,64472:CD,64486:CD,64490
64469 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64490
64472 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64490
64477 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64490
64482 :: CALL :: call :: V :: v12.newStructAsym(p1 $sasym )::CL,77424
64486 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64490
64490 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64477:CD,64482:CD,64486:JM,64490
64500 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,64508:CD,64522:CD,64526
64505 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64526
64508 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64526
64513 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64526
64518 :: CALL :: call :: V :: v12.newPdbxPolySeqScheme(p1 $ppss )::CL,77447
64522 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64526
64526 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64513:CD,64518:CD,64522:JM,64526
64536 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,64544:CD,64558:CD,64562
64541 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64562
64544 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64562
64549 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64562
64554 :: CALL :: call :: V :: v12.newPdbxNonPolyScheme(p1 $ppss )::CL,77520
64558 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64562
64562 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64549:CD,64554:CD,64558:JM,64562
64572 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxEntityNonPoly(org.biojava.nbio.structure.io.mmcif.model.PdbxEntityNonPoly)::CD,64580:CD,64594:CD,64598
64577 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64598
64580 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64598
64585 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64598
64594 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64598
64598 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64585:CD,64594:JM,64598
64608 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,64616:CD,64630:CD,64634
64613 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64634
64616 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64634
64621 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64634
64626 :: CALL :: call :: V :: v12.newStructKeywords(p1 $kw )::CL,77617
64630 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64634
64634 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64621:CD,64626:CD,64630:JM,64634
64644 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,64652:CD,64666:CD,64670
64649 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64670
64652 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64670
64657 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64670
64662 :: CALL :: call :: V :: v12.newRefine(p1 $r )::CL,77661
64666 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64670
64670 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64657:CD,64662:CD,64666:JM,64670
64680 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,64688:CD,64702:CD,64706
64685 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64706
64688 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64706
64693 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64706
64698 :: CALL :: call :: V :: v12.newChemComp(p1 $cc )::CL,77871
64702 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64706
64706 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64693:CD,64698:CD,64702:JM,64706
64716 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,64724:CD,64738:CD,64742
64721 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64742
64724 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64742
64729 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64742
64734 :: CALL :: call :: V :: v12.newAuditAuthor(p1 $aa )::CL,77962
64738 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64742
64742 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64729:CD,64734:CD,64738:JM,64742
64752 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,64760:CD,64774:CD,64778
64757 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64778
64760 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64778
64765 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64778
64770 :: CALL :: call :: V :: v12.newChemCompDescriptor(p1 $ccd )::CL,78140
64774 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64778
64778 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64765:CD,64770:CD,64774:JM,64778
64788 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructOper(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,64796:CD,64810:CD,64814
64793 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64814
64796 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64814
64801 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64814
64806 :: CALL :: call :: V :: v12.newPdbxStructOperList(p1 $structOper )::CL,78178
64810 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64814
64814 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64801:CD,64806:CD,64810:JM,64814
64824 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,64832:CD,64846:CD,64850
64829 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64850
64832 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64850
64837 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64850
64842 :: CALL :: call :: V :: v12.newPdbxStrucAssembly(p1 $sa )::CL,78207
64846 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64850
64850 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64837:CD,64842:CD,64846:JM,64850
64860 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxStructAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,64868:CD,64882:CD,64886
64865 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64886
64868 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64886
64873 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64886
64878 :: CALL :: call :: V :: v12.newPdbxStrucAssemblyGen(p1 $sa )::CL,78224
64882 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64886
64886 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64873:CD,64878:CD,64882:JM,64886
64896 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,64904:CD,64918:CD,64922
64901 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64922
64904 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64922
64909 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64922
64914 :: CALL :: call :: V :: v12.newChemCompAtom(p1 $atom )::CL,78253
64918 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64922
64922 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64909:CD,64914:CD,64918:JM,64922
64932 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,64940:CD,64954:CD,64958
64937 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64958
64940 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64958
64945 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64958
64950 :: CALL :: call :: V :: v12.newChemCompBond(p1 $bond )::CL,78289
64954 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64958
64958 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64945:CD,64950:CD,64954:JM,64958
64968 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompIdentifier(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompIdentifier)::CD,64976:CD,64990:CD,64994
64973 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,64994
64976 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,64994
64981 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,64994
64990 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,64994
64994 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,64981:CD,64990:JM,64994
65004 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewPdbxChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.PdbxChemCompDescriptor)::CD,65012:CD,65026:CD,65030
65009 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,65030
65012 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,65030
65017 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,65030
65026 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,65030
65030 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,65017:CD,65026:JM,65030
65040 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerNewStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,65048:CD,65062:CD,65066
65045 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .consumers::JM,65066
65048 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,65066
65053 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,65066
65058 :: CALL :: call :: V :: v12.newStructConn(p1 $id )::CL,78349
65062 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,65066
65066 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,65053:CD,65058:CD,65062:JM,65066
65076 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.triggerGeneric(java.lang.String,java.util.List,java.util.List)::CD,65086:CD,65102:CD,65106
65083 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .consumers::JM,65106
65086 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,65106
65091 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,65106
65102 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,65106
65106 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 16::CD,65091:CD,65102:JM,65106
65124 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStruct(org.biojava.nbio.structure.io.mmcif.model.Struct)::CD,65132:CD,65136:CD,65145:CD,65153:CD,65160:CD,65171
65132 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,65136:CL,47832
65136 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,56087:JM,56103:JM,56120:JM,56095:JM,56127
65145 :: CALL :: call :: V :: v10.setTitle(v12)::CL,78391
65153 :: CALL :: call :: V :: v10.setIdCode(v15)::CL,78411
65160 :: CALL :: call :: V :: v17.setPDBHeader(v10)::CL,47841
65171 :: CALL :: call :: V :: v19.setPDBCode(v21)::CL,47821
65209 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65216 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65223 :: NORM :: declaration :: Ljava/util/ArrayList :: v10 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65230 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65237 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65244 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65251 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v18 = new java.util.LinkedHashMap::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65258 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65281 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65308 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65315 :: NORM :: declaration :: Ljava/util/ArrayList :: v33 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65322 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65329 :: NORM :: declaration :: Ljava/util/ArrayList :: v37 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65339 :: NORM :: declaration :: Ljava/util/ArrayList :: v39 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65389 :: NORM :: declaration :: Ljava/util/ArrayList :: v51 = new java.util.ArrayList::JM,56087:JM,56103:JM,56120:JM,32397:JM,56095:JM,56127
65508 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.InputStream)::CD,65513:CD,65518
65513 :: CALL :: call :: Ljava/io/BufferedReader :: v5 = p0 $this .getBufferedReader(p1 $inStream )::CL,78440
65518 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p0 $this .parsePDBFile(v5)::CL,78470
65529 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache)::CE,65530:CD,65545:CD,65561
65530 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache)::JM,56056
65545 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v12 = getBiologicalAssembly(p1 $pdbId , p2 $biolAssemblyNr , p3 $cache , v10)::JM,65561:CL,79280
65561 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v12::DD,65530
65601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueRange.toString(java.util.List)::CE,65602:CD,65605:CD,65632:CD,65636:CD,65637:CD,65641:CD,65642:JM,65624
65602 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueRange.toString(java.util.List)::
65605 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,65641
65610 :: CALL :: call :: Ljava/lang/Object :: v9 = p1 $ranges .get(v20)::JM,65636:JM,65624
65615 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v3.append(v9)::
65620 :: CALL :: call :: I :: v13 = p1 $ranges .size()::JM,65636:JM,65624
65625 :: PRED :: IF :: Z :: if (v20 >= v15) goto 44::CD,65626:CF,65631
65624 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v13 - #(1)::CF,65625
65626 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v3.append(#(,))::
65631 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v20 + #(1)::DD,65642
65632 :: CALL :: call :: I :: v7 = p1 $ranges .size()::JM,65636:JM,65624
65637 :: CALL :: call :: Ljava/lang/String :: v22 = v3.toString()::JM,65641
65636 :: PRED :: IF :: Z :: if (v20 < v7) goto 16::CD,65610:CD,65615:CD,65620:CD,65624:CD,65625:CD,65631:CD,65632:CD,65642:JM,65636:JM,65641
65641 :: NORM :: compound :: Ljava/lang/String :: return v22::DD,65602
65642 :: EXPR :: assign :: null :: PHI v20 = #(0), v19::JM,65624:DD,65625:DD,65631:DD,65636
65662 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findCompoundsFromAlignment()::CD,65666:CD,65670:CD,65715:CD,65719:CD,65723:CD,65724:CD,65728:CD,66331:CD,66335:CD,66336:CD,66402:CD,66406:CD,66408
65666 :: NORM :: declaration :: Ljava/util/TreeSet :: v3 = new java.util.TreeSet::JM,65737:JM,66335:JM,65751:JM,66330:JM,66324:JM,66406
65670 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
65678 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v15 = v13.getChain(v29)::CL,79468
65683 :: CALL :: call :: Z :: v17 = isChainPureNonPolymer(v15)::JM,65687:CL,79485
65687 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 59::CD,65691:CD,65696:CD,65702:CD,65706
65691 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v20 = v18.getChain(v29)::CL,79468
65696 :: CALL :: call :: Z :: v22 = v5.add(v20)::
65702 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v29)::
65706 :: CALL :: call :: Z :: v26 = v3.add(v24)::
65711 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,66408
65715 :: CALL :: call :: Ljava/util/List :: v10 = v8.getChains()::JM,65723:CL,79536
65719 :: CALL :: call :: I :: v12 = v10.size()::JM,65723
65723 :: PRED :: IF :: Z :: if (v29 < v12) goto 22::CF,65724:CD,65678:CD,65683:CD,65687:CD,65711:CD,65715:CD,65719:CD,66408
65724 :: NORM :: declaration :: Ljava/util/TreeMap :: v30 = new java.util.TreeMap::JM,66324
65728 :: CALL :: call :: Ljava/util/Iterator :: v33 = v3.iterator()::JM,65737:JM,66335
65733 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,65737:JM,66335
65737 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,65756
65738 :: CALL :: call :: I :: v40 = v38.intValue()::JM,65756
65742 :: CALL :: call :: Ljava/util/Iterator :: v42 = v3.iterator()::JM,65751:JM,66330
65747 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,65751:JM,66330
65751 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::JM,65756
65752 :: CALL :: call :: I :: v49 = v47.intValue()::JM,65756
65756 :: PRED :: IF :: Z :: if (v49 > v40) goto 163::CD,65761:CD,65769:CD,65774:CD,65778:CD,65786:CD,65796:CD,65802:CD,65807:CD,66326:CD,66330
65761 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v52 = v50.getChain(v40)::CL,79468
65769 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v55 = v53.getChain(v49)::CL,79468
65774 :: NORM :: declaration :: Ljava/util/HashMap :: v56 = new java.util.HashMap::
65778 :: NORM :: declaration :: Ljava/util/HashMap :: v58 = new java.util.HashMap::
65786 :: CALL :: call :: Ljava/lang/String :: v63 = getFullAtomSequence(v61, v56, #(0))::CL,79548
65796 :: CALL :: call :: Ljava/lang/String :: v67 = getFullAtomSequence(v65, v58, #(0))::CL,79548
65802 :: CALL :: call :: Z :: v70 = p0 $this .isProteinSequence(v63)::JM,65807:CL,79879
65807 :: PRED :: IF :: Z :: if (v70 == #(0)) goto 309::CD,65808:CD,65813:CD,65839:CD,65844
65808 :: CALL :: call :: Z :: v72 = p0 $this .isProteinSequence(v67)::JM,65813:CL,79879
65813 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 309::CD,65814:CD,65819:CD,65824:CD,65828:CD,65832:CD,65839:CD,65844:CD,65920:CD,65924:CD,65928:CD,65932:CD,65936:CD,65937:CD,65941:CD,65942:CD,65943:CD,65944:CD,65945:CD,65946:CD,65947:CD,65948:CD,65949:CD,65970:CD,65978:CD,65988:CD,65996:CD,66006:CD,66014:CD,66030:CD,66035:CD,66040:CD,66045:CD,66053:CD,66054:CD,66237:CD,66238:CD,66316:CD,66320:CD,66324:CD,66409:CD,66410:CD,66411
65814 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v74 = p0 $this .getProteinSequence(v63)::JM,65824:JM,66409:CL,79895
65819 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v76 = p0 $this .getProteinSequence(v67)::JM,65828:JM,66410:CL,79895
65824 :: CALL :: call :: I :: v78 = v74.getLength()::JM,65824:JM,66409
65828 :: CALL :: call :: I :: v80 = v76.getLength()::JM,65828:JM,66410
65832 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v82 = p0 $this .alignProtein(v74, v76)::JM,66411:CL,79920
65839 :: CALL :: call :: Z :: v84 = p0 $this .isDNASequence(v63)::JM,65844:CL,79960
65845 :: CALL :: call :: Z :: v86 = p0 $this .isDNASequence(v67)::JM,65850:CL,79960
65844 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 370::CD,65845:CD,65850:CD,65876:CD,65881
65851 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v88 = p0 $this .getDNASequence(v63)::JM,65861:JM,66409:CL,79976
65850 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 370::CD,65851:CD,65856:CD,65861:CD,65865:CD,65869:CD,65876:CD,65881:CD,65920:CD,65924:CD,65928:CD,65932:CD,65936:CD,65937:CD,65941:CD,65942:CD,65943:CD,65944:CD,65945:CD,65946:CD,65947:CD,65948:CD,65949:CD,65970:CD,65978:CD,65988:CD,65996:CD,66006:CD,66014:CD,66030:CD,66035:CD,66040:CD,66045:CD,66053:CD,66054:CD,66237:CD,66238:CD,66316:CD,66320:CD,66324:CD,66409:CD,66410:CD,66411
65856 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/DNASequence :: v90 = p0 $this .getDNASequence(v67)::JM,65865:JM,66410:CL,79976
65861 :: CALL :: call :: I :: v92 = v88.getLength()::JM,65861:JM,66409
65865 :: CALL :: call :: I :: v94 = v90.getLength()::JM,65865:JM,66410
65869 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v96 = p0 $this .alignDNA(v88, v90)::JM,66411:CL,80001
65876 :: CALL :: call :: Z :: v98 = p0 $this .isRNASequence(v63)::JM,65881:CL,80041
65881 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 428::CD,65882:CD,65887:CD,66326:CD,66330
65882 :: CALL :: call :: Z :: v100 = p0 $this .isRNASequence(v67)::JM,65887:CL,80041
65887 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 428::CD,65888:CD,65893:CD,65898:CD,65902:CD,65906:CD,65920:CD,65924:CD,65928:CD,65932:CD,65936:CD,65937:CD,65941:CD,65942:CD,65943:CD,65944:CD,65945:CD,65946:CD,65947:CD,65948:CD,65949:CD,65970:CD,65978:CD,65988:CD,65996:CD,66006:CD,66014:CD,66030:CD,66035:CD,66040:CD,66045:CD,66053:CD,66054:CD,66237:CD,66238:CD,66316:CD,66320:CD,66324:CD,66326:CD,66330:CD,66409:CD,66410:CD,66411
65888 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v102 = p0 $this .getRNASequence(v63)::JM,66409:JM,65898:CL,80057
65893 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/RNASequence :: v104 = p0 $this .getRNASequence(v67)::JM,66410:JM,65902:CL,80057
65898 :: CALL :: call :: I :: v106 = v102.getLength()::JM,66409:JM,65898
65902 :: CALL :: call :: I :: v108 = v104.getLength()::JM,66410:JM,65902
65906 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v110 = p0 $this .alignRNA(v102, v104)::JM,66411:CL,80082
65920 :: CALL :: call :: I :: v117 = getNumGaps(v113)::JM,65936:CL,80122
65924 :: CALL :: call :: I :: v119 = getNumGapsQuery(v113)::JM,65944:CL,80158
65928 :: CALL :: call :: I :: v121 = getNumGapsTarget(v113)::JM,65947:CL,80205
65932 :: CALL :: call :: I :: v123 = v113.getLength()::JM,65936:JM,65932
65937 :: CALL :: call :: I :: v126 = v113.getNumIdenticals()::JM,65937:JM,65941
65936 :: EXPR :: assign :: Ljava/lang/Object :: v124 = v123 - v117::DD,65942:JM,65937:JM,65941
65941 :: EXPR :: assign :: D :: v127 = CONVERT I to D v126::DD,65943:CF,65942
65943 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v127 / v128::JM,65970:DD,66053:DD,66237:JM,66278:CF,65944
65942 :: EXPR :: assign :: D :: v128 = CONVERT I to D v124::CF,65943
65945 :: EXPR :: assign :: D :: v131 = CONVERT I to D v111::CF,65946
65944 :: EXPR :: assign :: D :: v130 = CONVERT I to D v119::DD,65946:CF,65945
65947 :: EXPR :: assign :: D :: v133 = CONVERT I to D v121::DD,65949:CF,65948
65946 :: EXPR :: assign :: Ljava/lang/Object :: v132 = v130 / v131::JM,65988:DD,66055:CF,65947
65949 :: EXPR :: assign :: Ljava/lang/Object :: v135 = v133 / v134::JM,66006:DD,66057
65948 :: EXPR :: assign :: D :: v134 = CONVERT I to D v112::CF,65949
65970 :: CALL :: call :: Ljava/lang/Double :: v148 = valueOf(v129)::JM,65970
65978 :: CALL :: call :: Ljava/lang/String :: v150 = format(#(%4.2f), v146)::
65988 :: CALL :: call :: Ljava/lang/Double :: v154 = valueOf(v132)::JM,65988
65996 :: CALL :: call :: Ljava/lang/String :: v156 = format(#(%4.2f), v152)::
66006 :: CALL :: call :: Ljava/lang/Double :: v160 = valueOf(v135)::JM,66006
66014 :: CALL :: call :: Ljava/lang/String :: v162 = format(#(%4.2f), v158)::
66030 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
66035 :: CALL :: call :: Ljava/lang/String :: v170 = v113.toString(#(100))::JM,66035
66040 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v165.append(v170)::
66045 :: CALL :: call :: Ljava/lang/String :: v174 = v172.toString()::
66053 :: EXPR :: assign :: Z :: v177 = v129 < #(0.99999 d)::DD,66054
66055 :: EXPR :: assign :: Z :: v179 = v132 > #(0.3 d)::DD,66056
66054 :: PRED :: IF :: Z :: if (v177 <= #(0)) goto 952::CD,66055:CD,66056
66057 :: EXPR :: assign :: Z :: v180 = v135 > #(0.3 d)::DD,66058
66056 :: PRED :: IF :: Z :: if (v179 >= #(0)) goto 952::CD,66057:CD,66058
66058 :: PRED :: IF :: Z :: if (v180 >= #(0)) goto 952::CD,66063:CD,66068:CD,66215
66063 :: CALL :: call :: Z :: v184 = v30.containsKey(v182)::JM,66068
66068 :: PRED :: IF :: Z :: if (v184 != #(0)) goto 785::CD,66073:CD,66078:CD,66137:CD,66142:CD,66143
66073 :: CALL :: call :: Z :: v188 = v30.containsKey(v186)::JM,66078
66078 :: PRED :: IF :: Z :: if (v188 != #(0)) goto 785::JM,80388:JM,80395:CD,66099:CD,66103:CD,66108:CD,66116:CD,66126:CD,66137:CD,66142:CD,66143
66099 :: CALL :: call :: V :: v196.addChain(v52)::CL,80499
66103 :: CALL :: call :: V :: v196.addChain(v55)::CL,80499
66108 :: CALL :: call :: V :: v196.setMolId(v290)::CL,80516
66116 :: CALL :: call :: Ljava/lang/Object :: v205 = v30.put(v203, v196)::
66126 :: CALL :: call :: Ljava/lang/Object :: v209 = v30.put(v207, v196)::
66137 :: CALL :: call :: Ljava/lang/Object :: v213 = v30.get(v211)::JM,66142
66143 :: PRED :: IF :: Z :: if (v214 != #(null)) goto 868::CD,66164:CD,66170:CD,66178:CD,66201:CD,66209
66142 :: EXPR :: assign :: Ljava/lang/Object :: v214 = CHECKCAST v213::DD,66143
66164 :: CALL :: call :: Ljava/lang/Object :: v225 = v30.get(v223)::
66170 :: CALL :: call :: V :: v226.addChain(v52)::CL,80499
66178 :: CALL :: call :: Ljava/lang/Object :: v231 = v30.put(v229, v226)::
66201 :: CALL :: call :: V :: v214.addChain(v55)::CL,80499
66209 :: CALL :: call :: Ljava/lang/Object :: v242 = v30.put(v240, v214)::
66215 :: CALL :: call :: Z :: v246 = areResNumbersAligned(v52, v55)::CL,80551
66237 :: EXPR :: assign :: Z :: v256 = v129 < #(1.0 d)::DD,66238
66238 :: PRED :: IF :: Z :: if (v256 <= #(0)) goto 1054::CD,66258:CD,66262:CD,66270:CD,66278:CD,66293:CD,66298:CD,66303:CD,66308:JM,66324
66258 :: CALL :: call :: I :: v265 = v113.getNumIdenticals()::JM,66258
66262 :: CALL :: call :: Ljava/lang/Integer :: v267 = valueOf(v265)::
66270 :: CALL :: call :: Ljava/lang/Integer :: v269 = valueOf(v124)::
66278 :: CALL :: call :: Ljava/lang/Double :: v271 = valueOf(v129)::JM,66278
66293 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v274 = new java.lang.StringBuilder::
66298 :: CALL :: call :: Ljava/lang/String :: v277 = v113.toString(#(100))::JM,66298
66303 :: CALL :: call :: Ljava/lang/StringBuilder :: v279 = v274.append(v277)::
66308 :: CALL :: call :: Ljava/lang/String :: v281 = v279.toString()::
66316 :: CALL :: call :: I :: v284 = v30.size()::JM,66324
66320 :: CALL :: call :: I :: v286 = v3.size()::JM,66324
66324 :: PRED :: IF :: Z :: if (v284 != v286) goto 1071::CD,66326:CD,66330
66326 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,65751:JM,66330
66331 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,65737:JM,66335
66330 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 139::CD,65747:CD,65751:CD,65752:CD,65756:CD,66331:CD,66335:JM,66330
66335 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 113::CD,65733:CD,65737:CD,65738:CD,65742:CD,66326:CD,66330:JM,66335
66336 :: CALL :: call :: Ljava/util/Iterator :: v294 = v3.iterator()::JM,66406
66341 :: CALL :: call :: Ljava/lang/Object :: v298 = v294.next()::JM,66406
66353 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v304 = v302.getChain(v301)::CL,79468
66362 :: CALL :: call :: Z :: v308 = v30.containsKey(v306)::JM,66367
66367 :: PRED :: IF :: Z :: if (v308 != #(0)) goto 1202::JM,80388:JM,80395:CD,66383:CD,66388:CD,66396
66383 :: CALL :: call :: V :: v316.addChain(v304)::CL,80499
66388 :: CALL :: call :: V :: v316.setMolId(v325)::CL,80516
66396 :: CALL :: call :: Ljava/lang/Object :: v324 = v30.put(v322, v316)::
66402 :: CALL :: call :: Z :: v296 = v294.hasNext()::JM,66406
66406 :: PRED :: IF :: Z :: if (v296 != #(0)) goto 1102::CD,66341:CD,66353:CD,66362:CD,66367:CD,66402:JM,66406
66409 :: EXPR :: assign :: null :: PHI v111 = v78, v92, v106::CF,66410:DD,65945
66408 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,65711:DD,65723
66411 :: EXPR :: assign :: null :: PHI v113 = v82, v96, v110::JM,65936:JM,65932:JM,65937:JM,65941:JM,66035:JM,66258:JM,66298
66410 :: EXPR :: assign :: null :: PHI v112 = v80, v94, v108::CF,66411:DD,65948
66709 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::CE,66710:CD,66713:CD,66717:CD,66721:CD,66754:CD,66758:CD,66759:JM,66730
66710 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.CompoundFinder.findUniqueCompounds(java.util.TreeMap)::JM,56253
66713 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,66740:JM,66747:DD,66759
66717 :: CALL :: call :: Ljava/util/Collection :: v6 = p1 $chainIds2entities .values()::JM,66758:JM,66730
66721 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,66758:JM,66730
66726 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,66758:JM,66730
66731 :: CALL :: call :: Ljava/util/Iterator :: v16 = v3.iterator()::JM,66740:JM,66747
66730 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,66741:JM,66740:JM,66747
66736 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,66740:JM,66747
66741 :: PRED :: IF :: Z :: if (v21 != v14) goto 71::CD,66743:CD,66747:CD,66760:JM,66740
66740 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,66741
66743 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,66740:JM,66747
66747 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,66760:CD,66736:CD,66740:CD,66741:JM,66747
66749 :: CALL :: call :: Z :: v25 = v3.add(v14)::
66748 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 93::CD,66749:JM,66758:JM,66730
66754 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,66758:JM,66730
66759 :: NORM :: compound :: Ljava/util/List :: return v3::DD,66710
66758 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,66726:CD,66730:CD,66731:CD,66743:CD,66747:CD,66748:CD,66754:CD,66760:JM,66758:CF,66759
66760 :: EXPR :: assign :: null :: PHI v23 = #(1), #(0)::DD,66748
66786 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.createPurelyNonPolyCompounds(java.util.List)::CD,66791:CD,66826:CD,66830:CD,66834:CD,66835:CD,66839:CD,66911:JM,66844
66791 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::JM,66839:JM,66909
66799 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = v12.getChain(v24)::CL,79468
66804 :: CALL :: call :: Z :: v16 = isChainPureNonPolymer(v14)::JM,66808:CL,79485
66808 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 46::CD,66812:CD,66817:CF,66822
66812 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v19 = v17.getChain(v24)::CL,79468
66817 :: CALL :: call :: Z :: v21 = v4.add(v19)::
66822 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v24 + #(1)::DD,66911
66826 :: CALL :: call :: Ljava/util/List :: v9 = v7.getChains()::JM,66834:CL,79536
66830 :: CALL :: call :: I :: v11 = v9.size()::JM,66834
66835 :: CALL :: call :: Z :: v26 = v4.isEmpty()::JM,66839
66834 :: PRED :: IF :: Z :: if (v24 < v11) goto 14::CD,66799:CD,66804:CD,66808:CD,66822:CD,66826:CD,66830:CD,66911:JM,66839
66839 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 201::CD,66840:CD,66844:CD,66860:CD,66861:CD,66905:CD,66909:CD,66912
66840 :: CALL :: call :: Z :: v28 = p1 $compounds .isEmpty()::JM,66844
66844 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 108::CD,66850:CF,66860
66850 :: CALL :: call :: Ljava/lang/Object :: v32 = max(p1 $compounds , v29)::
66861 :: CALL :: call :: Ljava/util/Iterator :: v38 = v4.iterator()::JM,66909
66860 :: EXPR :: assign :: Ljava/lang/Object :: v36 = #(0) + #(1)::DD,66912:JM,66909
66866 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,66909
66871 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v44 = new org.biojava.nbio.structure.Compound::JM,66844
66875 :: CALL :: call :: V :: v44.addChain(v43)::CL,80499
66879 :: CALL :: call :: V :: v44.setMolId(v58)::CL,80516
66889 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v58)::
66899 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v58 + #(1)::DD,66912:JM,66844
66900 :: CALL :: call :: Z :: v57 = p1 $compounds .add(v44)::JM,66844
66905 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,66909
66909 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 124::CD,66866:CD,66871:JM,80388:JM,80395:CD,66875:CD,66879:CD,66889:CD,66899:CD,66900:CD,66905:CD,66912:JM,66909
66911 :: EXPR :: assign :: null :: PHI v24 = #(0), v23::DD,66822:DD,66834
66912 :: EXPR :: assign :: null :: PHI v58 = v36, v55::JM,66909:DD,66899
67718 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,81552
67722 :: EXPR :: modify :: Z :: p0 $this .useCathDomainDescriptionFile = p2 $usingCDDF ::
67725 :: EXPR :: modify :: Z :: p0 $this .parseCathFragments = p3 $parseCF ::
67728 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = new java.util.concurrent.atomic.AtomicBoolean::JM,67722:JM,67725:DD,67733
67733 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainDescription = v8::
67736 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,67722:JM,67725:DD,67741
67741 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomainList = v11::
67744 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = new java.util.concurrent.atomic.AtomicBoolean::JM,67722:JM,67725:DD,67749
67749 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedNodeList = v13::
67752 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,67722:JM,67725:DD,67757
67757 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDomall = v15::
67760 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathVersion = #(4_1_0)::
67763 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cathDownloadUrl = #(http://download.cathd...)::
67766 :: NORM :: declaration :: Ljava/util/HashMap :: v19 = new java.util.HashMap::JM,67722:JM,67725:DD,67770
67770 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .pdbMap = v19::
67773 :: NORM :: declaration :: Ljava/util/HashMap :: v21 = new java.util.HashMap::JM,67722:JM,67725:DD,67777
67777 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .domainMap = v21::
67780 :: NORM :: declaration :: Ljava/util/HashMap :: v23 = new java.util.HashMap::JM,67722:JM,67725:DD,67784
67784 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .cathTree = v23::
67787 :: EXPR :: reference :: Z :: v25 = p0 $this .parseCathFragments::DD,67790
67791 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,67795
67790 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 130::CD,67791
67795 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .fragmentMap = v26::
67832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainDescriptionFileName()::CD,67836:CD,67840:CD,67848:CD,67853:CD,67858
67836 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
67840 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
67848 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-descripti...))::CL,81597
67853 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::
67858 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
67867 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildUrl(java.lang.String)::CD,67872:CD,67877:CD,67881:CD,67889:CD,67894:CD,67902:CD,67907:CD,67912:CD,67917:CD,67922:CD,67927
67872 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .buildFileName(p1 $remoteFileName )::CL,81597
67877 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
67881 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
67889 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v7.append(#(all-releases))::
67894 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(/v))::
67899 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cathVersion::
67902 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
67907 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(#(/))::
67912 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#(cath-classification-data))::
67917 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#(/))::
67922 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v27.append(v5)::
67927 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
67946 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,67952:CD,67959:CD,67964:CD,67968:CD,67973:CD,67977:CD,68011:CD,68015:CD,68019:CD,68023:CD,68024:CD,68025:CD,68026:CD,68028:CD,68038:CD,68040:CD,68048:CD,68053:CD,68061:CD,68066:CD,68078:CD,68079:CD,68080:CD,68094:CD,68095
67952 :: CALL :: call :: J :: v6 = currentTimeMillis()::JM,68078
67959 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
67964 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $localFile )::CL,81653
67968 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
67973 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
67977 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
68011 :: CALL :: call :: V :: copy(v19, p2 $localFile )::CL,81706
68015 :: CALL :: call :: Z :: v35 = v19.delete()::
68019 :: CALL :: call :: J :: v37 = p2 $localFile .length()::JM,68023
68023 :: EXPR :: assign :: D :: v38 = CONVERT J to D v37::DD,68024
68025 :: EXPR :: assign :: Z :: v42 = v40 < #(1024.0 d)::DD,68026
68024 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 / #(1024.0 d)::DD,68025:DD,68027:DD,68094
68027 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v40 / #(1024.0 d)::DD,68094
68026 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CF,68094:CD,68027:CD,68095
68028 :: CALL :: call :: J :: v48 = currentTimeMillis()::JM,68078
68038 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v54 = new java.lang.StringBuilder::
68040 :: CALL :: call :: Ljava/lang/Double :: v58 = valueOf(v45)::JM,68040
68048 :: CALL :: call :: Ljava/lang/String :: v60 = format(#(%.1f), v56)::
68053 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v60)::
68061 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v54.append(v46)::
68066 :: CALL :: call :: Ljava/lang/String :: v67 = v65.toString()::
68079 :: EXPR :: assign :: Ljava/lang/Object :: v72 = v70 / #(1000 l)::
68078 :: EXPR :: assign :: Ljava/lang/Object :: v70 = v48 - v6::DD,68079
68080 :: CALL :: call :: Ljava/lang/Long :: v74 = valueOf(v72)::
68095 :: EXPR :: assign :: null :: PHI v46 = #( kB), #( MB)::CF,68028
68094 :: EXPR :: assign :: null :: PHI v45 = v40, v44::CF,68095:JM,68040
68163 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainDescriptionFile(java.io.BufferedReader)::CD,68666:CD,68670:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68222:JM,68254
68174 :: CALL :: call :: Z :: v12 = v9.startsWith(#(#))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68179 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 58::CD,68181:CD,68186:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68181 :: CALL :: call :: Z :: v16 = v9.startsWith(#(FORMAT))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68187 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v68 = new org.biojava.nbio.structure.cath.CathDomain::DD,68674
68186 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 127::CF,68187:CD,68191:CD,68200:CD,68204:CD,68208:CD,68212:CD,68217:CD,68222:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68254
68191 :: CALL :: call :: Ljava/lang/String :: v72 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68200 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::DD,68675
68204 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v76 = new java.lang.StringBuilder::DD,68676
68208 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::DD,68677
68212 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::DD,68678
68217 :: CALL :: call :: Z :: v19 = v9.startsWith(#(DOMAIN))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68223 :: CALL :: call :: Ljava/lang/String :: v88 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68222 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 151::CD,68223:CD,68233:CD,68238:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68233 :: CALL :: call :: Z :: v22 = v9.startsWith(#(VERSION))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68239 :: CALL :: call :: Ljava/lang/String :: v91 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68238 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 175::CD,68239:CD,68249:CD,68254:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222
68249 :: CALL :: call :: Z :: v25 = v9.startsWith(#(VERDATE))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68255 :: CALL :: call :: Ljava/lang/String :: v94 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68254 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 223::CD,68255:CD,68282:CD,68287:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68670:JM,68222:JM,68254
68282 :: CALL :: call :: Z :: v28 = v9.startsWith(#(NAME))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68287 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 248::CD,68288:CD,68293:CD,68299:CD,68304:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68288 :: CALL :: call :: Ljava/lang/String :: v104 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68293 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v83.append(v104)::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68337:JM,68529:JM,68304:JM,68432:JM,68471:JM,68406:JM,68569:JM,68378:JM,68445
68299 :: CALL :: call :: Z :: v31 = v9.startsWith(#(SOURCE))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68305 :: CALL :: call :: Ljava/lang/String :: v108 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68304 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 273::CD,68305:CD,68310:CD,68316:CD,68321:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68310 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v84.append(v108)::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68337:JM,68529:JM,68432:JM,68471:JM,68406:JM,68569:JM,68378:JM,68445
68316 :: CALL :: call :: Z :: v34 = v9.startsWith(#(CATHCODE))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68321 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 297::CD,68322:CD,68327:CD,68332:CD,68337:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68322 :: CALL :: call :: Ljava/lang/String :: v112 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68327 :: CALL :: call :: V :: v82.setCATH(v112)::CL,81896
68332 :: CALL :: call :: Z :: v37 = v9.startsWith(#(DLENGTH))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68337 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 327::CD,68338:CD,68343:CD,68347:CD,68356:CD,68361:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68338 :: CALL :: call :: Ljava/lang/String :: v115 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68343 :: CALL :: call :: I :: v117 = parseInt(v115)::JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68529:JM,68432:JM,68471:JM,68406:JM,68569:JM,68378:JM,68445
68347 :: CALL :: call :: Ljava/lang/Integer :: v119 = valueOf(v117)::JM,68678
68356 :: CALL :: call :: Z :: v40 = v9.startsWith(#(DSEQH))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68361 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 352::CD,68362:CD,68367:CD,68373:CD,68378:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68362 :: CALL :: call :: Ljava/lang/String :: v122 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68367 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v85.append(v122)::JM,68529:JM,68432:JM,68512:JM,68471:JM,68406:JM,68678:JM,68425:JM,68569:JM,68395:JM,68378:JM,68445:JM,68495
68373 :: CALL :: call :: Z :: v43 = v9.startsWith(#(DSEQS))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68379 :: CALL :: call :: Ljava/lang/String :: v126 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68378 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 378::CD,68379:CD,68384:CD,68390:CD,68395:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68384 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v86.append(v126)::JM,68678:JM,68529:JM,68432:JM,68512:JM,68471:JM,68406:JM,68425:JM,68569:JM,68395:JM,68445:JM,68495
68390 :: CALL :: call :: Z :: v46 = v9.startsWith(#(NSEGMENTS))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68395 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 400::CF,68396:CD,68401:CD,68406:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68396 :: NORM :: declaration :: Ljava/util/ArrayList :: v129 = new java.util.ArrayList::DD,68679
68401 :: CALL :: call :: Z :: v49 = v9.startsWith(#(SEGMENT))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68407 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v132 = new org.biojava.nbio.structure.cath.CathSegment::DD,68680
68406 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 440::CF,68407:CD,68411:CD,68415:CD,68420:CD,68425:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68411 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v134 = new java.lang.StringBuilder::DD,68681
68415 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v136 = new java.lang.StringBuilder::DD,68682
68420 :: CALL :: call :: Z :: v52 = v9.startsWith(#(SRANGE))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68425 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 514::CD,68426:CD,68432:CD,68433:CD,68439:CD,68445:CD,68446:CD,68456:CD,68466:CD,68471:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68179:JM,68406:JM,68569:JM,68186:JM,68378:JM,68287:JM,68670:JM,68222:JM,68254
68426 :: CALL :: call :: I :: v143 = v9.indexOf(#(=), #(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68433 :: CALL :: call :: I :: v148 = v9.indexOf(#( ), #(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68432 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v143 + #(1)::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68222:JM,68254:JM,68670
68439 :: CALL :: call :: I :: v150 = v9.indexOf(#(=), v148)::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68445 :: EXPR :: assign :: Ljava/lang/Object :: v151 = v150 + #(1)::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68222:JM,68254:JM,68670
68446 :: CALL :: call :: Ljava/lang/String :: v153 = v9.substring(v145, v148)::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68456 :: CALL :: call :: Ljava/lang/String :: v156 = v9.substring(v151)::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68466 :: CALL :: call :: Z :: v55 = v9.startsWith(#(SLENGTH))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68471 :: PRED :: IF :: Z :: if (v55 == #(0)) goto 544::CD,68472:CD,68477:CD,68481:CD,68490:CD,68495:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68472 :: CALL :: call :: Ljava/lang/String :: v159 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68477 :: CALL :: call :: I :: v161 = parseInt(v159)::JM,68529:JM,68512:JM,68678:JM,68569:JM,68495
68481 :: CALL :: call :: Ljava/lang/Integer :: v163 = valueOf(v161)::
68490 :: CALL :: call :: Z :: v58 = v9.startsWith(#(SSEQH))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68495 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 569::CD,68496:CD,68501:CD,68507:CD,68512:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68496 :: CALL :: call :: Ljava/lang/String :: v166 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68501 :: CALL :: call :: Ljava/lang/StringBuilder :: v168 = v139.append(v166)::JM,68529:JM,68512:JM,68678:JM,68569
68507 :: CALL :: call :: Z :: v61 = v9.startsWith(#(SSEQS))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68513 :: CALL :: call :: Ljava/lang/String :: v170 = v9.substring(#(10))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68512 :: PRED :: IF :: Z :: if (v61 == #(0)) goto 594::CD,68513:CD,68518:CD,68524:CD,68529:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68518 :: CALL :: call :: Ljava/lang/StringBuilder :: v172 = v140.append(v170)::JM,68529:JM,68678:JM,68569
68524 :: CALL :: call :: Z :: v64 = v9.startsWith(#(ENDSEG))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68529 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 652::CD,68530:CD,68535:CD,68539:CD,68547:CD,68555:CD,68564:CD,68569:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68530 :: CALL :: call :: Z :: v174 = v131.add(v138)::
68535 :: CALL :: call :: I :: v176 = v131.size()::
68539 :: CALL :: call :: Ljava/lang/Integer :: v178 = valueOf(v176)::
68547 :: CALL :: call :: Ljava/lang/String :: v181 = v139.toString()::
68555 :: CALL :: call :: Ljava/lang/String :: v184 = v140.toString()::
68564 :: CALL :: call :: Z :: v67 = v9.startsWith(#(//))::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68569 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 801::CF,68674:CD,68570:CD,68578:CD,68586:CD,68594:CD,68606:CD,68610:CD,68619:CD,68624:CD,68648:CD,68660:CD,68673:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682
68570 :: CALL :: call :: Ljava/lang/String :: v187 = v83.toString()::
68578 :: CALL :: call :: Ljava/lang/String :: v190 = v84.toString()::
68586 :: CALL :: call :: Ljava/lang/String :: v193 = v85.toString()::
68594 :: CALL :: call :: Ljava/lang/String :: v196 = v86.toString()::
68606 :: CALL :: call :: Ljava/lang/String :: v200 = v82.getPdbIdAndChain()::CL,82127
68610 :: CALL :: call :: Ljava/lang/String :: v203 = v200.substring(#(0), #(4))::
68619 :: CALL :: call :: Z :: v206 = v204.containsKey(v203)::JM,68624
68624 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 750::CF,68635:CD,68628:CD,68633:CD,68642:CD,68673
68628 :: CALL :: call :: Ljava/lang/Object :: v209 = v207.get(v203)::JM,68633
68633 :: EXPR :: assign :: Ljava/lang/Object :: v210 = CHECKCAST v209::DD,68673
68635 :: NORM :: declaration :: Ljava/util/ArrayList :: v211 = new java.util.ArrayList::DD,68673
68642 :: CALL :: call :: Ljava/lang/Object :: v215 = v213.put(v203, v211)::
68648 :: CALL :: call :: Z :: v218 = v216.add(v82)::
68660 :: CALL :: call :: Ljava/lang/Object :: v223 = v219.put(v221, v82)::
68666 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $bufferedReader .readLine()::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68670 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 45::CD,68174:CD,68179:CD,68666:CD,68674:CD,68675:CD,68676:CD,68677:CD,68678:CD,68679:CD,68680:CD,68681:CD,68682:JM,68321:JM,68512:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254
68673 :: EXPR :: assign :: null :: PHI v216 = v210, v211::
68675 :: EXPR :: assign :: null :: PHI v83 = #(null), v83, v74, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83, v83::CF,68676:DD,68675
68674 :: EXPR :: assign :: null :: PHI v82 = #(null), v82, v68, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82, v82::CF,68675:DD,68674
68677 :: EXPR :: assign :: null :: PHI v85 = #(null), v85, v78, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85, v85::CF,68678:DD,68677
68676 :: EXPR :: assign :: null :: PHI v84 = #(null), v84, v76, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84, v84::CF,68677:DD,68676
68679 :: EXPR :: assign :: null :: PHI v131 = #(null), v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v131, v129, v131, v131, v131, v131, v131, v131, v131, v131::CF,68680:DD,68679
68678 :: EXPR :: assign :: null :: PHI v86 = #(null), v86, v80, v86, v86, v86, v86, v86, v86, v86, v86, v86, v128, v86, v86, v86, v86, v86, v86, v86, v86, v86::CF,68679:DD,68678
68681 :: EXPR :: assign :: null :: PHI v139 = #(null), v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v139, v134, v139, v139, v139, v139, v139, v139, v139::CF,68682:DD,68681
68680 :: EXPR :: assign :: null :: PHI v138 = #(null), v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v138, v132, v138, v138, v138, v138, v138, v138, v138::CF,68681:DD,68680
68682 :: EXPR :: assign :: null :: PHI v140 = #(null), v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v140, v136, v140, v140, v140, v140, v140, v140, v140::JM,68321:JM,68512:JM,68678:JM,68361:JM,68425:JM,68395:JM,68495:JM,68238:JM,68337:JM,68529:JM,68304:JM,68432:JM,68179:JM,68471:JM,68406:JM,68569:JM,68186:JM,68378:JM,68445:JM,68287:JM,68670:JM,68222:JM,68254:DD,68682
68891 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::CE,68892:CD,68895:CD,68904:CD,68908
68892 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.cath.CathInstallation.domainListFileAvailable()::JM,59674
68895 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getDomainListFileName()::CL,82214
68904 :: CALL :: call :: Z :: v8 = v5.exists()::JM,68908
68908 :: NORM :: compound :: Z :: return v8::DD,68892
68915 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.downloadDomainListFile()::CD,68920:CD,68929:CD,68938
68920 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .buildUrl(#(cath-domain-list-v%s.txt))::CL,67867
68929 :: CALL :: call :: Ljava/lang/String :: v9 = p0 $this .getDomainListFileName()::CL,82214
68938 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v4, v10)::CL,67946
68958 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList()::CD,68963:CD,68975:CD,68976:CD,68990
68963 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getDomainListFileName()::CL,82214
68975 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,68976
68976 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
68990 :: CALL :: call :: V :: p0 $this .parseCathDomainList(v9)::CL,82249
69007 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomallFileName()::CD,69011:CD,69015:CD,69023:CD,69028:CD,69033
69011 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
69015 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
69023 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-boundarie...))::CL,81597
69028 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::
69033 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
69042 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomall(java.io.BufferedReader)::CD,69578:CD,69582:JM,69059:JM,69053
69048 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,69059:JM,69053:JM,69582
69053 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 17::CD,69055:CD,69059:JM,69053:JM,69582
69055 :: CALL :: call :: I :: v12 = v5.length()::JM,69059:JM,69053:JM,69582
69059 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 30::CD,69061:CD,69074:CD,69079:CD,69083:CD,69091:CD,69096:CD,69100:CD,69409:CD,69413:CD,69417:CD,69593:CD,69594
69061 :: CALL :: call :: [Ljava/lang/String :: v15 = v5.split(#(\s+))::
69070 :: EXPR :: reference :: Ljava/lang/Object :: v18 = v15[#(1)]::JM,69413:JM,69114
69074 :: CALL :: call :: Ljava/lang/String :: v20 = v18.substring(#(1))::JM,69413:JM,69114
69079 :: CALL :: call :: I :: v22 = parseInt(v20)::JM,69413:JM,69114
69083 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::JM,69413:JM,69114
69087 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v15[#(2)]::JM,69568
69091 :: CALL :: call :: Ljava/lang/String :: v28 = v26.substring(#(1))::JM,69568
69096 :: CALL :: call :: I :: v30 = parseInt(v28)::JM,69568
69100 :: CALL :: call :: Ljava/lang/Integer :: v32 = valueOf(v30)::JM,69568
69105 :: NORM :: declaration :: Ljava/text/DecimalFormat :: v36 = new java.text.DecimalFormat::JM,69181
69110 :: CALL :: call :: I :: v40 = v24.intValue()::JM,69413:JM,69114
69115 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::
69114 :: PRED :: IF :: Z :: if (v40 != #(1)) goto 185::CF,69171:CF,69115:CD,69116:CD,69124:CD,69129:CD,69136:CD,69141:CD,69142:CD,69172:CD,69180:CD,69181:CD,69186:CD,69191:CD,69198:CD,69203:CD,69584
69116 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v16)::
69124 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v41.append(#(00))::
69129 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
69136 :: CALL :: call :: Ljava/lang/Object :: v51 = v49.get(v48)::JM,69141
69141 :: EXPR :: assign :: Ljava/lang/Object :: v52 = CHECKCAST v51::DD,69142:DD,69584
69143 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
69142 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 232::CF,69584:CF,69143:CD,69144:CD,69152:CD,69157:CD,69164:CD,69169
69144 :: CALL :: call :: Ljava/lang/String :: v55 = valueOf(v16)::
69152 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(#(01))::
69157 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
69164 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::JM,69169
69169 :: EXPR :: assign :: Ljava/lang/Object :: v65 = CHECKCAST v64::DD,69584
69171 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
69172 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v16)::
69181 :: CALL :: call :: Ljava/lang/String :: v72 = v36.format(v70)::JM,69181
69180 :: EXPR :: assign :: J :: v70 = CONVERT I to J v186::JM,69181
69186 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v66.append(v72)::
69191 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::
69198 :: CALL :: call :: Ljava/lang/Object :: v79 = v77.get(v76)::JM,69203
69203 :: EXPR :: assign :: Ljava/lang/Object :: v80 = CHECKCAST v79::DD,69584
69204 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v15[v185]::JM,69221:JM,69396:JM,69405
69208 :: CALL :: call :: I :: v85 = parseInt(v83)::JM,69221:JM,69396:JM,69405
69212 :: CALL :: call :: Ljava/lang/Integer :: v87 = valueOf(v85)::JM,69221:JM,69396:JM,69405
69217 :: CALL :: call :: I :: v90 = v87.intValue()::JM,69221:JM,69396:JM,69405
69216 :: PRED :: IF :: Z :: if (v82 != #(null)) goto 264::CF,69225:CD,69217:CD,69221:CD,69222:CD,69223:CD,69226:CD,69392:CD,69396:CD,69401:CD,69405:CD,69406:CD,69407:CD,69587:CD,69588:CD,69589:CD,69590:CD,69591:CD,69592
69221 :: EXPR :: assign :: Ljava/lang/Object :: v91 = #(6) * v90::DD,69222
69223 :: EXPR :: assign :: Ljava/lang/Object :: v93 = v185 + v92::DD,69591
69222 :: EXPR :: assign :: Ljava/lang/Object :: v92 = v91 + #(1)::CF,69223
69225 :: NORM :: declaration :: Ljava/util/ArrayList :: v94 = new java.util.ArrayList::JM,69221:JM,69396:JM,69405
69226 :: CALL :: call :: I :: v96 = v87.intValue()::JM,69221:JM,69396:JM,69405
69235 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathSegment :: v100 = new org.biojava.nbio.structure.cath.CathSegment::
69239 :: CALL :: call :: Ljava/lang/Integer :: v103 = valueOf(v176)::
69247 :: EXPR :: assign :: Ljava/lang/Object :: v105 = v187 + v175::DD,69248
69249 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v15[v106]::JM,69376
69248 :: EXPR :: assign :: Ljava/lang/Object :: v106 = v105 + #(1)::
69253 :: CALL :: call :: I :: v109 = parseInt(v107)::JM,69376
69257 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v109)::JM,69376
69261 :: EXPR :: assign :: Ljava/lang/Object :: v112 = v187 + v175::DD,69262
69263 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v15[v113]::JM,69272:DD,69585
69262 :: EXPR :: assign :: Ljava/lang/Object :: v113 = v112 + #(2)::
69267 :: CALL :: call :: Z :: v117 = v114.equals(#(-))::JM,69272
69272 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 357::CD,69585
69274 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
69278 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(v111)::
69283 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v119)::
69288 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
69297 :: EXPR :: assign :: Ljava/lang/Object :: v131 = v129 + #(4)::
69296 :: EXPR :: assign :: Ljava/lang/Object :: v129 = v187 + v175::DD,69297
69298 :: EXPR :: reference :: Ljava/lang/Object :: v132 = v15[v131]::JM,69371
69302 :: CALL :: call :: I :: v134 = parseInt(v132)::JM,69371
69306 :: CALL :: call :: Ljava/lang/Integer :: v136 = valueOf(v134)::JM,69371
69311 :: EXPR :: assign :: Ljava/lang/Object :: v139 = v137 + #(5)::
69310 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v187 + v175::DD,69311
69312 :: EXPR :: reference :: Ljava/lang/Object :: v140 = v15[v139]::JM,69321:DD,69586
69316 :: CALL :: call :: Z :: v142 = v140.equals(#(-))::JM,69321
69321 :: PRED :: IF :: Z :: if (v142 == #(0)) goto 431::CD,69586
69323 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v144 = new java.lang.StringBuilder::
69327 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v144.append(v111)::
69332 :: CALL :: call :: Ljava/lang/StringBuilder :: v149 = v147.append(v119)::
69337 :: CALL :: call :: Ljava/lang/String :: v151 = v149.toString()::
69345 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::
69349 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v153.append(v136)::
69354 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v156.append(v143)::
69359 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::
69367 :: CALL :: call :: I :: v163 = v136.intValue()::JM,69371
69371 :: EXPR :: assign :: Ljava/lang/Object :: v164 = #(1) + v163::DD,69376
69372 :: CALL :: call :: I :: v166 = v111.intValue()::JM,69376
69377 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v167)::
69376 :: EXPR :: assign :: Ljava/lang/Object :: v167 = v164 - v166::
69385 :: CALL :: call :: Z :: v172 = v94.add(v100)::
69391 :: EXPR :: assign :: Ljava/lang/Object :: v174 = v176 + #(1)::DD,69590:CF,69587
69390 :: EXPR :: assign :: Ljava/lang/Object :: v173 = v175 + #(6)::DD,69588:CF,69391
69392 :: CALL :: call :: I :: v99 = v87.intValue()::JM,69221:JM,69396:JM,69405
69396 :: PRED :: IF :: Z :: if (v176 <= v99) goto 287::CF,69235:CD,69239:CD,69247:CD,69248:CD,69253:CD,69257:CD,69261:CD,69262:CD,69267:CD,69272:CD,69274:CD,69278:CD,69283:CD,69288:CD,69296:CD,69297:CD,69302:CD,69306:CD,69310:CD,69311:CD,69316:CD,69321:CD,69323:CD,69327:CD,69332:CD,69337:CD,69345:CD,69349:CD,69354:CD,69359:CD,69367:CD,69371:CD,69372:CD,69376:CD,69377:CD,69385:CD,69390:CD,69391:CD,69392:CD,69585:CD,69586:CD,69587:CD,69588:CD,69589:CD,69590
69401 :: CALL :: call :: I :: v179 = v87.intValue()::JM,69221:JM,69396:JM,69405
69405 :: EXPR :: assign :: Ljava/lang/Object :: v180 = #(6) * v179::DD,69406
69407 :: EXPR :: assign :: Ljava/lang/Object :: v182 = v187 + v181::DD,69591
69406 :: EXPR :: assign :: Ljava/lang/Object :: v181 = v180 + #(1)::CF,69407
69409 :: CALL :: call :: I :: v35 = v24.intValue()::JM,69413:JM,69114
69408 :: EXPR :: assign :: Ljava/lang/Object :: v184 = v189 + #(1)::DD,69594:CF,69593
69413 :: PRED :: IF :: Z :: if (v186 <= v35) goto 78::CF,69105:CD,69110:CD,69114:CD,69208:CD,69212:CD,69216:CD,69408:CD,69409:CD,69584:CD,69591:CD,69592:CD,69593:CD,69594
69414 :: EXPR :: reference :: Z :: v190 = p0 $this .parseCathFragments::DD,69417
69417 :: PRED :: IF :: Z :: if (v190 == #(0)) goto 815::CF,69418:CD,69419:CD,69564:CD,69568:CD,69572:CD,69597:CD,69598:JM,69059:JM,69053:JM,69582
69419 :: CALL :: call :: I :: v193 = v32.intValue()::JM,69568
69418 :: NORM :: declaration :: Ljava/util/ArrayList :: v191 = new java.util.ArrayList::JM,69568
69428 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathFragment :: v197 = new org.biojava.nbio.structure.cath.CathFragment::
69432 :: CALL :: call :: Ljava/lang/Integer :: v200 = valueOf(v258)::
69441 :: EXPR :: reference :: Ljava/lang/Object :: v203 = v15[v202]::
69440 :: EXPR :: assign :: Ljava/lang/Object :: v202 = v257 + #(1)::
69445 :: CALL :: call :: I :: v205 = parseInt(v203)::
69449 :: CALL :: call :: Ljava/lang/Integer :: v207 = valueOf(v205)::
69453 :: EXPR :: assign :: Ljava/lang/Object :: v208 = v257 + #(2)::
69454 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v15[v208]::JM,69463:DD,69595
69458 :: CALL :: call :: Z :: v211 = v209.equals(#(-))::JM,69463
69463 :: PRED :: IF :: Z :: if (v211 == #(0)) goto 652::CD,69595
69465 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v213 = new java.lang.StringBuilder::
69469 :: CALL :: call :: Ljava/lang/StringBuilder :: v216 = v213.append(v207)::
69474 :: CALL :: call :: Ljava/lang/StringBuilder :: v218 = v216.append(v212)::
69479 :: CALL :: call :: Ljava/lang/String :: v220 = v218.toString()::
69487 :: EXPR :: assign :: Ljava/lang/Object :: v222 = v257 + #(4)::
69488 :: EXPR :: reference :: Ljava/lang/Object :: v223 = v15[v222]::
69492 :: CALL :: call :: I :: v225 = parseInt(v223)::
69496 :: CALL :: call :: Ljava/lang/Integer :: v227 = valueOf(v225)::
69501 :: EXPR :: reference :: Ljava/lang/Object :: v229 = v15[v228]::JM,69510:DD,69596
69500 :: EXPR :: assign :: Ljava/lang/Object :: v228 = v257 + #(5)::
69505 :: CALL :: call :: Z :: v231 = v229.equals(#(-))::JM,69510
69510 :: PRED :: IF :: Z :: if (v231 == #(0)) goto 720::CD,69596
69512 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v233 = new java.lang.StringBuilder::
69516 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v233.append(v227)::
69521 :: CALL :: call :: Ljava/lang/StringBuilder :: v238 = v236.append(v232)::
69526 :: CALL :: call :: Ljava/lang/String :: v240 = v238.toString()::
69539 :: CALL :: call :: Ljava/lang/String :: v246 = v243.replaceAll(#([^0-9]), #())::
69545 :: CALL :: call :: I :: v248 = parseInt(v246)::
69549 :: CALL :: call :: Ljava/lang/Integer :: v250 = valueOf(v248)::
69557 :: CALL :: call :: Z :: v253 = v191.add(v197)::
69563 :: EXPR :: assign :: Ljava/lang/Object :: v256 = v258 + #(1)::DD,69598:CF,69597
69562 :: EXPR :: assign :: Ljava/lang/Object :: v255 = v257 + #(7)::DD,69597:CF,69563
69564 :: CALL :: call :: I :: v196 = v32.intValue()::JM,69568
69568 :: PRED :: IF :: Z :: if (v258 <= v196) goto 588::CF,69428:CD,69432:CD,69440:CD,69445:CD,69449:CD,69453:CD,69458:CD,69463:CD,69465:CD,69469:CD,69474:CD,69479:CD,69487:CD,69492:CD,69496:CD,69500:CD,69505:CD,69510:CD,69512:CD,69516:CD,69521:CD,69526:CD,69539:CD,69545:CD,69549:CD,69557:CD,69562:CD,69563:CD,69564:CD,69595:CD,69596:CD,69597:CD,69598
69572 :: CALL :: call :: Ljava/lang/Object :: v261 = v259.put(v16, v191)::
69578 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,69059:JM,69053:JM,69582
69582 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,69048:CD,69053:CD,69578:JM,69059:JM,69582
69585 :: EXPR :: assign :: null :: PHI v119 = #(), v114::CF,69274
69584 :: EXPR :: assign :: null :: PHI v82 = v52, v65, v80::DD,69216
69587 :: EXPR :: assign :: null :: PHI v187 = v185, v187::CF,69588:DD,69247:DD,69261:DD,69296:DD,69310:DD,69407:DD,69587
69586 :: EXPR :: assign :: null :: PHI v143 = #(), v140::CF,69323
69589 :: EXPR :: assign :: null :: PHI v188 = v186, v188::CF,69590:DD,69589:DD,69592
69588 :: EXPR :: assign :: null :: PHI v175 = #(1), v173::CF,69589:DD,69247:DD,69261:DD,69296:DD,69310:DD,69390
69591 :: EXPR :: assign :: null :: PHI v183 = v93, v182::CF,69592:DD,69593
69590 :: EXPR :: assign :: null :: PHI v176 = #(1), v174::DD,69391:DD,69396:JM,69221:JM,69405
69593 :: EXPR :: assign :: null :: PHI v185 = #(3), v183::CF,69594:DD,69223:DD,69587:DD,69597
69592 :: EXPR :: assign :: null :: PHI v189 = v186, v188::DD,69408
69595 :: EXPR :: assign :: null :: PHI v212 = #(), v209::CF,69465
69594 :: EXPR :: assign :: null :: PHI v186 = #(1), v184::DD,69180:DD,69413:DD,69589:DD,69592:JM,69114
69597 :: EXPR :: assign :: null :: PHI v257 = v185, v255::CF,69598:DD,69440:DD,69453:DD,69487:DD,69500:DD,69562
69596 :: EXPR :: assign :: null :: PHI v232 = #(), v229::CF,69512
69598 :: EXPR :: assign :: null :: PHI v258 = #(1), v256::DD,69563:DD,69568
69942 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.ensureDomainsFileInstalled()::CD,69965
69962 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .allDomains::DD,69965
69965 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 83::CD,70032:CD,70036:CD,70040
70032 :: CALL :: call :: Z :: v34 = p0 $this .domainsAvailable()::JM,70036:CL,82449
70037 :: CALL :: call :: V :: p0 $this .downloadDomains()::CL,82536
70036 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 144::CD,70037
70040 :: CALL :: call :: V :: p0 $this .parseDomains()::CL,82717
70113 :: CALL :: call :: V :: p0 $this .setScopVersion(v6)::CL,70150
70125 :: CALL :: call :: V :: p0 $this .addMirror(v8)::CL,82844
70133 :: CALL :: call :: V :: p0 $this .addMirror(v12)::CL,82844
70150 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setScopVersion(java.lang.String)::CD,70156:CD,70165:CD,70170
70156 :: NORM :: declaration :: Ljava/lang/NullPointerException :: v17 = new java.lang.NullPointerException::
70162 :: EXPR :: reference :: Ljava/lang/String :: v5 = p0 $this .scopVersion::JM,70170
70165 :: CALL :: call :: Z :: v7 = v5.equals(p1 $scopVersion )::JM,70170
70170 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 29::CD,70178:CD,70185:CD,70192:CD,70199
70175 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v9 = p0 $this .installedCla::JM,70178
70178 :: CALL :: call :: V :: v9.set(#(0))::JM,70178
70182 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = p0 $this .installedDes::JM,70185
70185 :: CALL :: call :: V :: v11.set(#(0))::JM,70185
70189 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedHie::JM,70192
70192 :: CALL :: call :: V :: v13.set(#(0))::JM,70192
70196 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = p0 $this .installedCom::JM,70199
70199 :: CALL :: call :: V :: v15.set(#(0))::JM,70199
70249 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::CE,70250:CD,70253:CD,70255:CD,70259:CD,70260:CD,70268:CD,70273:CD,70275:CD,70282:CD,70283
70250 :: EXIT :: exit :: Lorg/biojava/nbio/structure/scop/ScopDomain :: org.biojava.nbio.structure.scop.server.XMLUtil.getScopDomainFromXML(java.lang.String)::JM,60588
70253 :: EXPR :: reference :: Ljavax/xml/bind/JAXBContext :: v4 = org.biojava.nbio.structure.scop.server.XMLUtil.jaxbContextScopDomain::JM,70273:JM,70268:JM,70255
70255 :: CALL :: call :: Ljavax/xml/bind/Unmarshaller :: v6 = v4.createUnmarshaller()::JM,70273:JM,70268:JM,70255
70259 :: NORM :: declaration :: Ljava/io/ByteArrayInputStream :: v7 = new java.io.ByteArrayInputStream::JM,70273:JM,70268
70260 :: CALL :: call :: [B :: v9 = p1 $xml .getBytes()::
70268 :: CALL :: call :: Ljava/lang/Object :: v12 = v6.unmarshal(v7)::JM,70273:JM,70268
70273 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::DD,70282
70275 :: NORM :: declaration :: Ljava/lang/RuntimeException :: v15 = new java.lang.RuntimeException::
70283 :: EXPR :: assign :: Ljava/lang/Exception :: v14 = catch <exc>::
70282 :: NORM :: compound :: Lorg/biojava/nbio/structure/scop/ScopDomain :: return v13::DD,70250
70295 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::CE,70296:CD,70299:CD,70308:CD,70312
70296 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.scop.ScopInstallation.claFileAvailable()::JM,60735
70299 :: CALL :: call :: Ljava/lang/String :: v4 = p0 $this .getClaFilename()::CL,82872
70308 :: CALL :: call :: Z :: v8 = v5.exists()::JM,70312
70313 :: CALL :: call :: J :: v11 = v5.length()::JM,70317
70312 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 33::CD,70313:CD,70317:CD,70318:CD,70320
70317 :: EXPR :: assign :: Z :: v13 = v11 == #(0 l)::DD,70318
70319 :: NORM :: compound :: Z :: return #(1)::DD,70296
70318 :: PRED :: IF :: Z :: if (v13 <= #(0)) goto 33::CD,70319:CD,70320
70320 :: NORM :: compound :: Z :: return #(0)::DD,70296
70333 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadClaFile()::CD,70340:CD,70344:CD,70351:CD,70356:CD,70365:CD,70374:CD,70383:CD,70389:CD,70394:CD,70401:CD,70402
70337 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,70344
70340 :: CALL :: call :: I :: v5 = v3.size()::JM,70344
70345 :: CALL :: call :: V :: p0 $this .initScopURLs()::CL,82910
70344 :: PRED :: IF :: Z :: if (v5 >= #(1)) goto 20::CD,70345
70348 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .mirrors::
70351 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::
70356 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::
70365 :: CALL :: call :: Ljava/lang/String :: v21 = v17.getClaURL(v19)::CL,82970:CL,82994
70374 :: CALL :: call :: Ljava/lang/String :: v24 = p0 $this .getClaFilename()::CL,82872
70383 :: CALL :: call :: V :: p0 $this .downloadFileFromRemote(v18, v25)::CL,83032
70389 :: CALL :: call :: Z :: v13 = v11.hasNext()::
70394 :: NORM :: declaration :: Ljava/io/IOException :: v31 = new java.io.IOException::
70401 :: EXPR :: assign :: Ljava/lang/Exception :: v28 = catch <exc>::DD,70402
70402 :: EXPR :: assign :: null :: PHI v30 = #(null), v28::
70425 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification()::CD,70430:CD,70442:CD,70443:CD,70457
70430 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .getClaFilename()::CL,82872
70443 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v10 = new java.io.InputStreamReader::
70442 :: NORM :: declaration :: Ljava/io/BufferedReader :: v9 = new java.io.BufferedReader::CF,70443
70457 :: CALL :: call :: V :: p0 $this .parseClassification(v9)::CL,83081
70492 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassId(int)::JM,70497
70497 :: EXPR :: modify :: I :: p0 $this .classId = p1 $classId ::
70512 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setClassificationId(java.lang.String)::JM,70517
70517 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classificationId = p1 $classificationId ::
70532 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setDomainId(int)::JM,70537
70537 :: EXPR :: modify :: I :: p0 $this .domainId = p1 $domainId ::
70552 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFamilyId(int)::JM,70557
70557 :: EXPR :: modify :: I :: p0 $this .familyId = p1 $familyId ::
70572 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setFoldId(int)::JM,70577
70577 :: EXPR :: modify :: I :: p0 $this .foldId = p1 $foldId ::
70583 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPdbId(java.lang.String)::JM,70588
70588 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = p1 $pdbId ::
70603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setPx(int)::JM,70608
70608 :: EXPR :: modify :: I :: p0 $this .px = p1 $px ::
70614 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setRanges(java.util.List)::JM,70619
70619 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ranges = p1 $ranges ::
70625 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setScopId(java.lang.String)::JM,70630
70630 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .scopId = p1 $scopId ::
70645 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSpeciesId(int)::JM,70650
70650 :: EXPR :: modify :: I :: p0 $this .speciesId = p1 $speciesId ::
70665 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSunid(java.lang.Integer)::JM,70670
70670 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .sunid = p1 $sunid ::
70685 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopDomain.setSuperfamilyId(int)::JM,70690
70690 :: EXPR :: modify :: I :: p0 $this .superfamilyId = p1 $superfamilyId ::
70705 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setSeqNum(java.lang.Integer)::JM,70710
70710 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
70716 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.setInsCode(java.lang.Character)::JM,70721
70721 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p1 $insCode ::
70727 :: ENTR :: entry :: null :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::CE,70728:JM,29808:JM,29762:JM,29555:JM,29783:JM,29736:JM,29755:JM,29548:JM,29740:JM,29788:JM,29757:CD,70739:CD,70740:CD,70741:CD,70749:CD,70753:CD,70761:CD,70766:CD,70784
70728 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.domain.SerializableCache.getCacheFile()::JM,61137:JM,61109
70739 :: NORM :: declaration :: Ljava/io/File :: v7 = new java.io.File::DD,70784:CF,70740
70741 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v6)::
70740 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
70749 :: CALL :: call :: Ljava/lang/String :: v14 = getProperty(#(file.separator))::JM,70749
70753 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v8.append(v14)::
70758 :: EXPR :: reference :: Ljava/lang/String :: v17 = p0 $this .cacheFileName::
70761 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::
70766 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::
70784 :: NORM :: compound :: Ljava/io/File :: return v7::DD,70728
70990 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL,int)::CD,70995:CD,70999:CD,71005:CD,71009:CD,71014:CD,71018:CD,71023:CD,71027:CD,71032:CD,71036:CD,71052:CD,71058:CD,71068:CD,71081:CD,71087:CD,71097:CD,71104
70995 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,70999
70999 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
71005 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v12 = new java.lang.StringBuilder::
71009 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(p2 $timeout )::JM,70999
71014 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
71018 :: CALL :: call :: Ljava/lang/String :: v19 = setProperty(#(sun.net.client.defaul...), v17)::
71023 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
71027 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(p2 $timeout )::JM,70999
71032 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
71036 :: CALL :: call :: Ljava/lang/String :: v28 = setProperty(#(sun.net.client.defaul...), v26)::
71052 :: CALL :: call :: Ljava/lang/reflect/Method :: v38 = v31.getMethod(#(setConnectTimeout), v34)::
71058 :: NORM :: declaration :: [Ljava/lang/Object :: v39 = new java.lang.Object[]::
71068 :: CALL :: call :: Ljava/lang/Object :: v43 = v38.invoke(v7, v39)::
71081 :: CALL :: call :: Ljava/lang/reflect/Method :: v48 = v31.getMethod(#(setReadTimeout), v45)::
71087 :: NORM :: declaration :: [Ljava/lang/Object :: v49 = new java.lang.Object[]::
71097 :: CALL :: call :: Ljava/lang/Object :: v53 = v48.invoke(v7, v49)::
71104 :: CALL :: call :: V :: v54.printStackTrace()::
71274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getInputStream(java.lang.String)::CD,71285:CD,71290:CD,71295:CD,71304:CD,71309:CD,71315:CD,71320:CD,71325:CD,71330
71285 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
71290 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v29.append(p1 $pdbId )::
71295 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::
71304 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .downloadStructure(p1 $pdbId )::CL,84230
71309 :: CALL :: call :: Z :: v10 = v8.exists()::
71315 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
71320 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $pdbId )::
71325 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#( not found and unable...))::
71330 :: CALL :: call :: Ljava/lang/String :: v26 = v24.toString()::
71362 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getStructure(java.io.InputStream)::JM,46616:JM,46646:JM,32397:JM,46639:CD,71385:CD,71392:CD,71396:CD,71397:CD,71406
71385 :: CALL :: call :: V :: v8.setFileParsingParameters(v10)::CL,46663
71392 :: CALL :: call :: V :: v4.addMMcifConsumer(v12)::CL,46674
71397 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v15 = new java.io.InputStreamReader::
71396 :: NORM :: declaration :: Ljava/io/BufferedReader :: v14 = new java.io.BufferedReader::CF,71397
71406 :: CALL :: call :: V :: v4.parse(v14)::CL,46691
71433 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::CE,71434:CD,71457:CD,71461:CD,71463:JM,71444:JM,71454
71434 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.isKnownChain(java.lang.String,java.util.List)::JM,61567:JM,62009:JM,74928:JM,75316
71439 :: CALL :: call :: Ljava/lang/Object :: v8 = p2 $chains .get(v16)::JM,71461:JM,71444:JM,71454
71445 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getChainID()::JM,71454:CL,48319
71444 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::DD,71455
71449 :: CALL :: call :: Z :: v13 = p1 $chainID .equals(v11)::JM,71461:JM,71444:JM,71454
71455 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v9::DD,71434
71454 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 31::CD,71455:CD,71456:CD,71457:CD,71461:CD,71463
71457 :: CALL :: call :: I :: v6 = p2 $chains .size()::JM,71461:JM,71444:JM,71454
71456 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v16 + #(1)::DD,71463
71461 :: PRED :: IF :: Z :: if (v16 < v6) goto 7::CD,71439:CD,71444:CD,71445:CD,71449:CD,71454:CD,71462:JM,71461
71463 :: EXPR :: assign :: null :: PHI v16 = #(0), v15::JM,71444:JM,71454:DD,71456:DD,71461
71462 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,71434
71479 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::JM,61762:JM,62154:JM,62187:JM,74715:JM,76931:JM,79026:JM,90253:JM,91716:JM,93511:JM,94289:JM,94893:JM,95193:JM,95458:JM,95684:JM,95910:JM,96430:JM,96501:JM,104251
71478 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isHeaderOnly()::CE,71479:CD,71485
71482 :: EXPR :: reference :: Z :: v3 = p0 $this .headerOnly::DD,71485
71485 :: NORM :: compound :: Z :: return v3::CF,71479
71487 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntityChain(java.lang.String)::CD,71495:CD,71516:CD,71520:JM,71514
71492 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entityChains::JM,71520
71495 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,71520
71500 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,71520
71505 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getChainID()::JM,71514:CL,48319
71509 :: CALL :: call :: Z :: v16 = v14.equals(p1 $entity_id )::JM,71514
71514 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 39::CD,71516:CD,71520
71516 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,71520
71521 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v17 = new org.biojava.nbio.structure.ChainImpl::
71520 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CF,71521:CD,71500:CD,71505:CD,71509:CD,71514:JM,48721:JM,48709:JM,48728:JM,48714:CD,71525:CD,71532:JM,71520
71525 :: CALL :: call :: V :: v17.setChainID(p1 $entity_id )::CL,48752
71529 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .entityChains::
71532 :: CALL :: call :: Z :: v22 = v20.add(v17)::
71556 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.clone()::JM,48721:JM,48709:JM,48728:JM,48714:CD,71568:CD,71576:CD,71583:CD,71590:CD,71597:CD,71620:CD,71624:CD,71628
71568 :: CALL :: call :: V :: v3.setChainID(v6)::CL,48752
71576 :: CALL :: call :: V :: v3.setSwissprotId(v9)::CL,84494
71583 :: CALL :: call :: V :: v3.setCompound(v11)::CL,56270
71590 :: CALL :: call :: V :: v3.setInternalChainID(v13)::CL,72801
71594 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .groups::JM,71624
71597 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,71624
71602 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,71624
71607 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.clone()::CL,84505:CL,84822:CL,84647
71612 :: CALL :: call :: V :: v3.addGroup(v26)::CL,48899
71616 :: CALL :: call :: V :: v26.setChain(v3)::CL,56376
71620 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,71624
71625 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .seqResGroups::DD,71628
71624 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 54::CD,71602:CD,71607:CD,71612:CD,71616:CD,71620:JM,71624
71629 :: NORM :: declaration :: Ljava/util/ArrayList :: v31 = new java.util.ArrayList::
71628 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 211::CF,71629:CD,71636:CD,71675:CD,71679:CD,71680
71633 :: EXPR :: reference :: Ljava/util/List :: v33 = p0 $this .seqResGroups::JM,71679
71636 :: CALL :: call :: Ljava/util/Iterator :: v35 = v33.iterator()::JM,71679
71641 :: CALL :: call :: Ljava/lang/Object :: v39 = v35.next()::JM,71679
71649 :: CALL :: call :: I :: v43 = findMathingGroupIndex(v41, v40)::JM,71654:CL,84978
71655 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v46 = v3.getAtomGroup(v43)::JM,71685:CL,85017
71654 :: PRED :: IF :: Z :: if (v43 == #(-1)) goto 168::CD,71655:CD,71661:CD,71665:CD,71685
71661 :: CALL :: call :: Ljava/lang/Object :: v48 = v40.clone()::JM,71665:CL,84505:CL,84822:CL,84647
71665 :: EXPR :: assign :: Ljava/lang/Object :: v49 = CHECKCAST v48::DD,71685
71666 :: CALL :: call :: V :: v50.setChain(v3)::CL,56376
71670 :: CALL :: call :: Z :: v53 = v31.add(v50)::
71675 :: CALL :: call :: Z :: v37 = v35.hasNext()::JM,71679
71679 :: PRED :: IF :: Z :: if (v37 != #(0)) goto 128::CD,71641:CD,71649:CD,71654:CD,71666:CD,71670:CD,71675:CD,71685:JM,71679
71680 :: CALL :: call :: V :: v3.setSeqResGroups(v31)::CL,48841
71685 :: EXPR :: assign :: null :: PHI v50 = v46, v49::
71737 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::CE,71738:CD,71742:JM,48721:JM,48709:JM,48728:JM,48714:CD,71746:CD,71750:CD,71823:CD,71827:CD,71828:CD,71829
71738 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.removeSeqResHeterogeneity(org.biojava.nbio.structure.Chain)::
71742 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v4 = new org.biojava.nbio.structure.ChainImpl::DD,71828
71746 :: CALL :: call :: Ljava/util/List :: v8 = p1 $c .getAtomGroups()::JM,71827:CL,48461
71750 :: CALL :: call :: Ljava/util/Iterator :: v10 = v8.iterator()::JM,71827
71755 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.next()::JM,71827
71760 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v17 = new org.biojava.nbio.structure.ResidueNumber::DD,71829
71791 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 93::CD,71792:CD,71797:CD,71798
71792 :: CALL :: call :: Z :: v32 = v43.equals(v17)::JM,71797:CL,35032
71797 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 101::CD,71798:CD,71805:CD,71810:CD,71815
71798 :: CALL :: call :: V :: v4.addGroup(v16)::CL,48899
71805 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
71810 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v16)::
71815 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
71823 :: CALL :: call :: Z :: v12 = v10.hasNext()::JM,71827
71827 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,71755:CD,71760:JM,85074:JM,85077:JM,85071:CD,71791:CD,71823:CD,71829:JM,71827:CF,71828
71829 :: EXPR :: assign :: null :: PHI v43 = #(null), v17::JM,71827:DD,71791
71828 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v4::DD,71738
71858 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCompounds(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,71863:CD,71867:CD,71883:CD,71891:CD,72023:CD,72027:CD,72031:CD,72113:CD,72117:CD,72121:CD,72203:CD,72207:CD,72211:CD,72216:CD,72269:JM,71905:JM,72049:JM,72144:JM,71909:JM,72135:JM,72054:JM,72139:JM,71914:JM,72045
71863 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $asym .getEntity_id()::JM,71905:JM,72049:JM,72144:JM,71909:JM,71863:JM,72135:JM,72054:JM,72139:JM,71914:JM,72045:JM,72269
71867 :: CALL :: call :: I :: v8 = parseInt(v6)::JM,72049:JM,72144:JM,71909:JM,72054:JM,72139:JM,71914:JM,72269
71883 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v18 = p0 $this .getEntity(v16)::JM,72065:JM,72225:JM,72160:JM,72066:JM,72226:JM,72165:JM,71974:JM,72070:JM,72230:JM,72075:JM,72235:JM,71978:JM,71983:JM,71984:JM,71925:JM,71988:JM,71926:JM,71993:JM,72155:JM,71930:JM,72156:JM,71935:CL,85088
71888 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .entitySrcGens::JM,72027:JM,71900
71891 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,72027:JM,71900
71896 :: CALL :: call :: Ljava/lang/Object :: v25 = v21.next()::JM,72027:JM,71900
71901 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getEntity_id()::JM,71909:JM,71914:JM,71901
71900 :: EXPR :: assign :: Ljava/lang/Object :: v26 = CHECKCAST v25::JM,71909:JM,71914:JM,71901:JM,72001
71905 :: CALL :: call :: Ljava/lang/String :: v30 = p1 $asym .getEntity_id()::JM,71905:JM,72049:JM,72144:JM,71909:JM,71863:JM,72135:JM,72054:JM,72139:JM,71914:JM,72045:JM,72269
71909 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,71909:JM,71914:JM,72049:JM,72144:JM,72054:JM,72139:JM,72269
71914 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 80::CD,71919:CD,71924
71919 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v35 = v33.getCompoundById(v16)::JM,71924:CL,85148
71925 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 228::CD,71926:CD,71930:CD,71935:JM,72065:JM,72225:JM,72160:JM,72066:JM,72226:JM,72165:JM,71974:JM,72070:JM,72230:JM,72075:JM,72235:JM,71978:JM,71983:JM,71984:JM,71988:JM,71993:JM,72155:JM,72156:JM,72027:JM,71900
71924 :: PRED :: IF :: Z :: if (v35 != #(null)) goto 228::CD,71925:JM,72027:JM,71900
71926 :: CALL :: call :: Ljava/lang/String :: v38 = v18.getType()::JM,72065:JM,72225:JM,72160:JM,72066:JM,72226:JM,72165:JM,71974:JM,72070:JM,72230:JM,72075:JM,72235:JM,71978:JM,71983:JM,71984:JM,71988:JM,71926:JM,71993:JM,72155:JM,71930:JM,72156:JM,71935
71930 :: CALL :: call :: Z :: v41 = v38.equals(#(polymer))::JM,72160:JM,72165:JM,71988:JM,72070:JM,72230:JM,71993:JM,72075:JM,72235:JM,71930:JM,71978:JM,71935:JM,71983
71935 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 166::CD,71936:CD,71946:CD,71953:CD,71959:CD,71974:CD,71978:CD,71983:JM,72065:JM,72225:JM,72160:JM,72066:JM,72226:JM,72165:JM,72070:JM,72230:JM,72075:JM,72235:JM,71984:JM,71988:JM,71926:JM,71993:JM,72155:JM,71930:JM,72156:JM,71935
71936 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v53 = p0 $this .createNewCompoundFromESG(v26, v16)::CL,85188
71946 :: CALL :: call :: V :: v53.setMolName(v55)::CL,85278
71953 :: CALL :: call :: V :: v57.addCompound(v53)::CL,85289
71959 :: CALL :: call :: Ljava/lang/Integer :: v62 = valueOf(v16)::
71974 :: CALL :: call :: Ljava/lang/String :: v43 = v18.getType()::JM,72065:JM,72225:JM,72160:JM,72066:JM,72226:JM,72165:JM,71974:JM,72070:JM,72230:JM,72075:JM,72235:JM,71978:JM,71983:JM,71984:JM,71988:JM,71926:JM,71993:JM,72155:JM,71930:JM,72156:JM,71935
71978 :: CALL :: call :: Z :: v46 = v43.equals(#(non-solvent))::JM,72160:JM,72165:JM,71988:JM,72070:JM,72230:JM,71993:JM,72075:JM,72235:JM,71930:JM,71978:JM,71935:JM,71983
71983 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 228::CD,71984:CD,71988:CD,71993:JM,72065:JM,72225:JM,72160:JM,72066:JM,72226:JM,72165:JM,71974:JM,72070:JM,72230:JM,72075:JM,72235:JM,71978:JM,71983:JM,71926:JM,72155:JM,71930:JM,72156:JM,71935:JM,72027:JM,71900
71984 :: CALL :: call :: Ljava/lang/String :: v48 = v18.getType()::JM,72065:JM,72225:JM,72160:JM,72066:JM,72226:JM,72165:JM,71974:JM,72070:JM,72230:JM,72075:JM,72235:JM,71978:JM,71983:JM,71984:JM,71988:JM,71926:JM,71993:JM,72155:JM,71930:JM,72156:JM,71935
71988 :: CALL :: call :: Z :: v51 = v48.equals(#(water))::JM,72160:JM,72165:JM,71988:JM,72070:JM,72230:JM,71993:JM,72075:JM,72235:JM,71930:JM,71978:JM,71935:JM,71983
71993 :: PRED :: IF :: Z :: if (v51 != #(0)) goto 228::CD,71996:CD,72001:CD,72005:CD,72010:CD,72015:JM,72027:JM,71900
71996 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v67 = new java.lang.StringBuilder::
72001 :: CALL :: call :: Ljava/lang/String :: v71 = v26.getEntity_id()::JM,72001
72005 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v67.append(v71)::
72010 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v73.append(#( that has unknown _en...))::
72015 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
72023 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,72027:JM,71900
72027 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 51::CD,71896:CD,71900:CD,71901:CD,71905:CD,71909:CD,71914:CD,72023:JM,72027
72028 :: EXPR :: reference :: Ljava/util/List :: v80 = p0 $this .entitySrcNats::JM,72117:JM,72040
72031 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,72117:JM,72040
72036 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,72117:JM,72040
72041 :: CALL :: call :: Ljava/lang/String :: v89 = v87.getEntity_id()::JM,72049:JM,72054:JM,72041
72040 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,72049:JM,72054:JM,72041
72045 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $asym .getEntity_id()::JM,71905:JM,72049:JM,72144:JM,71909:JM,71863:JM,72135:JM,72054:JM,72139:JM,71914:JM,72045:JM,72269
72049 :: CALL :: call :: Z :: v93 = v89.equals(v91)::JM,72049:JM,72054:JM,72144:JM,71909:JM,72139:JM,71914:JM,72269
72054 :: PRED :: IF :: Z :: if (v93 != #(0)) goto 281::CD,72059:CD,72064
72059 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v96 = v94.getCompoundById(v16)::JM,72064:CL,85148
72065 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 365::CD,72066:CD,72070:CD,72075:JM,72225:JM,72160:JM,72226:JM,72165:JM,71974:JM,72230:JM,72235:JM,71978:JM,71983:JM,71984:JM,71988:JM,71926:JM,71993:JM,72155:JM,71930:JM,72156:JM,71935:JM,72117:JM,72040
72064 :: PRED :: IF :: Z :: if (v96 != #(null)) goto 365::CD,72065:JM,72117:JM,72040
72066 :: CALL :: call :: Ljava/lang/String :: v99 = v18.getType()::JM,72225:JM,72160:JM,72066:JM,72226:JM,72165:JM,71974:JM,72070:JM,72230:JM,72075:JM,72235:JM,71978:JM,71983:JM,71984:JM,71988:JM,71926:JM,71993:JM,72155:JM,71930:JM,72156:JM,71935
72070 :: CALL :: call :: Z :: v101 = v99.equals(#(polymer))::JM,72160:JM,72165:JM,71988:JM,72070:JM,72230:JM,71993:JM,72075:JM,72235:JM,71930:JM,71978:JM,71935:JM,71983
72075 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 365::CD,72076:CD,72086:CD,72093:CD,72099:JM,72117:JM,72040
72076 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v103 = p0 $this .createNewCompoundFromESN(v87, v16)::CL,85315
72086 :: CALL :: call :: V :: v103.setMolName(v105)::CL,85278
72093 :: CALL :: call :: V :: v107.addCompound(v103)::CL,85289
72099 :: CALL :: call :: Ljava/lang/Integer :: v111 = valueOf(v16)::
72113 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,72117:JM,72040
72117 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 252::CD,72036:CD,72040:CD,72041:CD,72045:CD,72049:CD,72054:CD,72113:JM,72117
72118 :: EXPR :: reference :: Ljava/util/List :: v115 = p0 $this .entitySrcSyns::JM,72130:JM,72207
72121 :: CALL :: call :: Ljava/util/Iterator :: v117 = v115.iterator()::JM,72130:JM,72207
72126 :: CALL :: call :: Ljava/lang/Object :: v121 = v117.next()::JM,72130:JM,72207
72131 :: CALL :: call :: Ljava/lang/String :: v124 = v122.getEntity_id()::JM,72144:JM,72131:JM,72139
72130 :: EXPR :: assign :: Ljava/lang/Object :: v122 = CHECKCAST v121::JM,72144:JM,72131:JM,72139
72135 :: CALL :: call :: Ljava/lang/String :: v126 = p1 $asym .getEntity_id()::JM,71905:JM,72049:JM,72144:JM,71909:JM,71863:JM,72135:JM,72054:JM,72139:JM,71914:JM,72045:JM,72269
72139 :: CALL :: call :: Z :: v128 = v124.equals(v126)::JM,72144:JM,72139:JM,72049:JM,71909:JM,72054:JM,71914:JM,72269
72144 :: PRED :: IF :: Z :: if (v128 != #(0)) goto 418::CD,72149:CD,72154
72149 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v131 = v129.getCompoundById(v16)::JM,72154:CL,85148
72155 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 502::CD,72156:CD,72160:CD,72165:JM,72225:JM,72066:JM,72226:JM,71974:JM,72070:JM,72230:JM,72075:JM,72235:JM,71978:JM,71983:JM,71984:JM,71988:JM,71926:JM,71993:JM,71930:JM,71935:JM,72130:JM,72207
72154 :: PRED :: IF :: Z :: if (v131 != #(null)) goto 502::CD,72155:JM,72130:JM,72207
72156 :: CALL :: call :: Ljava/lang/String :: v134 = v18.getType()::JM,72225:JM,72160:JM,72066:JM,72226:JM,72165:JM,71974:JM,72070:JM,72230:JM,72075:JM,72235:JM,71978:JM,71983:JM,71984:JM,71988:JM,71926:JM,71993:JM,71930:JM,72156:JM,71935
72160 :: CALL :: call :: Z :: v136 = v134.equals(#(polymer))::JM,72160:JM,72165:JM,71988:JM,72070:JM,72230:JM,71993:JM,72075:JM,72235:JM,71930:JM,71978:JM,71935:JM,71983
72165 :: PRED :: IF :: Z :: if (v136 == #(0)) goto 502::CD,72166:CD,72176:CD,72183:CD,72189:JM,72130:JM,72207
72166 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v138 = p0 $this .createNewCompoundFromESS(v122, v16)::CL,85385
72176 :: CALL :: call :: V :: v138.setMolName(v140)::CL,85278
72183 :: CALL :: call :: V :: v142.addCompound(v138)::CL,85289
72189 :: CALL :: call :: Ljava/lang/Integer :: v146 = valueOf(v16)::
72203 :: CALL :: call :: Z :: v119 = v117.hasNext()::JM,72130:JM,72207
72207 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 389::CD,72126:CD,72130:CD,72131:CD,72135:CD,72139:CD,72144:CD,72203:JM,72207
72211 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v152 = v150.getCompoundById(v16)::JM,72216:CL,85148
72216 :: PRED :: IF :: Z :: if (v152 != #(null)) goto 599::JM,80388:JM,80395:CD,72221:CD,72225
72221 :: CALL :: call :: V :: v153.setMolId(v16)::CL,80516
72225 :: PRED :: IF :: Z :: if (v18 == #(null)) goto 599::CD,72226:CD,72230:CD,72235:JM,72160:JM,72066:JM,72165:JM,71974:JM,72070:JM,72075:JM,71978:JM,71983:JM,71984:JM,71988:JM,71926:JM,71993:JM,71930:JM,72156:JM,71935
72226 :: CALL :: call :: Ljava/lang/String :: v157 = v18.getType()::JM,72160:JM,72066:JM,72226:JM,72165:JM,71974:JM,72070:JM,72230:JM,72075:JM,72235:JM,71978:JM,71983:JM,71984:JM,71988:JM,71926:JM,71993:JM,71930:JM,72156:JM,71935
72230 :: CALL :: call :: Z :: v159 = v157.equals(#(polymer))::JM,72160:JM,72165:JM,71988:JM,72070:JM,72230:JM,71993:JM,72075:JM,72235:JM,71930:JM,71978:JM,71935:JM,71983
72235 :: PRED :: IF :: Z :: if (v159 == #(0)) goto 599::CD,72240:CD,72247
72240 :: CALL :: call :: V :: v153.setMolName(v161)::CL,85278
72247 :: CALL :: call :: V :: v163.addCompound(v153)::CL,85289
72269 :: EXPR :: assign :: null :: PHI v16 = v8, #(0)::
72399 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::JM,61754:JM,96422
72398 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isAlignSeqRes()::CE,72399:CD,72405
72402 :: EXPR :: reference :: Z :: v3 = p0 $this .alignSeqRes::DD,72405
72405 :: NORM :: compound :: Z :: return v3::CF,72399
72407 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.alignSeqRes()::CD,72567:CD,72571:CD,72581
72421 :: CALL :: call :: Ljava/util/List :: v12 = v10.getModel(v79)::CL,48170
72426 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .seqResChains::JM,72562
72429 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,72562
72434 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,72562
72439 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getMatchingAtomRes(v20, v12)::JM,72444:CL,85435
72444 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 84::CF,72457:CD,72483:CD,72487:CD,72491:CD,72549:CD,72553:CD,72554:CD,72573:CD,72574:CD,72578:CD,72579:CD,72580
72457 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::JM,72553
72462 :: CALL :: call :: Ljava/util/List :: v36 = v20.getAtomGroups()::CL,48461
72466 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v47)::
72472 :: CALL :: call :: Ljava/lang/Object :: v41 = v39.clone()::JM,72476:CL,84505:CL,84822:CL,84647
72477 :: CALL :: call :: Z :: v44 = v29.add(v42)::
72476 :: EXPR :: assign :: Ljava/lang/Object :: v42 = CHECKCAST v41::
72483 :: CALL :: call :: Ljava/util/List :: v32 = v20.getAtomGroups()::JM,72491:CL,48461
72482 :: EXPR :: assign :: Ljava/lang/Object :: v46 = v47 + #(1)::DD,72574:CF,72573
72487 :: CALL :: call :: I :: v34 = v32.size()::JM,72491
72491 :: PRED :: IF :: Z :: if (v47 < v34) goto 102::CD,72462:CD,72466:CD,72472:CD,72476:CD,72477:CD,72482:CD,72483:CD,72487:CD,72573:CD,72574
72493 :: CALL :: call :: Ljava/lang/Object :: v51 = v29.get(v75)::
72499 :: CALL :: call :: Ljava/util/List :: v54 = v22.getAtomGroups()::JM,72512:JM,72542:CL,48461
72503 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,72512:JM,72542
72508 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,72512:JM,72542
72513 :: CALL :: call :: I :: v63 = p0 $this .getInternalNr(v61)::JM,72530:CL,85526
72512 :: EXPR :: assign :: Ljava/lang/Object :: v61 = CHECKCAST v60::
72522 :: CALL :: call :: Ljava/lang/Integer :: v67 = v65.getSeqNum()::JM,72530:CL,85043
72526 :: CALL :: call :: I :: v69 = v67.intValue()::JM,72530
72531 :: CALL :: call :: Ljava/lang/Object :: v71 = v29.set(v76, v61)::
72530 :: PRED :: IF :: Z :: if (v69 != v63) goto 248::CF,72575:CD,72531:CD,72538:CD,72542:CD,72576:CD,72577
72538 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,72512:JM,72542
72543 :: PRED :: IF :: Z :: if (v72 != #(0)) goto 269::CD,72544:CF,72548
72542 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 192::CF,72577:CD,72508:CD,72512:CD,72513:CD,72522:CD,72526:CD,72530:CD,72575:CD,72576:JM,72542
72544 :: CALL :: call :: V :: v52.setResidueNumber(#(null))::CL,85618
72549 :: CALL :: call :: I :: v49 = v29.size()::JM,72553
72548 :: EXPR :: assign :: Ljava/lang/Object :: v74 = v76 + #(1)::DD,72579:CF,72578
72553 :: PRED :: IF :: Z :: if (v75 < v49) goto 160::CD,72493:CD,72499:CD,72503:CD,72538:CD,72542:CD,72543:CD,72548:CD,72549:CD,72575:CD,72576:CD,72577:CD,72578:CD,72579
72554 :: CALL :: call :: V :: v22.setSeqResGroups(v29)::CL,48841
72558 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,72562
72563 :: EXPR :: assign :: Ljava/lang/Object :: v78 = v80 + #(1)::DD,72581
72562 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 43::CD,72434:CD,72439:CD,72444:CD,72558:CD,72580:JM,72562:CF,72563
72567 :: CALL :: call :: I :: v9 = v7.nrModels()::JM,72571:CL,49141
72571 :: PRED :: IF :: Z :: if (v79 < v9) goto 17::CD,72421:CD,72429:CD,72558:CD,72562:CD,72563:CD,72567:CD,72580:CD,72581
72573 :: EXPR :: assign :: null :: PHI v81 = v80, v81::CF,72574:DD,72573:DD,72578
72575 :: EXPR :: assign :: null :: PHI v83 = v82, v83::CF,72576:DD,72575:DD,72578
72574 :: EXPR :: assign :: null :: PHI v47 = #(0), v46::DD,72482:DD,72491
72577 :: EXPR :: assign :: null :: PHI v72 = #(1), #(0)::DD,72543
72576 :: EXPR :: assign :: null :: PHI v76 = v75, v76::JM,72512:JM,72542:DD,72548:DD,72576
72579 :: EXPR :: assign :: null :: PHI v75 = #(0), v74::DD,72553:DD,72576
72578 :: EXPR :: assign :: null :: PHI v82 = v81, v83::CF,72579:DD,72575:DD,72580
72581 :: EXPR :: assign :: null :: PHI v79 = #(0), v78::DD,72571:DD,72580
72580 :: EXPR :: assign :: null :: PHI v80 = v79, v80, v82::JM,72562:DD,72563:DD,72573:DD,72580
72649 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.storeUnAlignedSeqRes(org.biojava.nbio.structure.Structure,java.util.List,boolean)::CD,72745:CD,72749:CD,72752:JM,72737:JM,72738:JM,72671:JM,72670
72656 :: CALL :: call :: Ljava/util/List :: v9 = p1 $structure .getModel(v45)::CL,48170
72661 :: CALL :: call :: Ljava/util/Iterator :: v11 = p2 $seqResChains .iterator()::JM,72737:JM,72738:JM,72671:JM,72670
72666 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,72737:JM,72670
72671 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 86::CD,72676:CD,72680:CD,72684:CD,72688:CD,72694:CD,72699:CD,72751
72670 :: EXPR :: assign :: Ljava/lang/Object :: v16 = CHECKCAST v15::CF,72671
72676 :: CALL :: call :: V :: v16.setSeqResGroups(v18)::CL,48841
72680 :: NORM :: declaration :: Ljava/util/ArrayList :: v20 = new java.util.ArrayList::
72684 :: CALL :: call :: V :: v16.setAtomGroups(v20)::CL,85629
72688 :: CALL :: call :: Z :: v24 = v9.add(v16)::
72694 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v26 = getMatchingAtomRes(v16, v9)::JM,72699:CL,85435
72699 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 113::CD,72704:CD,72711:CD,72716:CD,72720:CD,72725:CD,72751
72704 :: CALL :: call :: V :: v26.setSeqResGroups(v29)::CL,48841
72711 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
72716 :: CALL :: call :: Ljava/lang/String :: v36 = v16.getChainID()::CL,48319
72720 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v32.append(v36)::
72725 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
72733 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,72737:JM,72670
72737 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 27::CD,72666:CD,72670:CD,72671:CD,72733:CD,72751:JM,72737:CF,72738
72739 :: CALL :: call :: V :: p1 $structure .setChains(v46, v9)::CL,85667
72738 :: PRED :: IF :: Z :: if (p3 $headerOnly  == #(0)) goto 167::CD,72739:CF,72744
72745 :: CALL :: call :: I :: v7 = p1 $structure .nrModels()::JM,72749:CL,49141
72744 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v46 + #(1)::DD,72752
72749 :: PRED :: IF :: Z :: if (v45 < v7) goto 7::CD,72656:CD,72661:CD,72733:CD,72737:CD,72738:CD,72744:CD,72745:CD,72751:CD,72752
72751 :: EXPR :: assign :: null :: PHI v46 = v45, v46, v46, v46::JM,72737:JM,72670:DD,72744:DD,72751
72752 :: EXPR :: assign :: null :: PHI v45 = #(0), v44::DD,72749:DD,72751
72793 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::JM,61844:JM,72906:JM,73231
72792 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUseInternalChainId()::CE,72793:CD,72799
72796 :: EXPR :: reference :: Z :: v3 = p0 $this .useInternalChainId::DD,72799
72799 :: NORM :: compound :: Z :: return v3::CF,72793
72801 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setInternalChainID(java.lang.String)::JM,72806
72806 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .internalChainID = p1 $internalChainID ::
72813 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::JM,62162:JM,78996
72812 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomBonds()::CE,72813:CD,72819
72816 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomBonds::DD,72819
72819 :: NORM :: compound :: Z :: return v3::CF,72813
72821 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addBonds()::CD,72837:CD,72843
72837 :: CALL :: call :: V :: v3.makeBonds()::CL,85744
72843 :: CALL :: call :: V :: v3.formBondsFromStructConn(v8)::CL,85765
72855 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::CE,72856:CD,72862
72856 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.shouldCreateAtomCharges()::JM,62173:JM,79007
72859 :: EXPR :: reference :: Z :: v3 = p0 $this .createAtomCharges::DD,72862
72862 :: NORM :: compound :: Z :: return v3::CF,72856
72864 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addCharges()::CD,72871
72871 :: CALL :: call :: V :: addCharges(v3)::CL,86382
72876 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.linkCompounds()::CD,73049:CD,73053:CD,73057:CD,73061:CD,73102:CD,73106:CD,73110
72884 :: CALL :: call :: Ljava/util/List :: v9 = v7.getModel(v74)::JM,73044:CL,48170
72889 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,73044
72894 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.next()::JM,73044
72902 :: CALL :: call :: Z :: v19 = v17.isUseInternalChainId()::JM,72906:CL,72792
72906 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 68::CD,72914:CD,72919:CD,72928:CD,72933:CD,73108
72914 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,72919
72919 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,73108
72928 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.get(v28)::JM,72933
72933 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::DD,73108
72934 :: PRED :: IF :: Z :: if (v32 != #(null)) goto 114::CD,72947:CD,72954:CD,72959:CD,73109
72947 :: CALL :: call :: I :: v40 = parseInt(v32)::
72954 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v43 = v41.getCompoundById(v40)::JM,72959:CL,85148
72959 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 203::CD,72962:JM,80388:JM,80395:CD,72980:CD,72984:CD,72988:CD,72995:CD,73019:CD,73032:CD,73036:CD,73109
72962 :: CALL :: call :: Ljava/lang/Integer :: v47 = valueOf(v40)::
72980 :: CALL :: call :: V :: v51.setMolId(v40)::CL,80516
72984 :: CALL :: call :: V :: v51.addChain(v16)::CL,80499
72988 :: CALL :: call :: V :: v16.setCompound(v51)::CL,56270
72995 :: CALL :: call :: V :: v56.addCompound(v51)::CL,85289
73019 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v40)::
73032 :: CALL :: call :: V :: v43.addChain(v16)::CL,80499
73036 :: CALL :: call :: V :: v16.setCompound(v43)::CL,56270
73040 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,73044
73045 :: EXPR :: assign :: Ljava/lang/Object :: v73 = v75 + #(1)::DD,73110
73044 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 25::CD,72894:CD,72902:CD,72906:CD,72934:CD,73040:CD,73108:CD,73109:JM,73044:CF,73045
73049 :: CALL :: call :: I :: v6 = v4.nrModels()::JM,73053:CL,49141
73053 :: PRED :: IF :: Z :: if (v74 < v6) goto 6::CD,72884:CD,72889:CD,73040:CD,73044:CD,73045:CD,73049:CD,73109:CD,73110
73057 :: CALL :: call :: Ljava/util/List :: v78 = v76.getCompounds()::JM,73106:CL,47969
73061 :: CALL :: call :: Ljava/util/Iterator :: v80 = v78.iterator()::JM,73106
73066 :: CALL :: call :: Ljava/lang/Object :: v84 = v80.next()::JM,73106
73102 :: CALL :: call :: Z :: v82 = v80.hasNext()::JM,73106
73106 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 304::CD,73066:CD,73102:JM,73106
73109 :: EXPR :: assign :: null :: PHI v75 = v74, v75, v75, v75::JM,73044:DD,73045:DD,73109
73108 :: EXPR :: assign :: null :: PHI v32 = v25, v31::DD,72934
73110 :: EXPR :: assign :: null :: PHI v74 = #(0), v73::DD,73053:DD,73109
73186 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.addSites()::CD,73193:CD,73197:CD,73205:CD,73303:CD,73308:CD,73313:CD,73318:CD,73329:CD,73334:CD,73338:CD,73343:CD,73348:CD,73352:CD,73357:CD,73470:CD,73474:CD,73478:CD,73484:CD,73485
73193 :: CALL :: call :: Ljava/util/List :: v5 = v3.getSites()::JM,73197:JM,73485:CL,48097
73197 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 23::CF,73485:CF,73198
73198 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,73485
73202 :: EXPR :: reference :: Ljava/util/List :: v10 = p0 $this .structSiteGens::JM,73474:JM,73214
73205 :: CALL :: call :: Ljava/util/Iterator :: v12 = v10.iterator()::JM,73474:JM,73214
73210 :: CALL :: call :: Ljava/lang/Object :: v17 = v12.next()::JM,73474:JM,73214
73215 :: CALL :: call :: Ljava/lang/String :: v20 = v18.getSite_id()::JM,73219:JM,73215:JM,73486
73214 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::JM,73219:JM,73215:JM,73486:JM,73220:JM,73418:JM,73423:JM,73232:JM,73487:JM,73237:JM,73241:JM,73249:JM,73488:JM,73250:JM,73255:JM,73245
73219 :: PRED :: IF :: Z :: if (v20 != #(null)) goto 62::CF,73486
73220 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getLabel_comp_id()::JM,73220:JM,73418:JM,73423
73227 :: CALL :: call :: Z :: v27 = v25.isUseInternalChainId()::JM,73231:CL,72792
73231 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 87::CD,73232:CD,73237:CD,73487
73232 :: CALL :: call :: Ljava/lang/String :: v29 = v18.getLabel_asym_id()::JM,73232:JM,73487
73237 :: CALL :: call :: Ljava/lang/String :: v31 = v18.getAuth_asym_id()::JM,73237:JM,73487
73241 :: CALL :: call :: Ljava/lang/String :: v34 = v18.getAuth_seq_id()::JM,73241
73245 :: CALL :: call :: Ljava/lang/String :: v36 = v18.getPdbx_auth_ins_code()::JM,73249:JM,73488:JM,73250:JM,73255:JM,73245
73249 :: PRED :: IF :: Z :: if (v36 == #(null)) goto 127::CF,73488:CD,73250:CD,73255
73250 :: CALL :: call :: Z :: v39 = v36.equals(#(?))::JM,73488:JM,73250:JM,73255
73255 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 127::CF,73488
73259 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v43 = v41.getChainByPDB(v32)::JM,73264:CL,74318
73265 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,73266:CD,73270
73264 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 289::CF,73490:CD,73265:CD,73281:CD,73285:JM,85074:JM,85077:JM,85071:CD,73295
73266 :: CALL :: call :: I :: v45 = v40.length()::JM,73266:JM,73270
73271 :: CALL :: call :: C :: v47 = v40.charAt(#(0))::JM,73271
73270 :: PRED :: IF :: Z :: if (v45 <= #(0)) goto 173::CD,73271:CD,73276
73276 :: CALL :: call :: Ljava/lang/Character :: v49 = valueOf(v47)::
73281 :: CALL :: call :: I :: v53 = parseInt(v34)::
73285 :: CALL :: call :: Ljava/lang/Integer :: v55 = valueOf(v53)::
73295 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v58 = v43.getGroupByPDB(v51)::JM,73490:CL,86717
73303 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v62 = new java.lang.StringBuilder::
73308 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v62.append(v32)::
73313 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v66.append(v34)::
73318 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
73329 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v74 = new java.lang.StringBuilder::
73334 :: CALL :: call :: Ljava/lang/String :: v78 = v18.getSite_id()::
73338 :: CALL :: call :: Ljava/lang/StringBuilder :: v80 = v74.append(v78)::
73343 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v80.append(#( - ))::
73348 :: CALL :: call :: Ljava/lang/String :: v85 = v72.getMessage()::
73352 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v83.append(v85)::
73357 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
73371 :: CALL :: call :: Ljava/util/Iterator :: v98 = v9.iterator()::JM,73395:JM,73380
73370 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 480::CD,73371:CD,73391:CD,73395:CD,73396:CD,73405:CD,73409:CD,73414:CD,73418:CD,73423:CD,73464:CD,73491:CD,73492:CD,73493:CD,73494:JM,73380:JM,73474:JM,73214
73376 :: CALL :: call :: Ljava/lang/Object :: v102 = v98.next()::JM,73395:JM,73380
73381 :: CALL :: call :: Ljava/lang/String :: v105 = v103.getSiteID()::JM,73390:CL,86801
73380 :: EXPR :: assign :: Ljava/lang/Object :: v103 = CHECKCAST v102::DD,73491
73385 :: CALL :: call :: Z :: v107 = v22.equals(v105)::JM,73390
73391 :: CALL :: call :: Z :: v100 = v98.hasNext()::JM,73395:JM,73380
73390 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 337::CF,73491
73395 :: PRED :: IF :: Z :: if (v100 != #(0)) goto 308::CD,73376:CD,73380:CD,73381:CD,73385:CD,73390:CD,73391:CD,73491:JM,73395:CF,73396
73397 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v110 = new org.biojava.nbio.structure.Site::DD,73492
73396 :: PRED :: IF :: Z :: if (v108 != #(null)) goto 374::CF,73492:CD,73397:JM,86820:CD,73401
73401 :: CALL :: call :: V :: v110.setSiteID(v22)::CL,86843
73405 :: CALL :: call :: Ljava/util/List :: v116 = v113.getGroups()::JM,73409:JM,73494:CL,86854
73409 :: PRED :: IF :: Z :: if (v116 != #(null)) goto 397::CF,73494:CF,73410
73410 :: NORM :: declaration :: Ljava/util/ArrayList :: v117 = new java.util.ArrayList::DD,73494
73414 :: CALL :: call :: Ljava/lang/String :: v121 = v94.getPDBName()::JM,73418:JM,73423:CL,56427
73418 :: CALL :: call :: Z :: v123 = v24.equals(v121)::JM,73418:JM,73423
73423 :: PRED :: IF :: Z :: if (v123 != #(0)) goto 452::CD,73426:CD,73431:CD,73436:CD,73441:CD,73446:CD,73455:CD,73460
73426 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v125 = new java.lang.StringBuilder::
73431 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v125.append(v32)::
73436 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(v34)::
73441 :: CALL :: call :: Ljava/lang/StringBuilder :: v134 = v131.append(#( - skipping))::
73446 :: CALL :: call :: Ljava/lang/String :: v136 = v134.toString()::
73455 :: CALL :: call :: Z :: v139 = v119.add(v94)::
73460 :: CALL :: call :: V :: v113.setGroups(v119)::CL,86863
73465 :: CALL :: call :: Z :: v142 = v9.add(v113)::
73464 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 480::CD,73465:JM,73474:JM,73214
73470 :: CALL :: call :: Z :: v14 = v12.hasNext()::JM,73474:JM,73214
73474 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 36::CD,73210:CD,73214:CD,73215:CD,73219:CD,73220:CD,73227:CD,73231:CD,73241:CD,73245:CD,73249:CD,73259:CD,73264:CD,73370:CD,73470:CD,73486:CD,73487:CD,73488:CD,73490:JM,73474
73478 :: CALL :: call :: V :: v143.setSites(v9)::CL,48106
73485 :: EXPR :: assign :: null :: PHI v9 = v5, v7::JM,73395:JM,73380
73484 :: EXPR :: assign :: Ljava/lang/Exception :: v72 = catch <exc>::
73487 :: EXPR :: assign :: null :: PHI v32 = v29, v31::JM,73241
73486 :: EXPR :: assign :: null :: PHI v22 = v20, #()::JM,73220:JM,73418:JM,73423:JM,73390
73488 :: EXPR :: assign :: null :: PHI v40 = v36, v36, #(null)::DD,73265:JM,73266:JM,73270:JM,73271
73491 :: EXPR :: assign :: null :: PHI v108 = #(null), v108, v103::JM,73395:JM,73380:DD,73396:DD,73491:DD,73492
73490 :: EXPR :: assign :: null :: PHI v94 = #(null), v58, #(null), #(null)::DD,73370
73493 :: EXPR :: assign :: null :: PHI v114 = #(0), #(1)::DD,73464
73492 :: EXPR :: assign :: null :: PHI v113 = v108, v110::CF,73493
73494 :: EXPR :: assign :: null :: PHI v119 = v116, v117::
73597 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::CE,73598:CD,73604
73598 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseBioAssembly()::JM,62198:JM,93205
73601 :: EXPR :: reference :: Z :: v3 = p0 $this .parseBioAssembly::DD,73604
73604 :: NORM :: compound :: Z :: return v3::CF,73598
73613 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
73620 :: CALL :: call :: V :: p0 $this .init()::CL,86874
73628 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly,java.util.List,java.util.List)::CD,73635:CD,73641:CD,73691:CD,73695:CD,73700:CD,73709:CD,73714:CD,73719
73635 :: CALL :: call :: V :: p0 $this .init()::CL,86874
73641 :: CALL :: call :: Ljava/util/Iterator :: v8 = p3 $operators .iterator()::JM,73695
73646 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,73695
73651 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v15 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
73659 :: CALL :: call :: V :: v15.setId(v18)::CL,86949
73683 :: EXPR :: reference :: Ljava/util/List :: v28 = p0 $this .modelTransformations::
73686 :: CALL :: call :: Z :: v30 = v28.add(v15)::
73691 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,73695
73695 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 22::CD,73646:CD,73651:JM,86906:CD,73659:CD,73686:CD,73691:JM,73695
73700 :: CALL :: call :: Ljava/util/ArrayList :: v34 = p0 $this .getBioUnitTransformationsListUnaryOperators(v32)::CL,87044
73709 :: CALL :: call :: Ljava/util/ArrayList :: v38 = p0 $this .getBioUnitTransformationsListBinaryOperators(v36)::CL,87210
73714 :: CALL :: call :: Z :: v40 = v34.addAll(v38)::
73719 :: CALL :: call :: V :: v34.trimToSize()::
73761 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setId(int)::JM,73766
73766 :: EXPR :: modify :: I :: p0 $this .id = p1 $id ::
73772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setMacromolecularSize(int)::JM,73777
73777 :: EXPR :: modify :: I :: p0 $this .macromolecularSize = p1 $macromolecularSize ::
73783 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyInfo.setTransforms(java.util.List)::JM,73788
73788 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transforms = p1 $transforms ::
73794 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setBioAssemblies(java.util.Map)::JM,73799
73799 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .bioAssemblies = p1 $bioAssemblies ::
73805 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setStructNcsOps()::CD,73809:CD,73816:CD,74044:CD,74049:CD,74050:CD,74059:CD,74063:CD,74064:CD,74068
73809 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::JM,74068:JM,74080
73813 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .structNcsOper::JM,73825:JM,74063
73816 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,73825:JM,74063
73821 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,73825:JM,74063
73825 :: EXPR :: assign :: Ljava/lang/Object :: v13 = CHECKCAST v12::JM,73826:JM,73830:JM,73835:JM,74049
73826 :: CALL :: call :: Ljava/lang/String :: v15 = v13.getCode()::JM,73826:JM,73830:JM,73835
73830 :: CALL :: call :: Z :: v18 = v15.equals(#(generate))::JM,73830:JM,73835
73835 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 47::CF,73837:CD,74033
73837 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v19 = new javax.vecmath.Matrix4d::
74033 :: CALL :: call :: Z :: v91 = v3.add(v19)::
74041 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .structNcsOper::JM,74049
74044 :: CALL :: call :: I :: v97 = v95.indexOf(v13)::JM,74049
74049 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v97 + #(1)::
74050 :: CALL :: call :: Ljava/lang/Integer :: v100 = valueOf(v98)::
74059 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,73825:JM,74063
74063 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 22::CD,73821:CD,73825:CD,73826:CD,73830:CD,73835:CD,74059:JM,74063:JM,74068
74064 :: CALL :: call :: I :: v104 = v3.size()::JM,74068
74068 :: PRED :: IF :: Z :: if (v104 <= #(0)) goto 336::CD,74076:CD,74080:CD,74081:CD,74087
74076 :: CALL :: call :: I :: v109 = v3.size()::JM,74080
74081 :: CALL :: call :: [Ljava/lang/Object :: v112 = v3.toArray(v110)::
74080 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v110 = new javax.vecmath.Matrix4d[]::
74087 :: CALL :: call :: V :: v107.setNcsOperators(v113)::CL,87417
74179 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.setCrystallographicInfoMetadata()::CD,74186
74183 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v3 = p0 $this .parsedScaleMatrix::DD,74186
74186 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 47::CD,74194:CD,74198:CD,74212
74194 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v10 = v7.getCrystalCell()::JM,74198:CL,87428
74198 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 44::CD,74206
74206 :: CALL :: call :: Z :: v15 = v12.checkScaleMatrix(v13)::CL,87437
74212 :: CALL :: call :: V :: v7.setNonStandardCoordFrameConvention(v17)::CL,87531
74241 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setDetails(java.lang.String)::JM,74246
74246 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
74252 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setInsCode(java.lang.String)::JM,74257
74257 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .insCode = p1 $insCode ::
74263 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setOrigGroup(java.lang.String)::JM,74268
74268 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .origGroup = p1 $origGroup ::
74274 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbGroup(java.lang.String)::JM,74279
74279 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbGroup = p1 $pdbGroup ::
74285 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setPdbResNum(java.lang.String)::JM,74290
74290 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbResNum = p1 $pdbResNum ::
74296 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setUniProtId(java.lang.String)::JM,74301
74301 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .uniProtId = p1 $uniProtId ::
74307 :: ENTR :: entry :: null :: org.biojava.nbio.structure.SeqMisMatchImpl.setSeqNum(java.lang.Integer)::JM,74312
74312 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p1 $seqNum ::
74319 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::JM,73264
74318 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChainByPDB(java.lang.String)::CE,74319:CD,74323:CD,74329
74323 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChainByPDB(p1 $chainId , #(0))::JM,74329:CL,48373
74329 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,74319
74333 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::CE,74334:CD,74337:CD,74341:CD,74342:CD,74343:CD,74367:CD,74368:CD,74373:CD,74374:CD,74376:CD,74377
74334 :: EXIT :: exit :: [Ljava/lang/reflect/Field :: org.biojava.nbio.structure.io.mmcif.MMCIFFileTools.getFields(java.lang.Class)::JM,63461
74337 :: CALL :: call :: [Ljava/lang/reflect/Field :: v4 = p1 $c .getDeclaredFields()::JM,74341:JM,74343
74341 :: EXPR :: assign :: I :: v5 = v4.length::CF,74342
74343 :: EXPR :: assign :: I :: v8 = v4.length::DD,74367
74342 :: NORM :: declaration :: [Ljava/lang/reflect/Field :: v6 = new java.lang.reflect.Field[]::JM,74368:JM,74373:CF,74343
74345 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v4[v21]::JM,74354:JM,74359
74353 :: EXPR :: assign :: Ljava/lang/Class :: v12 = metadata <Application,Lorg/biojava/nbio/structure/io/mmcif/model/IgnoreField>-><Primordial,Ljava/lang/Class>::JM,74354:JM,74359
74354 :: CALL :: call :: Ljava/lang/annotation/Annotation :: v14 = v9.getAnnotation(v12)::JM,74354:JM,74359
74359 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,74360
74360 :: PRED :: IF :: Z :: if (v15 != #(null)) goto 64::CF,74375:CD,74365
74365 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v20 + #(1)::DD,74375
74367 :: PRED :: IF :: Z :: if (v21 < v8) goto 30::CD,74353:CD,74354:CD,74359:CD,74360:CD,74366:CD,74375:CD,74376:CD,74377:JM,74368:JM,74373
74366 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v21 + #(1)::DD,74377:CF,74376
74368 :: CALL :: call :: [Ljava/lang/Object :: v23 = copyOf(v6, v20)::JM,74368:JM,74373
74373 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::CF,74374
74375 :: EXPR :: assign :: null :: PHI v18 = v20, v17::DD,74376:CF,74366
74374 :: NORM :: compound :: [Ljava/lang/reflect/Field :: return v24::DD,74334
74377 :: EXPR :: assign :: null :: PHI v21 = #(0), v19::DD,74366:DD,74367
74376 :: EXPR :: assign :: null :: PHI v20 = #(0), v18::CF,74377:DD,74365:JM,74368:JM,74373:DD,74375
74510 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifParser.produceWarning(java.lang.String,java.lang.String,java.lang.Class,java.util.Set)::CD,74518:CD,74523:CD,74528:CD,74533:CD,74537:CD,74542:CD,74547:CD,74552:CD,74557:CD,74561:CD,74562:CD,74570:CD,74575:CD,74579:CD,74584:CD,74588:CD,74593:CD,74620:JM,74599:JM,74600
74518 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
74523 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $key )::JM,74593:JM,74533:JM,74599:JM,74600:JM,74620:JM,74575
74528 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(#( in ))::JM,74593:JM,74599
74533 :: CALL :: call :: Ljava/lang/String :: v16 = p3 $c .getName()::JM,74593:JM,74533:JM,74599:JM,74600:JM,74620:JM,74575
74537 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v14.append(v16)::
74542 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(#( found in file, but n...))::
74547 :: CALL :: call :: Ljava/lang/StringBuilder :: v23 = v21.append(p2 $val )::JM,74593:JM,74533:JM,74599:JM,74600:JM,74620:JM,74575
74552 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v23.append(#()))::JM,74593:JM,74599
74557 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
74561 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
74562 :: CALL :: call :: Ljava/lang/String :: v31 = valueOf(p1 $key )::
74570 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v29.append(#(-))::
74575 :: CALL :: call :: Ljava/lang/String :: v37 = p3 $c .getName()::JM,74593:JM,74533:JM,74599:JM,74600:JM,74620:JM,74575
74579 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v35.append(v37)::
74584 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
74588 :: CALL :: call :: Z :: v44 = p2 $val .equals(#(?))::JM,74593:JM,74533:JM,74599:JM,74600:JM,74620:JM,74575
74593 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 113::CD,74594:CD,74599:JM,74593:JM,74533:JM,74600:JM,74620:JM,74575
74594 :: CALL :: call :: Z :: v48 = p2 $val .equals(#(.))::JM,74593:JM,74533:JM,74599:JM,74600:JM,74620:JM,74575
74599 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 113::CD,74600
74601 :: CALL :: call :: Z :: v51 = p4 $warnings .contains(v41)::
74600 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 126::CD,74601
74621 :: CALL :: call :: Z :: v57 = p4 $warnings .add(v41)::
74620 :: PRED :: IF :: Z :: if (p4 $warnings  == #(null)) goto 151::CD,74621
74660 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntity(org.biojava.nbio.structure.io.mmcif.model.Entity)::CD,74679
74676 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .entities::
74679 :: CALL :: call :: Z :: v11 = v9.add(p1 $entity )::
74703 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSite(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::CD,74711:CD,74715:JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
74711 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,74715:CL,71478
74715 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,74717:CD,74721:CD,74725:CD,74729:CD,74733:CD,74741:CD,74746:CD,74767:CD,74771:CD,74776:CD,74786:CD,74790:CD,74795:CD,74802:CD,74809:CD,74814:CD,74864:CD,74893:CD,74897:CD,74902:JM,85074:JM,85077:JM,85071:CD,74999:CD,75025:CD,75051:CD,75055:CD,75059:CD,75063:CD,75094:CD,75099:CD,75229:CD,75233:CD,75315:CD,75317:CD,75318:CD,75319:JM,75082:JM,74777:JM,75234:JM,75238:JM,75243:JM,75244:JM,75248:JM,74803:JM,75253:JM,75064:JM,74938:JM,74815
74717 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $atom .getLabel_asym_id()::JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
74721 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $atom .getGroup_PDB()::JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
74725 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $atom .getAuth_seq_id()::JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
74729 :: CALL :: call :: I :: v15 = parseInt(v13)::JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,74803:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,74777:JM,75064:JM,74776:JM,74938:JM,74746:JM,74815:JM,74814
74733 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::JM,75253:JM,75063:JM,75318:JM,74776:JM,75243:JM,75082:JM,74814
74741 :: CALL :: call :: Z :: v23 = v11.equals(#(ATOM))::JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,74803:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,74777:JM,75064:JM,74776:JM,74938:JM,74746:JM,74815:JM,74814
74747 :: CALL :: call :: Ljava/lang/Character :: v32 = get1LetterCodeAmino(v19)::CL,87851
74746 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 71::CD,74747:CD,74752:CD,74756
74752 :: CALL :: call :: Ljava/lang/Character :: v25 = get1LetterCodeAmino(v19)::JM,74756:CL,87851
74757 :: CALL :: call :: Ljava/lang/Character :: v28 = valueOf(#(88))::
74756 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 98::CD,74757
74767 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $atom .getPdbx_PDB_ins_code()::JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
74771 :: CALL :: call :: Z :: v38 = v35.equals(#(?))::JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,74803:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,74777:JM,75064:JM,74776:JM,74938:JM,74746:JM,74815:JM,74814
74777 :: CALL :: call :: C :: v40 = v35.charAt(#(0))::JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,74803:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,74777:JM,75064:JM,74776:JM,74938:JM,74746:JM,74815:JM,74814
74776 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 134::CD,74777:CD,74782:JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,74803:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,75064:JM,74776:JM,74938:JM,74746:JM,74815:JM,74814
74782 :: CALL :: call :: Ljava/lang/Character :: v42 = valueOf(v40)::JM,75253:JM,75063:JM,75318:JM,75243:JM,75082:JM,74814
74786 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $atom .getLabel_seq_id()::JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
74790 :: CALL :: call :: J :: v48 = parseLong(v46)::JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,74803:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,74777:JM,75064:JM,74776:JM,74938:JM,74746:JM,74815:JM,74814
74795 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $atom .getPdbx_PDB_model_num()::JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
74799 :: EXPR :: reference :: Ljava/lang/String :: v54 = p0 $this .current_nmr_model::DD,74802
74803 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
74802 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 167::
74806 :: EXPR :: reference :: Ljava/lang/String :: v55 = p0 $this .current_nmr_model::JM,74809:JM,74814
74809 :: CALL :: call :: Z :: v57 = v55.equals(v53)::JM,74809:JM,74814:JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74777:JM,75064:JM,74776:JM,74938:JM,74746:JM,74815
74815 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .current_nmr_model = v53::
74814 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 248::CD,74821:CD,74844:CD,74848
74818 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v58 = p0 $this .current_chain::DD,74821
74821 :: PRED :: IF :: Z :: if (v58 == #(null)) goto 214::CD,74828:CD,74835
74828 :: CALL :: call :: V :: v59.addGroup(v60)::CL,48899
74835 :: CALL :: call :: V :: v62.trimToSize()::CL,87866
74844 :: CALL :: call :: V :: v64.addModel(v65)::CL,48117
74848 :: NORM :: declaration :: Ljava/util/ArrayList :: v67 = new java.util.ArrayList::DD,74852
74852 :: EXPR :: modify :: Ljava/util/List :: p0 $this .current_model = v67::
74855 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = #(null)::
74858 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = #(null)::
74861 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v69 = p0 $this .current_chain::DD,74864
74865 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v70 = new org.biojava.nbio.structure.ChainImpl::DD,74869
74864 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 293::CF,75315:CD,74865:JM,48721:JM,48709:JM,48728:JM,48714:CD,74875:CD,74885
74869 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v70::
74875 :: CALL :: call :: V :: v72.setChainID(v9)::CL,48752
74879 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .current_model::
74882 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v75 = p0 $this .current_chain::
74885 :: CALL :: call :: Z :: v77 = v74.add(v75)::
74893 :: CALL :: call :: Ljava/lang/String :: v82 = v80.getChainID()::JM,74897:JM,74902:CL,48319
74897 :: CALL :: call :: Z :: v84 = v9.equals(v82)::JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,74803:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,74777:JM,75064:JM,74776:JM,74938:JM,74746:JM,74815:JM,74814
74902 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 434::CF,75317:CD,74909:CD,74923:CD,74928:CD,74947:CD,74972:CD,74977:CD,75316
74909 :: CALL :: call :: V :: v85.addGroup(v86)::CL,48899
74923 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v93 = isKnownChain(v90, v91)::JM,74928:JM,75316:CL,71433
74929 :: CALL :: call :: Ljava/lang/String :: v95 = v93.getChainID()::JM,74938:CL,48319
74928 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 361::CD,74929:CD,74933:CD,74938:CD,74942:CD,75316
74933 :: CALL :: call :: Z :: v97 = v95.equals(v9)::JM,74938:JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,74803:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,74777:JM,75064:JM,74776:JM,74746:JM,74815:JM,74814
74938 :: PRED :: IF :: Z :: if (v97 != #(0)) goto 371::CF,75316:CD,74942
74942 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v100 = isKnownChain(v9, v98)::JM,75316:CL,71433
74947 :: PRED :: IF :: Z :: if (v101 != #(null)) goto 401::CD,74948:JM,48721:JM,48709:JM,48728:JM,48714:CD,74958
74948 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v102 = new org.biojava.nbio.structure.ChainImpl::DD,74952
74952 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v102::
74958 :: CALL :: call :: V :: v104.setChainID(v9)::CL,48752
74963 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v101::
74966 :: EXPR :: reference :: Ljava/util/List :: v106 = p0 $this .current_model::JM,74977
74969 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v107 = p0 $this .current_chain::JM,74977
74972 :: CALL :: call :: Z :: v109 = v106.contains(v107)::JM,74977
74977 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 434::CF,75317:CD,74984
74978 :: EXPR :: reference :: Ljava/util/List :: v110 = p0 $this .current_model::
74981 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v111 = p0 $this .current_chain::
74984 :: CALL :: call :: Z :: v113 = v110.add(v111)::
74996 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v117 = p0 $this .current_group::DD,74999
74999 :: PRED :: IF :: Z :: if (v117 != #(null)) goto 494::CD,75000:CD,75014:CD,75021:CF,75025
75000 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v119 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,75008:CL,87975
75008 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v119::
75014 :: CALL :: call :: V :: v120.setResidueNumber(v115)::CL,85618
75021 :: CALL :: call :: V :: v122.setPDBName(v19)::CL,88185:CL,88216
75025 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 539::CD,75026:CD,75040:CD,75047:JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
75026 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v125 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,75034:CL,87975
75034 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v125::
75040 :: CALL :: call :: V :: v126.setResidueNumber(v115)::CL,85618
75047 :: CALL :: call :: V :: v128.setPDBName(v19)::CL,88185:CL,88216
75051 :: CALL :: call :: Ljava/lang/String :: v131 = p1 $atom .getLabel_alt_id()::JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
75055 :: CALL :: call :: Ljava/lang/Character :: v134 = valueOf(#(32))::JM,75318
75059 :: CALL :: call :: I :: v136 = v131.length()::JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,74777:JM,75064:JM,74776:JM,74938:JM,74746:JM,74814
75063 :: PRED :: IF :: Z :: if (v136 <= #(0)) goto 593::CF,75318:CD,75064:CD,75069:CD,75073:CD,75077:CD,75082:JM,75238:JM,75243:JM,74897:JM,75248:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,74809:JM,74777:JM,74776:JM,74938:JM,74746:JM,74814
75064 :: CALL :: call :: C :: v138 = v131.charAt(#(0))::JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,74777:JM,75064:JM,74776:JM,74938:JM,74746:JM,74814
75069 :: CALL :: call :: Ljava/lang/Character :: v140 = valueOf(v138)::JM,75253:JM,75318:JM,75243:JM,75082
75073 :: CALL :: call :: Ljava/lang/Character :: v143 = valueOf(#(46))::JM,75082
75077 :: CALL :: call :: Z :: v145 = v140.equals(v143)::JM,75318:JM,75082
75083 :: CALL :: call :: Ljava/lang/Character :: v147 = valueOf(#(32))::JM,75318
75082 :: PRED :: IF :: Z :: if (v145 == #(0)) goto 593::CF,75318:CD,75083
75094 :: CALL :: call :: Z :: v153 = v115.equals(v151)::JM,75099:CL,35032
75099 :: PRED :: IF :: Z :: if (v153 != #(0)) goto 674::CD,75106:CD,75113:CD,75116:CD,75130:CD,75137:CD,75142:CD,75146:CD,75151:CD,75319
75106 :: CALL :: call :: V :: v187.addGroup(v188)::CL,48899
75113 :: CALL :: call :: V :: v190.trimToSize()::CL,87866
75116 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v193 = p0 $this .getNewGroup(v11, v33, v51, v19)::JM,75124:CL,87975
75124 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v193::
75130 :: CALL :: call :: V :: v194.setPDBName(v19)::CL,88185:CL,88216
75137 :: CALL :: call :: V :: v196.setResidueNumber(v115)::CL,85618
75142 :: CALL :: call :: Ljava/lang/Character :: v155 = valueOf(#(32))::JM,75151
75146 :: CALL :: call :: Z :: v157 = v148.equals(v155)::JM,75151
75151 :: PRED :: IF :: Z :: if (v157 != #(0)) goto 784::CF,75319:CD,75152:CD,75156:CD,75161
75152 :: CALL :: call :: Ljava/lang/Character :: v159 = valueOf(#(46))::JM,75161
75156 :: CALL :: call :: Z :: v161 = v148.equals(v159)::JM,75161
75161 :: PRED :: IF :: Z :: if (v161 != #(0)) goto 784::CF,75319:CD,75164:CD,75169:CD,75174:CD,75182:CD,75187:CD,75192:CD,75197:CD,75205:CD,75214:CD,75218
75164 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v163 = new java.lang.StringBuilder::
75169 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v163.append(v148)::
75174 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v167.append(#( ))::
75182 :: CALL :: call :: Ljava/lang/StringBuilder :: v173 = v170.append(v171)::
75187 :: CALL :: call :: Ljava/lang/StringBuilder :: v175 = v173.append(#( ))::
75192 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v175.append(#(null))::
75197 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
75205 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v182 = p0 $this .getCorrectAltLocGroup(v148, v11, v33, v19, v51)::JM,75319:CL,88227
75214 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v184 = v182.getChain()::JM,75218:CL,88476
75218 :: PRED :: IF :: Z :: if (v184 != #(null)) goto 784::CF,75319:CD,75222
75222 :: CALL :: call :: V :: v182.setChain(v185)::CL,56376
75229 :: CALL :: call :: Z :: v201 = v199.isParseCAOnly()::JM,75233:CL,88485
75233 :: PRED :: IF :: Z :: if (v201 == #(0)) goto 821::CD,75234:CD,75238:CD,75243:CD,75266:CD,75272:CD,75277:CD,75297:CD,75302:JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,74725:JM,74795:JM,75051:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
75234 :: CALL :: call :: Ljava/lang/String :: v203 = p1 $atom .getLabel_atom_id()::JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
75238 :: CALL :: call :: Z :: v206 = v203.equals(#(CA))::JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,74777:JM,75064:JM,74776:JM,74938:JM,74746:JM,74814
75243 :: PRED :: IF :: Z :: if (v206 == #(0)) goto 819::CD,75244:CD,75248:CD,75253:JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,74803:JM,75059:JM,74741:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
75244 :: CALL :: call :: Ljava/lang/String :: v208 = p1 $atom .getType_symbol()::JM,75082:JM,74767:JM,74897:JM,74771:JM,74902:JM,74777:JM,74776:JM,74717:JM,74721:JM,74786:JM,75234:JM,74725:JM,75238:JM,74795:JM,75051:JM,75243:JM,75244:JM,75248:JM,74803:JM,75059:JM,74741:JM,75253:JM,75063:JM,75318:JM,74809:JM,75064:JM,74938:JM,74746:JM,74815:JM,74814
75248 :: CALL :: call :: Z :: v211 = v208.equals(#(C))::JM,75238:JM,75243:JM,75082:JM,74897:JM,75248:JM,75059:JM,74771:JM,74741:JM,75253:JM,75063:JM,74902:JM,75318:JM,74809:JM,74777:JM,75064:JM,74776:JM,74938:JM,74746:JM,74814
75253 :: PRED :: IF :: Z :: if (v211 != #(0)) goto 821::CD,75266:CD,75272:CD,75277:CD,75297:CD,75302
75266 :: CALL :: call :: Ljava/lang/Object :: v218 = v212.put(v214, v216)::
75272 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v220 = p0 $this .convertAtom(p1 $atom )::CL,88494
75277 :: PRED :: IF :: Z :: if (v198 == #(null)) goto 866::CD,75278:CD,75286
75278 :: CALL :: call :: V :: v198.addAtom(v220)::CL,88708
75286 :: CALL :: call :: V :: v221.addAtom(v220)::CL,88708
75297 :: CALL :: call :: Z :: v229 = v225.hasAtom(v227)::JM,75302:CL,88898
75302 :: PRED :: IF :: Z :: if (v229 != #(0)) goto 906::CD,75306
75306 :: CALL :: call :: V :: v230.addAtom(v220)::CL,88708
75315 :: EXPR :: assign :: null :: PHI v79 = #(0), #(1)::DD,75317
75317 :: EXPR :: assign :: null :: PHI v114 = v79, #(1), #(1)::DD,75025
75316 :: EXPR :: assign :: null :: PHI v101 = v93, v100::DD,74947:DD,74963
75319 :: EXPR :: assign :: null :: PHI v198 = #(null), #(null), #(null), v182, v182::DD,75277
75318 :: EXPR :: assign :: null :: PHI v148 = v134, v140, v147::JM,75151:JM,75161
75538 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrev(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBrev)::CD,75554:CD,75558:CD,75563:CD,75567:CD,75572:CD,75652
75554 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v10 = v8.getPDBHeader()::JM,75558:CL,47832
75558 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 37::JM,56087:JM,56103:JM,56120:JM,56095:JM,56127
75563 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $dbrev .getNum()::JM,75572:JM,75563:JM,75567
75567 :: CALL :: call :: Z :: v19 = v16.equals(#(1))::JM,75572:JM,75567
75572 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 126::CD,75582:CD,75607:CD,75633
75582 :: CALL :: call :: V :: v14.setDepDate(v35)::CL,88973
75607 :: CALL :: call :: V :: v14.setModDate(v48)::CL,88984
75633 :: CALL :: call :: V :: v14.setModDate(v24)::CL,88984
75652 :: CALL :: call :: V :: v58.setPDBHeader(v14)::CL,47841
75697 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBrevRecord(org.biojava.nbio.structure.io.mmcif.model.DatabasePdbrevRecord)::CD,75705:CD,75709:CD,75721:CD,75725:CD,75734:CD,75741
75705 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,75709:CL,47832
75709 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 33::JM,56087:JM,56103:JM,56120:JM,56095:JM,56127:CD,75717
75717 :: CALL :: call :: V :: v10.setPDBHeader(v8)::CL,47841
75721 :: CALL :: call :: Ljava/util/List :: v14 = v12.getRevisionRecords()::JM,75725:JM,75741:CL,88995
75725 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 56::CF,75741:CF,75726:CD,75730
75726 :: NORM :: declaration :: Ljava/util/ArrayList :: v15 = new java.util.ArrayList::DD,75741
75730 :: CALL :: call :: V :: v12.setRevisionRecords(v15)::CL,89004
75734 :: CALL :: call :: Z :: v20 = v18.add(p1 $record )::
75741 :: EXPR :: assign :: null :: PHI v18 = v14, v15::
75771 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newDatabasePDBremark(org.biojava.nbio.structure.io.mmcif.model.DatabasePDBremark)::CD,75776:CD,75780:CD,75785:CD,75814:CD,75819:CD,75824:JM,75795:JM,75786:JM,75790
75776 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $remark .getId()::JM,75776:JM,75795:JM,75780:JM,75785:JM,75786:JM,75790
75780 :: CALL :: call :: Z :: v8 = v5.equals(#(2))::JM,75795:JM,75780:JM,75785:JM,75790
75785 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 111::CD,75786:CD,75790:CD,75795:JM,75776:JM,75780:JM,75785
75786 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $remark .getText()::JM,75776:JM,75795:JM,75780:JM,75785:JM,75786:JM,75790
75790 :: CALL :: call :: I :: v14 = v11.indexOf(#(ANGSTROM))::JM,75795:JM,75780:JM,75785:JM,75790
75795 :: PRED :: IF :: Z :: if (v14 <= #(5)) goto 111::CD,75840
75814 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
75819 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v11)::JM,75795:JM,75780:JM,75785:JM,75790
75824 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
75840 :: CALL :: call :: V :: v36.setResolution(v23)::CL,89015
75872 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newExptl(org.biojava.nbio.structure.io.mmcif.model.Exptl)::CD,75888
75888 :: CALL :: call :: Z :: v10 = v6.setExperimentalTechnique(v8)::CL,89026
75913 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newCell(org.biojava.nbio.structure.io.mmcif.model.Cell)::CD,75971:CD,75976:CD,75981:CD,75986:CD,75991:CD,75996:CD,76000:CD,76004:CD,76044:CD,76050:CD,76055:CD,76059:CD,76064:CD,76069:CD,76078
75971 :: CALL :: call :: V :: v28.setA(v30)::CL,89079
75976 :: CALL :: call :: V :: v28.setB(v32)::CL,89090
75981 :: CALL :: call :: V :: v28.setC(v34)::CL,89101
75986 :: CALL :: call :: V :: v28.setAlpha(v36)::CL,89112
75991 :: CALL :: call :: V :: v28.setBeta(v38)::CL,89132
75996 :: CALL :: call :: V :: v28.setGamma(v40)::CL,89152
76000 :: CALL :: call :: Z :: v43 = v28.isCellReasonable()::JM,76004:CL,89172
76004 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 134::CD,76007:CD,76028
76007 :: CALL :: call :: Ljava/lang/Double :: v55 = valueOf(#(10.0 d))::JM,76007
76028 :: CALL :: call :: V :: v49.setCrystalCell(v28)::CL,89216
76044 :: CALL :: call :: V :: v62.setCrystalCell(#(null))::CL,89216
76050 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::
76055 :: CALL :: call :: Ljava/lang/String :: v70 = v57.getMessage()::
76059 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v66.append(v70)::
76064 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v72.append(#(), ignoring _cell ))::
76069 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
76078 :: EXPR :: assign :: Ljava/lang/Exception :: v57 = catch <exc>::
76112 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newSymmetry(org.biojava.nbio.structure.io.mmcif.model.Symmetry)::CD,76117:CD,76121:CD,76125
76117 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $symmetry .getSpace_group_name_H_M()::JM,76117
76121 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v7 = getSpaceGroup(v5)::JM,76125:CL,89227
76125 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 65::CD,76128:CD,76133:CD,76138:CD,76143:CD,76162:CD,76178:CD,76193
76128 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
76133 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v5)::
76138 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(' not recognised as a...))::
76143 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
76162 :: CALL :: call :: V :: v38.setNonStandardSg(#(1))::CL,89306
76178 :: CALL :: call :: V :: v13.setSpaceGroup(v7)::CL,89317
76193 :: CALL :: call :: V :: v19.setNonStandardSg(#(0))::CL,89306
76221 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructNcsOper(org.biojava.nbio.structure.io.mmcif.model.StructNcsOper)::CD,76229
76226 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structNcsOper::
76229 :: CALL :: call :: Z :: v6 = v4.add(p1 $sNcsOper )::
76244 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAtomSites(org.biojava.nbio.structure.io.mmcif.model.AtomSites)::CD,76249:CD,76391
76249 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,76365
76365 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .parsedScaleMatrix = v4::
76391 :: CALL :: call :: V :: v66.setNonStandardCoordFrameConvention(#(0))::CL,87531
76424 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRef(org.biojava.nbio.structure.io.mmcif.model.StructRef)::CD,76442
76439 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .strucRefs::
76442 :: CALL :: call :: Z :: v10 = v8.add(p1 $sref )::
76465 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeq(org.biojava.nbio.structure.io.mmcif.model.StructRefSeq)::CD,76470:CD,76478:CD,76486:CD,76494:CD,76502:CD,76510:CD,76515:CD,76567:CD,76571:CD,76575:CD,76579:CD,76583:CD,76584:CD,76588:CD,76597:CD,76598:CD,76602:CD,76611:CD,76615:CD,76620:CD,76624:CD,76629:CD,76637:CD,76641:CD,76649:CD,76653:CD,76657:CD,76661:CD,76665:CD,76669:CD,76670:CD,76674:CD,76683:CD,76684:CD,76688:CD,76697:CD,76701:CD,76706:CD,76710:CD,76715:CD,76723:CD,76727:CD,76735:CD,76742:CD,76746:CD,76751:CD,76758:CD,76769:CD,76778:JM,76523
76470 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v4 = new org.biojava.nbio.structure.DBRef::
76478 :: CALL :: call :: V :: v4.setIdCode(v7)::CL,89357
76486 :: CALL :: call :: V :: v4.setDbAccession(v10)::CL,89368
76494 :: CALL :: call :: V :: v4.setDbIdCode(v13)::CL,89379
76502 :: CALL :: call :: V :: v4.setChainId(v16)::CL,89390
76510 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: v21 = p0 $this .getStructRef(v19)::JM,76515:CL,89401
76515 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 96::CD,76518:CD,76523:CD,76527:CD,76532:CD,76537:CD,76542:CD,76555:CD,76563
76518 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
76523 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $sref .getRef_id()::JM,76674:JM,76583:JM,76584:JM,76523:JM,76683:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76597:JM,76567:JM,76598:JM,76602:JM,76669:JM,76575:JM,76670
76527 :: CALL :: call :: Ljava/lang/StringBuilder :: v36 = v30.append(v34)::JM,76688:JM,76674:JM,76597:JM,76583:JM,76683:JM,76602:JM,76669:JM,76588
76532 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v36.append(#( for StructRefSeq ))::JM,76597:JM,76583:JM,76683:JM,76669
76537 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(p1 $sref )::
76542 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
76555 :: CALL :: call :: V :: v4.setDatabase(v24)::CL,89447
76563 :: CALL :: call :: V :: v4.setDbIdCode(v27)::CL,89379
76567 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $sref .getPdbx_auth_seq_align_beg()::JM,76674:JM,76583:JM,76584:JM,76523:JM,76683:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76597:JM,76567:JM,76598:JM,76602:JM,76669:JM,76575:JM,76670
76571 :: CALL :: call :: I :: v48 = parseInt(v46)::JM,76688:JM,76674:JM,76597:JM,76583:JM,76683:JM,76602:JM,76669:JM,76588
76575 :: CALL :: call :: Ljava/lang/String :: v50 = p1 $sref .getPdbx_auth_seq_align_end()::JM,76674:JM,76583:JM,76584:JM,76523:JM,76683:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76597:JM,76567:JM,76598:JM,76602:JM,76669:JM,76575:JM,76670
76579 :: CALL :: call :: I :: v52 = parseInt(v50)::JM,76688:JM,76674:JM,76597:JM,76583:JM,76683:JM,76602:JM,76669:JM,76588
76583 :: NORM :: declaration :: Ljava/lang/Character :: v53 = new java.lang.Character::JM,76597:JM,76583:JM,76683:JM,76669:JM,76615:JM,76674:JM,76584:JM,76523:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76567:JM,76598:JM,76602:JM,76575:JM,76670
76584 :: CALL :: call :: Ljava/lang/String :: v55 = p1 $sref .getPdbx_seq_align_beg_ins_code()::JM,76674:JM,76583:JM,76584:JM,76523:JM,76683:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76597:JM,76567:JM,76598:JM,76602:JM,76669:JM,76575:JM,76670
76588 :: CALL :: call :: C :: v58 = v55.charAt(#(0))::JM,76688:JM,76674:JM,76597:JM,76583:JM,76683:JM,76602:JM,76669:JM,76588
76597 :: NORM :: declaration :: Ljava/lang/Character :: v60 = new java.lang.Character::JM,76597:JM,76583:JM,76683:JM,76669:JM,76624:JM,76674:JM,76584:JM,76523:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76567:JM,76598:JM,76602:JM,76575:JM,76670
76598 :: CALL :: call :: Ljava/lang/String :: v62 = p1 $sref .getPdbx_seq_align_end_ins_code()::JM,76674:JM,76583:JM,76584:JM,76523:JM,76683:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76597:JM,76567:JM,76598:JM,76602:JM,76669:JM,76575:JM,76670
76602 :: CALL :: call :: C :: v64 = v62.charAt(#(0))::JM,76688:JM,76674:JM,76597:JM,76583:JM,76683:JM,76602:JM,76669:JM,76588
76611 :: CALL :: call :: C :: v67 = v53.charValue()::JM,76615
76615 :: PRED :: IF :: Z :: if (v67 != #(63)) goto 181::CD,76616
76616 :: CALL :: call :: Ljava/lang/Character :: v71 = valueOf(#(32))::
76620 :: CALL :: call :: C :: v74 = v60.charValue()::JM,76624
76625 :: CALL :: call :: Ljava/lang/Character :: v76 = valueOf(#(32))::
76624 :: PRED :: IF :: Z :: if (v74 != #(63)) goto 199::CD,76625
76629 :: CALL :: call :: V :: v4.setSeqBegin(v48)::CL,89458
76637 :: CALL :: call :: V :: v4.setInsertBegin(v80)::CL,89469
76641 :: CALL :: call :: V :: v4.setSeqEnd(v52)::CL,89480
76649 :: CALL :: call :: V :: v4.setInsertEnd(v84)::CL,89491
76653 :: CALL :: call :: Ljava/lang/String :: v87 = p1 $sref .getDb_align_beg()::JM,76674:JM,76583:JM,76584:JM,76523:JM,76683:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76597:JM,76567:JM,76598:JM,76602:JM,76669:JM,76575:JM,76670
76657 :: CALL :: call :: I :: v89 = parseInt(v87)::JM,76688:JM,76674:JM,76597:JM,76583:JM,76683:JM,76602:JM,76669:JM,76588
76661 :: CALL :: call :: Ljava/lang/String :: v91 = p1 $sref .getDb_align_end()::JM,76674:JM,76583:JM,76584:JM,76523:JM,76683:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76597:JM,76567:JM,76598:JM,76602:JM,76669:JM,76575:JM,76670
76665 :: CALL :: call :: I :: v93 = parseInt(v91)::JM,76688:JM,76674:JM,76597:JM,76583:JM,76683:JM,76602:JM,76669:JM,76588
76669 :: NORM :: declaration :: Ljava/lang/Character :: v94 = new java.lang.Character::JM,76597:JM,76583:JM,76683:JM,76669:JM,76701:JM,76674:JM,76584:JM,76523:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76567:JM,76598:JM,76602:JM,76575:JM,76670
76670 :: CALL :: call :: Ljava/lang/String :: v96 = p1 $sref .getPdbx_db_align_beg_ins_code()::JM,76674:JM,76583:JM,76584:JM,76523:JM,76683:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76597:JM,76567:JM,76598:JM,76602:JM,76669:JM,76575:JM,76670
76674 :: CALL :: call :: C :: v98 = v96.charAt(#(0))::JM,76688:JM,76674:JM,76597:JM,76583:JM,76683:JM,76602:JM,76669:JM,76588
76683 :: NORM :: declaration :: Ljava/lang/Character :: v100 = new java.lang.Character::JM,76597:JM,76583:JM,76683:JM,76669:JM,76710:JM,76674:JM,76584:JM,76523:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76567:JM,76598:JM,76602:JM,76575:JM,76670
76684 :: CALL :: call :: Ljava/lang/String :: v102 = p1 $sref .getPdbx_db_align_end_ins_code()::JM,76674:JM,76583:JM,76584:JM,76523:JM,76683:JM,76653:JM,76684:JM,76588:JM,76688:JM,76661:JM,76597:JM,76567:JM,76598:JM,76602:JM,76669:JM,76575:JM,76670
76688 :: CALL :: call :: C :: v104 = v102.charAt(#(0))::JM,76688:JM,76674:JM,76597:JM,76583:JM,76683:JM,76602:JM,76669:JM,76588
76697 :: CALL :: call :: C :: v107 = v94.charValue()::JM,76701
76701 :: PRED :: IF :: Z :: if (v107 != #(63)) goto 297::CD,76702
76702 :: CALL :: call :: Ljava/lang/Character :: v109 = valueOf(#(32))::
76706 :: CALL :: call :: C :: v112 = v100.charValue()::JM,76710
76711 :: CALL :: call :: Ljava/lang/Character :: v114 = valueOf(#(32))::
76710 :: PRED :: IF :: Z :: if (v112 != #(63)) goto 315::CD,76711
76715 :: CALL :: call :: V :: v4.setDbSeqBegin(v89)::CL,89502
76723 :: CALL :: call :: V :: v4.setIdbnsBegin(v118)::CL,89513
76727 :: CALL :: call :: V :: v4.setDbSeqEnd(v93)::CL,89524
76735 :: CALL :: call :: V :: v4.setIdbnsEnd(v122)::CL,89535
76742 :: CALL :: call :: Ljava/util/List :: v126 = v124.getDBRefs()::JM,76746:JM,76778:CL,47873
76747 :: NORM :: declaration :: Ljava/util/ArrayList :: v127 = new java.util.ArrayList::DD,76778
76746 :: PRED :: IF :: Z :: if (v126 != #(null)) goto 370::CF,76778:CF,76747
76751 :: CALL :: call :: Z :: v131 = v129.add(v4)::
76758 :: CALL :: call :: Ljava/lang/String :: v134 = v4.toPDB()::CL,89546
76769 :: CALL :: call :: V :: v136.setDBRefs(v129)::CL,47882
76778 :: EXPR :: assign :: null :: PHI v129 = v126, v127::
76867 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructRefSeqDif(org.biojava.nbio.structure.io.mmcif.model.StructRefSeqDif)::CD,76875
76872 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .sequenceDifs::
76875 :: CALL :: call :: Z :: v6 = v4.add(p1 $sref )::
76896 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSiteGen(org.biojava.nbio.structure.io.mmcif.model.StructSiteGen)::CD,76904
76901 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structSiteGens::
76904 :: CALL :: call :: Z :: v6 = v4.add(p1 $siteGen )::
76919 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructSite(org.biojava.nbio.structure.io.mmcif.model.StructSite)::CD,76927:CD,76931:JM,76968:JM,76959
76927 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,76931:CL,71478
76931 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,76936:CD,76940:CD,76945:CD,76969:CD,76973:CD,76974:CD,76983:CD,76991:CD,76995:CD,77004:CD,77009:CD,77010:CD,77011:CD,77012
76936 :: CALL :: call :: Ljava/util/List :: v10 = v8.getSites()::JM,77009:JM,76940:CL,48097
76941 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::DD,77009
76940 :: PRED :: IF :: Z :: if (v10 != #(null)) goto 36::CF,77009:CF,76941
76945 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,76954:JM,76973
76950 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.next()::JM,76954:JM,76973
76955 :: CALL :: call :: Ljava/lang/String :: v23 = v21.getSiteID()::JM,76968:CL,86801
76954 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,77010
76959 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $structSite .getId()::JM,76968:JM,76959
76963 :: CALL :: call :: Z :: v27 = v23.equals(v25)::JM,76968
76969 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,76954:JM,76973
76968 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 78::CF,77010
76973 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 48::CD,76950:CD,76954:CD,76955:CD,76959:CD,76963:CD,76968:CD,76969:CD,77010:JM,76973:CF,76974
76975 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Site :: v29 = new org.biojava.nbio.structure.Site::DD,77011
76974 :: PRED :: IF :: Z :: if (v28 != #(null)) goto 106::CF,77011:CF,76975:JM,86820:CD,77012
76983 :: CALL :: call :: V :: v32.setSiteID(v35)::CL,86843
76991 :: CALL :: call :: V :: v32.setDescription(v38)::CL,89568
76995 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 134::CD,76996
76996 :: CALL :: call :: Z :: v41 = v14.add(v32)::
77004 :: CALL :: call :: V :: v42.setSites(v14)::CL,48106
77009 :: EXPR :: assign :: null :: PHI v14 = v10, v12::JM,76954:JM,76973
77011 :: EXPR :: assign :: null :: PHI v32 = v28, v29::CF,77012
77010 :: EXPR :: assign :: null :: PHI v28 = #(null), v28, v21::JM,76954:JM,76973:DD,76974:DD,77010:DD,77011
77012 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::DD,76995
77050 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntityPolySeq(org.biojava.nbio.structure.io.mmcif.model.EntityPolySeq)::CD,77057:CD,77062:CD,77067:CD,77075:CD,77079:CD,77086:CD,77091:CD,77095:CD,77100:CD,77108:CD,77113:CD,77277:JM,77121:JM,77187:JM,77179:JM,77183
77057 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
77062 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $epolseq )::
77067 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
77075 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $epolseq .getEntity_id()::JM,77121:JM,77075:JM,77187:JM,77179:JM,77183
77079 :: CALL :: call :: I :: v17 = parseInt(v15)::JM,77187:JM,77183
77086 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
77091 :: CALL :: call :: Ljava/lang/String :: v24 = v18.getMessage()::
77095 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
77100 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
77108 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: v33 = p0 $this .getEntity(v31)::JM,77113:CL,85088
77113 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 114::CD,77116:CD,77121:CD,77125:CD,77130:CD,77135:CD,77148:CD,77157:CD,77161:CD,77256:CD,77260:CD,77268:CD,77272
77116 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v95 = new java.lang.StringBuilder::
77121 :: CALL :: call :: Ljava/lang/String :: v99 = p1 $epolseq .getEntity_id()::JM,77121:JM,77075:JM,77187:JM,77179:JM,77183
77125 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v95.append(v99)::JM,77187:JM,77183
77130 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(. Can not match seque...))::JM,77187
77135 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
77148 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v38 = p0 $this .getEntityChain(v36)::CL,71487
77157 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v42 = getGroupFromChemCompDictionary(v40)::JM,77171:JM,77161:CL,89579
77161 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 176::CD,77162:CD,77166:CD,77170:CD,77179:CD,77183:CD,77187:JM,77121:JM,77075
77162 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v42.getChemComp()::CL,89812
77166 :: CALL :: call :: Z :: v46 = v44.isEmpty()::JM,77170:CL,89872
77171 :: EXPR :: assign :: Z :: v81=v42 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,77172
77170 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 176::CD,77171:CD,77172:CD,77179:CD,77183:CD,77187:JM,77121:JM,77075
77172 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 297::CD,77174
77174 :: CALL :: call :: V :: v82.setRecordType(#(SEQRES))::CL,89906
77179 :: CALL :: call :: Ljava/lang/String :: v49 = p1 $epolseq .getMon_id()::JM,77121:JM,77075:JM,77187:JM,77179:JM,77183
77183 :: CALL :: call :: I :: v51 = v49.length()::JM,77187:JM,77183
77187 :: PRED :: IF :: Z :: if (v51 != #(3)) goto 237::CD,77192:CD,77196:CD,77222:CD,77226
77192 :: CALL :: call :: Ljava/lang/Character :: v56 = get1LetterCodeAmino(v54)::JM,77196:CL,87851
77196 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 237::JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,77201:CD,77209:CD,77213:CD,77222:CD,77226
77201 :: CALL :: call :: V :: v72.setRecordType(#(SEQRES))::CL,89906
77209 :: CALL :: call :: Ljava/lang/Character :: v79 = get1LetterCodeAmino(v77)::CL,87851
77213 :: CALL :: call :: V :: v72.setAminoType(v79)::CL,89936
77222 :: CALL :: call :: Z :: v60 = isNucleotide(v58)::JM,77226:CL,89947
77226 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 262::JM,90033:JM,90035:JM,90008:JM,90015:JM,90031
77256 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v88 = fromString(v86)::CL,60986
77260 :: CALL :: call :: V :: v84.setResidueNumber(v88)::CL,85618
77268 :: CALL :: call :: V :: v84.setPDBName(v91)::CL,88185:CL,88216
77272 :: CALL :: call :: V :: v38.addGroup(v84)::CL,48899
77277 :: EXPR :: assign :: Ljava/lang/Exception :: v18 = catch <exc>::
77355 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcGen(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen)::CD,77363
77360 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcGens::
77363 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcGen )::
77372 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcNat(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat)::CD,77380
77377 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcNats::
77380 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcNat )::
77401 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newEntitySrcSyn(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn)::CD,77409
77406 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entitySrcSyns::
77409 :: CALL :: call :: Z :: v6 = v4.add(p1 $entitySrcSyn )::
77424 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructAsym(org.biojava.nbio.structure.io.mmcif.model.StructAsym)::CD,77432
77429 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structAsyms::
77432 :: CALL :: call :: Z :: v6 = v4.add(p1 $sasym )::
77447 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxPolySeqScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxPolySeqScheme)::CD,77459:CD,77464:JM,77466:JM,77470
77459 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,77464
77464 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,77466:CD,77470
77466 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,77466:JM,77470
77470 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,77482:CD,77500
77482 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
77500 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
77520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxNonPolyScheme(org.biojava.nbio.structure.io.mmcif.model.PdbxNonPolyScheme)::CD,77532:CD,77537:JM,77539:JM,77543
77532 :: CALL :: call :: Z :: v8 = v4.containsKey(v6)::JM,77537
77537 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 18::CD,77539:CD,77543
77539 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $ppss .getPdb_strand_id()::JM,77539:JM,77543
77543 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 44::CD,77555:CD,77573
77555 :: CALL :: call :: Ljava/lang/Object :: v26 = v20.put(v22, v24)::
77573 :: CALL :: call :: Ljava/lang/Object :: v19 = v13.put(v15, v17)::
77617 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructKeywords(org.biojava.nbio.structure.io.mmcif.model.StructKeywords)::CD,77625:CD,77629:CD,77638:CD,77646
77625 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBHeader :: v6 = v4.getPDBHeader()::JM,77629:CL,47832
77629 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 24::JM,56087:JM,56103:JM,56120:JM,56095:JM,56127
77638 :: CALL :: call :: V :: v10.setDescription(v12)::CL,47958
77646 :: CALL :: call :: V :: v10.setClassification(v15)::CL,90071
77661 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newRefine(org.biojava.nbio.structure.io.mmcif.model.Refine)::CD,77673:CD,77677:CD,77678:CD,77717:CD,77724:CD,77729:CD,77733:CD,77738:CD,77743:CD,77747:CD,77752:CD,77760:CD,77764:CD,77765:CD,77796:CD,77800:CD,77833
77673 :: CALL :: call :: F :: v8 = v6.getResolution()::JM,77677:CL,90082
77677 :: EXPR :: assign :: Z :: v10 = v8 < #(99.0 f)::DD,77678
77678 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 58::CD,77686:CD,77690:CD,77698
77686 :: CALL :: call :: F :: v20 = v6.getResolution()::JM,77690:CL,90082
77690 :: CALL :: call :: Ljava/lang/Float :: v22 = valueOf(v20)::JM,77690
77698 :: CALL :: call :: Ljava/lang/String :: v24 = format(#(%4.2f), v18)::
77717 :: CALL :: call :: V :: v6.setResolution(v29)::CL,89015
77724 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v33 = new java.lang.StringBuilder::
77729 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $r .getLs_d_res_high()::JM,77796:JM,77800
77733 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v33.append(v37)::JM,77800
77738 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v39.append(#( ))::
77743 :: CALL :: call :: Ljava/lang/String :: v44 = v31.getMessage()::
77747 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(v44)::
77752 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
77760 :: CALL :: call :: F :: v52 = v6.getRfree()::JM,77764:CL,90091
77765 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 157::CD,77773:CD,77777:CD,77785:JM,77796:JM,77800
77764 :: EXPR :: assign :: Z :: v54 = v52 < #(1.0 f)::DD,77765
77773 :: CALL :: call :: F :: v61 = v6.getRfree()::JM,77777:CL,90091
77777 :: CALL :: call :: Ljava/lang/Float :: v63 = valueOf(v61)::JM,77777
77785 :: CALL :: call :: Ljava/lang/String :: v65 = format(#(%4.2f), v59)::
77796 :: CALL :: call :: Ljava/lang/String :: v68 = p1 $r .getLs_R_factor_R_free()::JM,77796:JM,77800
77800 :: PRED :: IF :: Z :: if (v68 != #(null)) goto 179::CD,77816
77816 :: CALL :: call :: V :: v6.setRfree(v73)::CL,90100
77833 :: EXPR :: assign :: Ljava/lang/Exception :: v31 = catch <exc>::
77871 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,77876:CD,77880:CD,77901:CD,77911:JM,77905
77876 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $c .getId()::JM,77905:JM,77876:JM,77880:JM,77901
77880 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 33::CD,77883:CD,77888:CD,77893:JM,77905:JM,77876:JM,77880:JM,77901
77883 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
77888 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p1 $c )::
77893 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
77901 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $c .getId()::JM,77905:JM,77876:JM,77880:JM,77901
77905 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .latestChemCompId = v17::
77911 :: CALL :: call :: V :: v18.addChemComp(p1 $c )::CL,90111
77962 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newAuditAuthor(org.biojava.nbio.structure.io.mmcif.model.AuditAuthor)::CD,77967:CD,77971:CD,77975:CD,77979:CD,77983:CD,78006:CD,78007:CD,78011:CD,78016:CD,78028:CD,78032:CD,78075:CD,78076
77967 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $aa .getName()::JM,77979:JM,77967:JM,77983
77971 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v6 = new java.lang.StringBuffer::
77975 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
77979 :: CALL :: call :: [C :: v12 = v5.toCharArray()::JM,77979:JM,77983
77983 :: EXPR :: assign :: I :: v13 = v12.length::DD,78006
77985 :: EXPR :: reference :: C :: v14 = v12[v25]::DD,77989:DD,77991
77989 :: PRED :: IF :: Z :: if (v14 != #(32)) goto 62::CD,77991:CD,78074
77991 :: PRED :: IF :: Z :: if (v14 != #(44)) goto 73::CD,77993:CD,78074
77993 :: PRED :: IF :: Z :: if (v24 == #(0)) goto 90::CD,77994:CD,78000:CD,78074
77994 :: CALL :: call :: Ljava/lang/StringBuffer :: v19 = v8.append(v14)::
78000 :: CALL :: call :: Ljava/lang/StringBuffer :: v21 = v6.append(v14)::
78005 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v25 + #(1)::DD,78076:CF,78075
78007 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v26 = new java.lang.StringBuffer::
78006 :: PRED :: IF :: Z :: if (v25 < v13) goto 45::CF,78007:CD,77989:CD,78005:CD,78074:CD,78075:CD,78076
78011 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v26.append(v8)::
78016 :: CALL :: call :: Ljava/lang/StringBuffer :: v31 = v26.append(v6)::
78028 :: CALL :: call :: Ljava/lang/String :: v36 = v34.getAuthors()::JM,78032:CL,90204
78033 :: CALL :: call :: Ljava/lang/String :: v53 = v26.toString()::
78032 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 164::CF,78042:CD,78033:CD,78037:CD,78043:CD,78051:CD,78056:CD,78060:CD,78065:CD,78069
78037 :: CALL :: call :: V :: v34.setAuthors(v53)::CL,90213
78043 :: CALL :: call :: Ljava/lang/String :: v40 = valueOf(v36)::
78042 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
78051 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(#(,))::
78056 :: CALL :: call :: Ljava/lang/String :: v46 = v26.toString()::
78060 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v46)::
78065 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
78069 :: CALL :: call :: V :: v34.setAuthors(v50)::CL,90213
78075 :: EXPR :: assign :: null :: PHI v24 = #(0), v22::CF,78076:DD,77993:DD,78074
78074 :: EXPR :: assign :: null :: PHI v22 = v24, #(1), v24, v24::DD,78075:CF,78005
78076 :: EXPR :: assign :: null :: PHI v25 = #(0), v23::DD,78005:DD,78006
78140 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompDescriptor(org.biojava.nbio.structure.io.mmcif.model.ChemCompDescriptor)::CD,78151
78151 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,90224
78178 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStructOperList(org.biojava.nbio.structure.io.mmcif.model.PdbxStructOperList)::CD,78186
78183 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structOpers::
78186 :: CALL :: call :: Z :: v6 = v4.add(p1 $structOper )::
78207 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssembly(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssembly)::CD,78215
78212 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblies::
78215 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
78224 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newPdbxStrucAssemblyGen(org.biojava.nbio.structure.io.mmcif.model.PdbxStructAssemblyGen)::CD,78232
78229 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucAssemblyGens::
78232 :: CALL :: call :: Z :: v6 = v4.add(p1 $strucAssembly )::
78253 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompAtom(org.biojava.nbio.structure.io.mmcif.model.ChemCompAtom)::CD,78264
78264 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,90224
78289 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompConsumer.newChemCompBond(org.biojava.nbio.structure.io.mmcif.model.ChemCompBond)::CD,78300
78300 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = v4.getChemComp(v5)::CL,90224
78349 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.newStructConn(org.biojava.nbio.structure.io.mmcif.model.StructConn)::CD,78357
78354 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .structConn::
78357 :: CALL :: call :: Z :: v6 = v4.add(p1 $structConn )::
78391 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setTitle(java.lang.String)::JM,78396
78396 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
78411 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setIdCode(java.lang.String)::JM,78416
78416 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
78440 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getBufferedReader(java.io.InputStream)::CD,78452:CD,78453
78453 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v6 = new java.io.InputStreamReader::
78452 :: NORM :: declaration :: Ljava/io/BufferedReader :: v5 = new java.io.BufferedReader::CF,78453
78470 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.parsePDBFile(java.io.BufferedReader)::JM,47778:JM,47750:JM,56103:JM,47785:JM,47757:JM,47764:JM,47733:JM,56087:JM,56120:JM,47771:JM,47743:JM,56095:JM,56127:CD,78502:CD,78509:CD,78516:CD,78536:CD,78558:CD,78564:CD,78579:CD,78585:CD,78591:CD,78597:CD,78609:CD,78619:CD,78970:CD,78974:CD,78981:CD,78986:CD,78992:CD,78996:CD,79003:CD,79007:CD,79014:CD,79018:JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78718
78502 :: NORM :: declaration :: Ljava/util/ArrayList :: v12 = new java.util.ArrayList::
78509 :: NORM :: declaration :: Ljava/util/ArrayList :: v14 = new java.util.ArrayList::
78516 :: NORM :: declaration :: Ljava/util/LinkedHashMap :: v16 = new java.util.LinkedHashMap::
78536 :: NORM :: declaration :: Ljava/util/ArrayList :: v21 = new java.util.ArrayList::
78555 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .sourceLines::
78558 :: CALL :: call :: V :: v24.clear()::
78561 :: EXPR :: reference :: Ljava/util/List :: v26 = p0 $this .compndLines::
78564 :: CALL :: call :: V :: v26.clear()::
78576 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .compounds::
78579 :: CALL :: call :: V :: v30.clear()::
78582 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .helixList::
78585 :: CALL :: call :: V :: v32.clear()::
78588 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .strandList::
78591 :: CALL :: call :: V :: v34.clear()::
78594 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .turnList::
78597 :: CALL :: call :: V :: v36.clear()::
78609 :: NORM :: declaration :: Ljava/util/ArrayList :: v38 = new java.util.ArrayList::
78616 :: EXPR :: reference :: Ljava/util/Map :: v40 = p0 $this .siteToResidueMap::
78619 :: CALL :: call :: V :: v40.clear()::
78633 :: CALL :: call :: Z :: v48 = v46.equals(#())::JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78639 :: EXPR :: reference :: Ljava/lang/String :: v50 = org.biojava.nbio.structure.io.PDBFileParser.NEWLINE::JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78638 :: PRED :: IF :: Z :: if (v48 != #(0)) goto 778::CD,78639:CD,78641:CD,78646:JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78641 :: CALL :: call :: Z :: v52 = v46.equals(v50)::JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78646 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 271::CD,78648:CD,78653:JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78847:JM,78974:JM,78718
78648 :: CALL :: call :: Z :: v55 = v46.startsWith(#(TER))::JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78653 :: PRED :: IF :: Z :: if (v55 != #(0)) goto 778::CD,78654:CD,78659:JM,78913:JM,78784:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78654 :: CALL :: call :: Z :: v58 = v46.startsWith(#(END))::JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78659 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 291::CD,78661:CD,78665:JM,78913:JM,78784:JM,78659:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78661 :: CALL :: call :: I :: v60 = v46.length()::JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78665 :: PRED :: IF :: Z :: if (v60 >= #(6)) goto 337::CD,78668:CD,78673:CD,78678:CD,78683:CD,78692:CD,78698:CD,78702:CD,78707:JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78668 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
78673 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v139.append(v46)::JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78678 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v143.append(#(<))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78683 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78692 :: CALL :: call :: Ljava/lang/String :: v63 = v46.substring(#(0), #(6))::JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78698 :: CALL :: call :: Ljava/lang/String :: v65 = v63.trim()::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78702 :: CALL :: call :: Z :: v68 = v65.equals(#(ATOM))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78707 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 366::CD,78708:CD,78713:CD,78718:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78814
78708 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,90241
78713 :: CALL :: call :: Z :: v71 = v65.equals(#(SEQRES))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78719 :: CALL :: call :: V :: p0 $this .pdb_SEQRES_Handler(v46)::CL,91440
78718 :: PRED :: IF :: Z :: if (v71 == #(0)) goto 384::CD,78719:CD,78724:CD,78729:JM,78913:JM,78784:JM,78880:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78724 :: CALL :: call :: Z :: v74 = v65.equals(#(HETATM))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78729 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 402::CD,78730:CD,78735:CD,78740:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78730 :: CALL :: call :: V :: p0 $this .pdb_ATOM_Handler(v46)::CL,90241
78735 :: CALL :: call :: Z :: v77 = v65.equals(#(MODEL))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78741 :: CALL :: call :: V :: p0 $this .pdb_MODEL_Handler(v46)::CL,91704
78740 :: PRED :: IF :: Z :: if (v77 == #(0)) goto 420::CD,78741:CD,78746:CD,78751:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78847:JM,78943:JM,78718:JM,78814
78746 :: CALL :: call :: Z :: v80 = v65.equals(#(HEADER))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78751 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 438::CD,78752:CD,78757:CD,78762:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78752 :: CALL :: call :: V :: p0 $this .pdb_HEADER_Handler(v46)::CL,91820
78757 :: CALL :: call :: Z :: v83 = v65.equals(#(AUTHOR))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78763 :: CALL :: call :: V :: p0 $this .pdb_AUTHOR_Handler(v46)::CL,92076
78762 :: PRED :: IF :: Z :: if (v83 == #(0)) goto 456::CD,78763:CD,78768:CD,78773:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78768 :: CALL :: call :: Z :: v86 = v65.equals(#(TITLE))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78773 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 474::CD,78774:CD,78779:CD,78784:JM,78913:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78774 :: CALL :: call :: V :: p0 $this .pdb_TITLE_Handler(v46)::CL,92147
78779 :: CALL :: call :: Z :: v89 = v65.equals(#(SOURCE))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78785 :: EXPR :: reference :: Ljava/util/List :: v157 = p0 $this .sourceLines::
78784 :: PRED :: IF :: Z :: if (v89 == #(0)) goto 498::CD,78788:CD,78794:CD,78799:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78788 :: CALL :: call :: Z :: v159 = v157.add(v46)::JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78794 :: CALL :: call :: Z :: v92 = v65.equals(#(COMPND))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78799 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 522::CD,78803:CD,78809:CD,78814:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718
78800 :: EXPR :: reference :: Ljava/util/List :: v160 = p0 $this .compndLines::
78803 :: CALL :: call :: Z :: v162 = v160.add(v46)::JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78809 :: CALL :: call :: Z :: v95 = v65.equals(#(JRNL))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78815 :: CALL :: call :: V :: p0 $this .pdb_JRNL_Handler(v46)::CL,92297
78814 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 540::CD,78815:CD,78820:CD,78825:JM,78913:JM,78784:JM,78880:JM,78729:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78820 :: CALL :: call :: Z :: v98 = v65.equals(#(EXPDTA))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78825 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 558::CD,78826:CD,78831:CD,78836:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78826 :: CALL :: call :: V :: p0 $this .pdb_EXPDTA_Handler(v46)::CL,92382
78831 :: CALL :: call :: Z :: v101 = v65.equals(#(CRYST1))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78837 :: CALL :: call :: V :: p0 $this .pdb_CRYST1_Handler(v46)::CL,92461
78836 :: PRED :: IF :: Z :: if (v101 == #(0)) goto 576::CD,78837:CD,78842:CD,78847:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78943:JM,78718:JM,78814
78842 :: CALL :: call :: Z :: v104 = v65.startsWith(#(MTRIX))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78847 :: PRED :: IF :: Z :: if (v104 == #(0)) goto 594::CD,78848:CD,78853:CD,78858:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78848 :: CALL :: call :: V :: p0 $this .pdb_MTRIXn_Handler(v46)::CL,92815
78853 :: CALL :: call :: Z :: v107 = v65.equals(#(REMARK))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78859 :: CALL :: call :: V :: p0 $this .pdb_REMARK_Handler(v46)::CL,93169
78858 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 612::CD,78859:CD,78864:CD,78869:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78864 :: CALL :: call :: Z :: v110 = v65.equals(#(CONECT))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78869 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 630::CD,78870:CD,78875:CD,78880:JM,78913:JM,78784:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78870 :: CALL :: call :: V :: p0 $this .pdb_CONECT_Handler(v46)::CL,93494
78875 :: CALL :: call :: Z :: v113 = v65.equals(#(REVDAT))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78881 :: CALL :: call :: V :: p0 $this .pdb_REVDAT_Handler(v46)::CL,93857
78880 :: PRED :: IF :: Z :: if (v113 == #(0)) goto 648::CD,78881:CD,78886:CD,78891:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78886 :: CALL :: call :: Z :: v116 = v65.equals(#(DBREF))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78891 :: PRED :: IF :: Z :: if (v116 == #(0)) goto 666::CD,78892:CD,78897:CD,78902:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78892 :: CALL :: call :: V :: p0 $this .pdb_DBREF_Handler(v46)::CL,93952
78897 :: CALL :: call :: Z :: v119 = v65.equals(#(SITE))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78903 :: CALL :: call :: V :: p0 $this .pdb_SITE_Handler(v46)::CL,94277
78902 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 684::CD,78903:CD,78908:CD,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78908 :: CALL :: call :: Z :: v122 = v65.equals(#(SSBOND))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78913 :: PRED :: IF :: Z :: if (v122 == #(0)) goto 702::CD,78914:CD,78919:CD,78924:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78914 :: CALL :: call :: V :: p0 $this .pdb_SSBOND_Handler(v46)::CL,94881
78919 :: CALL :: call :: Z :: v125 = v65.equals(#(LINK))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78925 :: CALL :: call :: V :: p0 $this .pdb_LINK_Handler(v46)::CL,95181
78924 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 717::CD,78925:CD,78933:CD,78937
78933 :: CALL :: call :: Z :: v128 = v126.isParseSecStruc()::JM,78937:CL,95437
78937 :: PRED :: IF :: Z :: if (v128 == #(0)) goto 778::CD,78938:CD,78943:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78718:JM,78814:JM,78659:JM,78665:JM,78638:JM,78646:JM,78653:JM,78974
78938 :: CALL :: call :: Z :: v131 = v65.equals(#(HELIX))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78943 :: PRED :: IF :: Z :: if (v131 == #(0)) goto 748::CD,78944:CD,78949:CD,78954:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78944 :: CALL :: call :: V :: p0 $this .pdb_HELIX_Handler(v46)::CL,95446
78949 :: CALL :: call :: Z :: v134 = v65.equals(#(SHEET))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78955 :: CALL :: call :: V :: p0 $this .pdb_SHEET_Handler(v46)::CL,95672
78954 :: PRED :: IF :: Z :: if (v134 == #(0)) goto 766::CD,78955:CD,78960:CD,78965:JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78960 :: CALL :: call :: Z :: v137 = v65.equals(#(TURN))::JM,78913:JM,78784:JM,78880:JM,78729:JM,78825:JM,78891:JM,78762:JM,78858:JM,78954:JM,78924:JM,78799:JM,78707:JM,78773:JM,78869:JM,78965:JM,78740:JM,78836:JM,78902:JM,78751:JM,78847:JM,78943:JM,78718:JM,78814
78965 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 778::CD,78966:JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78966 :: CALL :: call :: V :: p0 $this .pdb_TURN_Handler(v46)::CL,95898
78970 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $buf .readLine()::JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78638:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78974 :: PRED :: IF :: Z :: if (v46 != #(null)) goto 248::CD,78633:CD,78638:CD,78970:JM,78913:JM,78784:JM,78659:JM,78665:JM,78729:JM,78858:JM,78924:JM,78799:JM,78869:JM,78740:JM,78751:JM,78943:JM,78814:JM,78880:JM,78825:JM,78891:JM,78762:JM,78954:JM,78707:JM,78773:JM,78965:JM,78836:JM,78646:JM,78902:JM,78653:JM,78847:JM,78974:JM,78718
78981 :: CALL :: call :: V :: p0 $this .makeCompounds(v177, v178)::CL,96124
78986 :: CALL :: call :: V :: p0 $this .triggerEndFileChecks()::CL,96260
78992 :: CALL :: call :: Z :: v183 = v181.shouldCreateAtomBonds()::JM,78996:CL,72812
78997 :: CALL :: call :: V :: p0 $this .formBonds()::CL,96727
78996 :: PRED :: IF :: Z :: if (v183 == #(0)) goto 817::CD,78997
79003 :: CALL :: call :: Z :: v187 = v185.shouldCreateAtomCharges()::JM,79007:CL,72855
79007 :: PRED :: IF :: Z :: if (v187 == #(0)) goto 831::CD,79008
79008 :: CALL :: call :: V :: p0 $this .addCharges()::CL,96791
79014 :: CALL :: call :: Z :: v191 = v189.isParseSecStruc()::JM,79018:CL,95437
79018 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 855::CD,79022:CD,79026
79022 :: CALL :: call :: Z :: v194 = v192.isHeaderOnly()::JM,79026:CL,71478
79027 :: CALL :: call :: V :: p0 $this .setSecStruc()::CL,96803
79026 :: PRED :: IF :: Z :: if (v194 != #(0)) goto 855::CD,79027
79281 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache,org.biojava.nbio.structure.quaternary.io.BioUnitDataProvider)::JM,65561
79280 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureIO.getBiologicalAssembly(java.lang.String,int,org.biojava.nbio.structure.align.util.AtomCache,org.biojava.nbio.structure.quaternary.io.BioUnitDataProvider)::CE,79281:CD,79287:CD,79291:CD,79296:JM,79322
79287 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $pdbId .toLowerCase()::JM,79291:JM,79322
79291 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v9 = p4 $provider .getAsymUnit(v7)::JM,79291:JM,79322
79296 :: PRED :: IF :: Z :: if (p2 $biolAssemblyNr  != #(0)) goto 52::CD,79322:CD,79433:CD,79439
79322 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v9::DD,79281
79433 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v36 = v33.rebuildQuaternaryStructure(v9, v29)::JM,79439:CL,96916
79439 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v36::DD,79281
79469 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.getChain(int)::
79468 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChain(int)::CE,79469:CD,79473:CD,79479
79473 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .getChain(#(0), p1 $number )::JM,79479:CL,48292
79479 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,79469
79485 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::CE,79486:CD,79489:CD,79493:CD,79518:CD,79522
79486 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isChainPureNonPolymer(org.biojava.nbio.structure.Chain)::JM,65687:JM,66808
79489 :: CALL :: call :: Ljava/util/List :: v4 = p1 $c .getAtomGroups()::JM,79522:CL,48461
79493 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,79522
79498 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,79522
79503 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v14 = v12.getType()::JM,79509:CL,97141:CL,97149:CL,97133
79507 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v15 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,79509
79509 :: PRED :: IF :: Z :: if (v14 == v15) goto 50::CD,79510:CD,79514:CD,79516:CD,79517
79510 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v17 = v12.getType()::JM,79516:CL,97141:CL,97149:CL,97133
79514 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v18 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,79516
79517 :: NORM :: compound :: Z :: return #(0)::DD,79486
79516 :: PRED :: IF :: Z :: if (v17 != v18) goto 52::CD,79517:CD,79518:CD,79522
79518 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,79522
79523 :: NORM :: compound :: Z :: return #(1)::DD,79486
79522 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 16::CD,79498:CD,79503:CD,79507:CD,79509:CD,79523:JM,79522
79537 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getChains()::JM,65723:JM,66834:JM,101617:JM,101770:JM,101977:JM,102123:JM,107807:JM,107943
79536 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getChains()::CE,79537:CD,79540:CD,79545
79540 :: CALL :: call :: Ljava/util/List :: v5 = p0 $this .getModel(#(0))::JM,79545:CL,48170
79545 :: NORM :: compound :: Ljava/util/List :: return v5::DD,79537
79549 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::JM,126456:JM,126460:JM,126465:JM,126461
79548 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getFullAtomSequence(java.util.List,java.util.Map,boolean)::CE,79549:CD,79554:CD,79765:CD,79769:CD,79770:CD,79774:CD,79782:CD,79783:JM,79564:JM,79689
79554 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v5 = new java.lang.StringBuffer::JM,79774
79559 :: CALL :: call :: Ljava/lang/Object :: v11 = p1 $groups .get(v111)::JM,79769:JM,79564
79565 :: EXPR :: assign :: Z :: v13=v12 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,79566
79564 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,79565
79566 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 100::CD,79568:CD,79572:CD,79576:CD,79577:CD,79581:CD,79585:CD,79591:CD,79596:CD,79598:CD,79602:CD,79775:CD,79780:CD,79781
79568 :: CALL :: call :: Ljava/lang/Character :: v16 = v14.getAminoType()::JM,79576:JM,79775:CL,97157
79572 :: CALL :: call :: C :: v18 = v16.charValue()::JM,79576:JM,79775
79577 :: CALL :: call :: Ljava/lang/Integer :: v23 = valueOf(v110)::
79576 :: PRED :: IF :: Z :: if (v18 != #(63)) goto 71::CF,79775
79581 :: CALL :: call :: Ljava/lang/Integer :: v25 = valueOf(v111)::
79585 :: CALL :: call :: Ljava/lang/Object :: v27 = p2 $positionIndex .put(v23, v25)::
79591 :: CALL :: call :: Ljava/lang/StringBuffer :: v29 = v5.append(v21)::
79596 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v110 + #(1)::DD,79780
79598 :: CALL :: call :: Z :: v33 = v12.isWater()::JM,79602:CL,97166
79602 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 113::CD,79604:CD,79608:CD,79780:CD,79781
79604 :: CALL :: call :: I :: v35 = v12.size()::JM,79608:CL,97183
79609 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v37 = v12.getAtom(#(0))::JM,79614:CL,97196
79608 :: PRED :: IF :: Z :: if (v35 != #(1)) goto 158::CD,79609:CD,79614:CD,79626:CD,79630
79614 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 142::CD,79620:CD,79624:CD,79780:CD,79781
79620 :: CALL :: call :: Z :: v42 = v40.isMetal()::JM,79624:CL,97237
79624 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 158::CD,79626:CD,79630:CD,79780:CD,79781
79626 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = v12.getChemComp()::JM,79630:CL,89812
79630 :: PRED :: IF :: Z :: if (v44 != #(null)) goto 189::CD,79633:CD,79643:CD,79645:CD,79649:CD,79654:CD,79780:CD,79781
79633 :: CALL :: call :: Ljava/lang/String :: v48 = v12.toString()::CL,97440:CL,97538:CL,97250
79643 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v50 = org.biojava.nbio.structure.io.mmcif.chem.ResidueType.lPeptideLinking::JM,79649:JM,79654
79645 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v52 = v44.getResidueType()::JM,79649:JM,79654:CL,97677
79649 :: CALL :: call :: Z :: v54 = v50.equals(v52)::JM,79649:JM,79654
79654 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 237::CD,79661:CD,79666:CD,79679:CD,79683:CD,79688:CD,79703:CD,79707:CD,79747:CD,79751:CD,79776:CD,79777:CD,79778:CD,79779:CD,79780:CD,79781
79661 :: CALL :: call :: Z :: v59 = v55.contains(v57)::JM,79666
79666 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 237::CD,79673:CD,79678:CD,79679:CD,79683:CD,79688:CD,79703:CD,79707:CD,79747:CD,79751:CD,79776:CD,79777:CD,79778:CD,79779:CD,79780:CD,79781
79673 :: CALL :: call :: Z :: v64 = v60.contains(v62)::JM,79678
79679 :: CALL :: call :: Ljava/lang/String :: v66 = v44.getOne_letter_code()::JM,79776:JM,79688:CL,97695
79678 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 367::CD,79679:CD,79683:CD,79688:CD,79703:CD,79707:CD,79747:CD,79751:CD,79755:CD,79776:CD,79777:CD,79778:CD,79779:CD,79780:CD,79781
79683 :: CALL :: call :: Z :: v69 = v66.equals(#(?))::JM,79776:JM,79688
79689 :: PRED :: IF :: Z :: if (p3 $isNucleotideChain  == #(0)) goto 288::CD,79696:CD,79701:CD,79776
79688 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 288::CF,79776:CD,79689
79696 :: CALL :: call :: Z :: v74 = v70.contains(v72)::JM,79701
79701 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 288::CD,79776
79703 :: CALL :: call :: I :: v79 = v77.length()::JM,79707
79707 :: PRED :: IF :: Z :: if (v79 <= #(1)) goto 316::CD,79710
79710 :: CALL :: call :: Ljava/lang/String :: v83 = v12.toString()::CL,97440:CL,97538:CL,97250
79721 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v99)::
79725 :: CALL :: call :: Ljava/lang/Integer :: v90 = valueOf(v112)::
79729 :: CALL :: call :: Ljava/lang/Object :: v92 = p2 $positionIndex .put(v88, v90)::
79735 :: CALL :: call :: C :: v94 = v77.charAt(v100)::
79740 :: CALL :: call :: Ljava/lang/StringBuffer :: v96 = v5.append(v94)::
79745 :: EXPR :: assign :: Ljava/lang/Object :: v97 = v99 + #(1)::DD,79777:CF,79746
79747 :: CALL :: call :: I :: v86 = v77.length()::JM,79751
79746 :: EXPR :: assign :: Ljava/lang/Object :: v98 = v100 + #(1)::DD,79779:CF,79777
79751 :: PRED :: IF :: Z :: if (v100 < v86) goto 322::CD,79721:CD,79725:CD,79729:CD,79735:CD,79740:CD,79745:CD,79746:CD,79747:CD,79777:CD,79778:CD,79779
79755 :: CALL :: call :: Ljava/lang/String :: v104 = v12.toString()::CL,97440:CL,97538:CL,97250
79765 :: CALL :: call :: I :: v9 = p1 $groups .size()::JM,79769:JM,79564
79764 :: EXPR :: assign :: Ljava/lang/Object :: v109 = v113 + #(1)::DD,79783:CF,79782
79769 :: PRED :: IF :: Z :: if (v111 < v9) goto 20::CD,79559:CD,79564:CD,79565:CD,79566:CD,79764:CD,79765:CD,79780:CD,79781:CD,79782:CD,79783:JM,79769:JM,79774
79770 :: CALL :: call :: Ljava/lang/String :: v115 = v5.toString()::JM,79774
79775 :: EXPR :: assign :: null :: PHI v21 = v18, #(88)::
79774 :: NORM :: compound :: Ljava/lang/String :: return v115::DD,79549
79777 :: EXPR :: assign :: null :: PHI v99 = v110, v97::CF,79778:DD,79745:DD,79780
79776 :: EXPR :: assign :: null :: PHI v77 = v66, #(N), #(X)::JM,79707:JM,79751
79779 :: EXPR :: assign :: null :: PHI v100 = #(0), v98::DD,79746:DD,79751
79778 :: EXPR :: assign :: null :: PHI v112 = v111, v112::CF,79779:DD,79778:DD,79781
79781 :: EXPR :: assign :: null :: PHI v113 = v111, v111, v111, v111, v111, v112, v111::DD,79764
79780 :: EXPR :: assign :: null :: PHI v106 = v31, v110, v110, v110, v110, v99, v110::CF,79781:DD,79782
79783 :: EXPR :: assign :: null :: PHI v111 = #(0), v109::JM,79564:DD,79769:DD,79778:DD,79781
79782 :: EXPR :: assign :: null :: PHI v110 = #(0), v106::CF,79783:DD,79596:DD,79777:DD,79780
79879 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::CF,79880:CF,79890:CD,79891
79880 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isProteinSequence(java.lang.String)::JM,65807:JM,65813
79891 :: NORM :: compound :: Z :: return #(1)::CF,79880
79890 :: NORM :: compound :: Z :: return #(0)::CF,79880
79895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::CF,79896:CF,79913:CD,79900:CD,79905
79896 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: org.biojava.nbio.structure.io.CompoundFinder.getProteinSequence(java.lang.String)::JM,65824:JM,66409:JM,65828:JM,66410
79900 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v4 = new org.biojava.nbio.core.sequence.ProteinSequence::DD,79905
79905 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return v4::CF,79896
79913 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: return #(null)::CF,79896
79921 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::JM,66411
79920 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignProtein(org.biojava.nbio.core.sequence.ProteinSequence,org.biojava.nbio.core.sequence.ProteinSequence)::CF,79921:CD,79926:CD,79929:CD,79935:CD,79936:CD,79944:CD,79948
79926 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getIdentity()::JM,79936:JM,79944:JM,79948
79929 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,79936:JM,79944:JM,79948
79935 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,79936:JM,79944:JM,79948:JM,79926
79936 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,79936:JM,79926:JM,79944:JM,79948
79944 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,79936:JM,79944:JM,79948
79948 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,79921
79961 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::JM,65844:JM,65850
79960 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isDNASequence(java.lang.String)::CF,79961:CF,79971:CD,79972
79971 :: NORM :: compound :: Z :: return #(0)::CF,79961
79972 :: NORM :: compound :: Z :: return #(1)::CF,79961
79977 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/DNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::JM,65861:JM,66409:JM,65865:JM,66410
79976 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getDNASequence(java.lang.String)::CF,79977:CF,79994:CD,79981:CD,79986
79981 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v4 = new org.biojava.nbio.core.sequence.DNASequence::DD,79986
79986 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return v4::CF,79977
79994 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/DNASequence :: return #(null)::CF,79977
80001 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::CF,80002:CD,80007:CD,80010:CD,80016:CD,80017:CD,80025:CD,80029
80002 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignDNA(org.biojava.nbio.core.sequence.DNASequence,org.biojava.nbio.core.sequence.DNASequence)::JM,66411
80007 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,80017:JM,80025:JM,80029
80010 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,80017:JM,80025:JM,80029
80017 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,80017:JM,80007:JM,80025:JM,80029
80016 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,80017:JM,80025:JM,80029:JM,80007
80025 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,80017:JM,80025:JM,80029
80029 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,80002
80041 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::CF,80042:CF,80052:CD,80053
80042 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.CompoundFinder.isRNASequence(java.lang.String)::JM,65881:JM,65887
80053 :: NORM :: compound :: Z :: return #(1)::CF,80042
80052 :: NORM :: compound :: Z :: return #(0)::CF,80042
80057 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::CF,80058:CF,80075:CD,80062:CD,80067
80058 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/RNASequence :: org.biojava.nbio.structure.io.CompoundFinder.getRNASequence(java.lang.String)::JM,66409:JM,65898:JM,66410:JM,65902
80062 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v4 = new org.biojava.nbio.core.sequence.RNASequence::DD,80067
80067 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return v4::CF,80058
80075 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/RNASequence :: return #(null)::CF,80058
80083 :: EXIT :: exit :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::JM,66411
80082 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.alignRNA(org.biojava.nbio.core.sequence.RNASequence,org.biojava.nbio.core.sequence.RNASequence)::CF,80083:CD,80088:CD,80091:CD,80097:CD,80098:CD,80106:CD,80110
80088 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v6 = getNuc4_4()::JM,80098:JM,80106:JM,80110
80091 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v7 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,80098:JM,80106:JM,80110
80097 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v11 = GLOBAL::JM,80098:JM,80106:JM,80110:JM,80088
80098 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v13 = getPairwiseAligner(p1 $s1 , p2 $s2 , v11, v7, v6)::JM,80098:JM,80088:JM,80106:JM,80110
80106 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v15 = v13.getPair()::JM,80098:JM,80106:JM,80110
80110 :: NORM :: compound :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: return v15::CF,80083
80123 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,65936
80122 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGaps(org.biojava.nbio.core.alignment.template.SequencePair)::JM,80132:JM,80127:CF,80123:CD,80135:CD,80139:CD,80140:CD,80142:CD,80143
80127 :: CALL :: call :: Z :: v8 = p1 $pair .hasGap(v13)::JM,80132:JM,80135:JM,80139:JM,80127
80133 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v12 + #(1)::DD,80141
80132 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 20::CF,80141:CD,80133
80135 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,80132:JM,80135:JM,80139:JM,80127
80134 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v13 + #(1)::DD,80143:CF,80142
80139 :: PRED :: IF :: Z :: if (v13 <= v6) goto 9::CD,80127:CD,80132:CD,80134:CD,80135:CD,80141:CD,80142:CD,80143:JM,80139:CF,80140
80141 :: EXPR :: assign :: null :: PHI v10 = v12, v9::DD,80142:CF,80134
80140 :: NORM :: compound :: I :: return v12::CF,80123
80143 :: EXPR :: assign :: null :: PHI v13 = #(1), v11::JM,80132:JM,80135:JM,80127:DD,80134:DD,80139
80142 :: EXPR :: assign :: null :: PHI v12 = #(0), v10::CF,80143:DD,80133:DD,80140:DD,80141
80159 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,65944
80158 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsQuery(org.biojava.nbio.core.alignment.template.SequencePair)::JM,80163:JM,80168:CF,80159:CD,80181:CD,80185:CD,80186:CD,80188:CD,80189
80163 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInQueryAt(v19)::JM,80163:JM,80181:JM,80185:JM,80168
80169 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,80178:JM,80169:JM,80173
80168 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,80178:JM,80169:JM,80173
80173 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,80178:JM,80173
80179 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,80187
80178 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,80187:CD,80179
80181 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,80163:JM,80181:JM,80185:JM,80168
80180 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,80189:CF,80188
80185 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,80163:CD,80168:CD,80169:CD,80173:CD,80178:CD,80180:CD,80181:CD,80187:CD,80188:CD,80189:JM,80185:CF,80186
80187 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,80188:CF,80180
80186 :: NORM :: compound :: I :: return v18::CF,80159
80189 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,80163:JM,80181:JM,80168:DD,80180:DD,80185
80188 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,80189:DD,80179:DD,80186:DD,80187
80205 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,80210:JM,80215:CF,80206:CD,80228:CD,80232:CD,80233:CD,80235:CD,80236
80206 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.CompoundFinder.getNumGapsTarget(org.biojava.nbio.core.alignment.template.SequencePair)::JM,65947
80210 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v8 = p1 $pair .getCompoundInTargetAt(v19)::JM,80210:JM,80228:JM,80215:JM,80232
80215 :: EXPR :: assign :: Ljava/lang/Object :: v9 = CHECKCAST v8::JM,80225:JM,80216:JM,80220
80216 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getShortName()::JM,80225:JM,80216:JM,80220
80220 :: CALL :: call :: Z :: v14 = v11.equals(#(-))::JM,80225:JM,80220
80225 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CF,80234:CD,80226
80227 :: EXPR :: assign :: Ljava/lang/Object :: v17 = v19 + #(1)::DD,80236:CF,80235
80226 :: EXPR :: assign :: Ljava/lang/Object :: v15 = v18 + #(1)::DD,80234
80228 :: CALL :: call :: I :: v6 = p1 $pair .getLength()::JM,80210:JM,80228:JM,80215:JM,80232
80233 :: NORM :: compound :: I :: return v18::CF,80206
80232 :: PRED :: IF :: Z :: if (v19 <= v6) goto 9::CD,80210:CD,80215:CD,80216:CD,80220:CD,80225:CD,80227:CD,80228:CD,80234:CD,80235:CD,80236:JM,80232:CF,80233
80235 :: EXPR :: assign :: null :: PHI v18 = #(0), v16::CF,80236:DD,80226:DD,80233:DD,80234
80234 :: EXPR :: assign :: null :: PHI v16 = v18, v15::DD,80235:CF,80227
80236 :: EXPR :: assign :: null :: PHI v19 = #(1), v17::JM,80210:JM,80228:JM,80215:DD,80227:DD,80232
80259 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = #(null)::
80262 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #(null)::
80265 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = #(null)::
80268 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = #(null)::
80271 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = #(null)::
80274 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = #(null)::
80277 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = #(null)::
80280 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = #(null)::
80283 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .numRes = #(null)::
80286 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .resNames = #(null)::
80289 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .headerVars = #(null)::
80292 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = #(null)::
80295 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = #(null)::
80298 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = #(null)::
80301 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = #(null)::
80304 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = #(null)::
80307 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = #(null)::
80310 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = #(null)::
80313 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = #(null)::
80316 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = #(null)::
80319 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = #(null)::
80322 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = #(null)::
80325 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = #(null)::
80328 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = #(null)::
80331 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = #(null)::
80334 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = #(null)::
80337 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = #(null)::
80340 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = #(null)::
80343 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = #(null)::
80346 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = #(null)::
80349 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = #(null)::
80352 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = #(null)::
80355 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = #(null)::
80358 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = #(null)::
80361 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = #(null)::
80364 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = #(null)::
80367 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = #(null)::
80370 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = #(null)::
80373 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = #(null)::
80376 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = #(null)::
80379 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = #(null)::
80382 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = #(null)::
80385 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = #(null)::
80388 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,80392
80392 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = v5::
80395 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,80399
80399 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .chains2pdbResNums2ResSerials = v7::
80402 :: EXPR :: modify :: I :: p0 $this .molId = #(-1)::
80499 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.addChain(org.biojava.nbio.structure.Chain)::CD,80507
80504 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .chains::
80507 :: CALL :: call :: Z :: v6 = v4.add(p1 $chain )::
80516 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolId(int)::JM,80521
80521 :: EXPR :: modify :: I :: p0 $this .molId = p1 $molId ::
80551 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.areResNumbersAligned(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,80556:CD,80560:CD,80564:CD,80664
80556 :: CALL :: call :: Z :: v5 = isProtein(p1 $c1 )::JM,80564:JM,80566:CL,97704
80560 :: CALL :: call :: Z :: v7 = isProtein(p2 $c2 )::JM,80564:CL,97704
80564 :: PRED :: IF :: Z :: if (v5 == v7) goto 21::CD,80566:CD,80582:CD,80665:CD,80669:CD,80734:CD,80735
80566 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 39::CD,80569:CD,80577:CD,80734
80569 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c1 .getAtomGroups(v13)::JM,80734:CL,97721
80577 :: CALL :: call :: Ljava/util/List :: v12 = p1 $c1 .getAtomGroups(v10)::JM,80734:CL,97721
80582 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,80669
80587 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,80669
80596 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v27 = p2 $c2 .getGroupByPDB(v25)::CL,86717
80601 :: CALL :: call :: Ljava/lang/String :: v29 = v27.getPDBName()::JM,80614:CL,56427
80605 :: CALL :: call :: Ljava/lang/String :: v31 = v23.getPDBName()::JM,80614:CL,56427
80609 :: CALL :: call :: Z :: v33 = v29.equals(v31)::JM,80614
80614 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 182::CF,80735:CD,80665:CD,80669
80665 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,80669
80664 :: EXPR :: assign :: Ljava/lang/Object :: v54 = v56 + #(1)::DD,80735
80669 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 66::CD,80587:CD,80596:CD,80601:CD,80605:CD,80609:CD,80614:CD,80670:CD,80671:CD,80675:CD,80676:CD,80677:CD,80678:CD,80735:JM,80669
80671 :: CALL :: call :: I :: v59 = v16.size()::JM,80675
80670 :: EXPR :: assign :: D :: v57 = CONVERT I to D v56::DD,80676:JM,80675
80675 :: EXPR :: assign :: D :: v60 = CONVERT I to D v59::CF,80676
80677 :: EXPR :: assign :: Z :: v63 = v61 < #(0.5 d)::DD,80678
80676 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v57 / v60::DD,80677
80678 :: PRED :: IF :: Z :: if (v63 <= #(0)) goto 274::CD,80682
80682 :: CALL :: call :: Ljava/lang/Double :: v68 = valueOf(#(0.5 d))::JM,80682
80735 :: EXPR :: assign :: null :: PHI v56 = #(0), v56, v54::JM,80669:DD,80664:DD,80670:DD,80735
80734 :: EXPR :: assign :: null :: PHI v16 = v15, v12::JM,80669:JM,80675
80877 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.getMolId()::CE,80878:CD,80884
80878 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Compound.getMolId()::JM,85170:JM,109392:JM,109424
80881 :: EXPR :: reference :: I :: v3 = p0 $this .molId::DD,80884
80884 :: NORM :: compound :: I :: return v3::CF,80878
80919 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::CE,80920:CD,80925:CD,80930
80920 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(java.lang.Object)::
80925 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,80930:CL,97859
80930 :: NORM :: compound :: I :: return v6::CF,80920
80933 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::CE,80934:CD,80939:CD,80944
80934 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(java.lang.Object)::
80939 :: CALL :: call :: I :: v6 = p0 $null .compareTo(v4)::JM,80944:CL,98073
80944 :: NORM :: compound :: I :: return v6::DD,80934
81552 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.setCacheLocation(java.lang.String)::CD,81557:CD,81559:CD,81564:CD,81589
81557 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,81589:JM,81564
81559 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,81589:JM,81564
81565 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,81589
81564 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,81589:CF,81565:CD,81566:CD,81574:CD,81576:CD,81581
81566 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
81574 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.cath.CathInstallation.FILESPLIT::JM,81589
81576 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::JM,81589
81581 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::JM,81589
81585 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cacheLocation = v17::
81589 :: EXPR :: assign :: null :: PHI v17 = p1 $cacheLocation , v16::DD,81585
81597 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::CE,81598:CD,81610:CD,81615
81598 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathInstallation.buildFileName(java.lang.String)::
81610 :: CALL :: call :: Ljava/lang/String :: v9 = format(p1 $fileNameTemplate , v5)::JM,81615
81615 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,81598
81653 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::CE,81654:CD,81657:CD,81661:CD,81666:CD,81667:CD,81671:CD,81677
81654 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.FileDownloadUtils.getFileExtension(java.io.File)::
81657 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $f .getName()::JM,81667:JM,81666:JM,81671:JM,81661:JM,81677
81661 :: CALL :: call :: I :: v8 = v4.lastIndexOf(#(.))::JM,81667:JM,81666:JM,81671:JM,81661:JM,81677
81667 :: CALL :: call :: I :: v12 = v4.length()::JM,81667:JM,81666:JM,81671:JM,81661:JM,81677
81666 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v8 + #(1)::JM,81666:JM,81671:JM,81661:JM,81677:JM,81667
81671 :: CALL :: call :: Ljava/lang/String :: v14 = v4.substring(v10, v12)::JM,81667:JM,81666:JM,81671:JM,81661:JM,81677
81677 :: NORM :: compound :: Ljava/lang/String :: return v14::CF,81654
81706 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.copy(java.io.File,java.io.File)::
81896 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.setCATH(java.lang.String)::CD,81901:CD,81910:CD,81914:CD,81926:CD,81930:CD,81942:CD,81946:CD,81958
81901 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $cathCode .split(#([.]))::
81906 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(0)]::
81910 :: CALL :: call :: I :: v10 = parseInt(v8)::
81914 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
81922 :: EXPR :: reference :: Ljava/lang/Object :: v15 = v6[#(1)]::
81926 :: CALL :: call :: I :: v17 = parseInt(v15)::
81930 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
81938 :: EXPR :: reference :: Ljava/lang/Object :: v22 = v6[#(2)]::
81942 :: CALL :: call :: I :: v24 = parseInt(v22)::
81946 :: CALL :: call :: Ljava/lang/Integer :: v26 = valueOf(v24)::
81954 :: EXPR :: reference :: Ljava/lang/Object :: v29 = v6[#(3)]::
81958 :: CALL :: call :: I :: v31 = parseInt(v29)::
82127 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::CE,82128:CD,82131:CD,82135:CD,82141:CD,82152:CD,82158:CD,82163:CD,82188:CD,82193:CD,82197:CD,82198
82128 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.cath.CathDomain.getPdbIdAndChain()::
82131 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,82197
82132 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .domainName::
82135 :: CALL :: call :: Ljava/lang/String :: v8 = v4.substring(#(0), #(4))::
82141 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(v8)::
82149 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .domainName::JM,82163
82152 :: CALL :: call :: Ljava/lang/String :: v15 = v12.substring(#(4), #(5))::JM,82163
82158 :: CALL :: call :: Z :: v18 = v15.equals(#(0))::JM,82163
82163 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 65::CF,82164:CD,82172:CD,82178:CD,82183:CD,82198
82164 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::JM,82198
82169 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .domainName::JM,82198
82172 :: CALL :: call :: Ljava/lang/String :: v25 = v23.substring(#(4), #(5))::JM,82198
82178 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::JM,82198
82183 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::JM,82198
82188 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v3.append(v30)::JM,82197
82193 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::JM,82197
82197 :: NORM :: compound :: Ljava/lang/String :: return v34::DD,82128
82198 :: EXPR :: assign :: null :: PHI v30 = v29, #()::JM,82197
82214 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.getDomainListFileName()::CD,82218:CD,82222:CD,82230:CD,82235:CD,82240
82218 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
82222 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
82230 :: CALL :: call :: Ljava/lang/String :: v10 = p0 $this .buildFileName(#(cath-domain-list-v%s.txt))::CL,81597
82235 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v3.append(v10)::
82240 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::
82249 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathDomainList(java.io.BufferedReader)::CD,82327:CD,82331:JM,82260
82255 :: CALL :: call :: Z :: v9 = v5.startsWith(#(#))::JM,82260:JM,82331
82260 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 18::CD,82262:CD,82267:CD,82271:CD,82280:CD,82285:CD,82309:CD,82321:CD,82333
82262 :: CALL :: call :: Lorg/biojava/nbio/structure/cath/CathDomain :: v12 = p0 $this .parseCathListFileLine(v5)::CL,98486
82267 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getPdbIdAndChain()::CL,82127
82271 :: CALL :: call :: Ljava/lang/String :: v17 = v14.substring(#(0), #(4))::
82280 :: CALL :: call :: Z :: v20 = v18.containsKey(v17)::JM,82285
82285 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 66::CF,82296:CD,82289:CD,82294:CD,82303:CD,82333
82289 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v17)::JM,82294
82294 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,82333
82296 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,82333
82303 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.put(v17, v25)::
82309 :: CALL :: call :: Z :: v32 = v30.add(v12)::
82321 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.put(v35, v12)::
82327 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $bufferedReader .readLine()::JM,82260:JM,82331
82331 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 7::CD,82255:CD,82260:CD,82327:JM,82331
82333 :: EXPR :: assign :: null :: PHI v30 = v24, v25::
82449 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::CE,82450:CD,82469:CD,82473:CD,82477:CD,82501:CD,82520
82450 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ecod.EcodInstallation.domainsAvailable()::JM,70036
82469 :: CALL :: call :: Ljava/io/File :: v11 = p0 $this .getDomainFile()::CL,98727
82473 :: CALL :: call :: Z :: v13 = v11.exists()::JM,82477
82477 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 51::CD,82478:CD,82482:CD,82483:CD,82520
82478 :: CALL :: call :: J :: v16 = v11.length()::JM,82482
82483 :: PRED :: IF :: Z :: if (v26 <= #(0)) goto 51::CD,82520
82482 :: EXPR :: assign :: Z :: v26 = v16 == #(0 l)::DD,82483
82501 :: NORM :: compound :: Z :: return v28::DD,82450
82520 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,82501
82536 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.downloadDomains()::CD,82557:CD,82561:CD,82569:CD,82574:CD,82578:CD,82583:CD,82591:CD,82603:CD,82610:CD,82618:CD,82623:CD,82628:CD,82632:CD,82637
82557 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
82561 :: CALL :: call :: Ljava/lang/String :: v14 = valueOf(v12)::
82569 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v11.append(#(/ecod/distributions/))::
82574 :: CALL :: call :: Ljava/lang/String :: v20 = p0 $this .getDomainFilename()::CL,98749
82578 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v20)::
82583 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
82591 :: CALL :: call :: Ljava/io/File :: v27 = p0 $this .getDomainFile()::CL,98727
82603 :: CALL :: call :: V :: downloadFile(v10, v27)::CL,98772
82610 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
82615 :: EXPR :: reference :: Ljava/lang/String :: v37 = p0 $this .url::
82618 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v34.append(v37)::
82623 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(#(/ecod/distributions/))::
82628 :: CALL :: call :: Ljava/lang/String :: v43 = p0 $this .getDomainFilename()::CL,98749
82632 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
82637 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
82717 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.parseDomains()::CD,82738:JM,117840:JM,110121:CD,82746
82738 :: CALL :: call :: Ljava/io/File :: v12 = p0 $this .getDomainFile()::CL,98727
82746 :: CALL :: call :: Ljava/util/List :: v15 = v10.getDomains()::JM,82750:CL,98958
82750 :: EXPR :: modify :: Ljava/util/List :: p0 $this .allDomains = v15::
82844 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.addMirror(org.biojava.nbio.structure.scop.ScopMirror)::CD,82852
82849 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .mirrors::
82852 :: CALL :: call :: Z :: v6 = v4.add(p1 $scopURLs )::
82872 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.getClaFilename()::CD,82876:CD,82880:CD,82888:CD,82896:CD,82901
82876 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
82880 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(v4)::
82888 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v3.append(#(dir.cla.scop.txt_))::
82893 :: EXPR :: reference :: Ljava/lang/String :: v11 = p0 $this .scopVersion::
82896 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(v11)::
82901 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
82910 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.initScopURLs()::CD,82917:CD,82921
82914 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .mirrors::JM,82921
82917 :: CALL :: call :: Z :: v5 = v3.isEmpty()::JM,82921
82921 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 13::CF,82923:JM,99137:JM,99136:JM,99168:JM,99173:JM,99172:JM,99204:JM,99145:JM,99181:JM,99150:JM,99155:JM,99154:JM,99186:JM,99191:JM,99190:JM,99163:JM,99199:CD,82927:CD,82939:CD,82947
82923 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v7 = new org.biojava.nbio.structure.scop.ScopMirror::
82927 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopMirror :: v9 = new org.biojava.nbio.structure.scop.ScopMirror::
82936 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .mirrors::
82939 :: CALL :: call :: Z :: v18 = v16.add(v7)::
82944 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .mirrors::
82947 :: CALL :: call :: Z :: v21 = v19.add(v9)::
82970 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopMirror.getClaURL(java.lang.String)::CD,82983
82983 :: CALL :: call :: Ljava/lang/String :: v9 = format(v4, v6)::
82994 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getClaURL(java.lang.String)::CD,82999:CD,83003:CD,83011:CD,83017:CD,83022
82999 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
83003 :: CALL :: call :: Ljava/lang/String :: v7 = valueOf(v5)::
83011 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(#(cla), p1 $scopVersion )::CL,99234
83017 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v4.append(v11)::
83022 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
83032 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.downloadFileFromRemote(java.net.URL,java.io.File)::CD,83040:CD,83045:CD,83050:CD,83055:CD,83060:CD,83068
83040 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
83045 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(p1 $remoteURL )::
83050 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#( to: ))::
83055 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v13.append(p2 $localFile )::
83060 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
83068 :: CALL :: call :: V :: downloadFile(p1 $remoteURL , p2 $localFile )::CL,98772
83081 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.parseClassification(java.io.BufferedReader)::CD,83101:CD,83102:CD,83107:CD,83112:CD,83190:CD,83191:CD,83196:CD,83201:CD,83366:CD,83370:JM,83092
83087 :: CALL :: call :: Z :: v10 = v7.startsWith(#(#))::JM,83092:JM,83370
83092 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 24::CD,83094:CD,83142:CD,83146:CD,83154:CD,83166:CD,83183:CD,83214:CD,83219:CD,83227:CD,83232:CD,83240:CD,83245:CD,83253:CD,83258:CD,83266:CD,83271:CD,83279:CD,83284:CD,83292:CD,83297:CD,83332:CD,83337:CD,83361:CD,83383
83094 :: CALL :: call :: [Ljava/lang/String :: v14 = v7.split(#(	))::
83101 :: NORM :: declaration :: Ljava/io/IOException :: v119 = new java.io.IOException::
83102 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
83107 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v120.append(v7)::JM,83092:JM,83370
83112 :: CALL :: call :: Ljava/lang/String :: v126 = v124.toString()::
83138 :: EXPR :: reference :: Ljava/lang/Object :: v26 = v14[#(4)]::
83142 :: CALL :: call :: I :: v28 = parseInt(v26)::
83146 :: CALL :: call :: Ljava/lang/Integer :: v30 = valueOf(v28)::
83154 :: NORM :: declaration :: Lorg/biojava/nbio/structure/scop/ScopDomain :: v33 = new org.biojava.nbio.structure.scop.ScopDomain::
83166 :: CALL :: call :: Ljava/util/List :: v38 = p0 $this .extractRanges(v22)::CL,99404
83183 :: CALL :: call :: [Ljava/lang/String :: v44 = v32.split(#(,))::
83191 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
83190 :: NORM :: declaration :: Ljava/io/IOException :: v110 = new java.io.IOException::
83196 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v7)::JM,83092:JM,83370
83201 :: CALL :: call :: Ljava/lang/String :: v117 = v115.toString()::
83210 :: EXPR :: reference :: Ljava/lang/Object :: v47 = v44[#(0)]::
83214 :: CALL :: call :: Ljava/lang/String :: v49 = v47.substring(#(3))::
83219 :: CALL :: call :: I :: v51 = parseInt(v49)::
83223 :: EXPR :: reference :: Ljava/lang/Object :: v52 = v44[#(1)]::
83227 :: CALL :: call :: Ljava/lang/String :: v54 = v52.substring(#(3))::
83232 :: CALL :: call :: I :: v56 = parseInt(v54)::
83236 :: EXPR :: reference :: Ljava/lang/Object :: v57 = v44[#(2)]::
83240 :: CALL :: call :: Ljava/lang/String :: v59 = v57.substring(#(3))::
83245 :: CALL :: call :: I :: v61 = parseInt(v59)::
83249 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v44[#(3)]::
83253 :: CALL :: call :: Ljava/lang/String :: v64 = v62.substring(#(3))::
83258 :: CALL :: call :: I :: v66 = parseInt(v64)::
83262 :: EXPR :: reference :: Ljava/lang/Object :: v67 = v44[#(4)]::
83266 :: CALL :: call :: Ljava/lang/String :: v69 = v67.substring(#(3))::
83271 :: CALL :: call :: I :: v71 = parseInt(v69)::
83275 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v44[#(5)]::
83279 :: CALL :: call :: Ljava/lang/String :: v74 = v72.substring(#(3))::
83284 :: CALL :: call :: I :: v76 = parseInt(v74)::
83288 :: EXPR :: reference :: Ljava/lang/Object :: v77 = v44[#(6)]::
83292 :: CALL :: call :: Ljava/lang/String :: v79 = v77.substring(#(3))::
83297 :: CALL :: call :: I :: v81 = parseInt(v79)::
83332 :: CALL :: call :: Z :: v91 = v89.containsKey(v20)::JM,83337
83337 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 372::CF,83348:CD,83341:CD,83346:CD,83355:CD,83383
83341 :: CALL :: call :: Ljava/lang/Object :: v94 = v92.get(v20)::JM,83346
83346 :: EXPR :: assign :: Ljava/lang/Object :: v95 = CHECKCAST v94::DD,83383
83348 :: NORM :: declaration :: Ljava/util/ArrayList :: v96 = new java.util.ArrayList::DD,83383
83355 :: CALL :: call :: Ljava/lang/Object :: v100 = v98.put(v20, v96)::
83361 :: CALL :: call :: Z :: v103 = v101.add(v33)::
83366 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $buffer .readLine()::JM,83092:JM,83370
83370 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 11::CD,83087:CD,83092:CD,83366:JM,83370
83383 :: EXPR :: assign :: null :: PHI v101 = v95, v96::
84230 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String)::CD,84241:CD,84246:CD,84251:CD,84260:CD,84265:CD,84271:CD,84279:CD,84295
84241 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
84246 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v69.append(p1 $pdbId )::
84251 :: CALL :: call :: Ljava/lang/String :: v75 = v73.toString()::
84260 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getLocalFile(p1 $pdbId )::JM,84306:JM,84341:CL,100584
84265 :: CALL :: call :: [I :: v10 = $SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CL,100796
84268 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v11 = p0 $this .fetchBehavior::
84271 :: CALL :: call :: I :: v13 = v11.ordinal()::
84275 :: EXPR :: reference :: I :: v14 = v10[v13]::DD,84279
84279 :: PRED :: IF :: null :: switch v14::CD,84306:CD,84341:CD,84363:CD,84365
84295 :: CALL :: call :: Ljava/lang/String :: v66 = format(#(Structure %s not foun...), v62)::
84306 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,84311:CD,84315:CD,84363:CD,84365
84311 :: CALL :: call :: Z :: v28 = v26.isUpdateRemediatedFiles()::JM,84315:CL,100907
84315 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 175::CD,84316:CD,84320:CD,84322:CD,84323
84316 :: CALL :: call :: J :: v30 = v8.lastModified()::JM,84322
84320 :: EXPR :: reference :: J :: v31 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,84322
84323 :: PRED :: IF :: Z :: if (v32 >= #(0)) goto 175::CD,84363:CD,84365
84322 :: EXPR :: assign :: Z :: v32 = v30 == v31::DD,84323
84341 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 220::CD,84342:CD,84346:CD,84348:CD,84349:CD,84363:CD,84365
84342 :: CALL :: call :: J :: v17 = v8.lastModified()::JM,84348
84346 :: EXPR :: reference :: J :: v18 = org.biojava.nbio.structure.io.LocalPDBDirectory.LAST_REMEDIATION_DATE::CF,84348
84349 :: PRED :: IF :: Z :: if (v19 >= #(0)) goto 216::CD,84363:CD,84365
84348 :: EXPR :: assign :: Z :: v19 = v17 == v18::DD,84349
84360 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v39 = p0 $this .obsoleteBehavior::DD,84365
84363 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v40 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_CURRENT::CF,84365
84365 :: PRED :: IF :: Z :: if (v39 != v40) goto 253::CD,84366:CD,84374:CD,84386:CD,84388
84366 :: CALL :: call :: Ljava/lang/String :: v54 = getCurrent(p1 $pdbId )::CL,100946
84374 :: CALL :: call :: Ljava/io/File :: v58 = p0 $this .downloadStructure(v55, v56, #(0), v38)::CL,100981
84383 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v41 = p0 $this .obsoleteBehavior::DD,84388
84386 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v42 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,84388
84389 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = getStatus(p1 $pdbId )::JM,84395:CL,101192
84388 :: PRED :: IF :: Z :: if (v41 != v42) goto 287::CD,84389:CD,84393:CD,84395:CD,84411
84393 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v45 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::CF,84395
84395 :: PRED :: IF :: Z :: if (v44 != v45) goto 287::CD,84399:CD,84411
84399 :: CALL :: call :: Ljava/io/File :: v52 = p0 $this .downloadStructure(p1 $pdbId , v49, #(1), v38)::CL,100981
84411 :: CALL :: call :: Ljava/io/File :: v48 = p0 $this .downloadStructure(p1 $pdbId , v46, #(0), v38)::CL,100981
84494 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setSwissprotId(java.lang.String)::JM,84499
84499 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .swissprot_id = p1 $sp_id ::
84505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.clone()::CE,84506:CD,84509:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,84517:CD,84524:CD,84532:CD,84539:CD,84562:CD,84566:CD,84570:CD,84601:CD,84609
84506 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.clone()::JM,71665:JM,72476:JM,88361:JM,104018
84509 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v3 = new org.biojava.nbio.structure.HetatomImpl::DD,84609
84517 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,101245
84524 :: CALL :: call :: V :: v3.setResidueNumber(v8)::CL,85618
84532 :: CALL :: call :: V :: v3.setPDBName(v11)::CL,88185
84536 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .atoms::JM,84566
84539 :: CALL :: call :: Ljava/util/Iterator :: v15 = v13.iterator()::JM,84566
84544 :: CALL :: call :: Ljava/lang/Object :: v20 = v15.next()::JM,84566
84549 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.clone()::CL,101256
84554 :: CALL :: call :: V :: v3.addAtom(v24)::CL,88708
84558 :: CALL :: call :: V :: v24.setGroup(v3)::CL,101375
84562 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,84566
84567 :: EXPR :: reference :: Ljava/util/List :: v27 = p0 $this .altLocs::DD,84570
84566 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CD,84544:CD,84549:CD,84554:CD,84558:CD,84562:JM,84566
84571 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .altLocs::JM,84597
84570 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 146::CD,84574:CD,84593:CD,84597
84574 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,84597
84579 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,84597
84584 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.clone()::CL,84505:CL,84822:CL,84647
84589 :: CALL :: call :: V :: v3.addAltLoc(v39)::CL,101386
84593 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,84597
84597 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 110::CD,84579:CD,84584:CD,84589:CD,84593:JM,84597
84598 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v44 = p0 $this .chemComp::DD,84601
84601 :: PRED :: IF :: Z :: if (v44 == #(null)) goto 161::CD,84605:CF,84609
84605 :: CALL :: call :: V :: v3.setChemComp(v45)::CL,101418
84609 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,84506
84647 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.clone()::CE,84648:CD,84651:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,84659:CD,84667:CD,84675:CD,84683:CD,84690:CD,84697:CD,84720:CD,84724:CD,84725:CD,84729:CD,84770:CD,84778
84648 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.AminoAcidImpl.clone()::JM,71665:JM,72476:JM,88361:JM,104018
84651 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v3 = new org.biojava.nbio.structure.AminoAcidImpl::DD,84778
84659 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,101245
84667 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,85618
84675 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,88216
84683 :: CALL :: call :: V :: v3.setAminoType(v15)::CL,89936
84690 :: CALL :: call :: V :: v3.setRecordType(v17)::CL,89906
84694 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .atoms::JM,84724
84697 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,84724
84702 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,84724
84707 :: CALL :: call :: Ljava/lang/Object :: v29 = v27.clone()::CL,101256
84712 :: CALL :: call :: V :: v3.addAtom(v30)::CL,88708
84716 :: CALL :: call :: V :: v30.setGroup(v3)::CL,101375
84720 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,84724
84725 :: CALL :: call :: Ljava/util/List :: v34 = p0 $this .getAltLocs()::JM,84729:CL,56406
84724 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 62::CD,84702:CD,84707:CD,84712:CD,84716:CD,84720:JM,84724
84729 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 174::CD,84730:CD,84734:CD,84738
84730 :: CALL :: call :: Ljava/util/List :: v37 = p0 $this .getAltLocs()::JM,84738:CL,56406
84734 :: CALL :: call :: Z :: v39 = v37.isEmpty()::JM,84738
84739 :: CALL :: call :: Ljava/util/List :: v41 = p0 $this .getAltLocs()::JM,84766:CL,56406
84738 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 174::CD,84739:CD,84743:CD,84762:CD,84766
84743 :: CALL :: call :: Ljava/util/Iterator :: v43 = v41.iterator()::JM,84766
84748 :: CALL :: call :: Ljava/lang/Object :: v47 = v43.next()::JM,84766
84753 :: CALL :: call :: Ljava/lang/Object :: v50 = v48.clone()::CL,84505:CL,84822:CL,84647
84758 :: CALL :: call :: V :: v3.addAltLoc(v51)::CL,101386
84762 :: CALL :: call :: Z :: v45 = v43.hasNext()::JM,84766
84767 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v56 = p0 $this .chemComp::DD,84770
84766 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 138::CD,84748:CD,84753:CD,84758:CD,84762:JM,84766
84770 :: PRED :: IF :: Z :: if (v56 == #(null)) goto 189::CD,84774:CF,84778
84774 :: CALL :: call :: V :: v3.setChemComp(v57)::CL,101418
84778 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,84648
84823 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.NucleotideImpl.clone()::JM,71665:JM,72476:JM,88361:JM,104018
84822 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.clone()::CE,84823:CD,84826:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,84834:CD,84842:CD,84850:CD,84857:CD,84880:CD,84884:CD,84885:CD,84889:CD,84930:CD,84938
84826 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v3 = new org.biojava.nbio.structure.NucleotideImpl::DD,84938
84834 :: CALL :: call :: V :: v3.setPDBFlag(v6)::CL,101245
84842 :: CALL :: call :: V :: v3.setResidueNumber(v9)::CL,85618
84850 :: CALL :: call :: V :: v3.setPDBName(v12)::CL,88185
84854 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .atoms::JM,84884
84857 :: CALL :: call :: Ljava/util/Iterator :: v16 = v14.iterator()::JM,84884
84862 :: CALL :: call :: Ljava/lang/Object :: v21 = v16.next()::JM,84884
84867 :: CALL :: call :: Ljava/lang/Object :: v24 = v22.clone()::CL,101256
84872 :: CALL :: call :: V :: v3.addAtom(v25)::CL,88708
84876 :: CALL :: call :: V :: v25.setGroup(v3)::CL,101375
84880 :: CALL :: call :: Z :: v18 = v16.hasNext()::JM,84884
84885 :: CALL :: call :: Ljava/util/List :: v29 = p0 $this .getAltLocs()::JM,84889:CL,56406
84884 :: PRED :: IF :: Z :: if (v18 != #(0)) goto 46::CD,84862:CD,84867:CD,84872:CD,84876:CD,84880:JM,84884
84889 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 158::CD,84890:CD,84894:CD,84898
84890 :: CALL :: call :: Ljava/util/List :: v32 = p0 $this .getAltLocs()::JM,84898:CL,56406
84894 :: CALL :: call :: Z :: v34 = v32.isEmpty()::JM,84898
84899 :: CALL :: call :: Ljava/util/List :: v36 = p0 $this .getAltLocs()::JM,84926:CL,56406
84898 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 158::CD,84899:CD,84903:CD,84922:CD,84926
84903 :: CALL :: call :: Ljava/util/Iterator :: v38 = v36.iterator()::JM,84926
84908 :: CALL :: call :: Ljava/lang/Object :: v42 = v38.next()::JM,84926
84913 :: CALL :: call :: Ljava/lang/Object :: v45 = v43.clone()::CL,84505:CL,84822:CL,84647
84918 :: CALL :: call :: V :: v3.addAltLoc(v46)::CL,101386
84922 :: CALL :: call :: Z :: v40 = v38.hasNext()::JM,84926
84927 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = p0 $this .chemComp::DD,84930
84926 :: PRED :: IF :: Z :: if (v40 != #(0)) goto 122::CD,84908:CD,84913:CD,84918:CD,84922:JM,84926
84930 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 173::CD,84934:CF,84938
84934 :: CALL :: call :: V :: v3.setChemComp(v52)::CL,101418
84938 :: NORM :: compound :: Ljava/lang/Object :: return v3::DD,84823
84979 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::JM,71654
84978 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.findMathingGroupIndex(java.util.List,org.biojava.nbio.structure.Group)::CE,84979:CD,84983:CD,84996:CD,85000:CD,85002:JM,84993:JM,84992
84983 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $atomGroups .iterator()::JM,84993:JM,84992:JM,85000
84988 :: CALL :: call :: Ljava/lang/Object :: v10 = v6.next()::JM,84992:JM,85000
84993 :: PRED :: IF :: Z :: if (p2 $g  != v11) goto 31::CD,84994:CD,84995:CD,84996:CD,85000:CD,85002
84992 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,84993
84995 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v14 + #(1)::DD,85002
84994 :: NORM :: compound :: I :: return v14::DD,84979
84996 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,84992:JM,85000
85001 :: NORM :: compound :: I :: return #(-1)::DD,84979
85000 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 15::CD,84988:CD,84992:CD,84993:CD,85001:JM,85000
85002 :: EXPR :: assign :: null :: PHI v14 = #(0), v13::JM,84992:JM,85000:DD,84994:DD,84995
85017 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::CE,85018:CD,85025:CD,85030:CD,85031
85018 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getAtomGroup(int)::JM,71685
85022 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .groups::JM,85030
85025 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $position )::JM,85030
85031 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,85018
85030 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,85031
85035 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ResidueNumber.getChainId()::
85034 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getChainId()::CE,85035:CD,85041
85038 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,85041
85041 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,85035
85043 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::CE,85044:CD,85050
85044 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.ResidueNumber.getSeqNum()::JM,72530:JM,122320:JM,122019:JM,122006:JM,122059
85047 :: EXPR :: reference :: Ljava/lang/Integer :: v3 = p0 $this .seqNum::DD,85050
85050 :: NORM :: compound :: Ljava/lang/Integer :: return v3::CF,85044
85071 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
85074 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .seqNum = p2 $residueNumber ::
85077 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .insCode = p3 $insCode ::
85089 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::JM,72065:JM,72225:JM,72160:JM,72066:JM,72226:JM,72165:JM,71974:JM,72070:JM,72230:JM,72075:JM,72235:JM,71978:JM,71983:JM,71984:JM,71925:JM,71988:JM,71926:JM,71993:JM,72155:JM,71930:JM,72156:JM,71935:JM,77113
85088 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getEntity(int)::CE,85089:CD,85096:CD,85116:CD,85120:JM,85114
85093 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .entities::JM,85105:JM,85120
85096 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85105:JM,85120
85101 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85105:JM,85120
85105 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,85106:JM,85114:DD,85115
85106 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,85106:JM,85114
85110 :: CALL :: call :: I :: v16 = parseInt(v14)::JM,85114
85115 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return v12::CF,85089
85114 :: PRED :: IF :: Z :: if (v16 != p1 $entity_id ) goto 41::CD,85115:CD,85116:CD,85120:JM,85105
85116 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85105:JM,85120
85120 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85101:CD,85105:CD,85106:CD,85110:CD,85114:CD,85133:JM,85120
85133 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/Entity :: return #(null)::CF,85089
85149 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::JM,71924:JM,72064:JM,72154:JM,72216:JM,72959
85148 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getCompoundById(int)::CE,85149:CD,85156:CD,85172:CD,85176:JM,85170
85153 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,85176:JM,85165
85156 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,85176:JM,85165
85161 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85176:JM,85165
85165 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::DD,85171
85166 :: CALL :: call :: I :: v14 = v12.getMolId()::JM,85170:CL,80877
85171 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v12::DD,85149
85170 :: PRED :: IF :: Z :: if (v14 != p1 $molId ) goto 34::CD,85171:CD,85172:CD,85176:JM,85165
85172 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85176:JM,85165
85177 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return #(null)::DD,85149
85176 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,85161:CD,85165:CD,85166:CD,85170:CD,85177:JM,85176
85188 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESG(org.biojava.nbio.structure.io.mmcif.model.EntitySrcGen,int)::JM,80388:JM,80395:CD,85198:CD,85206:CD,85214:CD,85222:CD,85230:CD,85238:CD,85246:CD,85254
85198 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,80516
85206 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,101429
85214 :: CALL :: call :: V :: v5.setCell(v12)::CL,101440
85222 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,101451
85230 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,101462
85238 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,101473
85246 :: CALL :: call :: V :: v5.setExpressionSystemTaxId(v24)::CL,101484
85254 :: CALL :: call :: V :: v5.setExpressionSystem(v27)::CL,101495
85278 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMolName(java.lang.String)::JM,85283
85283 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .molName = p1 $molName ::
85289 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addCompound(org.biojava.nbio.structure.Compound)::CD,85297
85294 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::
85297 :: CALL :: call :: Z :: v6 = v4.add(p1 $compound )::
85315 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESN(org.biojava.nbio.structure.io.mmcif.model.EntitySrcNat,int)::JM,80388:JM,80395:CD,85325:CD,85333:CD,85341:CD,85349:CD,85357:CD,85365
85325 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,80516
85333 :: CALL :: call :: V :: v5.setAtcc(v9)::CL,101429
85341 :: CALL :: call :: V :: v5.setCell(v12)::CL,101440
85349 :: CALL :: call :: V :: v5.setOrganismCommon(v15)::CL,101451
85357 :: CALL :: call :: V :: v5.setOrganismScientific(v18)::CL,101462
85365 :: CALL :: call :: V :: v5.setOrganismTaxId(v21)::CL,101473
85385 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.createNewCompoundFromESS(org.biojava.nbio.structure.io.mmcif.model.EntitySrcSyn,int)::JM,80388:JM,80395:CD,85395:CD,85403:CD,85411:CD,85419
85395 :: CALL :: call :: V :: v5.setMolId(p2 $eId )::CL,80516
85403 :: CALL :: call :: V :: v5.setOrganismCommon(v9)::CL,101451
85411 :: CALL :: call :: V :: v5.setOrganismScientific(v12)::CL,101462
85419 :: CALL :: call :: V :: v5.setOrganismTaxId(v15)::CL,101473
85435 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::CE,85436:CD,85440:CD,85465:CD,85469:JM,85449
85436 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getMatchingAtomRes(org.biojava.nbio.structure.Chain,java.util.List)::JM,72444:JM,72699:JM,107446
85440 :: CALL :: call :: Ljava/util/Iterator :: v5 = p2 $atomList .iterator()::JM,85449:JM,85469
85445 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,85449:JM,85469
85449 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::DD,85464
85450 :: CALL :: call :: Ljava/lang/String :: v13 = v11.getChainID()::JM,85463:CL,48319
85454 :: CALL :: call :: Ljava/lang/String :: v15 = p1 $seqRes .getChainID()::JM,85463:CL,48319
85458 :: CALL :: call :: Z :: v17 = v13.equals(v15)::JM,85463
85463 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 41::CD,85464:CD,85465:CD,85469:JM,85449
85465 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,85449:JM,85469
85464 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v11::DD,85436
85469 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,85445:CD,85449:CD,85450:CD,85454:CD,85458:CD,85463:CD,85472:CD,85477:CD,85481:CD,85486:CD,85491:CD,85495:CD,85500:CD,85508:JM,85469
85472 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v19 = new java.lang.StringBuilder::
85477 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $seqRes .getChainID()::CL,48319
85481 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v19.append(v23)::
85486 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v25.append(#(< to ATOM chains!, si...))::
85491 :: CALL :: call :: I :: v30 = p2 $atomList .size()::JM,85449:JM,85469
85495 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(v30)::JM,85449:JM,85469
85500 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
85508 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,85436
85527 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::JM,72530
85526 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getInternalNr(org.biojava.nbio.structure.Group)::CE,85527:CD,85531:CD,85535:CD,85537:CD,85542
85531 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v5 = p1 $atomG .getType()::JM,85537:JM,85542:CL,97141:CL,97149:CL,97133
85535 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v6 = org.biojava.nbio.structure.GroupType.AMINOACID::JM,85537:JM,85542
85537 :: CALL :: call :: Z :: v8 = v5.equals(v6)::JM,85537:JM,85542
85542 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 36::CD,85544:CD,85545:CD,85553:CD,85557:CD,85558:CD,85562:CD,85564:CD,85569
85545 :: CALL :: call :: J :: v32 = v29.getId()::JM,85544:CL,101506
85544 :: NORM :: declaration :: Ljava/lang/Long :: v30 = new java.lang.Long::JM,85544:JM,85557
85553 :: CALL :: call :: I :: v35 = v30.intValue()::JM,85557
85557 :: NORM :: compound :: I :: return v35::DD,85527
85558 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v11 = p1 $atomG .getType()::JM,85569:JM,85564:CL,97141:CL,97149:CL,97133
85562 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v12 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::JM,85569:JM,85564
85564 :: CALL :: call :: Z :: v14 = v11.equals(v12)::JM,85569:JM,85564
85569 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 71::CD,85571:CD,85572:CD,85580:CD,85584:CD,85586:CD,85587:CD,85595:CD,85599
85571 :: NORM :: declaration :: Ljava/lang/Long :: v23 = new java.lang.Long::JM,85571:JM,85584
85572 :: CALL :: call :: J :: v25 = v22.getId()::JM,85571:CL,101506
85580 :: CALL :: call :: I :: v28 = v23.intValue()::JM,85584
85584 :: NORM :: compound :: I :: return v28::DD,85527
85587 :: CALL :: call :: J :: v18 = v15.getId()::JM,85586:CL,101506
85586 :: NORM :: declaration :: Ljava/lang/Long :: v16 = new java.lang.Long::JM,85586:JM,85599
85595 :: CALL :: call :: I :: v21 = v16.intValue()::JM,85599
85599 :: NORM :: compound :: I :: return v21::DD,85527
85618 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setResidueNumber(org.biojava.nbio.structure.ResidueNumber)::JM,85623
85623 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = p1 $residueNumber ::
85629 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.setAtomGroups(java.util.List)::CD,85634:CD,85648:CD,85652:JM,85653
85634 :: CALL :: call :: Ljava/util/Iterator :: v5 = p1 $groups .iterator()::JM,85653:JM,85652
85639 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,85652
85644 :: CALL :: call :: V :: v11.setChain(p0 $this )::CL,56376
85648 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,85652
85653 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $groups ::
85652 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 11::CD,85639:CD,85644:CD,85648:JM,85652
85667 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setChains(int,java.util.List)::CD,85673:CD,85687:CD,85691:CD,85695:CD,85703
85673 :: CALL :: call :: Ljava/util/Iterator :: v6 = p2 $chains .iterator()::JM,85691
85678 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,85691
85683 :: CALL :: call :: V :: v12.setStructure(p0 $this )::CL,56281
85687 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,85691
85691 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,85678:CD,85683:CD,85687:JM,85691
85692 :: EXPR :: reference :: Ljava/util/List :: v14 = p0 $this .models::
85695 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.remove(p1 $modelnr )::JM,85691
85700 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .models::
85703 :: CALL :: call :: V :: v17.add(p1 $modelnr , p2 $chains )::JM,85691
85744 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.makeBonds()::CD,85748:CD,85751:CD,85754:CD,85757
85748 :: CALL :: call :: V :: p0 $this .formPeptideBonds()::CL,101515
85751 :: CALL :: call :: V :: p0 $this .formNucleotideBonds()::CL,101668
85754 :: CALL :: call :: V :: p0 $this .formIntraResidueBonds()::CL,101821
85757 :: CALL :: call :: V :: p0 $this .trimBondLists()::CL,102038
85765 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formBondsFromStructConn(java.util.List)::CD,85770:CD,85774:CD,86183:CD,86187:CD,86191:JM,85783
85770 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::
85774 :: CALL :: call :: Ljava/util/Iterator :: v8 = p1 $structConn .iterator()::JM,85783:JM,86187
85779 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,85783:JM,86187
85783 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,85874:JM,85878:JM,85883:JM,86202:JM,85884:JM,85888:JM,85892:JM,85897:JM,86203:JM,85898:JM,85906:JM,85911:JM,85902:JM,85921:JM,85912:JM,85916:JM,86177:JM,86168:JM,86172
85790 :: CALL :: call :: Z :: v19 = v15.contains(v17)::JM,85795
85795 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 55::CD,85874:CD,85878:CD,85883:CD,85888:CD,85892:CD,85897:CD,85902:CD,85906:CD,85911:CD,86202:CD,86203
85874 :: CALL :: call :: Ljava/lang/String :: v62 = v14.getPdbx_ptnr1_label_alt_id()::JM,85874:JM,85878:JM,85883
85878 :: CALL :: call :: Z :: v64 = v62.equals(#(?))::JM,85878:JM,85883
85883 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 218::CF,86202:CD,85884
85884 :: CALL :: call :: Ljava/lang/String :: v66 = v14.getPdbx_ptnr1_label_alt_id()::JM,86202:JM,85884
85888 :: CALL :: call :: Ljava/lang/String :: v69 = v14.getPdbx_ptnr2_label_alt_id()::JM,85888:JM,85892:JM,85897
85892 :: CALL :: call :: Z :: v71 = v69.equals(#(?))::JM,85892:JM,85897
85897 :: PRED :: IF :: Z :: if (v71 != #(0)) goto 239::CF,86203:CD,85898
85898 :: CALL :: call :: Ljava/lang/String :: v73 = v14.getPdbx_ptnr2_label_alt_id()::JM,86203:JM,85898
85902 :: CALL :: call :: Ljava/lang/String :: v76 = v14.getPtnr1_symmetry()::JM,85906:JM,85911:JM,85902
85906 :: CALL :: call :: Z :: v78 = v76.equals(#(1_555))::JM,85906:JM,85911
85911 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 265::CD,85912:CD,85916:CD,85921
85912 :: CALL :: call :: Ljava/lang/String :: v80 = v14.getPtnr2_symmetry()::JM,85921:JM,85912:JM,85916
85916 :: CALL :: call :: Z :: v82 = v80.equals(#(1_555))::JM,85921:JM,85916
85921 :: PRED :: IF :: Z :: if (v82 != #(0)) goto 316::CD,85955:CD,85959:CD,85980:CD,85984:CD,86005:CD,86049:CD,86093
85955 :: CALL :: call :: Z :: v84 = v67.isEmpty()::JM,85955:JM,85959
85959 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 327::CF,85961:CD,85966:CD,85971:CD,85976
85961 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::
85966 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v85.append(v67)::
85971 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v89.append(#()))::
85976 :: CALL :: call :: Ljava/lang/String :: v94 = v92.toString()::
85980 :: CALL :: call :: Z :: v97 = v74.isEmpty()::JM,85984:JM,85980
85984 :: PRED :: IF :: Z :: if (v97 == #(0)) goto 366::CF,85986:CD,85991:CD,85996:CD,86001
85986 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
85991 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v74)::
85996 :: CALL :: call :: Ljava/lang/StringBuilder :: v103 = v101.append(#()))::
86001 :: CALL :: call :: Ljava/lang/String :: v105 = v103.toString()::
86005 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v109 = p0 $this .getAtomFromRecord(v58, v67, v54, v31, v50, v41)::JM,86093:CL,102148
86049 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = p0 $this .getAtomFromRecord(v60, v74, v56, v32, v52, v48)::JM,86127:CL,102148
86093 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 598::CD,86127
86127 :: PRED :: IF :: Z :: if (v111 != #(null)) goto 650::CF,86161:JM,112272:JM,112263:JM,112266:JM,112269:CD,86168:CD,86172:CD,86177
86161 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v112 = new org.biojava.nbio.structure.BondImpl::
86168 :: CALL :: call :: Ljava/lang/String :: v116 = v14.getConn_type_id()::JM,86177:JM,86168:JM,86172
86172 :: CALL :: call :: Z :: v119 = v116.equals(#(disulf))::JM,86177:JM,86172
86177 :: PRED :: IF :: Z :: if (v119 == #(0)) goto 688::CD,86178:JM,85783:JM,86187
86178 :: CALL :: call :: Z :: v146 = v5.add(v112)::
86183 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,85783:JM,86187
86187 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 25::CD,85779:CD,85783:CD,85790:CD,85795:CD,86183:JM,86187
86191 :: CALL :: call :: V :: v147.setSSBonds(v5)::CL,48086
86203 :: EXPR :: assign :: null :: PHI v74 = #(), v73::JM,85906:JM,85911:JM,85902:JM,85984:JM,85980
86202 :: EXPR :: assign :: null :: PHI v67 = #(), v66::JM,85955:JM,85959:JM,85888:JM,85892:JM,85897
86382 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.ChargeAdder.addCharges(org.biojava.nbio.structure.Structure)::CD,86465:CD,86470:CD,86475:CD,86480:CD,86620:CD,86624:CD,86632
86387 :: CALL :: call :: Ljava/util/List :: v7 = p1 $structure .getChains(v115)::JM,86618:CL,56292
86392 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,86618
86397 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,86618
86402 :: CALL :: call :: Ljava/util/List :: v16 = v14.getAtomGroups()::JM,86613:CL,48461
86406 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,86613
86411 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,86613
86420 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v27 = getChemComp(v25)::CL,102322
86424 :: CALL :: call :: Ljava/util/List :: v29 = v27.getAtoms()::JM,86608:JM,86437:CL,102453
86428 :: CALL :: call :: Ljava/util/Iterator :: v31 = v29.iterator()::JM,86608:JM,86437
86433 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,86608:JM,86437
86437 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::JM,86451:JM,86452:JM,86457:JM,86447:JM,86496:JM,86535
86442 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v23.getAtom(v38)::JM,86566:CL,102462
86447 :: CALL :: call :: Ljava/lang/String :: v42 = v36.getCharge()::JM,86451:JM,86452:JM,86457:JM,86447
86451 :: PRED :: IF :: Z :: if (v42 == #(null)) goto 230::CD,86452:CD,86457:CD,86530:CD,86535:CD,86539:CD,86544:CD,86549:CD,86553:CD,86558
86452 :: CALL :: call :: Z :: v46 = v42.equals(#(?))::JM,86452:JM,86457
86457 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 186::CD,86458:CD,86491:CD,86496:CD,86500:CD,86505:CD,86510:CD,86514:CD,86519:JM,86452:JM,86457
86458 :: CALL :: call :: S :: v48 = parseShort(v42)::JM,86452:JM,86457
86465 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v51 = new java.lang.StringBuilder::
86470 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v51.append(v42)::JM,86452:JM,86457
86475 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(' to short))::
86480 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
86491 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v63 = new java.lang.StringBuilder::
86496 :: CALL :: call :: Ljava/lang/String :: v67 = v36.getAtom_id()::JM,86496
86500 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v63.append(v67)::
86505 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v69.append(#( in group ))::
86510 :: CALL :: call :: Ljava/lang/String :: v74 = v27.getId()::CL,102526
86514 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v72.append(v74)::
86519 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::
86530 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
86535 :: CALL :: call :: Ljava/lang/String :: v85 = v36.getAtom_id()::JM,86535
86539 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v81.append(v85)::
86544 :: CALL :: call :: Ljava/lang/StringBuilder :: v89 = v87.append(#( in group ))::
86549 :: CALL :: call :: Ljava/lang/String :: v91 = v27.getId()::CL,102526
86553 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v89.append(v91)::
86558 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::
86567 :: CALL :: call :: V :: v40.setCharge(v97)::CL,102535
86566 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 287::CD,86567
86571 :: CALL :: call :: Ljava/util/List :: v100 = v23.getAltLocs()::JM,86603:CL,56406
86575 :: CALL :: call :: Ljava/util/Iterator :: v102 = v100.iterator()::JM,86603
86580 :: CALL :: call :: Ljava/lang/Object :: v106 = v102.next()::JM,86603
86589 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v111 = v107.getAtom(v109)::JM,86594:CL,102462
86595 :: CALL :: call :: V :: v111.setCharge(v97)::CL,102535
86594 :: PRED :: IF :: Z :: if (v111 == #(null)) goto 344::CF,86628:CD,86595
86599 :: CALL :: call :: Z :: v104 = v102.hasNext()::JM,86603
86603 :: PRED :: IF :: Z :: if (v104 != #(0)) goto 304::CF,86629:CD,86580:CD,86589:CD,86594:CD,86599:CD,86628:JM,86603
86604 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,86608:JM,86437
86609 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,86613
86608 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 92::CF,86630:CD,86433:CD,86437:CD,86442:CD,86447:CD,86451:CD,86566:CD,86571:CD,86575:CD,86599:CD,86603:CD,86604:CD,86628:CD,86629:JM,86608
86613 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 49::CF,86631:CD,86411:CD,86420:CD,86424:CD,86428:CD,86604:CD,86608:CD,86609:CD,86629:CD,86630:JM,86613
86614 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,86618
86619 :: EXPR :: assign :: Ljava/lang/Object :: v114 = v116 + #(1)::DD,86632
86618 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 22::CD,86397:CD,86402:CD,86406:CD,86609:CD,86613:CD,86614:CD,86630:CD,86631:JM,86618:CF,86619
86620 :: CALL :: call :: I :: v5 = p1 $structure .nrModels()::JM,86624:CL,49141
86624 :: PRED :: IF :: Z :: if (v115 < v5) goto 7::CD,86387:CD,86392:CD,86614:CD,86618:CD,86619:CD,86620:CD,86631:CD,86632
86629 :: EXPR :: assign :: null :: PHI v118 = v117, v119::JM,86608:JM,86437:DD,86628:DD,86630
86628 :: EXPR :: assign :: null :: PHI v119 = v118, v119, v119::JM,86603:DD,86628:DD,86629
86631 :: EXPR :: assign :: null :: PHI v116 = v115, v117::JM,86618:DD,86619:DD,86630
86630 :: EXPR :: assign :: null :: PHI v117 = v116, v118::JM,86613:DD,86629:DD,86631
86632 :: EXPR :: assign :: null :: PHI v115 = #(0), v114::DD,86624:DD,86631
86717 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::CE,86718:CD,86722:CD,86729:CD,86738:CD,86743:CD,86747:CD,86751:CD,86756:CD,86757:CD,86759:CD,86764:CD,86769:CD,86777:CD,86782
86718 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.ChainImpl.getGroupByPDB(org.biojava.nbio.structure.ResidueNumber)::JM,73490
86722 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $resNum .toString()::CL,56305
86729 :: CALL :: call :: Z :: v8 = v6.containsKey(v5)::
86738 :: CALL :: call :: Ljava/lang/Object :: v27 = v25.get(v5)::JM,86743
86743 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::JM,86756
86744 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .groups::JM,86756
86747 :: CALL :: call :: I :: v31 = v28.intValue()::JM,86756
86751 :: CALL :: call :: Ljava/lang/Object :: v33 = v29.get(v31)::JM,86756
86757 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v34::DD,86718
86756 :: EXPR :: assign :: Ljava/lang/Object :: v34 = CHECKCAST v33::CF,86757
86759 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
86764 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v5)::
86769 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#( in chain ))::
86774 :: EXPR :: reference :: Ljava/lang/String :: v19 = p0 $this .chainID::
86777 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v18.append(v19)::
86782 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
86801 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getSiteID()::CE,86802:CD,86808
86802 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.getSiteID()::JM,73390:JM,76968:JM,104336
86805 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .siteID::DD,86808
86808 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,86802
86817 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
86820 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,86824
86824 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v5::
86827 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
86830 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
86843 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setSiteID(java.lang.String)::JM,86848
86848 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
86855 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.Site.getGroups()::JM,73409:JM,73494
86854 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.getGroups()::CE,86855:CD,86861
86858 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::DD,86861
86861 :: NORM :: compound :: Ljava/util/List :: return v3::CF,86855
86863 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setGroups(java.util.List)::JM,86868
86868 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p1 $residues ::
86874 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.init()::CD,86885
86885 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,86890
86890 :: EXPR :: modify :: Ljava/util/List :: p0 $this .modelTransformations = v5::
86906 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v4 = new javax.vecmath.Matrix4d::DD,86926
86926 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v4::
86949 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setId(java.lang.String)::JM,86954
86954 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
87045 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::
87044 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListUnaryOperators(java.lang.String)::CE,87045:CD,87049:CD,87056:CD,87160:CD,87164:CD,87165:JM,87075:JM,87070
87049 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,87165
87053 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .psags::JM,87065:JM,87164
87056 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,87065:JM,87164
87061 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,87065:JM,87164
87065 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::JM,87075:JM,87066:JM,87070:JM,87159:JM,87094:JM,87098:JM,87103
87066 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getAssembly_id()::JM,87075:JM,87066:JM,87070
87070 :: CALL :: call :: Z :: v18 = v16.equals(p1 $assemblyId )::JM,87075:JM,87070
87075 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 189::CD,87083:CD,87090:CD,87094:CD,87098:CD,87103:CD,87107:CD,87155:CD,87159:JM,87065:JM,87164
87083 :: CALL :: call :: V :: v19.parseOperatorExpressionString(v21)::CL,102569
87090 :: CALL :: call :: Ljava/util/List :: v25 = v23.getUnaryOperators()::JM,87154:CL,102617
87094 :: CALL :: call :: Ljava/lang/String :: v27 = v14.getAsym_id_list()::JM,87159:JM,87094:JM,87098:JM,87103
87098 :: CALL :: call :: [Ljava/lang/String :: v30 = v27.split(#(,))::JM,87159:JM,87098:JM,87103
87103 :: CALL :: call :: Ljava/util/List :: v32 = asList(v30)::JM,87159:JM,87103
87107 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,87159
87112 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,87159
87117 :: CALL :: call :: Ljava/util/Iterator :: v41 = v25.iterator()::JM,87154
87122 :: CALL :: call :: Ljava/lang/Object :: v45 = v41.next()::JM,87154
87127 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v48 = p0 $this .getModelTransformationMatrix(v46)::CL,102626
87132 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v49 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
87137 :: CALL :: call :: V :: v49.setChainId(v39)::CL,102742
87141 :: CALL :: call :: V :: v49.setId(v46)::CL,86949
87145 :: CALL :: call :: Z :: v54 = v4.add(v49)::
87150 :: CALL :: call :: Z :: v43 = v41.hasNext()::JM,87154
87155 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,87159
87154 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 117::CD,87122:CD,87127:CD,87132:JM,102708:JM,102726:JM,102719:CD,87137:CD,87141:CD,87145:CD,87150:JM,87154:JM,87159
87159 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 93::CD,87112:CD,87117:CD,87150:CD,87154:CD,87155:JM,87159:JM,87065:JM,87164
87160 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,87065:JM,87164
87165 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,87045
87164 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,87061:CD,87065:CD,87066:CD,87070:CD,87075:CD,87160:JM,87164:CF,87165
87211 :: EXIT :: exit :: Ljava/util/ArrayList :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::
87210 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getBioUnitTransformationsListBinaryOperators(java.lang.String)::CE,87211:CD,87215:CD,87222:CD,87229:CD,87346:CD,87350:CD,87351:JM,87248:JM,87243
87215 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,87351
87222 :: CALL :: call :: Ljava/util/List :: v8 = v6.getBinaryOperators()::JM,87340:CL,102753
87226 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .psags::JM,87238:JM,87350
87229 :: CALL :: call :: Ljava/util/Iterator :: v11 = v9.iterator()::JM,87238:JM,87350
87234 :: CALL :: call :: Ljava/lang/Object :: v16 = v11.next()::JM,87238:JM,87350
87239 :: CALL :: call :: Ljava/lang/String :: v19 = v17.getAssembly_id()::JM,87248:JM,87239:JM,87243
87238 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,87248:JM,87239:JM,87243:JM,87249:JM,87345:JM,87253:JM,87258
87243 :: CALL :: call :: Z :: v21 = v19.equals(p1 $assemblyId )::JM,87248:JM,87243
87249 :: CALL :: call :: Ljava/lang/String :: v23 = v17.getAsym_id_list()::JM,87249:JM,87345:JM,87253:JM,87258
87248 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 218::CD,87249:CD,87253:CD,87258:CD,87269:CD,87273:CD,87341:CD,87345:JM,87238:JM,87350
87253 :: CALL :: call :: [Ljava/lang/String :: v26 = v23.split(#(,))::JM,87345:JM,87253:JM,87258
87258 :: CALL :: call :: Ljava/util/List :: v28 = asList(v26)::JM,87345:JM,87258
87269 :: CALL :: call :: V :: v29.parseOperatorExpressionString(v31)::CL,102569
87273 :: CALL :: call :: Ljava/util/Iterator :: v34 = v28.iterator()::JM,87345
87278 :: CALL :: call :: Ljava/lang/Object :: v38 = v34.next()::JM,87345
87283 :: CALL :: call :: Ljava/util/Iterator :: v42 = v8.iterator()::JM,87340
87288 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,87340
87298 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v52 = p0 $this .getModelTransformationMatrix(v50)::CL,102626
87308 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v57 = p0 $this .getModelTransformationMatrix(v55)::CL,102626
87313 :: CALL :: call :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v59 = combine(v52, v57)::CL,102780
87318 :: CALL :: call :: V :: v59.setChainId(v39)::CL,102742
87322 :: CALL :: call :: Ljava/lang/String :: v62 = valueOf(v67)::
87326 :: CALL :: call :: V :: v59.setId(v62)::CL,86949
87330 :: CALL :: call :: Z :: v65 = v4.add(v59)::
87335 :: EXPR :: assign :: Ljava/lang/Object :: v66 = v67 + #(1)::DD,87352
87336 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,87340
87341 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,87345
87340 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 122::CD,87288:CD,87298:CD,87308:CD,87313:CD,87318:CD,87322:CD,87326:CD,87330:CD,87335:CD,87336:CD,87352:JM,87340:JM,87345
87345 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 96::CD,87278:CD,87283:CD,87336:CD,87340:CD,87341:CD,87352:JM,87345:JM,87238:JM,87350
87346 :: CALL :: call :: Z :: v13 = v11.hasNext()::JM,87238:JM,87350
87351 :: NORM :: compound :: Ljava/util/ArrayList :: return v4::DD,87211
87350 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 32::CD,87234:CD,87238:CD,87239:CD,87243:CD,87248:CD,87346:JM,87350:CF,87351
87352 :: EXPR :: assign :: null :: PHI v67 = #(1), v66::JM,87340:DD,87335
87417 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNcsOperators(javax.vecmath.Matrix4d[])::JM,87422
87422 :: EXPR :: modify :: [Ljavax/vecmath/Matrix4d :: p0 $this .ncsOperators = p1 $ncsOperators ::
87429 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::JM,74198
87428 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.getCrystalCell()::CE,87429:CD,87435
87432 :: EXPR :: reference :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: v3 = p0 $this .cell::DD,87435
87435 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: return v3::CF,87429
87437 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.checkScaleMatrix(javax.vecmath.Matrix4d)::CD,87442
87442 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v5 = p0 $this .getMTranspose()::CL,102819
87531 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardCoordFrameConvention(boolean)::JM,87536
87536 :: EXPR :: modify :: Z :: p0 $this .nonStandardCoordFrameConvention = p1 $nonStandardCoordFrameConvention ::
87851 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::CE,87852:CD,87857:CD,87862:CD,87863
87852 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCodeAmino(java.lang.String)::JM,74756:JM,77196:JM,103652:JM,103691
87857 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $groupCode3 )::JM,87862
87863 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,87852
87862 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,87863
87866 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.trimToSize()::CD,87873:CD,87874:CD,87885:CD,87886:CD,87894:CD,87898:CD,87921:CD,87935
87870 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,87873
87873 :: EXPR :: assign :: Z :: v4=v3 INSTANCEOF java.util.ArrayList::DD,87874
87875 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::DD,87878
87874 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 23::CD,87878:CD,87879
87879 :: CALL :: call :: V :: v7.trimToSize()::
87878 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::
87882 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .altLocs::DD,87885
87885 :: EXPR :: assign :: Z :: v10=v9 INSTANCEOF java.util.ArrayList::DD,87886
87887 :: EXPR :: reference :: Ljava/util/List :: v11 = p0 $this .altLocs::DD,87890
87886 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 45::CD,87890:CD,87891
87891 :: CALL :: call :: V :: v12.trimToSize()::
87890 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::
87894 :: CALL :: call :: Z :: v15 = p0 $this .hasAltLoc()::JM,87898:CL,102927
87899 :: CALL :: call :: Ljava/util/List :: v17 = p0 $this .getAltLocs()::JM,87920:CL,56406
87898 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 90::CD,87899:CD,87903:CD,87916:CD,87920:CF,87921
87903 :: CALL :: call :: Ljava/util/Iterator :: v19 = v17.iterator()::JM,87920
87908 :: CALL :: call :: Ljava/lang/Object :: v23 = v19.next()::JM,87920
87913 :: CALL :: call :: V :: v24.trimToSize()::CL,87866
87916 :: CALL :: call :: Z :: v21 = v19.hasNext()::JM,87920
87921 :: NORM :: declaration :: Ljava/util/HashMap :: v26 = new java.util.HashMap::DD,87929
87920 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 65::CD,87908:CD,87913:CD,87916:JM,87920:CF,87921
87929 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v26::
87932 :: EXPR :: reference :: Ljava/util/Map :: v29 = p0 $this .atomNameLookup::DD,87935
87935 :: PRED :: IF :: Z :: if (v29 == #(null)) goto 126::CD,87936
87936 :: NORM :: declaration :: Ljava/util/HashMap :: v31 = new java.util.HashMap::DD,87944
87944 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v31::
87975 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::CE,87976:CD,87983:CD,87987:JM,88083:JM,88021:JM,88041:JM,88026:JM,88046
87976 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getNewGroup(java.lang.String,java.lang.Character,long,java.lang.String)::JM,75008:JM,75034:JM,75124:JM,88415
87983 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v8 = getGroupFromChemCompDictionary(p4 $null )::JM,87987:JM,88005:JM,88020:JM,87997:JM,88013:CL,89579
87987 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 100::CD,87988:CD,87992:CD,87996:CD,88021:CD,88026:CD,88105:CD,88106:JM,88083:JM,88041:JM,88046
87988 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = v8.getChemComp()::CL,89812
87992 :: CALL :: call :: Z :: v13 = v11.isEmpty()::JM,87996:CL,89872
87997 :: EXPR :: assign :: Z :: v47=v8 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,87998
87996 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 100::CD,87997:CD,87998:CD,88020:CD,88021:CD,88026:CD,88105:CD,88106:JM,88083:JM,88041:JM,88046
87998 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 51::CD,88000:CD,88005:CD,88006
88000 :: CALL :: call :: V :: v54.setId(p3 $seq_id )::CL,102954
88005 :: EXPR :: assign :: Z :: v48=v8 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,88006
88006 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 75::CD,88008:CD,88013:CD,88014
88008 :: CALL :: call :: V :: v52.setId(p3 $seq_id )::CL,102954
88013 :: EXPR :: assign :: Z :: v49=v8 INSTANCEOF org.biojava.nbio.structure.HetatomImpl::DD,88014
88014 :: PRED :: IF :: Z :: if (v49 == #(0)) goto 96::CD,88016:CF,88020
88016 :: CALL :: call :: V :: v50.setId(p3 $seq_id )::CL,102954
88021 :: CALL :: call :: Z :: v17 = p1 $recordName .equals(#(ATOM))::JM,88083:JM,88021:JM,88041:JM,88026:JM,88046
88020 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v8::DD,87976
88027 :: CALL :: call :: Z :: v31 = isNucleotide(p4 $null )::JM,88031:CL,89947
88026 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 201::CD,88027:CD,88031:CD,88069:CD,88073
88031 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 137::CF,88032:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,88036:CD,88041:CD,88106
88032 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v42 = new org.biojava.nbio.structure.NucleotideImpl::DD,88106
88036 :: CALL :: call :: V :: v42.setId(p3 $seq_id )::CL,102954
88041 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 149::CF,88047:CD,88042:CD,88046:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,88051:CD,88106:JM,88083:JM,88021:JM,88026
88042 :: CALL :: call :: C :: v33 = p2 $aminoCode1 .charValue()::JM,88083:JM,88021:JM,88026:JM,88046
88047 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v39 = new org.biojava.nbio.structure.HetatomImpl::DD,88106
88046 :: PRED :: IF :: Z :: if (v33 != #(88)) goto 171::CF,88056:CF,88047:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,88051:CD,88060:CD,88064:CD,88106
88051 :: CALL :: call :: V :: v39.setId(p3 $seq_id )::CL,102954
88056 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v35 = new org.biojava.nbio.structure.AminoAcidImpl::DD,88106
88060 :: CALL :: call :: V :: v35.setAminoType(p2 $aminoCode1 )::CL,89936
88064 :: CALL :: call :: V :: v35.setId(p3 $seq_id )::CL,102954
88069 :: CALL :: call :: Z :: v19 = isNucleotide(p4 $null )::JM,88073:CL,89947
88073 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 230::CF,88074:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,88078:CD,88083:CD,88106
88074 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v27 = new org.biojava.nbio.structure.NucleotideImpl::DD,88106
88078 :: CALL :: call :: V :: v27.setId(p3 $seq_id )::CL,102954
88083 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 261::CF,88097:CF,88084:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,88088:CD,88092:CD,88101:CD,88106
88084 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v23 = new org.biojava.nbio.structure.AminoAcidImpl::DD,88106
88088 :: CALL :: call :: V :: v23.setAminoType(p2 $aminoCode1 )::CL,89936
88092 :: CALL :: call :: V :: v23.setId(p3 $seq_id )::CL,102954
88097 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v20 = new org.biojava.nbio.structure.HetatomImpl::DD,88106
88101 :: CALL :: call :: V :: v20.setId(p3 $seq_id )::CL,102954
88105 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v45::DD,87976
88106 :: EXPR :: assign :: null :: PHI v45 = v42, v39, v35, v27, v23, v20::CF,88105
88185 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBName(java.lang.String)::JM,88203
88203 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
88216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setPDBName(java.lang.String)::JM,88221
88221 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = p1 $s ::
88227 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::CE,88228:CD,88239:CD,88243:CD,88247:JM,88263:JM,88313:JM,88337:JM,88332
88228 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String,long)::JM,75319
88239 :: CALL :: call :: Ljava/util/List :: v10 = v8.getAtoms()::JM,88247:CL,102965
88243 :: CALL :: call :: I :: v12 = v10.size()::JM,88247
88247 :: PRED :: IF :: Z :: if (v12 <= #(0)) goto 54::CD,88248:CD,88254:CD,88258:CD,88263:CD,88271:CD,88275:CD,88320:CD,88324:JM,88247
88248 :: CALL :: call :: Ljava/lang/Object :: v15 = v10.get(#(0))::JM,88247
88254 :: CALL :: call :: Ljava/lang/Character :: v18 = v16.getAltLoc()::JM,88263:CL,102974
88258 :: CALL :: call :: Z :: v20 = v18.equals(p1 $altLoc )::JM,88263:JM,88313
88263 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 54::CD,88267:CD,88271:CD,88275:CD,88320:CD,88324
88264 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v79 = p0 $this .current_group::DD,88267
88267 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v79::DD,88228
88271 :: CALL :: call :: Ljava/util/List :: v23 = v21.getAltLocs()::JM,88324:JM,88284:CL,56406
88275 :: CALL :: call :: Ljava/util/Iterator :: v25 = v23.iterator()::JM,88324:JM,88284
88280 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,88324:JM,88284
88285 :: CALL :: call :: Ljava/util/List :: v32 = v30.getAtoms()::JM,88293:JM,88319:CL,102965
88284 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,88314
88289 :: CALL :: call :: I :: v34 = v32.size()::JM,88293:JM,88319
88293 :: PRED :: IF :: Z :: if (v34 <= #(0)) goto 160::CD,88294:CD,88315:CD,88319:CD,88320:CD,88324:JM,88293:JM,88284
88294 :: CALL :: call :: Ljava/util/Iterator :: v37 = v32.iterator()::JM,88293:JM,88319
88299 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.next()::JM,88319
88304 :: CALL :: call :: Ljava/lang/Character :: v44 = v42.getAltLoc()::JM,88313:CL,102974
88308 :: CALL :: call :: Z :: v46 = v44.equals(p1 $altLoc )::JM,88313:JM,88263
88313 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,88314:CD,88315:CD,88319
88315 :: CALL :: call :: Z :: v39 = v37.hasNext()::JM,88319
88314 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v30::DD,88228
88319 :: PRED :: IF :: Z :: if (v39 != #(0)) goto 121::CD,88299:CD,88304:CD,88308:CD,88313:CD,88320:CD,88324:JM,88319:JM,88284
88320 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,88324:JM,88284
88324 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 78::CD,88280:CD,88284:CD,88285:CD,88289:CD,88293:CD,88328:CD,88332:CD,88337:JM,88324
88328 :: CALL :: call :: Ljava/lang/String :: v49 = v47.getPDBName()::JM,88337:JM,88332:CL,56427
88332 :: CALL :: call :: Z :: v51 = p4 $groupCode3 .equals(v49)::JM,88337:JM,88332
88337 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 268::CD,88341:CD,88345:CD,88349:CD,88385:CD,88393:CD,88404:CD,88411:CD,88415
88341 :: CALL :: call :: Ljava/util/List :: v63 = v61.getAtoms()::JM,88349:CL,102965
88345 :: CALL :: call :: I :: v65 = v63.size()::JM,88349
88349 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 208::CD,88353:CD,88357:CD,88361:CD,88362:CD,88366:CD,88370:CD,88374:CD,88380:CD,88384
88350 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,88353
88353 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,88228
88357 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.clone()::JM,88361:CL,84505:CL,84822:CL,84647
88361 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,88384:CF,88362
88362 :: NORM :: declaration :: Ljava/util/ArrayList :: v70 = new java.util.ArrayList::
88366 :: CALL :: call :: V :: v69.setAtoms(v70)::CL,102995
88370 :: CALL :: call :: Ljava/util/List :: v74 = v69.getAltLocs()::CL,56406
88374 :: CALL :: call :: V :: v74.clear()::
88380 :: CALL :: call :: V :: v76.addAltLoc(v69)::CL,101386
88385 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v53 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p5 $seq_id , p4 $groupCode3 )::JM,88415:CL,87975
88384 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v69::DD,88228
88393 :: CALL :: call :: V :: v53.setPDBName(p4 $groupCode3 )::CL,88185:CL,88216
88404 :: CALL :: call :: V :: v53.setResidueNumber(v57)::CL,85618
88411 :: CALL :: call :: V :: v59.addAltLoc(v53)::CL,101386
88415 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v53::DD,88228
88477 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.HetatomImpl.getChain()::JM,75218:JM,90677
88476 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChain()::CE,88477:CD,88483
88480 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v3 = p0 $this .parent::DD,88483
88483 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::CF,88477
88485 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::CE,88486:CD,88492
88486 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseCAOnly()::JM,75233
88489 :: EXPR :: reference :: Z :: v3 = p0 $this .parseCAOnly::DD,88492
88492 :: NORM :: compound :: Z :: return v3::CF,88486
88494 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.convertAtom(org.biojava.nbio.structure.io.mmcif.model.AtomSite)::JM,103091:JM,103096:CD,88503:CD,88507:CD,88511:CD,88519:CD,88547:CD,88551:CD,88555:CD,88567:CD,88579:CD,88583:CD,88587:CD,88629:CD,88652:JM,88593:JM,88592:JM,88598:JM,88588
88503 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $atom .getId()::JM,88593:JM,88592:JM,88503:JM,88583:JM,88598:JM,88587:JM,88588
88507 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,88593:JM,88592:JM,88598:JM,88587:JM,88588
88511 :: CALL :: call :: V :: v4.setPDBserial(v9)::CL,103138
88519 :: CALL :: call :: V :: v4.setName(v12)::CL,103149
88547 :: CALL :: call :: V :: v4.setX(v17)::CL,103160
88551 :: CALL :: call :: V :: v4.setY(v21)::CL,103176
88555 :: CALL :: call :: V :: v4.setZ(v25)::CL,103192
88567 :: CALL :: call :: V :: v4.setOccupancy(v32)::CL,103208
88579 :: CALL :: call :: V :: v4.setTempFactor(v37)::CL,103219
88583 :: CALL :: call :: Ljava/lang/String :: v40 = p1 $atom .getLabel_alt_id()::JM,88593:JM,88592:JM,88503:JM,88583:JM,88598:JM,88587:JM,88588
88587 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 167::CD,88588:CD,88592:CD,88619:JM,88593:JM,88598
88588 :: CALL :: call :: I :: v43 = v40.length()::JM,88593:JM,88592:JM,88598:JM,88588
88593 :: CALL :: call :: Z :: v47 = v40.equals(#(.))::JM,88593:JM,88592:JM,88598:JM,88588
88592 :: PRED :: IF :: Z :: if (v43 <= #(0)) goto 167::CD,88593:CD,88598:CD,88619:JM,88592:JM,88588
88598 :: PRED :: IF :: Z :: if (v47 != #(0)) goto 167::CD,88609:CD,88619
88609 :: CALL :: call :: V :: v4.setAltLoc(v52)::CL,103230
88619 :: CALL :: call :: V :: v4.setAltLoc(v48)::CL,103230
88629 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v61 = valueOfIgnoreCase(v59)::CL,103254
88652 :: CALL :: call :: V :: v4.setElement(v72)::CL,103298
88708 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAtom(org.biojava.nbio.structure.Atom)::CD,88713:CD,88720:CD,88725:CD,88729:CD,88737
88713 :: CALL :: call :: V :: p1 $atom .setGroup(p0 $this )::CL,101375
88717 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::
88720 :: CALL :: call :: Z :: v7 = v5.add(p1 $atom )::
88725 :: CALL :: call :: [D :: v9 = p1 $atom .getCoords()::JM,88729:CL,103309
88729 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 33::CD,88730
88730 :: CALL :: call :: V :: p0 $this .setPDBFlag(#(1))::CL,101245
88734 :: EXPR :: reference :: Ljava/util/Map :: v13 = p0 $this .atomNameLookup::DD,88737
88737 :: PRED :: IF :: Z :: if (v13 == #(null)) goto 176::CD,88745:CD,88751:CD,88752
88745 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.put(v16, p1 $atom )::JM,88751
88751 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,88752
88753 :: CALL :: call :: Ljava/lang/Character :: v22 = p1 $atom .getAltLoc()::JM,88849:JM,88761:CL,102974
88752 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 176::CD,88753:CD,88757:CD,88761:CD,88783:CD,88788:CD,88792:CD,88797:CD,88802:CD,88807:CD,88812:CD,88816:CD,88821:CD,88826:CD,88830:CD,88835:CD,88840:CD,88849
88757 :: CALL :: call :: C :: v24 = v22.charValue()::JM,88849:JM,88761
88761 :: PRED :: IF :: Z :: if (v24 == #(32)) goto 107::CF,88849:CF,88762:CD,88767:CD,88772:CD,88777
88762 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::JM,88849
88767 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v26.append(v24)::JM,88849
88772 :: CALL :: call :: Ljava/lang/StringBuilder :: v33 = v30.append(#(')))::JM,88849
88777 :: CALL :: call :: Ljava/lang/String :: v35 = v33.toString()::JM,88849
88783 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
88788 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $atom .getName()::CL,88889
88792 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v38.append(v42)::
88797 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#( ))::
88802 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v36)::
88807 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v49.append(#( is already present i...))::
88812 :: CALL :: call :: Ljava/lang/String :: v54 = p0 $this .toString()::CL,97440:CL,97538:CL,97250
88816 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v52.append(v54)::
88821 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v56.append(#(. The atom with serial ))::
88826 :: CALL :: call :: I :: v61 = p1 $atom .getPDBserial()::CL,103318
88830 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v61)::
88835 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#( will be ignored in l...))::
88840 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
88849 :: EXPR :: assign :: null :: PHI v36 = #(), v35::
88889 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getName()::CE,88890:CD,88896
88890 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AtomImpl.getName()::JM,88945:JM,102503:JM,112996
88893 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .name::DD,88896
88896 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,88890
88899 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::JM,75302:JM,91101:JM,108841:JM,108847:JM,108853:JM,108859
88898 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAtom(java.lang.String)::CE,88899:CD,88906:JM,88945
88903 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,88906
88906 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 33::CD,88910:CD,88914:CD,88919:CD,88920:CD,88926:CD,88947:CD,88951
88910 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $fullName .trim()::JM,88945
88914 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.get(v22)::JM,88919
88919 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,88920
88921 :: NORM :: compound :: Z :: return #(1)::DD,88899
88920 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 31::CD,88921:CD,88922
88923 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,88951
88922 :: NORM :: compound :: Z :: return #(0)::DD,88899
88926 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,88951
88931 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,88951
88936 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,88945:CL,88889
88940 :: CALL :: call :: Z :: v18 = v16.equals(p1 $fullName )::JM,88945
88945 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 71::CD,88946:CD,88947:CD,88951
88947 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,88951
88946 :: NORM :: compound :: Z :: return #(1)::DD,88899
88951 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 46::CD,88931:CD,88936:CD,88940:CD,88945:CD,88952:JM,88951
88952 :: NORM :: compound :: Z :: return #(0)::DD,88899
88973 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setDepDate(java.util.Date)::JM,88978
88978 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .depDate = p1 $depDate ::
88984 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setModDate(java.util.Date)::JM,88989
88989 :: EXPR :: modify :: Ljava/util/Date :: p0 $this .modDate = p1 $modDate ::
88995 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::CE,88996:CD,89002
88996 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBHeader.getRevisionRecords()::JM,75725:JM,75741
88999 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .revisionRecords::DD,89002
89002 :: NORM :: compound :: Ljava/util/List :: return v3::CF,88996
89004 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRevisionRecords(java.util.List)::JM,89009
89009 :: EXPR :: modify :: Ljava/util/List :: p0 $this .revisionRecords = p1 $revisionRecords ::
89015 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setResolution(float)::JM,89020
89020 :: EXPR :: modify :: F :: p0 $this .resolution = p1 $resolution ::
89026 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setExperimentalTechnique(java.lang.String)::CD,89031:CD,89035
89031 :: CALL :: call :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: v5 = getByName(p1 $techniqueStr )::JM,89041:JM,89045:JM,89035:CL,103327
89035 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 12::CD,89040
89037 :: EXPR :: reference :: Ljava/util/Set :: v7 = p0 $this .techniques::DD,89040
89041 :: CALL :: call :: Ljava/util/EnumSet :: v12 = of(v5)::JM,89041:JM,89045
89040 :: PRED :: IF :: Z :: if (v7 != #(null)) goto 29::CD,89041:JM,89045
89045 :: EXPR :: modify :: Ljava/util/Set :: p0 $this .techniques = v12::
89079 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setA(double)::JM,89084
89084 :: EXPR :: modify :: D :: p0 $this .a = p1 $a ::
89090 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setB(double)::JM,89095
89095 :: EXPR :: modify :: D :: p0 $this .b = p1 $b ::
89101 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setC(double)::JM,89106
89106 :: EXPR :: modify :: D :: p0 $this .c = p1 $c ::
89112 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setAlpha(double)::JM,89124:JM,89117:CD,89120
89117 :: EXPR :: modify :: D :: p0 $this .alpha = p1 $alpha ::
89120 :: CALL :: call :: D :: v5 = toRadians(p1 $alpha )::JM,89120:JM,89124
89124 :: EXPR :: modify :: D :: p0 $this .alphaRad = v5::
89132 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setBeta(double)::JM,89137:JM,89144:CD,89140
89137 :: EXPR :: modify :: D :: p0 $this .beta = p1 $beta ::
89140 :: CALL :: call :: D :: v5 = toRadians(p1 $beta )::JM,89140:JM,89144
89144 :: EXPR :: modify :: D :: p0 $this .betaRad = v5::
89152 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.setGamma(double)::JM,89157:JM,89164:CD,89160
89157 :: EXPR :: modify :: D :: p0 $this .gamma = p1 $gamma ::
89160 :: CALL :: call :: D :: v5 = toRadians(p1 $gamma )::JM,89160:JM,89164
89164 :: EXPR :: modify :: D :: p0 $this .gammaRad = v5::
89173 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::JM,76004:JM,92666
89172 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.isCellReasonable()::CE,89173:CD,89176:CD,89180:CD,89181
89176 :: CALL :: call :: D :: v4 = p0 $this .getA()::JM,89180:CL,103342
89181 :: PRED :: IF :: Z :: if (v6 >= #(0)) goto 36::CD,89182:CD,89186:CD,89187:CD,89195
89180 :: EXPR :: assign :: Z :: v6 = v4 > #(10.0 d)::DD,89181
89182 :: CALL :: call :: D :: v9 = p0 $this .getB()::JM,89186:CL,103351
89187 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 36::CD,89188:CD,89192:CD,89193:CD,89195
89186 :: EXPR :: assign :: Z :: v10 = v9 > #(10.0 d)::DD,89187
89188 :: CALL :: call :: D :: v12 = p0 $this .getC()::JM,89192:CL,103360
89193 :: PRED :: IF :: Z :: if (v13 >= #(0)) goto 36::CD,89194:CD,89195
89192 :: EXPR :: assign :: Z :: v13 = v12 > #(10.0 d)::DD,89193
89195 :: NORM :: compound :: Z :: return #(1)::CF,89173
89194 :: NORM :: compound :: Z :: return #(0)::CF,89173
89216 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setCrystalCell(org.biojava.nbio.structure.xtal.CrystalCell)::JM,89221
89221 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/CrystalCell :: p0 $this .cell = p1 $cell ::
89227 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::CE,89228:CD,89231:JM,89236:JM,89286:JM,89243
89228 :: EXIT :: exit :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: org.biojava.nbio.structure.xtal.SymoplibParser.getSpaceGroup(java.lang.String)::JM,76125:JM,92690
89231 :: PRED :: IF :: Z :: if (p1 $shortName  == #(null)) goto 13::CD,89232:CD,89236:CD,89237:JM,89286:JM,89243
89232 :: CALL :: call :: I :: v5 = p1 $shortName .length()::JM,89236:JM,89286:JM,89243
89237 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return #(null)::DD,89228
89236 :: PRED :: IF :: Z :: if (v5 > #(2)) goto 17::CD,89237:CD,89238:CD,89243:CD,89244:CD,89245:CD,89251:CD,89259:CD,89264:CD,89268:CD,89273:CD,89279:CD,89284:CD,89285:CD,89286:JM,89236
89238 :: CALL :: call :: Z :: v9 = p1 $shortName .equals(#(P 1-))::JM,89236:JM,89286:JM,89243
89243 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 26::CF,89286
89245 :: CALL :: call :: Ljava/lang/String :: v16 = v12.substring(#(0), #(1))::
89244 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
89251 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(v16)::
89259 :: CALL :: call :: Ljava/lang/String :: v21 = v12.substring(#(1))::
89264 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toLowerCase()::
89268 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v13.append(v23)::
89273 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
89279 :: CALL :: call :: Ljava/lang/Object :: v30 = v28.get(v27)::JM,89284
89285 :: NORM :: compound :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: return v31::DD,89228
89284 :: EXPR :: assign :: Ljava/lang/Object :: v31 = CHECKCAST v30::CF,89285
89286 :: EXPR :: assign :: null :: PHI v12 = p1 $shortName , #(P -1)::CF,89244
89306 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setNonStandardSg(boolean)::JM,89311
89311 :: EXPR :: modify :: Z :: p0 $this .nonStandardSg = p1 $nonStandardSg ::
89317 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBCrystallographicInfo.setSpaceGroup(org.biojava.nbio.structure.xtal.SpaceGroup)::JM,89322
89322 :: EXPR :: modify :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: p0 $this .sg = p1 $spaceGroup ::
89335 :: EXPR :: modify :: C :: p0 $this .insertBegin = #(32)::
89338 :: EXPR :: modify :: C :: p0 $this .insertEnd = #(32)::
89341 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = #(32)::
89344 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = #(32)::
89357 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdCode(java.lang.String)::JM,89362
89362 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .idCode = p1 $idCode ::
89368 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbAccession(java.lang.String)::JM,89373
89373 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbAccession = p1 $dbAccession ::
89379 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbIdCode(java.lang.String)::JM,89384
89384 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .dbIdCode = p1 $dbIdCode ::
89390 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setChainId(java.lang.String)::JM,89395
89395 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
89401 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::CE,89402:CD,89409:CD,89430:CD,89434:JM,89428:JM,89423
89402 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: org.biojava.nbio.structure.io.mmcif.SimpleMMcifConsumer.getStructRef(java.lang.String)::JM,76515
89406 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .strucRefs::JM,89418:JM,89434
89409 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,89418:JM,89434
89414 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,89418:JM,89434
89419 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,89428:JM,89419:JM,89423
89418 :: EXPR :: assign :: Ljava/lang/Object :: v12 = CHECKCAST v11::JM,89428:JM,89419:JM,89423:DD,89429
89423 :: CALL :: call :: Z :: v16 = v14.equals(p1 $ref_id )::JM,89428:JM,89423
89429 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return v12::DD,89402
89428 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,89429:CD,89430:CD,89434:JM,89418
89430 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,89418:JM,89434
89435 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/StructRef :: return #(null)::DD,89402
89434 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,89414:CD,89418:CD,89419:CD,89423:CD,89428:CD,89435:JM,89434
89447 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDatabase(java.lang.String)::JM,89452
89452 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .database = p1 $database ::
89458 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqBegin(int)::JM,89463
89463 :: EXPR :: modify :: I :: p0 $this .seqbegin = p1 $seqbegin ::
89469 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertBegin(char)::JM,89474
89474 :: EXPR :: modify :: C :: p0 $this .insertBegin = p1 $insertBegin ::
89480 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setSeqEnd(int)::JM,89485
89485 :: EXPR :: modify :: I :: p0 $this .seqEnd = p1 $seqEnd ::
89491 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setInsertEnd(char)::JM,89496
89496 :: EXPR :: modify :: C :: p0 $this .insertEnd = p1 $insertEnd ::
89502 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqBegin(int)::JM,89507
89507 :: EXPR :: modify :: I :: p0 $this .dbSeqBegin = p1 $dbSeqBegin ::
89513 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsBegin(char)::JM,89518
89518 :: EXPR :: modify :: C :: p0 $this .idbnsBegin = p1 $idbnsBegin ::
89524 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setDbSeqEnd(int)::JM,89529
89529 :: EXPR :: modify :: I :: p0 $this .dbSeqEnd = p1 $dbSeqEnd ::
89535 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.setIdbnsEnd(char)::JM,89540
89540 :: EXPR :: modify :: C :: p0 $this .idbnsEnd = p1 $idbnsEnd ::
89546 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB()::CD,89550:CD,89554:CD,89558
89550 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
89554 :: CALL :: call :: V :: p0 $this .toPDB(v3)::CL,103369
89558 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
89568 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setDescription(java.lang.String)::JM,89573
89573 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = p1 $description ::
89579 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::CE,89580:CD,89583:CD,89587:CD,89591:CD,89595
89580 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getGroupFromChemCompDictionary(java.lang.String)::JM,77171:JM,77161:JM,87987:JM,88005:JM,88020:JM,87997:JM,88013:JM,103734:JM,103724
89583 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::
89587 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::
89591 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v9 = getChemComp(v6)::JM,89595:CL,102322
89595 :: PRED :: IF :: Z :: if (v9 != #(null)) goto 21::CD,89596:CD,89603:CD,89608:CD,89738:CD,89742:CD,89744
89596 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return #(null)::DD,89580
89603 :: CALL :: call :: Z :: v14 = v10.contains(v12)::JM,89608
89609 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v25 = new org.biojava.nbio.structure.AminoAcidImpl::DD,89744
89608 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 209::CF,89609:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,89613:CD,89617:CD,89657:CD,89723:CD,89728:CD,89743:CD,89744
89613 :: CALL :: call :: Ljava/lang/String :: v28 = v9.getOne_letter_code()::JM,89617:JM,89634:JM,89623:JM,89629:JM,89743:CL,97695
89617 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 84::CD,89618:CD,89623:CD,89635:CD,89639:CD,89743:JM,89634:JM,89629
89618 :: CALL :: call :: Z :: v31 = v28.equals(#(X))::JM,89634:JM,89623:JM,89629:JM,89743
89623 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 84::CD,89624:CD,89629:CD,89635:CD,89639:CD,89743:JM,89634:JM,89623
89624 :: CALL :: call :: Z :: v34 = v28.equals(#(?))::JM,89634:JM,89623:JM,89629:JM,89743
89629 :: PRED :: IF :: Z :: if (v34 != #(0)) goto 84::CD,89630:CD,89634:CD,89635:CD,89639:CD,89743:JM,89623:JM,89629
89630 :: CALL :: call :: I :: v36 = v28.length()::JM,89634:JM,89623:JM,89629:JM,89743
89635 :: CALL :: call :: Ljava/lang/String :: v38 = v9.getMon_nstd_parent_comp_id()::JM,89639:JM,89640:JM,89644:CL,103580
89634 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 125::CF,89743:CD,89635:CD,89639
89639 :: PRED :: IF :: Z :: if (v38 == #(null)) goto 125::CF,89743:CD,89640:CD,89644
89640 :: CALL :: call :: I :: v40 = v38.length()::JM,89640:JM,89644
89644 :: PRED :: IF :: Z :: if (v40 != #(3)) goto 125::CF,89743:CD,89649:CD,89653
89649 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v45 = getChemComp(v43)::CL,102322
89653 :: CALL :: call :: Ljava/lang/String :: v47 = v45.getOne_letter_code()::JM,89743:CL,97695
89657 :: PRED :: IF :: Z :: if (v48 == #(null)) goto 146::CD,89658:CD,89662:CD,89671:CD,89676:CD,89681:CD,89686:CD,89698
89658 :: CALL :: call :: I :: v50 = v48.length()::JM,89662
89663 :: CALL :: call :: Z :: v52 = v48.equals(#(?))::JM,89668
89662 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 146::CD,89663:CD,89668:CD,89671:CD,89676:CD,89681:CD,89686:CD,89698
89668 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 193::CD,89671:CD,89676:CD,89681:CD,89686:CD,89698:CD,89703:CD,89712
89671 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
89676 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v59.append(v6)::
89681 :: CALL :: call :: Ljava/lang/StringBuilder :: v66 = v63.append(#(  Did not find one le...))::
89686 :: CALL :: call :: Ljava/lang/String :: v68 = v66.toString()::
89698 :: CALL :: call :: V :: v25.setAminoType(v72)::CL,89936
89703 :: CALL :: call :: C :: v54 = v48.charAt(#(0))::
89712 :: CALL :: call :: V :: v25.setAminoType(v56)::CL,89936
89723 :: CALL :: call :: Z :: v20 = v16.contains(v18)::JM,89728
89729 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v23 = new org.biojava.nbio.structure.NucleotideImpl::DD,89744
89728 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 237::CF,89734:CF,89729:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,89744
89734 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v21 = new org.biojava.nbio.structure.HetatomImpl::DD,89744
89738 :: CALL :: call :: V :: v74.setChemComp(v9)::CL,101418
89743 :: EXPR :: assign :: null :: PHI v48 = v28, v28, v28, v47::DD,89657:JM,89662:JM,89668
89742 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v74::DD,89580
89744 :: EXPR :: assign :: null :: PHI v74 = v25, v23, v21::DD,89742
89813 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::JM,79630:JM,103811
89812 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getChemComp()::CE,89813:CD,89819:CD,89860
89816 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v3 = p0 $this .chemComp::DD,89819
89819 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 54::CD,89823:CD,89833
89823 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v7 = getChemComp(v5)::JM,89827:CL,102322
89827 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = v7::
89830 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v8 = p0 $this .chemComp::DD,89833
89833 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 54::CD,89836:CD,89844:CD,89849
89836 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v10 = new java.lang.StringBuilder::
89841 :: EXPR :: reference :: Ljava/lang/String :: v13 = p0 $this .pdb_name::
89844 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v10.append(v13)::
89849 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
89857 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v19 = p0 $this .chemComp::DD,89860
89860 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v19::DD,89813
89873 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::JM,77170:JM,87996:JM,103733
89872 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isEmpty()::CE,89873:CD,89879
89876 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,89879
89879 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 30::CD,89880:CD,89884:CD,89896
89880 :: CALL :: call :: Ljava/lang/String :: v6 = p0 $this .getThree_letter_code()::JM,89884:CL,103589
89885 :: CALL :: call :: Ljava/lang/String :: v8 = p0 $this .getThree_letter_code()::JM,89894:CL,103589
89884 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 30::CD,89885:CD,89889:CD,89894:CD,89896
89889 :: CALL :: call :: Z :: v11 = v8.equals(#(???))::JM,89894
89895 :: NORM :: compound :: Z :: return #(0)::CF,89873
89894 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,89895:CD,89896
89896 :: NORM :: compound :: Z :: return #(1)::CF,89873
89906 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setRecordType(java.lang.String)::JM,89911
89911 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = p1 $recordName ::
89924 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = #(null)::
89927 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .recordType = #(ATOM)::
89936 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.setAminoType(java.lang.Character)::JM,89941
89941 :: EXPR :: modify :: Ljava/lang/Character :: p0 $this .amino_char = p1 $aa ::
89947 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::CE,89948:CD,89951:CD,89957:CD,89962
89948 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isNucleotide(java.lang.String)::JM,77226:JM,88031:JM,88073:JM,103661:JM,103750
89951 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $groupCode3 .trim()::
89957 :: CALL :: call :: Z :: v7 = v5.containsKey(v4)::JM,89962
89962 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 32::CD,89965:CD,89970:CD,89972
89965 :: CALL :: call :: Z :: v11 = v9.containsKey(v4)::JM,89970
89971 :: NORM :: compound :: Z :: return #(0)::DD,89948
89970 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 32::CD,89971:CD,89972
89972 :: NORM :: compound :: Z :: return #(1)::DD,89948
89999 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(0)::
90002 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdb_name = #(null)::
90005 :: EXPR :: modify :: Lorg/biojava/nbio/structure/ResidueNumber :: p0 $this .residueNumber = #(null)::
90008 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,90012
90012 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v6::
90015 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,90019
90019 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .properties = v8::
90022 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .parent = #(null)::
90025 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = #(null)::
90028 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = #(null)::
90031 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v10 = org.biojava.nbio.structure.HetatomImpl.performanceBehavior::DD,90035
90033 :: EXPR :: reference :: Lorg/biojava/nbio/structure/HetatomImpl$PerformanceBehavior :: v11 = org.biojava.nbio.structure.HetatomImpl$PerformanceBehavior.BETTER_PERFORMANCE_MORE_MEMORY::CF,90035
90035 :: PRED :: IF :: Z :: if (v10 != v11) goto 81::CD,90036
90036 :: NORM :: declaration :: Ljava/util/HashMap :: v12 = new java.util.HashMap::DD,90040
90040 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = v12::
90044 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .atomNameLookup = #(null)::
90071 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setClassification(java.lang.String)::JM,90076
90076 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .classification = p1 $classification ::
90083 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getResolution()::JM,77677:JM,77690:JM,93364:JM,93381
90082 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getResolution()::CE,90083:CD,90089
90086 :: EXPR :: reference :: F :: v3 = p0 $this .resolution::DD,90089
90089 :: NORM :: compound :: F :: return v3::CF,90083
90091 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getRfree()::CE,90092:CD,90098
90092 :: EXIT :: exit :: F :: org.biojava.nbio.structure.PDBHeader.getRfree()::JM,77764:JM,77777
90095 :: EXPR :: reference :: F :: v3 = p0 $this .rFree::DD,90098
90098 :: NORM :: compound :: F :: return v3::CF,90092
90100 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setRfree(float)::JM,90105
90105 :: EXPR :: modify :: F :: p0 $this .rFree = p1 $rFree ::
90111 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.addChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CD,90123:CD,90129:CD,90133:CD,90153:CD,90157:JM,90163:JM,90134:JM,90139:JM,90158
90123 :: CALL :: call :: Ljava/lang/Object :: v8 = v4.put(v6, p1 $comp )::
90129 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $comp .getPdbx_replaces()::JM,90129:JM,90163:JM,90133:JM,90134:JM,90153:JM,90139:JM,90157:JM,90158
90133 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,90134:CD,90139:JM,90163:JM,90157:JM,90158:JM,90129:JM,90133:JM,90153
90134 :: CALL :: call :: Z :: v14 = v10.equals(#(?))::JM,90163:JM,90134:JM,90139:JM,90157:JM,90158
90139 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 49::CD,90147:JM,90129:JM,90163:JM,90133:JM,90134:JM,90153:JM,90139:JM,90157:JM,90158
90147 :: CALL :: call :: Ljava/lang/Object :: v20 = v16.put(v18, v10)::
90153 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $comp .getPdbx_replaced_by()::JM,90129:JM,90163:JM,90133:JM,90134:JM,90153:JM,90139:JM,90157:JM,90158
90157 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 81::CD,90158:CD,90163:JM,90134:JM,90139
90158 :: CALL :: call :: Z :: v24 = v22.equals(#(?))::JM,90163:JM,90134:JM,90139:JM,90158
90163 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 81::CD,90171
90171 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.put(v27, v22)::
90205 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getAuthors()::JM,78032:JM,92097
90204 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getAuthors()::CE,90205:CD,90211
90208 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .authors::DD,90211
90211 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,90205
90213 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setAuthors(java.lang.String)::JM,90218
90218 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .authors = p1 $authors ::
90225 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::JM,112500:JM,120359
90224 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary.getChemComp(java.lang.String)::CE,90225:CD,90232:CD,90237:CD,90238
90232 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $id )::JM,90237
90237 :: EXPR :: assign :: Ljava/lang/Object :: v7 = CHECKCAST v6::CF,90238
90238 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v7::DD,90225
90241 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_ATOM_Handler(java.lang.String)::CD,90249:CD,90253:JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90249 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,90253:CL,71478
90253 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 18::CD,90255:CD,90264:CD,90293:CD,90297:CD,90302:CD,90391:CD,90397:CD,90401:CD,90407:CD,90411:CD,90417:CD,90421:CD,90427:CD,90432:CD,90442:JM,85074:JM,85077:JM,85071:CD,90452:CD,90457:CD,90481:CD,90513:CD,90545:CD,90546:CD,90552:JM,90849:JM,90854:JM,91039:JM,91055:CD,90568:CD,90573:CD,90688:CD,90698:CD,90742:CD,91114:CD,91116:CD,91119:JM,90339:JM,90964:JM,91014:JM,90984:JM,90815
90255 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(21), #(22))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90261 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v12 = p0 $this .current_chain::DD,90264
90265 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v14 = new org.biojava.nbio.structure.ChainImpl::DD,90269
90264 :: PRED :: IF :: Z :: if (v12 != #(null)) goto 68::CF,91114:CD,90265:JM,48721:JM,48709:JM,48728:JM,48714:CD,90275:CD,90285
90269 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v14::
90275 :: CALL :: call :: V :: v16.setChainID(v11)::CL,48752
90279 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .current_model::
90282 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v20 = p0 $this .current_chain::
90285 :: CALL :: call :: Z :: v22 = v19.add(v20)::
90293 :: CALL :: call :: Ljava/lang/String :: v26 = v24.getChainID()::JM,90302:CL,48319
90297 :: CALL :: call :: Z :: v28 = v11.equals(v26)::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90302 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 215::CF,91116:CD,90309:CD,90323:CD,90329:CD,90349:CD,90374:CD,90379:CD,91115
90309 :: CALL :: call :: V :: v29.addGroup(v30)::CL,48899
90323 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p0 $this .isKnownChain(v34, v35)::JM,90329:JM,91115:CL,103598
90329 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 138::CD,90330:CD,90334:CD,90339:CD,90343:CD,91115
90330 :: CALL :: call :: Ljava/lang/String :: v39 = v37.getChainID()::JM,90339:CL,48319
90334 :: CALL :: call :: Z :: v41 = v39.equals(v11)::JM,90339:JM,90849:JM,90545:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90339 :: PRED :: IF :: Z :: if (v41 != #(0)) goto 148::CF,91115:CD,90343
90343 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v44 = p0 $this .isKnownChain(v11, v42)::JM,91115:CL,103598
90349 :: PRED :: IF :: Z :: if (v45 != #(null)) goto 178::CD,90350:JM,48721:JM,48709:JM,48728:JM,48714:CD,90360
90350 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v46 = new org.biojava.nbio.structure.ChainImpl::DD,90354
90354 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v46::
90360 :: CALL :: call :: V :: v48.setChainID(v11)::CL,48752
90365 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v45::
90368 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .current_model::JM,90379
90371 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v51 = p0 $this .current_chain::JM,90379
90374 :: CALL :: call :: Z :: v53 = v50.contains(v51)::JM,90379
90379 :: PRED :: IF :: Z :: if (v53 != #(0)) goto 215::CF,91116:CD,90386
90380 :: EXPR :: reference :: Ljava/util/List :: v54 = p0 $this .current_model::
90383 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v55 = p0 $this .current_chain::
90386 :: CALL :: call :: Z :: v57 = v54.add(v55)::
90391 :: CALL :: call :: Ljava/lang/String :: v61 = p1 $line .substring(#(0), #(6))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90397 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90401 :: CALL :: call :: Ljava/lang/String :: v67 = p1 $line .substring(#(17), #(20))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90407 :: CALL :: call :: Ljava/lang/String :: v69 = v67.trim()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90411 :: CALL :: call :: Ljava/lang/String :: v72 = p1 $line .substring(#(22), #(26))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90417 :: CALL :: call :: Ljava/lang/String :: v74 = v72.trim()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90421 :: CALL :: call :: Ljava/lang/String :: v77 = p1 $line .substring(#(26), #(27))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90427 :: CALL :: call :: C :: v79 = v77.charAt(#(0))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90432 :: CALL :: call :: Ljava/lang/Character :: v81 = valueOf(v79)::JM,90849:JM,90545:JM,90854:JM,90457:JM,90815:JM,91039:JM,91055
90442 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v74)::JM,90849:JM,90545:JM,90854:JM,90457:JM,90815:JM,91039:JM,91055
90452 :: CALL :: call :: Z :: v92 = v63.equals(#(ATOM))::JM,90849:JM,90545:JM,90854:JM,90457:JM,90815:JM,91039:JM,91055
90457 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 322::CD,90458:CD,90463:CD,90467
90458 :: CALL :: call :: Ljava/lang/Character :: v101 = get1LetterCode(v69)::CL,103644
90463 :: CALL :: call :: Ljava/lang/Character :: v94 = get1LetterCode(v69)::JM,90467:CL,103644
90467 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 349::CD,90468
90468 :: CALL :: call :: Ljava/lang/Character :: v97 = valueOf(#(88))::
90478 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v103 = p0 $this .current_group::DD,90481
90481 :: PRED :: IF :: Z :: if (v103 != #(null)) goto 400::CD,90482:CD,90495:CD,90502:CD,90509:CF,90513
90482 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v105 = p0 $this .getNewGroup(v63, v102, v69)::CL,103713
90495 :: CALL :: call :: V :: v106.setPDBName(v69)::CL,88185:CL,88216
90502 :: CALL :: call :: V :: v108.setResidueNumber(v86)::CL,85618
90509 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v110)::CL,103791
90513 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 447::CF,90545:CD,90514:CD,90527:CD,90534:CD,90541
90514 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v113 = p0 $this .getNewGroup(v63, v102, v69)::CL,103713
90527 :: CALL :: call :: V :: v114.setPDBName(v69)::CL,88185:CL,88216
90534 :: CALL :: call :: V :: v116.setResidueNumber(v86)::CL,85618
90541 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v118)::CL,103791
90545 :: NORM :: declaration :: Ljava/lang/Character :: v120 = new java.lang.Character::JM,90545:JM,90854:JM,90457:JM,91039:JM,91055:JM,90631:JM,90849:JM,90339:JM,90964:JM,91014:JM,90984:JM,90815:JM,90302
90546 :: CALL :: call :: Ljava/lang/String :: v123 = p1 $line .substring(#(16), #(17))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90552 :: CALL :: call :: C :: v125 = v123.charAt(#(0))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90568 :: CALL :: call :: Z :: v131 = v86.equals(v129)::JM,90573:CL,35032
90573 :: PRED :: IF :: Z :: if (v131 != #(0)) goto 561::CD,90580:CD,90587:CD,90590:CD,90603:CD,90610:CD,90617:CD,90622:CD,90626:CD,90631:CD,91119
90580 :: CALL :: call :: V :: v157.addGroup(v158)::CL,48899
90587 :: CALL :: call :: V :: v160.trimToSize()::CL,87866
90590 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v163 = p0 $this .getNewGroup(v63, v102, v69)::CL,103713
90603 :: CALL :: call :: V :: v164.setPDBName(v69)::CL,88185:CL,88216
90610 :: CALL :: call :: V :: v166.setResidueNumber(v86)::CL,85618
90617 :: CALL :: call :: V :: p0 $this .addTohetGroupsDecider(v168)::CL,103791
90622 :: CALL :: call :: Ljava/lang/Character :: v133 = valueOf(#(32))::JM,90631
90626 :: CALL :: call :: Z :: v135 = v120.equals(v133)::JM,90631
90631 :: PRED :: IF :: Z :: if (v135 != #(0)) goto 646::CF,91119:CD,90634:CD,90642:CD,90647:CD,90652:CD,90657:CD,90665:CD,90673:CD,90677
90634 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v137 = new java.lang.StringBuilder::
90642 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v137.append(v140)::
90647 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( ))::
90652 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(#(null))::
90657 :: CALL :: call :: Ljava/lang/String :: v149 = v147.toString()::
90665 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v152 = p0 $this .getCorrectAltLocGroup(v120, v63, v102, v69)::JM,91119:CL,103885
90673 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v154 = v152.getChain()::JM,90677:CL,88476
90677 :: PRED :: IF :: Z :: if (v154 != #(null)) goto 646::CF,91119:CD,90681
90681 :: CALL :: call :: V :: v152.setChain(v155)::CL,56376
90685 :: EXPR :: reference :: I :: v171 = p0 $this .atomCount::DD,90688
90689 :: EXPR :: modify :: I :: p0 $this .atomCount = v172::
90688 :: EXPR :: assign :: Ljava/lang/Object :: v172 = v171 + #(1)::DD,90689
90692 :: EXPR :: reference :: I :: v173 = p0 $this .atomCount::DD,90698
90695 :: EXPR :: reference :: I :: v174 = p0 $this .my_ATOM_CA_THRESHOLD::DD,90698
90698 :: PRED :: IF :: Z :: if (v173 != v174) goto 713::CD,90701:CD,90709:CD,90714:CD,90719:CD,90730:CD,90733
90701 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v176 = new java.lang.StringBuilder::
90706 :: EXPR :: reference :: I :: v179 = p0 $this .my_ATOM_CA_THRESHOLD::
90709 :: CALL :: call :: Ljava/lang/StringBuilder :: v181 = v176.append(v179)::
90714 :: CALL :: call :: Ljava/lang/StringBuilder :: v184 = v181.append(#( atoms in this struct...))::
90719 :: CALL :: call :: Ljava/lang/String :: v186 = v184.toString()::
90727 :: EXPR :: reference :: Ljava/util/List :: v188 = p0 $this .seqResChains::
90730 :: CALL :: call :: V :: v188.clear()::
90733 :: CALL :: call :: V :: p0 $this .switchCAOnly()::CL,104131
90736 :: EXPR :: reference :: I :: v191 = p0 $this .atomCount::DD,90742
90739 :: EXPR :: reference :: I :: v192 = p0 $this .load_max_atoms::DD,90742
90742 :: PRED :: IF :: Z :: if (v191 != v192) goto 784::CD,90745:CD,90753:CD,90758:CD,90763:CD,90773:CD,90778:CD,90783:CD,90798
90745 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v339 = new java.lang.StringBuilder::
90750 :: EXPR :: reference :: I :: v342 = p0 $this .load_max_atoms::
90753 :: CALL :: call :: Ljava/lang/StringBuilder :: v344 = v339.append(v342)::
90758 :: CALL :: call :: Ljava/lang/StringBuilder :: v347 = v344.append(#(in this protein struc...))::
90763 :: CALL :: call :: Ljava/lang/String :: v349 = v347.toString()::
90773 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v352 = new java.lang.StringBuilder::
90778 :: CALL :: call :: Ljava/lang/StringBuilder :: v356 = v352.append(p1 $line )::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90783 :: CALL :: call :: Ljava/lang/String :: v358 = v356.toString()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90792 :: EXPR :: reference :: I :: v193 = p0 $this .atomCount::DD,90798
90795 :: EXPR :: reference :: I :: v194 = p0 $this .load_max_atoms::DD,90798
90798 :: PRED :: IF :: Z :: if (v193 <= v194) goto 800::CD,90800:CD,90809:JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90800 :: CALL :: call :: Ljava/lang/String :: v197 = p1 $line .substring(#(12), #(16))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90806 :: EXPR :: reference :: Z :: v198 = p0 $this .parseCAonly::DD,90809
90809 :: PRED :: IF :: Z :: if (v198 == #(0)) goto 835::CD,90810:CD,90815:CD,90827:CD,90831:JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,91039:JM,91055:JM,90302
90810 :: CALL :: call :: Z :: v201 = v197.equals(#( CA ))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90815 :: PRED :: IF :: Z :: if (v201 != #(0)) goto 835::CD,90827:CD,90831
90827 :: CALL :: call :: [Ljava/lang/String :: v204 = v202.getAcceptedAtomNames()::JM,90831:CL,104210
90831 :: PRED :: IF :: Z :: if (v204 == #(null)) goto 923::CD,90835:CD,90839:CD,90857:CD,90858:CD,90867:CD,90873:CD,90877:JM,103091:JM,103096:CD,90893:CD,90901:CD,90907:CD,90915:CD,90921:CD,90929:CD,90935:CD,90960:CD,90964:CD,90980:CD,90984:CD,91010:CD,91014:CD,91076:CD,91096:CD,91101:CD,91120:CD,91121:JM,90849:JM,90545:JM,90339:JM,90854:JM,90457:JM,90815:JM,91039:JM,91055:JM,90302
90835 :: CALL :: call :: [Ljava/lang/String :: v207 = v205.getAcceptedAtomNames()::JM,90839:CL,104210
90839 :: EXPR :: assign :: I :: v208 = v207.length::DD,90857
90841 :: EXPR :: reference :: Ljava/lang/Object :: v209 = v207[v215]::JM,90849:JM,90854
90845 :: CALL :: call :: Ljava/lang/String :: v211 = v197.trim()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90849 :: CALL :: call :: Z :: v213 = v209.equals(v211)::JM,90849:JM,90854:JM,90545:JM,90457:JM,91039:JM,91055
90854 :: PRED :: IF :: Z :: if (v213 == #(0)) goto 892::CD,90856:CD,90857:CD,91120:CD,91121
90857 :: PRED :: IF :: Z :: if (v215 < v208) goto 870::CF,91121:CD,90845:CD,90849:CD,90854
90856 :: EXPR :: assign :: Ljava/lang/Object :: v214 = v215 + #(1)::DD,91120
90858 :: PRED :: IF :: Z :: if (v216 != #(0)) goto 923::CD,90867:CD,90873:CD,90877:JM,103091:JM,103096:CD,90893:CD,90901:CD,90907:CD,90915:CD,90921:CD,90929:CD,90935:CD,90960:CD,90964:CD,90980:CD,90984:CD,91010:CD,91014:CD,91076:CD,91096:CD,91101:JM,90849:JM,90545:JM,90339:JM,90854:JM,90457:JM,90815:JM,91039:JM,91055:JM,90302
90867 :: CALL :: call :: Ljava/lang/String :: v219 = p1 $line .substring(#(6), #(11))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90873 :: CALL :: call :: Ljava/lang/String :: v221 = v219.trim()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90877 :: CALL :: call :: I :: v223 = parseInt(v221)::JM,90849:JM,90545:JM,90854:JM,90457:JM,91039:JM,91055
90893 :: CALL :: call :: Ljava/lang/String :: v229 = v197.trim()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90901 :: CALL :: call :: Ljava/lang/String :: v234 = p1 $line .substring(#(30), #(38))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90907 :: CALL :: call :: Ljava/lang/String :: v236 = v234.trim()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90915 :: CALL :: call :: Ljava/lang/String :: v241 = p1 $line .substring(#(38), #(46))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90921 :: CALL :: call :: Ljava/lang/String :: v243 = v241.trim()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90929 :: CALL :: call :: Ljava/lang/String :: v248 = p1 $line .substring(#(46), #(54))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90935 :: CALL :: call :: Ljava/lang/String :: v250 = v248.trim()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90960 :: CALL :: call :: I :: v259 = p1 $line .length()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90965 :: CALL :: call :: Ljava/lang/String :: v263 = p1 $line .substring(#(54), #(60))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90964 :: PRED :: IF :: Z :: if (v259 <= #(59)) goto 1082::CD,90965:CD,90971:JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90971 :: CALL :: call :: Ljava/lang/String :: v265 = v263.trim()::JM,90849:JM,90545:JM,90339:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90980 :: CALL :: call :: I :: v273 = p1 $line .length()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90985 :: CALL :: call :: Ljava/lang/String :: v277 = p1 $line .substring(#(60), #(66))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90984 :: PRED :: IF :: Z :: if (v273 <= #(65)) goto 1115::CD,90985:CD,90991:JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
90991 :: CALL :: call :: Ljava/lang/String :: v279 = v277.trim()::JM,90849:JM,90545:JM,90339:JM,91014:JM,90854:JM,90457:JM,90815:JM,91039:JM,91055:JM,90302
91010 :: CALL :: call :: I :: v289 = p1 $line .length()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
91015 :: CALL :: call :: Ljava/lang/String :: v314 = p1 $line .substring(#(76), #(78))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
91014 :: PRED :: IF :: Z :: if (v289 <= #(77)) goto 1168::CD,91015:CD,91021:CD,91025:CD,91031:CD,91035:CD,91039:CD,91067:JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91055:JM,90302
91021 :: CALL :: call :: Ljava/lang/String :: v316 = v314.trim()::JM,90849:JM,90545:JM,90339:JM,90854:JM,90457:JM,90815:JM,91039:JM,91055:JM,90302
91025 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v318 = valueOfIgnoreCase(v316)::CL,103254
91031 :: CALL :: call :: Ljava/lang/String :: v292 = v197.trim()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
91035 :: CALL :: call :: I :: v294 = v292.length()::JM,90849:JM,90545:JM,90854:JM,90457:JM,91039:JM,91055
91039 :: PRED :: IF :: Z :: if (v294 != #(4)) goto 1192::CD,91040:CD,91047:CD,91051:CD,91055:JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,90302
91040 :: CALL :: call :: Ljava/lang/String :: v306 = v197.substring(#(0), #(1))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
91047 :: CALL :: call :: Ljava/lang/String :: v297 = v197.trim()::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
91051 :: CALL :: call :: I :: v299 = v297.length()::JM,90849:JM,90545:JM,90854:JM,90457:JM,91039:JM,91055
91055 :: PRED :: IF :: Z :: if (v299 <= #(1)) goto 1224::CD,91056:CD,91062:JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
91056 :: CALL :: call :: Ljava/lang/String :: v302 = v197.substring(#(0), #(2))::JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
91062 :: CALL :: call :: Ljava/lang/String :: v304 = v302.trim()::JM,90849:JM,90545:JM,90854:JM,90457:JM,91039:JM,91055
91067 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v309 = valueOfIgnoreCase(v307)::CL,103254
91077 :: CALL :: call :: V :: v170.addAtom(v224)::CL,88708
91076 :: PRED :: IF :: Z :: if (v170 == #(null)) goto 1262::CD,91077:CD,91085
91085 :: CALL :: call :: V :: v323.addAtom(v224)::CL,88708
91096 :: CALL :: call :: Z :: v331 = v327.hasAtom(v329)::JM,91101:CL,88898
91101 :: PRED :: IF :: Z :: if (v331 != #(0)) goto 1300::CD,91105
91105 :: CALL :: call :: V :: v332.addAtom(v224)::CL,88708
91115 :: EXPR :: assign :: null :: PHI v45 = v37, v44::DD,90349:DD,90365
91114 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1)::DD,91116
91116 :: EXPR :: assign :: null :: PHI v58 = v23, #(1), #(1)::DD,90513:JM,90849:JM,90545:JM,90339:JM,90964:JM,91014:JM,90854:JM,90457:JM,90984:JM,90815:JM,91039:JM,91055:JM,90302
91119 :: EXPR :: assign :: null :: PHI v170 = #(null), #(null), v152, v152::DD,91076
91121 :: EXPR :: assign :: null :: PHI v216 = #(1), #(0)::DD,90858
91120 :: EXPR :: assign :: null :: PHI v215 = #(0), v214::DD,90856:DD,90857
91440 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SEQRES_Handler(java.lang.String)::CD,91445:CD,91451:CD,91455:CD,91461:CD,91467:CD,91471:CD,91479:CD,91487:CD,91492:CD,91497
91445 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(0), #(6))::JM,91497
91451 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,91497
91455 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(#(11), #(12))::JM,91497
91461 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(17))::JM,91497
91467 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::JM,91497
91471 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $line .substring(#(18))::JM,91497
91476 :: EXPR :: reference :: I :: v23 = p0 $this .lengthCheck::DD,91479
91479 :: PRED :: IF :: Z :: if (v23 != #(-1)) goto 58::CF,91487:CD,91480:JM,91497
91480 :: CALL :: call :: I :: v26 = parseInt(v19)::JM,91497
91487 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v27 = new java.util.StringTokenizer::JM,91582
91492 :: CALL :: call :: Z :: v32 = v9.equals(#(SEQRES))::JM,91497
91497 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 87::CD,91502:CD,91514:CD,91578:CD,91582:CD,91586:CD,91592:CD,91607:CD,91620
91502 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v35 = p0 $this .isKnownChain(v13, v33)::JM,91508:CL,103598
91508 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v35::
91511 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v36 = p0 $this .current_chain::DD,91514
91515 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v37 = new org.biojava.nbio.structure.ChainImpl::DD,91519
91514 :: PRED :: IF :: Z :: if (v36 != #(null)) goto 211::CD,91515:JM,48721:JM,48709:JM,48728:JM,48714:CD,91525:JM,91582
91519 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Chain :: p0 $this .current_chain = v37::
91525 :: CALL :: call :: V :: v39.setChainID(v13)::CL,48752
91530 :: CALL :: call :: Ljava/lang/String :: v44 = v27.nextToken()::
91534 :: CALL :: call :: Ljava/lang/Character :: v46 = get1LetterCode(v44)::CL,103644
91538 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v49 = p0 $this .getNewGroup(#(ATOM), v46, v44)::JM,91545:CL,103713
91545 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .current_group = v49::
91551 :: CALL :: call :: V :: v50.setPDBName(v44)::CL,88185:CL,88216
91555 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .current_group::DD,91558
91559 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 197::CD,91564
91558 :: EXPR :: assign :: Z :: v53=v52 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,91559
91564 :: CALL :: call :: V :: v55.setRecordType(#(SEQRES))::CL,89906
91574 :: CALL :: call :: V :: v57.addGroup(v58)::CL,48899
91578 :: CALL :: call :: Z :: v42 = v27.hasMoreTokens()::JM,91582
91582 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 129::CD,91530:CD,91534:CD,91538:CD,91551:CD,91558:CD,91559:CD,91574:CD,91578
91586 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v63 = p0 $this .isKnownChain(v13, v61)::JM,91592:CL,103598
91593 :: EXPR :: reference :: Ljava/util/List :: v64 = p0 $this .seqResChains::
91592 :: PRED :: IF :: Z :: if (v63 != #(null)) goto 248::CD,91599
91596 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v65 = p0 $this .current_chain::
91599 :: CALL :: call :: Z :: v67 = v64.add(v65)::
91604 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v68 = p0 $this .current_group::DD,91607
91607 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 265::CD,91611
91611 :: CALL :: call :: V :: v69.trimToSize()::CL,87866
91620 :: CALL :: call :: I :: v72 = parseInt(v19)::JM,91497
91704 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MODEL_Handler(java.lang.String)::CD,91712:CD,91716
91712 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,91716:CL,71478
91716 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,91721
91718 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v8 = p0 $this .current_chain::DD,91721
91721 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 117::CD,91725:CD,91752:CD,91758:CD,91776:CD,91780
91722 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v10 = p0 $this .current_group::DD,91725
91725 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 49::CD,91732:CD,91739
91732 :: CALL :: call :: V :: v11.addGroup(v12)::CL,48899
91739 :: CALL :: call :: V :: v14.trimToSize()::CL,87866
91752 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v21 = p0 $this .isKnownChain(v18, v19)::JM,91758:CL,103598
91759 :: EXPR :: reference :: Ljava/util/List :: v22 = p0 $this .current_model::
91758 :: PRED :: IF :: Z :: if (v21 != #(null)) goto 84::CD,91765
91762 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v23 = p0 $this .current_chain::
91765 :: CALL :: call :: Z :: v25 = v22.add(v23)::
91776 :: CALL :: call :: V :: v26.addModel(v27)::CL,48117
91780 :: NORM :: declaration :: Ljava/util/ArrayList :: v29 = new java.util.ArrayList::
91820 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HEADER_Handler(java.lang.String)::CD,91825:CD,91829:CD,91833:CD,91856:CD,91890:CD,91895:CD,91900:CD,91905:CD,91913:CD,91969:JM,91857:JM,91984:JM,91929:JM,91834:JM,91914
91825 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .trim()::JM,91969:JM,91857:JM,91856:JM,91984:JM,91833:JM,91913:JM,91929:JM,91834:JM,91914
91829 :: CALL :: call :: I :: v8 = v6.length()::JM,91969:JM,91857:JM,91856:JM,91984:JM,91833:JM,91913:JM,91929:JM,91834:JM,91914
91833 :: PRED :: IF :: Z :: if (v8 <= #(10)) goto 52::CD,91834:CD,91839:CD,91845:CD,91852:JM,91969:JM,91857:JM,91984:JM,91913:JM,91929:JM,91914:CF,91856
91834 :: CALL :: call :: I :: v12 = min(v8, #(50))::JM,91969:JM,91857:JM,91856:JM,91984:JM,91913:JM,91929:JM,91834:JM,91914
91839 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), v12)::JM,91969:JM,91857:JM,91856:JM,91984:JM,91833:JM,91913:JM,91929:JM,91834:JM,91914
91845 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::JM,91969:JM,91857:JM,91856:JM,91984:JM,91833:JM,91913:JM,91929:JM,91834:JM,91914
91852 :: CALL :: call :: V :: v17.setClassification(v16)::CL,90071
91857 :: CALL :: call :: I :: v22 = min(v8, #(59))::JM,91969:JM,91857:JM,91984:JM,91913:JM,91929:JM,91834:JM,91914
91856 :: PRED :: IF :: Z :: if (v8 <= #(50)) goto 131::CD,91857:CD,91862:CD,91868:CD,91883:JM,91969:JM,91984:JM,91929:JM,91834:JM,91914:CF,91913
91862 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(50), v22)::JM,91969:JM,91857:JM,91856:JM,91984:JM,91833:JM,91913:JM,91929:JM,91834:JM,91914
91868 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::JM,91969:JM,91857:JM,91856:JM,91984:JM,91833:JM,91913:JM,91929:JM,91834:JM,91914
91883 :: CALL :: call :: V :: v30.setDepDate(v29)::CL,88973
91890 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
91895 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v26)::JM,91857:JM,91984:JM,91929:JM,91834:JM,91914
91900 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#('. Will continue with...))::
91905 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
91913 :: PRED :: IF :: Z :: if (v8 <= #(62)) goto 210::CD,91914:CD,91919:CD,91925:CD,91934:CD,91942:CD,91947:CD,91965:JM,91857:JM,91984:JM,91929:JM,91834:CF,91969
91914 :: CALL :: call :: I :: v50 = min(v8, #(66))::JM,91969:JM,91857:JM,91984:JM,91929:JM,91834:JM,91914
91919 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $line .substring(#(62), v50)::JM,91969:JM,91857:JM,91856:JM,91984:JM,91833:JM,91913:JM,91929:JM,91834:JM,91914
91925 :: CALL :: call :: Ljava/lang/String :: v54 = v52.trim()::JM,91969:JM,91857:JM,91856:JM,91984:JM,91833:JM,91913:JM,91929:JM,91834:JM,91914
91929 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pdbId = v54::
91934 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
91939 :: EXPR :: reference :: Ljava/lang/String :: v59 = p0 $this .pdbId::
91942 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v56.append(v59)::
91947 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
91965 :: CALL :: call :: V :: v67.setIdCode(v54)::CL,78411
91969 :: PRED :: IF :: Z :: if (v8 <= #(66)) goto 265::CD,91973:CD,91979:CD,91984
91970 :: EXPR :: reference :: Ljava/lang/String :: v70 = p0 $this .pdbId::JM,91984
91973 :: CALL :: call :: Ljava/lang/String :: v74 = p1 $line .substring(#(72), #(76))::JM,91969:JM,91857:JM,91856:JM,91984:JM,91833:JM,91913:JM,91929:JM,91834:JM,91914
91979 :: CALL :: call :: Z :: v76 = v70.equals(v74)::JM,91984:JM,91969:JM,91857:JM,91856:JM,91833:JM,91913:JM,91929:JM,91834:JM,91914
91984 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 265::CD,91990:CD,91994:CD,92002:CD,92007:CD,92011
91990 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
91994 :: CALL :: call :: Ljava/lang/String :: v83 = valueOf(v81)::
92002 :: CALL :: call :: Ljava/lang/StringBuilder :: v87 = v80.append(#( is a LEGACY entry - ...))::
92007 :: CALL :: call :: Ljava/lang/String :: v89 = v87.toString()::
92011 :: CALL :: call :: V :: v79.println(v89)::
92076 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_AUTHOR_Handler(java.lang.String)::CD,92081:CD,92086:CD,92093:CD,92097
92081 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $line .substring(#(10))::
92086 :: CALL :: call :: Ljava/lang/String :: v8 = v6.trim()::
92093 :: CALL :: call :: Ljava/lang/String :: v11 = v9.getAuthors()::JM,92097:CL,90204
92097 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 33::CF,92106:CD,92101:CD,92107:CD,92115:CD,92120:CD,92127
92101 :: CALL :: call :: V :: v23.setAuthors(v8)::CL,90213
92107 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v11)::
92106 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
92115 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v13.append(v8)::
92120 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
92127 :: CALL :: call :: V :: v21.setAuthors(v20)::CL,90213
92147 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TITLE_Handler(java.lang.String)::CD,92152:CD,92156:CD,92185:CD,92189:CD,92235:CD,92236:CD,92244:CD,92249:CD,92256:CD,92261
92152 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,92261:JM,92156
92157 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(80))::JM,92261:JM,92156
92156 :: PRED :: IF :: Z :: if (v5 <= #(79)) goto 28::CD,92157:CD,92163:CD,92168:CD,92172:CD,92178:CD,92261:JM,92156
92163 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::JM,92261
92168 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,92261:JM,92156
92172 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(10), v9)::JM,92261:JM,92156
92178 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,92261
92185 :: CALL :: call :: Ljava/lang/String :: v22 = v20.getTitle()::JM,92195:JM,92201:JM,92189:CL,104230
92189 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 116::CD,92190:CD,92195:JM,92201
92190 :: CALL :: call :: Z :: v26 = v22.equals(#())::JM,92195:JM,92201
92195 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 116::CD,92196:CD,92201:JM,92195
92196 :: CALL :: call :: Z :: v30 = v22.endsWith(#(-))::JM,92195:JM,92201
92201 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 88::CF,92216:CF,92202:CD,92203:CD,92211:CD,92217:CD,92225:CD,92230
92203 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v22)::
92202 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
92211 :: CALL :: call :: Ljava/lang/String :: v45 = v40.toString()::
92217 :: CALL :: call :: Ljava/lang/String :: v33 = valueOf(v22)::
92216 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
92225 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(#( ))::
92230 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
92235 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v47 = new java.lang.StringBuilder::
92236 :: CALL :: call :: Ljava/lang/String :: v49 = valueOf(v46)::
92244 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v19)::
92249 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::
92256 :: CALL :: call :: V :: v55.setTitle(v54)::CL,78391
92261 :: EXPR :: assign :: null :: PHI v19 = v18, v13::
92297 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_JRNL_Handler(java.lang.String)::CD,92302:CD,92306:CD,92307:CD,92311:CD,92312:CD,92321:CD,92326:JM,92337
92302 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,92337:JM,92306:JM,92311:JM,92326
92307 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,92337:JM,92306:JM,92311:JM,92326
92306 :: EXPR :: assign :: Ljava/lang/Object :: v7 = v5 - #(8)::JM,92337:JM,92306:JM,92311:JM,92326
92311 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 - #(4)::JM,92337:JM,92306:JM,92311:JM,92326
92312 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v7, v11)::JM,92337:JM,92306:JM,92311:JM,92326
92318 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .pdbId::JM,92326
92321 :: CALL :: call :: Z :: v16 = v13.equals(v14)::JM,92337:JM,92326
92326 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 66::CD,92333:CD,92337:CD,92338:CD,92347:CD,92356
92333 :: CALL :: call :: I :: v25 = p1 $line .length()::JM,92337:JM,92306:JM,92311:JM,92326
92337 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(8)::JM,92337:JM,92306:JM,92311:JM,92326
92338 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(0), v26)::JM,92337:JM,92306:JM,92311:JM,92326
92344 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .journalLines::
92347 :: CALL :: call :: Z :: v31 = v29.add(v28)::JM,92326
92353 :: EXPR :: reference :: Ljava/util/List :: v18 = p0 $this .journalLines::
92356 :: CALL :: call :: Z :: v20 = v18.add(p1 $line )::JM,92337:JM,92306:JM,92311:JM,92326
92382 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_EXPDTA_Handler(java.lang.String)::CD,92387:CD,92391:CD,92412:CD,92417:CD,92432:CD,92435
92387 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,92391
92391 :: PRED :: IF :: Z :: if (v5 <= #(69)) goto 27::CD,92392:CD,92398:CD,92403:CD,92408:JM,92391
92392 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(10), #(70))::JM,92391
92398 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
92403 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $line .substring(#(10))::JM,92391
92408 :: CALL :: call :: Ljava/lang/String :: v11 = v9.trim()::
92412 :: CALL :: call :: [Ljava/lang/String :: v20 = v17.split(#(;\s+))::JM,92417
92417 :: EXPR :: assign :: I :: v21 = v20.length::DD,92432
92426 :: CALL :: call :: Z :: v26 = v24.setExperimentalTechnique(v23)::CL,89026
92431 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,92435
92432 :: PRED :: IF :: Z :: if (v29 < v21) goto 57::CD,92426:CD,92431:CD,92435
92435 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,92431:DD,92432
92461 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CRYST1_Handler(java.lang.String)::CD,92466:CD,92470:CD,92565:CD,92570:CD,92574:CD,92579:CD,92584:CD,92589:CD,92739:JM,92740:JM,92602
92466 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,92740:JM,92470:JM,92602
92470 :: PRED :: IF :: Z :: if (v5 >= #(63)) goto 31::CD,92478:CD,92484:CD,92492:CD,92498:CD,92506:CD,92512:CD,92520:CD,92526:CD,92534:CD,92540:CD,92548:CD,92554:CD,92598:CD,92602:CD,92633:CD,92638:CD,92643:CD,92648:CD,92653:CD,92658:CD,92662:CD,92666:CD,92686:CD,92690:CD,92740:JM,92470
92478 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(6), #(15))::JM,92740:JM,92470:JM,92602
92484 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::JM,92740:JM,92602
92492 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(15), #(24))::JM,92740:JM,92470:JM,92602
92498 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,92740:JM,92602
92506 :: CALL :: call :: Ljava/lang/String :: v25 = p1 $line .substring(#(24), #(33))::JM,92740:JM,92470:JM,92602
92512 :: CALL :: call :: Ljava/lang/String :: v27 = v25.trim()::JM,92740:JM,92602
92520 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(33), #(40))::JM,92740:JM,92470:JM,92602
92526 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::JM,92740:JM,92602
92534 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(40), #(47))::JM,92740:JM,92470:JM,92602
92540 :: CALL :: call :: Ljava/lang/String :: v41 = v39.trim()::JM,92740:JM,92602
92548 :: CALL :: call :: Ljava/lang/String :: v46 = p1 $line .substring(#(47), #(54))::JM,92740:JM,92470:JM,92602
92554 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::JM,92740:JM,92602
92565 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
92570 :: CALL :: call :: Ljava/lang/String :: v57 = v51.getMessage()::
92574 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
92579 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v59.append(#() from line and ignor...))::
92584 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v62.append(p1 $line )::JM,92740:JM,92470:JM,92602
92589 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,92740:JM,92602
92598 :: CALL :: call :: I :: v69 = p1 $line .length()::JM,92740:JM,92470:JM,92602
92603 :: CALL :: call :: Ljava/lang/String :: v79 = p1 $line .substring(#(55), #(66))::JM,92740:JM,92470:JM,92602
92602 :: PRED :: IF :: Z :: if (v69 < #(66)) goto 194::CD,92603:CD,92609:CD,92614:CD,92618:CD,92624:CD,92740:JM,92470:JM,92602
92609 :: CALL :: call :: Ljava/lang/String :: v81 = v79.trim()::JM,92740
92614 :: CALL :: call :: I :: v73 = p1 $line .length()::JM,92740:JM,92470:JM,92602
92618 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(55), v73)::JM,92740:JM,92470:JM,92602
92624 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,92740
92633 :: CALL :: call :: V :: v83.setA(v85)::CL,89079
92638 :: CALL :: call :: V :: v83.setB(v87)::CL,89090
92643 :: CALL :: call :: V :: v83.setC(v89)::CL,89101
92648 :: CALL :: call :: V :: v83.setAlpha(v91)::CL,89112
92653 :: CALL :: call :: V :: v83.setBeta(v93)::CL,89132
92658 :: CALL :: call :: V :: v83.setGamma(v95)::CL,89152
92662 :: CALL :: call :: Z :: v98 = v83.isCellReasonable()::JM,92666:CL,89172
92666 :: PRED :: IF :: Z :: if (v98 != #(0)) goto 289::CD,92669:CD,92682
92669 :: CALL :: call :: Ljava/lang/Double :: v106 = valueOf(#(10.0 d))::JM,92669
92682 :: CALL :: call :: V :: v100.setCrystalCell(v83)::CL,89216
92686 :: CALL :: call :: Lorg/biojava/nbio/structure/xtal/SpaceGroup :: v109 = getSpaceGroup(v82)::JM,92690:CL,89227
92690 :: PRED :: IF :: Z :: if (v109 != #(null)) goto 353::CD,92693:CD,92698:CD,92703:CD,92708:CD,92719:CD,92727:CD,92734
92693 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v116 = new java.lang.StringBuilder::
92698 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v116.append(v82)::
92703 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#(' not recognised as a...))::
92708 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
92719 :: CALL :: call :: V :: v127.setNonStandardSg(#(1))::CL,89306
92727 :: CALL :: call :: V :: v111.setSpaceGroup(v109)::CL,89317
92734 :: CALL :: call :: V :: v113.setNonStandardSg(#(0))::CL,89306
92739 :: EXPR :: assign :: Ljava/lang/Exception :: v51 = catch <exc>::
92740 :: EXPR :: assign :: null :: PHI v82 = v81, v77::
92815 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_MTRIXn_Handler(java.lang.String)::CD,92820:CD,92824:JM,92897:JM,93065:JM,92988
92820 :: CALL :: call :: I :: v5 = p1 $line .length()::JM,92897:JM,93065:JM,92824:JM,92988
92824 :: PRED :: IF :: Z :: if (v5 >= #(60)) goto 25::CD,92832:CD,92838:CD,92842:CD,92852:CD,92862:CD,92872:CD,92882:CD,92888:CD,92892:CD,92897:CD,92908:CD,93065:JM,92824:JM,92988
92832 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(5), #(6))::JM,92897:JM,93065:JM,92824:JM,92988
92838 :: CALL :: call :: I :: v12 = parseInt(v10)::JM,92897:JM,93065:JM,92988
92842 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(10), #(20))::JM,92897:JM,93065:JM,92824:JM,92988
92852 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(20), #(30))::JM,92897:JM,93065:JM,92824:JM,92988
92862 :: CALL :: call :: Ljava/lang/String :: v26 = p1 $line .substring(#(30), #(40))::JM,92897:JM,93065:JM,92824:JM,92988
92872 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(45), #(55))::JM,92897:JM,93065:JM,92824:JM,92988
92882 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(59), #(60))::JM,92897:JM,93065:JM,92824:JM,92988
92888 :: CALL :: call :: Ljava/lang/String :: v40 = v38.trim()::JM,92897:JM,93065:JM,92988
92892 :: CALL :: call :: Z :: v43 = v40.equals(#())::JM,92897:JM,93065
92897 :: PRED :: IF :: Z :: if (v43 != #(0)) goto 122::CF,93065:CD,92898:CD,92904:JM,92897:JM,92824:JM,92988
92898 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(59), #(60))::JM,92897:JM,93065:JM,92824:JM,92988
92904 :: CALL :: call :: I :: v47 = parseInt(v45)::JM,92897:JM,93065:JM,92988
92908 :: PRED :: IF :: Z :: if (v48 != #(1)) goto 127::CD,92913:CD,92924:CD,92988
92910 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .ncsOperators::DD,92913
92913 :: PRED :: IF :: Z :: if (v50 != #(null)) goto 145::CD,92914
92914 :: NORM :: declaration :: Ljava/util/ArrayList :: v52 = new java.util.ArrayList::DD,92918
92918 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ncsOperators = v52::
92921 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v54 = p0 $this .currentNcsOp::DD,92924
92925 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v55 = new javax.vecmath.Matrix4d::DD,92945
92924 :: PRED :: IF :: Z :: if (v54 != #(null)) goto 179::CD,92925
92945 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .currentNcsOp = v55::
92989 :: EXPR :: reference :: Ljava/util/List :: v73 = p0 $this .ncsOperators::
92988 :: PRED :: IF :: Z :: if (v12 != #(3)) goto 323::CD,92995
92992 :: EXPR :: reference :: Ljavax/vecmath/Matrix4d :: v74 = p0 $this .currentNcsOp::
92995 :: CALL :: call :: Z :: v76 = v73.add(v74)::
93065 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,92908
93169 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_Handler(java.lang.String)::CD,93174:CD,93260:CD,93265:CD,93270:CD,93275:CD,93280:CD,93317:CD,93410:JM,93186:JM,93333:JM,93179:JM,93197:JM,93230
93175 :: CALL :: call :: I :: v6 = p1 $line .length()::JM,93186:JM,93333:JM,93179:JM,93197:JM,93230
93174 :: PRED :: IF :: Z :: if (p1 $line  == #(null)) goto 13::CD,93175:CD,93179:JM,93186:JM,93333:JM,93197:JM,93230
93179 :: PRED :: IF :: Z :: if (v6 >= #(11)) goto 18::CD,93181:CD,93186:JM,93333:JM,93179:JM,93197:JM,93230
93181 :: CALL :: call :: Z :: v10 = p1 $line .startsWith(#(REMARK 800))::JM,93186:JM,93333:JM,93179:JM,93197:JM,93230
93187 :: CALL :: call :: V :: p0 $this .pdb_REMARK_800_Handler(p1 $line )::CL,104239
93186 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 36::CD,93187:CD,93192:CD,93197:JM,93186:JM,93333:JM,93179:JM,93230
93192 :: CALL :: call :: Z :: v14 = p1 $line .startsWith(#(REMARK 350))::JM,93186:JM,93333:JM,93179:JM,93197:JM,93230
93197 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 85::CD,93201:CD,93205:CD,93225:CD,93230:JM,93186:JM,93333:JM,93179:JM,93197
93201 :: CALL :: call :: Z :: v106 = v104.isParseBioAssembly()::JM,93205:CL,73597
93205 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 342::CD,93209:CD,93220
93206 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v107 = p0 $this .bioAssemblyParser::DD,93209
93209 :: PRED :: IF :: Z :: if (v107 != #(null)) goto 71::JM,104663:JM,104650
93220 :: CALL :: call :: V :: v110.pdb_REMARK_350_Handler(p1 $line )::CL,104687
93225 :: CALL :: call :: Z :: v17 = p1 $line .startsWith(#(REMARK   3   FREE R VALUE))::JM,93186:JM,93333:JM,93179:JM,93197:JM,93230
93231 :: CALL :: call :: Ljava/util/regex/Pattern :: v62 = compile(#(^REMARK   3   FREE R ...))::
93230 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 223::CD,93231:CD,93235:CD,93240:CD,93244:CD,93288:CD,93292:CD,93297:CD,93301:CD,93328:CD,93333:JM,93186:JM,93179:JM,93197:JM,93230
93235 :: CALL :: call :: Ljava/util/regex/Matcher :: v64 = v62.matcher(p1 $line )::JM,93244
93240 :: CALL :: call :: Z :: v66 = v64.matches()::JM,93244
93245 :: CALL :: call :: Ljava/lang/String :: v68 = v64.group(#(1))::JM,93244
93244 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 166::CD,93245:JM,93244
93260 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
93265 :: CALL :: call :: Ljava/lang/String :: v77 = v64.group(#(1))::JM,93244
93270 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v73.append(v77)::
93275 :: CALL :: call :: Ljava/lang/StringBuilder :: v82 = v79.append(#( does not look like a...))::
93280 :: CALL :: call :: Ljava/lang/String :: v84 = v82.toString()::
93288 :: CALL :: call :: Ljava/util/regex/Pattern :: v89 = compile(#(^REMARK   3   FREE R ...))::
93292 :: CALL :: call :: Ljava/util/regex/Matcher :: v91 = v89.matcher(p1 $line )::JM,93301
93297 :: CALL :: call :: Z :: v93 = v91.matches()::JM,93301
93301 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 342::CD,93302:JM,93301
93302 :: CALL :: call :: Ljava/lang/String :: v95 = v91.group(#(1))::JM,93301
93317 :: CALL :: call :: Ljava/lang/String :: v102 = v91.group(#(1))::JM,93301
93328 :: CALL :: call :: Z :: v20 = p1 $line .startsWith(#(REMARK   3   RESOLUTI...))::JM,93186:JM,93333:JM,93179:JM,93197:JM,93230
93333 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 342::CD,93334:CD,93338:CD,93343:CD,93347
93334 :: CALL :: call :: Ljava/util/regex/Pattern :: v23 = compile(#(^REMARK   3   RESOLUT...))::
93338 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v23.matcher(p1 $line )::JM,93347
93343 :: CALL :: call :: Z :: v27 = v25.matches()::JM,93347
93347 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 342::CD,93348:CD,93360:CD,93364:CD,93365:CD,93403:JM,93347
93348 :: CALL :: call :: Ljava/lang/String :: v30 = v25.group(#(1))::JM,93347
93360 :: CALL :: call :: F :: v35 = v33.getResolution()::JM,93364:CL,90082
93365 :: PRED :: IF :: Z :: if (v37 == #(0)) goto 313::CD,93368:CD,93377:CD,93381:CD,93389
93364 :: EXPR :: assign :: Z :: v37 = v35 < #(99.0 f)::DD,93365
93368 :: CALL :: call :: Ljava/lang/String :: v41 = v25.group(#(1))::JM,93347
93377 :: CALL :: call :: F :: v46 = v44.getResolution()::JM,93381:CL,90082
93381 :: CALL :: call :: Ljava/lang/Float :: v48 = valueOf(v46)::JM,93381
93389 :: CALL :: call :: Ljava/lang/String :: v50 = format(#(%4.2f), v43)::
93403 :: CALL :: call :: V :: v52.setResolution(v32)::CL,89015
93410 :: CALL :: call :: Ljava/lang/String :: v58 = v25.group(#(1))::JM,93347
93494 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_CONECT_Handler(java.lang.String)::CD,93502:CD,93693:CD,93698:CD,93702:CD,93707:CD,93712:CD,93717:CD,93727
93499 :: EXPR :: reference :: Z :: v4 = p0 $this .atomOverflow::DD,93502
93502 :: PRED :: IF :: Z :: if (v4 == #(0)) goto 9::CD,93507:CD,93511
93507 :: CALL :: call :: Z :: v8 = v6.isHeaderOnly()::JM,93511:CL,71478
93511 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,93513:CD,93519:CD,93523:CD,93527:CD,93534:CD,93541:CD,93548:CD,93555:CD,93562:CD,93569:CD,93576:CD,93583:CD,93590:CD,93597:CD,93606:CD,93612:CD,93619:CD,93626:CD,93633:CD,93640:CD,93647:CD,93654:CD,93661:CD,93668:CD,93675:CD,93685
93513 :: CALL :: call :: Ljava/lang/String :: v12 = p1 $line .substring(#(6), #(11))::
93519 :: CALL :: call :: Ljava/lang/String :: v14 = v12.trim()::
93523 :: CALL :: call :: I :: v16 = parseInt(v14)::
93527 :: CALL :: call :: Ljava/lang/Integer :: v19 = p0 $this .conect_helper(p1 $line , #(11), #(16))::JM,93612:CL,104863
93534 :: CALL :: call :: Ljava/lang/Integer :: v22 = p0 $this .conect_helper(p1 $line , #(16), #(21))::JM,93619:CL,104863
93541 :: CALL :: call :: Ljava/lang/Integer :: v25 = p0 $this .conect_helper(p1 $line , #(21), #(26))::JM,93626:CL,104863
93548 :: CALL :: call :: Ljava/lang/Integer :: v28 = p0 $this .conect_helper(p1 $line , #(26), #(31))::JM,93633:CL,104863
93555 :: CALL :: call :: Ljava/lang/Integer :: v31 = p0 $this .conect_helper(p1 $line , #(31), #(36))::JM,93640:CL,104863
93562 :: CALL :: call :: Ljava/lang/Integer :: v34 = p0 $this .conect_helper(p1 $line , #(36), #(41))::JM,93647:CL,104863
93569 :: CALL :: call :: Ljava/lang/Integer :: v37 = p0 $this .conect_helper(p1 $line , #(41), #(46))::JM,93654:CL,104863
93576 :: CALL :: call :: Ljava/lang/Integer :: v40 = p0 $this .conect_helper(p1 $line , #(46), #(51))::JM,93661:CL,104863
93583 :: CALL :: call :: Ljava/lang/Integer :: v43 = p0 $this .conect_helper(p1 $line , #(51), #(56))::JM,93668:CL,104863
93590 :: CALL :: call :: Ljava/lang/Integer :: v46 = p0 $this .conect_helper(p1 $line , #(56), #(61))::JM,93675:CL,104863
93597 :: NORM :: declaration :: Ljava/util/HashMap :: v47 = new java.util.HashMap::
93606 :: CALL :: call :: Ljava/lang/Object :: v53 = v47.put(#(atomserial), v50)::
93613 :: CALL :: call :: Ljava/lang/Object :: v57 = v47.put(#(bond1), v19)::
93612 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 185::CD,93613:CF,93619
93619 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 201::CD,93620:CF,93626
93620 :: CALL :: call :: Ljava/lang/Object :: v60 = v47.put(#(bond2), v22)::
93627 :: CALL :: call :: Ljava/lang/Object :: v63 = v47.put(#(bond3), v25)::
93626 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 217::CD,93627:CF,93633
93633 :: PRED :: IF :: Z :: if (v28 == #(null)) goto 233::CD,93634:CF,93640
93634 :: CALL :: call :: Ljava/lang/Object :: v66 = v47.put(#(bond4), v28)::
93641 :: CALL :: call :: Ljava/lang/Object :: v69 = v47.put(#(hydrogen1), v31)::
93640 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 249::CD,93641:CF,93647
93647 :: PRED :: IF :: Z :: if (v34 == #(null)) goto 265::CD,93648:CF,93654
93648 :: CALL :: call :: Ljava/lang/Object :: v72 = v47.put(#(hydrogen2), v34)::
93655 :: CALL :: call :: Ljava/lang/Object :: v75 = v47.put(#(salt1), v37)::
93654 :: PRED :: IF :: Z :: if (v37 == #(null)) goto 281::CD,93655:CF,93661
93661 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 297::CD,93662:CF,93668
93662 :: CALL :: call :: Ljava/lang/Object :: v78 = v47.put(#(hydrogen3), v40)::
93669 :: CALL :: call :: Ljava/lang/Object :: v81 = v47.put(#(hydrogen4), v43)::
93668 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 313::CD,93669:CF,93675
93675 :: PRED :: IF :: Z :: if (v46 == #(null)) goto 328::CD,93676
93676 :: CALL :: call :: Ljava/lang/Object :: v84 = v47.put(#(salt2), v46)::
93682 :: EXPR :: reference :: Ljava/util/List :: v85 = p0 $this .connects::
93685 :: CALL :: call :: Z :: v87 = v85.add(v47)::
93693 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
93698 :: CALL :: call :: Ljava/lang/String :: v94 = v88.getMessage()::
93702 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
93707 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#(), at line : ))::
93712 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(p1 $line )::
93717 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
93727 :: EXPR :: assign :: Ljava/lang/Exception :: v88 = catch <exc>::
93857 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REVDAT_Handler(java.lang.String)::CD,93865:CD,93869:CD,93909:CD,93914:CD,93919:CD,93924
93865 :: CALL :: call :: Ljava/util/Date :: v6 = v4.getModDate()::JM,93869:CL,104913
93869 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,93870:CD,93875:CD,93880:CD,93881:CD,93887:CD,93902
93870 :: NORM :: declaration :: Ljava/util/Date :: v8 = new java.util.Date::
93875 :: CALL :: call :: Z :: v12 = v6.equals(v8)::JM,93880
93881 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $line .substring(#(13), #(22))::
93880 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 94::CD,93881:CD,93887:CD,93902
93887 :: CALL :: call :: Ljava/lang/String :: v19 = v17.trim()::
93902 :: CALL :: call :: V :: v23.setModDate(v22)::CL,88984
93909 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v27 = new java.lang.StringBuilder::
93914 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v27.append(v19)::
93919 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v31.append(#('. Will continue with...))::
93924 :: CALL :: call :: Ljava/lang/String :: v36 = v34.toString()::
93952 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_DBREF_Handler(java.lang.String)::CD,93977:CD,94172
93977 :: NORM :: declaration :: Lorg/biojava/nbio/structure/DBRef :: v13 = new org.biojava.nbio.structure.DBRef::
94169 :: EXPR :: reference :: Ljava/util/List :: v103 = p0 $this .dbrefs::
94172 :: CALL :: call :: Z :: v105 = v103.add(v13)::
94277 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SITE_Handler(java.lang.String)::CD,94285:CD,94289:JM,94741
94285 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,94289:CL,71478
94289 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 11::CD,94293:CD,94298:CD,94303:CD,94311:CD,94320:CD,94325:CD,94326:CD,94331:CD,94335:CD,94340:CD,94342:CD,94343:CD,94420:CD,94429:CD,94630:CD,94636:CD,94641:CD,94644:CD,94652:CD,94656:CD,94660:CD,94665:CD,94670:CD,94681:CD,94685:CD,94732:CD,94736:CD,94738:CD,94739:CD,94740:CD,94741
94293 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
94298 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $line )::JM,94741
94303 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,94741
94311 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(11), #(14))::JM,94741
94320 :: CALL :: call :: Ljava/lang/Object :: v23 = v21.get(v20)::JM,94325
94325 :: EXPR :: assign :: Ljava/lang/Object :: v24 = CHECKCAST v23::DD,94326:DD,94740
94326 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 69::CD,94738
94331 :: CALL :: call :: Ljava/lang/String :: v30 = v20.trim()::JM,94741
94335 :: CALL :: call :: Z :: v32 = v28.containsKey(v30)::JM,94340
94340 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 89::CD,94739
94343 :: PRED :: IF :: Z :: if (v34 == #(0)) goto 181::CF,94740:CF,94344:CD,94351:CD,94355:CD,94372:CD,94383:CD,94391:CD,94395:CD,94400:CD,94405
94342 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v27 || v33::DD,94343
94344 :: NORM :: declaration :: Ljava/util/ArrayList :: v35 = new java.util.ArrayList::DD,94740
94351 :: CALL :: call :: Ljava/lang/String :: v39 = v20.trim()::JM,94741
94355 :: CALL :: call :: Ljava/lang/Object :: v41 = v37.put(v39, v35)::
94372 :: CALL :: call :: Ljava/lang/String :: v47 = format(#(New Site made: %s %s), v45)::
94383 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
94388 :: EXPR :: reference :: Ljava/util/Map :: v53 = p0 $this .siteMap::
94391 :: CALL :: call :: I :: v55 = v53.size()::
94395 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v50.append(v55)::
94400 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v57.append(#( sites))::
94405 :: CALL :: call :: Ljava/lang/String :: v62 = v60.toString()::
94420 :: CALL :: call :: Ljava/lang/String :: v69 = format(#(SiteId: %s), v67)::
94429 :: CALL :: call :: Ljava/lang/String :: v73 = p1 $line .substring(#(18))::JM,94741
94437 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
94442 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v76)::JM,94641
94447 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::JM,94641
94452 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
94460 :: CALL :: call :: Ljava/lang/String :: v94 = v76.substring(#(0), #(3))::JM,94641
94466 :: CALL :: call :: Ljava/lang/Character :: v96 = get1LetterCode(v94)::JM,94470:CL,103644
94471 :: CALL :: call :: Ljava/lang/Character :: v99 = valueOf(#(88))::
94470 :: PRED :: IF :: Z :: if (v96 == #(null)) goto 289::CD,94471:JM,94641
94481 :: CALL :: call :: Ljava/lang/String :: v106 = v76.substring(#(4), #(5))::JM,94641
94487 :: CALL :: call :: Ljava/lang/String :: v109 = v76.substring(#(5), #(9))::JM,94641
94493 :: CALL :: call :: Ljava/lang/String :: v111 = v109.trim()::JM,94641
94497 :: CALL :: call :: Ljava/lang/Integer :: v113 = valueOf(v111)::
94501 :: CALL :: call :: Ljava/lang/String :: v115 = v76.substring(#(9), #(10))::JM,94641
94507 :: CALL :: call :: C :: v117 = v115.charAt(#(0))::JM,94641
94512 :: CALL :: call :: Ljava/lang/Character :: v119 = valueOf(v117)::
94535 :: CALL :: call :: Ljava/lang/String :: v124 = format(#(Site: %s: 'resName:%s...), v122)::
94544 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ResidueNumber :: v126 = new org.biojava.nbio.structure.ResidueNumber::
94550 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v129 = new java.lang.StringBuilder::
94555 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v129.append(v113)::
94560 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v119)::
94565 :: CALL :: call :: Ljava/lang/StringBuilder :: v137 = v135.append(#('))::
94570 :: CALL :: call :: Ljava/lang/String :: v139 = v137.toString()::
94578 :: CALL :: call :: V :: v126.setChainId(v106)::CL,48328
94582 :: CALL :: call :: V :: v126.setSeqNum(v113)::CL,70705
94586 :: CALL :: call :: V :: v126.setInsCode(v119)::CL,70716
94590 :: CALL :: call :: Z :: v145 = v64.add(v126)::
94597 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v147 = new java.lang.StringBuilder::
94602 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v147.append(v126)::
94607 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(#( to site ))::
94612 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(v20)::JM,94741
94617 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
94625 :: CALL :: call :: Ljava/lang/String :: v161 = v162.substring(#(11))::JM,94741
94630 :: CALL :: call :: Ljava/lang/String :: v76 = v162.substring(#(0), #(10))::JM,94641
94636 :: CALL :: call :: Z :: v79 = v76.equals(#(          ))::JM,94641
94641 :: PRED :: IF :: Z :: if (v79 == #(0)) goto 216::CD,94437:CD,94442:CD,94447:CD,94452:CD,94460:CD,94466:CD,94470:CD,94481:CD,94487:CD,94493:CD,94497:CD,94501:CD,94507:CD,94512:CD,94535:CD,94544:CD,94550:CD,94555:CD,94560:CD,94565:CD,94570:CD,94578:CD,94582:CD,94586:CD,94590:CD,94597:CD,94602:CD,94607:CD,94612:CD,94617:CD,94625:CD,94630:CD,94636:CD,94741
94644 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
94649 :: EXPR :: reference :: Ljava/util/Map :: v168 = p0 $this .siteToResidueMap::
94652 :: CALL :: call :: Ljava/util/Set :: v170 = v168.keySet()::
94656 :: CALL :: call :: I :: v172 = v170.size()::
94660 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v165.append(v172)::
94665 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v174.append(#( sites):))::
94670 :: CALL :: call :: Ljava/lang/String :: v179 = v177.toString()::
94678 :: EXPR :: reference :: Ljava/util/Map :: v181 = p0 $this .siteToResidueMap::JM,94736
94681 :: CALL :: call :: Ljava/util/Set :: v183 = v181.keySet()::JM,94736
94685 :: CALL :: call :: Ljava/util/Iterator :: v185 = v183.iterator()::JM,94736
94690 :: CALL :: call :: Ljava/lang/Object :: v189 = v185.next()::JM,94736
94697 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v192 = new java.lang.StringBuilder::
94698 :: CALL :: call :: Ljava/lang/String :: v194 = valueOf(v190)::
94706 :: CALL :: call :: Ljava/lang/StringBuilder :: v198 = v192.append(#( : ))::
94714 :: CALL :: call :: Ljava/lang/Object :: v201 = v199.get(v190)::
94719 :: CALL :: call :: Ljava/lang/StringBuilder :: v203 = v198.append(v201)::
94724 :: CALL :: call :: Ljava/lang/String :: v205 = v203.toString()::
94732 :: CALL :: call :: Z :: v187 = v185.hasNext()::JM,94736
94736 :: PRED :: IF :: Z :: if (v187 != #(0)) goto 568::CD,94690:CD,94697:CD,94698:CD,94706:CD,94714:CD,94719:CD,94724:CD,94732:JM,94736
94739 :: EXPR :: assign :: null :: PHI v33 = #(0), #(1)::CF,94342
94738 :: EXPR :: assign :: null :: PHI v27 = #(1), #(0)::DD,94342
94741 :: EXPR :: assign :: null :: PHI v162 = v73, v161::JM,94741:JM,94641
94740 :: EXPR :: assign :: null :: PHI v64 = v24, v35::
94881 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SSBOND_Handler(java.lang.String)::CD,94889:CD,94893:JM,94993:JM,94899:JM,94981:JM,94999:JM,94955:JM,94987
94889 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,94893:CL,71478
94893 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,94895:CD,94899:JM,94993:JM,94981:JM,94999:JM,94955:JM,94987
94895 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,94993:JM,94899:JM,94981:JM,94999:JM,94955:JM,94987
94899 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,94907:CD,94913:CD,94919:CD,94923:CD,94929:CD,94935:CD,94941:CD,94945:CD,94951:CD,94955:JM,94993:JM,94899:JM,94981:JM,94999:JM,94987
94907 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(16))::JM,94993:JM,94899:JM,94981:JM,94999:JM,94955:JM,94987
94913 :: CALL :: call :: Ljava/lang/String :: v18 = p1 $line .substring(#(17), #(21))::JM,94993:JM,94899:JM,94981:JM,94999:JM,94955:JM,94987
94919 :: CALL :: call :: Ljava/lang/String :: v20 = v18.trim()::JM,94993:JM,94981:JM,94999:JM,94955:JM,94987
94923 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(21), #(22))::JM,94993:JM,94899:JM,94981:JM,94999:JM,94955:JM,94987
94929 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(29), #(30))::JM,94993:JM,94899:JM,94981:JM,94999:JM,94955:JM,94987
94935 :: CALL :: call :: Ljava/lang/String :: v31 = p1 $line .substring(#(31), #(35))::JM,94993:JM,94899:JM,94981:JM,94999:JM,94955:JM,94987
94941 :: CALL :: call :: Ljava/lang/String :: v33 = v31.trim()::JM,94993:JM,94981:JM,94999:JM,94955:JM,94987
94945 :: CALL :: call :: Ljava/lang/String :: v35 = p1 $line .substring(#(35), #(36))::JM,94993:JM,94899:JM,94981:JM,94999:JM,94955:JM,94987
94951 :: CALL :: call :: I :: v37 = p1 $line .length()::JM,94993:JM,94899:JM,94981:JM,94999:JM,94955:JM,94987
94955 :: PRED :: IF :: Z :: if (v37 < #(72)) goto 231::CD,94956:CD,94962:CD,94966:CD,94972:CD,94976:CD,94981:CD,95057:CD,95088:JM,94993:JM,94899:JM,94999:JM,94955:JM,94987
94956 :: CALL :: call :: Ljava/lang/String :: v42 = p1 $line .substring(#(59), #(65))::JM,94993:JM,94899:JM,94981:JM,94999:JM,94955:JM,94987
94962 :: CALL :: call :: Ljava/lang/String :: v44 = v42.trim()::JM,94993:JM,94981:JM,94999:JM,94987
94966 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(66), #(72))::JM,94993:JM,94899:JM,94981:JM,94999:JM,94955:JM,94987
94972 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,94993:JM,94981:JM,94999:JM,94987
94976 :: CALL :: call :: Z :: v52 = v44.equals(#())::JM,94993:JM,94981:JM,94999:JM,94987
94981 :: PRED :: IF :: Z :: if (v52 != #(0)) goto 231::CD,94982:CD,94987:CD,95057:CD,95088:JM,94993:JM,94981:JM,94999
94982 :: CALL :: call :: Z :: v54 = v49.equals(#())::JM,94993:JM,94981:JM,94999:JM,94987
94987 :: PRED :: IF :: Z :: if (v54 != #(0)) goto 231::CD,94988:CD,94993:CD,95057:CD,95088:JM,94981:JM,94999:JM,94987
94988 :: CALL :: call :: Z :: v57 = v44.equals(#(1555))::JM,94993:JM,94981:JM,94999:JM,94987
94993 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 175::CD,94994:CD,94999:CD,95002:CD,95003:CD,95011:CD,95016:CD,95020:CD,95021:CD,95029:CD,95034:JM,94993:JM,94981:JM,94987
94994 :: CALL :: call :: Z :: v59 = v49.equals(#(1555))::JM,94993:JM,94981:JM,94999:JM,94987
94999 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 231::CD,95002:CD,95003:CD,95011:CD,95016:CD,95020:CD,95021:CD,95029:CD,95034:CD,95057:CD,95088
95003 :: CALL :: call :: Ljava/lang/String :: v82 = valueOf(v20)::
95002 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
95011 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v80.append(v23)::JM,94993:JM,94981:JM,94999:JM,94955:JM,94987
95016 :: CALL :: call :: Ljava/lang/String :: v87 = v85.toString()::JM,94993:JM,94981:JM,94999:JM,94987
95021 :: CALL :: call :: Ljava/lang/String :: v90 = valueOf(v33)::
95020 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v88 = new java.lang.StringBuilder::
95029 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v88.append(v35)::JM,94993:JM,94981:JM,94999:JM,94955:JM,94987
95034 :: CALL :: call :: Ljava/lang/String :: v95 = v93.toString()::JM,94993:JM,94981:JM,94999:JM,94987
95057 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/SSBondImpl :: v67 = new org.biojava.nbio.structure.io.SSBondImpl::
95085 :: EXPR :: reference :: Ljava/util/List :: v75 = p0 $this .ssbonds::
95088 :: CALL :: call :: Z :: v77 = v75.add(v67)::
95181 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_LINK_Handler(java.lang.String)::CD,95189:CD,95193
95189 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,95193:CL,71478
95193 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 16::CD,95195:CD,95201:CD,95205:CD,95211:CD,95215:CD,95221:CD,95225:CD,95231:CD,95235:CD,95241:CD,95245:CD,95251:CD,95255:CD,95261:CD,95265:CD,95271:CD,95275:CD,95281:CD,95285:CD,95291:CD,95295:CD,95301:CD,95305:CD,95311:CD,95315:CD,95321:CD,95325:CD,95331:CD,95338:CD,95356
95195 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $line .substring(#(12), #(16))::
95201 :: CALL :: call :: Ljava/lang/String :: v13 = v11.trim()::
95205 :: CALL :: call :: Ljava/lang/String :: v16 = p1 $line .substring(#(16), #(17))::
95211 :: CALL :: call :: Ljava/lang/String :: v18 = v16.trim()::
95215 :: CALL :: call :: Ljava/lang/String :: v21 = p1 $line .substring(#(17), #(20))::
95221 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::
95225 :: CALL :: call :: Ljava/lang/String :: v27 = p1 $line .substring(#(21), #(22))::
95231 :: CALL :: call :: Ljava/lang/String :: v29 = v27.trim()::
95235 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(22), #(26))::
95241 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
95245 :: CALL :: call :: Ljava/lang/String :: v37 = p1 $line .substring(#(26), #(27))::
95251 :: CALL :: call :: Ljava/lang/String :: v39 = v37.trim()::
95255 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(42), #(46))::
95261 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
95265 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(46), #(47))::
95271 :: CALL :: call :: Ljava/lang/String :: v50 = v48.trim()::
95275 :: CALL :: call :: Ljava/lang/String :: v53 = p1 $line .substring(#(47), #(50))::
95281 :: CALL :: call :: Ljava/lang/String :: v55 = v53.trim()::
95285 :: CALL :: call :: Ljava/lang/String :: v59 = p1 $line .substring(#(51), #(52))::
95291 :: CALL :: call :: Ljava/lang/String :: v61 = v59.trim()::
95295 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(52), #(56))::
95301 :: CALL :: call :: Ljava/lang/String :: v66 = v64.trim()::
95305 :: CALL :: call :: Ljava/lang/String :: v69 = p1 $line .substring(#(56), #(57))::
95311 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::
95315 :: CALL :: call :: Ljava/lang/String :: v75 = p1 $line .substring(#(59), #(65))::
95321 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::
95325 :: CALL :: call :: Ljava/lang/String :: v81 = p1 $line .substring(#(66), #(72))::
95331 :: CALL :: call :: Ljava/lang/String :: v83 = v81.trim()::
95335 :: EXPR :: reference :: Ljava/util/List :: v84 = p0 $this .linkRecords::
95338 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/util/PDBTemporaryStorageUtils$LinkRecord :: v85 = new org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils$LinkRecord::
95356 :: CALL :: call :: Z :: v88 = v84.add(v85)::
95437 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::CE,95438:CD,95444
95438 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isParseSecStruc()::JM,78937:JM,79018
95441 :: EXPR :: reference :: Z :: v3 = p0 $this .parseSecStruc::DD,95444
95444 :: NORM :: compound :: Z :: return v3::CF,95438
95446 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_HELIX_Handler(java.lang.String)::CD,95454:CD,95458:JM,95464
95454 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,95458:CL,71478
95458 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,95460:CD,95464
95460 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,95464
95464 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,95472:CD,95478:CD,95482:CD,95488:CD,95494:CD,95498:CD,95504:CD,95510:CD,95514:CD,95520:CD,95526:CD,95530:CD,95536:CD,95540:CD,95546:CD,95552:CD,95558:CD,95564:CD,95570:CD,95576:CD,95582:CD,95591:JM,95464
95472 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,95464
95478 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
95482 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,95464
95488 :: CALL :: call :: Ljava/lang/String :: v24 = p1 $line .substring(#(21), #(25))::JM,95464
95494 :: CALL :: call :: Ljava/lang/String :: v26 = v24.trim()::
95498 :: CALL :: call :: Ljava/lang/String :: v29 = p1 $line .substring(#(25), #(26))::JM,95464
95504 :: CALL :: call :: Ljava/lang/String :: v33 = p1 $line .substring(#(27), #(30))::JM,95464
95510 :: CALL :: call :: Ljava/lang/String :: v35 = v33.trim()::
95514 :: CALL :: call :: Ljava/lang/String :: v39 = p1 $line .substring(#(31), #(32))::JM,95464
95520 :: CALL :: call :: Ljava/lang/String :: v43 = p1 $line .substring(#(33), #(37))::JM,95464
95526 :: CALL :: call :: Ljava/lang/String :: v45 = v43.trim()::
95530 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(37), #(38))::JM,95464
95536 :: NORM :: declaration :: Ljava/util/HashMap :: v48 = new java.util.HashMap::
95540 :: CALL :: call :: Ljava/lang/Object :: v52 = v48.put(#(initResName), v16)::
95546 :: CALL :: call :: Ljava/lang/Object :: v55 = v48.put(#(initChainId), v20)::
95552 :: CALL :: call :: Ljava/lang/Object :: v58 = v48.put(#(initSeqNum), v26)::
95558 :: CALL :: call :: Ljava/lang/Object :: v61 = v48.put(#(initICode), v29)::
95564 :: CALL :: call :: Ljava/lang/Object :: v64 = v48.put(#(endResName), v35)::
95570 :: CALL :: call :: Ljava/lang/Object :: v67 = v48.put(#(endChainId), v39)::
95576 :: CALL :: call :: Ljava/lang/Object :: v70 = v48.put(#(endSeqNum), v45)::
95582 :: CALL :: call :: Ljava/lang/Object :: v73 = v48.put(#(endICode), v47)::
95588 :: EXPR :: reference :: Ljava/util/List :: v74 = p0 $this .helixList::
95591 :: CALL :: call :: Z :: v76 = v74.add(v48)::
95672 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SHEET_Handler(java.lang.String)::CD,95680:CD,95684:JM,95690
95680 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,95684:CL,71478
95684 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,95686:CD,95690
95686 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,95690
95690 :: PRED :: IF :: Z :: if (v9 >= #(38)) goto 37::CD,95698:CD,95704:CD,95708:CD,95714:CD,95720:CD,95724:CD,95730:CD,95736:CD,95740:CD,95746:CD,95752:CD,95756:CD,95762:CD,95766:CD,95772:CD,95778:CD,95784:CD,95790:CD,95796:CD,95802:CD,95808:CD,95817:JM,95690
95698 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(17), #(20))::JM,95690
95704 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
95708 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(21), #(22))::JM,95690
95714 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(22), #(26))::JM,95690
95720 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
95724 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(26), #(27))::JM,95690
95730 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(28), #(31))::JM,95690
95736 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
95740 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(32), #(33))::JM,95690
95746 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(33), #(37))::JM,95690
95752 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
95756 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(37), #(38))::JM,95690
95762 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
95766 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
95772 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
95778 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
95784 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
95790 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
95796 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
95802 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
95808 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
95814 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .strandList::
95817 :: CALL :: call :: Z :: v74 = v72.add(v46)::
95898 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_TURN_Handler(java.lang.String)::CD,95906:CD,95910:JM,95916
95906 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,95910:CL,71478
95910 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 12::CD,95912:CD,95916
95912 :: CALL :: call :: I :: v9 = p1 $line .length()::JM,95916
95916 :: PRED :: IF :: Z :: if (v9 >= #(36)) goto 37::CD,95924:CD,95930:CD,95934:CD,95940:CD,95946:CD,95950:CD,95956:CD,95962:CD,95966:CD,95972:CD,95978:CD,95982:CD,95988:CD,95992:CD,95998:CD,96004:CD,96010:CD,96016:CD,96022:CD,96028:CD,96034:CD,96043:JM,95916
95924 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $line .substring(#(15), #(18))::JM,95916
95930 :: CALL :: call :: Ljava/lang/String :: v16 = v14.trim()::
95934 :: CALL :: call :: Ljava/lang/String :: v20 = p1 $line .substring(#(19), #(20))::JM,95916
95940 :: CALL :: call :: Ljava/lang/String :: v23 = p1 $line .substring(#(20), #(24))::JM,95916
95946 :: CALL :: call :: Ljava/lang/String :: v25 = v23.trim()::
95950 :: CALL :: call :: Ljava/lang/String :: v28 = p1 $line .substring(#(24), #(25))::JM,95916
95956 :: CALL :: call :: Ljava/lang/String :: v32 = p1 $line .substring(#(26), #(29))::JM,95916
95962 :: CALL :: call :: Ljava/lang/String :: v34 = v32.trim()::
95966 :: CALL :: call :: Ljava/lang/String :: v38 = p1 $line .substring(#(30), #(31))::JM,95916
95972 :: CALL :: call :: Ljava/lang/String :: v41 = p1 $line .substring(#(31), #(35))::JM,95916
95978 :: CALL :: call :: Ljava/lang/String :: v43 = v41.trim()::
95982 :: CALL :: call :: Ljava/lang/String :: v45 = p1 $line .substring(#(35), #(36))::JM,95916
95988 :: NORM :: declaration :: Ljava/util/HashMap :: v46 = new java.util.HashMap::
95992 :: CALL :: call :: Ljava/lang/Object :: v50 = v46.put(#(initResName), v16)::
95998 :: CALL :: call :: Ljava/lang/Object :: v53 = v46.put(#(initChainId), v20)::
96004 :: CALL :: call :: Ljava/lang/Object :: v56 = v46.put(#(initSeqNum), v25)::
96010 :: CALL :: call :: Ljava/lang/Object :: v59 = v46.put(#(initICode), v28)::
96016 :: CALL :: call :: Ljava/lang/Object :: v62 = v46.put(#(endResName), v34)::
96022 :: CALL :: call :: Ljava/lang/Object :: v65 = v46.put(#(endChainId), v38)::
96028 :: CALL :: call :: Ljava/lang/Object :: v68 = v46.put(#(endSeqNum), v43)::
96034 :: CALL :: call :: Ljava/lang/Object :: v71 = v46.put(#(endICode), v45)::
96040 :: EXPR :: reference :: Ljava/util/List :: v72 = p0 $this .turnList::
96043 :: CALL :: call :: Z :: v74 = v72.add(v46)::
96124 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.makeCompounds(java.util.List,java.util.List)::CD,96130:CD,96158:CD,96162:CD,96166:CD,96170:CD,96191:CD,96219:CD,96223
96130 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $compoundList .iterator()::JM,96162:JM,96223
96135 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,96162:JM,96223
96154 :: CALL :: call :: V :: p0 $this .pdb_COMPND_Handler(v12)::CL,105168
96158 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,96162:JM,96223
96163 :: EXPR :: reference :: Ljava/util/List :: v20 = p0 $this .compounds::JM,96170
96162 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 13::CD,96135:CD,96154:CD,96158:JM,96162:JM,96223
96166 :: CALL :: call :: I :: v22 = v20.size()::JM,96170
96170 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 88::JM,80388:JM,80395:CD,96182
96179 :: EXPR :: reference :: Ljava/util/List :: v23 = p0 $this .compounds::
96182 :: CALL :: call :: Ljava/lang/Object :: v25 = v23.get(#(0))::
96191 :: CALL :: call :: Ljava/util/Iterator :: v30 = p2 $sourceList .iterator()::JM,96162:JM,96223
96196 :: CALL :: call :: Ljava/lang/Object :: v34 = v30.next()::JM,96162:JM,96223
96215 :: CALL :: call :: V :: p0 $this .pdb_SOURCE_Handler(v35)::CL,105731
96219 :: CALL :: call :: Z :: v32 = v30.hasNext()::JM,96162:JM,96223
96223 :: PRED :: IF :: Z :: if (v32 != #(0)) goto 116::CD,96196:CD,96215:CD,96219:JM,96162:JM,96223
96260 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.triggerEndFileChecks()::CD,96271:CD,96276:CD,96281:CD,96305:CD,96347:CD,96351:CD,96371:CD,96381:CD,96391:CD,96401:CD,96411:CD,96418:CD,96422:CD,96480:CD,96490:CD,96497:CD,96501:CD,96508:CD,96526:CD,96562:CD,96563:CD,96624
96271 :: NORM :: declaration :: Ljava/util/Date :: v6 = new java.util.Date::
96276 :: CALL :: call :: Z :: v10 = v5.equals(v6)::JM,96281
96281 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 48::CD,96289:CD,96294
96289 :: CALL :: call :: Z :: v16 = v14.equals(v5)::JM,96294
96294 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 48::CD,96298
96298 :: CALL :: call :: V :: v17.setDepDate(v14)::CL,88973
96302 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v19 = p0 $this .current_chain::DD,96305
96305 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 102::CD,96312:CD,96326:CD,96332
96312 :: CALL :: call :: V :: v21.addGroup(v22)::CL,48899
96326 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v29 = p0 $this .isKnownChain(v26, v27)::JM,96332:CL,103598
96333 :: EXPR :: reference :: Ljava/util/List :: v30 = p0 $this .current_model::
96332 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 102::CD,96339
96336 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Chain :: v31 = p0 $this .current_chain::
96339 :: CALL :: call :: Z :: v33 = v30.add(v31)::
96344 :: EXPR :: reference :: Ljava/util/List :: v34 = p0 $this .journalLines::JM,96351
96347 :: CALL :: call :: Z :: v36 = v34.isEmpty()::JM,96351
96351 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 129::CD,96352:CD,96361
96352 :: CALL :: call :: V :: p0 $this .buildjournalArticle()::CL,106397
96361 :: CALL :: call :: V :: v38.setJournalArticle(v39)::CL,107361
96371 :: CALL :: call :: V :: v41.addModel(v42)::CL,48117
96381 :: CALL :: call :: V :: v44.setPDBHeader(v45)::CL,47841
96391 :: CALL :: call :: V :: v47.setCrystallographicInfo(v48)::CL,107372
96401 :: CALL :: call :: V :: v50.setConnections(v51)::CL,107387
96411 :: CALL :: call :: V :: v53.setDBRefs(v54)::CL,47882
96418 :: CALL :: call :: Z :: v58 = v56.isAlignSeqRes()::JM,96422:CL,72398
96422 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 247::CD,96426:CD,96430:CD,96472
96426 :: CALL :: call :: Z :: v61 = v59.isHeaderOnly()::JM,96430:CL,71478
96430 :: PRED :: IF :: Z :: if (v61 != #(0)) goto 247::CD,96447:CD,96472
96447 :: CALL :: call :: V :: v74.align(v76, v77)::CL,107420
96472 :: CALL :: call :: V :: storeUnAlignedSeqRes(v65, v66, v69)::CL,72649
96480 :: CALL :: call :: V :: p0 $this .linkChains2Compound(v79)::CL,107476
96490 :: CALL :: call :: V :: v81.setCompounds(v82)::CL,48066
96497 :: CALL :: call :: Z :: v86 = v84.isHeaderOnly()::JM,96501:CL,71478
96501 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 312::CD,96502
96502 :: CALL :: call :: V :: p0 $this .linkSitesToGroups()::CL,107913
96505 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/PDBBioAssemblyParser :: v88 = p0 $this .bioAssemblyParser::DD,96508
96508 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 333::CD,96519
96519 :: CALL :: call :: V :: v89.setBioAssemblies(v92)::CL,73794
96523 :: EXPR :: reference :: Ljava/util/List :: v94 = p0 $this .ncsOperators::DD,96526
96527 :: EXPR :: reference :: Ljava/util/List :: v95 = p0 $this .ncsOperators::JM,96534
96526 :: PRED :: IF :: Z :: if (v94 == #(null)) goto 383::CD,96530:CD,96534
96530 :: CALL :: call :: I :: v97 = v95.size()::JM,96534
96534 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 383::CD,96544:CD,96548:CD,96549:CD,96555
96538 :: EXPR :: reference :: Ljava/util/List :: v99 = p0 $this .ncsOperators::
96541 :: EXPR :: reference :: Ljava/util/List :: v100 = p0 $this .ncsOperators::JM,96548
96544 :: CALL :: call :: I :: v102 = v100.size()::JM,96548
96549 :: CALL :: call :: [Ljava/lang/Object :: v105 = v99.toArray(v103)::
96548 :: NORM :: declaration :: [Ljavax/vecmath/Matrix4d :: v103 = new javax.vecmath.Matrix4d[]::
96555 :: CALL :: call :: V :: v98.setNcsOperators(v106)::CL,87417
96559 :: EXPR :: reference :: F :: v108 = p0 $this .rfreeNoCutoffLine::DD,96562
96563 :: PRED :: IF :: Z :: if (v110 <= #(0)) goto 415::CD,96567:CD,96568:CD,96583:CD,96584
96562 :: EXPR :: assign :: Z :: v110 = v108 < #(0.0 f)::DD,96563
96564 :: EXPR :: reference :: F :: v111 = p0 $this .rfreeStandardLine::DD,96567
96567 :: EXPR :: assign :: Z :: v112 = v111 > #(0.0 f)::DD,96568
96568 :: PRED :: IF :: Z :: if (v112 >= #(0)) goto 415::CD,96575:CD,96583:CD,96584
96575 :: CALL :: call :: V :: v127.setRfree(v128)::CL,90100
96580 :: EXPR :: reference :: F :: v113 = p0 $this .rfreeNoCutoffLine::DD,96583
96583 :: EXPR :: assign :: Z :: v114 = v113 < #(0.0 f)::DD,96584
96585 :: EXPR :: reference :: F :: v115 = p0 $this .rfreeStandardLine::DD,96588
96584 :: PRED :: IF :: Z :: if (v114 <= #(0)) goto 447::CD,96588:CD,96589:CD,96604:CD,96605
96589 :: PRED :: IF :: Z :: if (v116 <= #(0)) goto 447::CD,96596:CD,96604:CD,96605
96588 :: EXPR :: assign :: Z :: v116 = v115 < #(0.0 f)::DD,96589
96596 :: CALL :: call :: V :: v124.setRfree(v125)::CL,90100
96601 :: EXPR :: reference :: F :: v117 = p0 $this .rfreeNoCutoffLine::DD,96604
96605 :: PRED :: IF :: Z :: if (v118 >= #(0)) goto 476::CD,96609:CD,96610
96604 :: EXPR :: assign :: Z :: v118 = v117 > #(0.0 f)::DD,96605
96606 :: EXPR :: reference :: F :: v119 = p0 $this .rfreeStandardLine::DD,96609
96609 :: EXPR :: assign :: Z :: v120 = v119 < #(0.0 f)::DD,96610
96610 :: PRED :: IF :: Z :: if (v120 <= #(0)) goto 476::CD,96617
96617 :: CALL :: call :: V :: v121.setRfree(v122)::CL,90100
96624 :: CALL :: call :: Ljava/util/List :: v132 = v130.getCompounds()::CL,47969
96727 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.formBonds()::CD,96746:CD,96760:CD,96764:CD,96768:CD,96772
96743 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .linkRecords::JM,96764
96746 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,96764
96751 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,96764
96756 :: CALL :: call :: V :: v3.formLinkRecordBond(v15)::CL,108280
96760 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,96764
96764 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 30::CD,96751:CD,96756:CD,96760:JM,96764
96768 :: CALL :: call :: V :: v3.formDisulfideBonds(v17)::CL,108436
96772 :: CALL :: call :: V :: v3.makeBonds()::CL,85744
96791 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addCharges()::CD,96798
96798 :: CALL :: call :: V :: addCharges(v3)::CL,86382
96803 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecStruc()::CD,96812:CD,96823:CD,96834:CD,96878:CD,96882
96812 :: CALL :: call :: V :: p0 $this .setSecElement(v3, #(PDB_AUTHOR_ASSIGNMENT), v5)::CL,108497
96823 :: CALL :: call :: V :: p0 $this .setSecElement(v7, #(PDB_AUTHOR_ASSIGNMENT), v8)::CL,108497
96834 :: CALL :: call :: V :: p0 $this .setSecElement(v10, #(PDB_AUTHOR_ASSIGNMENT), v11)::CL,108497
96849 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v20 = v13.next()::CL,108805
96853 :: CALL :: call :: Z :: v22 = v20.hasAminoAtoms()::JM,96857:CL,108832
96857 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 109::CD,96858:CD,96863
96858 :: CALL :: call :: Ljava/lang/Object :: v25 = v20.getProperty(#(secstruc))::JM,96863:CL,108876
96863 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 109::CD,96873
96873 :: CALL :: call :: V :: v20.setProperty(#(secstruc), v27)::CL,108919
96878 :: CALL :: call :: Z :: v17 = v13.hasNext()::JM,96882:CL,108939
96882 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 58::CD,96849:CD,96853:CD,96857:CD,96878
96917 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Structure :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.rebuildQuaternaryStructure(org.biojava.nbio.structure.Structure,java.util.List)::JM,79439
96916 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.rebuildQuaternaryStructure(org.biojava.nbio.structure.Structure,java.util.List)::CE,96917:CD,96927:CD,97076
96927 :: CALL :: call :: Lorg/biojava/nbio/structure/Structure :: v7 = p1 $asymUnit .clone()::JM,97076:JM,96927
97076 :: NORM :: compound :: Lorg/biojava/nbio/structure/Structure :: return v7::DD,96917
97133 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getType()::CF,97134:CD,97137:CD,97139
97134 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.NucleotideImpl.getType()::JM,79509:JM,79516:JM,85537:JM,85542:JM,85569:JM,85564:JM,97747:JM,97752:JM,103818:JM,103823:JM,127138:JM,127143:JM,127155:JM,127150:JM,128852:JM,128847:JM,128864:JM,128859
97137 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.NucleotideImpl.type::CF,97139
97139 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,97134
97141 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getType()::CF,97142:CD,97145:CD,97147
97142 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.HetatomImpl.getType()::JM,79509:JM,79516:JM,85537:JM,85542:JM,85569:JM,85564:JM,97747:JM,97752:JM,103818:JM,103823:JM,127138:JM,127143:JM,127155:JM,127150:JM,128852:JM,128847:JM,128864:JM,128859
97145 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.HetatomImpl.type::CF,97147
97147 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,97142
97149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getType()::CF,97150:CD,97153:CD,97155
97150 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.AminoAcidImpl.getType()::JM,79509:JM,79516:JM,85537:JM,85542:JM,85569:JM,85564:JM,97747:JM,97752:JM,103818:JM,103823:JM,127138:JM,127143:JM,127155:JM,127150:JM,128852:JM,128847:JM,128864:JM,128859
97153 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v3 = org.biojava.nbio.structure.AminoAcidImpl.type::CF,97155
97155 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v3::CF,97150
97157 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::CE,97158:CD,97164
97158 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AminoAcidImpl.getAminoType()::JM,79576:JM,79775
97161 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .amino_char::DD,97164
97164 :: NORM :: compound :: Ljava/lang/Character :: return v3::CF,97158
97167 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.isWater()::JM,79602:JM,109168:JM,121992
97166 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.isWater()::CE,97167:CD,97170:CD,97175:CD,97180
97170 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.GroupType.WATERNAMES::JM,97180
97172 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .pdb_name::JM,97180
97175 :: CALL :: call :: Z :: v6 = v3.contains(v4)::JM,97180
97180 :: NORM :: compound :: Z :: return v6::CF,97167
97183 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.size()::CE,97184:CD,97190:CD,97194
97184 :: EXIT :: exit :: I :: org.biojava.nbio.structure.HetatomImpl.size()::JM,79608
97187 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::JM,97194
97190 :: CALL :: call :: I :: v5 = v3.size()::JM,97194
97194 :: NORM :: compound :: I :: return v5::CF,97184
97197 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::JM,79614:JM,112146:JM,112200
97196 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(int)::CE,97197:CD,97201:JM,97219:JM,97209
97201 :: PRED :: IF :: Z :: if (p1 $position  < #(0)) goto 18::CD,97205:CD,97209:CD,97210
97202 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .atoms::JM,97209
97205 :: CALL :: call :: I :: v7 = v5.size()::JM,97209
97209 :: PRED :: IF :: Z :: if (p1 $position  < v7) goto 20::CD,97210:CD,97214:CD,97219:CD,97220
97211 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .atoms::JM,97219
97210 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,97197
97214 :: CALL :: call :: Ljava/lang/Object :: v10 = v8.get(p1 $position )::JM,97219:JM,97201
97219 :: EXPR :: assign :: Ljava/lang/Object :: v11 = CHECKCAST v10::CF,97220
97220 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v11::DD,97197
97229 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Element :: org.biojava.nbio.structure.AtomImpl.getElement()::JM,113003
97228 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getElement()::CE,97229:CD,97235
97232 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v3 = p0 $this .element::DD,97235
97235 :: NORM :: compound :: Lorg/biojava/nbio/structure/Element :: return v3::CF,97229
97237 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.isMetal()::CE,97238:CD,97244:CD,97248
97238 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.Element.isMetal()::JM,79624
97244 :: CALL :: call :: Z :: v5 = v3.isMetal()::JM,97248:CL,109108
97248 :: NORM :: compound :: Z :: return v5::CF,97238
97251 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.AminoAcidImpl.toString()::
97250 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.toString()::CE,97251:CD,97254:CD,97262:CD,97267:CD,97275:CD,97280:CD,97288:CD,97293:CD,97301:CD,97306:CD,97314:CD,97319:CD,97327:CD,97332:CD,97339:CD,97370:CD,97374:CD,97378:CD,97410:CD,97411:CD,97412
97254 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
97259 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .recordType::
97262 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
97267 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#(:))::
97272 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::
97275 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::
97280 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v14.append(#( ))::
97288 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(v18)::
97293 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v20.append(#( ))::
97301 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(v23)::JM,97411
97306 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v25.append(#( ))::JM,97411
97311 :: EXPR :: reference :: Z :: v28 = p0 $this .pdb_flag::JM,97411
97314 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::JM,97411
97319 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v30.append(#( ))::JM,97411
97324 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .recordType::JM,97411
97327 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(v33)::JM,97411
97332 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,97411
97336 :: EXPR :: reference :: Z :: v38 = p0 $this .pdb_flag::DD,97339
97339 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 120::CF,97411:CF,97340:CD,97341:CD,97349:CD,97357:CD,97361:CD,97366
97341 :: CALL :: call :: Ljava/lang/String :: v42 = valueOf(v37)::
97340 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::JM,97411
97349 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v40.append(#( atoms: ))::JM,97411
97354 :: EXPR :: reference :: Ljava/util/List :: v47 = p0 $this .atoms::JM,97411
97357 :: CALL :: call :: I :: v49 = v47.size()::JM,97411
97361 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v46.append(v49)::JM,97411
97366 :: CALL :: call :: Ljava/lang/String :: v53 = v51.toString()::JM,97411
97370 :: CALL :: call :: Ljava/util/List :: v56 = p0 $this .getAltLocs()::JM,97378:CL,56406
97374 :: CALL :: call :: Z :: v58 = v56.isEmpty()::JM,97378
97379 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,97412
97378 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 164::CF,97412:CF,97379:CD,97380:CD,97388:CD,97393:CD,97397:CD,97401:CD,97406
97380 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v54)::
97388 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v59.append(#( has altLocs :))::JM,97412
97393 :: CALL :: call :: Ljava/util/List :: v67 = p0 $this .getAltLocs()::JM,97412:CL,56406
97397 :: CALL :: call :: I :: v69 = v67.size()::JM,97412
97401 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::JM,97412
97406 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::JM,97412
97411 :: EXPR :: assign :: null :: PHI v54 = v37, v53::DD,97412
97410 :: NORM :: compound :: Ljava/lang/String :: return v74::DD,97251
97412 :: EXPR :: assign :: null :: PHI v74 = v54, v73::CF,97410
97441 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.NucleotideImpl.toString()::
97440 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.toString()::CE,97441:CD,97444:CD,97452:CD,97457:CD,97465:CD,97470:CD,97478:CD,97483:CD,97490:CD,97521:CD,97522
97444 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
97449 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .pdb_name::
97452 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
97457 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
97465 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,97522
97470 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,97522
97475 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,97522
97478 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,97522
97483 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,97522
97487 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,97490
97491 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,97522
97490 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 84::CF,97522:CF,97491:CD,97492:CD,97500:CD,97508:CD,97512:CD,97517
97492 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
97500 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#(atoms: ))::JM,97522
97505 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,97522
97508 :: CALL :: call :: I :: v33 = v31.size()::JM,97522
97512 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,97522
97517 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,97522
97521 :: NORM :: compound :: Ljava/lang/String :: return v38::DD,97441
97522 :: EXPR :: assign :: null :: PHI v38 = v21, v37::CF,97521
97539 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.HetatomImpl.toString()::
97538 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.toString()::CE,97539:CD,97542:CD,97550:CD,97555:CD,97563:CD,97568:CD,97576:CD,97581:CD,97588:CD,97622:CD,97653:CD,97654:CD,97655
97542 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::
97550 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::JM,97654
97555 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::JM,97654
97560 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .pdb_name::JM,97654
97563 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v11.append(v12)::JM,97654
97568 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v14.append(#( ))::JM,97654
97573 :: EXPR :: reference :: Z :: v17 = p0 $this .pdb_flag::JM,97654
97576 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v16.append(v17)::JM,97654
97581 :: CALL :: call :: Ljava/lang/String :: v21 = v19.toString()::JM,97654
97585 :: EXPR :: reference :: Z :: v22 = p0 $this .pdb_flag::DD,97588
97589 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,97654
97588 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 86::CF,97654:CF,97589:CD,97590:CD,97598:CD,97606:CD,97610:CD,97615
97590 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(v21)::
97598 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v24.append(#( atoms: ))::JM,97654
97603 :: EXPR :: reference :: Ljava/util/List :: v31 = p0 $this .atoms::JM,97654
97606 :: CALL :: call :: I :: v33 = v31.size()::JM,97654
97610 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::JM,97654
97615 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::JM,97654
97619 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .altLocs::DD,97622
97623 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v41 = new java.lang.StringBuilder::JM,97655
97622 :: PRED :: IF :: Z :: if (v39 == #(null)) goto 126::CF,97655:CF,97623:CD,97624:CD,97632:CD,97640:CD,97644:CD,97649
97624 :: CALL :: call :: Ljava/lang/String :: v43 = valueOf(v38)::
97632 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v41.append(#( has altLocs :))::JM,97655
97637 :: EXPR :: reference :: Ljava/util/List :: v48 = p0 $this .altLocs::JM,97655
97640 :: CALL :: call :: I :: v50 = v48.size()::JM,97655
97644 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v47.append(v50)::JM,97655
97649 :: CALL :: call :: Ljava/lang/String :: v54 = v52.toString()::JM,97655
97653 :: NORM :: compound :: Ljava/lang/String :: return v55::DD,97539
97655 :: EXPR :: assign :: null :: PHI v55 = v38, v54::CF,97653
97654 :: EXPR :: assign :: null :: PHI v38 = v21, v37::DD,97655
97677 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::CE,97678:CD,97684
97678 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getResidueType()::JM,79649:JM,79654
97681 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: v3 = p0 $this .residueType::DD,97684
97684 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: return v3::CF,97678
97687 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::JM,130002:JM,129990:JM,129993:JM,130010
97686 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getPolymerType()::CE,97687:CD,97693
97690 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v3 = p0 $this .polymerType::DD,97693
97693 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: return v3::CF,97687
97695 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::CE,97696:CD,97702
97696 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getOne_letter_code()::JM,79776:JM,79688:JM,89617:JM,89634:JM,89623:JM,89629:JM,89743:JM,129987:JM,129981
97699 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .one_letter_code::DD,97702
97702 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,97696
97705 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::JM,80564:JM,80566
97704 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.isProtein(org.biojava.nbio.structure.Chain)::CE,97705:CD,97708:CD,97712:CD,97714
97708 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v4 = getPredominantGroupType(p1 $c )::JM,97714:CL,109117
97712 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v5 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,97714
97715 :: NORM :: compound :: Z :: return #(1)::DD,97705
97714 :: PRED :: IF :: Z :: if (v4 != v5) goto 13::CD,97715:CD,97716
97716 :: NORM :: compound :: Z :: return #(0)::DD,97705
97721 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::CE,97722:CD,97726:CD,97733:CD,97758:CD,97762:CD,97763:JM,97747:JM,97752
97722 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ChainImpl.getAtomGroups(org.biojava.nbio.structure.GroupType)::JM,80734:JM,109202:JM,109271:JM,109176:JM,109178:JM,109210:JM,109203:JM,109186:JM,109282:JM,109175:JM,109174:JM,116436:JM,116437:JM,116504:JM,122450
97726 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,97763
97730 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .groups::JM,97762:JM,97742
97733 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,97762:JM,97742
97738 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,97762:JM,97742
97743 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v16 = v14.getType()::JM,97747:JM,97752:CL,97141:CL,97149:CL,97133
97742 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::
97747 :: CALL :: call :: Z :: v18 = v16.equals(p1 $type )::JM,97747:JM,97752
97753 :: CALL :: call :: Z :: v20 = v4.add(v14)::
97752 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 56::CD,97753:JM,97762:JM,97742
97758 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,97762:JM,97742
97763 :: NORM :: compound :: Ljava/util/List :: return v4::DD,97722
97762 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 24::CD,97738:CD,97742:CD,97743:CD,97747:CD,97752:CD,97758:JM,97762:CF,97763
97823 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(java.lang.Object,java.lang.Object)::CD,97831
97831 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,109386
97841 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(java.lang.Object,java.lang.Object)::CD,97849
97849 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::CL,109418
97859 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::CE,97860:CD,97867
97860 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ResidueNumber.compareTo(org.biojava.nbio.structure.ResidueNumber)::JM,80930
97864 :: EXPR :: reference :: Ljava/lang/String :: v4 = p0 $this .chainId::DD,97867
97867 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 41::CD,97871:CD,97899
97868 :: EXPR :: reference :: Ljava/lang/String :: v6 = p1 $other .chainId::DD,97871
97871 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 41::CD,97878:CD,97883:CD,97899
97872 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .chainId::JM,97883
97875 :: EXPR :: reference :: Ljava/lang/String :: v8 = p1 $other .chainId::JM,97883
97878 :: CALL :: call :: Z :: v10 = v7.equals(v8)::JM,97883
97883 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 41::CD,97890:CD,97895:CD,97899
97884 :: EXPR :: reference :: Ljava/lang/String :: v46 = p0 $this .chainId::JM,97895
97887 :: EXPR :: reference :: Ljava/lang/String :: v47 = p1 $other .chainId::JM,97895
97890 :: CALL :: call :: I :: v49 = v46.compareTo(v47)::JM,97895
97895 :: NORM :: compound :: I :: return v49::CF,97860
97896 :: EXPR :: reference :: Ljava/lang/String :: v12 = p0 $this .chainId::DD,97899
97899 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 57::CD,97903:CD,97908
97900 :: EXPR :: reference :: Ljava/lang/String :: v13 = p1 $other .chainId::DD,97903
97903 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 57::CD,97904:CD,97908
97905 :: EXPR :: reference :: Ljava/lang/String :: v14 = p0 $this .chainId::DD,97908
97904 :: NORM :: compound :: I :: return #(1)::CF,97860
97909 :: EXPR :: reference :: Ljava/lang/String :: v15 = p1 $other .chainId::DD,97912
97908 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 73::CD,97912:CD,97917
97913 :: NORM :: compound :: I :: return #(-1)::CF,97860
97912 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 73::CD,97913:CD,97917
97914 :: EXPR :: reference :: Ljava/lang/Integer :: v16 = p0 $this .seqNum::DD,97917
97917 :: PRED :: IF :: Z :: if (v16 == #(null)) goto 113::CD,97921:CD,97949
97918 :: EXPR :: reference :: Ljava/lang/Integer :: v17 = p1 $other .seqNum::DD,97921
97921 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 113::CD,97928:CD,97933:CD,97949
97922 :: EXPR :: reference :: Ljava/lang/Integer :: v18 = p0 $this .seqNum::JM,97933
97925 :: EXPR :: reference :: Ljava/lang/Integer :: v19 = p1 $other .seqNum::JM,97933
97928 :: CALL :: call :: Z :: v21 = v18.equals(v19)::JM,97933
97933 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 113::CD,97940:CD,97945:CD,97949
97934 :: EXPR :: reference :: Ljava/lang/Integer :: v42 = p0 $this .seqNum::JM,97945
97937 :: EXPR :: reference :: Ljava/lang/Integer :: v43 = p1 $other .seqNum::JM,97945
97940 :: CALL :: call :: I :: v45 = v42.compareTo(v43)::JM,97945
97945 :: NORM :: compound :: I :: return v45::CF,97860
97946 :: EXPR :: reference :: Ljava/lang/Integer :: v22 = p0 $this .seqNum::DD,97949
97949 :: PRED :: IF :: Z :: if (v22 == #(null)) goto 129::CD,97953:CD,97958
97950 :: EXPR :: reference :: Ljava/lang/Integer :: v23 = p1 $other .seqNum::DD,97953
97953 :: PRED :: IF :: Z :: if (v23 != #(null)) goto 129::CD,97954:CD,97958
97955 :: EXPR :: reference :: Ljava/lang/Integer :: v24 = p0 $this .seqNum::DD,97958
97954 :: NORM :: compound :: I :: return #(1)::CF,97860
97959 :: EXPR :: reference :: Ljava/lang/Integer :: v25 = p1 $other .seqNum::DD,97962
97958 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 145::CD,97962:CD,97967
97963 :: NORM :: compound :: I :: return #(-1)::CF,97860
97962 :: PRED :: IF :: Z :: if (v25 == #(null)) goto 145::CD,97963:CD,97967
97964 :: EXPR :: reference :: Ljava/lang/Character :: v26 = p0 $this .insCode::DD,97967
97967 :: PRED :: IF :: Z :: if (v26 == #(null)) goto 185::CD,97971:CD,97999
97968 :: EXPR :: reference :: Ljava/lang/Character :: v27 = p1 $other .insCode::DD,97971
97971 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 185::CD,97978:CD,97983:CD,97999
97972 :: EXPR :: reference :: Ljava/lang/Character :: v28 = p0 $this .insCode::JM,97983
97975 :: EXPR :: reference :: Ljava/lang/Character :: v29 = p1 $other .insCode::JM,97983
97978 :: CALL :: call :: Z :: v31 = v28.equals(v29)::JM,97983
97983 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 185::CD,97990:CD,97995:CD,97999
97984 :: EXPR :: reference :: Ljava/lang/Character :: v38 = p0 $this .insCode::JM,97995
97987 :: EXPR :: reference :: Ljava/lang/Character :: v39 = p1 $other .insCode::JM,97995
97990 :: CALL :: call :: I :: v41 = v38.compareTo(v39)::JM,97995
97995 :: NORM :: compound :: I :: return v41::CF,97860
97996 :: EXPR :: reference :: Ljava/lang/Character :: v32 = p0 $this .insCode::DD,97999
97999 :: PRED :: IF :: Z :: if (v32 == #(null)) goto 201::CD,98003:CD,98008
98000 :: EXPR :: reference :: Ljava/lang/Character :: v33 = p1 $other .insCode::DD,98003
98003 :: PRED :: IF :: Z :: if (v33 != #(null)) goto 201::CD,98004:CD,98008
98005 :: EXPR :: reference :: Ljava/lang/Character :: v34 = p0 $this .insCode::DD,98008
98004 :: NORM :: compound :: I :: return #(1)::CF,97860
98009 :: EXPR :: reference :: Ljava/lang/Character :: v35 = p1 $other .insCode::DD,98012
98008 :: PRED :: IF :: Z :: if (v34 != #(null)) goto 217::CD,98012:CD,98014
98013 :: NORM :: compound :: I :: return #(-1)::CF,97860
98012 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 217::CD,98013:CD,98014
98014 :: NORM :: compound :: I :: return #(0)::CF,97860
98073 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::CE,98074:CD,98078:CD,98082:CD,98086:CD,98091
98074 :: EXIT :: exit :: I :: org.biojava.nbio.structure.Site.compareTo(org.biojava.nbio.structure.Site)::JM,80944
98078 :: CALL :: call :: Ljava/lang/String :: v5 = p0 $this .toString()::JM,98091:CL,109450
98082 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $other .toString()::JM,98091:CL,109450
98086 :: CALL :: call :: I :: v9 = v5.compareTo(v7)::JM,98091
98091 :: NORM :: compound :: I :: return v9::DD,98074
98487 :: EXIT :: exit :: Lorg/biojava/nbio/structure/cath/CathDomain :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::
98486 :: ENTR :: entry :: null :: org.biojava.nbio.structure.cath.CathInstallation.parseCathListFileLine(java.lang.String)::CE,98487:CD,98491:CD,98495:CD,98512:CD,98516:CD,98528:CD,98532:CD,98544:CD,98548:CD,98560:CD,98564:CD,98576:CD,98580:CD,98592:CD,98596:CD,98608:CD,98612:CD,98624:CD,98628:CD,98640:CD,98644:CD,98656:CD,98672:CD,98676:CD,98684
98491 :: NORM :: declaration :: Lorg/biojava/nbio/structure/cath/CathDomain :: v4 = new org.biojava.nbio.structure.cath.CathDomain::DD,98684
98495 :: CALL :: call :: [Ljava/lang/String :: v8 = p1 $line .split(#(\s+))::
98508 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v8[#(1)]::
98512 :: CALL :: call :: I :: v15 = parseInt(v13)::
98516 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v15)::
98524 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v8[#(2)]::
98528 :: CALL :: call :: I :: v22 = parseInt(v20)::
98532 :: CALL :: call :: Ljava/lang/Integer :: v24 = valueOf(v22)::
98540 :: EXPR :: reference :: Ljava/lang/Object :: v27 = v8[#(3)]::
98544 :: CALL :: call :: I :: v29 = parseInt(v27)::
98548 :: CALL :: call :: Ljava/lang/Integer :: v31 = valueOf(v29)::
98556 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v8[#(4)]::
98560 :: CALL :: call :: I :: v36 = parseInt(v34)::
98564 :: CALL :: call :: Ljava/lang/Integer :: v38 = valueOf(v36)::
98572 :: EXPR :: reference :: Ljava/lang/Object :: v41 = v8[#(5)]::
98576 :: CALL :: call :: I :: v43 = parseInt(v41)::
98580 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v43)::
98588 :: EXPR :: reference :: Ljava/lang/Object :: v48 = v8[#(6)]::
98592 :: CALL :: call :: I :: v50 = parseInt(v48)::
98596 :: CALL :: call :: Ljava/lang/Integer :: v52 = valueOf(v50)::
98604 :: EXPR :: reference :: Ljava/lang/Object :: v55 = v8[#(7)]::
98608 :: CALL :: call :: I :: v57 = parseInt(v55)::
98612 :: CALL :: call :: Ljava/lang/Integer :: v59 = valueOf(v57)::
98620 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v8[#(8)]::
98624 :: CALL :: call :: I :: v64 = parseInt(v62)::
98628 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v64)::
98636 :: EXPR :: reference :: Ljava/lang/Object :: v69 = v8[#(9)]::
98640 :: CALL :: call :: I :: v71 = parseInt(v69)::
98644 :: CALL :: call :: Ljava/lang/Integer :: v73 = valueOf(v71)::
98652 :: EXPR :: reference :: Ljava/lang/Object :: v76 = v8[#(10)]::
98656 :: CALL :: call :: I :: v78 = parseInt(v76)::
98668 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v8[#(11)]::JM,98672:JM,98676
98672 :: CALL :: call :: D :: v85 = parseDouble(v83)::JM,98672:JM,98676
98676 :: CALL :: call :: Ljava/lang/Double :: v87 = valueOf(v85)::JM,98676
98684 :: NORM :: compound :: Lorg/biojava/nbio/structure/cath/CathDomain :: return v4::DD,98487
98727 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFile()::CD,98736
98736 :: CALL :: call :: Ljava/lang/String :: v7 = p0 $this .getDomainFilename()::CL,98749
98749 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::CE,98750:CD,98761:CD,98766
98750 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.ecod.EcodInstallation.getDomainFilename()::
98761 :: CALL :: call :: Ljava/lang/String :: v9 = format(#(ecod.%s.domains.txt), v5)::JM,98766
98766 :: NORM :: compound :: Ljava/lang/String :: return v9::DD,98750
98772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.downloadFile(java.net.URL,java.io.File)::CD,98781:CD,98786:CD,98790:CD,98795:CD,98799:CD,98808:CD,98878:CD,98882
98781 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
98786 :: CALL :: call :: Ljava/lang/String :: v13 = getFileExtension(p2 $destination )::CL,81653
98790 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v9.append(v13)::
98795 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
98799 :: CALL :: call :: Ljava/io/File :: v19 = createTempFile(v8, v17)::
98808 :: CALL :: call :: Ljava/net/URLConnection :: v24 = prepareURLConnection(v22, #(60000))::CL,110085
98878 :: CALL :: call :: V :: copy(v19, p2 $destination )::CL,81706
98882 :: CALL :: call :: Z :: v63 = v19.delete()::
98959 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::JM,82750
98958 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.getDomains()::CE,98959:CD,98965
98962 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .domains::DD,98965
98965 :: NORM :: compound :: Ljava/util/List :: return v3::CF,98959
98984 :: CALL :: call :: V :: p0 $this .setCacheLocation(p1 $cacheLocation )::CL,110134
98988 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v6 = new java.util.concurrent.atomic.AtomicBoolean::JM,99137:JM,99136:JM,99168:JM,99173:JM,99172:JM,99204:JM,99145:JM,99181:JM,99150:JM,99155:JM,99154:JM,99186:JM,99191:JM,99190:JM,99163:JM,99199:DD,98992
98992 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCla = v6::
98995 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v8 = p0 $this .installedCla::JM,98998
98998 :: CALL :: call :: V :: v8.set(#(0))::JM,98998
99002 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v11 = new java.util.concurrent.atomic.AtomicBoolean::JM,99137:JM,99136:JM,99168:JM,99173:JM,99172:JM,99204:JM,99145:JM,99181:JM,99150:JM,99155:JM,99154:JM,99186:JM,99191:JM,99190:JM,99163:JM,99199:DD,99006
99006 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedDes = v11::
99009 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = p0 $this .installedDes::JM,99012
99012 :: CALL :: call :: V :: v13.set(#(0))::JM,99012
99016 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v15 = new java.util.concurrent.atomic.AtomicBoolean::JM,99137:JM,99136:JM,99168:JM,99173:JM,99172:JM,99204:JM,99145:JM,99181:JM,99150:JM,99155:JM,99154:JM,99186:JM,99191:JM,99190:JM,99163:JM,99199:DD,99020
99020 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedHie = v15::
99023 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v17 = p0 $this .installedHie::JM,99026
99026 :: CALL :: call :: V :: v17.set(#(0))::JM,99026
99030 :: NORM :: declaration :: Ljava/util/concurrent/atomic/AtomicBoolean :: v19 = new java.util.concurrent.atomic.AtomicBoolean::JM,99137:JM,99136:JM,99168:JM,99173:JM,99172:JM,99204:JM,99145:JM,99181:JM,99150:JM,99155:JM,99154:JM,99186:JM,99191:JM,99190:JM,99163:JM,99199:DD,99034
99034 :: EXPR :: modify :: Ljava/util/concurrent/atomic/AtomicBoolean :: p0 $this .installedCom = v19::
99037 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v21 = p0 $this .installedCom::JM,99040
99040 :: CALL :: call :: V :: v21.set(#(0))::JM,99040
99047 :: NORM :: declaration :: Ljava/util/ArrayList :: v24 = new java.util.ArrayList::JM,99137:JM,99136:JM,99168:JM,99173:JM,99172:JM,99204:JM,99145:JM,99181:JM,99150:JM,99155:JM,99154:JM,99186:JM,99191:JM,99190:JM,99163:JM,99199
99055 :: NORM :: declaration :: Ljava/util/HashMap :: v27 = new java.util.HashMap::JM,99137:JM,99136:JM,99168:JM,99173:JM,99172:JM,99204:JM,99145:JM,99181:JM,99150:JM,99155:JM,99154:JM,99186:JM,99191:JM,99190:JM,99163:JM,99199
99062 :: NORM :: declaration :: Ljava/util/HashMap :: v29 = new java.util.HashMap::JM,99137:JM,99136:JM,99168:JM,99173:JM,99172:JM,99204:JM,99145:JM,99181:JM,99150:JM,99155:JM,99154:JM,99186:JM,99191:JM,99190:JM,99163:JM,99199
99069 :: NORM :: declaration :: Ljava/util/TreeMap :: v31 = new java.util.TreeMap::JM,99137:JM,99136:JM,99168:JM,99173:JM,99172:JM,99204:JM,99145:JM,99181:JM,99150:JM,99155:JM,99154:JM,99186:JM,99191:JM,99190:JM,99163:JM,99199
99137 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $url )::
99136 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,99136
99145 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v8.append(p2 $claURL )::JM,99136
99150 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
99155 :: CALL :: call :: Ljava/lang/String :: v18 = valueOf(p1 $url )::
99154 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v16 = new java.lang.StringBuilder::JM,99136
99163 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v16.append(p3 $desURL )::JM,99136
99168 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
99173 :: CALL :: call :: Ljava/lang/String :: v26 = valueOf(p1 $url )::
99172 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::JM,99136
99181 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v24.append(p4 $hieURL )::JM,99136
99186 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
99191 :: CALL :: call :: Ljava/lang/String :: v34 = valueOf(p1 $url )::
99190 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::JM,99136
99199 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v32.append(p5 $comURL )::JM,99136
99204 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::
99235 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::
99234 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.BerkeleyScopInstallation.BerkeleyScopMirror.getFilename(java.lang.String,java.lang.String)::CE,99235:CD,99240:CD,99242:CD,99246:CD,99281:CD,99285:CD,99286:CD,99295:CD,99299:CD,99362:JM,99329:JM,99359
99240 :: EXPR :: reference :: Ljava/util/Map :: v5 = org.biojava.nbio.structure.scop.BerkeleyScopInstallation.EQUIVALENT_VERSIONS::JM,99285:JM,99255
99242 :: CALL :: call :: Ljava/util/Set :: v7 = v5.entrySet()::JM,99285:JM,99255
99246 :: CALL :: call :: Ljava/util/Iterator :: v9 = v7.iterator()::JM,99285:JM,99255
99251 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,99285:JM,99255
99255 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::JM,99260:JM,99277
99256 :: CALL :: call :: Ljava/lang/Object :: v17 = v15.getValue()::JM,99260
99261 :: EXPR :: assign :: I :: v19 = v18.length::DD,99280
99260 :: EXPR :: assign :: Ljava/lang/Object :: v18 = CHECKCAST v17::DD,99261
99263 :: EXPR :: reference :: Ljava/lang/Object :: v20 = v18[v25]::JM,99272
99267 :: CALL :: call :: Z :: v22 = v30.equals(v20)::JM,99272
99273 :: CALL :: call :: Ljava/lang/Object :: v27 = v15.getKey()::JM,99277
99272 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 79::CD,99273:CD,99277:CD,99279:CD,99280:CD,99360:CD,99361:CD,99362
99277 :: EXPR :: assign :: Ljava/lang/Object :: v28 = CHECKCAST v27::DD,99362
99279 :: EXPR :: assign :: Ljava/lang/Object :: v24 = v25 + #(1)::DD,99361:CF,99360
99281 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,99285:JM,99255
99280 :: PRED :: IF :: Z :: if (v25 < v19) goto 54::CF,99362:CD,99267:CD,99272
99285 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 20::CD,99251:CD,99255:CD,99256:CD,99260:CD,99261:CD,99280:CD,99281:CD,99360:CD,99361:CD,99362:JM,99285
99286 :: CALL :: call :: [Ljava/lang/String :: v33 = v29.split(#(\.))::
99291 :: EXPR :: reference :: Ljava/lang/Object :: v34 = v33[#(0)]::JM,99299
99295 :: CALL :: call :: I :: v36 = parseInt(v34)::JM,99299
99299 :: PRED :: IF :: Z :: if (v36 != #(1)) goto 147::CF,99330:CF,99300:CD,99305:CD,99310:CD,99315:CD,99320:CD,99325:CD,99329:CD,99335:CD,99340:CD,99345:CD,99350:CD,99355:CD,99359
99300 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::JM,99329
99305 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(p1 $fileType )::JM,99329:JM,99362:JM,99359
99310 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v55.append(#(.scop.))::JM,99329:JM,99359
99315 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v58.append(v29)::JM,99329:JM,99359
99320 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(.txt))::JM,99329:JM,99359
99325 :: CALL :: call :: Ljava/lang/String :: v65 = v63.toString()::JM,99329:JM,99359
99329 :: NORM :: compound :: Ljava/lang/String :: return v65::DD,99235
99330 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::JM,99359
99335 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v37.append(p1 $fileType )::JM,99359:JM,99329:JM,99362
99340 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v41.append(#(.scope.))::JM,99329:JM,99359
99345 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v29)::JM,99329:JM,99359
99350 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#(-stable.txt))::JM,99329:JM,99359
99355 :: CALL :: call :: Ljava/lang/String :: v51 = v49.toString()::JM,99329:JM,99359
99359 :: NORM :: compound :: Ljava/lang/String :: return v51::DD,99235
99361 :: EXPR :: assign :: null :: PHI v25 = #(0), v24::DD,99279:DD,99280
99360 :: EXPR :: assign :: null :: PHI v30 = v29, v30::CF,99361:JM,99272:DD,99360:DD,99362
99362 :: EXPR :: assign :: null :: PHI v29 = p2 $version , v28, v30::JM,99285:JM,99255:JM,99329:JM,99359:DD,99360
99404 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.extractRanges(java.lang.String)::CD,99409:CD,99417:CD,99422:CD,99461
99409 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $range .split(#(,))::JM,99459:JM,99461
99414 :: EXPR :: reference :: Ljava/lang/String :: v7 = p0 $this .scopVersion::JM,99422
99417 :: CALL :: call :: I :: v10 = v7.compareTo(#(1.73))::JM,99422
99422 :: PRED :: IF :: Z :: if (v10 >= #(0)) goto 89::CD,99459:CD,99460:CD,99466:JM,99461
99424 :: EXPR :: reference :: Ljava/lang/Object :: v13 = v6[v29]::JM,99432:JM,99439:JM,99454
99428 :: CALL :: call :: I :: v15 = v13.length()::JM,99432
99432 :: PRED :: IF :: Z :: if (v15 >= #(2)) goto 48::CD,99434:CD,99439
99434 :: CALL :: call :: C :: v19 = v13.charAt(#(1))::JM,99439
99439 :: PRED :: IF :: Z :: if (v19 == #(58)) goto 78::CD,99440:CD,99445:CD,99450:CF,99458
99440 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::JM,99454
99445 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v21.append(v13)::JM,99454
99450 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::JM,99454
99454 :: EXPR :: modify :: Ljava/lang/Object :: v6[v29] = v27::
99459 :: EXPR :: assign :: I :: v12 = v6.length::CF,99460
99458 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v29 + #(1)::DD,99466
99461 :: CALL :: call :: Ljava/util/List :: v31 = asList(v6)::JM,99461
99460 :: PRED :: IF :: Z :: if (v29 < v12) goto 30::CD,99428:CD,99432:CD,99458:CD,99459:CD,99466:JM,99461
99466 :: EXPR :: assign :: null :: PHI v29 = #(0), v28::DD,99458:DD,99460:CF,99459
100585 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::JM,84306:JM,84341
100584 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLocalFile(java.lang.String)::CE,100585:CD,100589:CD,100593:CD,100599:CD,100603:CD,100612:CD,100617:CD,100621:CD,100623:CD,100638:CD,100647:CD,100723:CD,100727
100589 :: NORM :: declaration :: Ljava/util/LinkedList :: v4 = new java.util.LinkedList::JM,100656:JM,100727
100593 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $pdbId .substring(#(1), #(3))::
100599 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toLowerCase()::
100603 :: NORM :: declaration :: Ljava/io/File :: v12 = new java.io.File::
100604 :: EXPR :: reference :: Ljava/io/File :: v13 = p0 $this .splitDirPath::
100612 :: CALL :: call :: Z :: v16 = v4.add(v12)::
100617 :: CALL :: call :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v18 = p0 $this .getObsoleteBehavior()::JM,100623:CL,111045
100621 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v19 = org.biojava.nbio.structure.io.LocalPDBDirectory$ObsoleteBehavior.FETCH_OBSOLETE::CF,100623
100623 :: PRED :: IF :: Z :: if (v18 != v19) goto 71::CF,100624:CD,100633:CF,100638
100625 :: EXPR :: reference :: Ljava/io/File :: v21 = p0 $this .obsoleteDirPath::
100624 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::
100633 :: CALL :: call :: Z :: v24 = v4.add(v20)::
100638 :: NORM :: declaration :: [Ljava/lang/String :: v26 = new java.lang.String[]::DD,100657
100647 :: CALL :: call :: Ljava/util/Iterator :: v31 = v4.iterator()::JM,100656:JM,100727
100652 :: CALL :: call :: Ljava/lang/Object :: v35 = v31.next()::JM,100656:JM,100727
100657 :: EXPR :: assign :: I :: v37 = v26.length::DD,100722
100656 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::CF,100657
100663 :: CALL :: call :: Ljava/util/List :: v40 = p0 $this .getExtensions()::JM,100720:JM,100676:CL,30580
100667 :: CALL :: call :: Ljava/util/Iterator :: v42 = v40.iterator()::JM,100720:JM,100676
100672 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,100720:JM,100676
100677 :: NORM :: declaration :: Ljava/io/File :: v48 = new java.io.File::DD,100715:CF,100678
100676 :: EXPR :: assign :: Ljava/lang/Object :: v47 = CHECKCAST v46::CF,100677
100679 :: CALL :: call :: Ljava/lang/String :: v51 = valueOf(v38)::
100678 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
100687 :: CALL :: call :: Ljava/lang/String :: v54 = p1 $pdbId .toLowerCase()::
100691 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v49.append(v54)::
100696 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(v47)::
100701 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::
100710 :: CALL :: call :: Z :: v63 = v48.exists()::JM,100714
100715 :: NORM :: compound :: Ljava/io/File :: return v48::DD,100585
100714 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 207::CF,100729:CD,100715:CD,100716:CD,100720
100716 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,100720:JM,100676
100721 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v66 + #(1)::DD,100730
100720 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 146::CD,100672:CD,100676:CD,100677:CD,100678:CD,100679:CD,100687:CD,100691:CD,100696:CD,100701:CD,100710:CD,100714:CD,100721:CD,100722:CD,100730:CD,100729:JM,100720
100723 :: CALL :: call :: Z :: v33 = v31.hasNext()::JM,100656:JM,100727
100722 :: PRED :: IF :: Z :: if (v65 < v37) goto 127::CD,100663:CD,100667:CD,100716:CD,100720:CD,100723:CD,100727:CD,100729:JM,100656
100727 :: PRED :: IF :: Z :: if (v33 != #(0)) goto 99::CD,100652:CD,100656:CD,100657:CD,100722:CD,100728:CD,100730:JM,100727
100729 :: EXPR :: assign :: null :: PHI v66 = v65, v66::JM,100720:JM,100676:DD,100721:DD,100729
100728 :: NORM :: compound :: Ljava/io/File :: return #(null)::DD,100585
100730 :: EXPR :: assign :: null :: PHI v65 = #(0), v64::DD,100722:DD,100729
100797 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::
100796 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior()::CE,100797:CD,100799:CD,100801
100799 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory.$SWITCH_TABLE$org$biojava$nbio$structure$io$LocalPDBDirectory$FetchBehavior::DD,100801:DD,100802
100801 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,100802:CD,100803:CD,100806:CD,100807:CD,100808:CD,100810:CD,100819:CD,100821:CD,100830:CD,100832:CD,100841:CD,100843:CD,100852:CD,100854:CD,100865
100803 :: CALL :: call :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = values()::JM,100806:CL,111054
100802 :: NORM :: compound :: [I :: return v2::DD,100797
100807 :: NORM :: declaration :: [I :: v7 = new []::DD,100865
100806 :: EXPR :: assign :: I :: v6 = v5.length::CF,100807
100808 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v8 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_FILES::
100810 :: CALL :: call :: I :: v10 = v8.ordinal()::
100814 :: EXPR :: modify :: I :: v7[v10] = #(2)::
100819 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v14 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_IF_OUTDATED::
100821 :: CALL :: call :: I :: v16 = v14.ordinal()::
100825 :: EXPR :: modify :: I :: v7[v16] = #(3)::
100830 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v20 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FETCH_REMEDIATED::
100832 :: CALL :: call :: I :: v22 = v20.ordinal()::
100836 :: EXPR :: modify :: I :: v7[v22] = #(4)::
100841 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v26 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.FORCE_DOWNLOAD::
100843 :: CALL :: call :: I :: v28 = v26.ordinal()::
100847 :: EXPR :: modify :: I :: v7[v28] = #(5)::
100852 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v32 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.LOCAL_ONLY::
100854 :: CALL :: call :: I :: v34 = v32.ordinal()::
100858 :: EXPR :: modify :: I :: v7[v34] = #(1)::
100865 :: NORM :: compound :: [I :: return v7::DD,100797
100907 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::CE,100908:CD,100914
100908 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.FileParsingParameters.isUpdateRemediatedFiles()::JM,84315
100911 :: EXPR :: reference :: Z :: v3 = p0 $this .updateRemediatedFiles::DD,100914
100914 :: NORM :: compound :: Z :: return v3::CF,100908
100946 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getCurrent(java.lang.String)::CD,100950:CD,100956
100950 :: CALL :: call :: Ljava/util/List :: v6 = getReplacement(p1 $oldPdbId , #(1), #(0))::JM,100961:JM,100956:CL,111081
100957 :: CALL :: call :: Z :: v9 = v6.isEmpty()::JM,100961
100956 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 32::CD,100957:CD,100961
100961 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 32::CD,100962:JM,100961
100962 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.get(#(0))::JM,100961
100981 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.downloadStructure(java.lang.String,java.lang.String,boolean,java.io.File)::CD,100989:CD,100995:CD,100996:CD,101018:CD,101024:CD,101032:CD,101041:CD,101051
100989 :: CALL :: call :: Ljava/io/File :: v8 = p0 $this .getDir(p1 $pdbId , p3 $obsolete )::CL,111538
100995 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
100996 :: CALL :: call :: Ljava/lang/String :: v11 = p0 $this .getFilename(p1 $pdbId )::CL,111636:CL,111667
101018 :: CALL :: call :: Ljava/lang/String :: v22 = p1 $pdbId .substring(#(1), #(3))::
101024 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toLowerCase()::
101032 :: CALL :: call :: Ljava/lang/String :: v26 = p0 $this .getFilename(p1 $pdbId )::CL,111636:CL,111667
101041 :: CALL :: call :: Ljava/lang/String :: v28 = format(#(%s%s/%s/%s), v15)::
101051 :: PRED :: IF :: Z :: if (p4 $existingFile  == #(null)) goto 150::CD,101052:CD,101057:CD,101091:CD,101096:CD,101101:CD,101111:CD,101116:CD,101121:CD,101129
101052 :: CALL :: call :: Ljava/util/Date :: v33 = p0 $this .getLastModifiedTime(v29)::JM,101057:JM,101062:JM,101066:CL,111700
101057 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 137::CD,101058:CD,101062:CD,101066:CD,101067:CD,101091:CD,101096:CD,101101:CD,101111:CD,101116:CD,101121:CD,101129
101058 :: CALL :: call :: J :: v38 = p4 $existingFile .lastModified()::JM,101066
101062 :: CALL :: call :: J :: v40 = v33.getTime()::JM,101062:JM,101066
101067 :: PRED :: IF :: Z :: if (v41 < #(0)) goto 116::CD,101091:CD,101096:CD,101101:CD,101111:CD,101116:CD,101121:CD,101129
101066 :: EXPR :: assign :: Z :: v41 = v38 == v40::DD,101067
101091 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v49 = new java.lang.StringBuilder::
101096 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v49.append(v28)::
101101 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
101111 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v58 = new java.lang.StringBuilder::
101116 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v58.append(v9)::
101121 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
101129 :: CALL :: call :: V :: downloadFile(v29, v9)::CL,98772
101193 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::JM,84395
101192 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String)::CE,101193:CD,101201:CD,101205
101201 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v7 = getStatus(v4)::JM,101205:CL,111785
101205 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 41::CD,101220:CD,101221
101216 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v7[#(0)]::DD,101220
101221 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,101193
101220 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v11::DD,101193
101245 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setPDBFlag(boolean)::JM,101250
101250 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = p1 $flag ::
101256 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.clone()::CD,101260:JM,103091:JM,103096:CD,101268:CD,101276:CD,101290:CD,101302:CD,101310:CD,101318:CD,101326:CD,101334:CD,101342
101260 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AtomImpl :: v3 = new org.biojava.nbio.structure.AtomImpl::
101268 :: CALL :: call :: V :: v3.setOccupancy(v6)::CL,103208
101276 :: CALL :: call :: V :: v3.setTempFactor(v9)::CL,103219
101280 :: EXPR :: reference :: C :: v11 = p0 $this .altLoc::DD,101283
101283 :: EXPR :: modify :: C :: v3.altLoc = v11::
101290 :: CALL :: call :: V :: v3.setCharge(v13)::CL,102535
101302 :: CALL :: call :: V :: v3.setX(v18)::CL,103160
101310 :: CALL :: call :: V :: v3.setY(v21)::CL,103176
101318 :: CALL :: call :: V :: v3.setZ(v24)::CL,103192
101326 :: CALL :: call :: V :: v3.setPDBserial(v27)::CL,103138
101334 :: CALL :: call :: V :: v3.setName(v30)::CL,103149
101342 :: CALL :: call :: V :: v3.setElement(v33)::CL,103298
101375 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setGroup(org.biojava.nbio.structure.Group)::JM,101380
101380 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = p1 $parent ::
101386 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.addAltLoc(org.biojava.nbio.structure.Group)::CD,101394:CD,101405
101391 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .altLocs::DD,101394
101395 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,101399
101394 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 19::CD,101395
101399 :: EXPR :: modify :: Ljava/util/List :: p0 $this .altLocs = v6::
101402 :: EXPR :: reference :: Ljava/util/List :: v8 = p0 $this .altLocs::
101405 :: CALL :: call :: Z :: v10 = v8.add(p1 $group )::
101418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,101423
101423 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: p0 $this .chemComp = p1 $cc ::
101429 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setAtcc(java.lang.String)::JM,101434
101434 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .atcc = p1 $atcc ::
101440 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCell(java.lang.String)::JM,101445
101445 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cell = p1 $cell ::
101451 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismCommon(java.lang.String)::JM,101456
101456 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismCommon = p1 $organismCommon ::
101462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismScientific(java.lang.String)::JM,101467
101467 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismScientific = p1 $organismScientific ::
101473 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganismTaxId(java.lang.String)::JM,101478
101478 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organismTaxId = p1 $organismTaxId ::
101484 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTaxId(java.lang.String)::JM,101489
101489 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTaxId = p1 $expressionSystemTaxId ::
101495 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystem(java.lang.String)::JM,101500
101500 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystem = p1 $expressionSystem ::
101507 :: EXIT :: exit :: J :: org.biojava.nbio.structure.HetatomImpl.getId()::JM,85544:JM,85571:JM,85586
101506 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getId()::CE,101507:CD,101513
101510 :: EXPR :: reference :: J :: v3 = p0 $this .id::DD,101513
101513 :: NORM :: compound :: J :: return v3::CF,101507
101515 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formPeptideBonds()::CD,101522:CD,101526:CD,101613:CD,101617
101522 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,101617:CL,79536
101526 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,101617
101531 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,101617
101536 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,101554:JM,101611:JM,101546:CL,48832
101541 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,101554:JM,101611:JM,101546
101547 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,101548:CD,101549:CD,101554:CD,101555:CF,101606
101546 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,101547
101549 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,101554:JM,101611:JM,101546
101548 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,101554:JM,101611:JM,101546
101555 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,101557:CD,101563:CD,101564:CD,101570:CD,101574:JM,101554:JM,101611:JM,101546
101554 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.AminoAcidImpl::DD,101555
101557 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,101554:JM,101611:JM,101546
101563 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,101554:JM,101611:JM,101546
101564 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,101554:JM,101611:JM,101546
101570 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,101574:CL,56367
101575 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,101579:CL,56367
101574 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,101575:CD,101579:CF,101606
101579 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,101581:CD,101585:CD,101589
101581 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v29.getC()::JM,101589:CL,112011
101585 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v33.getN()::JM,101590:CL,112023
101589 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,101590:CF,101606
101590 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,101592:CD,101597:CD,101598
101592 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,101597:CL,112035
101597 :: EXPR :: assign :: Z :: v46 = v44 > #(1.8 d)::DD,101598
101598 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,112272:JM,112263:JM,112266:JM,112269:CF,101606
101607 :: CALL :: call :: I :: v17 = v15.size()::JM,101554:JM,101611:JM,101546
101606 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,101619
101611 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,101612
101613 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,101617
101612 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,101541:CD,101546:CD,101547:CD,101606:CD,101607:CD,101611:CD,101619:JM,101554:JM,101617
101617 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,101531:CD,101536:CD,101607:CD,101611:CD,101612:CD,101613:CD,101619:JM,101617
101619 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,101554:JM,101611:JM,101546:DD,101548:DD,101563:DD,101606:DD,101612
101668 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formNucleotideBonds()::CD,101675:CD,101679:CD,101766:CD,101770
101675 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,101770:CL,79536
101679 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,101770
101684 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,101770
101689 :: CALL :: call :: Ljava/util/List :: v15 = v13.getSeqResGroups()::JM,101699:JM,101764:JM,101707:CL,48832
101694 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v50)::JM,101699:JM,101764:JM,101707
101699 :: EXPR :: assign :: Z :: v22=v21 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,101700
101701 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v50 + #(1)::JM,101699:JM,101764:JM,101707
101700 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 173::CD,101701:CD,101702:CD,101707:CD,101708:CF,101759
101702 :: CALL :: call :: Ljava/lang/Object :: v25 = v15.get(v23)::JM,101699:JM,101764:JM,101707
101707 :: EXPR :: assign :: Z :: v26=v25 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,101708
101708 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 77::CD,101710:CD,101716:CD,101717:CD,101723:CD,101727:JM,101699:JM,101764:JM,101707
101710 :: CALL :: call :: Ljava/lang/Object :: v28 = v15.get(v50)::JM,101699:JM,101764:JM,101707
101717 :: CALL :: call :: Ljava/lang/Object :: v32 = v15.get(v30)::JM,101699:JM,101764:JM,101707
101716 :: EXPR :: assign :: Ljava/lang/Object :: v30 = v50 + #(1)::JM,101699:JM,101764:JM,101707
101723 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v35 = v29.getResidueNumber()::JM,101727:CL,56367
101727 :: PRED :: IF :: Z :: if (v35 == #(null)) goto 173::CD,101728:CD,101732:CF,101759
101728 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v38 = v33.getResidueNumber()::JM,101732:CL,56367
101732 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 123::CD,101734:CD,101738:CD,101742
101734 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v33.getP()::JM,101742:CL,112094
101738 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v42 = v29.getO3Prime()::JM,101743:CL,112106
101743 :: PRED :: IF :: Z :: if (v42 != #(null)) goto 152::CD,101745:CD,101750:CD,101751
101742 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 173::CD,101743:CF,101759
101745 :: CALL :: call :: D :: v44 = getDistance(v40, v42)::JM,101750:CL,112035
101751 :: PRED :: IF :: Z :: if (v46 >= #(0)) goto 173::JM,112272:JM,112263:JM,112266:JM,112269:CF,101759
101750 :: EXPR :: assign :: Z :: v46 = v44 > #(2.1 d)::DD,101751
101759 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v50 + #(1)::DD,101772
101760 :: CALL :: call :: I :: v17 = v15.size()::JM,101699:JM,101764:JM,101707
101765 :: PRED :: IF :: Z :: if (v50 < v19) goto 44::CD,101694:CD,101699:CD,101700:CD,101759:CD,101760:CD,101764:CD,101772:JM,101707:JM,101770
101764 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v17 - #(1)::CF,101765
101766 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,101770
101770 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,101684:CD,101689:CD,101760:CD,101764:CD,101765:CD,101766:CD,101772:JM,101770
101772 :: EXPR :: assign :: null :: PHI v50 = #(0), v49::JM,101699:JM,101764:JM,101707:DD,101701:DD,101716:DD,101759:DD,101765
101821 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formIntraResidueBonds()::CD,101828:CD,101832:CD,101973:CD,101977
101828 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,101977:CL,79536
101832 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,101977
101837 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,101977
101842 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,101972:JM,101855:CL,48461
101846 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,101972:JM,101855
101851 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,101972:JM,101855
101855 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::
101856 :: CALL :: call :: Lorg/biojava/nbio/structure/ResidueNumber :: v24 = v22.getResidueNumber()::JM,101860:CL,56367
101860 :: PRED :: IF :: Z :: if (v24 != #(null)) goto 71::CF,101862:CD,101866:CD,101871:CD,101875:CD,101890:CD,101894:CD,101895:CD,101963:CD,101967
101862 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::JM,101967
101866 :: CALL :: call :: Z :: v29 = v26.add(v22)::
101871 :: CALL :: call :: Ljava/util/List :: v31 = v22.getAltLocs()::JM,101894:JM,101884:CL,56406
101875 :: CALL :: call :: Ljava/util/Iterator :: v33 = v31.iterator()::JM,101894:JM,101884
101880 :: CALL :: call :: Ljava/lang/Object :: v37 = v33.next()::JM,101894:JM,101884
101885 :: CALL :: call :: Z :: v40 = v26.add(v38)::
101884 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::
101890 :: CALL :: call :: Z :: v35 = v33.hasNext()::JM,101894:JM,101884
101895 :: CALL :: call :: Ljava/util/Iterator :: v42 = v26.iterator()::JM,101967
101894 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 109::CD,101880:CD,101884:CD,101885:CD,101890:JM,101894:JM,101967
101900 :: CALL :: call :: Ljava/lang/Object :: v46 = v42.next()::JM,101967
101909 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v51 = getChemComp(v49)::CL,102322
101913 :: CALL :: call :: Ljava/util/List :: v53 = v51.getBonds()::JM,101962:CL,112118
101917 :: CALL :: call :: Ljava/util/Iterator :: v55 = v53.iterator()::JM,101962
101922 :: CALL :: call :: Ljava/lang/Object :: v59 = v55.next()::JM,101962
101931 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v64 = v47.getAtom(v62)::JM,101945:CL,102462
101940 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v68 = v47.getAtom(v66)::JM,101946:CL,102462
101945 :: PRED :: IF :: Z :: if (v64 == #(null)) goto 261::CD,101946:JM,101962
101946 :: PRED :: IF :: Z :: if (v68 == #(null)) goto 261::JM,112272:JM,112263:JM,112266:JM,112269:JM,101962
101958 :: CALL :: call :: Z :: v57 = v55.hasNext()::JM,101962
101963 :: CALL :: call :: Z :: v44 = v42.hasNext()::JM,101967
101962 :: PRED :: IF :: Z :: if (v57 != #(0)) goto 192::CD,101922:CD,101931:CD,101940:CD,101945:CD,101958:JM,101962:JM,101967
101967 :: PRED :: IF :: Z :: if (v44 != #(0)) goto 153::CD,101900:CD,101909:CD,101913:CD,101917:CD,101958:CD,101962:CD,101963:JM,101967:JM,101972:JM,101855
101968 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,101972:JM,101855
101973 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,101977
101972 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 48::CD,101851:CD,101855:CD,101856:CD,101860:CD,101968:JM,101972:JM,101977
101977 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,101837:CD,101842:CD,101846:CD,101968:CD,101972:CD,101973:JM,101977
102038 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.trimBondLists()::CD,102045:CD,102049:CD,102119:CD,102123
102045 :: CALL :: call :: Ljava/util/List :: v5 = v3.getChains()::JM,102123:CL,79536
102049 :: CALL :: call :: Ljava/util/Iterator :: v7 = v5.iterator()::JM,102123
102054 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,102123
102059 :: CALL :: call :: Ljava/util/List :: v15 = v13.getAtomGroups()::JM,102118:CL,48461
102063 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,102118
102068 :: CALL :: call :: Ljava/lang/Object :: v21 = v17.next()::JM,102118
102073 :: CALL :: call :: Ljava/util/List :: v24 = v22.getAtoms()::JM,102113:CL,102965
102077 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,102113
102082 :: CALL :: call :: Ljava/lang/Object :: v30 = v26.next()::JM,102113
102087 :: CALL :: call :: Ljava/util/List :: v33 = v31.getBonds()::JM,102091:CL,112127
102091 :: PRED :: IF :: Z :: if (v33 == #(null)) goto 123::CD,102092:CD,102096:CD,102100:JM,102113
102092 :: CALL :: call :: Ljava/util/List :: v36 = v31.getBonds()::JM,102100:CL,112127
102096 :: CALL :: call :: I :: v38 = v36.size()::JM,102100
102101 :: CALL :: call :: Ljava/util/List :: v40 = v31.getBonds()::JM,102105:CL,112127
102100 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 123::CD,102101:CD,102105:CD,102106:JM,102113
102105 :: EXPR :: assign :: Ljava/lang/Object :: v41 = CHECKCAST v40::
102106 :: CALL :: call :: V :: v41.trimToSize()::
102109 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,102113
102113 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 73::CD,102082:CD,102087:CD,102091:CD,102109:JM,102113:JM,102118
102114 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,102118
102119 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,102123
102118 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 46::CD,102068:CD,102073:CD,102077:CD,102109:CD,102113:CD,102114:JM,102118:JM,102123
102123 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 19::CD,102054:CD,102059:CD,102063:CD,102114:CD,102118:CD,102119:JM,102123
102149 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::JM,86093:JM,86127
102148 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.getAtomFromRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)::CE,102149:CD,102158:CD,102167:CD,102173:CD,102177:CD,102181:CD,102186:JM,85074:JM,85077:JM,85071:CD,102196:CD,102201:CD,102205:CD,102222:CD,102227:CD,102232:CD,102237:CD,102242:CD,102247:CD,102252:CD,102257:CD,102266:CD,102271:CD,102272:JM,102163:JM,102159
102159 :: CALL :: call :: Z :: v11 = p6 $iCode .isEmpty()::JM,102272:JM,102163:JM,102159:JM,102158
102158 :: PRED :: IF :: Z :: if (p6 $iCode  == #(null)) goto 19::CD,102159:CD,102163:CD,102272:JM,102158
102163 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 19::CF,102272
102167 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v17 = v15.getChainByPDB(p4 $chainID )::CL,74318
102173 :: CALL :: call :: I :: v20 = parseInt(p5 $resSeq )::JM,102272:JM,102163:JM,102159:JM,102158
102177 :: CALL :: call :: Ljava/lang/Integer :: v22 = valueOf(v20)::JM,102163
102181 :: CALL :: call :: C :: v24 = v14.charAt(#(0))::
102186 :: CALL :: call :: Ljava/lang/Character :: v26 = valueOf(v24)::
102196 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = v17.getGroupByPDB(v18)::CL,86717
102201 :: CALL :: call :: Z :: v31 = p2 $altLoc .isEmpty()::JM,102201:JM,102205
102205 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 158::CD,102206:CD,102215:JM,102201:JM,102205
102206 :: CALL :: call :: C :: v33 = p2 $altLoc .charAt(#(0))::JM,102201:JM,102205
102215 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v37 = v29.getAltLocGroup(v35)::CL,112136
102222 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
102227 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p2 $altLoc )::JM,102201:JM,102205
102232 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in group ))::
102237 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v49.append(p5 $resSeq )::JM,102272:JM,102163:JM,102159:JM,102158
102242 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(v14)::JM,102163
102247 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v53.append(#( of chain ))::
102252 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v56.append(p4 $chainID )::JM,102272:JM,102163:JM,102159:JM,102158
102257 :: CALL :: call :: Ljava/lang/String :: v60 = v58.toString()::JM,102163
102266 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v40 = v38.getAtom(p1 $name )::JM,102271:CL,102462
102271 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v40::DD,102149
102272 :: EXPR :: assign :: null :: PHI v14 = p6 $iCode , #( )::
102323 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::JM,89595:JM,89827
102322 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.getChemComp(java.lang.String)::CE,102323:CD,102326:CD,102330:CD,102334:CD,102336:CD,102341:CD,102342
102326 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $recordName .toUpperCase()::JM,102336:JM,102341
102330 :: CALL :: call :: Ljava/lang/String :: v6 = v4.trim()::JM,102336:JM,102341
102334 :: EXPR :: reference :: Lorg/biojava/nbio/core/util/SoftHashMap :: v7 = org.biojava.nbio.structure.io.mmcif.ChemCompGroupFactory.cache::JM,102336:JM,102341
102336 :: CALL :: call :: Ljava/lang/Object :: v9 = v7.get(v6)::JM,102336:JM,102341
102341 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,102342:JM,102350:DD,102372
102342 :: PRED :: IF :: Z :: if (v10 == #(null)) goto 57::CD,102345:CD,102350:CD,102354:CD,102359:CD,102364:CD,102372:CD,102375:CD,102380:CD,102385:CD,102396:CD,102400:CD,102405:CD,102415:CD,102428
102345 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v38 = new java.lang.StringBuilder::
102350 :: CALL :: call :: Ljava/lang/String :: v41 = v10.getThree_letter_code()::JM,102350
102354 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v38.append(v41)::
102359 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v43.append(#( read from cache))::
102364 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
102372 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v10::DD,102323
102375 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
102380 :: CALL :: call :: Ljava/lang/StringBuilder :: v17 = v13.append(v6)::JM,102336:JM,102341
102385 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v17.append(#( read from provider ))::
102396 :: CALL :: call :: Ljava/lang/String :: v25 = v23.getCanonicalName()::
102400 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v20.append(v25)::
102405 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
102415 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v33 = v31.getChemComp(v6)::JM,102428:CL,112402
102428 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v33::DD,102323
102453 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::CE,102454:CD,102460
102454 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getAtoms()::JM,86608:JM,86437
102457 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,102460
102460 :: NORM :: compound :: Ljava/util/List :: return v3::CF,102454
102463 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::JM,86566:JM,86594:JM,101945:JM,101946:JM,102271:JM,112020:JM,112032:JM,112103:JM,112115
102462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtom(java.lang.String)::CE,102463:CD,102470:JM,102503
102467 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,102470
102470 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 22::CD,102474:CD,102479:CD,102480:CD,102484:CD,102505:CD,102509
102474 :: CALL :: call :: Ljava/lang/Object :: v21 = v19.get(p1 $name )::JM,102479
102479 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::CF,102480
102481 :: EXPR :: reference :: Ljava/util/List :: v6 = p0 $this .atoms::JM,102493:JM,102509
102480 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v22::DD,102463
102484 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,102493:JM,102509
102489 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,102493:JM,102509
102493 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,102504
102494 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getName()::JM,102503:CL,88889
102498 :: CALL :: call :: Z :: v18 = v16.equals(p1 $name )::JM,102503
102503 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 60::CD,102504:CD,102505:CD,102509:JM,102493
102505 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,102493:JM,102509
102504 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v14::DD,102463
102509 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 35::CD,102489:CD,102493:CD,102494:CD,102498:CD,102503:CD,102510:JM,102509
102510 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return #(null)::DD,102463
102527 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::JM,130303:JM,130329
102526 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getId()::CE,102527:CD,102533
102530 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,102533
102533 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,102527
102535 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setCharge(short)::JM,102540
102540 :: EXPR :: modify :: S :: p0 $this .charge = p1 $inputCharge ::
102569 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.parseOperatorExpressionString(java.lang.String)::CD,102584:CD,102588
102584 :: CALL :: call :: Z :: v11 = isUnaryExpression(v9)::JM,102588:CL,112620
102589 :: CALL :: call :: Ljava/util/List :: v16 = parseUnaryOperatorExpression(v9)::CL,112659
102588 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 34::CD,102589:CD,102597
102597 :: CALL :: call :: Ljava/util/List :: v14 = parseBinaryOperatorExpression(v9)::CL,112669
102617 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::CE,102618:CD,102624
102618 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getUnaryOperators()::JM,87154
102621 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .unaryOperators::DD,102624
102624 :: NORM :: compound :: Ljava/util/List :: return v3::CF,102618
102626 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.getModelTransformationMatrix(java.lang.String)::CD,102634:CD,102655:CD,102659:JM,102653
102631 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .modelTransformations::JM,102659
102634 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,102659
102639 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,102659
102644 :: CALL :: call :: Ljava/lang/String :: v14 = v12.getId()::JM,102653:CL,112767
102648 :: CALL :: call :: Z :: v16 = v14.equals(p1 $operator )::JM,102653
102653 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 37::CD,102655:CD,102659
102655 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,102659
102659 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,102639:CD,102644:CD,102648:CD,102653:CD,102662:CD,102667:CD,102672:JM,86906:JM,102659
102662 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
102667 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $operator )::JM,102653
102672 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
102708 :: NORM :: declaration :: Ljavax/vecmath/Matrix4d :: v5 = new javax.vecmath.Matrix4d::DD,102716
102716 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = v5::
102719 :: CALL :: call :: Ljava/lang/String :: v9 = p1 $src .getId()::JM,102723:CL,112767
102723 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = v9::
102726 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $src .getChainId()::JM,102730:CL,112776
102730 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = v11::
102742 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setChainId(java.lang.String)::JM,102747
102747 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .chainId = p1 $chainId ::
102753 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::CE,102754:CD,102760
102754 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.OperatorResolver.getBinaryOperators()::JM,87340
102757 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .binaryOperators::DD,102760
102760 :: NORM :: compound :: Ljava/util/List :: return v3::CF,102754
102781 :: EXIT :: exit :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::
102780 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.combine(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,102781:CD,102800:JM,86906:CD,102804:CD,102808
102800 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v9 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::DD,102808
102804 :: CALL :: call :: V :: v9.setTransformationMatrix(v4)::CL,112785
102808 :: NORM :: compound :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: return v9::DD,102781
102819 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMTranspose()::CD,102826
102823 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Mtransp::DD,102826
102826 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,102831:CD,102835
102831 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v6 = p0 $this .getM()::CL,112796
102835 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v7 = new javax.vecmath.Matrix3d::DD,102839
102839 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Mtransp = v7::
102927 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::CE,102928:CD,102934
102928 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAltLoc()::JM,87898
102931 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .altLocs::DD,102934
102935 :: NORM :: compound :: Z :: return #(0)::CF,102928
102934 :: PRED :: IF :: Z :: if (v3 != #(null)) goto 10::CD,102935:CD,102939:CD,102943:CD,102945:CD,102946
102936 :: EXPR :: reference :: Ljava/util/List :: v5 = p0 $this .altLocs::JM,102943
102939 :: CALL :: call :: Z :: v7 = v5.isEmpty()::JM,102943
102943 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 26::CD,102946
102945 :: NORM :: compound :: Z :: return v10::CF,102928
102946 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,102945
102954 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setId(long)::JM,102959
102959 :: EXPR :: modify :: J :: p0 $this .id = p1 $id ::
102965 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::CE,102966:CD,102972
102966 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.HetatomImpl.getAtoms()::JM,88247:JM,88293:JM,88319:JM,88349:JM,102113:JM,103904:JM,103976:JM,103950:JM,104006:JM,112193:JM,113037
102969 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .atoms::DD,102972
102972 :: NORM :: compound :: Ljava/util/List :: return v3::CF,102966
102975 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::JM,88263:JM,88313:JM,88849:JM,88761:JM,103920:JM,103970:JM,112157:JM,112211
102974 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getAltLoc()::CE,102975:CD,102981
102978 :: EXPR :: reference :: C :: v3 = p0 $this .altLoc::DD,102981
102981 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 10::CD,102982:CD,102986:CD,102990
102983 :: EXPR :: reference :: C :: v5 = p0 $this .altLoc::JM,102990
102982 :: NORM :: compound :: Ljava/lang/Character :: return #(null)::DD,102975
102986 :: CALL :: call :: Ljava/lang/Character :: v7 = valueOf(v5)::JM,102990
102990 :: NORM :: compound :: Ljava/lang/Character :: return v7::DD,102975
102995 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setAtoms(java.util.List)::CD,103003:CD,103010:CD,103041:CD,103045:CD,103049:CD,103053:JM,103046
103000 :: EXPR :: reference :: Ljava/util/Map :: v4 = p0 $this .atomNameLookup::DD,103003
103003 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 17::CD,103007:JM,103045:JM,103046:JM,103053
103004 :: EXPR :: reference :: Ljava/util/Map :: v6 = p0 $this .atomNameLookup::
103007 :: CALL :: call :: V :: v6.clear()::
103010 :: CALL :: call :: Ljava/util/Iterator :: v9 = p1 $atoms .iterator()::JM,103045:JM,103046:JM,103053
103015 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.next()::JM,103045:JM,103053
103020 :: CALL :: call :: V :: v15.setGroup(p0 $this )::CL,101375
103024 :: EXPR :: reference :: Ljava/util/Map :: v17 = p0 $this .atomNameLookup::DD,103027
103027 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 68::CD,103035:JM,103045:JM,103053
103035 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.put(v20, v15)::
103041 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,103045:JM,103053
103045 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 27::CD,103015:CD,103020:CD,103027:CD,103041:JM,103045:JM,103053
103046 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = p1 $atoms ::
103049 :: CALL :: call :: Z :: v24 = p1 $atoms .isEmpty()::JM,103045:JM,103053
103053 :: PRED :: IF :: Z :: if (v24 != #(0)) goto 95::
103054 :: EXPR :: modify :: Z :: p0 $this .pdb_flag = #(1)::
103088 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = #(null)::
103091 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v5 = org.biojava.nbio.structure.Element.R::DD,103093
103093 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = v5::
103097 :: EXPR :: modify :: [D :: p0 $this .coords = v7::
103096 :: NORM :: declaration :: [D :: v7 = new []::DD,103097
103100 :: EXPR :: modify :: F :: p0 $this .occupancy = #(0.0 f)::
103103 :: EXPR :: modify :: F :: p0 $this .tempfactor = #(0.0 f)::
103106 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
103109 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Group :: p0 $this .parent = #(null)::
103112 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = #(null)::
103115 :: EXPR :: modify :: S :: p0 $this .charge = #(0)::
103138 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setPDBserial(int)::JM,103143
103143 :: EXPR :: modify :: I :: p0 $this .pdbserial = p1 $i ::
103149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setName(java.lang.String)::JM,103154
103154 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .name = p1 $s ::
103160 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setX(double)::JM,103168
103165 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
103168 :: EXPR :: modify :: D :: v4[#(0)] = p1 $x ::
103176 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setY(double)::JM,103184
103181 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
103184 :: EXPR :: modify :: D :: v4[#(1)] = p1 $y ::
103192 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setZ(double)::JM,103200
103197 :: EXPR :: reference :: [D :: v4 = p0 $this .coords::
103200 :: EXPR :: modify :: D :: v4[#(2)] = p1 $z ::
103208 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setOccupancy(float)::JM,103213
103213 :: EXPR :: modify :: F :: p0 $this .occupancy = p1 $occu ::
103219 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setTempFactor(float)::JM,103224
103224 :: EXPR :: modify :: F :: p0 $this .tempfactor = p1 $temp ::
103230 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setAltLoc(java.lang.Character)::CD,103235:JM,103244
103235 :: PRED :: IF :: Z :: if (p1 $c  != #(null)) goto 14::CD,103240:JM,103235:JM,103244
103236 :: EXPR :: modify :: C :: p0 $this .altLoc = #(0)::
103240 :: CALL :: call :: C :: v6 = p1 $c .charValue()::JM,103235:JM,103244
103244 :: EXPR :: modify :: C :: p0 $this .altLoc = v6::
103254 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Element.valueOfIgnoreCase(java.lang.String)::CD,103260:CD,103264:CD,103272:CD,103273:CD,103278:CD,103283
103260 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $elementSymbol .toLowerCase()::
103264 :: CALL :: call :: Ljava/lang/Object :: v7 = v3.get(v5)::
103273 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
103272 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v10 = new java.lang.IllegalArgumentException::
103278 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(p1 $elementSymbol )::
103283 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::
103298 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setElement(org.biojava.nbio.structure.Element)::JM,103303
103303 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Element :: p0 $this .element = p1 $e ::
103309 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getCoords()::CE,103310:CD,103316
103310 :: EXIT :: exit :: [D :: org.biojava.nbio.structure.AtomImpl.getCoords()::JM,88729
103313 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::DD,103316
103316 :: NORM :: compound :: [D :: return v3::CF,103310
103319 :: EXIT :: exit :: I :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::
103318 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getPDBserial()::CE,103319:CD,103325
103322 :: EXPR :: reference :: I :: v3 = p0 $this .pdbserial::DD,103325
103325 :: NORM :: compound :: I :: return v3::CF,103319
103327 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::CE,103328:CD,103333:CD,103338:CD,103339
103328 :: EXIT :: exit :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: org.biojava.nbio.structure.ExperimentalTechnique.getByName(java.lang.String)::JM,89041:JM,89045:JM,89035
103333 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $expTechniqueName )::JM,103338
103339 :: NORM :: compound :: Lorg/biojava/nbio/structure/ExperimentalTechnique :: return v6::DD,103328
103338 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,103339
103343 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::JM,89180
103342 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getA()::CE,103343:CD,103349
103346 :: EXPR :: reference :: D :: v3 = p0 $this .a::DD,103349
103349 :: NORM :: compound :: D :: return v3::CF,103343
103351 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::CE,103352:CD,103358
103352 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getB()::JM,89186
103355 :: EXPR :: reference :: D :: v3 = p0 $this .b::DD,103358
103358 :: NORM :: compound :: D :: return v3::CF,103352
103361 :: EXIT :: exit :: D :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::JM,89192
103360 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getC()::CE,103361:CD,103367
103364 :: EXPR :: reference :: D :: v3 = p0 $this .c::DD,103367
103367 :: NORM :: compound :: D :: return v3::CF,103361
103369 :: ENTR :: entry :: null :: org.biojava.nbio.structure.DBRef.toPDB(java.lang.StringBuffer)::CD,103374:CD,103375:CD,103379:CD,103404:CD,103415:CD,103426:CD,103437:CD,103469:CD,103480:CD,103491:CD,103502:CD,103510:CD,103516:CD,103520:CD,103525
103375 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
103374 :: NORM :: declaration :: Ljava/util/Formatter :: v4 = new java.util.Formatter::CF,103375
103379 :: EXPR :: reference :: Ljava/util/Locale :: v7 = java.util.Locale.UK::
103401 :: EXPR :: reference :: I :: v17 = p0 $this .seqbegin::
103404 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
103412 :: EXPR :: reference :: C :: v21 = p0 $this .insertBegin::
103415 :: CALL :: call :: Ljava/lang/Character :: v23 = valueOf(v21)::
103423 :: EXPR :: reference :: I :: v25 = p0 $this .seqEnd::
103426 :: CALL :: call :: Ljava/lang/Integer :: v27 = valueOf(v25)::
103434 :: EXPR :: reference :: C :: v29 = p0 $this .insertEnd::
103437 :: CALL :: call :: Ljava/lang/Character :: v31 = valueOf(v29)::
103466 :: EXPR :: reference :: I :: v39 = p0 $this .dbSeqBegin::
103469 :: CALL :: call :: Ljava/lang/Integer :: v41 = valueOf(v39)::
103477 :: EXPR :: reference :: C :: v43 = p0 $this .idbnsBegin::
103480 :: CALL :: call :: Ljava/lang/Character :: v45 = valueOf(v43)::
103488 :: EXPR :: reference :: I :: v47 = p0 $this .dbSeqEnd::
103491 :: CALL :: call :: Ljava/lang/Integer :: v49 = valueOf(v47)::
103499 :: EXPR :: reference :: C :: v51 = p0 $this .idbnsEnd::
103502 :: CALL :: call :: Ljava/lang/Character :: v53 = valueOf(v51)::
103510 :: CALL :: call :: Ljava/util/Formatter :: v55 = v4.format(#(DBREF  %4s %1s %4d%1s...), v11)::
103516 :: CALL :: call :: Ljava/lang/String :: v57 = v4.toString()::
103520 :: CALL :: call :: Ljava/lang/StringBuffer :: v59 = p1 $buf .append(v57)::
103525 :: CALL :: call :: V :: v4.close()::
103581 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::JM,89639:JM,89640:JM,89644:JM,129975:JM,129974:JM,129980
103580 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getMon_nstd_parent_comp_id()::CE,103581:CD,103587
103584 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .mon_nstd_parent_comp_id::DD,103587
103587 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,103581
103589 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::CE,103590:CD,103596
103590 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getThree_letter_code()::JM,89884:JM,89894
103593 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .three_letter_code::DD,103596
103596 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,103590
103599 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::JM,90329:JM,91115:JM,91508:JM,91592:JM,91758:JM,96332
103598 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.isKnownChain(java.lang.String,java.util.List)::CE,103599:CD,103623:CD,103627:CD,103629:JM,103620:JM,103610
103605 :: CALL :: call :: Ljava/lang/Object :: v9 = p2 $chains .get(v17)::JM,103620:JM,103627:JM,103610
103611 :: CALL :: call :: Ljava/lang/String :: v12 = v10.getChainID()::JM,103620:CL,48319
103610 :: EXPR :: assign :: Ljava/lang/Object :: v10 = CHECKCAST v9::DD,103621
103615 :: CALL :: call :: Z :: v14 = p1 $chainID .equals(v12)::JM,103620:JM,103627:JM,103610
103621 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v10::DD,103599
103620 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 34::CD,103621:CD,103622:CD,103623:CD,103627:CD,103629
103623 :: CALL :: call :: I :: v7 = p2 $chains .size()::JM,103620:JM,103627:JM,103610
103622 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v17 + #(1)::DD,103629
103627 :: PRED :: IF :: Z :: if (v17 < v7) goto 7::CD,103605:CD,103610:CD,103611:CD,103615:CD,103620:CD,103628:JM,103627
103629 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::JM,103620:JM,103610:DD,103622:DD,103627
103628 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return #(null)::DD,103599
103645 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::JM,90467:JM,94470
103644 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.get1LetterCode(java.lang.String)::CE,103645:CD,103648:CD,103652:CD,103689:CD,103691
103648 :: CALL :: call :: Ljava/lang/Character :: v4 = get1LetterCodeAmino(p1 $groupCode3 )::JM,103652:JM,103691:CL,87851
103653 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $groupCode3 .trim()::
103652 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 71::CF,103691:CD,103653:CD,103657:CD,103661
103657 :: CALL :: call :: Z :: v9 = isNucleotide(v7)::JM,103661:CL,89947
103661 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 66::CD,103664:CD,103669:CD,103670:CD,103679:CD,103685:CD,103690:CD,103691
103664 :: CALL :: call :: Ljava/lang/Object :: v16 = v14.get(v7)::JM,103669
103669 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::DD,103670:DD,103690
103670 :: PRED :: IF :: Z :: if (v17 != #(null)) goto 52::CF,103690:CD,103673:CD,103678
103673 :: CALL :: call :: Ljava/lang/Object :: v20 = v18.get(v7)::JM,103678
103679 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 71::CF,103691:CD,103680
103678 :: EXPR :: assign :: Ljava/lang/Object :: v21 = CHECKCAST v20::DD,103690
103680 :: CALL :: call :: Ljava/lang/Character :: v24 = valueOf(#(88))::JM,103691
103685 :: CALL :: call :: Ljava/lang/Character :: v13 = valueOf(#(88))::JM,103691
103689 :: NORM :: compound :: Ljava/lang/Character :: return v26::DD,103645
103691 :: EXPR :: assign :: null :: PHI v26 = v4, v22, v24, v13::CF,103689
103690 :: EXPR :: assign :: null :: PHI v22 = v17, v21::DD,103679:DD,103691
103713 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::CE,103714:CD,103720:CD,103724:JM,103735:JM,103740
103714 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getNewGroup(java.lang.String,java.lang.Character,java.lang.String)::JM,91545:JM,104071
103720 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = getGroupFromChemCompDictionary(p3 $aminoCode3 )::JM,103734:JM,103724:CL,89579
103725 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v10 = v7.getChemComp()::CL,89812
103724 :: PRED :: IF :: Z :: if (v7 == #(null)) goto 28::CD,103725:CD,103729:CD,103733:CD,103735:CD,103764:CD,103765
103729 :: CALL :: call :: Z :: v12 = v10.isEmpty()::JM,103733:CL,89872
103733 :: PRED :: IF :: Z :: if (v12 != #(0)) goto 28::CD,103734:CD,103735:CD,103764:CD,103765
103735 :: PRED :: IF :: Z :: if (p2 $aminoCode1  == #(null)) goto 40::CF,103741:CD,103736:CD,103740:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,103765
103734 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,103714
103736 :: CALL :: call :: C :: v16 = p2 $aminoCode1 .charValue()::JM,103740
103741 :: NORM :: declaration :: Lorg/biojava/nbio/structure/HetatomImpl :: v24 = new org.biojava.nbio.structure.HetatomImpl::DD,103765
103740 :: PRED :: IF :: Z :: if (#(88) != v16) goto 53::CF,103741:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,103746:CD,103750:CD,103765
103746 :: CALL :: call :: Z :: v18 = isNucleotide(p3 $aminoCode3 )::JM,103750:CL,89947
103751 :: NORM :: declaration :: Lorg/biojava/nbio/structure/NucleotideImpl :: v22 = new org.biojava.nbio.structure.NucleotideImpl::DD,103765
103750 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 75::CF,103756:CF,103751:JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,103760:CD,103765
103756 :: NORM :: declaration :: Lorg/biojava/nbio/structure/AminoAcidImpl :: v19 = new org.biojava.nbio.structure.AminoAcidImpl::DD,103765
103760 :: CALL :: call :: V :: v19.setAminoType(p2 $aminoCode1 )::CL,89936
103765 :: EXPR :: assign :: null :: PHI v26 = v24, v22, v19::CF,103764
103764 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v26::DD,103714
103791 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.addTohetGroupsDecider(org.biojava.nbio.structure.Group)::CD,103796:CD,103800:CD,103805:JM,103847
103796 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $group .getPDBName()::JM,103805:CL,56427
103800 :: CALL :: call :: Z :: v9 = v6.equals(#(HOH))::JM,103805
103805 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,103807:CD,103811:CD,103834:CD,103861
103807 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v11 = p1 $group .getChemComp()::JM,103811:CL,89812
103811 :: PRED :: IF :: Z :: if (v11 != #(null)) goto 48::CD,103812:CD,103816:CD,103818:CD,103823:CD,103825:CD,103829:CD,103833:CD,103861
103812 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v19 = p1 $group .getType()::JM,103818:JM,103823:CL,97141:CL,97149:CL,97133
103816 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v20 = org.biojava.nbio.structure.GroupType.HETATM::JM,103818:JM,103823
103818 :: CALL :: call :: Z :: v22 = v19.equals(v20)::JM,103818:JM,103823
103823 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 62::CF,103861
103825 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v14 = p1 $group .getChemComp()::CL,89812
103829 :: CALL :: call :: Z :: v16 = v14.isStandard()::JM,103833:CL,112859
103833 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 62::CF,103861
103834 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 99::CD,103838:CD,103842:CD,103847
103838 :: CALL :: call :: Ljava/util/List :: v26 = v24.getHetGroups()::JM,103847:CL,112868
103842 :: CALL :: call :: Z :: v28 = v26.contains(p1 $group )::JM,103847
103847 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 99::CD,103851:CD,103855
103851 :: CALL :: call :: Ljava/util/List :: v31 = v29.getHetGroups()::CL,112868
103855 :: CALL :: call :: Z :: v33 = v31.add(p1 $group )::JM,103847
103861 :: EXPR :: assign :: null :: PHI v23 = #(0), #(1), #(0), #(1)::DD,103834
103885 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::CE,103886:CD,103896:CD,103900:CD,103904:JM,103920:JM,103970:JM,103994
103886 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.io.PDBFileParser.getCorrectAltLocGroup(java.lang.Character,java.lang.String,java.lang.Character,java.lang.String)::JM,91119
103896 :: CALL :: call :: Ljava/util/List :: v9 = v7.getAtoms()::JM,103904:CL,102965
103900 :: CALL :: call :: I :: v11 = v9.size()::JM,103904
103905 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,103904
103904 :: PRED :: IF :: Z :: if (v11 <= #(0)) goto 54::CD,103905:CD,103911:CD,103915:CD,103920:CD,103928:CD,103932:CD,103977:CD,103981:JM,103904
103911 :: CALL :: call :: Ljava/lang/Character :: v17 = v15.getAltLoc()::JM,103920:CL,102974
103915 :: CALL :: call :: Z :: v19 = v17.equals(p1 $altLoc )::JM,103920:JM,103970
103921 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v78 = p0 $this .current_group::DD,103924
103920 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 54::CD,103924:CD,103928:CD,103932:CD,103977:CD,103981
103924 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v78::DD,103886
103928 :: CALL :: call :: Ljava/util/List :: v22 = v20.getAltLocs()::JM,103941:JM,103981:CL,56406
103932 :: CALL :: call :: Ljava/util/Iterator :: v24 = v22.iterator()::JM,103941:JM,103981
103937 :: CALL :: call :: Ljava/lang/Object :: v28 = v24.next()::JM,103941:JM,103981
103941 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::DD,103971
103942 :: CALL :: call :: Ljava/util/List :: v31 = v29.getAtoms()::JM,103976:JM,103950:CL,102965
103946 :: CALL :: call :: I :: v33 = v31.size()::JM,103976:JM,103950
103951 :: CALL :: call :: Ljava/util/Iterator :: v36 = v31.iterator()::JM,103976:JM,103950
103950 :: PRED :: IF :: Z :: if (v33 <= #(0)) goto 160::CD,103951:CD,103972:CD,103976:CD,103977:CD,103981:JM,103950:JM,103941
103956 :: CALL :: call :: Ljava/lang/Object :: v40 = v36.next()::JM,103976
103961 :: CALL :: call :: Ljava/lang/Character :: v43 = v41.getAltLoc()::JM,103970:CL,102974
103965 :: CALL :: call :: Z :: v45 = v43.equals(p1 $altLoc )::JM,103970:JM,103920
103971 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v29::DD,103886
103970 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 150::CD,103971:CD,103972:CD,103976
103972 :: CALL :: call :: Z :: v38 = v36.hasNext()::JM,103976
103977 :: CALL :: call :: Z :: v26 = v24.hasNext()::JM,103941:JM,103981
103976 :: PRED :: IF :: Z :: if (v38 != #(0)) goto 121::CD,103956:CD,103961:CD,103965:CD,103970:CD,103977:CD,103981:JM,103976:JM,103941
103981 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 78::CD,103937:CD,103941:CD,103942:CD,103946:CD,103950:CD,103985:CD,103989:CD,103994:JM,103981
103985 :: CALL :: call :: Ljava/lang/String :: v48 = v46.getPDBName()::JM,103994:CL,56427
103989 :: CALL :: call :: Z :: v50 = p4 $groupCode3 .equals(v48)::JM,103994
103994 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 266::CD,103998:CD,104002:CD,104006:CD,104042:CD,104049:CD,104060:CD,104067:CD,104071
103998 :: CALL :: call :: Ljava/util/List :: v62 = v60.getAtoms()::JM,104006:CL,102965
104002 :: CALL :: call :: I :: v64 = v62.size()::JM,104006
104007 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Group :: v77 = p0 $this .current_group::DD,104010
104006 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,104010:CD,104014:CD,104018:CD,104019:CD,104023:CD,104027:CD,104031:CD,104037:CD,104041
104010 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v77::DD,103886
104014 :: CALL :: call :: Ljava/lang/Object :: v67 = v65.clone()::JM,104018:CL,84505:CL,84822:CL,84647
104019 :: NORM :: declaration :: Ljava/util/ArrayList :: v69 = new java.util.ArrayList::
104018 :: EXPR :: assign :: Ljava/lang/Object :: v68 = CHECKCAST v67::DD,104041:CF,104019
104023 :: CALL :: call :: V :: v68.setAtoms(v69)::CL,102995
104027 :: CALL :: call :: Ljava/util/List :: v73 = v68.getAltLocs()::CL,56406
104031 :: CALL :: call :: V :: v73.clear()::
104037 :: CALL :: call :: V :: v75.addAltLoc(v68)::CL,101386
104041 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v68::DD,103886
104042 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = p0 $this .getNewGroup(p2 $recordName , p3 $aminoCode1 , p4 $groupCode3 )::JM,104071:CL,103713
104049 :: CALL :: call :: V :: v52.setPDBName(p4 $groupCode3 )::CL,88185:CL,88216
104060 :: CALL :: call :: V :: v52.setResidueNumber(v56)::CL,85618
104067 :: CALL :: call :: V :: v58.addAltLoc(v52)::CL,101386
104071 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v52::DD,103886
104131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.switchCAOnly()::CD,104141:CD,104173:CD,104177:CD,104181:CD,104189
104135 :: EXPR :: modify :: Z :: p0 $this .parseCAonly = #(1)::
104141 :: CALL :: call :: Ljava/util/List :: v6 = getRepresentativeAtomsOnly(v4)::CL,112877
104152 :: CALL :: call :: Ljava/util/List :: v13 = v11.getModel(v19)::CL,48170
104157 :: CALL :: call :: Ljava/util/List :: v15 = getRepresentativeAtomsOnly(v13)::CL,112877
104164 :: CALL :: call :: V :: v16.setModel(v19, v15)::CL,48187
104169 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v19 + #(1)::DD,104189
104173 :: CALL :: call :: I :: v10 = v8.nrModels()::JM,104177:CL,49141
104177 :: PRED :: IF :: Z :: if (v19 < v10) goto 22::CD,104152:CD,104157:CD,104164:CD,104169:CD,104173:CD,104189
104181 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v22 = getRepresentativeAtomsOnly(v20)::CL,112924
104189 :: EXPR :: assign :: null :: PHI v19 = #(0), v18::DD,104169:DD,104177
104211 :: EXIT :: exit :: [Ljava/lang/String :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::JM,90831:JM,90839
104210 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.FileParsingParameters.getAcceptedAtomNames()::CE,104211:CD,104217
104214 :: EXPR :: reference :: [Ljava/lang/String :: v3 = p0 $this .fullAtomNames::DD,104217
104217 :: NORM :: compound :: [Ljava/lang/String :: return v3::CF,104211
104231 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.PDBHeader.getTitle()::JM,92195:JM,92201:JM,92189
104230 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getTitle()::CE,104231:CD,104237
104234 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .title::DD,104237
104237 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,104231
104239 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_REMARK_800_Handler(java.lang.String)::CD,104247:CD,104251
104247 :: CALL :: call :: Z :: v6 = v4.isHeaderOnly()::JM,104251:CL,71478
104251 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 14::CD,104253:CD,104258:CD,104263:CD,104264
104253 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(#(11))::
104258 :: CALL :: call :: [Ljava/lang/String :: v13 = v10.split(#(: ))::JM,104263
104263 :: EXPR :: assign :: I :: v14 = v13.length::DD,104264
104265 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v13[#(0)]::JM,104274
104264 :: PRED :: IF :: Z :: if (v14 != #(2)) goto 389::CD,104269:CD,104274:CD,104428:CD,104433:CD,104478:CD,104483
104269 :: CALL :: call :: Z :: v19 = v16.equals(#(SITE_IDENTIFIER))::JM,104274
104275 :: EXPR :: reference :: Ljava/lang/Object :: v21 = v13[#(1)]::JM,104336
104274 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 229::CD,104279:CD,104285:CD,104290:CD,104295:CD,104300:CD,104311:CD,104316:CD,104323
104279 :: CALL :: call :: Ljava/lang/String :: v23 = v21.trim()::JM,104336
104285 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
104290 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(v23)::JM,104336
104295 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v29.append(#('))::JM,104336
104300 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
104311 :: CALL :: call :: Ljava/lang/Object :: v38 = v36.get(v23)::JM,104316
104317 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Site :: p0 $this .site = v39::
104316 :: EXPR :: assign :: Ljava/lang/Object :: v39 = CHECKCAST v38::DD,104317
104320 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Site :: v40 = p0 $this .site::DD,104323
104323 :: PRED :: IF :: Z :: if (v40 == #(null)) goto 121::CD,104327:CD,104331:CD,104336:CD,104338:JM,113111:JM,113098:JM,113114:CD,104363:CD,104371:CD,104379:CD,104384:CD,104394:CD,104402:CD,104406:CD,104411:CD,104416
104327 :: CALL :: call :: Ljava/lang/String :: v44 = v42.getSiteID()::JM,104336:CL,86801
104331 :: CALL :: call :: Z :: v46 = v23.equals(v44)::JM,104336
104336 :: PRED :: IF :: Z :: if (v46 != #(0)) goto 229::CD,104338:JM,113111:JM,113098:JM,113114:CD,104363:CD,104371:CD,104379:CD,104384:CD,104394:CD,104402:CD,104406:CD,104411:CD,104416
104338 :: NORM :: declaration :: Ljava/util/ArrayList :: v48 = new java.util.ArrayList::
104363 :: CALL :: call :: Ljava/lang/Object :: v57 = v51.put(v54, v55)::
104371 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::
104379 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v62)::
104384 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::
104394 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v69 = new java.lang.StringBuilder::
104399 :: EXPR :: reference :: Ljava/util/Map :: v72 = p0 $this .siteMap::
104402 :: CALL :: call :: I :: v74 = v72.size()::
104406 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v69.append(v74)::
104411 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(#( sites))::
104416 :: CALL :: call :: Ljava/lang/String :: v81 = v79.toString()::
104424 :: EXPR :: reference :: Ljava/lang/Object :: v83 = v13[#(0)]::JM,104433
104428 :: CALL :: call :: Z :: v86 = v83.equals(#(EVIDENCE_CODE))::JM,104433
104433 :: PRED :: IF :: Z :: if (v86 == #(0)) goto 287::CD,104438:CD,104444:CD,104449:CD,104454:CD,104459:CD,104470
104434 :: EXPR :: reference :: Ljava/lang/Object :: v87 = v13[#(1)]::
104438 :: CALL :: call :: Ljava/lang/String :: v89 = v87.trim()::
104444 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
104449 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v91.append(v89)::
104454 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v95.append(#('))::
104459 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
104470 :: CALL :: call :: V :: v101.setEvCode(v89)::CL,113131
104474 :: EXPR :: reference :: Ljava/lang/Object :: v103 = v13[#(0)]::JM,104483
104478 :: CALL :: call :: Z :: v106 = v103.equals(#(SITE_DESCRIPTION))::JM,104483
104483 :: PRED :: IF :: Z :: if (v106 == #(0)) goto 389::CD,104488:CD,104494:CD,104499:CD,104504:CD,104509:CD,104520:CD,104526:CD,104534:CD,104538:CD,104543:CD,104556
104484 :: EXPR :: reference :: Ljava/lang/Object :: v107 = v13[#(1)]::
104488 :: CALL :: call :: Ljava/lang/String :: v109 = v107.trim()::
104494 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v111 = new java.lang.StringBuilder::
104499 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v111.append(v109)::
104504 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#('))::
104509 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
104520 :: CALL :: call :: V :: v121.setDescription(v109)::CL,89568
104526 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v124 = new java.lang.StringBuilder::
104534 :: CALL :: call :: Ljava/lang/String :: v129 = v127.getSiteID()::CL,86801
104538 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v124.append(v129)::
104543 :: CALL :: call :: Ljava/lang/String :: v133 = v131.toString()::
104556 :: CALL :: call :: Ljava/lang/String :: v138 = v136.remark800toPDB()::CL,113142
104647 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
104650 :: NORM :: declaration :: Ljava/util/ArrayList :: v5 = new java.util.ArrayList::DD,104654
104654 :: EXPR :: modify :: Ljava/util/List :: p0 $this .currentChainIDs = v5::
104657 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = #(null)::
104660 :: EXPR :: modify :: [D :: p0 $this .shift = #(null)::
104663 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::DD,104667
104667 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .transformationMap = v7::
104670 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
104687 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.pdb_REMARK_350_Handler(java.lang.String)::CD,104692:CD,104697:JM,104788:JM,104765:JM,104748:JM,104799:JM,104782:JM,104718
104692 :: CALL :: call :: Z :: v6 = p1 $line .startsWith(#(REMARK 350 BIOMOLECULE:))::JM,104788:JM,104697:JM,104765:JM,104748:JM,104799:JM,104782:JM,104718
104697 :: PRED :: IF :: Z :: if (v6 == #(0)) goto 38::CD,104698:CD,104701:CD,104706:CD,104710:CD,104714:CD,104722:CD,104727
104698 :: CALL :: call :: V :: p0 $this .initialize()::CL,113164
104701 :: CALL :: call :: Ljava/lang/String :: v47 = p1 $line .substring(#(24))::JM,104788:JM,104697:JM,104765:JM,104748:JM,104799:JM,104782:JM,104718
104706 :: CALL :: call :: Ljava/lang/String :: v49 = v47.trim()::JM,104788:JM,104765:JM,104748:JM,104799:JM,104782:JM,104718
104710 :: CALL :: call :: I :: v51 = parseInt(v49)::JM,104718
104714 :: CALL :: call :: Ljava/lang/Integer :: v53 = valueOf(v51)::JM,104718
104718 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = v53::
104722 :: CALL :: call :: Z :: v10 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,104727
104727 :: PRED :: IF :: Z :: if (v10 != #(0)) goto 56::CD,104728:CD,104733:CD,104734
104728 :: CALL :: call :: Z :: v13 = p1 $line .matches(#(REMARK 350 \w+ DETERM...))::JM,104733
104733 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 68::CD,104734:CD,104743:CD,104748:JM,104788:JM,104697:JM,104765:JM,104799:JM,104782:JM,104718
104734 :: CALL :: call :: I :: v43 = p0 $this .getMmSize(p1 $line )::JM,104739:CL,113210
104739 :: EXPR :: modify :: I :: p0 $this .currentMmSize = v43::
104743 :: CALL :: call :: Z :: v16 = p1 $line .startsWith(#(REMARK 350 APPLY THE ...))::JM,104788:JM,104697:JM,104765:JM,104748:JM,104799:JM,104782:JM,104718
104749 :: EXPR :: reference :: Ljava/util/List :: v39 = p0 $this .currentChainIDs::
104748 :: PRED :: IF :: Z :: if (v16 == #(0)) goto 94::CD,104752:CD,104755:CD,104760:CD,104765:JM,104788:JM,104697:JM,104748:JM,104799:JM,104782:JM,104718
104752 :: CALL :: call :: V :: v39.clear()::
104755 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,113255
104760 :: CALL :: call :: Z :: v19 = p1 $line .startsWith(#(REMARK 350 IN ADDITIO...))::JM,104788:JM,104697:JM,104765:JM,104748:JM,104799:JM,104782:JM,104718
104765 :: PRED :: IF :: Z :: if (v19 == #(0)) goto 120::CD,104769:CD,104772:CD,104777:CD,104782:JM,104788:JM,104697:JM,104765:JM,104748:JM,104799:JM,104718
104766 :: EXPR :: reference :: Ljava/util/List :: v36 = p0 $this .currentChainIDs::
104769 :: CALL :: call :: V :: v36.clear()::
104772 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,113255
104777 :: CALL :: call :: Z :: v22 = p1 $line .startsWith(#(REMARK 350))::JM,104788:JM,104697:JM,104765:JM,104748:JM,104799:JM,104782:JM,104718
104783 :: CALL :: call :: Z :: v25 = p1 $line .contains(#(AND CHAINS:))::JM,104788:JM,104697:JM,104765:JM,104748:JM,104799:JM,104782:JM,104718
104782 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 146::CD,104783:CD,104788:CD,104794:CD,104799:JM,104697:JM,104765:JM,104748:JM,104782:JM,104718
104789 :: CALL :: call :: V :: p0 $this .addToCurrentChainList(p1 $line )::CL,113255
104788 :: PRED :: IF :: Z :: if (v25 == #(0)) goto 146::CD,104789:CD,104794:CD,104799:JM,104788:JM,104697:JM,104765:JM,104748:JM,104782:JM,104718
104794 :: CALL :: call :: Z :: v28 = p1 $line .startsWith(#(REMARK 350   BIOMT))::JM,104788:JM,104697:JM,104765:JM,104748:JM,104799:JM,104782:JM,104718
104799 :: PRED :: IF :: Z :: if (v28 == #(0)) goto 174::CD,104800:CD,104805
104800 :: CALL :: call :: Z :: v30 = p0 $this .readMatrix(p1 $line )::JM,104805:CL,113306
104805 :: PRED :: IF :: Z :: if (v30 == #(0)) goto 174::CD,104806:CD,104812
104806 :: CALL :: call :: V :: p0 $this .saveMatrix()::CL,113462
104809 :: EXPR :: reference :: I :: v32 = p0 $this .modelNumber::DD,104812
104813 :: EXPR :: modify :: I :: p0 $this .modelNumber = v34::
104812 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v32 + #(1)::DD,104813
104863 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::CE,104864:CD,104870:CD,104876:CD,104880:CD,104885:CD,104895:CD,104896:JM,104890
104864 :: EXIT :: exit :: Ljava/lang/Integer :: org.biojava.nbio.structure.io.PDBFileParser.conect_helper(java.lang.String,int,int)::JM,93612:JM,93619:JM,93626:JM,93633:JM,93640:JM,93647:JM,93654:JM,93661:JM,93668:JM,93675
104870 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(p2 $start , p3 $end )::JM,104885:JM,104890
104876 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,104885:JM,104890
104880 :: CALL :: call :: Z :: v14 = v9.equals(#())::JM,104885:JM,104890
104885 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 48::CF,104896:CD,104886:CD,104890:JM,104885
104886 :: CALL :: call :: I :: v17 = parseInt(v9)::JM,104885:JM,104890
104890 :: NORM :: declaration :: Ljava/lang/Integer :: v18 = new java.lang.Integer::JM,104890:DD,104896
104895 :: NORM :: compound :: Ljava/lang/Integer :: return v21::DD,104864
104896 :: EXPR :: assign :: null :: PHI v21 = #(null), v18::CF,104895
104913 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.getModDate()::CE,104914:CD,104920
104914 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.PDBHeader.getModDate()::JM,93869
104917 :: EXPR :: reference :: Ljava/util/Date :: v3 = p0 $this .modDate::DD,104920
104920 :: NORM :: compound :: Ljava/util/Date :: return v3::CF,104914
105168 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_COMPND_Handler(java.lang.String)::CD,105175:CD,105183:CD,105188:CD,105198:CD,105206:CD,105211:CD,105221:CD,105229:CD,105234:CD,105244:CD,105252:CD,105257:CD,105268:CD,105275:CD,105279:CD,105285:CD,105289:CD,105294:CD,105295:CD,105615
105175 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
105180 :: EXPR :: reference :: Ljava/lang/String :: v8 = p0 $this .previousContinuationField::
105183 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v5.append(v8)::
105188 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
105198 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
105203 :: EXPR :: reference :: Ljava/lang/String :: v18 = p0 $this .continuationField::
105206 :: CALL :: call :: Ljava/lang/StringBuilder :: v20 = v15.append(v18)::
105211 :: CALL :: call :: Ljava/lang/String :: v22 = v20.toString()::
105221 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
105226 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .continuationString::
105229 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v25.append(v28)::
105234 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
105244 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v35 = new java.lang.StringBuilder::
105252 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v35.append(v38)::
105257 :: CALL :: call :: Ljava/lang/String :: v42 = v40.toString()::
105265 :: EXPR :: reference :: Z :: v44 = p0 $this .isLegacyFormat::DD,105268
105269 :: CALL :: call :: Ljava/lang/String :: v48 = p1 $line .substring(#(0), #(72))::JM,105615
105268 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 131::CF,105615:CD,105269
105275 :: CALL :: call :: I :: v52 = v49.length()::
105279 :: CALL :: call :: Ljava/lang/String :: v54 = v49.substring(#(10), v52)::
105285 :: CALL :: call :: Ljava/lang/String :: v56 = v54.trim()::
105289 :: CALL :: call :: [Ljava/lang/String :: v59 = v56.split(#(\s+))::JM,105294
105295 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 202::CD,105296:CD,105302:CD,105307:CD,105331
105294 :: EXPR :: assign :: I :: v60 = v59.length::DD,105295:DD,105331
105296 :: EXPR :: reference :: Ljava/util/List :: v61 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,105307
105298 :: EXPR :: reference :: Ljava/lang/Object :: v62 = v59[#(0)]::JM,105307
105302 :: CALL :: call :: Z :: v64 = v61.contains(v62)::JM,105307
105307 :: PRED :: IF :: Z :: if (v64 == #(0)) goto 202::CD,105318:CD,105323:CD,105331:CD,105352:CD,105358:CD,105362:CD,105576:CD,105580:CD,105584
105308 :: EXPR :: reference :: Ljava/lang/Object :: v72 = v59[#(0)]::DD,105312
105312 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v72::
105315 :: EXPR :: reference :: Ljava/lang/String :: v73 = p0 $this .previousContinuationField::JM,105323
105318 :: CALL :: call :: Z :: v76 = v73.equals(#())::JM,105323
105323 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 231::
105324 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .continuationField::DD,105327
105327 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v77::
105331 :: PRED :: IF :: Z :: if (v60 <= #(0)) goto 231::CD,105336:CD,105341:CD,105352:CD,105358:CD,105362:CD,105576:CD,105580:CD,105584
105332 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v59[#(0)]::JM,105341
105336 :: CALL :: call :: Z :: v68 = v65.contains(#(:))::JM,105341
105341 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 231::CD,105352:CD,105358:CD,105362:CD,105576:CD,105580:CD,105584
105352 :: CALL :: call :: Ljava/lang/String :: v80 = v54.replace(v78, #())::
105358 :: CALL :: call :: Ljava/lang/String :: v82 = v80.trim()::
105362 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v83 = new java.util.StringTokenizer::JM,105526:JM,105580
105368 :: CALL :: call :: Ljava/lang/String :: v88 = v83.nextToken()::JM,105526
105372 :: EXPR :: reference :: Ljava/lang/String :: v89 = p0 $this .previousContinuationField::JM,105380
105375 :: CALL :: call :: Z :: v91 = v89.equals(#())::JM,105380
105381 :: EXPR :: reference :: Ljava/lang/String :: v92 = p0 $this .continuationField::DD,105384
105380 :: PRED :: IF :: Z :: if (v91 == #(0)) goto 286::
105384 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v92::
105387 :: EXPR :: reference :: Ljava/lang/String :: v93 = p0 $this .previousContinuationField::JM,105398
105390 :: EXPR :: reference :: Ljava/lang/String :: v94 = p0 $this .continuationField::JM,105398
105393 :: CALL :: call :: Z :: v96 = v93.equals(v94)::JM,105398
105399 :: EXPR :: reference :: Ljava/util/List :: v97 = org.biojava.nbio.structure.io.PDBFileParser.compndFieldValues::JM,105409
105398 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 429::CD,105399:CD,105404:CD,105409
105401 :: EXPR :: reference :: Ljava/lang/String :: v98 = p0 $this .continuationField::JM,105409
105404 :: CALL :: call :: Z :: v100 = v97.contains(v98)::JM,105409
105409 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 429::CD,105412:CD,105420:CD,105425:CD,105435:CD,105440:CD,105445:CD,105456:CD,105457:CD,105465:CD,105470:CD,105474:CD,105484:CD,105492:CD,105497
105412 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v102 = new java.lang.StringBuilder::
105417 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .continuationField::
105420 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v102.append(v105)::
105425 :: CALL :: call :: Ljava/lang/String :: v109 = v107.toString()::
105435 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v112 = new java.lang.StringBuilder::
105440 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v112.append(v88)::JM,105526
105445 :: CALL :: call :: Ljava/lang/String :: v118 = v116.toString()::
105453 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .continuationString::JM,105479
105457 :: CALL :: call :: Ljava/lang/String :: v123 = valueOf(v88)::
105456 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v121 = new java.lang.StringBuilder::JM,105479
105465 :: CALL :: call :: Ljava/lang/StringBuilder :: v127 = v121.append(#( ))::JM,105479
105470 :: CALL :: call :: Ljava/lang/String :: v129 = v127.toString()::JM,105479
105474 :: CALL :: call :: Ljava/lang/String :: v131 = v120.concat(v129)::JM,105479
105479 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v131::
105484 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
105489 :: EXPR :: reference :: Ljava/lang/String :: v136 = p0 $this .continuationString::
105492 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(v136)::
105497 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
105505 :: EXPR :: reference :: Ljava/lang/String :: v142 = p0 $this .continuationField::JM,105516
105508 :: EXPR :: reference :: Ljava/lang/String :: v143 = p0 $this .previousContinuationField::JM,105516
105511 :: CALL :: call :: Z :: v145 = v142.equals(v143)::JM,105516
105517 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationString::JM,105525
105516 :: PRED :: IF :: Z :: if (v145 != #(0)) goto 512::CD,105520:CD,105525
105520 :: CALL :: call :: Z :: v148 = v146.equals(#())::JM,105525
105525 :: PRED :: IF :: Z :: if (v148 == #(0)) goto 466::CD,105536:CD,105547:CD,105548:CD,105556:CD,105561
105526 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v88::
105536 :: CALL :: call :: V :: p0 $this .compndValueSetter(v149, v150)::CL,113652
105541 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationField::DD,105544
105544 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v152::
105547 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,105565
105548 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v88)::
105556 :: CALL :: call :: Ljava/lang/StringBuilder :: v158 = v153.append(#( ))::JM,105565
105561 :: CALL :: call :: Ljava/lang/String :: v160 = v158.toString()::JM,105565
105565 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v160::
105576 :: CALL :: call :: Z :: v86 = v83.hasMoreTokens()::JM,105580
105581 :: EXPR :: reference :: Z :: v164 = p0 $this .isLastCompndLine::DD,105584
105580 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 259::CD,105368:CD,105375:CD,105380:CD,105393:CD,105398:CD,105511:CD,105516:CD,105576:JM,105526
105584 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 578::CD,105591:CD,105602
105591 :: CALL :: call :: V :: p0 $this .compndValueSetter(v165, v166)::CL,113652
105599 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v168 = p0 $this .current_compound::DD,105602
105603 :: EXPR :: reference :: Ljava/util/List :: v170 = p0 $this .compounds::
105602 :: PRED :: IF :: Z :: if (v168 == #(null)) goto 578::CD,105609
105606 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v171 = p0 $this .current_compound::
105609 :: CALL :: call :: Z :: v173 = v170.add(v171)::
105615 :: EXPR :: assign :: null :: PHI v49 = p1 $line , v48::
105731 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.pdb_SOURCE_Handler(java.lang.String)::CD,105736:CD,105742:CD,105748:CD,105753:CD,105758:CD,105768:CD,105776:CD,105781:CD,105791:CD,105799:CD,105804:CD,105814:CD,105822:CD,105827:CD,105837:CD,105845:CD,105850:CD,105858:CD,105862:CD,105869:CD,105873:CD,105881:CD,105886:CD,105891:CD,105896:CD,105904:CD,105913:CD,105918:CD,106024:CD,106030:CD,106034:CD,106228:CD,106232:CD,106236:CD,106252:JM,105996
105736 :: CALL :: call :: Ljava/lang/String :: v7 = p1 $line .substring(#(9), #(10))::JM,105862:JM,106252:JM,105996
105742 :: CALL :: call :: Ljava/lang/String :: v9 = v7.trim()::JM,105862:JM,106252:JM,105996
105748 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
105753 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v9)::JM,105996
105758 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,105996
105768 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
105773 :: EXPR :: reference :: Ljava/lang/String :: v23 = p0 $this .previousContinuationField::
105776 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v20.append(v23)::
105781 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
105791 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v30 = new java.lang.StringBuilder::
105796 :: EXPR :: reference :: Ljava/lang/String :: v33 = p0 $this .continuationField::
105799 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v30.append(v33)::
105804 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
105814 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v40 = new java.lang.StringBuilder::
105819 :: EXPR :: reference :: Ljava/lang/String :: v43 = p0 $this .continuationString::
105822 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v40.append(v43)::
105827 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
105837 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v50 = new java.lang.StringBuilder::
105845 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v50.append(v53)::
105850 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
105858 :: CALL :: call :: I :: v60 = p1 $line .length()::JM,105862:JM,106252:JM,105996
105863 :: CALL :: call :: Ljava/lang/String :: v64 = p1 $line .substring(#(0), #(79))::JM,105862:JM,106252:JM,105996
105862 :: PRED :: IF :: Z :: if (v60 <= #(79)) goto 170::CF,106252:CD,105863:JM,105862:JM,105996
105869 :: CALL :: call :: I :: v67 = v65.length()::
105873 :: CALL :: call :: Ljava/lang/String :: v69 = v65.substring(#(10), v67)::
105881 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v71 = new java.lang.StringBuilder::
105886 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v71.append(v69)::
105891 :: CALL :: call :: Ljava/lang/StringBuilder :: v78 = v75.append(#(<))::
105896 :: CALL :: call :: Ljava/lang/String :: v80 = v78.toString()::
105904 :: CALL :: call :: [Ljava/lang/String :: v84 = v69.split(#(\s+))::JM,105954
105909 :: EXPR :: reference :: Ljava/lang/Object :: v85 = v84[#(0)]::JM,105918
105913 :: CALL :: call :: Z :: v88 = v85.equals(#())::JM,105918
105919 :: EXPR :: reference :: Ljava/util/List :: v89 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,105930
105918 :: PRED :: IF :: Z :: if (v88 != #(0)) goto 274::CD,105919:CD,105925:CD,105930:CD,105954:CD,105955
105921 :: EXPR :: reference :: Ljava/lang/Object :: v90 = v84[#(0)]::JM,105930
105925 :: CALL :: call :: Z :: v92 = v89.contains(v90)::JM,105930
105931 :: EXPR :: reference :: Ljava/lang/Object :: v114 = v84[#(0)]::DD,105935
105930 :: PRED :: IF :: Z :: if (v92 == #(0)) goto 274::CD,105941:CD,105946:CD,105954:CD,105955
105935 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v114::
105938 :: EXPR :: reference :: Ljava/lang/String :: v115 = p0 $this .previousContinuationField::JM,105946
105941 :: CALL :: call :: Z :: v117 = v115.equals(#())::JM,105946
105947 :: EXPR :: reference :: Ljava/lang/String :: v118 = p0 $this .continuationField::DD,105950
105946 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 374::
105950 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v118::
105955 :: PRED :: IF :: Z :: if (v93 <= #(1)) goto 328::CD,105956:CD,105962:CD,105967:CD,105991:CD,105996
105954 :: EXPR :: assign :: I :: v93 = v84.length::DD,105955
105956 :: EXPR :: reference :: Ljava/util/List :: v95 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,105967
105958 :: EXPR :: reference :: Ljava/lang/Object :: v96 = v84[#(1)]::JM,105967
105962 :: CALL :: call :: Z :: v98 = v95.contains(v96)::JM,105967
105967 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 328::CD,105978:CD,105983:CD,105991:CD,105996
105968 :: EXPR :: reference :: Ljava/lang/Object :: v109 = v84[#(1)]::DD,105972
105972 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = v109::
105975 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .previousContinuationField::JM,105983
105978 :: CALL :: call :: Z :: v112 = v110.equals(#())::JM,105983
105983 :: PRED :: IF :: Z :: if (v112 == #(0)) goto 374::
105984 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .continuationField::DD,105987
105987 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v113::
105991 :: CALL :: call :: Z :: v100 = v9.equals(#())::JM,105996
105996 :: PRED :: IF :: Z :: if (v100 == #(0)) goto 374::CD,106009:CD,106014
106003 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationField = #(MOLECULE:)::
106006 :: EXPR :: reference :: Ljava/lang/String :: v105 = p0 $this .previousContinuationField::JM,106014
106009 :: CALL :: call :: Z :: v107 = v105.equals(#())::JM,106014
106015 :: EXPR :: reference :: Ljava/lang/String :: v108 = p0 $this .continuationField::DD,106018
106014 :: PRED :: IF :: Z :: if (v107 == #(0)) goto 374::
106018 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v108::
106024 :: CALL :: call :: Ljava/lang/String :: v121 = v69.replace(v119, #())::
106030 :: CALL :: call :: Ljava/lang/String :: v123 = v121.trim()::
106034 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v124 = new java.util.StringTokenizer::JM,106178:JM,106232
106040 :: CALL :: call :: Ljava/lang/String :: v129 = v124.nextToken()::JM,106178
106044 :: EXPR :: reference :: Ljava/lang/String :: v130 = p0 $this .previousContinuationField::JM,106052
106047 :: CALL :: call :: Z :: v132 = v130.equals(#())::JM,106052
106053 :: EXPR :: reference :: Ljava/lang/String :: v133 = p0 $this .continuationField::DD,106056
106052 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 429::
106056 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v133::
106059 :: EXPR :: reference :: Ljava/lang/String :: v134 = p0 $this .previousContinuationField::JM,106070
106062 :: EXPR :: reference :: Ljava/lang/String :: v135 = p0 $this .continuationField::JM,106070
106065 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,106070
106071 :: EXPR :: reference :: Ljava/util/List :: v138 = org.biojava.nbio.structure.io.PDBFileParser.sourceFieldValues::JM,106081
106070 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 546::CD,106071:CD,106076:CD,106081
106073 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .continuationField::JM,106081
106076 :: CALL :: call :: Z :: v141 = v138.contains(v139)::JM,106081
106081 :: PRED :: IF :: Z :: if (v141 == #(0)) goto 546::CD,106084:CD,106092:CD,106097:CD,106108:CD,106109:CD,106117:CD,106122:CD,106126:CD,106136:CD,106144:CD,106149
106084 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v143 = new java.lang.StringBuilder::
106089 :: EXPR :: reference :: Ljava/lang/String :: v146 = p0 $this .continuationField::
106092 :: CALL :: call :: Ljava/lang/StringBuilder :: v148 = v143.append(v146)::
106097 :: CALL :: call :: Ljava/lang/String :: v150 = v148.toString()::
106105 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .continuationString::JM,106131
106109 :: CALL :: call :: Ljava/lang/String :: v155 = valueOf(v129)::
106108 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v153 = new java.lang.StringBuilder::JM,106131
106117 :: CALL :: call :: Ljava/lang/StringBuilder :: v159 = v153.append(#( ))::JM,106131
106122 :: CALL :: call :: Ljava/lang/String :: v161 = v159.toString()::JM,106131
106126 :: CALL :: call :: Ljava/lang/String :: v163 = v152.concat(v161)::JM,106131
106131 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v163::
106136 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v165 = new java.lang.StringBuilder::
106141 :: EXPR :: reference :: Ljava/lang/String :: v168 = p0 $this .continuationString::
106144 :: CALL :: call :: Ljava/lang/StringBuilder :: v170 = v165.append(v168)::
106149 :: CALL :: call :: Ljava/lang/String :: v172 = v170.toString()::
106157 :: EXPR :: reference :: Ljava/lang/String :: v174 = p0 $this .continuationField::JM,106168
106160 :: EXPR :: reference :: Ljava/lang/String :: v175 = p0 $this .previousContinuationField::JM,106168
106163 :: CALL :: call :: Z :: v177 = v174.equals(v175)::JM,106168
106169 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .continuationString::JM,106177
106168 :: PRED :: IF :: Z :: if (v177 != #(0)) goto 629::CD,106172:CD,106177
106172 :: CALL :: call :: Z :: v180 = v178.equals(#())::JM,106177
106177 :: PRED :: IF :: Z :: if (v180 == #(0)) goto 583::CD,106188:CD,106199:CD,106200:CD,106208:CD,106213
106178 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v129::
106188 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v181, v182)::CL,114078
106193 :: EXPR :: reference :: Ljava/lang/String :: v184 = p0 $this .continuationField::DD,106196
106196 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .previousContinuationField = v184::
106199 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::JM,106217
106200 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v129)::
106208 :: CALL :: call :: Ljava/lang/StringBuilder :: v190 = v185.append(#( ))::JM,106217
106213 :: CALL :: call :: Ljava/lang/String :: v192 = v190.toString()::JM,106217
106217 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .continuationString = v192::
106228 :: CALL :: call :: Z :: v127 = v124.hasMoreTokens()::JM,106232
106233 :: EXPR :: reference :: Z :: v196 = p0 $this .isLastSourceLine::DD,106236
106232 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 402::CD,106040:CD,106047:CD,106052:CD,106065:CD,106070:CD,106163:CD,106168:CD,106228:JM,106178
106236 :: PRED :: IF :: Z :: if (v196 == #(0)) goto 674::CD,106243
106243 :: CALL :: call :: V :: p0 $this .sourceValueSetter(v197, v198)::CL,114078
106252 :: EXPR :: assign :: null :: PHI v65 = p1 $line , v64::
106397 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.buildjournalArticle()::JM,114775:JM,114782:CD,106414:CD,106418:CD,106422:CD,106426:CD,106430:CD,106434:CD,106438:CD,106442:CD,106449:CD,106964:CD,106968:CD,106972:CD,106976:CD,106981:CD,106988:CD,106992:CD,106997:CD,107004:CD,107008:CD,107013:JM,115393:JM,115264:JM,115584:JM,115269:JM,115589:JM,115559:JM,115368:JM,115274:JM,115373:JM,115408:JM,115282:JM,115413:JM,115287:JM,115575:JM,115576:JM,115320:JM,115259:JM,115452:JM,115388:CD,107029:CD,107036:CD,107040:CD,107045:CD,107064:CD,107075:CD,107086:CD,107093:CD,107097:CD,107101:CD,107108:CD,107112:CD,107116:CD,107123:CD,107127:CD,107131:CD,107138:CD,107142:CD,107146:CD,107153:CD,107157:CD,107161:CD,107176
106414 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v8 = new java.lang.StringBuffer::
106418 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v10 = new java.lang.StringBuffer::
106422 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v12 = new java.lang.StringBuffer::
106426 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v14 = new java.lang.StringBuffer::
106430 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v16 = new java.lang.StringBuffer::
106434 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v18 = new java.lang.StringBuffer::
106438 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v20 = new java.lang.StringBuffer::
106442 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v22 = new java.lang.StringBuffer::
106446 :: EXPR :: reference :: Ljava/util/List :: v24 = p0 $this .journalLines::JM,106968:JM,106458
106449 :: CALL :: call :: Ljava/util/Iterator :: v26 = v24.iterator()::JM,106968:JM,106458
106454 :: CALL :: call :: Ljava/lang/Object :: v31 = v26.next()::JM,106968:JM,106458
106459 :: CALL :: call :: I :: v34 = v32.length()::JM,106463
106458 :: EXPR :: assign :: Ljava/lang/Object :: v32 = CHECKCAST v31::JM,106463:JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861:JM,106786
106463 :: PRED :: IF :: Z :: if (v34 >= #(19)) goto 162::CD,106466:CD,106471:CD,106476:CD,106485:CD,106491:CD,106496:CD,106545:CD,106550:CD,106604:CD,106609:CD,106658:CD,106663:CD,106717:CD,106722:CD,106776:CD,106781:JM,106915:JM,106861
106466 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v223 = new java.lang.StringBuilder::
106471 :: CALL :: call :: Ljava/lang/StringBuilder :: v227 = v223.append(v32)::
106476 :: CALL :: call :: Ljava/lang/String :: v229 = v227.toString()::
106485 :: CALL :: call :: Ljava/lang/String :: v39 = v32.substring(#(12), #(16))::JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106491 :: CALL :: call :: Z :: v42 = v39.equals(#(AUTH))::JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106497 :: CALL :: call :: I :: v44 = v32.length()::
106496 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 237::CD,106497:CD,106501:CD,106507:CD,106511:CD,106518:CD,106523:CD,106527:CD,106532:CD,106537:JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106501 :: CALL :: call :: Ljava/lang/String :: v46 = v32.substring(#(19), v44)::
106507 :: CALL :: call :: Ljava/lang/String :: v48 = v46.trim()::
106511 :: CALL :: call :: Ljava/lang/StringBuffer :: v50 = v8.append(v48)::
106518 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v52 = new java.lang.StringBuilder::
106523 :: CALL :: call :: Ljava/lang/String :: v56 = v8.toString()::
106527 :: CALL :: call :: Ljava/lang/StringBuilder :: v58 = v52.append(v56)::
106532 :: CALL :: call :: Ljava/lang/StringBuilder :: v61 = v58.append(#('))::
106537 :: CALL :: call :: Ljava/lang/String :: v63 = v61.toString()::
106545 :: CALL :: call :: Z :: v67 = v39.equals(#(TITL))::JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106551 :: CALL :: call :: I :: v69 = v32.length()::
106550 :: PRED :: IF :: Z :: if (v67 == #(0)) goto 308::CD,106551:CD,106555:CD,106561:CD,106565:CD,106570:CD,106577:CD,106582:CD,106586:CD,106591:CD,106596:JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106555 :: CALL :: call :: Ljava/lang/String :: v71 = v32.substring(#(19), v69)::
106561 :: CALL :: call :: Ljava/lang/String :: v73 = v71.trim()::
106565 :: CALL :: call :: Ljava/lang/StringBuffer :: v75 = v10.append(v73)::
106570 :: CALL :: call :: Ljava/lang/StringBuffer :: v78 = v75.append(#( ))::
106577 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v80 = new java.lang.StringBuilder::
106582 :: CALL :: call :: Ljava/lang/String :: v84 = v10.toString()::
106586 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v80.append(v84)::
106591 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#('))::
106596 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
106604 :: CALL :: call :: Z :: v94 = v39.equals(#(EDIT))::JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106609 :: PRED :: IF :: Z :: if (v94 == #(0)) goto 373::CD,106610:CD,106614:CD,106620:CD,106624:CD,106631:CD,106636:CD,106640:CD,106645:CD,106650:JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106610 :: CALL :: call :: I :: v96 = v32.length()::
106614 :: CALL :: call :: Ljava/lang/String :: v98 = v32.substring(#(19), v96)::
106620 :: CALL :: call :: Ljava/lang/String :: v100 = v98.trim()::
106624 :: CALL :: call :: Ljava/lang/StringBuffer :: v102 = v12.append(v100)::
106631 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
106636 :: CALL :: call :: Ljava/lang/String :: v108 = v12.toString()::
106640 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(v108)::
106645 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v110.append(#('))::
106650 :: CALL :: call :: Ljava/lang/String :: v114 = v112.toString()::
106658 :: CALL :: call :: Z :: v118 = v39.equals(#(REF ))::JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106663 :: PRED :: IF :: Z :: if (v118 == #(0)) goto 446::CD,106664:CD,106668:CD,106674:CD,106678:CD,106683:CD,106690:CD,106695:CD,106699:CD,106704:CD,106709:JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106664 :: CALL :: call :: I :: v120 = v32.length()::
106668 :: CALL :: call :: Ljava/lang/String :: v122 = v32.substring(#(19), v120)::
106674 :: CALL :: call :: Ljava/lang/String :: v124 = v122.trim()::
106678 :: CALL :: call :: Ljava/lang/StringBuffer :: v126 = v14.append(v124)::
106683 :: CALL :: call :: Ljava/lang/StringBuffer :: v128 = v126.append(#( ))::
106690 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v130 = new java.lang.StringBuilder::
106695 :: CALL :: call :: Ljava/lang/String :: v134 = v14.toString()::
106699 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v130.append(v134)::
106704 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(#('))::
106709 :: CALL :: call :: Ljava/lang/String :: v140 = v138.toString()::
106717 :: CALL :: call :: Z :: v144 = v39.equals(#(PUBL))::JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106723 :: CALL :: call :: I :: v146 = v32.length()::
106722 :: PRED :: IF :: Z :: if (v144 == #(0)) goto 519::CD,106723:CD,106727:CD,106733:CD,106737:CD,106742:CD,106749:CD,106754:CD,106758:CD,106763:CD,106768:JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106727 :: CALL :: call :: Ljava/lang/String :: v148 = v32.substring(#(19), v146)::
106733 :: CALL :: call :: Ljava/lang/String :: v150 = v148.trim()::
106737 :: CALL :: call :: Ljava/lang/StringBuffer :: v152 = v16.append(v150)::
106742 :: CALL :: call :: Ljava/lang/StringBuffer :: v154 = v152.append(#( ))::
106749 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v156 = new java.lang.StringBuilder::
106754 :: CALL :: call :: Ljava/lang/String :: v160 = v16.toString()::
106758 :: CALL :: call :: Ljava/lang/StringBuilder :: v162 = v156.append(v160)::
106763 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v162.append(#('))::
106768 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
106776 :: CALL :: call :: Z :: v170 = v39.equals(#(REFN))::JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106781 :: PRED :: IF :: Z :: if (v170 == #(0)) goto 625::CD,106782:CD,106786:CD,106856:CD,106861:CD,106910:CD,106915:JM,106609:JM,106496:JM,106722:JM,106663:JM,106550:JM,106781
106782 :: CALL :: call :: I :: v172 = v32.length()::JM,106786
106786 :: PRED :: IF :: Z :: if (v172 >= #(35)) goto 572::CD,106789:CD,106794:CD,106799:CD,106808:CD,106812:CD,106818:CD,106822:CD,106829:CD,106834:CD,106838:CD,106843:CD,106848:CD,106856:CD,106861:CD,106910:CD,106915
106789 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v232 = new java.lang.StringBuilder::
106794 :: CALL :: call :: Ljava/lang/StringBuilder :: v236 = v232.append(v32)::
106799 :: CALL :: call :: Ljava/lang/String :: v238 = v236.toString()::
106808 :: CALL :: call :: I :: v175 = v32.length()::
106812 :: CALL :: call :: Ljava/lang/String :: v177 = v32.substring(#(35), v175)::
106818 :: CALL :: call :: Ljava/lang/String :: v179 = v177.trim()::
106822 :: CALL :: call :: Ljava/lang/StringBuffer :: v181 = v18.append(v179)::
106829 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v183 = new java.lang.StringBuilder::
106834 :: CALL :: call :: Ljava/lang/String :: v187 = v18.toString()::
106838 :: CALL :: call :: Ljava/lang/StringBuilder :: v189 = v183.append(v187)::
106843 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v189.append(#('))::
106848 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
106856 :: CALL :: call :: Z :: v197 = v39.equals(#(PMID))::JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106861 :: PRED :: IF :: Z :: if (v197 == #(0)) goto 692::CD,106862:CD,106866:CD,106872:CD,106876:CD,106883:CD,106888:CD,106892:CD,106897:CD,106902:JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106862 :: CALL :: call :: I :: v199 = v32.length()::
106866 :: CALL :: call :: Ljava/lang/String :: v201 = v32.substring(#(19), v199)::
106872 :: CALL :: call :: Ljava/lang/String :: v203 = v201.trim()::
106876 :: CALL :: call :: Ljava/lang/StringBuffer :: v205 = v20.append(v203)::
106883 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v207 = new java.lang.StringBuilder::
106888 :: CALL :: call :: Ljava/lang/String :: v211 = v20.toString()::
106892 :: CALL :: call :: Ljava/lang/StringBuilder :: v213 = v207.append(v211)::
106897 :: CALL :: call :: Ljava/lang/StringBuilder :: v215 = v213.append(#('))::
106902 :: CALL :: call :: Ljava/lang/String :: v217 = v215.toString()::
106910 :: CALL :: call :: Z :: v221 = v39.equals(#(DOI ))::JM,106609:JM,106496:JM,106915:JM,106722:JM,106663:JM,106550:JM,106781:JM,106861
106915 :: PRED :: IF :: Z :: if (v221 == #(0)) goto 756::CD,106916:CD,106920:CD,106926:CD,106930:CD,106937:CD,106942:CD,106946:CD,106951:CD,106956:JM,106968:JM,106458
106916 :: CALL :: call :: I :: v241 = v32.length()::
106920 :: CALL :: call :: Ljava/lang/String :: v243 = v32.substring(#(19), v241)::
106926 :: CALL :: call :: Ljava/lang/String :: v245 = v243.trim()::
106930 :: CALL :: call :: Ljava/lang/StringBuffer :: v247 = v22.append(v245)::
106937 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v249 = new java.lang.StringBuilder::
106942 :: CALL :: call :: Ljava/lang/String :: v253 = v22.toString()::
106946 :: CALL :: call :: Ljava/lang/StringBuilder :: v255 = v249.append(v253)::
106951 :: CALL :: call :: Ljava/lang/StringBuilder :: v257 = v255.append(#('))::
106956 :: CALL :: call :: Ljava/lang/String :: v259 = v257.toString()::
106964 :: CALL :: call :: Z :: v28 = v26.hasNext()::JM,106968:JM,106458
106968 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 107::CD,106454:CD,106458:CD,106459:CD,106463:CD,106964:JM,106968
106972 :: CALL :: call :: Ljava/lang/String :: v263 = v8.toString()::
106976 :: CALL :: call :: Ljava/util/List :: v265 = p0 $this .authorBuilder(v263)::CL,114835
106981 :: CALL :: call :: V :: v261.setAuthorList(v265)::CL,115211
106988 :: CALL :: call :: Ljava/lang/String :: v269 = v12.toString()::
106992 :: CALL :: call :: Ljava/util/List :: v271 = p0 $this .authorBuilder(v269)::CL,114835
106997 :: CALL :: call :: V :: v267.setEditorList(v271)::CL,115222
107004 :: CALL :: call :: Ljava/lang/String :: v275 = v14.toString()::
107008 :: CALL :: call :: V :: v273.setRef(v275)::CL,115233
107013 :: CALL :: call :: Ljava/lang/String :: v279 = v14.toString()::
107029 :: CALL :: call :: V :: v281.setJournalName(v283)::CL,115772
107036 :: CALL :: call :: Ljava/lang/String :: v287 = v285.getJournalName()::JM,107045:CL,115783
107040 :: CALL :: call :: Z :: v290 = v287.equals(#(TO BE PUBLISHED))::JM,107045
107045 :: PRED :: IF :: Z :: if (v290 != #(0)) goto 861::CD,107053
107053 :: CALL :: call :: V :: v291.setIsPublished(v294)::CL,115792
107064 :: CALL :: call :: V :: v296.setVolume(v298)::CL,115817
107075 :: CALL :: call :: V :: v300.setStartPage(v302)::CL,115838
107086 :: CALL :: call :: V :: v304.setPublicationDate(v306)::CL,115859
107093 :: CALL :: call :: Ljava/lang/String :: v310 = v16.toString()::
107097 :: CALL :: call :: Ljava/lang/String :: v312 = v310.trim()::
107101 :: CALL :: call :: V :: v308.setPublisher(v312)::CL,115870
107108 :: CALL :: call :: Ljava/lang/String :: v316 = v10.toString()::
107112 :: CALL :: call :: Ljava/lang/String :: v318 = v316.trim()::
107116 :: CALL :: call :: V :: v314.setTitle(v318)::CL,115881
107123 :: CALL :: call :: Ljava/lang/String :: v322 = v18.toString()::
107127 :: CALL :: call :: Ljava/lang/String :: v324 = v322.trim()::
107131 :: CALL :: call :: V :: v320.setRefn(v324)::CL,115892
107138 :: CALL :: call :: Ljava/lang/String :: v328 = v20.toString()::
107142 :: CALL :: call :: Ljava/lang/String :: v330 = v328.trim()::
107146 :: CALL :: call :: V :: v326.setPmid(v330)::CL,115903
107153 :: CALL :: call :: Ljava/lang/String :: v334 = v22.toString()::
107157 :: CALL :: call :: Ljava/lang/String :: v336 = v334.trim()::
107161 :: CALL :: call :: V :: v332.setDoi(v336)::CL,115914
107176 :: CALL :: call :: Ljava/lang/String :: v344 = v342.toString()::CL,115925
107361 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setJournalArticle(org.biojava.nbio.structure.JournalArticle)::JM,107366
107366 :: EXPR :: modify :: Lorg/biojava/nbio/structure/JournalArticle :: p0 $this .journalArticle = p1 $journalArticle ::
107372 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::CD,107380
107380 :: CALL :: call :: V :: v4.setCrystallographicInfo(p1 $crystallographicInfo )::CL,116323
107387 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.setConnections(java.util.List)::JM,107392
107392 :: EXPR :: modify :: Ljava/util/List :: p0 $this .connections = p1 $conns ::
107420 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.align(org.biojava.nbio.structure.Structure,java.util.List)::CD,107426:CD,107431:CD,107453:CD,107457
107426 :: CALL :: call :: Ljava/util/List :: v7 = p1 $s .getModel(#(0))::CL,48170
107431 :: CALL :: call :: Ljava/util/Iterator :: v9 = p2 $seqResList .iterator()::JM,107457
107436 :: CALL :: call :: Ljava/lang/Object :: v13 = v9.next()::JM,107457
107441 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v16 = getMatchingAtomRes(v14, v7)::JM,107446:CL,85435
107446 :: PRED :: IF :: Z :: if (v16 != #(null)) goto 52::CD,107448
107448 :: CALL :: call :: V :: p0 $this .mapSeqresRecords(v16, v14)::CL,116334
107453 :: CALL :: call :: Z :: v11 = v9.hasNext()::JM,107457
107457 :: PRED :: IF :: Z :: if (v11 != #(0)) goto 21::CD,107436:CD,107441:CD,107446:CD,107453:JM,107457
107476 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkChains2Compound(org.biojava.nbio.structure.Structure)::CD,107484:CD,107569:CD,107573:CD,107577:CD,107581:CD,107631:CD,107715:CD,107719:CD,107723
107481 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .compounds::JM,107573
107484 :: CALL :: call :: Ljava/util/Iterator :: v6 = v4.iterator()::JM,107573
107489 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,107573
107494 :: NORM :: declaration :: Ljava/util/ArrayList :: v13 = new java.util.ArrayList::
107501 :: CALL :: call :: I :: v17 = v12.getMolId()::CL,80877
107505 :: CALL :: call :: Ljava/lang/Integer :: v19 = valueOf(v17)::
107509 :: CALL :: call :: Ljava/lang/Object :: v21 = v15.get(v19)::JM,107514
107515 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 61::CD,107517:CD,107560:CD,107564:CD,107565
107514 :: EXPR :: assign :: Ljava/lang/Object :: v22 = CHECKCAST v21::DD,107515:JM,107564
107517 :: CALL :: call :: Ljava/util/Iterator :: v25 = v22.iterator()::JM,107564
107522 :: CALL :: call :: Ljava/lang/Object :: v29 = v25.next()::JM,107564
107533 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v37 = p1 $s .findChain(v35)::CL,116613
107538 :: CALL :: call :: Z :: v39 = v13.add(v37)::
107560 :: CALL :: call :: Z :: v27 = v25.hasNext()::JM,107564
107565 :: CALL :: call :: V :: v12.setChains(v13)::CL,116628
107564 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 73::CD,107522:CD,107533:CD,107538:CD,107560:JM,107564
107569 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,107573
107573 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 14::CD,107489:CD,107494:CD,107501:CD,107505:CD,107509:CD,107514:CD,107515:CD,107569:JM,107573
107574 :: EXPR :: reference :: Ljava/util/List :: v51 = p0 $this .compounds::JM,107581
107577 :: CALL :: call :: I :: v53 = v51.size()::JM,107581
107581 :: PRED :: IF :: Z :: if (v53 != #(1)) goto 250::CD,107585:CD,107594:CD,107598:CD,107602:CD,107607
107582 :: EXPR :: reference :: Ljava/util/List :: v55 = p0 $this .compounds::
107585 :: CALL :: call :: Ljava/lang/Object :: v57 = v55.get(#(0))::
107594 :: CALL :: call :: I :: v61 = v58.getMolId()::CL,80877
107598 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v61)::
107602 :: CALL :: call :: Ljava/lang/Object :: v65 = v59.get(v63)::JM,107607
107607 :: PRED :: IF :: Z :: if (v65 != #(null)) goto 250::CD,107608:CD,107613:CD,107617
107608 :: CALL :: call :: Ljava/util/List :: v67 = p1 $s .getChains(#(0))::JM,107617:CL,56292
107613 :: CALL :: call :: I :: v69 = v67.size()::JM,107617
107617 :: PRED :: IF :: Z :: if (v69 != #(1)) goto 250::CD,107618:CD,107624:JM,107617
107618 :: CALL :: call :: Ljava/lang/Object :: v71 = v67.get(#(0))::JM,107617
107624 :: CALL :: call :: V :: v58.addChain(v72)::CL,80499
107628 :: EXPR :: reference :: Ljava/util/List :: v76 = p0 $this .compounds::JM,107719
107631 :: CALL :: call :: Ljava/util/Iterator :: v78 = v76.iterator()::JM,107719
107636 :: CALL :: call :: Ljava/lang/Object :: v82 = v78.next()::JM,107719
107644 :: CALL :: call :: I :: v86 = v83.getMolId()::CL,80877
107648 :: CALL :: call :: Ljava/lang/Integer :: v88 = valueOf(v86)::
107652 :: CALL :: call :: Ljava/lang/Object :: v90 = v84.get(v88)::JM,107657
107657 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 293::CD,107662:CD,107666:CD,107670:CD,107675:CD,107676:CD,107710:CD,107714
107662 :: CALL :: call :: I :: v93 = v83.getMolId()::CL,80877
107666 :: CALL :: call :: Ljava/lang/Integer :: v95 = valueOf(v93)::
107670 :: CALL :: call :: Ljava/lang/Object :: v97 = v91.get(v95)::JM,107675
107675 :: EXPR :: assign :: Ljava/lang/Object :: v98 = CHECKCAST v97::JM,107714:JM,107685
107676 :: CALL :: call :: Ljava/util/Iterator :: v100 = v98.iterator()::JM,107714:JM,107685
107681 :: CALL :: call :: Ljava/lang/Object :: v105 = v100.next()::JM,107714:JM,107685
107685 :: EXPR :: assign :: Ljava/lang/Object :: v106 = CHECKCAST v105::JM,107691
107686 :: CALL :: call :: Z :: v108 = v106.equals(#(NULL))::JM,107691
107691 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 348::CD,107693:CD,107698
107693 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v110 = p1 $s .getChainByPDB(v106)::CL,74318
107698 :: CALL :: call :: V :: v110.setCompound(v83)::CL,56270
107710 :: CALL :: call :: Z :: v102 = v100.hasNext()::JM,107714:JM,107685
107715 :: CALL :: call :: Z :: v80 = v78.hasNext()::JM,107719
107714 :: PRED :: IF :: Z :: if (v102 != #(0)) goto 321::CD,107681:CD,107685:CD,107686:CD,107691:CD,107710:JM,107714:JM,107719
107719 :: PRED :: IF :: Z :: if (v80 != #(0)) goto 263::CD,107636:CD,107644:CD,107648:CD,107652:CD,107657:CD,107715:JM,107719
107720 :: EXPR :: reference :: Ljava/util/List :: v118 = p0 $this .compounds::DD,107723
107723 :: PRED :: IF :: Z :: if (v118 == #(null)) goto 536::CD,107727:CD,107731
107724 :: EXPR :: reference :: Ljava/util/List :: v119 = p0 $this .compounds::JM,107731
107727 :: CALL :: call :: Z :: v121 = v119.isEmpty()::JM,107731
107731 :: PRED :: IF :: Z :: if (v121 != #(0)) goto 536::CD,107732:CD,107736:CD,107803:CD,107807
107732 :: CALL :: call :: Ljava/util/List :: v123 = p1 $s .getChains()::JM,107807:CL,79536
107736 :: CALL :: call :: Ljava/util/Iterator :: v125 = v123.iterator()::JM,107807
107741 :: CALL :: call :: Ljava/lang/Object :: v129 = v125.next()::JM,107807
107746 :: CALL :: call :: Lorg/biojava/nbio/structure/Compound :: v132 = v130.getCompound()::JM,107750:CL,116639
107751 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v134 = new org.biojava.nbio.structure.Compound::
107750 :: PRED :: IF :: Z :: if (v132 != #(null)) goto 528::CF,107751:JM,80388:JM,80395:CD,107755:CD,107762:CD,107767:CD,107771:CD,107778:CD,107789:CD,107793:JM,107807
107755 :: CALL :: call :: V :: v134.addChain(v130)::CL,80499
107762 :: CALL :: call :: I :: v139 = findMaxCompoundId(v137)::CL,116648
107767 :: CALL :: call :: V :: v134.setMolId(v140)::CL,80516
107771 :: CALL :: call :: V :: v130.setCompound(v134)::CL,56270
107775 :: EXPR :: reference :: Ljava/util/List :: v143 = p0 $this .compounds::
107778 :: CALL :: call :: Z :: v145 = v143.add(v134)::
107789 :: CALL :: call :: I :: v151 = v134.getMolId()::CL,80877
107793 :: CALL :: call :: Ljava/lang/Integer :: v153 = valueOf(v151)::
107803 :: CALL :: call :: Z :: v127 = v125.hasNext()::JM,107807
107807 :: PRED :: IF :: Z :: if (v127 != #(0)) goto 435::CD,107741:CD,107746:CD,107750:CD,107803:JM,107807
107913 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.linkSitesToGroups()::CD,107920:CD,108121:CD,108126:CD,108131:CD,108136:CD,108141:CD,108149:CD,108154:CD,108159
107917 :: EXPR :: reference :: Ljava/util/Map :: v3 = p0 $this .siteMap::DD,107920
107921 :: EXPR :: reference :: Ljava/util/Map :: v5 = p0 $this .siteToResidueMap::DD,107924
107920 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 14::CD,107924
107924 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 29::CD,107935:CD,107939:CD,107943
107935 :: CALL :: call :: Ljava/util/List :: v8 = v6.getChains()::JM,107943:CL,79536
107939 :: CALL :: call :: Z :: v10 = v8.isEmpty()::JM,107943
107943 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 75::CF,107944:CD,107948:CD,107966:CD,107973:CD,107977:CD,107982:CD,108057:CD,108061:CD,108182:CD,108186:CD,108187:CD,108191:CD,108202
107945 :: EXPR :: reference :: Ljava/util/Map :: v120 = p0 $this .siteMap::
107944 :: NORM :: declaration :: Ljava/util/ArrayList :: v119 = new java.util.ArrayList::
107948 :: CALL :: call :: Ljava/util/Collection :: v122 = v120.values()::
107963 :: EXPR :: reference :: Ljava/util/Map :: v12 = p0 $this .siteMap::
107966 :: CALL :: call :: Ljava/util/Set :: v14 = v12.keySet()::
107970 :: EXPR :: reference :: Ljava/util/Map :: v15 = p0 $this .siteToResidueMap::
107973 :: CALL :: call :: Ljava/util/Set :: v17 = v15.keySet()::
107977 :: CALL :: call :: Z :: v19 = v14.equals(v17)::JM,107982
107982 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 183::CD,107985:CD,107993:CD,107998:CD,108003:CD,108013:CD,108020:CD,108024:CD,108029:CD,108037:CD,108041:CD,108046
107985 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v21 = new java.lang.StringBuilder::
107990 :: EXPR :: reference :: Ljava/lang/String :: v24 = p0 $this .pdbId::
107993 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v21.append(v24)::
107998 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#( header - some Sites ...))::
108003 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
108013 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
108017 :: EXPR :: reference :: Ljava/util/Map :: v36 = p0 $this .siteMap::
108020 :: CALL :: call :: Ljava/util/Set :: v38 = v36.keySet()::
108024 :: CALL :: call :: Ljava/lang/StringBuilder :: v40 = v34.append(v38)::
108029 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v40.append(#( | ))::
108034 :: EXPR :: reference :: Ljava/util/Map :: v44 = p0 $this .siteToResidueMap::
108037 :: CALL :: call :: Ljava/util/Set :: v46 = v44.keySet()::
108041 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v43.append(v46)::
108046 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
108054 :: EXPR :: reference :: Ljava/util/Map :: v52 = p0 $this .siteMap::JM,108186
108057 :: CALL :: call :: Ljava/util/Set :: v54 = v52.keySet()::JM,108186
108061 :: CALL :: call :: Ljava/util/Iterator :: v56 = v54.iterator()::JM,108186
108066 :: CALL :: call :: Ljava/lang/Object :: v60 = v56.next()::JM,108186
108074 :: CALL :: call :: Ljava/lang/Object :: v64 = v62.get(v61)::
108083 :: CALL :: call :: Ljava/lang/Object :: v68 = v66.get(v61)::JM,108088
108089 :: PRED :: IF :: Z :: if (v69 != #(null)) goto 250::CD,108091:CD,108177:CD,108181
108088 :: EXPR :: assign :: Ljava/lang/Object :: v69 = CHECKCAST v68::DD,108089:JM,108181
108091 :: CALL :: call :: Ljava/util/Iterator :: v71 = v69.iterator()::JM,108181
108096 :: CALL :: call :: Ljava/lang/Object :: v75 = v71.next()::JM,108181
108101 :: CALL :: call :: Ljava/lang/String :: v78 = v76.toString()::CL,56305
108105 :: CALL :: call :: Ljava/lang/String :: v80 = v76.getChainId()::CL,85034
108112 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v83 = v81.findGroup(v80, v78)::CL,116669
108121 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v86 = new java.lang.StringBuilder::
108126 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v86.append(v78)::
108131 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(#( in chain ))::
108136 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(v80)::
108141 :: CALL :: call :: Ljava/lang/StringBuilder :: v98 = v95.append(#( in order to link up ...))::
108146 :: EXPR :: reference :: Ljava/lang/String :: v99 = p0 $this .pdbId::
108149 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v98.append(v99)::
108154 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#()))::
108159 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
108168 :: CALL :: call :: Ljava/util/List :: v109 = v65.getGroups()::CL,86854
108172 :: CALL :: call :: Z :: v111 = v109.add(v83)::
108177 :: CALL :: call :: Z :: v73 = v71.hasNext()::JM,108181
108181 :: PRED :: IF :: Z :: if (v73 != #(0)) goto 262::CD,108096:CD,108101:CD,108105:CD,108112:CD,108168:CD,108172:CD,108177:JM,108181:JM,108186
108182 :: CALL :: call :: Z :: v58 = v56.hasNext()::JM,108186
108187 :: NORM :: declaration :: Ljava/util/ArrayList :: v112 = new java.util.ArrayList::
108186 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 201::CF,108187:CD,108066:CD,108074:CD,108083:CD,108088:CD,108089:CD,108182:JM,108186
108188 :: EXPR :: reference :: Ljava/util/Map :: v113 = p0 $this .siteMap::
108191 :: CALL :: call :: Ljava/util/Collection :: v115 = v113.values()::
108202 :: CALL :: call :: V :: v117.setSites(v112)::CL,48106
108280 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formLinkRecordBond(org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord)::CD,108285:CD,108289:CD,108294:CD,108392
108285 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $linkRecord .getAltLoc1()::JM,108294:CL,116687
108289 :: CALL :: call :: Z :: v8 = v5.equals(#( ))::JM,108294
108295 :: CALL :: call :: Ljava/lang/String :: v11 = p1 $linkRecord .getAltLoc2()::JM,108304:CL,116696
108294 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 26::CD,108295:CD,108299:CD,108304
108299 :: CALL :: call :: Z :: v13 = v11.equals(#( ))::JM,108304
108304 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 29::CD,108330:CD,108364:JM,112272:JM,112263:JM,112266:JM,112269
108330 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v27 = p0 $this .getAtomFromRecord(v15, v17, v19, v21, v23, v25)::CL,102148
108364 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v41 = p0 $this .getAtomFromRecord(v29, v31, v33, v35, v37, v39)::CL,102148
108392 :: CALL :: call :: Ljava/lang/String :: v52 = p1 $linkRecord .toString()::CL,116795
108436 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBonds(java.util.List)::CD,108441:CD,108445:CD,108466:CD,108470:CD,108474
108441 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
108445 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $disulfideBonds .iterator()::JM,108470
108450 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,108470
108455 :: CALL :: call :: Lorg/biojava/nbio/structure/Bond :: v15 = p0 $this .formDisulfideBond(v13)::JM,108460:CL,117313
108461 :: CALL :: call :: Z :: v18 = v4.add(v15)::
108460 :: PRED :: IF :: Z :: if (v15 == #(null)) goto 53::CD,108461:JM,108470
108466 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,108470
108470 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 21::CD,108450:CD,108455:CD,108460:CD,108466:JM,108470
108474 :: CALL :: call :: V :: v19.setSSBonds(v4)::CL,48086
108497 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.setSecElement(java.util.List,java.lang.String,org.biojava.nbio.structure.secstruc.SecStrucType)::CD,108504:CD,108687:CD,108691
108504 :: CALL :: call :: Ljava/util/Iterator :: v7 = p1 $secList .iterator()::JM,108691
108509 :: CALL :: call :: Ljava/lang/Object :: v12 = v7.next()::JM,108691
108514 :: CALL :: call :: Ljava/lang/Object :: v16 = v13.get(#(initChainId))::JM,108519
108519 :: EXPR :: assign :: Ljava/lang/Object :: v17 = CHECKCAST v16::JM,108588
108520 :: CALL :: call :: Ljava/lang/Object :: v20 = v13.get(#(initSeqNum))::
108526 :: CALL :: call :: Ljava/lang/Object :: v24 = v13.get(#(initICode))::JM,108531
108531 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::JM,108555:DD,108693
108532 :: CALL :: call :: Ljava/lang/Object :: v28 = v13.get(#(endChainId))::JM,108537
108537 :: EXPR :: assign :: Ljava/lang/Object :: v29 = CHECKCAST v28::JM,108648
108538 :: CALL :: call :: Ljava/lang/Object :: v32 = v13.get(#(endSeqNum))::
108544 :: CALL :: call :: Ljava/lang/Object :: v36 = v13.get(#(endICode))::JM,108549
108549 :: EXPR :: assign :: Ljava/lang/Object :: v37 = CHECKCAST v36::JM,108561:DD,108694:JM,108555
108550 :: CALL :: call :: Z :: v40 = v25.equals(#( ))::JM,108555
108555 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 134::CF,108693
108556 :: CALL :: call :: Z :: v44 = v37.equals(#( ))::JM,108561
108561 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 145::CF,108694
108571 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v52 = v46.next()::CL,108805
108579 :: CALL :: call :: Ljava/lang/String :: v56 = v54.getChainID()::JM,108588:CL,48319
108583 :: CALL :: call :: Z :: v58 = v56.equals(v17)::JM,108588
108589 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v59 = new java.lang.StringBuilder::JM,108620
108588 :: PRED :: IF :: Z :: if (v58 == #(0)) goto 240::CF,108695:CF,108589:CD,108590:CD,108598:CD,108603:CD,108611:CD,108615:CD,108620
108590 :: CALL :: call :: Ljava/lang/String :: v61 = valueOf(v21)::
108598 :: CALL :: call :: Ljava/lang/StringBuilder :: v64 = v59.append(v42)::JM,108620
108603 :: CALL :: call :: Ljava/lang/String :: v66 = v64.toString()::JM,108620
108611 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::JM,108620:CL,56305
108615 :: CALL :: call :: Z :: v72 = v70.equals(v66)::JM,108620
108621 :: PRED :: IF :: Z :: if (v74 == #(0)) goto 280::CD,108622:CD,108626
108620 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 240::CF,108695
108622 :: CALL :: call :: Z :: v76 = v52.hasAminoAtoms()::JM,108626:CL,108832
108626 :: PRED :: IF :: Z :: if (v76 == #(0)) goto 280::CD,108634
108634 :: CALL :: call :: V :: v52.setProperty(#(secstruc), v77)::CL,108919
108639 :: CALL :: call :: Ljava/lang/String :: v82 = v54.getChainID()::JM,108648:CL,48319
108643 :: CALL :: call :: Z :: v84 = v82.equals(v29)::JM,108648
108649 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v85 = new java.lang.StringBuilder::JM,108680
108648 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 341::CF,108696:CF,108649:CD,108650:CD,108658:CD,108663:CD,108671:CD,108675:CD,108680:CD,108682:CD,108686
108650 :: CALL :: call :: Ljava/lang/String :: v87 = valueOf(v33)::
108658 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v85.append(v45)::JM,108680
108663 :: CALL :: call :: Ljava/lang/String :: v92 = v90.toString()::JM,108680
108671 :: CALL :: call :: Ljava/lang/String :: v96 = v94.toString()::JM,108680:CL,56305
108675 :: CALL :: call :: Z :: v98 = v92.equals(v96)::JM,108680
108680 :: PRED :: IF :: Z :: if (v98 == #(0)) goto 341::CF,108696:CD,108682:CD,108686
108682 :: CALL :: call :: Z :: v50 = v46.hasNext()::JM,108686:CL,108939
108687 :: CALL :: call :: Z :: v9 = v7.hasNext()::JM,108691
108686 :: PRED :: IF :: Z :: if (v50 != #(0)) goto 166::CD,108571:CD,108579:CD,108583:CD,108588:CD,108621:CD,108639:CD,108643:CD,108648:CD,108695:CD,108696:JM,108691
108691 :: PRED :: IF :: Z :: if (v9 != #(0)) goto 13::CD,108509:CD,108514:CD,108519:CD,108520:CD,108526:CD,108531:CD,108532:CD,108537:CD,108538:CD,108544:CD,108549:CD,108550:CD,108555:CD,108556:CD,108561:CD,108682:CD,108686:CD,108687:CD,108693:CD,108694:CD,108696:JM,108691
108693 :: EXPR :: assign :: null :: PHI v42 = v25, #()::JM,108620:JM,108561
108695 :: EXPR :: assign :: null :: PHI v74 = v99, v99, #(1)::DD,108621:DD,108696
108694 :: EXPR :: assign :: null :: PHI v45 = v37, #()::JM,108680
108696 :: EXPR :: assign :: null :: PHI v99 = #(0), v74, v74::DD,108695
108805 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.next()::CD,108819
108819 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v9 = p0 $this .getNextGroup(v3, v4, v7)::CL,117430
108833 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::JM,96857:JM,108626
108832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.hasAminoAtoms()::CE,108833:CD,108836:CD,108841
108836 :: CALL :: call :: Z :: v5 = p0 $this .hasAtom(#(CA))::JM,108841:CL,88898
108841 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 43::CD,108842:CD,108847:CD,108861
108842 :: CALL :: call :: Z :: v9 = p0 $this .hasAtom(#(C))::JM,108847:CL,88898
108847 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 43::CD,108848:CD,108853:CD,108861
108848 :: CALL :: call :: Z :: v12 = p0 $this .hasAtom(#(N))::JM,108853:CL,88898
108853 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 43::CD,108854:CD,108859:CD,108861
108854 :: CALL :: call :: Z :: v15 = p0 $this .hasAtom(#(O))::JM,108859:CL,88898
108859 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 43::CD,108860:CD,108861
108861 :: NORM :: compound :: Z :: return #(0)::DD,108833
108860 :: NORM :: compound :: Z :: return #(1)::DD,108833
108877 :: EXIT :: exit :: Ljava/lang/Object :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::JM,96863
108876 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getProperty(java.lang.String)::CE,108877:CD,108884:CD,108889
108884 :: CALL :: call :: Ljava/lang/Object :: v6 = v4.get(p1 $key )::JM,108889
108889 :: NORM :: compound :: Ljava/lang/Object :: return v6::DD,108877
108919 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.setProperty(java.lang.String,java.lang.Object)::CD,108928
108928 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.put(p1 $key , p2 $value )::
108939 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasNext()::CE,108940:CD,108953:CD,108960
108940 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasNext()::JM,96882:JM,108686
108953 :: CALL :: call :: Z :: v9 = p0 $this .hasSubGroup(v3, v4, v7)::JM,108960:CL,117541
108960 :: NORM :: compound :: Z :: return v9::DD,108940
109109 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.ElementType.isMetal()::JM,97248
109108 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ElementType.isMetal()::CE,109109:CD,109115
109112 :: EXPR :: reference :: Z :: v3 = p0 $this .metal::DD,109115
109115 :: NORM :: compound :: Z :: return v3::CF,109109
109117 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::CE,109118:CD,109123:CD,109128:CD,109134:CD,109139:CD,109145:CD,109150:CD,109154:CD,109170:CD,109174:CD,109175:CD,109176:CD,109177:CD,109178:CD,109179:CD,109180:CD,109181:CD,109182:CD,109299
109118 :: EXIT :: exit :: Lorg/biojava/nbio/structure/GroupType :: org.biojava.nbio.structure.StructureTools.getPredominantGroupType(org.biojava.nbio.structure.Chain)::JM,97714
109123 :: CALL :: call :: Ljava/util/List :: v5 = p1 $c .getAtomGroups(v3)::JM,109202:JM,109271:JM,109176:JM,109178:JM,109210:CL,97721
109128 :: CALL :: call :: I :: v7 = v5.size()::JM,109202:JM,109271:JM,109176:JM,109178:JM,109210
109134 :: CALL :: call :: Ljava/util/List :: v10 = p1 $c .getAtomGroups(v8)::JM,109203:JM,109186:JM,109202:JM,109282:JM,109176:CL,97721
109139 :: CALL :: call :: I :: v12 = v10.size()::JM,109203:JM,109186:JM,109202:JM,109282:JM,109176
109145 :: CALL :: call :: Ljava/util/List :: v15 = p1 $c .getAtomGroups(v13)::JM,109175:JM,109174:CL,97721
109150 :: CALL :: call :: I :: v17 = v15.size()::JM,109175:JM,109174
109154 :: CALL :: call :: Ljava/util/Iterator :: v20 = v15.iterator()::JM,109175:JM,109174
109159 :: CALL :: call :: Ljava/lang/Object :: v24 = v20.next()::JM,109174
109164 :: CALL :: call :: Z :: v27 = v25.isWater()::JM,109168:CL,97166
109169 :: EXPR :: assign :: Ljava/lang/Object :: v29 = v30 + #(1)::DD,109299
109168 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 89::CF,109299:CD,109169
109170 :: CALL :: call :: Z :: v22 = v20.hasNext()::JM,109174
109175 :: EXPR :: assign :: Ljava/lang/Object :: v31 = v17 - v30::DD,109177:DD,109194:DD,109203:DD,109210:CF,109176
109174 :: PRED :: IF :: Z :: if (v22 != #(0)) goto 64::CD,109159:CD,109164:CD,109168:CD,109170:CD,109299:JM,109174:CF,109175
109177 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v32 + v31::DD,109179:DD,109187:DD,109195:DD,109272:DD,109283:CF,109178
109176 :: EXPR :: assign :: Ljava/lang/Object :: v32 = v7 + v12::DD,109177
109179 :: EXPR :: assign :: D :: v35 = CONVERT I to D v33::CF,109180
109178 :: EXPR :: assign :: D :: v34 = CONVERT I to D v7::DD,109180:CF,109179
109181 :: EXPR :: assign :: Z :: v38 = v36 < #(0.95 d)::DD,109182
109180 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v34 / v35::DD,109181
109183 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v88 = org.biojava.nbio.structure.GroupType.AMINOACID::CF,109185
109182 :: PRED :: IF :: Z :: if (v38 <= #(0)) goto 130::CD,109183:CD,109185:CD,109186:CD,109187:CD,109188:CD,109189:CD,109190
109185 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v88::DD,109118
109187 :: EXPR :: assign :: D :: v40 = CONVERT I to D v33::CF,109188
109186 :: EXPR :: assign :: D :: v39 = CONVERT I to D v12::DD,109188:CF,109187
109189 :: EXPR :: assign :: Z :: v42 = v41 < #(0.95 d)::DD,109190
109188 :: EXPR :: assign :: Ljava/lang/Object :: v41 = v39 / v40::DD,109189
109191 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v87 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::CF,109193
109190 :: PRED :: IF :: Z :: if (v42 <= #(0)) goto 148::CD,109191:CD,109193:CD,109194:CD,109195:CD,109196:CD,109197:CD,109198
109193 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v87::DD,109118
109195 :: EXPR :: assign :: D :: v44 = CONVERT I to D v33::CF,109196
109194 :: EXPR :: assign :: D :: v43 = CONVERT I to D v31::DD,109196:CF,109195
109197 :: EXPR :: assign :: Z :: v46 = v45 < #(0.95 d)::DD,109198
109196 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v43 / v44::DD,109197
109199 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v86 = org.biojava.nbio.structure.GroupType.HETATM::CF,109201
109198 :: PRED :: IF :: Z :: if (v46 <= #(0)) goto 166::CD,109199:CD,109201:CD,109202:CD,109227:CD,109239:CD,109247:CD,109255:CD,109263:CD,109271:CD,109272:CD,109273:CD,109274:CD,109282:CD,109283:CD,109284:CD,109285:CD,109298:CD,109300
109201 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v86::DD,109118
109203 :: PRED :: IF :: Z :: if (v12 <= v31) goto 183::CD,109204:CD,109207:CD,109300
109202 :: PRED :: IF :: Z :: if (v12 <= v7) goto 194::CD,109203:CD,109210
109204 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v50 = org.biojava.nbio.structure.GroupType.NUCLEOTIDE::DD,109300
109207 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v49 = org.biojava.nbio.structure.GroupType.HETATM::DD,109300
109211 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v48 = org.biojava.nbio.structure.GroupType.AMINOACID::DD,109300
109210 :: PRED :: IF :: Z :: if (v7 <= v31) goto 205::CD,109211:CD,109214:CD,109300
109214 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v47 = org.biojava.nbio.structure.GroupType.HETATM::DD,109300
109227 :: CALL :: call :: Ljava/lang/Double :: v59 = valueOf(#(0.95 d))::JM,109227
109239 :: CALL :: call :: Ljava/lang/Integer :: v63 = valueOf(v7)::JM,109271
109247 :: CALL :: call :: Ljava/lang/Integer :: v66 = valueOf(v12)::JM,109282
109255 :: CALL :: call :: Ljava/lang/Integer :: v69 = valueOf(v31)::
109263 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v30)::
109271 :: EXPR :: assign :: D :: v74 = CONVERT I to D v7::DD,109273:CF,109272
109273 :: EXPR :: assign :: Ljava/lang/Object :: v76 = v74 / v75::JM,109274
109272 :: EXPR :: assign :: D :: v75 = CONVERT I to D v33::CF,109273
109274 :: CALL :: call :: Ljava/lang/Double :: v78 = valueOf(v76)::JM,109274
109283 :: EXPR :: assign :: D :: v81 = CONVERT I to D v33::CF,109284
109282 :: EXPR :: assign :: D :: v80 = CONVERT I to D v12::DD,109284:CF,109283
109285 :: CALL :: call :: Ljava/lang/Double :: v84 = valueOf(v82)::JM,109285
109284 :: EXPR :: assign :: Ljava/lang/Object :: v82 = v80 / v81::JM,109285
109299 :: EXPR :: assign :: null :: PHI v30 = #(0), v30, v29::JM,109174:DD,109169:DD,109175:DD,109299
109298 :: NORM :: compound :: Lorg/biojava/nbio/structure/GroupType :: return v51::DD,109118
109300 :: EXPR :: assign :: null :: PHI v51 = v50, v49, v48, v47::DD,109298
109386 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,109392:CD,109393:CD,109401:CD,109405
109393 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,109392:CL,80877
109392 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,109392
109401 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,80877
109405 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
109418 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CompoundFinder.1.compare(org.biojava.nbio.structure.Compound,org.biojava.nbio.structure.Compound)::CD,109424:CD,109425:CD,109433:CD,109437
109425 :: CALL :: call :: I :: v7 = p1 $o1 .getMolId()::JM,109424:CL,80877
109424 :: NORM :: declaration :: Ljava/lang/Integer :: v5 = new java.lang.Integer::JM,109424
109433 :: CALL :: call :: I :: v10 = p2 $o2 .getMolId()::CL,80877
109437 :: CALL :: call :: Ljava/lang/Integer :: v12 = valueOf(v10)::
109451 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Site.toString()::JM,98091
109450 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.toString()::CE,109451:CD,109454:CD,109462:CD,109467:CD,109475:CD,109479:CD,109484:CD,109492:CD,109533:CD,109537:CD,109538:CD,109540:CD,109545:CD,109549
109454 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v3 = new java.lang.StringBuilder::JM,109549
109459 :: EXPR :: reference :: Ljava/lang/String :: v6 = p0 $this .siteID::
109462 :: CALL :: call :: Ljava/lang/StringBuilder :: v8 = v3.append(v6)::
109467 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v8.append(#( ))::
109472 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .groups::
109475 :: CALL :: call :: I :: v14 = v12.size()::
109479 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v11.append(v14)::
109484 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v16.append(#( ))::
109489 :: EXPR :: reference :: Ljava/util/List :: v19 = p0 $this .groups::JM,109537
109492 :: CALL :: call :: Ljava/util/Iterator :: v21 = v19.iterator()::JM,109537
109497 :: CALL :: call :: Ljava/lang/Object :: v26 = v21.next()::JM,109537
109515 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toPDB()::CL,117761
109523 :: CALL :: call :: Ljava/lang/String :: v39 = format(#(%s %s), v30)::
109528 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v3.append(v39)::
109533 :: CALL :: call :: Z :: v23 = v21.hasNext()::JM,109537
109537 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 55::CD,109497:CD,109515:CD,109523:CD,109528:CD,109533:JM,109537
109538 :: EXPR :: reference :: Ljava/lang/String :: v42 = org.biojava.nbio.structure.Site.lineEnd::
109540 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v3.append(v42)::
109545 :: CALL :: call :: Ljava/lang/String :: v46 = v3.toString()::JM,109549
109549 :: NORM :: compound :: Ljava/lang/String :: return v46::DD,109451
110085 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.FileDownloadUtils.prepareURLConnection(java.lang.String,int)::
110121 :: NORM :: declaration :: Ljava/io/BufferedReader :: v4 = new java.io.BufferedReader::JM,117840:JM,110121
110134 :: ENTR :: entry :: null :: org.biojava.nbio.structure.scop.ScopInstallation.setCacheLocation(java.lang.String)::CD,110139:CD,110141:CD,110146
110139 :: EXPR :: reference :: Ljava/lang/String :: v4 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::JM,110146
110141 :: CALL :: call :: Z :: v6 = p1 $cacheLocation .endsWith(v4)::JM,110146
110147 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
110146 :: PRED :: IF :: Z :: if (v6 != #(0)) goto 33::CF,110147:CD,110148:CD,110156:CD,110158:CD,110163
110148 :: CALL :: call :: Ljava/lang/String :: v10 = valueOf(p1 $cacheLocation )::
110156 :: EXPR :: reference :: Ljava/lang/String :: v12 = org.biojava.nbio.structure.scop.ScopInstallation.FILESPLIT::
110158 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v8.append(v12)::
110163 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
111045 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::CE,111046:CD,111052
111046 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.getObsoleteBehavior()::JM,100623
111049 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: v3 = p0 $this .obsoleteBehavior::DD,111052
111052 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/LocalPDBDirectory$ObsoleteBehavior :: return v3::CF,111046
111055 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::JM,100806
111054 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.FetchBehavior.values()::CF,111055:CD,111057:CD,111059:CD,111060:CD,111068
111057 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v2 = org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior.ENUM$VALUES::DD,111059
111059 :: EXPR :: assign :: I :: v4 = v2.length::DD,111060
111060 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: v5 = new org.biojava.nbio.structure.io.LocalPDBDirectory$FetchBehavior[]::DD,111068
111068 :: NORM :: compound :: [Lorg/biojava/nbio/structure/io/LocalPDBDirectory$FetchBehavior :: return v5::CF,111055
111081 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::CE,111082:CD,111092:CD,111096:JM,111347:JM,111250:JM,111238:JM,111206:JM,111128
111082 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getReplacement(java.lang.String,boolean,boolean)::JM,100961:JM,100956
111092 :: CALL :: call :: Ljava/util/List :: v9 = getStatusIdRecords(v6)::JM,111096:JM,111101:CL,118302
111097 :: CALL :: call :: I :: v12 = v9.size()::JM,111101
111096 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 26::CD,111097:CD,111101:CD,111109
111101 :: PRED :: IF :: Z :: if (v12 == #(1)) goto 41::CD,111109:CD,111110:CD,111116:CD,111121:CD,111122:JM,111101
111109 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,111082
111110 :: CALL :: call :: Ljava/lang/Object :: v14 = v9.get(#(0))::JM,111101
111116 :: CALL :: call :: Ljava/lang/Object :: v18 = v15.get(#(structureId))::JM,111121
111121 :: EXPR :: assign :: Ljava/lang/Object :: v19 = CHECKCAST v18::DD,111122:JM,111128
111123 :: CALL :: call :: Z :: v21 = v19.equalsIgnoreCase(p1 $oldPdbId )::JM,111128:JM,111347:JM,111250:JM,111238:JM,111206
111122 :: PRED :: IF :: Z :: if (v19 == #(null)) goto 79::CD,111123:CD,111128:CD,111136
111128 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 96::CD,111136:CD,111137:CD,111142:CD,111143
111137 :: CALL :: call :: Ljava/lang/Object :: v24 = v15.get(#(status))::JM,111142
111136 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,111082
111143 :: PRED :: IF :: Z :: if (v25 != #(null)) goto 126::CD,111151:CD,111152:CD,111156
111142 :: EXPR :: assign :: Ljava/lang/Object :: v25 = CHECKCAST v24::DD,111143
111151 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,111082
111152 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v27 = fromString(v25)::JM,111156:CL,118672
111156 :: PRED :: IF :: Z :: if (v27 != #(null)) goto 150::CF,111165:CD,111164:CD,111169:CD,111172:CD,111180
111165 :: NORM :: declaration :: Ljava/util/LinkedList :: v28 = new java.util.LinkedList::DD,111186:DD,111218:DD,111297:DD,111311:DD,111374
111164 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,111082
111169 :: CALL :: call :: [I :: v31 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,118891
111172 :: CALL :: call :: I :: v33 = v27.ordinal()::
111176 :: EXPR :: reference :: I :: v34 = v31[v33]::DD,111180
111181 :: CALL :: call :: Z :: v106 = v28.add(p1 $oldPdbId )::JM,111347:JM,111250:JM,111238:JM,111206:JM,111128
111180 :: PRED :: IF :: null :: switch v34::CD,111181:CD,111186:CD,111187:CD,111192:CD,111193:CD,111298:CD,111299:CD,111304:CD,111305
111187 :: CALL :: call :: Ljava/lang/Object :: v66 = v15.get(#(replacedBy))::JM,111192
111186 :: NORM :: compound :: Ljava/util/List :: return v28::DD,111082
111193 :: PRED :: IF :: Z :: if (v67 != #(null)) goto 248::CD,111201:CD,111202:CD,111206:CD,111212:CD,111217
111192 :: EXPR :: assign :: Ljava/lang/Object :: v67 = CHECKCAST v66::DD,111193
111201 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,111082
111202 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toUpperCase()::JM,111217
111207 :: CALL :: call :: Z :: v71 = v28.add(p1 $oldPdbId )::JM,111347:JM,111250:JM,111238:JM,111206:JM,111128
111206 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 268::CD,111207:JM,111217
111212 :: CALL :: call :: Z :: v73 = v69.equals(#(NONE))::JM,111217
111217 :: PRED :: IF :: Z :: if (v73 == #(0)) goto 281::CD,111218:CD,111219:CD,111228:CD,111232:CD,111296:CD,111297:CD,111375
111219 :: CALL :: call :: [Ljava/lang/String :: v75 = v69.split(#( ))::JM,111232
111218 :: NORM :: compound :: Ljava/util/List :: return v28::DD,111082
111228 :: CALL :: call :: V :: sort(v75, v76)::
111232 :: EXPR :: assign :: I :: v79 = v75.length::DD,111296
111234 :: EXPR :: reference :: Ljava/lang/Object :: v80 = v75[v101]::DD,111252:DD,111283
111239 :: CALL :: call :: Ljava/util/List :: v82 = getReplacement(v80, p2 $recurse , p3 $includeObsolete )::CL,111081
111238 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 343::CD,111239:CD,111245:CD,111250
111245 :: CALL :: call :: V :: mergeReversed(v28, v82)::CL,119163
111251 :: NORM :: declaration :: [Ljava/lang/String :: v84 = new java.lang.String[]::JM,111256
111250 :: PRED :: IF :: Z :: if (p3 $includeObsolete  == #(0)) goto 368::CD,111251:CD,111256:CD,111260:CD,111265:CD,111269:CD,111272:CD,111280
111252 :: EXPR :: modify :: Ljava/lang/Object :: v84[#(0)] = v80::
111256 :: CALL :: call :: Ljava/util/List :: v86 = asList(v84)::JM,111256
111260 :: CALL :: call :: V :: mergeReversed(v28, v86)::CL,119163
111265 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v89 = getStatus(v80)::CL,101192
111269 :: CALL :: call :: [I :: v91 = $SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CL,118891
111272 :: CALL :: call :: I :: v93 = v89.ordinal()::
111276 :: EXPR :: reference :: I :: v94 = v91[v93]::DD,111280
111280 :: PRED :: IF :: null :: switch v94::CD,111282:CD,111287:CD,111291
111283 :: EXPR :: modify :: Ljava/lang/Object :: v95[#(0)] = v80::
111282 :: NORM :: declaration :: [Ljava/lang/String :: v95 = new java.lang.String[]::JM,111287
111287 :: CALL :: call :: Ljava/util/List :: v97 = asList(v95)::JM,111287
111291 :: CALL :: call :: V :: mergeReversed(v28, v97)::CL,119163
111295 :: EXPR :: assign :: Ljava/lang/Object :: v100 = v101 + #(1)::DD,111375
111297 :: NORM :: compound :: Ljava/util/List :: return v28::DD,111082
111296 :: PRED :: IF :: Z :: if (v101 < v79) goto 316::CD,111238:CD,111295:CD,111375:CF,111297
111299 :: CALL :: call :: Ljava/lang/Object :: v37 = v15.get(#(replacedBy))::JM,111304
111298 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,111082
111305 :: PRED :: IF :: Z :: if (v38 != #(null)) goto 470::CD,111306:CD,111311:CD,111312:CD,111316:CD,111321
111304 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,111305
111306 :: CALL :: call :: Z :: v64 = v28.add(p1 $oldPdbId )::JM,111347:JM,111250:JM,111238:JM,111206:JM,111128
111311 :: NORM :: compound :: Ljava/util/List :: return v28::DD,111082
111312 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toUpperCase()::JM,111321
111316 :: CALL :: call :: Z :: v43 = v40.equals(#(NONE))::JM,111321
111321 :: PRED :: IF :: Z :: if (v43 == #(0)) goto 490::CD,111322:CD,111323:CD,111328:CD,111337:CD,111341:CD,111373:CD,111374:CD,111376
111323 :: CALL :: call :: Z :: v45 = v28.add(p1 $oldPdbId )::JM,111347:JM,111250:JM,111238:JM,111206:JM,111128
111322 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,111082
111328 :: CALL :: call :: [Ljava/lang/String :: v48 = v40.split(#( ))::JM,111341
111337 :: CALL :: call :: V :: sort(v48, v49)::
111341 :: EXPR :: assign :: I :: v52 = v48.length::DD,111373
111343 :: EXPR :: reference :: Ljava/lang/Object :: v53 = v48[v62]::DD,111360
111347 :: PRED :: IF :: Z :: if (p2 $recurse  == #(0)) goto 562::CD,111348:CD,111354:CD,111359:CD,111364:CD,111368
111348 :: CALL :: call :: Ljava/util/List :: v55 = getReplacement(v53, p2 $recurse , p3 $includeObsolete )::CL,111081
111354 :: CALL :: call :: V :: mergeReversed(v28, v55)::CL,119163
111359 :: NORM :: declaration :: [Ljava/lang/String :: v57 = new java.lang.String[]::JM,111364
111360 :: EXPR :: modify :: Ljava/lang/Object :: v57[#(0)] = v53::
111364 :: CALL :: call :: Ljava/util/List :: v59 = asList(v57)::JM,111364
111368 :: CALL :: call :: V :: mergeReversed(v28, v59)::CL,119163
111373 :: PRED :: IF :: Z :: if (v62 < v52) goto 533::CD,111347:CD,111372:CD,111376:CF,111374
111372 :: EXPR :: assign :: Ljava/lang/Object :: v61 = v62 + #(1)::DD,111376
111375 :: EXPR :: assign :: null :: PHI v101 = #(0), v100::DD,111295:DD,111296
111374 :: NORM :: compound :: Ljava/util/List :: return v28::DD,111082
111376 :: EXPR :: assign :: null :: PHI v62 = #(0), v61::DD,111372:DD,111373
111539 :: EXIT :: exit :: Ljava/io/File :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::
111538 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getDir(java.lang.String,boolean)::CE,111539:CD,111544:CD,111584:CD,111588:CD,111605:CD,111606
111545 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $pdbId .substring(#(1), #(3))::JM,111544
111544 :: PRED :: IF :: Z :: if (p2 $obsolete  == #(0)) goto 37::CD,111545:CD,111551:CD,111555:CD,111565:CD,111571:CD,111575:CD,111606:JM,111544
111551 :: CALL :: call :: Ljava/lang/String :: v19 = v17.toLowerCase()::
111555 :: NORM :: declaration :: Ljava/io/File :: v20 = new java.io.File::DD,111606
111565 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $pdbId .substring(#(1), #(3))::JM,111544
111571 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toLowerCase()::
111575 :: NORM :: declaration :: Ljava/io/File :: v13 = new java.io.File::DD,111606
111584 :: CALL :: call :: Z :: v26 = v23.exists()::JM,111588
111589 :: CALL :: call :: Z :: v28 = v23.mkdirs()::
111588 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,111589:CF,111605
111605 :: NORM :: compound :: Ljava/io/File :: return v23::DD,111539
111606 :: EXPR :: assign :: null :: PHI v23 = v20, v13::DD,111605
111637 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::
111636 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.MMCIFFileReader.getFilename(java.lang.String)::CE,111637:CD,111641:CD,111642:CD,111646:CD,111654:CD,111659:CD,111663
111641 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,111663
111642 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $pdbId .toLowerCase()::
111646 :: CALL :: call :: Ljava/lang/String :: v8 = valueOf(v6)::
111654 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v4.append(#(.cif.gz))::JM,111663
111659 :: CALL :: call :: Ljava/lang/String :: v14 = v12.toString()::JM,111663
111663 :: NORM :: compound :: Ljava/lang/String :: return v14::DD,111637
111667 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::CE,111668:CD,111672:CD,111677:CD,111681:CD,111686:CD,111691:CD,111695
111668 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.PDBFileReader.getFilename(java.lang.String)::
111672 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::JM,111695
111677 :: CALL :: call :: Ljava/lang/String :: v8 = p1 $pdbId .toLowerCase()::JM,111695
111681 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(v8)::JM,111695
111686 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v10.append(#(.ent.gz))::JM,111695
111691 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::JM,111695
111695 :: NORM :: compound :: Ljava/lang/String :: return v15::DD,111668
111701 :: EXIT :: exit :: Ljava/util/Date :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::JM,101057:JM,101062:JM,101066
111700 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.LocalPDBDirectory.getLastModifiedTime(java.net.URL)::CE,111701:CD,111705:CD,111709:CD,111726:CD,111765:CD,111768:JM,111735
111705 :: CALL :: call :: Ljava/net/URLConnection :: v6 = p1 $url .openConnection()::JM,111735:JM,111768:JM,111709:JM,111726
111709 :: CALL :: call :: Ljava/lang/String :: v9 = v6.getHeaderField(#(Last-Modified))::JM,111735:JM,111768:JM,111709:JM,111726
111727 :: NORM :: declaration :: Ljava/text/SimpleDateFormat :: v15 = new java.text.SimpleDateFormat::JM,111735:JM,111768
111726 :: PRED :: IF :: Z :: if (v9 == #(null)) goto 92::CF,111768:CF,111727:CD,111735
111735 :: CALL :: call :: Ljava/util/Date :: v20 = v15.parse(v9)::JM,111735:JM,111768
111765 :: NORM :: compound :: Ljava/util/Date :: return v34::CF,111701
111768 :: EXPR :: assign :: null :: PHI v34 = #(null), v20, #(null), #(null)::CF,111765
111785 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::CE,111786:CD,111789:CD,111790:CD,111791:CD,111795:JM,111908:JM,111800
111786 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.getStatus(java.lang.String[])::JM,101205
111789 :: EXPR :: assign :: I :: v3 = p1 $pdbIds .length::CF,111790
111791 :: CALL :: call :: Ljava/util/List :: v6 = getStatusIdRecords(p1 $pdbIds )::JM,111795:JM,111890:JM,111801:CL,118302
111790 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v4 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,111910
111795 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 26::CD,111796:CD,111800:CD,111801:CD,111804:CD,111813:JM,111890
111796 :: CALL :: call :: I :: v9 = v6.size()::JM,111890:JM,111801
111801 :: PRED :: IF :: Z :: if (v9 == v10) goto 44::CD,111804:CD,111813:CD,111908:CD,111909:CD,111910:CD,111914
111800 :: EXPR :: assign :: I :: v10 = p1 $pdbIds .length::CF,111801
111804 :: CALL :: call :: Ljava/lang/String :: v53 = toString(p1 $pdbIds )::
111813 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return #(null)::DD,111786
111815 :: CALL :: call :: Ljava/util/Iterator :: v14 = v6.iterator()::JM,111890:JM,111801
111820 :: CALL :: call :: Ljava/lang/Object :: v18 = v14.next()::JM,111890
111825 :: CALL :: call :: Ljava/lang/Object :: v22 = v19.get(#(structureId))::JM,111830
111831 :: PRED :: IF :: Z :: if (v23 == #(null)) goto 186::CF,111912:CD,111836:CD,111841
111830 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,111831:JM,111841
111832 :: EXPR :: reference :: Ljava/lang/Object :: v24 = p1 $pdbIds [v49]::JM,111841
111836 :: CALL :: call :: Z :: v26 = v23.equalsIgnoreCase(v24)::JM,111841
111841 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 110::CD,111843:CD,111848:CD,111849:CD,111870:CD,111911:CD,111912:CD,111913
111843 :: CALL :: call :: Ljava/lang/Object :: v29 = v19.get(#(status))::JM,111848
111849 :: PRED :: IF :: Z :: if (v30 != #(null)) goto 150::CD,111866:CD,111911
111848 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,111849
111861 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
111866 :: CALL :: call :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v36 = fromString(v30)::JM,111911:CL,118672
111870 :: PRED :: IF :: Z :: if (v37 != #(null)) goto 180::
111878 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
111882 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = v37::
111886 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,111890
111891 :: PRED :: IF :: Z :: if (v42 != #(0)) goto 216::CF,111907
111890 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 63::CD,111820:CD,111825:CD,111830:CD,111831:CD,111886:CD,111912:CD,111913:JM,111890:CF,111891
111903 :: EXPR :: modify :: Ljava/lang/Object :: v4[v49] = #(null)::
111907 :: EXPR :: assign :: Ljava/lang/Object :: v47 = v49 + #(1)::DD,111914
111909 :: PRED :: IF :: Z :: if (v48 < v12) goto 51::CD,111815:CD,111886:CD,111890:CD,111891:CD,111907:CD,111908:CD,111912:CD,111913:CD,111914:JM,111801:CF,111910
111908 :: EXPR :: assign :: I :: v12 = p1 $pdbIds .length::CF,111909
111911 :: EXPR :: assign :: null :: PHI v37 = #(null), v36::DD,111870:DD,111882
111910 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v4::DD,111786
111913 :: EXPR :: assign :: null :: PHI v42 = #(0), v42, v42, #(1)::JM,111890:DD,111891:DD,111913
111912 :: EXPR :: assign :: null :: PHI v49 = v48, v49, v49, v49::CF,111913:DD,111907:DD,111912
111914 :: EXPR :: assign :: null :: PHI v48 = #(0), v47::DD,111909:DD,111912:CF,111908
112011 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getC()::CE,112012:CD,112015:CD,112020
112012 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getC()::JM,101589
112015 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(C))::JM,112020:CL,102462
112020 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,112012
112023 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AminoAcidImpl.getN()::CE,112024:CD,112027:CD,112032
112024 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.AminoAcidImpl.getN()::JM,101590
112027 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(N))::JM,112032:CL,102462
112032 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,112024
112035 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::CE,112036:CD,112040:CD,112044:CD,112048:CD,112049:CD,112053:CD,112057:CD,112058:CD,112062:CD,112066:CD,112067:CD,112068:CD,112069:CD,112070:CD,112071:CD,112072:CD,112076
112036 :: EXIT :: exit :: D :: org.biojava.nbio.structure.Calc.getDistance(org.biojava.nbio.structure.Atom,org.biojava.nbio.structure.Atom)::JM,101597:JM,101750
112040 :: CALL :: call :: D :: v5 = p1 $a .getX()::JM,112048:CL,119487
112044 :: CALL :: call :: D :: v7 = p2 $b .getX()::JM,112048:CL,119487
112049 :: CALL :: call :: D :: v10 = p1 $a .getY()::JM,112057:CL,119501
112048 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v5 - v7::DD,112067
112053 :: CALL :: call :: D :: v12 = p2 $b .getY()::JM,112057:CL,119501
112057 :: EXPR :: assign :: Ljava/lang/Object :: v13 = v10 - v12::DD,112068
112058 :: CALL :: call :: D :: v15 = p1 $a .getZ()::JM,112066:CL,119515
112062 :: CALL :: call :: D :: v17 = p2 $b .getZ()::JM,112066:CL,119515
112067 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v8 * v8::DD,112069:CF,112068
112066 :: EXPR :: assign :: Ljava/lang/Object :: v18 = v15 - v17::DD,112070:CF,112067
112069 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 + v20::DD,112071:CF,112070
112068 :: EXPR :: assign :: Ljava/lang/Object :: v20 = v13 * v13::CF,112069
112071 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v21 + v22::JM,112072:JM,112076
112070 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v18 * v18::CF,112071
112072 :: CALL :: call :: D :: v25 = sqrt(v23)::JM,112072:JM,112076
112076 :: NORM :: compound :: D :: return v25::CF,112036
112095 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getP()::JM,101742
112094 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getP()::CE,112095:CD,112098:CD,112103
112098 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(P))::JM,112103:CL,102462
112103 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,112095
112107 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::JM,101743
112106 :: ENTR :: entry :: null :: org.biojava.nbio.structure.NucleotideImpl.getO3Prime()::CE,112107:CD,112110:CD,112115
112110 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v5 = p0 $this .getAtom(#(O3'))::JM,112115:CL,102462
112115 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v5::DD,112107
112119 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::JM,101962
112118 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getBonds()::CE,112119:CD,112125
112122 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,112125
112125 :: NORM :: compound :: Ljava/util/List :: return v3::CF,112119
112127 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getBonds()::CE,112128:CD,112134
112128 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.AtomImpl.getBonds()::JM,102091:JM,102100:JM,102105:JM,119602:JM,119540
112131 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .bonds::DD,112134
112134 :: NORM :: compound :: Ljava/util/List :: return v3::CF,112128
112136 :: ENTR :: entry :: null :: org.biojava.nbio.structure.HetatomImpl.getAltLocGroup(java.lang.Character)::CD,112141:CD,112146:JM,112211:JM,112157
112141 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .getAtom(#(0))::JM,112146:CL,97196
112146 :: PRED :: IF :: Z :: if (v6 != #(null)) goto 13::CD,112148:CD,112152:CD,112157
112148 :: CALL :: call :: Ljava/lang/Character :: v9 = v6.getAltLoc()::JM,112157:CL,102974
112152 :: CALL :: call :: Z :: v11 = v9.equals(p1 $altLoc )::JM,112157:JM,112211
112157 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 28::CD,112162
112159 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .altLocs::DD,112162
112163 :: EXPR :: reference :: Ljava/util/List :: v13 = p0 $this .altLocs::JM,112170
112162 :: PRED :: IF :: Z :: if (v12 == #(null)) goto 47::CD,112166:CD,112170
112166 :: CALL :: call :: Z :: v15 = v13.isEmpty()::JM,112170
112170 :: PRED :: IF :: Z :: if (v15 == #(0)) goto 49::CD,112175:CD,112213:CD,112217
112172 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .altLocs::JM,112217
112175 :: CALL :: call :: Ljava/util/Iterator :: v18 = v16.iterator()::JM,112217
112180 :: CALL :: call :: Ljava/lang/Object :: v22 = v18.next()::JM,112217
112185 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,112193:CL,102965
112189 :: CALL :: call :: Z :: v27 = v25.isEmpty()::JM,112193
112193 :: PRED :: IF :: Z :: if (v27 == #(0)) goto 92::CD,112195:CD,112200:CD,112213:CD,112217
112195 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v29 = v23.getAtom(#(0))::JM,112200:CL,97196
112200 :: PRED :: IF :: Z :: if (v29 != #(null)) goto 109::CD,112202:CD,112206:CD,112211:CD,112213:CD,112217
112202 :: CALL :: call :: Ljava/lang/Character :: v31 = v29.getAltLoc()::JM,112211:CL,102974
112206 :: CALL :: call :: Z :: v33 = v31.equals(p1 $altLoc )::JM,112211:JM,112157
112211 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 125::CD,112213:CD,112217
112213 :: CALL :: call :: Z :: v20 = v18.hasNext()::JM,112217
112217 :: PRED :: IF :: Z :: if (v20 != #(0)) goto 64::CD,112180:CD,112185:CD,112189:CD,112193:JM,112217
112263 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomA = p1 $atomA ::
112266 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Atom :: p0 $this .atomB = p2 $atomB ::
112269 :: EXPR :: modify :: I :: p0 $this .bondOrder = p3 $bondOrder ::
112273 :: CALL :: call :: V :: p0 $this .addSelfToAtoms()::CL,119529
112272 :: PRED :: IF :: Z :: if (p4 $addSelfToAtoms  == #(0)) goto 28::CD,112273
112403 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::JM,102428
112402 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getChemComp(java.lang.String)::CE,112403:CD,112407:CD,112411:CD,112415:CD,112420
112407 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::JM,112420
112411 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::JM,112420
112415 :: CALL :: call :: Z :: v11 = v7.equals(#(?))::JM,112420
112421 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return #(null)::DD,112403
112420 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 23::CD,112421:CD,112422:CD,112426:CD,112430:CD,112434:CD,112439:CD,112566
112422 :: CALL :: call :: Z :: v14 = fileExists(v7)::JM,112426:CL,119631
112427 :: CALL :: call :: V :: p0 $this .checkDoFirstInstall()::CL,119655
112426 :: PRED :: IF :: Z :: if (v14 != #(0)) goto 34::CD,112427
112430 :: CALL :: call :: Z :: v17 = fileExists(v7)::JM,112434:CL,119631
112435 :: CALL :: call :: Z :: v19 = downloadChemCompRecord(v7)::JM,112566:CL,119744
112434 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 46::CF,112566:CD,112435
112439 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 268::CD,112440:JM,46616:JM,120192:JM,125796:JM,125782:JM,125789:CD,112461:CD,112465:CD,112466:CD,112475:CD,112483:CD,112500:CD,112555:CD,112560
112440 :: CALL :: call :: Ljava/lang/String :: v22 = getLocalFileName(v7)::CL,120052
112461 :: CALL :: call :: V :: v28.addMMcifConsumer(v30)::CL,46674
112465 :: NORM :: declaration :: Ljava/io/BufferedReader :: v33 = new java.io.BufferedReader::CF,112466
112466 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v34 = new java.io.InputStreamReader::
112475 :: CALL :: call :: V :: v28.parse(v33)::CL,46691
112483 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v61 = v59.getChemComp(v7)::JM,112500:CL,90224
112500 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v61::DD,112403
112555 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v57 = v54.getChemComp(v7)::JM,112560:CL,120229
112560 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v57::DD,112403
112566 :: EXPR :: assign :: null :: PHI v20 = #(1), v19::DD,112439
112621 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,102588
112620 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.isUnaryExpression(java.lang.String)::JM,112635:JM,112637:JM,112638:CF,112621:CD,112624:CD,112629:CD,112634
112624 :: CALL :: call :: I :: v5 = p1 $expression .indexOf(#(())::JM,112624:JM,112629:JM,112635:JM,112634:JM,112637:JM,112638
112629 :: CALL :: call :: I :: v7 = p1 $expression .lastIndexOf(#(())::JM,112624:JM,112629:JM,112635:JM,112634:JM,112637:JM,112638
112635 :: PRED :: IF :: Z :: if (v7 >= #(0)) goto 25::CD,112636:CD,112637:CD,112640:CD,112641
112634 :: PRED :: IF :: Z :: if (v5 < #(0)) goto 23::CD,112635:CD,112636
112637 :: PRED :: IF :: Z :: if (v5 != #(0)) goto 38::CD,112638:CD,112641
112636 :: NORM :: compound :: Z :: return #(1)::CF,112621
112638 :: PRED :: IF :: Z :: if (v7 <= v5) goto 38::CD,112641
112641 :: EXPR :: assign :: null :: PHI v10 = #(0), #(1)::CF,112640
112640 :: NORM :: compound :: Z :: return v10::CF,112621
112659 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseUnaryOperatorExpression(java.lang.String)::CD,112663
112663 :: CALL :: call :: Ljava/util/List :: v4 = parseSubExpression(p1 $operatorExpression )::CL,120449
112669 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseBinaryOperatorExpression(java.lang.String)::CD,112679:CD,112680:CD,112685:CD,112690:CD,112701:CD,112702:CD,112707:CD,112712:CD,112725:CD,112733:CD,112743
112679 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v8 = new java.lang.IllegalArgumentException::
112680 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v9 = new java.lang.StringBuilder::
112685 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v9.append(p1 $expression )::
112690 :: CALL :: call :: Ljava/lang/String :: v15 = v13.toString()::
112701 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v31 = new java.lang.IllegalArgumentException::
112702 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v32 = new java.lang.StringBuilder::
112707 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(p1 $expression )::
112712 :: CALL :: call :: Ljava/lang/String :: v37 = v35.toString()::
112725 :: CALL :: call :: Ljava/util/List :: v22 = parseSubExpression(v20)::CL,120449
112733 :: CALL :: call :: Ljava/util/List :: v26 = parseSubExpression(v24)::CL,120449
112743 :: CALL :: call :: Ljava/util/List :: v30 = v27.getOrderedPairs()::CL,120603
112767 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::CE,112768:CD,112774
112768 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getId()::JM,102653:JM,102723
112771 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .id::DD,112774
112774 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,112768
112777 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::JM,102730
112776 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.getChainId()::CE,112777:CD,112783
112780 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .chainId::DD,112783
112783 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,112777
112785 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation.setTransformationMatrix(javax.vecmath.Matrix4d)::JM,112790
112790 :: EXPR :: modify :: Ljavax/vecmath/Matrix4d :: p0 $this .transformation = p1 $transformation ::
112796 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getM()::CD,112803
112800 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .M::DD,112803
112803 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,112808:CD,112818
112808 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,112812
112812 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .M = v5::
112818 :: CALL :: call :: Ljavax/vecmath/Matrix3d :: v9 = p0 $this .getMInv()::CL,120697
112859 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::CE,112860:CD,112866
112860 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.isStandard()::JM,103833
112863 :: EXPR :: reference :: Z :: v3 = p0 $this .standard::DD,112866
112866 :: NORM :: compound :: Z :: return v3::CF,112860
112869 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::JM,103847
112868 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.getHetGroups()::CE,112869:CD,112875
112872 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .hetAtoms::DD,112875
112875 :: NORM :: compound :: Ljava/util/List :: return v3::CF,112869
112877 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(java.util.List)::CD,112881:CD,112885:CD,112904:CD,112908
112881 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
112885 :: CALL :: call :: Ljava/util/Iterator :: v6 = p1 $chains .iterator()::JM,112908
112890 :: CALL :: call :: Ljava/lang/Object :: v11 = v6.next()::JM,112908
112895 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v14 = getRepresentativeAtomsOnly(v12)::CL,112924
112899 :: CALL :: call :: Z :: v16 = v3.add(v14)::
112904 :: CALL :: call :: Z :: v8 = v6.hasNext()::JM,112908
112908 :: PRED :: IF :: Z :: if (v8 != #(0)) goto 19::CD,112890:CD,112895:CD,112899:CD,112904:JM,112908
112925 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::
112924 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.CAConverter.getRepresentativeAtomsOnly(org.biojava.nbio.structure.Chain)::CE,112925:CD,112928:JM,48721:JM,48709:JM,48728:JM,48714:CD,112936:CD,112944:CD,112952:CD,112956:CD,112960:CD,113038:CD,113042:CD,113043
112928 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ChainImpl :: v3 = new org.biojava.nbio.structure.ChainImpl::DD,113043
112936 :: CALL :: call :: V :: v3.setChainID(v6)::CL,48752
112944 :: CALL :: call :: V :: v3.setCompound(v9)::CL,56270
112952 :: CALL :: call :: V :: v3.setSwissprotId(v12)::CL,84494
112956 :: CALL :: call :: Ljava/util/List :: v15 = p1 $chain .getAtomGroups()::JM,113042:JM,112969:CL,48461
112960 :: CALL :: call :: Ljava/util/Iterator :: v17 = v15.iterator()::JM,113042:JM,112969
112965 :: CALL :: call :: Ljava/lang/Object :: v22 = v17.next()::JM,113042:JM,112969
112969 :: EXPR :: assign :: Ljava/lang/Object :: v23 = CHECKCAST v22::DD,112974
112970 :: CALL :: call :: Ljava/util/List :: v25 = v23.getAtoms()::JM,113037:CL,102965
112975 :: PRED :: IF :: Z :: if (v26 != #(0)) goto 93::CD,112977:CD,113033:CD,113037
112974 :: EXPR :: assign :: Z :: v26=v23 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,112975
112977 :: CALL :: call :: Ljava/util/Iterator :: v28 = v25.iterator()::JM,113037
112982 :: CALL :: call :: Ljava/lang/Object :: v32 = v28.next()::JM,113037
112987 :: CALL :: call :: Ljava/lang/String :: v35 = v33.getName()::JM,112996:CL,88889
112991 :: CALL :: call :: Z :: v38 = v35.equals(#(CA))::JM,112996
112997 :: CALL :: call :: Lorg/biojava/nbio/structure/Element :: v40 = v33.getElement()::JM,113003:CL,97228
112996 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 200::CD,112997:CD,113001:CD,113003:CD,113033:CD,113037
113001 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Element :: v41 = org.biojava.nbio.structure.Element.C::CF,113003
113003 :: PRED :: IF :: Z :: if (v40 != v41) goto 200::JM,90033:JM,90035:JM,90008:JM,90015:JM,90031:CD,113012:CD,113020:CD,113024:CD,113028:CD,113033:CD,113037
113012 :: CALL :: call :: V :: v42.setPDBName(v45)::CL,88216
113020 :: CALL :: call :: V :: v42.setResidueNumber(v48)::CL,85618
113024 :: CALL :: call :: V :: v42.addAtom(v33)::CL,88708
113028 :: CALL :: call :: V :: v3.addGroup(v42)::CL,48899
113033 :: CALL :: call :: Z :: v30 = v28.hasNext()::JM,113037
113037 :: PRED :: IF :: Z :: if (v30 != #(0)) goto 105::CD,112982:CD,112987:CD,112991:CD,112996:JM,113037:JM,113042:JM,112969
113038 :: CALL :: call :: Z :: v19 = v17.hasNext()::JM,113042:JM,112969
113043 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v3::DD,112925
113042 :: PRED :: IF :: Z :: if (v19 != #(0)) goto 64::CD,112965:CD,112969:CD,112970:CD,112974:CD,112975:CD,113038:JM,113042:CF,113043
113095 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = #()::
113098 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::JM,113111:JM,113114:DD,113102
113102 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = v7::
113105 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = #()::
113108 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .description = #()::
113111 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .siteID = p1 $siteID ::
113114 :: EXPR :: modify :: Ljava/util/List :: p0 $this .groups = p2 $groups ::
113131 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.setEvCode(java.lang.String)::JM,113136
113136 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .evCode = p1 $evCode ::
113142 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB()::CD,113146:CD,113150:CD,113154
113146 :: NORM :: declaration :: Ljava/lang/StringBuffer :: v3 = new java.lang.StringBuffer::
113150 :: CALL :: call :: V :: p0 $this .remark800toPDB(v3)::CL,121004
113154 :: CALL :: call :: Ljava/lang/String :: v7 = v3.toString()::
113164 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.initialize()::CD,113168:CD,113175:CD,113186
113168 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,113172
113172 :: EXPR :: modify :: Ljava/util/List :: p0 $this .transformations = v3::
113175 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v7 = identity(#(3), #(3))::JM,113180:CL,121120
113180 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v7::
113183 :: EXPR :: modify :: Ljava/lang/Integer :: p0 $this .currentBioMolecule = #(null)::
113187 :: EXPR :: modify :: [D :: p0 $this .shift = v9::
113186 :: NORM :: declaration :: [D :: v9 = new []::DD,113187
113190 :: EXPR :: modify :: I :: p0 $this .modelNumber = #(1)::
113193 :: EXPR :: modify :: I :: p0 $this .currentMmSize = #(0)::
113211 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::JM,104739
113210 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getMmSize(java.lang.String)::CE,113211:CD,113215:CD,113220:CD,113221:CD,113225:CD,113226:CD,113232:CD,113236:CD,113240:CD,113244
113215 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(58))::JM,113220:JM,113225
113221 :: CALL :: call :: I :: v10 = p1 $line .length()::JM,113220:JM,113225
113220 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,113220:JM,113225
113225 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v10 - #(1)::JM,113220:JM,113225
113226 :: CALL :: call :: Ljava/lang/String :: v13 = p1 $line .substring(v8, v11)::JM,113220:JM,113225
113232 :: CALL :: call :: Ljava/lang/String :: v15 = v13.trim()::
113236 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toLowerCase()::
113240 :: CALL :: call :: I :: v19 = getSizefromString(v17)::JM,113244:CL,121182
113244 :: NORM :: compound :: I :: return v19::DD,113211
113255 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.addToCurrentChainList(java.lang.String)::CD,113260:CD,113265:CD,113266:CD,113271:CD,113275:CD,113283:CD,113287
113260 :: CALL :: call :: I :: v6 = p1 $line .indexOf(#(:))::JM,113265
113265 :: EXPR :: assign :: Ljava/lang/Object :: v8 = v6 + #(1)::JM,113265
113266 :: CALL :: call :: Ljava/lang/String :: v10 = p1 $line .substring(v8)::JM,113265
113271 :: CALL :: call :: Ljava/lang/String :: v12 = v10.trim()::
113275 :: CALL :: call :: [Ljava/lang/String :: v15 = v12.split(#([ ,]+))::JM,113283
113280 :: EXPR :: reference :: Ljava/util/List :: v16 = p0 $this .currentChainIDs::
113283 :: CALL :: call :: Ljava/util/List :: v18 = asList(v15)::JM,113283
113287 :: CALL :: call :: Z :: v20 = v16.addAll(v18)::
113307 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::JM,104805
113306 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.readMatrix(java.lang.String)::CE,113307:CD,113311:CD,113320:CD,113325:CD,113329:CD,113355:CD,113374:CD,113393:CD,113402:CD,113407:CD,113411:CD,113416
113311 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $line .split(#([ ]+))::
113316 :: EXPR :: reference :: Ljava/lang/Object :: v8 = v6[#(2)]::JM,113329:JM,113416:JM,113402
113320 :: CALL :: call :: Ljava/lang/String :: v11 = v8.substring(#(5))::JM,113329:JM,113416:JM,113402
113325 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,113329:JM,113416:JM,113402
113329 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 44::CD,113330:CD,113338
113330 :: CALL :: call :: Lorg/biojava/nbio/structure/jama/Matrix :: v17 = identity(#(3), #(3))::JM,113335:CL,121120
113335 :: EXPR :: modify :: Lorg/biojava/nbio/structure/jama/Matrix :: p0 $this .currentMatrix = v17::
113339 :: EXPR :: modify :: [D :: p0 $this .shift = v18::
113338 :: NORM :: declaration :: [D :: v18 = new []::DD,113339
113355 :: CALL :: call :: V :: v19.set(v20, #(0), v26)::CL,121459
113374 :: CALL :: call :: V :: v28.set(v29, #(1), v33)::CL,121459
113393 :: CALL :: call :: V :: v35.set(v36, #(2), v41)::CL,121459
113399 :: EXPR :: reference :: [D :: v43 = p0 $this .shift::
113403 :: EXPR :: reference :: Ljava/lang/Object :: v46 = v6[#(7)]::JM,113411:JM,113407
113402 :: EXPR :: assign :: Ljava/lang/Object :: v44 = v13 - #(1)::
113407 :: CALL :: call :: F :: v48 = parseFloat(v46)::JM,113411:JM,113407
113411 :: EXPR :: assign :: D :: v49 = CONVERT F to D v48::DD,113412
113412 :: EXPR :: modify :: D :: v43[v44] = v49::
113417 :: NORM :: compound :: Z :: return #(1)::DD,113307
113416 :: PRED :: IF :: Z :: if (v13 != #(3)) goto 127::CD,113417:CD,113418
113418 :: NORM :: compound :: Z :: return #(0)::DD,113307
113462 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.saveMatrix()::CD,113469:CD,113524:CD,113528:CD,113535:CD,113540
113466 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .currentChainIDs::JM,113528
113469 :: CALL :: call :: Ljava/util/Iterator :: v5 = v3.iterator()::JM,113528
113474 :: CALL :: call :: Ljava/lang/Object :: v10 = v5.next()::JM,113528
113479 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/BiologicalAssemblyTransformation :: v12 = new org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation::
113501 :: EXPR :: reference :: I :: v20 = p0 $this .modelNumber::
113504 :: CALL :: call :: Ljava/lang/String :: v22 = valueOf(v20)::
113516 :: EXPR :: reference :: Ljava/util/List :: v25 = p0 $this .transformations::
113519 :: CALL :: call :: Z :: v27 = v25.add(v12)::
113524 :: CALL :: call :: Z :: v7 = v5.hasNext()::JM,113528
113528 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 14::CD,113474:CD,113479:JM,86906:CD,113504:CD,113519:CD,113524:JM,113528
113535 :: CALL :: call :: Z :: v31 = v28.containsKey(v29)::JM,113540
113540 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 173::CD,113590
113590 :: CALL :: call :: Ljava/lang/Object :: v50 = v47.put(v48, v32)::
113652 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.compndValueSetter(java.lang.String,java.lang.String)::CD,113658:CD,113662:CD,113668:CD,113673:CD,113741:JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113898:JM,113822:JM,113950
113658 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113662 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,113960
113668 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113673 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 123::CD,113674:CD,113678:CD,113690:CD,113960
113674 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,113960
113678 :: CALL :: call :: I :: v19 = v17.intValue()::JM,113960
113691 :: EXPR :: reference :: I :: v26 = p0 $this .prevMolId::DD,113694
113690 :: PRED :: IF :: Z :: if (v25 <= #(0)) goto 123::CD,113694
113695 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v27 = p0 $this .current_compound::DD,113698
113694 :: PRED :: IF :: Z :: if (v26 == v25) goto 123::CD,113698:CD,113712:CD,113721:JM,80388:JM,80395:CD,113731
113699 :: EXPR :: reference :: Ljava/util/List :: v29 = p0 $this .compounds::
113698 :: PRED :: IF :: Z :: if (v27 == #(null)) goto 83::CD,113705
113702 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v30 = p0 $this .current_compound::
113705 :: CALL :: call :: Z :: v32 = v29.add(v30)::
113712 :: CALL :: call :: Ljava/lang/Integer :: v36 = valueOf(v25)::
113721 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Compound :: v38 = new org.biojava.nbio.structure.Compound::DD,113725
113725 :: EXPR :: modify :: Lorg/biojava/nbio/structure/Compound :: p0 $this .current_compound = v38::
113731 :: CALL :: call :: V :: v40.setMolId(v25)::CL,80516
113738 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v43 = p0 $this .current_compound::DD,113741
113741 :: PRED :: IF :: Z :: if (v43 != #(null)) goto 133::CD,113743:CD,113748:CD,113756:CD,113761:CD,113817:CD,113822:CD,113855:CD,113860:CD,113893:CD,113898:CD,113906:CD,113911:CD,113919:CD,113924:CD,113932:CD,113937:CD,113945:CD,113950:JM,113673
113743 :: CALL :: call :: Z :: v46 = p1 $field .equals(#(MOLECULE:))::JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113748 :: PRED :: IF :: Z :: if (v46 == #(0)) goto 150::CD,113752:JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113752 :: CALL :: call :: V :: v47.setMolName(v10)::CL,85278
113756 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(CHAIN:))::JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113761 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 245::CF,113762:CD,113768:CD,113792:CD,113796:CD,113803:CD,113807:CD,113811:JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113762 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v52 = new java.util.StringTokenizer::JM,113961:JM,113786:JM,113796
113768 :: NORM :: declaration :: Ljava/util/ArrayList :: v55 = new java.util.ArrayList::
113773 :: CALL :: call :: Ljava/lang/String :: v60 = v52.nextToken()::JM,113961:JM,113786
113777 :: CALL :: call :: Ljava/lang/String :: v62 = v60.trim()::JM,113961:JM,113786
113781 :: CALL :: call :: Z :: v65 = v62.equals(#(NULL))::JM,113961:JM,113786
113787 :: CALL :: call :: Z :: v69 = v55.add(v67)::
113786 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 209::CF,113961
113792 :: CALL :: call :: Z :: v58 = v52.hasMoreTokens()::JM,113796
113796 :: PRED :: IF :: Z :: if (v58 != #(0)) goto 181::CD,113773:CD,113777:CD,113781:CD,113786:CD,113787:CD,113792:CD,113961
113803 :: CALL :: call :: I :: v73 = v71.getMolId()::CL,80877
113807 :: CALL :: call :: Ljava/lang/Integer :: v75 = valueOf(v73)::
113811 :: CALL :: call :: Ljava/lang/Object :: v77 = v70.put(v75, v55)::
113817 :: CALL :: call :: Z :: v80 = p1 $field .equals(#(SYNONYM:))::JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113823 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v81 = new java.util.StringTokenizer::JM,113854
113822 :: PRED :: IF :: Z :: if (v80 == #(0)) goto 306::CF,113823:CD,113829:CD,113850:CD,113854:JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113829 :: NORM :: declaration :: Ljava/util/ArrayList :: v83 = new java.util.ArrayList::
113834 :: CALL :: call :: Ljava/lang/String :: v88 = v81.nextToken()::
113838 :: CALL :: call :: Z :: v90 = v83.add(v88)::
113846 :: CALL :: call :: V :: v91.setSynonyms(v83)::CL,121535
113850 :: CALL :: call :: Z :: v86 = v81.hasMoreTokens()::JM,113854
113855 :: CALL :: call :: Z :: v95 = p1 $field .equals(#(EC:))::JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113854 :: PRED :: IF :: Z :: if (v86 != #(0)) goto 278::CD,113834:CD,113838:CD,113846:CD,113850:JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113861 :: NORM :: declaration :: Ljava/util/StringTokenizer :: v96 = new java.util.StringTokenizer::JM,113892
113860 :: PRED :: IF :: Z :: if (v95 == #(0)) goto 367::CF,113861:CD,113867:CD,113888:CD,113892:JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113867 :: NORM :: declaration :: Ljava/util/ArrayList :: v98 = new java.util.ArrayList::
113872 :: CALL :: call :: Ljava/lang/String :: v103 = v96.nextToken()::
113876 :: CALL :: call :: Z :: v105 = v98.add(v103)::
113884 :: CALL :: call :: V :: v106.setEcNums(v98)::CL,121546
113888 :: CALL :: call :: Z :: v101 = v96.hasMoreTokens()::JM,113892
113893 :: CALL :: call :: Z :: v110 = p1 $field .equals(#(FRAGMENT:))::JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113892 :: PRED :: IF :: Z :: if (v101 != #(0)) goto 339::CD,113872:CD,113876:CD,113884:CD,113888:JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113898 :: PRED :: IF :: Z :: if (v110 == #(0)) goto 384::CD,113902:JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113902 :: CALL :: call :: V :: v111.setFragment(v10)::CL,121557
113906 :: CALL :: call :: Z :: v115 = p1 $field .equals(#(ENGINEERED:))::JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113911 :: PRED :: IF :: Z :: if (v115 == #(0)) goto 401::CD,113915:JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113915 :: CALL :: call :: V :: v116.setEngineered(v10)::CL,121568
113919 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(MUTATION:))::JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113924 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 418::CD,113928:JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113928 :: CALL :: call :: V :: v121.setMutation(v10)::CL,121579
113932 :: CALL :: call :: Z :: v125 = p1 $field .equals(#(BIOLOGICAL_UNIT:))::JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113937 :: PRED :: IF :: Z :: if (v125 == #(0)) goto 435::CD,113941:JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113941 :: CALL :: call :: V :: v126.setBiologicalUnit(v10)::CL,121590
113945 :: CALL :: call :: Z :: v130 = p1 $field .equals(#(OTHER_DETAILS:))::JM,113761:JM,113937:JM,113748:JM,113860:JM,113924:JM,113911:JM,113673:JM,113898:JM,113822:JM,113950
113950 :: PRED :: IF :: Z :: if (v130 == #(0)) goto 449::CD,113954
113954 :: CALL :: call :: V :: v131.setDetails(v10)::CL,121601
113961 :: EXPR :: assign :: null :: PHI v67 = v62, #( )::
113960 :: EXPR :: assign :: null :: PHI v25 = v19, #(-1)::DD,113690:DD,113694
114078 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.sourceValueSetter(java.lang.String,java.lang.String)::CD,114084:CD,114088:CD,114094:CD,114099:CD,114124:CD,114129:CD,114133:CD,114138:CD,114147:CD,114152:CD,114595:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114474:JM,114348:JM,114222:JM,114544:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114084 :: CALL :: call :: Ljava/lang/String :: v6 = p2 $value .trim()::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114088 :: CALL :: call :: Ljava/lang/String :: v10 = v6.replace(#(;), #())::JM,114111
114094 :: CALL :: call :: Z :: v13 = p1 $field .equals(#(MOL_ID:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114099 :: PRED :: IF :: Z :: if (v13 == #(0)) goto 84::CD,114103:CD,114107:CD,114111:CD,114112:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114100 :: EXPR :: reference :: Ljava/util/List :: v15 = p0 $this .compounds::
114103 :: CALL :: call :: Ljava/lang/Integer :: v17 = valueOf(v10)::JM,114111
114107 :: CALL :: call :: I :: v19 = v17.intValue()::JM,114111
114111 :: EXPR :: assign :: Ljava/lang/Object :: v21 = v19 - #(1)::
114112 :: CALL :: call :: Ljava/lang/Object :: v23 = v15.get(v21)::
114124 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
114129 :: CALL :: call :: Ljava/lang/String :: v30 = v24.getMessage()::
114133 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v26.append(v30)::
114138 :: CALL :: call :: Ljava/lang/String :: v34 = v32.toString()::
114147 :: CALL :: call :: Z :: v39 = p1 $field .equals(#(SYNTHETIC:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114152 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 104::CD,114156:CD,114161:CD,114166:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114488:JM,114362:JM,114236:JM,114558
114156 :: CALL :: call :: V :: v195.setSynthetic(v10)::CL,121612
114161 :: CALL :: call :: Z :: v42 = p1 $field .equals(#(FRAGMENT:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114166 :: PRED :: IF :: Z :: if (v42 == #(0)) goto 124::CD,114170:CD,114175:CD,114180:JM,114432:JM,114306:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114170 :: CALL :: call :: V :: v193.setFragment(v10)::CL,121557
114175 :: CALL :: call :: Z :: v45 = p1 $field .equals(#(ORGANISM_SCIENTIFIC:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114180 :: PRED :: IF :: Z :: if (v45 == #(0)) goto 144::CD,114184:CD,114189:CD,114194:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114184 :: CALL :: call :: V :: v191.setOrganismScientific(v10)::CL,101462
114189 :: CALL :: call :: Z :: v48 = p1 $field .equals(#(ORGANISM_TAXID:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114194 :: PRED :: IF :: Z :: if (v48 == #(0)) goto 164::CD,114198:CD,114203:CD,114208:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114198 :: CALL :: call :: V :: v189.setOrganismTaxId(v10)::CL,101473
114203 :: CALL :: call :: Z :: v51 = p1 $field .equals(#(ORGANISM_COMMON:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114208 :: PRED :: IF :: Z :: if (v51 == #(0)) goto 184::CD,114212:CD,114217:CD,114222:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114212 :: CALL :: call :: V :: v187.setOrganismCommon(v10)::CL,101451
114217 :: CALL :: call :: Z :: v54 = p1 $field .equals(#(STRAIN:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114222 :: PRED :: IF :: Z :: if (v54 == #(0)) goto 204::CD,114226:CD,114231:CD,114236:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114558
114226 :: CALL :: call :: V :: v185.setStrain(v10)::CL,121623
114231 :: CALL :: call :: Z :: v57 = p1 $field .equals(#(VARIANT:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114236 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 224::CD,114240:CD,114245:CD,114250:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114240 :: CALL :: call :: V :: v183.setVariant(v10)::CL,121634
114245 :: CALL :: call :: Z :: v60 = p1 $field .equals(#(CELL_LINE:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114250 :: PRED :: IF :: Z :: if (v60 == #(0)) goto 244::CD,114254:CD,114259:CD,114264:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114254 :: CALL :: call :: V :: v181.setCellLine(v10)::CL,121645
114259 :: CALL :: call :: Z :: v63 = p1 $field .equals(#(ATCC:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114264 :: PRED :: IF :: Z :: if (v63 == #(0)) goto 264::CD,114268:CD,114273:CD,114278:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114268 :: CALL :: call :: V :: v179.setAtcc(v10)::CL,101429
114273 :: CALL :: call :: Z :: v66 = p1 $field .equals(#(ORGAN:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114278 :: PRED :: IF :: Z :: if (v66 == #(0)) goto 284::CD,114282:CD,114287:CD,114292:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114282 :: CALL :: call :: V :: v177.setOrgan(v10)::CL,121656
114287 :: CALL :: call :: Z :: v69 = p1 $field .equals(#(TISSUE:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114292 :: PRED :: IF :: Z :: if (v69 == #(0)) goto 304::CD,114296:CD,114301:CD,114306:JM,114432:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114296 :: CALL :: call :: V :: v175.setTissue(v10)::CL,121667
114301 :: CALL :: call :: Z :: v72 = p1 $field .equals(#(CELL:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114306 :: PRED :: IF :: Z :: if (v72 == #(0)) goto 324::CD,114310:CD,114315:CD,114320:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114310 :: CALL :: call :: V :: v173.setCell(v10)::CL,101440
114315 :: CALL :: call :: Z :: v75 = p1 $field .equals(#(ORGANELLE:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114320 :: PRED :: IF :: Z :: if (v75 == #(0)) goto 344::CD,114324:CD,114329:CD,114334:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114324 :: CALL :: call :: V :: v171.setOrganelle(v10)::CL,121678
114329 :: CALL :: call :: Z :: v78 = p1 $field .equals(#(SECRETION:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114334 :: PRED :: IF :: Z :: if (v78 == #(0)) goto 364::CD,114338:CD,114343:CD,114348:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114338 :: CALL :: call :: V :: v169.setSecretion(v10)::CL,121689
114343 :: CALL :: call :: Z :: v81 = p1 $field .equals(#(GENE:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114348 :: PRED :: IF :: Z :: if (v81 == #(0)) goto 384::CD,114352:CD,114357:CD,114362:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114236:JM,114558
114352 :: CALL :: call :: V :: v167.setGene(v10)::CL,121700
114357 :: CALL :: call :: Z :: v84 = p1 $field .equals(#(CELLULAR_LOCATION:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114362 :: PRED :: IF :: Z :: if (v84 == #(0)) goto 404::CD,114366:CD,114371:CD,114376:JM,114432:JM,114306:JM,114180:JM,114502:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114366 :: CALL :: call :: V :: v165.setCellularLocation(v10)::CL,121711
114371 :: CALL :: call :: Z :: v87 = p1 $field .equals(#(EXPRESSION_SYSTEM:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114376 :: PRED :: IF :: Z :: if (v87 == #(0)) goto 424::CD,114380:CD,114385:CD,114390:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114380 :: CALL :: call :: V :: v163.setExpressionSystem(v10)::CL,101495
114385 :: CALL :: call :: Z :: v90 = p1 $field .equals(#(EXPRESSION_SYSTEM_TAXID:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114390 :: PRED :: IF :: Z :: if (v90 == #(0)) goto 444::CD,114394:CD,114399:CD,114404:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114394 :: CALL :: call :: V :: v161.setExpressionSystemTaxId(v10)::CL,101484
114399 :: CALL :: call :: Z :: v93 = p1 $field .equals(#(EXPRESSION_SYSTEM_STRAIN:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114404 :: PRED :: IF :: Z :: if (v93 == #(0)) goto 464::CD,114408:CD,114413:CD,114418:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114408 :: CALL :: call :: V :: v159.setExpressionSystemStrain(v10)::CL,121722
114413 :: CALL :: call :: Z :: v96 = p1 $field .equals(#(EXPRESSION_SYSTEM_VAR...))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114418 :: PRED :: IF :: Z :: if (v96 == #(0)) goto 484::CD,114422:CD,114427:CD,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114422 :: CALL :: call :: V :: v157.setExpressionSystemVariant(v10)::CL,121733
114427 :: CALL :: call :: Z :: v99 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114432 :: PRED :: IF :: Z :: if (v99 == #(0)) goto 504::CD,114436:CD,114441:CD,114446:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114436 :: CALL :: call :: V :: v155.setExpressionSystemCellLine(v10)::CL,121744
114441 :: CALL :: call :: Z :: v102 = p1 $field .equals(#(EXPRESSION_SYSTEM_ATC...))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114446 :: PRED :: IF :: Z :: if (v102 == #(0)) goto 524::CD,114450:CD,114455:CD,114460:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114450 :: CALL :: call :: V :: v153.setExpressionSystemAtccNumber(v10)::CL,121755
114455 :: CALL :: call :: Z :: v105 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORGAN:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114460 :: PRED :: IF :: Z :: if (v105 == #(0)) goto 544::CD,114464:CD,114469:CD,114474:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114464 :: CALL :: call :: V :: v151.setExpressionSystemOrgan(v10)::CL,121766
114469 :: CALL :: call :: Z :: v108 = p1 $field .equals(#(EXPRESSION_SYSTEM_TISSUE:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114474 :: PRED :: IF :: Z :: if (v108 == #(0)) goto 564::CD,114478:CD,114483:CD,114488:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114362:JM,114236:JM,114558
114478 :: CALL :: call :: V :: v149.setExpressionSystemTissue(v10)::CL,121777
114483 :: CALL :: call :: Z :: v111 = p1 $field .equals(#(EXPRESSION_SYSTEM_CELL:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114488 :: PRED :: IF :: Z :: if (v111 == #(0)) goto 584::CD,114492:CD,114497:CD,114502:JM,114432:JM,114306:JM,114180:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114492 :: CALL :: call :: V :: v147.setExpressionSystemCell(v10)::CL,121788
114497 :: CALL :: call :: Z :: v114 = p1 $field .equals(#(EXPRESSION_SYSTEM_ORG...))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114502 :: PRED :: IF :: Z :: if (v114 == #(0)) goto 604::CD,114506:CD,114511:CD,114516:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114506 :: CALL :: call :: V :: v145.setExpressionSystemOrganelle(v10)::CL,121799
114511 :: CALL :: call :: Z :: v117 = p1 $field .equals(#(EXPRESSION_SYSTEM_CEL...))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114516 :: PRED :: IF :: Z :: if (v117 == #(0)) goto 624::CD,114520:CD,114525:CD,114530:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114520 :: CALL :: call :: V :: v143.setExpressionSystemCellularLocation(v10)::CL,121810
114525 :: CALL :: call :: Z :: v120 = p1 $field .equals(#(EXPRESSION_SYSTEM_VEC...))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114530 :: PRED :: IF :: Z :: if (v120 == #(0)) goto 644::CD,114534:CD,114539:CD,114544:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114534 :: CALL :: call :: V :: v141.setExpressionSystemVectorType(v10)::CL,121821
114539 :: CALL :: call :: Z :: v123 = p1 $field .equals(#(EXPRESSION_SYSTEM_VECTOR:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114544 :: PRED :: IF :: Z :: if (v123 == #(0)) goto 664::CD,114548:CD,114553:CD,114558:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236
114548 :: CALL :: call :: V :: v139.setExpressionSystemVector(v10)::CL,121832
114553 :: CALL :: call :: Z :: v126 = p1 $field .equals(#(EXPRESSION_SYSTEM_PLA...))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114558 :: PRED :: IF :: Z :: if (v126 == #(0)) goto 684::CD,114562:CD,114567:CD,114572:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114562 :: CALL :: call :: V :: v137.setExpressionSystemPlasmid(v10)::CL,121843
114567 :: CALL :: call :: Z :: v129 = p1 $field .equals(#(EXPRESSION_SYSTEM_GENE:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114572 :: PRED :: IF :: Z :: if (v129 == #(0)) goto 704::CD,114576:CD,114581:CD,114586:JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114576 :: CALL :: call :: V :: v135.setExpressionSystemGene(v10)::CL,121854
114581 :: CALL :: call :: Z :: v132 = p1 $field .equals(#(OTHER_DETAILS:))::JM,114432:JM,114306:JM,114180:JM,114502:JM,114376:JM,114250:JM,114572:JM,114446:JM,114320:JM,114194:JM,114516:JM,114390:JM,114264:JM,114586:JM,114460:JM,114334:JM,114208:JM,114530:JM,114404:JM,114278:JM,114152:JM,114474:JM,114348:JM,114222:JM,114544:JM,114099:JM,114418:JM,114292:JM,114166:JM,114488:JM,114362:JM,114236:JM,114558
114586 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 718::CD,114590
114590 :: CALL :: call :: V :: v133.setExpressionSystemOtherDetails(v10)::CL,121865
114595 :: EXPR :: assign :: Ljava/lang/Exception :: v24 = catch <exc>::
114775 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,114779
114779 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = v4::
114782 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,114786
114786 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = v6::
114789 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = #()::
114792 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = #()::
114795 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = #()::
114798 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = #()::
114801 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = #()::
114804 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = #()::
114807 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = #()::
114810 :: EXPR :: modify :: Z :: p0 $this .published = #(0)::
114835 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.authorBuilder(java.lang.String)::CD,114840:CD,114844:CD,114849
114840 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
114844 :: CALL :: call :: Z :: v8 = p1 $authorString .equals(#())::JM,114849
114849 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 24::CD,114851:CD,114856:CD,114857
114851 :: CALL :: call :: [Ljava/lang/String :: v12 = p1 $authorString .split(#(,))::JM,115107:JM,114856
114857 :: PRED :: IF :: Z :: if (v13 != #(1)) goto 93::CF,114858:CD,114866:CD,114872:CD,114877:CD,114881:CD,114886:CD,114894:CD,115107:CD,115108:CD,115114
114856 :: EXPR :: assign :: I :: v13 = v12.length::DD,114857
114858 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v112 = new org.biojava.nbio.structure.Author::
114866 :: CALL :: call :: V :: v112.setSurname(v114)::CL,121895
114872 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v117 = new java.lang.StringBuilder::
114877 :: CALL :: call :: Ljava/lang/String :: v121 = v112.getSurname()::CL,121906
114881 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v117.append(v121)::
114886 :: CALL :: call :: Ljava/lang/String :: v125 = v123.toString()::
114894 :: CALL :: call :: Z :: v128 = v4.add(v112)::
114901 :: EXPR :: reference :: Ljava/lang/Object :: v16 = v12[v109]::
114907 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
114912 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(v16)::
114917 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::
114925 :: NORM :: declaration :: Lorg/biojava/nbio/structure/Author :: v26 = new org.biojava.nbio.structure.Author::
114929 :: CALL :: call :: [Ljava/lang/String :: v30 = v16.split(#(\.))::JM,114934:JM,114975:JM,115039:JM,115071
114935 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 209::CD,114936:CD,114942:CD,114947:CD,114952:CD,114957:CD,114961:CD,114966:CD,114975:CD,114976:CD,115113
114934 :: EXPR :: assign :: I :: v31 = v30.length::DD,114935
114936 :: CALL :: call :: V :: v26.setSurname(v16)::CL,121895
114942 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
114947 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(#(\.))::
114952 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v38.append(#(' Setting whole name ))::
114957 :: CALL :: call :: Ljava/lang/String :: v43 = v26.getSurname()::CL,121906
114961 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v41.append(v43)::
114966 :: CALL :: call :: Ljava/lang/String :: v47 = v45.toString()::
114975 :: EXPR :: assign :: I :: v49 = v30.length::DD,114976
114976 :: PRED :: IF :: Z :: if (v49 != #(1)) goto 263::CD,114981:CD,114987:CD,114992:CD,114996:CD,115001:CD,115039:CD,115040:CD,115041:CD,115044:CD,115049:CD,115054:CD,115059:CD,115067:CD,115071:CD,115072:CD,115079:CD,115084:CD,115089:CD,115097:CD,115110:CD,115111:CD,115112:CD,115113
114981 :: CALL :: call :: V :: v26.setSurname(v50)::CL,121895
114987 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v53 = new java.lang.StringBuilder::
114992 :: CALL :: call :: Ljava/lang/String :: v57 = v26.getSurname()::CL,121906
114996 :: CALL :: call :: Ljava/lang/StringBuilder :: v59 = v53.append(v57)::
115001 :: CALL :: call :: Ljava/lang/String :: v61 = v59.toString()::
115011 :: EXPR :: reference :: Ljava/lang/Object :: v65 = v30[v79]::JM,115111
115015 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v66 = new java.lang.StringBuilder::JM,115111
115016 :: CALL :: call :: Ljava/lang/String :: v68 = valueOf(v78)::
115024 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v66.append(v65)::JM,115111
115029 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v71.append(#(.))::JM,115111
115034 :: CALL :: call :: Ljava/lang/String :: v76 = v74.toString()::JM,115111
115039 :: EXPR :: assign :: I :: v63 = v30.length::DD,115040
115038 :: EXPR :: assign :: Ljava/lang/Object :: v77 = v79 + #(1)::DD,115112:CF,115110
115041 :: PRED :: IF :: Z :: if (v79 < v64) goto 270::CD,115015:CD,115016:CD,115024:CD,115029:CD,115034:CD,115038:CD,115039:CD,115040:CD,115110:CD,115111:CD,115112
115040 :: EXPR :: assign :: Ljava/lang/Object :: v64 = v63 - #(1)::CF,115041
115044 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v81 = new java.lang.StringBuilder::
115049 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v81.append(v78)::
115054 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v85.append(#('))::
115059 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
115067 :: CALL :: call :: V :: v26.setInitials(v78)::CL,121915
115071 :: EXPR :: assign :: I :: v93 = v30.length::DD,115072
115073 :: EXPR :: reference :: Ljava/lang/Object :: v95 = v30[v94]::
115072 :: EXPR :: assign :: Ljava/lang/Object :: v94 = v93 - #(1)::
115079 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
115084 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v95)::
115089 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
115097 :: CALL :: call :: V :: v26.setSurname(v95)::CL,121895
115101 :: CALL :: call :: Z :: v107 = v4.add(v26)::
115107 :: EXPR :: assign :: I :: v15 = v12.length::CF,115108
115106 :: EXPR :: assign :: Ljava/lang/Object :: v108 = v111 + #(1)::DD,115114
115108 :: PRED :: IF :: Z :: if (v109 < v15) goto 99::CD,114907:CD,114912:CD,114917:CD,114925:CD,114929:CD,114934:CD,114935:CD,115101:CD,115106:CD,115107:CD,115113:CD,115114
115111 :: EXPR :: assign :: null :: PHI v78 = #(), v76::CF,115112
115110 :: EXPR :: assign :: null :: PHI v110 = v109, v110::CF,115111:DD,115110:DD,115113
115113 :: EXPR :: assign :: null :: PHI v111 = v109, v109, v110::DD,115106
115112 :: EXPR :: assign :: null :: PHI v79 = #(0), v77::DD,115038:DD,115041:CF,115039
115114 :: EXPR :: assign :: null :: PHI v109 = #(0), v108::DD,115108:DD,115110:DD,115113:CF,115107
115211 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setAuthorList(java.util.List)::JM,115216
115216 :: EXPR :: modify :: Ljava/util/List :: p0 $this .authorList = p1 $authorList ::
115222 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setEditorList(java.util.List)::JM,115227
115227 :: EXPR :: modify :: Ljava/util/List :: p0 $this .editorList = p1 $editorList ::
115233 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRef(java.lang.String)::JM,115238
115238 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .ref = p1 $ref ::
115259 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115264 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v8.append(p2 $ref )::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115269 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v12.append(#('))::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115274 :: CALL :: call :: Ljava/lang/String :: v17 = v15.toString()::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115388
115282 :: CALL :: call :: Z :: v21 = p2 $ref .equals(#(TO BE PUBLISHED ))::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115287 :: PRED :: IF :: Z :: if (v21 == #(0)) goto 81::CD,115288:CD,115306:CD,115316:CD,115320:JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115288 :: CALL :: call :: Ljava/lang/String :: v173 = p2 $ref .trim()::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115306 :: CALL :: call :: Ljava/lang/String :: v179 = format(#(JournalParser found j...), v176)::
115316 :: CALL :: call :: I :: v24 = p2 $ref .length()::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115320 :: PRED :: IF :: Z :: if (v24 >= #(48)) goto 128::CD,115341:CD,115355:CD,115364:CD,115368:CD,115369:CD,115373:CD,115374:CD,115380:CD,115384:CD,115388:CD,115389:CD,115393:CD,115394:CD,115400:CD,115404:CD,115408:CD,115409:CD,115413:CD,115414:CD,115420:CD,115424:CD,115425:CD,115431:CD,115435:CD,115443:CD,115448:CD,115452:CD,115453:CD,115459:CD,115463:CD,115469:CD,115473:CD,115478:CD,115482:CD,115494:CD,115511:CD,115528:CD,115545:CD,115554:CD,115559:CD,115615:CD,115620:JM,115287:JM,115320
115341 :: CALL :: call :: Ljava/lang/String :: v28 = p2 $ref .substring(#(30), #(48))::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115355 :: CALL :: call :: Ljava/lang/String :: v35 = format(#(Parsing volumeInforma...), v33)::
115364 :: CALL :: call :: I :: v38 = v28.length()::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115369 :: CALL :: call :: I :: v42 = v28.length()::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115368 :: EXPR :: assign :: Ljava/lang/Object :: v40 = v38 - #(5)::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115388:JM,115452
115373 :: EXPR :: assign :: Ljava/lang/Object :: v43 = v42 - #(1)::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115374 :: CALL :: call :: Ljava/lang/String :: v45 = v28.substring(v40, v43)::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115380 :: CALL :: call :: Ljava/lang/String :: v47 = v45.trim()::JM,115393:JM,115408:JM,115413:JM,115559:JM,115388
115384 :: CALL :: call :: I :: v49 = v28.length()::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115389 :: CALL :: call :: I :: v53 = v28.length()::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115388 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v49 - #(11)::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115388:JM,115452
115393 :: EXPR :: assign :: Ljava/lang/Object :: v55 = v53 - #(6)::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115394 :: CALL :: call :: Ljava/lang/String :: v57 = v28.substring(v51, v55)::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115400 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,115408:JM,115413:JM,115559
115404 :: CALL :: call :: I :: v61 = v28.length()::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115409 :: CALL :: call :: I :: v65 = v28.length()::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115408 :: EXPR :: assign :: Ljava/lang/Object :: v63 = v61 - #(16)::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115388:JM,115452
115413 :: EXPR :: assign :: Ljava/lang/Object :: v67 = v65 - #(12)::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115414 :: CALL :: call :: Ljava/lang/String :: v69 = v28.substring(v63, v67)::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115420 :: CALL :: call :: Ljava/lang/String :: v71 = v69.trim()::JM,115559
115425 :: CALL :: call :: Ljava/lang/String :: v75 = p2 $ref .substring(#(0), #(29))::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115424 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v72 = new java.lang.StringBuilder::JM,115621:JM,115620:JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115431 :: CALL :: call :: Ljava/lang/String :: v77 = v75.trim()::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115435 :: CALL :: call :: Ljava/lang/String :: v79 = valueOf(v77)::
115443 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v72.append(#( ))::JM,115621:JM,115620
115448 :: CALL :: call :: I :: v85 = p2 $ref .length()::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115453 :: CALL :: call :: Ljava/lang/String :: v88 = p2 $ref .substring(#(30), v86)::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115452 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v85 - #(1)::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115459 :: CALL :: call :: Ljava/lang/String :: v90 = v28.trim()::JM,115393:JM,115408:JM,115413:JM,115559:JM,115368:JM,115373:JM,115452:JM,115388
115463 :: CALL :: call :: Ljava/lang/String :: v93 = v88.replace(v90, #())::JM,115621:JM,115620
115469 :: CALL :: call :: Ljava/lang/String :: v95 = v93.trim()::JM,115621:JM,115620
115473 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v83.append(v95)::JM,115621:JM,115620
115478 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::JM,115621:JM,115620
115482 :: CALL :: call :: Ljava/lang/String :: v101 = v99.trim()::JM,115621:JM,115620
115494 :: CALL :: call :: Ljava/lang/String :: v107 = format(#(JournalParser found v...), v105)::
115511 :: CALL :: call :: Ljava/lang/String :: v114 = format(#(JournalParser found s...), v112)::
115528 :: CALL :: call :: Ljava/lang/String :: v121 = format(#(JournalParser found d...), v119)::
115545 :: CALL :: call :: Ljava/lang/String :: v128 = format(#(JournalParser found j...), v126)::
115554 :: CALL :: call :: Z :: v132 = v47.equals(#(    ))::JM,115559
115559 :: PRED :: IF :: Z :: if (v132 != #(0)) goto 431::CD,115560:JM,115559
115560 :: CALL :: call :: Ljava/lang/Integer :: v134 = valueOf(v47)::JM,115559
115575 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::JM,115393:JM,115408:JM,115413:JM,115287:JM,115559:JM,115320:JM,115368:JM,115373:JM,115452:JM,115388
115576 :: CALL :: call :: Ljava/lang/String :: v142 = valueOf(v47)::
115584 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v140.append(#( is not a valid integ...))::
115589 :: CALL :: call :: Ljava/lang/String :: v148 = v146.toString()::
115615 :: CALL :: call :: Z :: v156 = v101.equals(#(    ))::JM,115621:JM,115620
115621 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = v101::
115620 :: PRED :: IF :: Z :: if (v156 != #(0)) goto 502::CD,115627:CD,115635:CD,115640
115627 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
115632 :: EXPR :: reference :: Ljava/lang/String :: v162 = p0 $this .journalName::
115635 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(v162)::
115640 :: CALL :: call :: Ljava/lang/String :: v166 = v164.toString()::
115772 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setJournalName(java.lang.String)::JM,115777
115777 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .journalName = p1 $journalName ::
115783 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.getJournalName()::CE,115784:CD,115790
115784 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.JournalArticle.getJournalName()::JM,107045
115787 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .journalName::DD,115790
115790 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,115784
115792 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setIsPublished(java.lang.Boolean)::CD,115797:JM,115801
115797 :: CALL :: call :: Z :: v5 = p1 $state .booleanValue()::JM,115801
115801 :: EXPR :: modify :: Z :: p0 $this .published = v5::
115817 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setVolume(java.lang.String)::JM,115822
115822 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .volume = p1 $volume ::
115838 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setStartPage(java.lang.String)::JM,115843
115843 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .startPage = p1 $startPage ::
115859 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublicationDate(int)::JM,115864
115864 :: EXPR :: modify :: I :: p0 $this .publicationDate = p1 $publicationDate ::
115870 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPublisher(java.lang.String)::JM,115875
115875 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .publisher = p1 $publisher ::
115881 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setTitle(java.lang.String)::JM,115886
115886 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .title = p1 $title ::
115892 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setRefn(java.lang.String)::JM,115897
115897 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .refn = p1 $refn ::
115903 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setPmid(java.lang.String)::JM,115908
115908 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .pmid = p1 $pmid ::
115914 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.setDoi(java.lang.String)::JM,115919
115919 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .doi = p1 $doi ::
115925 :: ENTR :: entry :: null :: org.biojava.nbio.structure.JournalArticle.toString()::CD,115929:CD,115933:CD,115937:CD,115942:CD,115947:CD,115952:CD,115957:CD,115962:CD,115967:CD,115972:CD,115980:CD,116000:CD,116004:CD,116005:CD,116010:CD,116018:CD,116023:CD,116028:CD,116036:CD,116040:CD,116082:CD,116087:CD,116092:CD,116100:CD,116105:CD,116127:CD,116132:CD,116154:CD,116159:CD,116181:CD,116186:CD,116205
115929 :: CALL :: call :: Ljava/lang/String :: v5 = getProperty(#(line.separator))::JM,115929
115933 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
115937 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v8 = new java.lang.StringBuilder::
115942 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
115947 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v14 = new java.lang.StringBuilder::
115952 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
115957 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
115962 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
115967 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v26 = new java.lang.StringBuilder::
115972 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v29 = new java.lang.StringBuilder::
115977 :: EXPR :: reference :: Ljava/util/List :: v32 = p0 $this .authorList::JM,116004
115980 :: CALL :: call :: Ljava/util/Iterator :: v34 = v32.iterator()::JM,116004
115985 :: CALL :: call :: Ljava/lang/Object :: v39 = v34.next()::JM,116004
115990 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v8.append(v40)::
115995 :: CALL :: call :: Ljava/lang/StringBuilder :: v45 = v42.append(#(,))::
116000 :: CALL :: call :: Z :: v36 = v34.hasNext()::JM,116004
116005 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v6.append(v8)::
116004 :: PRED :: IF :: Z :: if (v36 != #(0)) goto 117::CD,115985:CD,115990:CD,115995:CD,116000:JM,116004
116010 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v47.append(v5)::
116015 :: EXPR :: reference :: Ljava/lang/String :: v50 = p0 $this .title::
116018 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v11.append(v50)::
116023 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v6.append(v11)::
116028 :: CALL :: call :: Ljava/lang/StringBuilder :: v56 = v54.append(v5)::
116033 :: EXPR :: reference :: Ljava/util/List :: v57 = p0 $this .editorList::JM,116040
116036 :: CALL :: call :: Z :: v59 = v57.isEmpty()::JM,116040
116041 :: EXPR :: reference :: Ljava/util/List :: v60 = p0 $this .editorList::JM,116068
116040 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 255::CD,116044:CD,116064:CD,116068:CD,116069:CD,116074
116044 :: CALL :: call :: Ljava/util/Iterator :: v62 = v60.iterator()::JM,116068
116049 :: CALL :: call :: Ljava/lang/Object :: v66 = v62.next()::JM,116068
116054 :: CALL :: call :: Ljava/lang/StringBuilder :: v69 = v14.append(v67)::
116059 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v69.append(#(,))::
116064 :: CALL :: call :: Z :: v64 = v62.hasNext()::JM,116068
116069 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v6.append(v14)::
116068 :: PRED :: IF :: Z :: if (v64 != #(0)) goto 208::CD,116049:CD,116054:CD,116059:CD,116064:JM,116068
116074 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v74.append(v5)::
116079 :: EXPR :: reference :: Ljava/lang/String :: v79 = p0 $this .ref::
116082 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v17.append(v79)::
116087 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v6.append(v17)::
116092 :: CALL :: call :: Ljava/lang/StringBuilder :: v85 = v83.append(v5)::
116097 :: EXPR :: reference :: Ljava/lang/String :: v86 = p0 $this .publisher::JM,116105
116100 :: CALL :: call :: Z :: v89 = v86.equals(#())::JM,116105
116105 :: PRED :: IF :: Z :: if (v89 != #(0)) goto 307::CD,116109:CD,116114:CD,116119
116106 :: EXPR :: reference :: Ljava/lang/String :: v90 = p0 $this .publisher::
116109 :: CALL :: call :: Ljava/lang/StringBuilder :: v92 = v20.append(v90)::
116114 :: CALL :: call :: Ljava/lang/StringBuilder :: v94 = v6.append(v20)::
116119 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v94.append(v5)::
116124 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .refn::JM,116132
116127 :: CALL :: call :: Z :: v99 = v97.equals(#())::JM,116132
116133 :: EXPR :: reference :: Ljava/lang/String :: v100 = p0 $this .refn::
116132 :: PRED :: IF :: Z :: if (v99 != #(0)) goto 340::CD,116136:CD,116141:CD,116146
116136 :: CALL :: call :: Ljava/lang/StringBuilder :: v102 = v23.append(v100)::
116141 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v6.append(v23)::
116146 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v5)::
116151 :: EXPR :: reference :: Ljava/lang/String :: v107 = p0 $this .pmid::JM,116159
116154 :: CALL :: call :: Z :: v109 = v107.equals(#())::JM,116159
116159 :: PRED :: IF :: Z :: if (v109 != #(0)) goto 373::CD,116163:CD,116168:CD,116173
116160 :: EXPR :: reference :: Ljava/lang/String :: v110 = p0 $this .pmid::
116163 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v26.append(v110)::
116168 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v6.append(v26)::
116173 :: CALL :: call :: Ljava/lang/StringBuilder :: v116 = v114.append(v5)::
116178 :: EXPR :: reference :: Ljava/lang/String :: v117 = p0 $this .doi::JM,116186
116181 :: CALL :: call :: Z :: v119 = v117.equals(#())::JM,116186
116187 :: EXPR :: reference :: Ljava/lang/String :: v120 = p0 $this .doi::
116186 :: PRED :: IF :: Z :: if (v119 != #(0)) goto 406::CD,116190:CD,116195:CD,116200
116190 :: CALL :: call :: Ljava/lang/StringBuilder :: v122 = v29.append(v120)::
116195 :: CALL :: call :: Ljava/lang/StringBuilder :: v124 = v6.append(v29)::
116200 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v124.append(v5)::
116205 :: CALL :: call :: Ljava/lang/String :: v128 = v6.toString()::
116323 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBHeader.setCrystallographicInfo(org.biojava.nbio.structure.PDBCrystallographicInfo)::JM,116328
116328 :: EXPR :: modify :: Lorg/biojava/nbio/structure/PDBCrystallographicInfo :: p0 $this .crystallographicInfo = p1 $crystallographicInfo ::
116334 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapSeqresRecords(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,116340:CD,116344:CD,116359:CD,116363:CD,116379:CD,116383:CD,116396:CD,116402
116340 :: CALL :: call :: Ljava/util/List :: v6 = p2 $seqRes .getAtomGroups()::CL,48461
116344 :: CALL :: call :: Ljava/util/List :: v8 = p1 $atomRes .getAtomGroups()::CL,48461
116359 :: CALL :: call :: I :: v18 = v8.size()::
116363 :: CALL :: call :: Ljava/lang/Integer :: v20 = valueOf(v18)::
116379 :: CALL :: call :: I :: v26 = v6.size()::
116383 :: CALL :: call :: Ljava/lang/Integer :: v28 = valueOf(v26)::
116396 :: CALL :: call :: Ljava/util/List :: v31 = p0 $this .trySimpleMatch(v6, v8)::JM,116402:CL,121969
116403 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v31)::CL,48841
116402 :: PRED :: IF :: Z :: if (v31 == #(null)) goto 95::CD,116403:CD,116416:CD,116421:CD,116427:CD,116432:CD,116436
116416 :: CALL :: call :: Ljava/util/List :: v38 = p2 $seqRes .getAtomGroups(v36)::JM,116436:CL,97721
116421 :: CALL :: call :: I :: v40 = v38.size()::JM,116436
116427 :: CALL :: call :: Ljava/util/List :: v43 = p2 $seqRes .getAtomGroups(v41)::JM,116437:CL,97721
116432 :: CALL :: call :: I :: v45 = v43.size()::JM,116437
116437 :: PRED :: IF :: Z :: if (v45 <= #(1)) goto 177::CD,116444:CD,116454:CD,116471:CD,116479
116436 :: PRED :: IF :: Z :: if (v40 >= #(1)) goto 218::CD,116437:CD,116495:CD,116500:CD,116504
116444 :: CALL :: call :: Ljava/lang/Integer :: v81 = valueOf(v45)::
116454 :: CALL :: call :: V :: p0 $this .alignNucleotideChains(p2 $seqRes , p1 $atomRes )::CL,122433
116471 :: CALL :: call :: Ljava/lang/Integer :: v72 = valueOf(v40)::
116479 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v45)::
116495 :: CALL :: call :: Ljava/util/List :: v48 = p1 $atomRes .getAtomGroups(v46)::JM,116504:CL,97721
116500 :: CALL :: call :: I :: v50 = v48.size()::JM,116504
116504 :: PRED :: IF :: Z :: if (v50 >= #(1)) goto 252::CD,116532:CD,116538
116532 :: CALL :: call :: Z :: v59 = p0 $this .alignProteinChains(v6, v57)::JM,116538:CL,122512
116539 :: CALL :: call :: V :: p1 $atomRes .setSeqResGroups(v6)::CL,48841
116538 :: PRED :: IF :: Z :: if (v59 != #(0)) goto 293::CD,116539
116613 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::CE,116614:CD,116618:CD,116624
116614 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String)::
116618 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v6 = p0 $this .findChain(p1 $chainId , #(0))::JM,116624:CL,122780
116624 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v6::DD,116614
116628 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setChains(java.util.List)::JM,116633
116633 :: EXPR :: modify :: Ljava/util/List :: p0 $this .chains = p1 $chains ::
116639 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getCompound()::CE,116640:CD,116646
116640 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Compound :: org.biojava.nbio.structure.ChainImpl.getCompound()::JM,107750
116643 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Compound :: v3 = p0 $this .mol::DD,116646
116646 :: NORM :: compound :: Lorg/biojava/nbio/structure/Compound :: return v3::CF,116640
116648 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBFileParser.findMaxCompoundId(java.util.List)::CD,116656
116656 :: CALL :: call :: Ljava/lang/Object :: v6 = max(p1 $compounds , v3)::
116669 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::CE,116670:CD,116675:CD,116682
116670 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String)::
116675 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v7 = p0 $this .findGroup(p1 $chainName , p2 $pdbResnum , #(0))::JM,116682:CL,122872
116682 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v7::DD,116670
116687 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::CE,116688:CD,116694
116688 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc1()::JM,108294
116691 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc1::DD,116694
116694 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,116688
116697 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::JM,108304
116696 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.getAltLoc2()::CE,116697:CD,116703
116700 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .altLoc2::DD,116703
116703 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,116697
116795 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.util.PDBTemporaryStorageUtils.LinkRecord.toString()::CD,116799:CD,116800:CD,116808:CD,116813:CD,116817:CD,116818:CD,116826:CD,116834:CD,116839:CD,116844:CD,116848:CD,116849:CD,116857:CD,116865:CD,116870:CD,116875:CD,116879:CD,116880:CD,116888:CD,116896:CD,116901:CD,116906:CD,116910:CD,116911:CD,116919:CD,116927:CD,116932:CD,116937:CD,116941:CD,116942:CD,116950:CD,116958:CD,116963:CD,116968:CD,116972:CD,116973:CD,116981:CD,116989:CD,116994:CD,116999:CD,117003:CD,117004:CD,117012:CD,117017:CD,117021:CD,117022:CD,117030:CD,117038:CD,117043:CD,117048:CD,117052:CD,117053:CD,117061:CD,117069:CD,117074:CD,117079:CD,117083:CD,117084:CD,117092:CD,117100:CD,117105:CD,117110:CD,117114:CD,117115:CD,117123:CD,117131:CD,117136:CD,117141:CD,117145:CD,117146:CD,117154:CD,117162:CD,117167:CD,117172:CD,117176:CD,117177:CD,117185:CD,117193:CD,117198:CD,117203:CD,117207:CD,117208:CD,117216:CD,117221
116799 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
116800 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([LINK Record:))::
116808 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
116813 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
116817 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
116818 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
116826 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Name: ))::
116831 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .name1::
116834 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
116839 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
116844 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
116849 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
116848 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
116857 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Alt Loc: ))::
116862 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .altLoc1::
116865 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
116870 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
116875 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
116879 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
116880 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
116888 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Res name: ))::
116893 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .resName1::
116896 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
116901 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
116906 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
116911 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
116910 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
116919 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(	Chain ID: ))::
116924 :: EXPR :: reference :: Ljava/lang/String :: v63 = p0 $this .chainID1::
116927 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v62.append(v63)::
116932 :: CALL :: call :: Ljava/lang/StringBuilder :: v67 = v65.append(#())::
116937 :: CALL :: call :: Ljava/lang/String :: v69 = v67.toString()::
116941 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
116942 :: CALL :: call :: Ljava/lang/String :: v72 = valueOf(v69)::
116950 :: CALL :: call :: Ljava/lang/StringBuilder :: v76 = v70.append(#(	Res Seq: ))::
116955 :: EXPR :: reference :: Ljava/lang/String :: v77 = p0 $this .resSeq1::
116958 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v76.append(v77)::
116963 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#())::
116968 :: CALL :: call :: Ljava/lang/String :: v83 = v81.toString()::
116973 :: CALL :: call :: Ljava/lang/String :: v86 = valueOf(v83)::
116972 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v84 = new java.lang.StringBuilder::
116981 :: CALL :: call :: Ljava/lang/StringBuilder :: v90 = v84.append(#(	Ins Code: ))::
116986 :: EXPR :: reference :: Ljava/lang/String :: v91 = p0 $this .iCode1::
116989 :: CALL :: call :: Ljava/lang/StringBuilder :: v93 = v90.append(v91)::
116994 :: CALL :: call :: Ljava/lang/StringBuilder :: v95 = v93.append(#())::
116999 :: CALL :: call :: Ljava/lang/String :: v97 = v95.toString()::
117003 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v98 = new java.lang.StringBuilder::
117004 :: CALL :: call :: Ljava/lang/String :: v100 = valueOf(v97)::
117012 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v98.append(#(Atom 2:))::
117017 :: CALL :: call :: Ljava/lang/String :: v106 = v104.toString()::
117021 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v107 = new java.lang.StringBuilder::
117022 :: CALL :: call :: Ljava/lang/String :: v109 = valueOf(v106)::
117030 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v107.append(#(	Name: ))::
117035 :: EXPR :: reference :: Ljava/lang/String :: v113 = p0 $this .name2::
117038 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v112.append(v113)::
117043 :: CALL :: call :: Ljava/lang/StringBuilder :: v117 = v115.append(#())::
117048 :: CALL :: call :: Ljava/lang/String :: v119 = v117.toString()::
117053 :: CALL :: call :: Ljava/lang/String :: v122 = valueOf(v119)::
117052 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v120 = new java.lang.StringBuilder::
117061 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v120.append(#(	Alt Loc: ))::
117066 :: EXPR :: reference :: Ljava/lang/String :: v126 = p0 $this .altLoc2::
117069 :: CALL :: call :: Ljava/lang/StringBuilder :: v128 = v125.append(v126)::
117074 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v128.append(#())::
117079 :: CALL :: call :: Ljava/lang/String :: v132 = v130.toString()::
117083 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v133 = new java.lang.StringBuilder::
117084 :: CALL :: call :: Ljava/lang/String :: v135 = valueOf(v132)::
117092 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v133.append(#(	Res name: ))::
117097 :: EXPR :: reference :: Ljava/lang/String :: v139 = p0 $this .resName2::
117100 :: CALL :: call :: Ljava/lang/StringBuilder :: v141 = v138.append(v139)::
117105 :: CALL :: call :: Ljava/lang/StringBuilder :: v143 = v141.append(#())::
117110 :: CALL :: call :: Ljava/lang/String :: v145 = v143.toString()::
117115 :: CALL :: call :: Ljava/lang/String :: v148 = valueOf(v145)::
117114 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v146 = new java.lang.StringBuilder::
117123 :: CALL :: call :: Ljava/lang/StringBuilder :: v151 = v146.append(#(	Chain ID: ))::
117128 :: EXPR :: reference :: Ljava/lang/String :: v152 = p0 $this .chainID2::
117131 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v151.append(v152)::
117136 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v154.append(#())::
117141 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
117145 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v159 = new java.lang.StringBuilder::
117146 :: CALL :: call :: Ljava/lang/String :: v161 = valueOf(v158)::
117154 :: CALL :: call :: Ljava/lang/StringBuilder :: v164 = v159.append(#(	Res Seq: ))::
117159 :: EXPR :: reference :: Ljava/lang/String :: v165 = p0 $this .resSeq2::
117162 :: CALL :: call :: Ljava/lang/StringBuilder :: v167 = v164.append(v165)::
117167 :: CALL :: call :: Ljava/lang/StringBuilder :: v169 = v167.append(#())::
117172 :: CALL :: call :: Ljava/lang/String :: v171 = v169.toString()::
117177 :: CALL :: call :: Ljava/lang/String :: v174 = valueOf(v171)::
117176 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v172 = new java.lang.StringBuilder::
117185 :: CALL :: call :: Ljava/lang/StringBuilder :: v177 = v172.append(#(	Ins Code: ))::
117190 :: EXPR :: reference :: Ljava/lang/String :: v178 = p0 $this .iCode2::
117193 :: CALL :: call :: Ljava/lang/StringBuilder :: v180 = v177.append(v178)::
117198 :: CALL :: call :: Ljava/lang/StringBuilder :: v182 = v180.append(#())::
117203 :: CALL :: call :: Ljava/lang/String :: v184 = v182.toString()::
117207 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v185 = new java.lang.StringBuilder::
117208 :: CALL :: call :: Ljava/lang/String :: v187 = valueOf(v184)::
117216 :: CALL :: call :: Ljava/lang/StringBuilder :: v191 = v185.append(#(]))::
117221 :: CALL :: call :: Ljava/lang/String :: v193 = v191.toString()::
117313 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::CE,117314:CD,117330:CD,117352:CD,117362:JM,112272:JM,112263:JM,112266:JM,112269:CD,117372:CD,117376:CD,117387:CD,117403
117314 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Bond :: org.biojava.nbio.structure.io.BondMaker.formDisulfideBond(org.biojava.nbio.structure.io.SSBondImpl)::JM,108460
117330 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v14 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v8, v10, v12)::CL,102148
117352 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v22 = p0 $this .getAtomFromRecord(#(SG), #(), #(CYS), v16, v18, v20)::CL,102148
117362 :: NORM :: declaration :: Lorg/biojava/nbio/structure/BondImpl :: v37 = new org.biojava.nbio.structure.BondImpl::DD,117376
117372 :: CALL :: call :: V :: v40.addSSBond(v37)::CL,123073
117376 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return v37::DD,117314
117387 :: CALL :: call :: Ljava/lang/String :: v34 = p1 $disulfideBond .toString()::CL,123090
117403 :: NORM :: compound :: Lorg/biojava/nbio/structure/Bond :: return #(null)::DD,117314
117430 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.getNextGroup(int,int,int)::CD,117445:CD,117454:CD,117459:CD,117463:JM,117483
117445 :: NORM :: declaration :: Ljava/util/NoSuchElementException :: v30 = new java.util.NoSuchElementException::
117454 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,117463:CL,48170
117459 :: CALL :: call :: I :: v13 = v11.size()::JM,117463
117463 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 59::CD,117465:CD,117473:CD,117479:CD,117483:JM,117463
117465 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v29 = p0 $this .getNextGroup(v27, #(0), #(0))::CL,117430
117473 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,117463:JM,117483
117479 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,117483:CL,123386
117483 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 92::CD,117485:CD,117505
117485 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v26 = p0 $this .getNextGroup(p1 $tmp_model , v23, #(0))::CL,117430
117505 :: CALL :: call :: Lorg/biojava/nbio/structure/Group :: v21 = v16.getAtomGroup(v19)::CL,85017
117541 :: ENTR :: entry :: null :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::CE,117542:CD,117551:CD,117555:JM,117569:JM,117589
117542 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.GroupIterator.hasSubGroup(int,int,int)::JM,108960:JM,117578:JM,117598
117551 :: CALL :: call :: I :: v8 = v6.nrModels()::JM,117555:CL,49141
117555 :: PRED :: IF :: Z :: if (p1 $tmp_model  < v8) goto 16::CD,117556:CD,117560:CD,117565:CD,117569
117556 :: NORM :: compound :: Z :: return #(0)::DD,117542
117560 :: CALL :: call :: Ljava/util/List :: v11 = v9.getModel(p1 $tmp_model )::JM,117569:CL,48170
117565 :: CALL :: call :: I :: v13 = v11.size()::JM,117569
117569 :: PRED :: IF :: Z :: if (p2 $tmp_chain  < v13) goto 51::CD,117571:CD,117578:CD,117579:CD,117585:CD,117589:JM,117569
117571 :: CALL :: call :: Z :: v26 = p0 $this .hasSubGroup(v24, #(0), #(0))::JM,117578:CL,117541
117579 :: CALL :: call :: Ljava/lang/Object :: v15 = v11.get(p2 $tmp_chain )::JM,117569:JM,117589
117578 :: NORM :: compound :: Z :: return v26::DD,117542
117585 :: CALL :: call :: I :: v18 = v16.getAtomLength()::JM,117589:CL,123386
117589 :: PRED :: IF :: Z :: if (p3 $tmp_group  < v18) goto 87::CD,117591:CD,117598:CD,117600
117591 :: CALL :: call :: Z :: v23 = p0 $this .hasSubGroup(p1 $tmp_model , v20, #(0))::JM,117598:CL,117541
117599 :: NORM :: compound :: Z :: return #(0)::DD,117542
117598 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 87::CD,117599:CD,117600
117600 :: NORM :: compound :: Z :: return #(1)::DD,117542
117761 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ResidueNumber.toPDB()::CD,117768:CD,117805
117765 :: EXPR :: reference :: Ljava/lang/Character :: v3 = p0 $this .insCode::DD,117768
117769 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
117768 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 34::CF,117769:CD,117776:CD,117781
117776 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v6.append(v8)::
117781 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
117805 :: CALL :: call :: Ljava/lang/String :: v23 = format(#(%s%4d%-2s), v16)::
117840 :: CALL :: call :: V :: p0 $this .parse(p1 $reader )::CL,123399
118303 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::JM,111096:JM,111101:JM,111795:JM,111890:JM,111801
118302 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.getStatusIdRecords(java.lang.String[])::CE,118303:CD,118306:CD,118307:CD,118312:CD,118316:CD,118340:CD,118351:CD,118356:CD,118412:CD,118413:CD,118417:CD,118418:CD,118423:CD,118519:CD,118533:CD,118536:CD,118550:CD,118553:CD,118567:CD,118574:CD,118575
118307 :: EXPR :: assign :: I :: v4 = p1 $pdbIDs .length::
118306 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::DD,118424:DD,118568:CF,118307
118312 :: CALL :: call :: Ljava/lang/String :: v8 = getProperty(#(PDB.SERVER))::JM,118312:JM,118316
118316 :: PRED :: IF :: Z :: if (v8 != #(null)) goto 26::CD,118329
118329 :: CALL :: call :: Ljava/lang/String :: v17 = format(#(Got System property %s=%s), v13)::
118340 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v135 = new java.lang.IllegalArgumentException::
118351 :: CALL :: call :: Ljava/lang/String :: v25 = format(#(http://%s/pdb/rest/id...), v23)::JM,118574
118356 :: EXPR :: assign :: I :: v26 = p1 $pdbIDs .length::DD,118412
118362 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toUpperCase()::JM,118373:JM,118381:JM,118573
118366 :: EXPR :: reference :: Ljava/util/Map :: v30 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,118373
118368 :: CALL :: call :: Z :: v32 = v30.containsKey(v29)::JM,118373:JM,118381:JM,118573
118373 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 148::CF,118388:CD,118374:CD,118376:CD,118381:CD,118382:CD,118389:CD,118397:CD,118402:CD,118407:CD,118573
118374 :: EXPR :: reference :: Ljava/util/Map :: v33 = org.biojava.nbio.structure.PDBStatus.recordsCache::JM,118381
118376 :: CALL :: call :: Ljava/lang/Object :: v35 = v33.get(v29)::JM,118381:JM,118373:JM,118573
118381 :: EXPR :: assign :: Ljava/lang/Object :: v36 = CHECKCAST v35::
118382 :: CALL :: call :: Z :: v38 = v3.add(v36)::
118389 :: CALL :: call :: Ljava/lang/String :: v41 = valueOf(v52)::
118388 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v39 = new java.lang.StringBuilder::JM,118573
118397 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v39.append(v29)::JM,118573:JM,118373:JM,118381
118402 :: CALL :: call :: Ljava/lang/StringBuilder :: v47 = v44.append(#(,))::JM,118573
118407 :: CALL :: call :: Ljava/lang/String :: v49 = v47.toString()::JM,118573
118411 :: EXPR :: assign :: Ljava/lang/Object :: v51 = v53 + #(1)::DD,118575:CF,118574
118413 :: CALL :: call :: I :: v55 = v52.length()::JM,118417
118412 :: PRED :: IF :: Z :: if (v53 < v26) goto 102::CD,118362:CD,118366:CD,118368:CD,118373:CD,118411:CD,118573:CD,118574:CD,118575:JM,118417
118417 :: EXPR :: assign :: Ljava/lang/Object :: v56 = v55 - #(1)::JM,118423
118418 :: CALL :: call :: C :: v58 = v52.charAt(v56)::JM,118423
118423 :: PRED :: IF :: Z :: if (v58 != #(61)) goto 201::CD,118424:CD,118457:CD,118469:CD,118473:CD,118502:CD,118506:CD,118507:CD,118511:CD,118568
118424 :: NORM :: compound :: Ljava/util/List :: return v3::DD,118303
118457 :: NORM :: declaration :: Lorg/biojava/nbio/structure/PDBStatus$PDBStatusXMLHandler :: v75 = new org.biojava.nbio.structure.PDBStatus$PDBStatusXMLHandler::JM,118482:JM,118469:JM,118502:JM,118473:JM,118506:JM,118478:JM,118507
118469 :: CALL :: call :: Ljava/util/List :: v80 = v75.getRecords()::JM,118482:JM,118469:JM,118502:JM,118473:JM,118506:JM,118478
118473 :: CALL :: call :: Ljava/util/Iterator :: v82 = v80.iterator()::JM,118482:JM,118502:JM,118473:JM,118506:JM,118478
118478 :: CALL :: call :: Ljava/lang/Object :: v86 = v82.next()::JM,118482:JM,118502:JM,118506:JM,118478
118483 :: CALL :: call :: Ljava/lang/Object :: v90 = v87.get(#(structureId))::JM,118483:JM,118488
118482 :: EXPR :: assign :: Ljava/lang/Object :: v87 = CHECKCAST v86::JM,118483:JM,118488
118489 :: CALL :: call :: Ljava/lang/String :: v93 = v91.toUpperCase()::JM,118489:JM,118493
118488 :: EXPR :: assign :: Ljava/lang/Object :: v91 = CHECKCAST v90::JM,118489:JM,118493
118493 :: PRED :: IF :: Z :: if (v93 == #(null)) goto 355::CD,118494:CD,118496:JM,118482:JM,118502:JM,118506:JM,118478
118494 :: EXPR :: reference :: Ljava/util/Map :: v94 = org.biojava.nbio.structure.PDBStatus.recordsCache::
118496 :: CALL :: call :: Ljava/lang/Object :: v96 = v94.put(v93, v87)::
118502 :: CALL :: call :: Z :: v84 = v82.hasNext()::JM,118482:JM,118502:JM,118506:JM,118478
118507 :: CALL :: call :: Ljava/util/List :: v98 = v75.getRecords()::JM,118507
118506 :: PRED :: IF :: Z :: if (v84 != #(0)) goto 308::CD,118478:CD,118482:CD,118483:CD,118488:CD,118489:CD,118493:CD,118502:JM,118506:JM,118507
118511 :: CALL :: call :: Z :: v112 = v3.addAll(v98)::
118519 :: CALL :: call :: Ljava/lang/String :: v107 = toString(p1 $pdbIDs )::
118533 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,118303
118536 :: CALL :: call :: Ljava/lang/String :: v131 = toString(p1 $pdbIDs )::
118550 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,118303
118553 :: CALL :: call :: Ljava/lang/String :: v120 = toString(p1 $pdbIDs )::
118567 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,118303
118568 :: NORM :: compound :: Ljava/util/List :: return v3::DD,118303
118573 :: EXPR :: assign :: null :: PHI v50 = v52, v49::DD,118574:CF,118411
118575 :: EXPR :: assign :: null :: PHI v53 = #(0), v51::DD,118411:DD,118412
118574 :: EXPR :: assign :: null :: PHI v52 = v25, v50::CF,118575:JM,118417:JM,118423:DD,118573
118673 :: EXIT :: exit :: Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::JM,111156:JM,111911
118672 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.fromString(java.lang.String)::CE,118673:CD,118676:CD,118680:CD,118685:CD,118797:CD,118798:CD,118803:CD,118808:CD,118813:CD,118822:CD,118823
118676 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $statusStr .toUpperCase()::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118680 :: CALL :: call :: Z :: v7 = v4.equalsIgnoreCase(#(OBSOLETE))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118685 :: PRED :: IF :: Z :: if (v7 == #(0)) goto 24::CD,118686:CD,118689:CD,118694:CD,118823:JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118686 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v69 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::DD,118823
118689 :: CALL :: call :: Z :: v11 = v4.equalsIgnoreCase(#(CURRENT))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118695 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::DD,118823
118694 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 40::CD,118695:CD,118698:CD,118703:CD,118823:JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118766
118698 :: CALL :: call :: Z :: v14 = v4.equalsIgnoreCase(#(AUTH))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118703 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,118704:CD,118707:CD,118712:CD,118823:JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118704 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v67 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::DD,118823
118707 :: CALL :: call :: Z :: v17 = v4.equalsIgnoreCase(#(HOLD))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118713 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v66 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::DD,118823
118712 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 72::CD,118713:CD,118716:CD,118721:CD,118823:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118716 :: CALL :: call :: Z :: v20 = v4.equalsIgnoreCase(#(HPUB))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118721 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 88::CD,118722:CD,118725:CD,118730:CD,118823:JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118685:JM,118748:JM,118703:JM,118766
118722 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v65 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::DD,118823
118725 :: CALL :: call :: Z :: v23 = v4.equalsIgnoreCase(#(POLC))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118731 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v64 = org.biojava.nbio.structure.PDBStatus$Status.POLC::DD,118823
118730 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 104::CD,118731:CD,118734:CD,118739:CD,118823:JM,118721:JM,118784:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118734 :: CALL :: call :: Z :: v26 = v4.equalsIgnoreCase(#(PROC))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118739 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 120::CD,118740:CD,118743:CD,118748:CD,118823:JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118703:JM,118766
118740 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v63 = org.biojava.nbio.structure.PDBStatus$Status.PROC::DD,118823
118743 :: CALL :: call :: Z :: v29 = v4.equalsIgnoreCase(#(REFI))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118749 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REFI::DD,118823
118748 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 136::CD,118749:CD,118752:CD,118757:CD,118823:JM,118721:JM,118784:JM,118739:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118752 :: CALL :: call :: Z :: v32 = v4.equalsIgnoreCase(#(REPL))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118757 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 152::CD,118758:CD,118761:CD,118766:CD,118823:JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703
118758 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v61 = org.biojava.nbio.structure.PDBStatus$Status.REPL::DD,118823
118761 :: CALL :: call :: Z :: v35 = v4.equalsIgnoreCase(#(WAIT))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118767 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v60 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::DD,118823
118766 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 168::CD,118767:CD,118770:CD,118775:CD,118823:JM,118721:JM,118784:JM,118739:JM,118757:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118770 :: CALL :: call :: Z :: v38 = v4.equalsIgnoreCase(#(WDRN))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118775 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 184::CD,118776:CD,118779:CD,118784:CD,118823:JM,118721:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118776 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v59 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::DD,118823
118779 :: CALL :: call :: Z :: v41 = v4.equalsIgnoreCase(#(MODEL))::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118785 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v58 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::DD,118823
118784 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 200::CD,118785:CD,118794:CD,118823
118794 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v57 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::DD,118823
118797 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v45 = new java.lang.IllegalArgumentException::
118798 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v46 = new java.lang.StringBuilder::
118803 :: CALL :: call :: Ljava/lang/StringBuilder :: v50 = v46.append(v4)::JM,118721:JM,118784:JM,118739:JM,118757:JM,118775:JM,118694:JM,118712:JM,118730:JM,118685:JM,118748:JM,118703:JM,118766
118808 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v50.append(#('.))::
118813 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
118823 :: EXPR :: assign :: null :: PHI v70 = v69, v68, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57::CF,118822
118822 :: NORM :: compound :: Lorg/biojava/nbio/structure/PDBStatus$Status :: return v70::DD,118673
118891 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::CE,118892:CD,118894:CD,118896
118892 :: EXIT :: exit :: [I :: org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status()::
118894 :: EXPR :: reference :: [I :: v2 = org.biojava.nbio.structure.PDBStatus.$SWITCH_TABLE$org$biojava$nbio$structure$PDBStatus$Status::DD,118896:DD,118897
118897 :: NORM :: compound :: [I :: return v2::DD,118892
118896 :: PRED :: IF :: Z :: if (v2 == #(null)) goto 9::CF,118897:CD,118898:CD,118901:CD,118902:CD,118903:CD,118905:CD,118914:CD,118916:CD,118925:CD,118927:CD,118936:CD,118938:CD,118947:CD,118949:CD,118958:CD,118960:CD,118969:CD,118971:CD,118980:CD,118982:CD,118991:CD,118993:CD,119002:CD,119004:CD,119013:CD,119015:CD,119024:CD,119026:CD,119035:CD,119037:CD,119048
118898 :: CALL :: call :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = values()::JM,118901:CL,124875
118901 :: EXPR :: assign :: I :: v6 = v5.length::CF,118902
118903 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v8 = org.biojava.nbio.structure.PDBStatus$Status.AUTH::
118902 :: NORM :: declaration :: [I :: v7 = new []::DD,119048
118905 :: CALL :: call :: I :: v10 = v8.ordinal()::
118909 :: EXPR :: modify :: I :: v7[v10] = #(3)::
118914 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v14 = org.biojava.nbio.structure.PDBStatus$Status.CURRENT::
118916 :: CALL :: call :: I :: v16 = v14.ordinal()::
118920 :: EXPR :: modify :: I :: v7[v16] = #(2)::
118925 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v20 = org.biojava.nbio.structure.PDBStatus$Status.HOLD::
118927 :: CALL :: call :: I :: v22 = v20.ordinal()::
118931 :: EXPR :: modify :: I :: v7[v22] = #(4)::
118936 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v26 = org.biojava.nbio.structure.PDBStatus$Status.HPUB::
118938 :: CALL :: call :: I :: v28 = v26.ordinal()::
118942 :: EXPR :: modify :: I :: v7[v28] = #(5)::
118947 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v32 = org.biojava.nbio.structure.PDBStatus$Status.MODEL::
118949 :: CALL :: call :: I :: v34 = v32.ordinal()::
118953 :: EXPR :: modify :: I :: v7[v34] = #(12)::
118958 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v38 = org.biojava.nbio.structure.PDBStatus$Status.OBSOLETE::
118960 :: CALL :: call :: I :: v40 = v38.ordinal()::
118964 :: EXPR :: modify :: I :: v7[v40] = #(1)::
118969 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v44 = org.biojava.nbio.structure.PDBStatus$Status.POLC::
118971 :: CALL :: call :: I :: v46 = v44.ordinal()::
118975 :: EXPR :: modify :: I :: v7[v46] = #(6)::
118980 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v50 = org.biojava.nbio.structure.PDBStatus$Status.PROC::
118982 :: CALL :: call :: I :: v52 = v50.ordinal()::
118986 :: EXPR :: modify :: I :: v7[v52] = #(7)::
118991 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v56 = org.biojava.nbio.structure.PDBStatus$Status.REFI::
118993 :: CALL :: call :: I :: v58 = v56.ordinal()::
118997 :: EXPR :: modify :: I :: v7[v58] = #(8)::
119002 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v62 = org.biojava.nbio.structure.PDBStatus$Status.REPL::
119004 :: CALL :: call :: I :: v64 = v62.ordinal()::
119008 :: EXPR :: modify :: I :: v7[v64] = #(9)::
119013 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v68 = org.biojava.nbio.structure.PDBStatus$Status.UNKNOWN::
119015 :: CALL :: call :: I :: v70 = v68.ordinal()::
119019 :: EXPR :: modify :: I :: v7[v70] = #(13)::
119024 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v74 = org.biojava.nbio.structure.PDBStatus$Status.WAIT::
119026 :: CALL :: call :: I :: v76 = v74.ordinal()::
119030 :: EXPR :: modify :: I :: v7[v76] = #(10)::
119035 :: EXPR :: reference :: Lorg/biojava/nbio/structure/PDBStatus$Status :: v80 = org.biojava.nbio.structure.PDBStatus$Status.WDRN::
119037 :: CALL :: call :: I :: v82 = v80.ordinal()::
119041 :: EXPR :: modify :: I :: v7[v82] = #(11)::
119048 :: NORM :: compound :: [I :: return v7::DD,118892
119163 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.mergeReversed(java.util.List,java.util.List)::CD,119168:CD,119172:JM,119217:JM,119265:JM,119203:JM,119255:JM,119223:JM,119240:JM,119178:JM,119274:JM,119197:JM,119246
119168 :: CALL :: call :: Z :: v5 = p2 $other .isEmpty()::JM,119217:JM,119265:JM,119203:JM,119172:JM,119223:JM,119255:JM,119240:JM,119274:JM,119178:JM,119197:JM,119246
119172 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 11::CD,119174:CD,119178:JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246
119174 :: CALL :: call :: Z :: v8 = p1 $merged .isEmpty()::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119178:JM,119274:JM,119197:JM,119246
119179 :: CALL :: call :: Z :: v51 = p1 $merged .addAll(p2 $other )::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119178:JM,119274:JM,119197:JM,119246
119178 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 29::CD,119179:CD,119185:CD,119189:CD,119193:CD,119197:CD,119251:CD,119255:CD,119278:JM,119217:JM,119265:JM,119203:JM,119172:JM,119223:JM,119240:JM,119178:JM,119274:JM,119246
119185 :: CALL :: call :: Ljava/util/ListIterator :: v10 = p1 $merged .listIterator()::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119178:JM,119274:JM,119197:JM,119246
119189 :: CALL :: call :: Ljava/util/ListIterator :: v12 = p2 $other .listIterator()::JM,119217:JM,119265:JM,119203:JM,119172:JM,119223:JM,119255:JM,119240:JM,119274:JM,119178:JM,119197:JM,119246
119193 :: CALL :: call :: Ljava/lang/Object :: v14 = v12.next()::JM,119217:JM,119265:JM,119203:JM,119223:JM,119255:JM,119240:JM,119274:JM,119197:JM,119246
119197 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,119278
119199 :: CALL :: call :: Ljava/lang/Object :: v19 = v10.next()::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246
119203 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::JM,119229:JM,119235:JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246
119204 :: CALL :: call :: Ljava/lang/Object :: v22 = v10.previous()::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246
119209 :: CALL :: call :: V :: v10.add(v31)::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246
119213 :: CALL :: call :: Z :: v27 = v12.hasNext()::JM,119217:JM,119265:JM,119203:JM,119223:JM,119255:JM,119240:JM,119274:JM,119197:JM,119246
119217 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 96::CD,119219:CD,119223:CD,119224:CD,119229:CD,119276:JM,119217:JM,119265:JM,119203:JM,119255:JM,119240:JM,119274:JM,119197:JM,119246
119219 :: CALL :: call :: Ljava/lang/Object :: v29 = v12.next()::JM,119217:JM,119265:JM,119203:JM,119223:JM,119255:JM,119240:JM,119274:JM,119197:JM,119246
119223 :: EXPR :: assign :: Ljava/lang/Object :: v30 = CHECKCAST v29::DD,119276
119224 :: CALL :: call :: I :: v24 = v31.compareTo(v20)::JM,119229
119229 :: PRED :: IF :: Z :: if (v24 > #(0)) goto 80::CD,119209:CD,119213:CD,119217:CD,119230:CD,119235:CD,119277:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246
119230 :: CALL :: call :: Z :: v33 = v31.equals(v20)::JM,119235
119235 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 148::CF,119277:CD,119236:CD,119240:CD,119247:CD,119251:CD,119255:CD,119278:JM,119217:JM,119265:JM,119203:JM,119223:JM,119274:JM,119197:JM,119246
119236 :: CALL :: call :: Z :: v35 = v12.hasNext()::JM,119217:JM,119265:JM,119203:JM,119223:JM,119255:JM,119240:JM,119274:JM,119197:JM,119246
119240 :: PRED :: IF :: Z :: if (v35 != #(0)) goto 137::CD,119242:CD,119246:CD,119247:CD,119251:CD,119255:CD,119277:CD,119278:JM,119217:JM,119265:JM,119203:JM,119223:JM,119240:JM,119274:JM,119197
119242 :: CALL :: call :: Ljava/lang/Object :: v37 = v12.next()::JM,119217:JM,119265:JM,119203:JM,119223:JM,119255:JM,119240:JM,119274:JM,119197:JM,119246
119247 :: CALL :: call :: Ljava/lang/Object :: v41 = v10.next()::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246
119246 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::DD,119277
119251 :: CALL :: call :: Z :: v17 = v10.hasNext()::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246
119255 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 57::CD,119199:CD,119203:CD,119204:CD,119224:CD,119229:CD,119256:CD,119270:CD,119274:CD,119276:JM,119217:JM,119265:JM,119172:JM,119255:JM,119223:JM,119240:JM,119197:JM,119246
119256 :: CALL :: call :: V :: v10.add(v42)::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246
119261 :: CALL :: call :: Ljava/lang/Object :: v47 = v12.next()::JM,119217:JM,119265:JM,119203:JM,119223:JM,119255:JM,119240:JM,119274:JM,119197:JM,119246
119265 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246
119266 :: CALL :: call :: V :: v10.add(v48)::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246
119270 :: CALL :: call :: Z :: v45 = v12.hasNext()::JM,119217:JM,119265:JM,119203:JM,119223:JM,119255:JM,119240:JM,119274:JM,119197:JM,119246
119274 :: PRED :: IF :: Z :: if (v45 != #(0)) goto 176::CD,119261:CD,119265:CD,119266:CD,119270:JM,119217:JM,119203:JM,119223:JM,119255:JM,119240:JM,119274:JM,119197:JM,119246
119277 :: EXPR :: assign :: null :: PHI v39 = v31, v38::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246:DD,119278
119276 :: EXPR :: assign :: null :: PHI v31 = v42, v30::JM,119217:JM,119265:JM,119203:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246:JM,119229:JM,119235:DD,119277
119278 :: EXPR :: assign :: null :: PHI v42 = v15, v39::JM,119217:JM,119265:JM,119203:JM,119172:JM,119255:JM,119223:JM,119240:JM,119274:JM,119197:JM,119246:DD,119276
119487 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getX()::CE,119488:CD,119498
119488 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getX()::JM,112048
119491 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
119494 :: EXPR :: reference :: D :: v5 = v3[#(0)]::DD,119498
119498 :: NORM :: compound :: D :: return v5::CF,119488
119501 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getY()::CE,119502:CD,119512
119502 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getY()::JM,112057
119505 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
119508 :: EXPR :: reference :: D :: v5 = v3[#(1)]::DD,119512
119512 :: NORM :: compound :: D :: return v5::CF,119502
119515 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.getZ()::CE,119516:CD,119526
119516 :: EXIT :: exit :: D :: org.biojava.nbio.structure.AtomImpl.getZ()::JM,112066
119519 :: EXPR :: reference :: [D :: v3 = p0 $this .coords::
119522 :: EXPR :: reference :: D :: v5 = v3[#(2)]::DD,119526
119526 :: NORM :: compound :: D :: return v5::CF,119516
119529 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.addSelfToAtoms()::CD,119536:CD,119540:CD,119553:CD,119581:CD,119585:CD,119586:CD,119602:CD,119603
119536 :: CALL :: call :: Ljava/util/List :: v5 = v3.getBonds()::JM,119602:JM,119540:CL,112127
119541 :: NORM :: declaration :: Ljava/util/ArrayList :: v7 = new java.util.ArrayList::DD,119602
119540 :: PRED :: IF :: Z :: if (v5 != #(null)) goto 36::CF,119602:CF,119541:CD,119549
119549 :: CALL :: call :: V :: v10.setBonds(v7)::CL,125135
119553 :: CALL :: call :: Ljava/util/Iterator :: v15 = v12.iterator()::JM,119585
119558 :: CALL :: call :: Ljava/lang/Object :: v19 = v15.next()::JM,119585
119566 :: CALL :: call :: Lorg/biojava/nbio/structure/Atom :: v23 = v20.getOther(v21)::JM,119574:JM,119579:CL,125146
119571 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v24 = p0 $this .atomB::JM,119574:JM,119579
119574 :: CALL :: call :: Z :: v26 = v23.equals(v24)::JM,119574:JM,119579
119579 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 84::CD,119581:CD,119585:CD,119603
119581 :: CALL :: call :: Z :: v17 = v15.hasNext()::JM,119585
119585 :: PRED :: IF :: Z :: if (v17 != #(0)) goto 48::CF,119603:CD,119558:CD,119566:CD,119574:CD,119579:JM,119585
119586 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 116::CD,119590:CD,119597
119590 :: CALL :: call :: V :: v29.addBond(p0 $this )::CL,125185
119597 :: CALL :: call :: V :: v31.addBond(p0 $this )::CL,125185
119603 :: EXPR :: assign :: null :: PHI v28 = #(1), #(0)::DD,119586
119602 :: EXPR :: assign :: null :: PHI v12 = v5, v7::JM,119585
119631 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::CE,119632:CD,119635:CD,119639:CD,119644:CD,119648
119632 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.fileExists(java.lang.String)::JM,112426:JM,112434
119635 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,120052
119639 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
119644 :: CALL :: call :: Z :: v8 = v5.exists()::JM,119648
119648 :: NORM :: compound :: Z :: return v8::DD,119632
119655 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.checkDoFirstInstall()::CD,119662
119659 :: EXPR :: reference :: Z :: v3 = p0 $this .downloadAll::DD,119662
119662 :: PRED :: IF :: Z :: if (v3 != #(0)) goto 8::CF,119664:CD,119665:CD,119672:CD,119678:CD,119682
119665 :: EXPR :: reference :: Ljava/io/File :: v6 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
119664 :: NORM :: declaration :: Ljava/io/File :: v5 = new java.io.File::
119672 :: NORM :: declaration :: Ljava/io/File :: v9 = new java.io.File::
119678 :: CALL :: call :: Z :: v13 = v9.exists()::JM,119682
119683 :: CALL :: call :: V :: p0 $this .downloadAllDefinitions()::CL,125219
119682 :: PRED :: IF :: Z :: if (v13 != #(0)) goto 46::CD,119683:CD,119692:CD,119697:CD,119698
119692 :: CALL :: call :: [Ljava/lang/String :: v17 = v5.list(v14)::JM,119697
119697 :: EXPR :: assign :: I :: v18 = v17.length::DD,119698
119699 :: CALL :: call :: V :: p0 $this .split()::CL,125492
119698 :: PRED :: IF :: Z :: if (v18 >= #(500)) goto 99::CD,119699
119745 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::JM,112566
119744 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadChemCompRecord(java.lang.String)::CE,119745:CD,119748:CD,119752:CD,119757:CD,119762:CD,119766:CD,119783:CD,119784:CD,119789:CD,119794:CD,119799:CD,119805:CD,119810:CD,119815:CD,119823:CD,119828:CD,119832:CD,119847:CD,119848:CD,119866:CD,119870:CD,119871:CD,119874:CD,119880:CD,119884:CD,119897:CD,119931:CD,119934:CD,119939:CD,119943:CD,119948:CD,119953:CD,119958:CD,119963:CD,119967:CD,119972:CD,119980:CD,119984:CD,119989:CD,119994
119748 :: CALL :: call :: Ljava/lang/String :: v4 = getLocalFileName(p1 $recordName )::CL,120052
119752 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
119757 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $recordName )::
119762 :: CALL :: call :: Ljava/lang/String :: v11 = v9.toString()::
119766 :: CALL :: call :: Ljava/io/File :: v14 = createTempFile(v11, #(cif))::
119783 :: NORM :: compound :: Z :: return #(0)::DD,119745
119784 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
119789 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(p1 $recordName )::
119794 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(#(.cif))::
119799 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
119805 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v34 = new java.lang.StringBuilder::
119810 :: CALL :: call :: Ljava/lang/StringBuilder :: v38 = v34.append(v32)::
119815 :: CALL :: call :: Ljava/lang/String :: v40 = v38.toString()::
119823 :: NORM :: declaration :: Ljava/net/URL :: v43 = new java.net.URL::DD,119994
119828 :: CALL :: call :: Ljava/net/HttpURLConnection :: v46 = openHttpURLConnection(v43)::CL,125720
119832 :: NORM :: declaration :: Ljava/io/PrintWriter :: v47 = new java.io.PrintWriter::DD,119884
119847 :: NORM :: declaration :: Ljava/io/BufferedReader :: v53 = new java.io.BufferedReader::JM,119870:DD,119874:CF,119848
119848 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v54 = new java.io.InputStreamReader::
119862 :: CALL :: call :: V :: v47.println(v60)::
119866 :: CALL :: call :: Ljava/lang/String :: v60 = v53.readLine()::JM,119870
119871 :: CALL :: call :: V :: v47.flush()::
119870 :: PRED :: IF :: Z :: if (v60 != #(null)) goto 177::CD,119862:CD,119866
119875 :: CALL :: call :: V :: v53.close()::
119874 :: PRED :: IF :: Z :: if (v53 == #(null)) goto 226::CD,119875:CF,119884
119880 :: CALL :: call :: V :: v53.close()::
119885 :: CALL :: call :: V :: v47.close()::
119884 :: PRED :: IF :: Z :: if (v47 == #(null)) goto 310::CD,119885
119897 :: CALL :: call :: V :: v47.close()::
119931 :: NORM :: compound :: Z :: return #(1)::DD,119745
119934 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v90 = new java.lang.StringBuilder::
119939 :: CALL :: call :: Ljava/lang/String :: v94 = v88.toString()::
119943 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v90.append(v94)::
119948 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( OR store locally to ))::
119953 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v4)::
119958 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( Error =))::
119963 :: CALL :: call :: Ljava/lang/String :: v106 = v87.getMessage()::
119967 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v104.append(v106)::
119972 :: CALL :: call :: Ljava/lang/String :: v110 = v108.toString()::
119980 :: CALL :: call :: Z :: v113 = v14.delete()::
119984 :: NORM :: compound :: Z :: return #(0)::DD,119745
119989 :: EXPR :: assign :: Ljava/lang/Exception :: v87 = catch <exc>::
119994 :: EXPR :: assign :: null :: PHI v88 = #(null), v43, v43, v43, v43, v43, v43::
120053 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::
120052 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.getLocalFileName(java.lang.String)::CE,120053:CD,120056:CD,120058:CD,120063:CD,120078:CD,120080:CD,120081:CD,120088:CD,120092:CD,120125:CD,120126:CD,120127:CD,120135:CD,120140:CD,120149:CD,120153
120056 :: EXPR :: reference :: Ljava/util/List :: v3 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.protectedIDs::JM,120063
120058 :: CALL :: call :: Z :: v5 = v3.contains(p1 $recordName )::JM,120063
120063 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 30::CF,120064:CD,120069:CD,120074
120064 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v7 = new java.lang.StringBuilder::
120069 :: CALL :: call :: Ljava/lang/StringBuilder :: v11 = v7.append(p1 $recordName )::JM,120063
120074 :: CALL :: call :: Ljava/lang/String :: v13 = v11.toString()::
120078 :: CALL :: call :: V :: initPath()::CL,36619
120081 :: EXPR :: reference :: Ljava/io/File :: v17 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
120080 :: NORM :: declaration :: Ljava/io/File :: v16 = new java.io.File::
120088 :: CALL :: call :: Z :: v21 = v16.exists()::JM,120092
120092 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 99::CF,120125:CD,120095:CD,120100:CD,120105:CD,120113
120095 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v23 = new java.lang.StringBuilder::
120100 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v23.append(v16)::
120105 :: CALL :: call :: Ljava/lang/String :: v29 = v27.toString()::
120113 :: CALL :: call :: Z :: v32 = v16.mkdir()::
120125 :: NORM :: declaration :: Ljava/io/File :: v36 = new java.io.File::JM,120153:CF,120126
120127 :: CALL :: call :: Ljava/lang/String :: v39 = valueOf(v14)::
120126 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v37 = new java.lang.StringBuilder::
120135 :: CALL :: call :: Ljava/lang/StringBuilder :: v43 = v37.append(#(.cif.gz))::
120140 :: CALL :: call :: Ljava/lang/String :: v45 = v43.toString()::
120149 :: CALL :: call :: Ljava/lang/String :: v48 = v36.toString()::JM,120153
120153 :: NORM :: compound :: Ljava/lang/String :: return v48::DD,120053
120192 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: v4 = new org.biojava.nbio.structure.io.mmcif.ChemicalComponentDictionary::DD,120196
120196 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/ChemicalComponentDictionary :: p0 $this .dictionary = v4::
120229 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::CE,120230:CD,120234:CD,120238:CD,120246:CD,120251:CD,120256:CD,120261:CD,120265:CD,120272:CD,120277:CD,120282:CD,120287:CD,120295:CD,120388:CD,120391:CD,120395
120230 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.ReducedChemCompProvider.getChemComp(java.lang.String)::JM,112560
120234 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $recordName .toUpperCase()::
120238 :: CALL :: call :: Ljava/lang/String :: v7 = v5.trim()::
120246 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v11 = new java.lang.StringBuilder::
120251 :: CALL :: call :: Ljava/lang/StringBuilder :: v15 = v11.append(v7)::
120256 :: CALL :: call :: Ljava/lang/StringBuilder :: v18 = v15.append(#(.cif.gz))::
120261 :: CALL :: call :: Ljava/lang/String :: v20 = v18.toString()::
120265 :: CALL :: call :: Ljava/io/InputStream :: v22 = v10.getResourceAsStream(v20)::JM,120295
120272 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v24 = new java.lang.StringBuilder::
120277 :: CALL :: call :: Ljava/lang/StringBuilder :: v28 = v24.append(v7)::
120282 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v28.append(#(.cif.gz))::
120287 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
120295 :: PRED :: IF :: Z :: if (v22 != #(null)) goto 112::CD,120303:CD,120306:CD,120314:JM,46616:JM,120192:JM,125796:JM,125782:JM,125789:CD,120323:CD,120327:CD,120328:CD,120342:CD,120350:CD,120359
120303 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v55 = getEmptyChemComp()::JM,120314:CL,125847
120306 :: CALL :: call :: V :: v55.setId(v7)::CL,125886
120314 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v55::DD,120230
120323 :: CALL :: call :: V :: v34.addMMcifConsumer(v36)::CL,46674
120327 :: NORM :: declaration :: Ljava/io/BufferedReader :: v39 = new java.io.BufferedReader::CF,120328
120328 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v40 = new java.io.InputStreamReader::
120342 :: CALL :: call :: V :: v34.parse(v39)::CL,46691
120350 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v49 = v47.getChemComp(v7)::JM,120359:CL,90224
120359 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v49::DD,120230
120388 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v73 = getEmptyChemComp()::JM,120395:CL,125847
120391 :: CALL :: call :: V :: v73.setId(v7)::CL,125886
120395 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v73::DD,120230
120449 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.parseSubExpression(java.lang.String)::CD,120453:CD,120459:CD,120465:CD,120470:CD,120475:CD,120476:CD,120481:CD,120486:CD,120495:CD,120499:CD,120530:CD,120534:JM,120508
120453 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $expression .replace(#((), #())::JM,120465:JM,120453:JM,120470:JM,120534:JM,120459:JM,120508
120459 :: CALL :: call :: Ljava/lang/String :: v9 = v6.replace(#()), #())::JM,120465:JM,120470:JM,120534:JM,120459:JM,120508
120465 :: CALL :: call :: [Ljava/lang/String :: v13 = v9.split(#(,))::JM,120465:JM,120470:JM,120534:JM,120508
120470 :: CALL :: call :: Ljava/util/List :: v15 = asList(v13)::JM,120470:JM,120534:JM,120508
120475 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v17 = new java.lang.IllegalArgumentException::
120476 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v18 = new java.lang.StringBuilder::
120481 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v18.append(p1 $expression )::JM,120465:JM,120453:JM,120470:JM,120534:JM,120459:JM,120508
120486 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,120465:JM,120470:JM,120534:JM,120459:JM,120508
120495 :: NORM :: declaration :: Ljava/util/ArrayList :: v26 = new java.util.ArrayList::
120499 :: CALL :: call :: Ljava/util/Iterator :: v29 = v15.iterator()::JM,120534:JM,120508
120504 :: CALL :: call :: Ljava/lang/Object :: v34 = v29.next()::JM,120534:JM,120508
120509 :: CALL :: call :: Z :: v38 = v35.contains(#(-))::JM,120514
120508 :: EXPR :: assign :: Ljava/lang/Object :: v35 = CHECKCAST v34::JM,120514
120515 :: CALL :: call :: Ljava/util/List :: v40 = expandRange(v35)::CL,125897
120514 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 117::CD,120515:CD,120519:CD,120525
120519 :: CALL :: call :: Z :: v42 = v26.addAll(v40)::
120525 :: CALL :: call :: Z :: v44 = v26.add(v35)::
120530 :: CALL :: call :: Z :: v31 = v29.hasNext()::JM,120534:JM,120508
120534 :: PRED :: IF :: Z :: if (v31 != #(0)) goto 79::CD,120504:CD,120508:CD,120509:CD,120514:CD,120530:JM,120534
120603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.CartesianProduct.getOrderedPairs()::CD,120607:CD,120611:CD,120618:CD,120622:CD,120630:CD,120669:CD,120673
120607 :: NORM :: declaration :: Ljava/util/ArrayList :: v3 = new java.util.ArrayList::
120608 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .list1::JM,120622
120611 :: CALL :: call :: I :: v6 = v4.size()::JM,120622
120615 :: EXPR :: reference :: Ljava/util/List :: v7 = p0 $this .list2::JM,120622
120618 :: CALL :: call :: I :: v9 = v7.size()::JM,120622
120622 :: EXPR :: assign :: Ljava/lang/Object :: v10 = v6 * v9::
120627 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .list1::JM,120673
120630 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,120673
120635 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,120673
120640 :: EXPR :: reference :: Ljava/util/List :: v21 = p0 $this .list2::JM,120668
120643 :: CALL :: call :: Ljava/util/Iterator :: v23 = v21.iterator()::JM,120668
120648 :: CALL :: call :: Ljava/lang/Object :: v27 = v23.next()::JM,120668
120653 :: NORM :: declaration :: Lorg/biojava/nbio/structure/quaternary/OrderedPair :: v29 = new org.biojava.nbio.structure.quaternary.OrderedPair::
120659 :: CALL :: call :: Z :: v32 = v3.add(v29)::
120664 :: CALL :: call :: Z :: v25 = v23.hasNext()::JM,120668
120669 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,120673
120668 :: PRED :: IF :: Z :: if (v25 != #(0)) goto 66::CD,120648:CD,120653:JM,126002:JM,126005:CD,120659:CD,120664:JM,120668:JM,120673
120673 :: PRED :: IF :: Z :: if (v16 != #(0)) goto 41::CD,120635:CD,120643:CD,120664:CD,120668:CD,120669:JM,120673
120697 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getMInv()::CD,120704
120701 :: EXPR :: reference :: Ljavax/vecmath/Matrix3d :: v3 = p0 $this .Minv::DD,120704
120704 :: PRED :: IF :: Z :: if (v3 == #(null)) goto 13::CD,120709:CD,120763
120709 :: NORM :: declaration :: Ljavax/vecmath/Matrix3d :: v5 = new javax.vecmath.Matrix3d::DD,120780
120763 :: CALL :: call :: D :: v34 = p0 $this .getCstar()::CL,126063
120780 :: EXPR :: modify :: Ljavax/vecmath/Matrix3d :: p0 $this .Minv = v5::
121004 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Site.remark800toPDB(java.lang.StringBuffer)::CD,121025:CD,121031:CD,121052:CD,121058:CD,121079:CD,121085
121025 :: CALL :: call :: Ljava/lang/String :: v13 = format(v4, #(REMARK 800 SITE_IDENT...), v7)::
121031 :: CALL :: call :: Ljava/lang/StringBuffer :: v15 = p1 $stringBuffer .append(v13)::
121052 :: CALL :: call :: Ljava/lang/String :: v22 = format(v16, #(REMARK 800 EVIDENCE_C...), v18)::
121058 :: CALL :: call :: Ljava/lang/StringBuffer :: v24 = p1 $stringBuffer .append(v22)::
121079 :: CALL :: call :: Ljava/lang/String :: v31 = format(v25, #(REMARK 800 SITE_DESCR...), v27)::
121085 :: CALL :: call :: Ljava/lang/StringBuffer :: v33 = p1 $stringBuffer .append(v31)::
121121 :: EXIT :: exit :: Lorg/biojava/nbio/structure/jama/Matrix :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::JM,113180:JM,113335
121120 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.identity(int,int)::CE,121121:CD,121125:JM,126305:JM,126308:JM,126302:CD,121131:CD,121150:CD,121151:CD,121155:JM,121148
121125 :: NORM :: declaration :: Lorg/biojava/nbio/structure/jama/Matrix :: v4 = new org.biojava.nbio.structure.jama.Matrix::DD,121151
121131 :: CALL :: call :: [[D :: v7 = v4.getArray()::CL,121482
121137 :: EXPR :: reference :: Ljava/lang/Object :: v9 = v7[v18]::
121141 :: PRED :: IF :: Z :: if (v18 != v15) goto 45::CD,121152
121143 :: EXPR :: modify :: D :: v9[v15] = v12::
121147 :: EXPR :: assign :: Ljava/lang/Object :: v14 = v15 + #(1)::DD,121154:CF,121153
121149 :: EXPR :: assign :: Ljava/lang/Object :: v16 = v18 + #(1)::DD,121155
121148 :: PRED :: IF :: Z :: if (v15 < p2 $n ) goto 30::CD,121141:CD,121147:CD,121152:CD,121153:CD,121154:CF,121149
121151 :: NORM :: compound :: Lorg/biojava/nbio/structure/jama/Matrix :: return v4::DD,121121
121150 :: PRED :: IF :: Z :: if (v17 < p1 $m ) goto 24::CD,121148:CD,121149:CD,121153:CD,121154:CD,121155:CF,121151
121153 :: EXPR :: assign :: null :: PHI v18 = v17, v18::CF,121154:DD,121141:DD,121149:DD,121153
121152 :: EXPR :: assign :: null :: PHI v12 = #(1.0 d), #(0.0 d)::DD,121143
121155 :: EXPR :: assign :: null :: PHI v17 = #(0), v16::DD,121150:DD,121153
121154 :: EXPR :: assign :: null :: PHI v15 = #(0), v14::DD,121141:DD,121147:DD,121148
121183 :: EXIT :: exit :: I :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::JM,113244
121182 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.PDBBioAssemblyParser.getSizefromString(java.lang.String)::CE,121183:CD,121186:CD,121190:CD,121195:CD,121346:CD,121347
121186 :: CALL :: call :: Ljava/lang/String :: v5 = p1 $oligomer .toLowerCase()::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121190 :: CALL :: call :: Z :: v8 = v5.equals(#(monomeric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121195 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 26::CD,121197:CD,121202:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121197 :: CALL :: call :: Z :: v11 = v5.equals(#(dimeric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121202 :: PRED :: IF :: Z :: if (v11 == #(0)) goto 41::CD,121204:CD,121209:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121272:JM,121307:JM,121244:JM,121279
121204 :: CALL :: call :: Z :: v14 = v5.equals(#(trimeric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121209 :: PRED :: IF :: Z :: if (v14 == #(0)) goto 56::CD,121211:CD,121216:CD,121347:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121211 :: CALL :: call :: Z :: v17 = v5.equals(#(tetrameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121216 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 71::CD,121218:CD,121223:CD,121347:JM,121216:JM,121251:JM,121314:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121218 :: CALL :: call :: Z :: v20 = v5.equals(#(pentameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121223 :: PRED :: IF :: Z :: if (v20 == #(0)) goto 86::CD,121225:CD,121230:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121225 :: CALL :: call :: Z :: v23 = v5.equals(#(hexameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121230 :: PRED :: IF :: Z :: if (v23 == #(0)) goto 102::CD,121232:CD,121237:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121232 :: CALL :: call :: Z :: v26 = v5.equals(#(heptameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121237 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 118::CD,121239:CD,121244:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121279
121239 :: CALL :: call :: Z :: v29 = v5.equals(#(octameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121244 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 134::CD,121246:CD,121251:CD,121347:JM,121216:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121246 :: CALL :: call :: Z :: v32 = v5.equals(#(nonameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121251 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 150::CD,121253:CD,121258:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121253 :: CALL :: call :: Z :: v35 = v5.equals(#(decameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121258 :: PRED :: IF :: Z :: if (v35 == #(0)) goto 166::CD,121260:CD,121265:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121260 :: CALL :: call :: Z :: v38 = v5.equals(#(undecameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121265 :: PRED :: IF :: Z :: if (v38 == #(0)) goto 182::CD,121267:CD,121272:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121307:JM,121244:JM,121279
121267 :: CALL :: call :: Z :: v41 = v5.equals(#(dodecameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121272 :: PRED :: IF :: Z :: if (v41 == #(0)) goto 198::CD,121274:CD,121279:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244
121274 :: CALL :: call :: Z :: v44 = v5.equals(#(tridecameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121279 :: PRED :: IF :: Z :: if (v44 == #(0)) goto 214::CD,121281:CD,121286:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121281 :: CALL :: call :: Z :: v47 = v5.equals(#(tetradecameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121286 :: PRED :: IF :: Z :: if (v47 == #(0)) goto 230::CD,121288:CD,121293:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121288 :: CALL :: call :: Z :: v50 = v5.equals(#(pentadecameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121293 :: PRED :: IF :: Z :: if (v50 == #(0)) goto 246::CD,121295:CD,121300:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121295 :: CALL :: call :: Z :: v53 = v5.equals(#(hexadecameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121300 :: PRED :: IF :: Z :: if (v53 == #(0)) goto 262::CD,121302:CD,121307:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121244:JM,121279
121302 :: CALL :: call :: Z :: v56 = v5.equals(#(heptadecameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121307 :: PRED :: IF :: Z :: if (v56 == #(0)) goto 278::CD,121309:CD,121314:CD,121347:JM,121216:JM,121251:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121309 :: CALL :: call :: Z :: v59 = v5.equals(#(octadecameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121314 :: PRED :: IF :: Z :: if (v59 == #(0)) goto 294::CD,121316:CD,121321:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121316 :: CALL :: call :: Z :: v62 = v5.equals(#(nonadecameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121321 :: PRED :: IF :: Z :: if (v62 == #(0)) goto 310::CD,121323:CD,121328:CD,121347:JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121323 :: CALL :: call :: Z :: v65 = v5.equals(#(eicosameric))::JM,121216:JM,121251:JM,121314:JM,121223:JM,121286:JM,121321:JM,121195:JM,121258:JM,121293:JM,121230:JM,121265:JM,121328:JM,121202:JM,121237:JM,121300:JM,121209:JM,121272:JM,121307:JM,121244:JM,121279
121328 :: PRED :: IF :: Z :: if (v65 == #(0)) goto 326::CD,121330:CD,121335:CD,121347
121330 :: CALL :: call :: Z :: v68 = v5.matches(#((\d+).*))::JM,121335
121335 :: PRED :: IF :: Z :: if (v68 == #(0)) goto 347::CF,121347:CD,121336:CD,121342
121336 :: CALL :: call :: Ljava/lang/String :: v71 = v5.replaceAll(#((\d+).*), #($1))::JM,121347
121342 :: CALL :: call :: I :: v73 = parseInt(v71)::JM,121347
121347 :: EXPR :: assign :: null :: PHI v94 = #(1), #(2), #(3), #(4), #(5), #(6), #(7), #(8), #(9), #(10), #(11), #(12), #(13), #(14), #(15), #(16), #(17), #(18), #(19), #(20), #(0), v73::CF,121346
121346 :: NORM :: compound :: I :: return v94::DD,121183
121459 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.set(int,int,double)::JM,121473
121466 :: EXPR :: reference :: [[D :: v6 = p0 $this .A::
121469 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[p1 $i ]::
121473 :: EXPR :: modify :: D :: v7[p2 $j ] = p3 $s ::
121483 :: EXIT :: exit :: [[D :: org.biojava.nbio.structure.jama.Matrix.getArray()::
121482 :: ENTR :: entry :: null :: org.biojava.nbio.structure.jama.Matrix.getArray()::CE,121483:CD,121489
121486 :: EXPR :: reference :: [[D :: v3 = p0 $this .A::DD,121489
121489 :: NORM :: compound :: [[D :: return v3::CF,121483
121535 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynonyms(java.util.List)::JM,121540
121540 :: EXPR :: modify :: Ljava/util/List :: p0 $this .synonyms = p1 $synonyms ::
121546 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEcNums(java.util.List)::JM,121551
121551 :: EXPR :: modify :: Ljava/util/List :: p0 $this .ecNums = p1 $ecNums ::
121557 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setFragment(java.lang.String)::JM,121562
121562 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .fragment = p1 $fragment ::
121568 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setEngineered(java.lang.String)::JM,121573
121573 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .engineered = p1 $engineered ::
121579 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setMutation(java.lang.String)::JM,121584
121584 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .mutation = p1 $mutation ::
121590 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setBiologicalUnit(java.lang.String)::JM,121595
121595 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .biologicalUnit = p1 $biologicalUnit ::
121601 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setDetails(java.lang.String)::JM,121606
121606 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .details = p1 $details ::
121612 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSynthetic(java.lang.String)::JM,121617
121617 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .synthetic = p1 $synthetic ::
121623 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setStrain(java.lang.String)::JM,121628
121628 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .strain = p1 $strain ::
121634 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setVariant(java.lang.String)::JM,121639
121639 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .variant = p1 $variant ::
121645 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellLine(java.lang.String)::JM,121650
121650 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellLine = p1 $cellLine ::
121656 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrgan(java.lang.String)::JM,121661
121661 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organ = p1 $organ ::
121667 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setTissue(java.lang.String)::JM,121672
121672 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .tissue = p1 $tissue ::
121678 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setOrganelle(java.lang.String)::JM,121683
121683 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .organelle = p1 $organelle ::
121689 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setSecretion(java.lang.String)::JM,121694
121694 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .secretion = p1 $secretion ::
121700 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setGene(java.lang.String)::JM,121705
121705 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .gene = p1 $gene ::
121711 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setCellularLocation(java.lang.String)::JM,121716
121716 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .cellularLocation = p1 $cellularLocation ::
121722 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemStrain(java.lang.String)::JM,121727
121727 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemStrain = p1 $expressionSystemStrain ::
121733 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVariant(java.lang.String)::JM,121738
121738 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVariant = p1 $expressionSystemVariant ::
121744 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellLine(java.lang.String)::JM,121749
121749 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellLine = p1 $expressionSystemCellLine ::
121755 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemAtccNumber(java.lang.String)::JM,121760
121760 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemAtccNumber = p1 $expressionSystemAtccNumber ::
121766 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrgan(java.lang.String)::JM,121771
121771 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrgan = p1 $expressionSystemOrgan ::
121777 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemTissue(java.lang.String)::JM,121782
121782 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemTissue = p1 $expressionSystemTissue ::
121788 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCell(java.lang.String)::JM,121793
121793 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCell = p1 $expressionSystemCell ::
121799 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOrganelle(java.lang.String)::JM,121804
121804 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOrganelle = p1 $expressionSystemOrganelle ::
121810 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemCellularLocation(java.lang.String)::JM,121815
121815 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemCellularLocation = p1 $expressionSystemCellularLocation ::
121821 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVectorType(java.lang.String)::JM,121826
121826 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVectorType = p1 $expressionSystemVectorType ::
121832 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemVector(java.lang.String)::JM,121837
121837 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemVector = p1 $expressionSystemVector ::
121843 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemPlasmid(java.lang.String)::JM,121848
121848 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemPlasmid = p1 $expressionSystemPlasmid ::
121854 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemGene(java.lang.String)::JM,121859
121859 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemGene = p1 $expressionSystemGene ::
121865 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Compound.setExpressionSystemOtherDetails(java.lang.String)::JM,121870
121870 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .expressionSystemOtherDetails = p1 $expressionSystemOtherDetails ::
121883 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = #()::
121886 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = #()::
121895 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setSurname(java.lang.String)::JM,121900
121900 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .surname = p1 $surname ::
121907 :: EXIT :: exit :: Ljava/lang/String :: org.biojava.nbio.structure.Author.getSurname()::
121906 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.getSurname()::CE,121907:CD,121913
121910 :: EXPR :: reference :: Ljava/lang/String :: v3 = p0 $this .surname::DD,121913
121913 :: NORM :: compound :: Ljava/lang/String :: return v3::CF,121907
121915 :: ENTR :: entry :: null :: org.biojava.nbio.structure.Author.setInitials(java.lang.String)::JM,121920
121920 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .initials = p1 $initials ::
121969 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::CE,121970:CD,121975:CD,121976:CD,121980:CD,122313:CD,122317:CD,122322:CD,122323:JM,122065:JM,121987:JM,122164
121970 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.trySimpleMatch(java.util.List,java.util.List)::JM,116402
121975 :: EXPR :: assign :: Ljava/lang/Object :: v5 = CHECKCAST p1 $seqResGroups ::JM,121980
121976 :: CALL :: call :: Ljava/lang/Object :: v7 = v5.clone()::JM,121980
121980 :: EXPR :: assign :: Ljava/lang/Object :: v8 = CHECKCAST v7::DD,122318
121982 :: CALL :: call :: Ljava/lang/Object :: v14 = p2 $atmResGroups .get(v90)::JM,122065:JM,121987:JM,122164:JM,122317
121987 :: EXPR :: assign :: Ljava/lang/Object :: v15 = CHECKCAST v14::DD,122066:DD,122113:DD,122185
121988 :: CALL :: call :: Z :: v17 = v15.isWater()::JM,121992:CL,97166
121992 :: PRED :: IF :: Z :: if (v17 == #(0)) goto 48::CD,121998:CD,122002:CD,122006:CD,122312:CD,122313:CD,122317:CD,122321:CD,122322:CD,122323
121998 :: CALL :: call :: Ljava/lang/Integer :: v21 = v19.getSeqNum()::JM,122320:JM,122019:JM,122006:JM,122059:CL,85043
122002 :: CALL :: call :: I :: v23 = v21.intValue()::JM,122320:JM,122019:JM,122006:JM,122059
122006 :: PRED :: IF :: Z :: if (v23 >= #(0)) goto 89::CD,122018:CD,122019:CD,122319
122019 :: PRED :: IF :: Z :: if (v23 != #(0)) goto 158::CF,122319:CD,122020:CD,122026:CD,122030:CD,122034:CD,122039:CD,122058:CD,122060:CD,122320:JM,122065:JM,121987:JM,122164:JM,122317
122018 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,121970
122020 :: CALL :: call :: Ljava/lang/Object :: v25 = p1 $seqResGroups .get(#(0))::JM,122065:JM,121987:JM,122164:JM,122317
122026 :: CALL :: call :: Ljava/lang/String :: v28 = v26.getPDBName()::JM,122039:CL,56427
122030 :: CALL :: call :: Ljava/lang/String :: v30 = v15.getPDBName()::JM,122039:CL,56427
122034 :: CALL :: call :: Z :: v32 = v28.equals(v30)::JM,122039
122039 :: PRED :: IF :: Z :: if (v32 == #(0)) goto 130::CD,122057:CD,122058:CD,122060:CD,122319:CD,122320
122057 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,121970
122059 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v23 + #(-1)::DD,122320
122058 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 166::CF,122320:CD,122059
122061 :: CALL :: call :: I :: v38 = p1 $seqResGroups .size()::JM,122065:JM,121987:JM,122164:JM,122317
122060 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 301::CD,122061:CD,122065:CD,122160:CD,122164:JM,121987:JM,122317
122065 :: PRED :: IF :: Z :: if (v36 < v38) goto 301::CD,122066:CD,122067:CD,122160:CD,122164:JM,122065:JM,121987:JM,122317
122067 :: PRED :: IF :: Z :: if (v39 == #(0)) goto 241::CD,122070:CD,122075:CD,122080:CD,122085:CD,122089:CD,122094:CD,122099:CD,122104:CD,122112:CD,122113:CD,122114:CD,122321
122066 :: EXPR :: assign :: Z :: v39=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,122067
122070 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v140 = new java.lang.StringBuilder::
122075 :: CALL :: call :: Ljava/lang/StringBuilder :: v144 = v140.append(v36)::
122080 :: CALL :: call :: Ljava/lang/StringBuilder :: v146 = v144.append(#( > seqres! ))::
122085 :: CALL :: call :: I :: v148 = p1 $seqResGroups .size()::JM,122065:JM,121987:JM,122164:JM,122317
122089 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v146.append(v148)::JM,121987:JM,122164:JM,122317
122094 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(#( ))::
122099 :: CALL :: call :: Ljava/lang/StringBuilder :: v154 = v152.append(v15)::
122104 :: CALL :: call :: Ljava/lang/String :: v156 = v154.toString()::
122113 :: EXPR :: assign :: Z :: v40=v15 INSTANCEOF org.biojava.nbio.structure.NucleotideImpl::DD,122114
122112 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,121970
122114 :: PRED :: IF :: Z :: if (v40 == #(0)) goto 511::CF,122321:CD,122117:CD,122122:CD,122127:CD,122132:CD,122136:CD,122141:CD,122146:CD,122151:CD,122159:CD,122312:CD,122313:CD,122317:CD,122322:CD,122323
122117 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v119 = new java.lang.StringBuilder::
122122 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v119.append(v36)::
122127 :: CALL :: call :: Ljava/lang/StringBuilder :: v126 = v123.append(#( > seqres! ))::
122132 :: CALL :: call :: I :: v128 = p1 $seqResGroups .size()::JM,122065:JM,121987:JM,122164:JM,122317
122136 :: CALL :: call :: Ljava/lang/StringBuilder :: v130 = v126.append(v128)::JM,121987:JM,122164:JM,122317
122141 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v130.append(#( ))::
122146 :: CALL :: call :: Ljava/lang/StringBuilder :: v135 = v133.append(v15)::
122151 :: CALL :: call :: Ljava/lang/String :: v137 = v135.toString()::
122159 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,121970
122160 :: CALL :: call :: I :: v42 = p1 $seqResGroups .size()::JM,122065:JM,121987:JM,122164:JM,122317
122164 :: PRED :: IF :: Z :: if (v36 < v42) goto 347::CD,122167:CD,122172:CD,122177:CD,122185:CD,122186:CD,122188:CD,122194:CD,122198:CD,122202:CD,122206:CD,122210:CD,122215:CD,122321:JM,122065:JM,121987:JM,122164:JM,122317
122167 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v44 = new java.lang.StringBuilder::
122172 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v44.append(v36)::
122177 :: CALL :: call :: Ljava/lang/String :: v50 = v48.toString()::
122185 :: EXPR :: assign :: Z :: v52=v15 INSTANCEOF org.biojava.nbio.structure.AminoAcid::DD,122186
122187 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,121970
122186 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 511::CF,122321:CD,122187:CD,122312:CD,122313:CD,122317:CD,122322:CD,122323
122188 :: CALL :: call :: Ljava/lang/Object :: v54 = p1 $seqResGroups .get(v36)::JM,122065:JM,121987:JM,122164:JM,122317
122194 :: CALL :: call :: Ljava/lang/String :: v57 = v55.getPDBName()::JM,122215:CL,56427
122198 :: CALL :: call :: Ljava/lang/String :: v59 = v57.trim()::JM,122215
122202 :: CALL :: call :: Ljava/lang/String :: v61 = v15.getPDBName()::JM,122215:CL,56427
122206 :: CALL :: call :: Ljava/lang/String :: v63 = v61.trim()::JM,122215
122210 :: CALL :: call :: Z :: v65 = v59.equals(v63)::JM,122215
122215 :: PRED :: IF :: Z :: if (v65 != #(0)) goto 438::CD,122218:CD,122223:CD,122228:CD,122233:CD,122238:CD,122243:CD,122248:CD,122256:CD,122257:CD,122267:CD,122312:CD,122313:CD,122317:CD,122321:CD,122322:CD,122323
122218 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v100 = new java.lang.StringBuilder::
122223 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v100.append(v36)::
122228 :: CALL :: call :: Ljava/lang/StringBuilder :: v107 = v104.append(#( and ATOM record: ))::
122233 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v107.append(v15)::
122238 :: CALL :: call :: Ljava/lang/StringBuilder :: v112 = v109.append(#( | ))::
122243 :: CALL :: call :: Ljava/lang/StringBuilder :: v114 = v112.append(v55)::
122248 :: CALL :: call :: Ljava/lang/String :: v116 = v114.toString()::
122257 :: CALL :: call :: Ljava/lang/Object :: v67 = v8.set(v36, v15)::
122256 :: NORM :: compound :: Ljava/util/List :: return #(null)::DD,121970
122267 :: CALL :: call :: Ljava/lang/Integer :: v74 = valueOf(v36)::
122313 :: CALL :: call :: I :: v12 = p2 $atmResGroups .size()::JM,122065:JM,121987:JM,122164:JM,122317
122312 :: EXPR :: assign :: Ljava/lang/Object :: v88 = v90 + #(1)::DD,122323:CF,122322
122317 :: PRED :: IF :: Z :: if (v90 < v12) goto 23::CD,121982:CD,121987:CD,121988:CD,121992:CD,122318:JM,122065:JM,122164:JM,122317
122319 :: EXPR :: assign :: null :: PHI v33 = v89, #(0)::DD,122058:DD,122060:DD,122321
122318 :: NORM :: compound :: Ljava/util/List :: return v8::DD,121970
122321 :: EXPR :: assign :: null :: PHI v87 = v89, v33, v33, v33::DD,122322:CF,122312
122320 :: EXPR :: assign :: null :: PHI v36 = v23, v35::DD,122065:DD,122164:JM,121987:JM,122317:CF,122060
122323 :: EXPR :: assign :: null :: PHI v90 = #(0), v88::JM,122065:JM,121987:JM,122164:DD,122312:DD,122317
122322 :: EXPR :: assign :: null :: PHI v89 = #(1), v87::CF,122323:DD,122319:DD,122321
122433 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideChains(org.biojava.nbio.structure.Chain,org.biojava.nbio.structure.Chain)::CD,122441:CD,122446:CD,122450
122441 :: CALL :: call :: Ljava/util/List :: v7 = p2 $atomRes .getAtomGroups(v5)::JM,122450:CL,97721
122446 :: CALL :: call :: I :: v9 = v7.size()::JM,122450
122450 :: PRED :: IF :: Z :: if (v9 >= #(1)) goto 35::CD,122482:CD,122488
122482 :: CALL :: call :: Z :: v21 = p0 $this .alignNucleotideGroups(v17, v19)::JM,122488:CL,126430
122489 :: CALL :: call :: V :: p2 $atomRes .setSeqResGroups(v17)::CL,48841
122488 :: PRED :: IF :: Z :: if (v21 != #(0)) goto 83::CD,122489
122513 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::JM,116538
122512 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignProteinChains(java.util.List,java.util.List)::CE,122513:CD,122518:CD,122522:CD,122526:CD,122532:CD,122540:CD,122545:CD,122549:CD,122554:CD,122559:CD,122564:CD,122574:CD,122579:CD,122583:CD,122588:CD,122593:CD,122598:CD,122606:CD,122611:CD,122628:CD,122629:CD,122632:CD,122638:CD,122639:CD,122647:CD,122651
122518 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
122522 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
122526 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(0))::CL,79548
122532 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(0))::CL,79548
122540 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v15 = new java.lang.StringBuilder::
122545 :: CALL :: call :: I :: v19 = v11.length()::
122549 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v15.append(v19)::
122554 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v21.append(#(): ))::
122559 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v24.append(v11)::
122564 :: CALL :: call :: Ljava/lang/String :: v28 = v26.toString()::
122574 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v31 = new java.lang.StringBuilder::
122579 :: CALL :: call :: I :: v35 = v13.length()::
122583 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v31.append(v35)::
122588 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#(): ))::
122593 :: CALL :: call :: Ljava/lang/StringBuilder :: v41 = v39.append(v13)::
122598 :: CALL :: call :: Ljava/lang/String :: v43 = v41.toString()::
122606 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v45 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,122689:JM,122656:JM,122647:JM,122651:JM,122652:JM,122639
122611 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/ProteinSequence :: v47 = new org.biojava.nbio.core.sequence.ProteinSequence::JM,122689:JM,122656:JM,122647:JM,122651:JM,122652:JM,122639
122629 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v57 = getBlosum65()::JM,122689:JM,122656:JM,122647:JM,122651:JM,122652:JM,122639
122628 :: NORM :: compound :: Z :: return #(1)::DD,122513
122632 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v58 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,122689:JM,122656:JM,122647:JM,122651:JM,122652:JM,122639
122639 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v63 = getPairwiseAligner(v45, v47, v61, v58, v57)::JM,122689:JM,122656:JM,122647:JM,122651:JM,122652:JM,122639
122638 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v61 = LOCAL::JM,122689:JM,122656:JM,122647:JM,122651:JM,122652:JM,122639
122647 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v65 = v63.getPair()::JM,122689:JM,122656:JM,122647:JM,122651:JM,122652:JM,122639
122651 :: PRED :: IF :: Z :: if (v65 == #(null)) goto 216::CD,122652:CD,122656:CD,122681:JM,122689
122652 :: CALL :: call :: I :: v68 = v65.getLength()::JM,122689:JM,122656:JM,122652
122656 :: PRED :: IF :: Z :: if (v68 != #(0)) goto 260::CD,122681:CD,122684:CD,122689:CD,122694:CD,122699:CD,122707:CD,122716
122681 :: NORM :: compound :: Z :: return #(1)::DD,122513
122684 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v70 = new java.lang.StringBuilder::
122689 :: CALL :: call :: Ljava/lang/String :: v75 = v65.toString(#(100))::JM,122689:JM,122656:JM,122652
122694 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v70.append(v75)::
122699 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
122707 :: CALL :: call :: Z :: v82 = p0 $this .mapChains(p1 $seqRes , p2 $atomRes , v65, v5, v7)::JM,122716:CL,126827
122716 :: NORM :: compound :: Z :: return v82::DD,122513
122781 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Chain :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::JM,116624
122780 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findChain(java.lang.String,int)::CE,122781:CD,122786:CD,122791:CD,122796:CD,122800:CD,122801:CD,122805:CD,122810:CD,122811:CD,122812:CD,122818:CD,122823:CD,122828:CD,122836:CD,122841
122786 :: CALL :: call :: Ljava/util/List :: v6 = p0 $this .getChains(p2 $modelnr )::JM,122800:CL,56292
122791 :: CALL :: call :: Ljava/util/Iterator :: v8 = v6.iterator()::JM,122800
122796 :: CALL :: call :: Ljava/lang/Object :: v13 = v8.next()::JM,122800
122801 :: CALL :: call :: Ljava/lang/String :: v16 = v14.getChainID()::JM,122810:CL,48319
122800 :: EXPR :: assign :: Ljava/lang/Object :: v14 = CHECKCAST v13::DD,122811
122805 :: CALL :: call :: Z :: v18 = v16.equals(p1 $chainId )::JM,122810
122811 :: NORM :: compound :: Lorg/biojava/nbio/structure/Chain :: return v14::DD,122781
122810 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 48::CD,122796:CD,122800:CD,122801:CD,122805:CD,122812:CF,122811
122812 :: CALL :: call :: Z :: v10 = v8.hasNext()::JM,122800
122818 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
122823 :: CALL :: call :: Ljava/lang/StringBuilder :: v24 = v20.append(p1 $chainId )::JM,122810
122828 :: CALL :: call :: Ljava/lang/StringBuilder :: v27 = v24.append(#(' for PDB id ))::
122833 :: EXPR :: reference :: Ljava/lang/String :: v28 = p0 $this .pdb_id::
122836 :: CALL :: call :: Ljava/lang/StringBuilder :: v30 = v27.append(v28)::
122841 :: CALL :: call :: Ljava/lang/String :: v32 = v30.toString()::
122873 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Group :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::JM,116682
122872 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.findGroup(java.lang.String,java.lang.String,int)::CE,122873:CD,122888:CD,122893:CD,122898:CD,122906:CD,122910:CD,122915:CD,122920:CD,122929:CD,122935:CD,122939:CD,122944:CD,122948:CD,122953:CD,122957:CD,122962:CD,122963:CD,122964:CD,122970:CD,122975:CD,122980:CD,122985:CD,122990
122888 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
122893 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v42.append(p3 $modelnr )::JM,122962
122898 :: CALL :: call :: Ljava/lang/StringBuilder :: v49 = v46.append(#( in this structure. (...))::
122903 :: EXPR :: reference :: Ljava/util/List :: v50 = p0 $this .models::
122906 :: CALL :: call :: I :: v52 = v50.size()::
122910 :: CALL :: call :: Ljava/lang/StringBuilder :: v54 = v49.append(v52)::
122915 :: CALL :: call :: Ljava/lang/StringBuilder :: v57 = v54.append(#()))::
122920 :: CALL :: call :: Ljava/lang/String :: v59 = v57.toString()::
122929 :: CALL :: call :: Lorg/biojava/nbio/structure/Chain :: v10 = p0 $this .findChain(p1 $chainId , p3 $modelnr )::CL,122780
122935 :: CALL :: call :: Ljava/util/List :: v12 = v10.getAtomGroups()::JM,122948:CL,48461
122939 :: CALL :: call :: Ljava/util/Iterator :: v14 = v12.iterator()::JM,122948
122944 :: CALL :: call :: Ljava/lang/Object :: v19 = v14.next()::JM,122948
122948 :: EXPR :: assign :: Ljava/lang/Object :: v20 = CHECKCAST v19::DD,122963
122953 :: CALL :: call :: Ljava/lang/String :: v24 = v22.toString()::JM,122962:CL,56305
122957 :: CALL :: call :: Z :: v26 = v24.equals(p2 $pdbResnum )::JM,122962
122963 :: NORM :: compound :: Lorg/biojava/nbio/structure/Group :: return v20::DD,122873
122962 :: PRED :: IF :: Z :: if (v26 == #(0)) goto 129::CD,122944:CD,122948:CD,122953:CD,122957:CD,122964:CF,122963
122964 :: CALL :: call :: Z :: v16 = v14.hasNext()::JM,122948
122970 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
122975 :: CALL :: call :: Ljava/lang/StringBuilder :: v32 = v28.append(p2 $pdbResnum )::JM,122962
122980 :: CALL :: call :: Ljava/lang/StringBuilder :: v35 = v32.append(#( in chain ))::
122985 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v35.append(p1 $chainId )::JM,122962
122990 :: CALL :: call :: Ljava/lang/String :: v39 = v37.toString()::JM,122962
123073 :: ENTR :: entry :: null :: org.biojava.nbio.structure.StructureImpl.addSSBond(org.biojava.nbio.structure.Bond)::CD,123081
123078 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .ssbonds::
123081 :: CALL :: call :: Z :: v6 = v4.add(p1 $ssbond )::
123090 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SSBondImpl.toString()::CD,123094:CD,123095:CD,123103:CD,123108:CD,123112:CD,123113:CD,123121:CD,123129:CD,123134:CD,123139:CD,123143:CD,123144:CD,123152:CD,123160:CD,123165:CD,123170:CD,123174:CD,123175:CD,123183:CD,123191:CD,123196:CD,123201:CD,123205:CD,123206:CD,123214:CD,123219:CD,123223:CD,123224:CD,123232:CD,123240:CD,123245:CD,123250:CD,123254:CD,123255:CD,123263:CD,123271:CD,123276:CD,123281:CD,123285:CD,123286:CD,123294:CD,123302:CD,123307:CD,123312:CD,123316:CD,123317:CD,123325:CD,123330
123095 :: CALL :: call :: Ljava/lang/String :: v6 = valueOf(#([SSBOND:))::
123094 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v4 = new java.lang.StringBuilder::
123103 :: CALL :: call :: Ljava/lang/StringBuilder :: v10 = v4.append(#(Atom 1:))::
123108 :: CALL :: call :: Ljava/lang/String :: v12 = v10.toString()::
123113 :: CALL :: call :: Ljava/lang/String :: v15 = valueOf(v12)::
123112 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v13 = new java.lang.StringBuilder::
123121 :: CALL :: call :: Ljava/lang/StringBuilder :: v19 = v13.append(#(	Chain: ))::
123126 :: EXPR :: reference :: Ljava/lang/String :: v20 = p0 $this .chainID1::
123129 :: CALL :: call :: Ljava/lang/StringBuilder :: v22 = v19.append(v20)::
123134 :: CALL :: call :: Ljava/lang/StringBuilder :: v25 = v22.append(#())::
123139 :: CALL :: call :: Ljava/lang/String :: v27 = v25.toString()::
123143 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v28 = new java.lang.StringBuilder::
123144 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v27)::
123152 :: CALL :: call :: Ljava/lang/StringBuilder :: v34 = v28.append(#(	Residue #: ))::
123157 :: EXPR :: reference :: Ljava/lang/String :: v35 = p0 $this .resnum1::
123160 :: CALL :: call :: Ljava/lang/StringBuilder :: v37 = v34.append(v35)::
123165 :: CALL :: call :: Ljava/lang/StringBuilder :: v39 = v37.append(#())::
123170 :: CALL :: call :: Ljava/lang/String :: v41 = v39.toString()::
123175 :: CALL :: call :: Ljava/lang/String :: v44 = valueOf(v41)::
123174 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v42 = new java.lang.StringBuilder::
123183 :: CALL :: call :: Ljava/lang/StringBuilder :: v48 = v42.append(#(	Ins. Code: ))::
123188 :: EXPR :: reference :: Ljava/lang/String :: v49 = p0 $this .insCode1::
123191 :: CALL :: call :: Ljava/lang/StringBuilder :: v51 = v48.append(v49)::
123196 :: CALL :: call :: Ljava/lang/StringBuilder :: v53 = v51.append(#())::
123201 :: CALL :: call :: Ljava/lang/String :: v55 = v53.toString()::
123205 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
123206 :: CALL :: call :: Ljava/lang/String :: v58 = valueOf(v55)::
123214 :: CALL :: call :: Ljava/lang/StringBuilder :: v62 = v56.append(#(Atom 2:))::
123219 :: CALL :: call :: Ljava/lang/String :: v64 = v62.toString()::
123223 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
123224 :: CALL :: call :: Ljava/lang/String :: v67 = valueOf(v64)::
123232 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v65.append(#(	Chain: ))::
123237 :: EXPR :: reference :: Ljava/lang/String :: v71 = p0 $this .chainID2::
123240 :: CALL :: call :: Ljava/lang/StringBuilder :: v73 = v70.append(v71)::
123245 :: CALL :: call :: Ljava/lang/StringBuilder :: v75 = v73.append(#())::
123250 :: CALL :: call :: Ljava/lang/String :: v77 = v75.toString()::
123255 :: CALL :: call :: Ljava/lang/String :: v80 = valueOf(v77)::
123254 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v78 = new java.lang.StringBuilder::
123263 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v78.append(#(	Residue #: ))::
123268 :: EXPR :: reference :: Ljava/lang/String :: v84 = p0 $this .resnum2::
123271 :: CALL :: call :: Ljava/lang/StringBuilder :: v86 = v83.append(v84)::
123276 :: CALL :: call :: Ljava/lang/StringBuilder :: v88 = v86.append(#())::
123281 :: CALL :: call :: Ljava/lang/String :: v90 = v88.toString()::
123285 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v91 = new java.lang.StringBuilder::
123286 :: CALL :: call :: Ljava/lang/String :: v93 = valueOf(v90)::
123294 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v91.append(#(	Ins. Code: ))::
123299 :: EXPR :: reference :: Ljava/lang/String :: v97 = p0 $this .insCode2::
123302 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(v97)::
123307 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(#())::
123312 :: CALL :: call :: Ljava/lang/String :: v103 = v101.toString()::
123317 :: CALL :: call :: Ljava/lang/String :: v106 = valueOf(v103)::
123316 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v104 = new java.lang.StringBuilder::
123325 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v104.append(#(]))::
123330 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
123387 :: EXIT :: exit :: I :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::JM,117483:JM,117589
123386 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ChainImpl.getAtomLength()::CE,123387:CD,123393:CD,123397
123390 :: EXPR :: reference :: Ljava/util/List :: v3 = p0 $this .groups::JM,123397
123393 :: CALL :: call :: I :: v5 = v3.size()::JM,123397
123397 :: NORM :: compound :: I :: return v5::CF,123387
123399 :: ENTR :: entry :: null :: org.biojava.nbio.structure.ecod.EcodInstallation.EcodParser.parse(java.io.BufferedReader)::CD,123404:CD,123409:CD,123413:CD,123417:CD,123839:CD,123844:CD,123849:CD,123893:CD,123944:CD,123948:CD,123972:CD,123973:CD,123974:CD,123975:CD,123980:CD,123981:CD,123982:CD,123983:CD,123984
123404 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::
123409 :: CALL :: call :: Ljava/util/regex/Pattern :: v9 = compile(#(^\s*#.*ECOD\s*version...))::
123413 :: CALL :: call :: Ljava/util/regex/Pattern :: v12 = compile(#(^\s*#.*))::
123417 :: CALL :: call :: Ljava/lang/String :: v17 = p1 $in .readLine()::JM,123948:JM,123983
123422 :: CALL :: call :: Ljava/util/regex/Matcher :: v20 = v9.matcher(v251)::JM,123431
123427 :: CALL :: call :: Z :: v22 = v20.matches()::JM,123431
123431 :: PRED :: IF :: Z :: if (v22 == #(0)) goto 78::CD,123432:CD,123441:CD,123446:CD,123450:CD,123976:CD,123977:CD,123978:CD,123979:JM,123431
123432 :: CALL :: call :: Ljava/lang/String :: v38 = v20.group(#(1))::JM,123431
123441 :: CALL :: call :: Ljava/util/regex/Matcher :: v25 = v12.matcher(v251)::JM,123450
123446 :: CALL :: call :: Z :: v27 = v25.matches()::JM,123450
123451 :: CALL :: call :: [Ljava/lang/String :: v30 = v251.split(#(	))::JM,123456:JM,123458:JM,123460:JM,123652:JM,123480
123450 :: PRED :: IF :: Z :: if (v27 != #(0)) goto 874::CF,123976:CD,123451:CD,123456:CD,123457
123457 :: PRED :: IF :: Z :: if (v31 == #(13)) goto 131::CD,123458:CD,123459:CD,123462:CD,123467:CD,123471:CD,123475:CD,123480:CD,123481:CD,123522:CD,123527:CD,123532:CD,123533:CD,123577:CD,123578:CD,123592:CD,123593:CD,123607:CD,123608:CD,123622:CD,123623:CD,123637:CD,123642:CD,123647:CD,123652:CD,123653:CD,123659:CD,123668:CD,123677:CD,123686:CD,123695:CD,123704:CD,123709:CD,123714:CD,123765:CD,123770:CD,123808:CD,123830:CD,123955:CD,123957:CD,123962:CD,123964:CD,123969:CD,123970:CD,123976:CD,123977:CD,123978:CD,123979
123456 :: EXPR :: assign :: I :: v31 = v30.length::DD,123457
123459 :: PRED :: IF :: Z :: if (v33 == #(14)) goto 131::CD,123460:CD,123461:CD,123462:CD,123467:CD,123471:CD,123475:CD,123480:CD,123481:CD,123522:CD,123527:CD,123532:CD,123533:CD,123577:CD,123578:CD,123592:CD,123593:CD,123607:CD,123608:CD,123622:CD,123623:CD,123637:CD,123642:CD,123647:CD,123652:CD,123653:CD,123659:CD,123668:CD,123677:CD,123686:CD,123695:CD,123704:CD,123709:CD,123714:CD,123765:CD,123770:CD,123808:CD,123830:CD,123955:CD,123957:CD,123962:CD,123964:CD,123969:CD,123970:CD,123976:CD,123977:CD,123978:CD,123979
123458 :: EXPR :: assign :: I :: v33 = v30.length::DD,123459
123461 :: PRED :: IF :: Z :: if (v35 != #(15)) goto 826::CD,123462:CD,123467:CD,123471:CD,123475:CD,123480:CD,123481:CD,123522:CD,123527:CD,123532:CD,123533:CD,123577:CD,123578:CD,123592:CD,123593:CD,123607:CD,123608:CD,123622:CD,123623:CD,123637:CD,123642:CD,123647:CD,123652:CD,123653:CD,123659:CD,123668:CD,123677:CD,123686:CD,123695:CD,123704:CD,123709:CD,123714:CD,123765:CD,123770:CD,123808:CD,123830:CD,123859:CD,123955:CD,123957:CD,123962:CD,123964:CD,123969:CD,123970:CD,123976:CD,123977:CD,123978:CD,123979
123460 :: EXPR :: assign :: I :: v35 = v30.length::DD,123461
123463 :: EXPR :: reference :: Ljava/lang/Object :: v40 = v30[#(0)]::
123462 :: EXPR :: assign :: Ljava/lang/Object :: v39 = #(0) + #(1)::DD,123475
123467 :: CALL :: call :: J :: v42 = parseLong(v40)::
123471 :: CALL :: call :: Ljava/lang/Long :: v44 = valueOf(v42)::
123475 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v39 + #(1)::DD,123482:DD,123955
123481 :: PRED :: IF :: Z :: if (v47 < #(14)) goto 233::CF,123955:CD,123482:CD,123487:CD,123492
123480 :: EXPR :: assign :: I :: v47 = v30.length::DD,123481
123483 :: EXPR :: reference :: Ljava/lang/Object :: v49 = v30[v45]::JM,123492:JM,123503
123482 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v45 + #(1)::DD,123955
123487 :: CALL :: call :: Z :: v52 = v49.equalsIgnoreCase(#(MANUAL_REP))::JM,123492
123492 :: PRED :: IF :: Z :: if (v52 == #(0)) goto 197::CD,123498:CD,123503:CD,123955
123498 :: CALL :: call :: Z :: v57 = v49.equalsIgnoreCase(#(AUTO_NONREP))::JM,123503
123503 :: PRED :: IF :: Z :: if (v57 == #(0)) goto 212::CD,123512:CD,123955
123512 :: CALL :: call :: Ljava/lang/Integer :: v64 = valueOf(v252)::
123522 :: EXPR :: assign :: Ljava/lang/Object :: v68 = v66 + #(1)::DD,123637
123527 :: CALL :: call :: [Ljava/lang/String :: v72 = v69.split(#(\.))::JM,123607:JM,123622:JM,123577:JM,123592:JM,123532:JM,123534
123533 :: PRED :: IF :: Z :: if (v73 < #(3)) goto 261::CD,123534:CD,123535:CD,123536:CD,123957
123532 :: EXPR :: assign :: I :: v73 = v72.length::DD,123533
123535 :: PRED :: IF :: Z :: if (#(4) >= v76) goto 324::CF,123957:CD,123536
123534 :: EXPR :: assign :: I :: v76 = v72.length::CF,123535
123536 :: PRED :: IF :: Z :: if (v249 <= #(1)) goto 294::CD,123545:CD,123555:CD,123557:CD,123957
123545 :: CALL :: call :: Ljava/lang/Integer :: v83 = valueOf(v252)::
123555 :: EXPR :: assign :: Ljava/lang/Object :: v86 = v249 + #(-1)::DD,123957
123557 :: PRED :: IF :: Z :: if (v249 == #(0)) goto 324::CF,123957:CD,123566:CD,123576
123566 :: CALL :: call :: Ljava/lang/Integer :: v93 = valueOf(v252)::
123577 :: EXPR :: assign :: I :: v97 = v72.length::DD,123578
123576 :: EXPR :: assign :: Ljava/lang/Object :: v95 = v249 + #(-1)::DD,123957
123579 :: EXPR :: reference :: Ljava/lang/Object :: v98 = v72[#(0)]::
123578 :: PRED :: IF :: Z :: if (v97 <= #(0)) goto 346::CD,123583:CD,123587
123583 :: CALL :: call :: I :: v100 = parseInt(v98)::
123587 :: CALL :: call :: Ljava/lang/Integer :: v102 = valueOf(v100)::
123593 :: PRED :: IF :: Z :: if (v104 <= #(1)) goto 369::CD,123598:CD,123602
123592 :: EXPR :: assign :: I :: v104 = v72.length::DD,123593
123594 :: EXPR :: reference :: Ljava/lang/Object :: v105 = v72[#(1)]::
123598 :: CALL :: call :: I :: v107 = parseInt(v105)::
123602 :: CALL :: call :: Ljava/lang/Integer :: v109 = valueOf(v107)::
123607 :: EXPR :: assign :: I :: v111 = v72.length::DD,123608
123609 :: EXPR :: reference :: Ljava/lang/Object :: v113 = v72[#(2)]::
123608 :: PRED :: IF :: Z :: if (v111 <= #(2)) goto 392::CD,123613:CD,123617
123613 :: CALL :: call :: I :: v115 = parseInt(v113)::
123617 :: CALL :: call :: Ljava/lang/Integer :: v117 = valueOf(v115)::
123623 :: PRED :: IF :: Z :: if (v119 <= #(3)) goto 417::CD,123628:CD,123632
123622 :: EXPR :: assign :: I :: v119 = v72.length::DD,123623
123624 :: EXPR :: reference :: Ljava/lang/Object :: v120 = v72[#(3)]::
123628 :: CALL :: call :: I :: v122 = parseInt(v120)::
123632 :: CALL :: call :: Ljava/lang/Integer :: v124 = valueOf(v122)::
123637 :: EXPR :: assign :: Ljava/lang/Object :: v126 = v68 + #(1)::DD,123642
123642 :: EXPR :: assign :: Ljava/lang/Object :: v128 = v126 + #(1)::DD,123647
123647 :: EXPR :: assign :: Ljava/lang/Object :: v130 = v128 + #(1)::DD,123654:DD,123962
123653 :: PRED :: IF :: Z :: if (v132 < #(15)) goto 468::CF,123962:CD,123654
123652 :: EXPR :: assign :: I :: v132 = v30.length::DD,123653
123654 :: EXPR :: assign :: Ljava/lang/Object :: v133 = v130 + #(1)::DD,123962
123659 :: EXPR :: assign :: Ljava/lang/Object :: v137 = v135 + #(1)::DD,123668
123668 :: EXPR :: assign :: Ljava/lang/Object :: v141 = v137 + #(1)::DD,123677
123677 :: EXPR :: assign :: Ljava/lang/Object :: v145 = v141 + #(1)::DD,123686
123686 :: EXPR :: assign :: Ljava/lang/Object :: v149 = v145 + #(1)::DD,123695
123695 :: EXPR :: assign :: Ljava/lang/Object :: v153 = v149 + #(1)::DD,123704
123705 :: EXPR :: reference :: Ljava/lang/Object :: v158 = v30[v153]::JM,123714:JM,123721
123704 :: EXPR :: assign :: Ljava/lang/Object :: v157 = v153 + #(1)::
123709 :: CALL :: call :: Z :: v161 = v158.equals(#(NOT_DOMAIN_ASSEMBLY))::JM,123714
123714 :: PRED :: IF :: Z :: if (v161 == #(0)) goto 563::CD,123716:CD,123721:CD,123964
123716 :: CALL :: call :: Z :: v164 = v158.equals(#(IS_DOMAIN_ASSEMBLY))::JM,123721
123721 :: PRED :: IF :: Z :: if (v164 == #(0)) goto 624::CD,123722:CD,123752:CD,123756:CD,123964
123722 :: PRED :: IF :: Z :: if (v248 <= #(1)) goto 598::CD,123726:CD,123735:CD,123737:CD,123964
123726 :: CALL :: call :: Ljava/lang/Integer :: v169 = valueOf(v252)::
123735 :: EXPR :: assign :: Ljava/lang/Object :: v171 = v248 + #(-1)::DD,123964
123737 :: PRED :: IF :: Z :: if (v248 != #(0)) goto 636::CF,123964:CD,123741:CD,123750
123741 :: CALL :: call :: Ljava/lang/Integer :: v176 = valueOf(v252)::
123750 :: EXPR :: assign :: Ljava/lang/Object :: v178 = v248 + #(-1)::DD,123964
123752 :: CALL :: call :: J :: v180 = parseLong(v158)::
123756 :: CALL :: call :: Ljava/lang/Long :: v182 = valueOf(v180)::
123761 :: EXPR :: reference :: Ljava/lang/Object :: v186 = v30[v157]::JM,123770:JM,123771:JM,123775
123765 :: CALL :: call :: Z :: v189 = v186.equals(#(NO_LIGANDS_4A))::JM,123770
123771 :: CALL :: call :: Z :: v191 = v186.isEmpty()::JM,123771:JM,123775
123770 :: PRED :: IF :: Z :: if (v189 != #(0)) goto 663::CD,123771:CD,123775:CD,123969:CD,123970
123775 :: PRED :: IF :: Z :: if (v191 == #(0)) goto 675::CD,123780:CD,123785:CD,123786:CD,123791:CD,123807:CD,123966:CD,123967:CD,123968:CD,123969:CD,123970
123780 :: CALL :: call :: [Ljava/lang/String :: v194 = v186.split(#(,))::JM,123786:JM,123791
123785 :: NORM :: declaration :: Ljava/util/LinkedHashSet :: v195 = new java.util.LinkedHashSet::CF,123786
123786 :: EXPR :: assign :: I :: v196 = v194.length::
123791 :: EXPR :: assign :: I :: v198 = v194.length::DD,123807
123801 :: CALL :: call :: Z :: v203 = v195.add(v201)::
123807 :: PRED :: IF :: Z :: if (v205 < v198) goto 710::CF,123969:CD,123801:CD,123806:CD,123966:CD,123967:CD,123968
123806 :: EXPR :: assign :: Ljava/lang/Object :: v204 = v205 + #(1)::DD,123968:CF,123966
123808 :: NORM :: declaration :: Lorg/biojava/nbio/structure/ecod/EcodDomain :: v209 = new org.biojava.nbio.structure.ecod.EcodDomain::
123830 :: CALL :: call :: Z :: v212 = v4.add(v209)::
123839 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v219 = new java.lang.StringBuilder::
123844 :: CALL :: call :: Ljava/lang/StringBuilder :: v223 = v219.append(v261)::
123849 :: CALL :: call :: Ljava/lang/String :: v225 = v223.toString()::
123859 :: PRED :: IF :: Z :: if (v250 <= #(1)) goto 852::CD,123863:CD,123872:CD,123874:CD,123976:CD,123977:CD,123978:CD,123979
123863 :: CALL :: call :: Ljava/lang/Integer :: v231 = valueOf(v252)::
123872 :: EXPR :: assign :: Ljava/lang/Object :: v233 = v250 + #(-1)::DD,123978
123874 :: PRED :: IF :: Z :: if (v250 != #(0)) goto 874::CF,123976:CD,123878:CD,123887:CD,123977:CD,123978:CD,123979
123878 :: CALL :: call :: Ljava/lang/Integer :: v238 = valueOf(v252)::
123887 :: EXPR :: assign :: Ljava/lang/Object :: v240 = v248 + #(-1)::DD,123976
123888 :: CALL :: call :: Ljava/lang/String :: v246 = p1 $in .readLine()::JM,123948:JM,123983
123893 :: PRED :: IF :: Z :: if (v251 != #(null)) goto 48::CD,123422:CD,123427:CD,123431:CD,123888:CD,123892:CD,123976:CD,123977:CD,123978:CD,123979:CD,123980:CD,123981:CD,123982:CD,123983:CD,123984
123892 :: EXPR :: assign :: Ljava/lang/Object :: v247 = v263 + #(1)::DD,123984:CF,123980
123944 :: CALL :: call :: V :: p1 $in .close()::JM,123948:JM,123983
123949 :: CALL :: call :: V :: p1 $in .close()::JM,123983
123948 :: PRED :: IF :: Z :: if (p1 $in  == #(null)) goto 967::CD,123949:JM,123983
123955 :: EXPR :: assign :: null :: PHI v66 = v45, v48, v48, v48::DD,123522
123957 :: EXPR :: assign :: null :: PHI v96 = v249, v86, v249, v95::CF,123577:DD,123973:DD,123977
123962 :: EXPR :: assign :: null :: PHI v135 = v130, v133::DD,123659
123964 :: EXPR :: assign :: null :: PHI v183 = v248, v171, v248, v178, v248::DD,123972:DD,123976
123967 :: EXPR :: assign :: null :: PHI v255 = v252, v255::CF,123968:DD,123967:DD,123970:DD,123975
123966 :: EXPR :: assign :: null :: PHI v253 = v250, v253::CF,123967:DD,123966:DD,123969:DD,123974
123969 :: EXPR :: assign :: null :: PHI v256 = v250, v253::CF,123970:DD,123974:DD,123978
123968 :: EXPR :: assign :: null :: PHI v205 = #(0), v204::DD,123806:DD,123807
123970 :: EXPR :: assign :: null :: PHI v258 = v252, v255::DD,123975:DD,123979
123973 :: EXPR :: assign :: null :: PHI v215 = v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v249, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96, v96::DD,123977
123972 :: EXPR :: assign :: null :: PHI v214 = v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v248, v183, v183, v183, v183, v183, v183, v183, v183, v183::DD,123976
123975 :: EXPR :: assign :: null :: PHI v261 = v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v252, v255, v255, v258, v258::DD,123979
123974 :: EXPR :: assign :: null :: PHI v259 = v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v250, v253, v253, v256, v256::DD,123978
123977 :: EXPR :: assign :: null :: PHI v242 = v249, v249, v96, v215, v249, v249, v249::CF,123978:DD,123981
123976 :: EXPR :: assign :: null :: PHI v241 = v248, v248, v183, v214, v248, v248, v240::CF,123977:DD,123980
123979 :: EXPR :: assign :: null :: PHI v263 = v252, v252, v258, v261, v252, v252, v252::JM,123948:JM,123983:DD,123892
123978 :: EXPR :: assign :: null :: PHI v243 = v250, v250, v256, v259, v233, v250, v250::CF,123979:DD,123982
123981 :: EXPR :: assign :: null :: PHI v249 = #(5), v242::CF,123982:DD,123536:DD,123555:DD,123557:DD,123576:DD,123957:DD,123973:DD,123977
123980 :: EXPR :: assign :: null :: PHI v248 = #(1), v241::CF,123981:DD,123722:DD,123735:DD,123737:DD,123750:DD,123887:DD,123964:DD,123972:DD,123976
123983 :: EXPR :: assign :: null :: PHI v251 = v17, v246::CF,123984:DD,123893
123982 :: EXPR :: assign :: null :: PHI v250 = #(10), v243::CF,123983:DD,123859:DD,123872:DD,123874:DD,123966:DD,123969:DD,123974:DD,123978
123984 :: EXPR :: assign :: null :: PHI v252 = #(1), v247::DD,123967:DD,123970:DD,123975:DD,123979:CF,123893
124875 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.Status.values()::CF,124876:CD,124878:CD,124880:CD,124881:CD,124889
124876 :: EXIT :: exit :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: org.biojava.nbio.structure.PDBStatus.Status.values()::JM,118901
124878 :: EXPR :: reference :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v2 = org.biojava.nbio.structure.PDBStatus$Status.ENUM$VALUES::DD,124880
124881 :: NORM :: declaration :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: v5 = new org.biojava.nbio.structure.PDBStatus$Status[]::DD,124889
124880 :: EXPR :: assign :: I :: v4 = v2.length::DD,124881
124889 :: NORM :: compound :: [Lorg/biojava/nbio/structure/PDBStatus$Status :: return v5::CF,124876
125135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.setBonds(java.util.List)::JM,125140
125140 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = p1 $bonds ::
125147 :: EXIT :: exit :: Lorg/biojava/nbio/structure/Atom :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::JM,119574:JM,119579
125146 :: ENTR :: entry :: null :: org.biojava.nbio.structure.BondImpl.getOther(org.biojava.nbio.structure.Atom)::CE,125147:CD,125159:CD,125168
125159 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v9 = new java.lang.IllegalArgumentException::
125165 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v6 = p0 $this .atomA::DD,125168
125169 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v8 = p0 $this .atomB::DD,125172
125168 :: PRED :: IF :: Z :: if (p1 $exclude  != v6) goto 40::CD,125172:CD,125176
125173 :: EXPR :: reference :: Lorg/biojava/nbio/structure/Atom :: v7 = p0 $this .atomA::DD,125176
125172 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v8::DD,125147
125176 :: NORM :: compound :: Lorg/biojava/nbio/structure/Atom :: return v7::DD,125147
125185 :: ENTR :: entry :: null :: org.biojava.nbio.structure.AtomImpl.addBond(org.biojava.nbio.structure.Bond)::CD,125193:CD,125205
125190 :: EXPR :: reference :: Ljava/util/List :: v4 = p0 $this .bonds::DD,125193
125193 :: PRED :: IF :: Z :: if (v4 != #(null)) goto 20::CD,125194
125194 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,125199
125199 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
125202 :: EXPR :: reference :: Ljava/util/List :: v9 = p0 $this .bonds::
125205 :: CALL :: call :: Z :: v11 = v9.add(p1 $bond )::
125219 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.downloadAllDefinitions()::CD,125236:CD,125238:CD,125242:CD,125249:CD,125254:CD,125258:CD,125263:CD,125313:CD,125315:CD,125335:CD,125337:CD,125379
125236 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v10 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,125242
125238 :: CALL :: call :: Z :: v12 = v10.get()::JM,125242
125242 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 79::CD,125278:CD,125280:CD,125284:CD,125299:CD,125320:CD,125342:CD,125347:CD,125352:CD,125353:CD,125354:CD,125359:CD,125364:CD,125372:CD,125374
125249 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v65 = new java.lang.StringBuilder::
125254 :: CALL :: call :: Ljava/lang/String :: v69 = v63.getMessage()::
125258 :: CALL :: call :: Ljava/lang/StringBuilder :: v71 = v65.append(v69)::
125263 :: CALL :: call :: Ljava/lang/String :: v73 = v71.toString()::
125278 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v13 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,125280
125280 :: CALL :: call :: V :: v13.set(#(1))::JM,125280
125284 :: CALL :: call :: J :: v17 = currentTimeMillis()::JM,125352
125299 :: CALL :: call :: V :: downloadFile()::CL,127603
125313 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v31 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
125315 :: CALL :: call :: V :: v31.set(#(0))::
125320 :: CALL :: call :: V :: p0 $this .split()::CL,125492
125335 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v40 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::
125337 :: CALL :: call :: V :: v40.set(#(0))::
125342 :: CALL :: call :: J :: v43 = currentTimeMillis()::JM,125352
125347 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v45 = new java.lang.StringBuilder::
125353 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v48 / #(1000 l)::
125352 :: EXPR :: assign :: Ljava/lang/Object :: v48 = v43 - v17::DD,125353
125354 :: CALL :: call :: Ljava/lang/StringBuilder :: v52 = v45.append(v50)::
125359 :: CALL :: call :: Ljava/lang/StringBuilder :: v55 = v52.append(#( sec.))::
125364 :: CALL :: call :: Ljava/lang/String :: v57 = v55.toString()::
125372 :: EXPR :: reference :: Ljava/util/concurrent/atomic/AtomicBoolean :: v59 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.loading::JM,125374
125374 :: CALL :: call :: V :: v59.set(#(0))::JM,125374
125379 :: EXPR :: assign :: Ljava/lang/Exception :: v63 = catch <exc>::
125492 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.split()::CD,125502:CD,125503:CD,125510:CD,125520:CD,125521:CD,125535:CD,125539:CD,125586:CD,125587:CD,125591:CD,125596:CD,125597:CD,125603:CD,125617:CD,125622:CD,125627:CD,125632:CD,125647:CD,125648:CD,125649:CD,125650
125503 :: EXPR :: reference :: Ljava/io/File :: v7 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.path::
125502 :: NORM :: declaration :: Ljava/io/File :: v6 = new java.io.File::
125510 :: NORM :: declaration :: Ljava/io/File :: v10 = new java.io.File::
125521 :: NORM :: declaration :: Ljava/io/InputStreamReader :: v18 = new java.io.InputStreamReader::
125520 :: NORM :: declaration :: Ljava/io/BufferedReader :: v17 = new java.io.BufferedReader::JM,125648:DD,125597:CF,125521
125535 :: CALL :: call :: Ljava/lang/String :: v24 = v17.readLine()::JM,125648
125539 :: NORM :: declaration :: Ljava/io/StringWriter :: v25 = new java.io.StringWriter::DD,125649
125544 :: CALL :: call :: Z :: v29 = v52.startsWith(#(data_))::JM,125549
125549 :: PRED :: IF :: Z :: if (v29 == #(0)) goto 148::CF,125644:CD,125550:CD,125561:CD,125566:CD,125643:CD,125645:CD,125646
125551 :: CALL :: call :: Ljava/lang/String :: v31 = v53.toString()::
125550 :: PRED :: IF :: Z :: if (v54 == #(null)) goto 130::CF,125643:CD,125551:CD,125555:CD,125560
125555 :: CALL :: call :: V :: p0 $this .writeID(v31, v54)::CL,127707
125561 :: CALL :: call :: Ljava/lang/String :: v38 = v52.substring(#(5))::JM,125646
125560 :: EXPR :: assign :: Ljava/lang/Object :: v34 = v51 + #(1)::DD,125643
125566 :: NORM :: declaration :: Ljava/io/StringWriter :: v39 = new java.io.StringWriter::DD,125645
125570 :: CALL :: call :: Ljava/io/StringWriter :: v45 = v42.append(v52)::
125575 :: EXPR :: reference :: Ljava/lang/String :: v46 = org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.NEWLINE::
125577 :: CALL :: call :: Ljava/io/StringWriter :: v48 = v42.append(v46)::
125582 :: CALL :: call :: Ljava/lang/String :: v50 = v17.readLine()::JM,125648
125587 :: CALL :: call :: Ljava/lang/String :: v56 = v53.toString()::
125586 :: PRED :: IF :: Z :: if (v52 != #(null)) goto 102::CD,125544:CD,125549:CD,125570:CD,125575:CD,125577:CD,125582:CD,125644:CD,125645:CD,125646:CD,125647:CD,125648:CD,125649:CD,125650
125591 :: CALL :: call :: V :: p0 $this .writeID(v56, v54)::CL,127707
125597 :: PRED :: IF :: Z :: if (v17 == #(null)) goto 246::CD,125598
125596 :: EXPR :: assign :: Ljava/lang/Object :: v58 = v51 + #(1)::CF,125597
125598 :: CALL :: call :: V :: v17.close()::
125603 :: CALL :: call :: V :: v17.close()::
125617 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v61 = new java.lang.StringBuilder::
125622 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v61.append(v58)::
125627 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( chemical component f...))::
125632 :: CALL :: call :: Ljava/lang/String :: v70 = v68.toString()::
125643 :: EXPR :: assign :: null :: PHI v35 = v51, v34::DD,125644:JM,125646
125645 :: EXPR :: assign :: null :: PHI v42 = v53, v39::CF,125646:DD,125649
125644 :: EXPR :: assign :: null :: PHI v41 = v51, v35::CF,125645:DD,125647
125647 :: EXPR :: assign :: null :: PHI v51 = #(0), v41::CF,125648:DD,125560:DD,125596:DD,125643:DD,125644
125646 :: EXPR :: assign :: null :: PHI v43 = v54, v38::DD,125650
125649 :: EXPR :: assign :: null :: PHI v53 = v25, v42::CF,125650:DD,125645
125648 :: EXPR :: assign :: null :: PHI v52 = v24, v50::CF,125649:JM,125549:JM,125646:DD,125586
125650 :: EXPR :: assign :: null :: PHI v54 = #(null), v43::DD,125550:DD,125646:CF,125586
125720 :: ENTR :: entry :: null :: org.biojava.nbio.structure.align.util.HTTPConnectionTools.openHttpURLConnection(java.net.URL)::CD,125724
125724 :: CALL :: call :: Ljava/net/HttpURLConnection :: v5 = openHttpURLConnection(p1 $url , #(15000))::CL,70990
125782 :: NORM :: declaration :: Ljava/util/HashMap :: v4 = new java.util.HashMap::DD,125786
125786 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .dictionary = v4::
125789 :: NORM :: declaration :: Ljava/util/HashMap :: v6 = new java.util.HashMap::DD,125793
125793 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .replaces = v6::
125796 :: NORM :: declaration :: Ljava/util/HashMap :: v8 = new java.util.HashMap::DD,125800
125800 :: EXPR :: modify :: Ljava/util/Map :: p0 $this .isreplacedby = v8::
125847 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::CE,125848:CD,125850:JM,127957:JM,127964:JM,127950:CD,125854:CD,125858:CD,125864:CD,125870:CD,125874
125848 :: EXIT :: exit :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.getEmptyChemComp()::JM,120314:JM,120395
125850 :: NORM :: declaration :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: v2 = new org.biojava.nbio.structure.io.mmcif.model.ChemComp::DD,125874
125854 :: CALL :: call :: V :: v2.setOne_letter_code(#(?))::CL,127979
125858 :: CALL :: call :: V :: v2.setThree_letter_code(#(???))::CL,127994
125864 :: CALL :: call :: V :: v2.setPolymerType(v8)::CL,128005
125870 :: CALL :: call :: V :: v2.setResidueType(v10)::CL,128016
125874 :: NORM :: compound :: Lorg/biojava/nbio/structure/io/mmcif/model/ChemComp :: return v2::DD,125848
125886 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setId(java.lang.String)::JM,125891
125891 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .id = p1 $id ::
125897 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::CE,125898:CD,125901:CD,125910:CD,125918:CD,125923:CD,125924:CD,125929:CD,125934:CD,125943:CD,125944:CD,125945:CD,125961:CD,125962:CD,125964
125898 :: EXIT :: exit :: Ljava/util/List :: org.biojava.nbio.structure.quaternary.BioAssemblyTools.expandRange(java.lang.String)::
125901 :: CALL :: call :: [Ljava/lang/String :: v6 = p1 $expression .split(#(-))::
125906 :: EXPR :: reference :: Ljava/lang/Object :: v7 = v6[#(0)]::JM,125944:JM,125964
125910 :: CALL :: call :: I :: v9 = parseInt(v7)::JM,125944:JM,125964
125914 :: EXPR :: reference :: Ljava/lang/Object :: v11 = v6[#(1)]::JM,125961:JM,125944
125918 :: CALL :: call :: I :: v13 = parseInt(v11)::JM,125961:JM,125944
125923 :: NORM :: declaration :: Ljava/lang/IllegalArgumentException :: v16 = new java.lang.IllegalArgumentException::
125924 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v17 = new java.lang.StringBuilder::
125929 :: CALL :: call :: Ljava/lang/StringBuilder :: v21 = v17.append(p1 $expression )::
125934 :: CALL :: call :: Ljava/lang/String :: v23 = v21.toString()::
125943 :: NORM :: declaration :: Ljava/util/ArrayList :: v25 = new java.util.ArrayList::DD,125962:CF,125944
125945 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v26 + #(1)::
125944 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v13 - v9::DD,125945
125951 :: CALL :: call :: Ljava/lang/String :: v30 = valueOf(v34)::
125955 :: CALL :: call :: Z :: v32 = v25.add(v30)::
125961 :: PRED :: IF :: Z :: if (v34 <= v13) goto 75::CD,125951:CD,125955:CD,125960:CD,125964:CF,125962
125960 :: EXPR :: assign :: Ljava/lang/Object :: v33 = v34 + #(1)::DD,125964
125962 :: NORM :: compound :: Ljava/util/List :: return v25::DD,125898
125964 :: EXPR :: assign :: null :: PHI v34 = v9, v33::DD,125960:DD,125961
126002 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element1 = p1 $element1 ::
126005 :: EXPR :: modify :: Ljava/lang/Object :: p0 $this .element2 = p2 $element2 ::
126063 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getCstar()::CD,126082
126082 :: CALL :: call :: D :: v11 = p0 $this .getVolume()::CL,128027
126302 :: EXPR :: modify :: I :: p0 $this .m = p1 $m ::
126305 :: EXPR :: modify :: I :: p0 $this .n = p2 $n ::
126309 :: EXPR :: modify :: [[D :: p0 $this .A = v6::
126308 :: NORM :: declaration :: [[D :: v6 = new [][]::DD,126309
126431 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::JM,122488
126430 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.alignNucleotideGroups(java.util.List,java.util.List)::CE,126431:CD,126436:CD,126440:CD,126444:CD,126450:CD,126456:CD,126460:CD,126593:CD,126598:CD,126603:CD,126611:CD,126637:CD,126642:CD,126647:CD,126655
126436 :: NORM :: declaration :: Ljava/util/HashMap :: v5 = new java.util.HashMap::
126440 :: NORM :: declaration :: Ljava/util/HashMap :: v7 = new java.util.HashMap::
126444 :: CALL :: call :: Ljava/lang/String :: v11 = getFullAtomSequence(p1 $seqRes , v5, #(1))::JM,126456:JM,126460:CL,79548
126450 :: CALL :: call :: Ljava/lang/String :: v13 = getFullAtomSequence(p2 $atomRes , v7, #(1))::JM,126465:JM,126461:CL,79548
126456 :: CALL :: call :: Z :: v15 = v11.isEmpty()::JM,126456:JM,126460
126461 :: CALL :: call :: Z :: v18 = v13.isEmpty()::JM,126465:JM,126461
126460 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 50::CD,126461:CD,126465:CD,126472
126465 :: PRED :: IF :: Z :: if (v18 == #(0)) goto 63::CD,126472:CD,126475:CD,126480:CD,126484:CD,126489:CD,126494:CD,126499:CD,126509:CD,126514:CD,126518:CD,126523:CD,126528:CD,126533:CD,126541:CD,126546:CD,126551
126472 :: NORM :: compound :: Z :: return #(1)::DD,126431
126475 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v20 = new java.lang.StringBuilder::
126480 :: CALL :: call :: I :: v24 = v11.length()::JM,126456:JM,126460
126484 :: CALL :: call :: Ljava/lang/StringBuilder :: v26 = v20.append(v24)::
126489 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v26.append(#() ))::
126494 :: CALL :: call :: Ljava/lang/StringBuilder :: v31 = v29.append(v11)::JM,126456:JM,126460
126499 :: CALL :: call :: Ljava/lang/String :: v33 = v31.toString()::
126509 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v36 = new java.lang.StringBuilder::
126514 :: CALL :: call :: I :: v40 = v13.length()::JM,126465:JM,126461
126518 :: CALL :: call :: Ljava/lang/StringBuilder :: v42 = v36.append(v40)::
126523 :: CALL :: call :: Ljava/lang/StringBuilder :: v44 = v42.append(#() ))::
126528 :: CALL :: call :: Ljava/lang/StringBuilder :: v46 = v44.append(v13)::JM,126465:JM,126461
126533 :: CALL :: call :: Ljava/lang/String :: v48 = v46.toString()::
126541 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v51 = p0 $this .getNucleotideSequence(v11)::JM,126562:JM,126741:JM,126580:JM,126551:JM,126567:JM,126742:JM,126568:JM,126554:JM,126575:CL,128434
126546 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Sequence :: v53 = p0 $this .getNucleotideSequence(v13)::JM,126624:JM,126562:JM,126612:JM,126743:JM,126567:JM,126552:JM,126619:JM,126558:CL,128434
126551 :: PRED :: IF :: Z :: if (v51 == #(null)) goto 170::CD,126552:CD,126553
126553 :: NORM :: compound :: Z :: return #(1)::DD,126431
126552 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 173::CD,126553:CD,126554:CD,126558:CD,126562:CD,126567:CD,126656:CD,126659:CD,126665:CD,126666:CD,126674:CD,126678:CD,126742:CD,126743:JM,126741:JM,126580:JM,126568:JM,126575
126554 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v56 = v51.getCompoundSet()::JM,126562:JM,126741:JM,126580:JM,126567:JM,126742:JM,126568:JM,126554:JM,126575
126558 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v58 = v53.getCompoundSet()::JM,126624:JM,126562:JM,126612:JM,126743:JM,126567:JM,126619:JM,126558
126562 :: CALL :: call :: Z :: v60 = v56.equals(v58)::JM,126562:JM,126580:JM,126567:JM,126575:JM,126624:JM,126619
126567 :: PRED :: IF :: Z :: if (v60 != #(0)) goto 317::CF,126742:CD,126568:CD,126572:CD,126575:CD,126580:CD,126612:CD,126616:CD,126619:CD,126624:CD,126741:CD,126743:JM,126562:JM,126567:JM,126554
126568 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v62 = v51.getCompoundSet()::JM,126562:JM,126741:JM,126580:JM,126567:JM,126742:JM,126568:JM,126554:JM,126575
126572 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v64 = getRNACompoundSet()::JM,126580:JM,126575
126575 :: CALL :: call :: Z :: v66 = v62.equals(v64)::JM,126562:JM,126580:JM,126567:JM,126575
126581 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v67 = new org.biojava.nbio.core.sequence.RNASequence::DD,126741
126580 :: PRED :: IF :: Z :: if (v66 != #(0)) goto 256::CF,126741:CF,126581
126593 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v73 = new java.lang.StringBuilder::
126598 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v73.append(v11)::JM,126456:JM,126460
126603 :: CALL :: call :: Ljava/lang/String :: v79 = v77.toString()::
126611 :: NORM :: compound :: Z :: return #(1)::DD,126431
126612 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/CompoundSet :: v83 = v53.getCompoundSet()::JM,126624:JM,126562:JM,126612:JM,126743:JM,126567:JM,126619:JM,126558
126616 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AmbiguityRNACompoundSet :: v85 = getRNACompoundSet()::JM,126624:JM,126619
126619 :: CALL :: call :: Z :: v87 = v83.equals(v85)::JM,126624:JM,126562:JM,126567:JM,126619
126625 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v88 = new org.biojava.nbio.core.sequence.RNASequence::DD,126743
126624 :: PRED :: IF :: Z :: if (v87 != #(0)) goto 317::CF,126742:CF,126625:CD,126743
126637 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v94 = new java.lang.StringBuilder::
126642 :: CALL :: call :: Ljava/lang/StringBuilder :: v97 = v94.append(v13)::JM,126465:JM,126461
126647 :: CALL :: call :: Ljava/lang/String :: v99 = v97.toString()::
126655 :: NORM :: compound :: Z :: return #(1)::DD,126431
126656 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SubstitutionMatrix :: v104 = getNuc4_4()::JM,126674:JM,126711:JM,126678:JM,126666
126659 :: NORM :: declaration :: Lorg/biojava/nbio/alignment/SimpleGapPenalty :: v105 = new org.biojava.nbio.alignment.SimpleGapPenalty::JM,126674:JM,126711:JM,126678:JM,126666
126665 :: EXPR :: assign :: Lorg/biojava/nbio/alignment/Alignments$PairwiseSequenceAlignerType :: v108 = LOCAL::JM,126674:JM,126711:JM,126678:JM,126666
126666 :: CALL :: call :: Lorg/biojava/nbio/alignment/template/PairwiseSequenceAligner :: v110 = getPairwiseAligner(v101, v102, v108, v105, v104)::JM,126674:JM,126711:JM,126678:JM,126666
126674 :: CALL :: call :: Lorg/biojava/nbio/core/alignment/template/SequencePair :: v112 = v110.getPair()::JM,126674:JM,126711:JM,126678:JM,126666
126678 :: PRED :: IF :: Z :: if (v112 != #(null)) goto 408::CD,126703:CD,126706:CD,126711:CD,126716:CD,126721:CD,126729:CD,126738
126703 :: NORM :: compound :: Z :: return #(1)::DD,126431
126706 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v114 = new java.lang.StringBuilder::
126711 :: CALL :: call :: Ljava/lang/String :: v119 = v112.toString(#(100))::JM,126711
126716 :: CALL :: call :: Ljava/lang/StringBuilder :: v121 = v114.append(v119)::
126721 :: CALL :: call :: Ljava/lang/String :: v123 = v121.toString()::
126729 :: CALL :: call :: Z :: v126 = p0 $this .mapDNAChains(p1 $seqRes , p2 $atomRes , v112, v5, v7)::JM,126738:CL,128508
126738 :: NORM :: compound :: Z :: return v126::DD,126431
126741 :: EXPR :: assign :: null :: PHI v81 = v51, v67::JM,126624:JM,126562:JM,126612:JM,126743:JM,126567:JM,126619:JM,126558:DD,126742
126743 :: EXPR :: assign :: null :: PHI v102 = v53, v53, v88::CF,126656:JM,126674:JM,126711:JM,126678:JM,126666
126742 :: EXPR :: assign :: null :: PHI v101 = v51, v81, v81::CF,126743:JM,126674:JM,126711:JM,126678:JM,126666
126827 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,126828:CD,126836:CD,126840:CD,126843:CD,127226:CD,127236:CD,127237:JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126873:JM,126872:JM,126911:JM,126879:JM,126878
126828 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,122716
126836 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126836:JM,126873:JM,126872:JM,127226:JM,126911:JM,126879:JM,126878
126840 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompoundSet :: v12 = getAminoAcidCompoundSet()::JM,126884:JM,126873:JM,126843:JM,126879:JM,126878
126843 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/AminoAcidCompound :: v15 = v12.getCompoundForString(#(-))::JM,126884:JM,126873:JM,126843:JM,126879:JM,126878
126849 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v172)::JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126836:JM,126873:JM,126872:JM,127226:JM,126911:JM,126879:JM,126878
126855 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v172)::JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126836:JM,126873:JM,126872:JM,127226:JM,126911:JM,126879:JM,126878
126861 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v172)::JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126836:JM,126873:JM,126872:JM,127226:JM,126911:JM,126879:JM,126878
126867 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v172)::JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126836:JM,126873:JM,126872:JM,127226:JM,126911:JM,126879:JM,126878
126866 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126836:JM,126873:JM,126872:JM,127226:JM,126911:JM,126879:JM,126878
126873 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,126866:JM,126884:JM,126855:JM,126886:JM,126873:JM,126872:JM,126891:JM,126879:JM,126878
126872 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,126866:JM,126884:JM,126855:JM,126886:JM,126873:JM,126872:JM,126891:JM,126879:JM,126878
126879 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,126866:JM,126884:JM,126886:JM,126873:JM,126872:JM,126891:JM,126879:JM,126878
126878 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 552::CF,127235:CD,126879:CD,126884:CD,127225:CD,127226:CD,127236:CD,127237:JM,126866:JM,126886:JM,126873:JM,126872:JM,126891:JM,126878
126884 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,126886:CD,126891:CD,127225:CD,127226:CD,127235:CD,127236:CD,127237:JM,126866:JM,126884:JM,126855:JM,126873:JM,126872:JM,126879:JM,126878
126886 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,126866:JM,126884:JM,126855:JM,126886:JM,126873:JM,126872:JM,126891:JM,126879:JM,126878
126891 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 552::CF,127235:CD,126892:CD,126896:CD,126901:CD,126902:CD,126906:CD,126911:CD,126912:CD,126916:CD,126921:CD,126922:CD,126926:CD,126931:CD,126932:CD,127225:CD,127226:CD,127236:CD,127237
126892 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
126896 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,126901
126901 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,126911
126902 :: CALL :: call :: I :: v40 = v38.intValue()::JM,126911
126906 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126836:JM,126873:JM,126872:JM,127226:JM,126911:JM,126879:JM,126878
126911 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,126932
126912 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
126916 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,126921
126921 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,126931
126922 :: CALL :: call :: I :: v50 = v48.intValue()::JM,126931
126926 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126836:JM,126873:JM,126872:JM,127226:JM,126911:JM,126879:JM,126878
126931 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,126933:JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126836:JM,126873:JM,126872:JM,127226:JM,126911:JM,126879:JM,126878:CF,126932
126933 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,126936:CD,126941:CD,126946:CD,126951:CD,126956:CD,126961:CD,126966:CD,126971:CD,126976:CD,126981:CD,126986:CD,126991:CD,126996:CD,127005:CD,127009:CD,127013:CD,127225:CD,127226:CD,127235:CD,127236:CD,127237
126932 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,126933:CD,126936:CD,126941:CD,126946:CD,126951:CD,126956:CD,126961:CD,126966:CD,126971:CD,126976:CD,126981:CD,126986:CD,126991:CD,126996:CD,127225:CD,127226:CD,127235:CD,127236:CD,127237
126936 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
126941 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v172)::
126946 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
126951 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
126956 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
126961 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
126966 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
126971 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
126976 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
126981 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
126986 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
126991 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
126996 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
127005 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,127013:JM,127067:CL,56427
127009 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,127014:JM,127067:CL,56427
127013 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,127014:CD,127053
127014 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 340::CD,127053:CD,127054:CD,127058:CD,127062:CD,127067:CD,127205:CD,127209:CD,127214:CD,127215:CD,127219:CD,127225:CD,127226:CD,127235:CD,127236:CD,127237
127053 :: NORM :: compound :: Z :: return #(1)::DD,126828
127054 :: CALL :: call :: Ljava/lang/String :: v92 = v90.trim()::JM,127067
127058 :: CALL :: call :: Ljava/lang/String :: v94 = v88.trim()::JM,127067
127062 :: CALL :: call :: Z :: v96 = v92.equals(v94)::JM,127067
127067 :: PRED :: IF :: Z :: if (v96 != #(0)) goto 527::CF,127068:CD,127073:CD,127078:CD,127083:CD,127088:CD,127093:CD,127098:CD,127103:CD,127108:CD,127113:CD,127118:CD,127123:CD,127128:CD,127132:CD,127136:CD,127138:CD,127143
127068 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v97 = new java.lang.StringBuilder::
127073 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v97.append(v43)::
127078 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#(' (position ))::
127083 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v23)::
127088 :: CALL :: call :: Ljava/lang/StringBuilder :: v109 = v106.append(#() does not align with '))::
127093 :: CALL :: call :: Ljava/lang/StringBuilder :: v111 = v109.append(v53)::
127098 :: CALL :: call :: Ljava/lang/StringBuilder :: v113 = v111.append(#(' (position ))::
127103 :: CALL :: call :: Ljava/lang/StringBuilder :: v115 = v113.append(v26)::
127108 :: CALL :: call :: Ljava/lang/StringBuilder :: v118 = v115.append(#(), should be: ))::
127113 :: CALL :: call :: Ljava/lang/StringBuilder :: v120 = v118.append(v17)::
127118 :: CALL :: call :: Ljava/lang/StringBuilder :: v123 = v120.append(#( : ))::
127123 :: CALL :: call :: Ljava/lang/StringBuilder :: v125 = v123.append(v20)::
127128 :: CALL :: call :: Ljava/lang/String :: v127 = v125.toString()::
127132 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v129 = v43.getType()::JM,127138:JM,127143:CL,97141:CL,97149:CL,97133
127136 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v130 = org.biojava.nbio.structure.HetatomImpl.type::JM,127138:JM,127143
127138 :: CALL :: call :: Z :: v132 = v129.equals(v130)::JM,127138:JM,127143
127143 :: PRED :: IF :: Z :: if (v132 == #(0)) goto 493::CD,127144:CD,127148:CD,127150:CD,127155:CD,127183:CD,127184:CD,127192:CD,127197
127144 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v134 = v53.getType()::JM,127155:JM,127150:CL,97141:CL,97149:CL,97133
127148 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v135 = org.biojava.nbio.structure.HetatomImpl.type::JM,127155:JM,127150
127150 :: CALL :: call :: Z :: v137 = v134.equals(v135)::JM,127155:JM,127150
127155 :: PRED :: IF :: Z :: if (v137 == #(0)) goto 493::CD,127158:CD,127159:CD,127167:CD,127172:CD,127183:CD,127184:CD,127192:CD,127197
127159 :: CALL :: call :: Ljava/lang/String :: v141 = valueOf(v127)::
127158 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v139 = new java.lang.StringBuilder::
127167 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v139.append(#(. They seem to be het...))::
127172 :: CALL :: call :: Ljava/lang/String :: v147 = v145.toString()::
127183 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v150 = new java.lang.StringBuilder::
127184 :: CALL :: call :: Ljava/lang/String :: v152 = valueOf(v127)::
127192 :: CALL :: call :: Ljava/lang/StringBuilder :: v156 = v150.append(#(. This could be a pro...))::
127197 :: CALL :: call :: Ljava/lang/String :: v158 = v156.toString()::
127205 :: CALL :: call :: Ljava/lang/Integer :: v161 = valueOf(v23)::
127209 :: CALL :: call :: Ljava/lang/Object :: v163 = p4 $seqresIndexPosition .get(v161)::JM,127214
127215 :: CALL :: call :: I :: v166 = v164.intValue()::
127214 :: EXPR :: assign :: Ljava/lang/Object :: v164 = CHECKCAST v163::
127219 :: CALL :: call :: Ljava/lang/Object :: v168 = p1 $seqResGroups .set(v166, v53)::JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126836:JM,126873:JM,126872:JM,127226:JM,126911:JM,126879:JM,126878
127225 :: EXPR :: assign :: Ljava/lang/Object :: v170 = v172 + #(1)::DD,127237:CF,127236
127226 :: PRED :: IF :: Z :: if (v172 <= v9) goto 32::CD,126849:CD,126855:CD,126861:CD,126866:CD,126867:CD,126872:CD,126873:CD,126878:CD,127234:CD,127235:JM,126884:JM,126886:JM,126891:JM,126931:JM,126836:JM,127226:JM,126911:JM,126879
127235 :: EXPR :: assign :: null :: PHI v169 = v171, v171, v171, v171, #(0)::DD,127236:CF,127225
127234 :: NORM :: compound :: Z :: return v171::DD,126828
127237 :: EXPR :: assign :: null :: PHI v172 = #(1), v170::JM,126849:JM,126884:JM,126855:JM,126886:JM,126891:JM,126861:JM,126867:JM,126931:JM,126866:JM,126873:JM,126872:JM,126879:JM,126878:JM,126911:DD,127225:DD,127226
127236 :: EXPR :: assign :: null :: PHI v171 = #(1), v169::CF,127237:DD,127234:DD,127235
127549 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::CE,127550:CD,127557:CD,127563
127550 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(java.lang.Object,java.lang.Object)::
127557 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,127563:CL,129080
127563 :: NORM :: compound :: I :: return v8::CF,127550
127567 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::CE,127568:CD,127575:CD,127581
127568 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.Object,java.lang.Object)::
127575 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,127581:CL,129135
127581 :: NORM :: compound :: I :: return v8::CF,127568
127585 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::CE,127586:CD,127593:CD,127599
127586 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.Object,java.lang.Object)::
127593 :: CALL :: call :: I :: v8 = p0 $null .compare(v5, v6)::JM,127599:CL,129149
127599 :: NORM :: compound :: I :: return v8::CF,127586
127603 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFile()::CD,127606:CD,127608:CD,127610:CD,127613:CD,127616:CD,127624:CD,127629:CD,127634:CD,127648
127606 :: CALL :: call :: V :: initPath()::CL,129163
127608 :: CALL :: call :: V :: initServerName()::CL,129186
127610 :: CALL :: call :: Ljava/lang/String :: v5 = getLocalFileName()::CL,129201
127613 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v6 = new java.lang.StringBuilder::
127616 :: CALL :: call :: Ljava/lang/String :: v9 = valueOf(v7)::
127624 :: CALL :: call :: Ljava/lang/StringBuilder :: v13 = v6.append(#(/))::
127629 :: CALL :: call :: Ljava/lang/StringBuilder :: v16 = v13.append(#(pub/pdb/data/monomers...))::
127634 :: CALL :: call :: Ljava/lang/String :: v18 = v16.toString()::
127648 :: CALL :: call :: V :: downloadFileFromRemote(v19, v21)::CL,129259
127693 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::CF,127694:CD,127699:CD,127704
127694 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.1.accept(java.io.File,java.lang.String)::
127699 :: CALL :: call :: Z :: v7 = p2 $file .endsWith(#(.cif.gz))::JM,127699:JM,127704
127704 :: NORM :: compound :: Z :: return v7::CF,127694
127707 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.DownloadChemCompProvider.writeID(java.lang.String,java.lang.String)::CD,127713:CD,127717:CD,127736:CD,127740:CD,127743:CD,127749
127713 :: CALL :: call :: Ljava/lang/String :: v6 = getLocalFileName(p2 $currentID )::CL,120052
127717 :: NORM :: declaration :: Ljava/io/PrintWriter :: v8 = new java.io.PrintWriter::DD,127743
127736 :: CALL :: call :: V :: v8.print(v15)::
127740 :: CALL :: call :: V :: v8.flush()::
127743 :: PRED :: IF :: Z :: if (v8 == #(null)) goto 108::CD,127744
127744 :: CALL :: call :: V :: v8.close()::
127749 :: CALL :: call :: V :: v8.close()::
127950 :: NORM :: declaration :: Ljava/util/ArrayList :: v4 = new java.util.ArrayList::DD,127954
127954 :: EXPR :: modify :: Ljava/util/List :: p0 $this .descriptors = v4::
127957 :: NORM :: declaration :: Ljava/util/ArrayList :: v6 = new java.util.ArrayList::DD,127961
127961 :: EXPR :: modify :: Ljava/util/List :: p0 $this .bonds = v6::
127964 :: NORM :: declaration :: Ljava/util/ArrayList :: v8 = new java.util.ArrayList::DD,127968
127968 :: EXPR :: modify :: Ljava/util/List :: p0 $this .atoms = v8::
127979 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setOne_letter_code(java.lang.String)::CD,127987:JM,127984
127984 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .one_letter_code = p1 $one_letter_code ::
127987 :: CALL :: call :: V :: p0 $this .setStandardFlag()::CL,129501
127994 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setThree_letter_code(java.lang.String)::JM,127999
127999 :: EXPR :: modify :: Ljava/lang/String :: p0 $this .three_letter_code = p1 $three_letter_code ::
128005 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setPolymerType(org.biojava.nbio.structure.io.mmcif.chem.PolymerType)::JM,128010
128010 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: p0 $this .polymerType = p1 $polymerType ::
128016 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setResidueType(org.biojava.nbio.structure.io.mmcif.chem.ResidueType)::JM,128021
128021 :: EXPR :: modify :: Lorg/biojava/nbio/structure/io/mmcif/chem/ResidueType :: p0 $this .residueType = p1 $residueType ::
128027 :: ENTR :: entry :: null :: org.biojava.nbio.structure.xtal.CrystalCell.getVolume()::CD,128034:CD,128035
128031 :: EXPR :: reference :: D :: v3 = p0 $this .volume::DD,128034
128035 :: PRED :: IF :: Z :: if (v5 == #(0)) goto 16::CD,128046:CD,128050:CD,128054:CD,128061:CD,128065:CD,128066:CD,128070:CD,128077:CD,128081:CD,128082:CD,128086:CD,128093:CD,128097:CD,128098:CD,128102:CD,128106:CD,128110:CD,128114:CD,128118:CD,128122:CD,128123:CD,128124:CD,128128
128034 :: EXPR :: assign :: Z :: v5 = v3 < #(0.0 d)::DD,128035
128040 :: EXPR :: reference :: D :: v7 = p0 $this .a::DD,128046
128043 :: EXPR :: reference :: D :: v8 = p0 $this .b::DD,128046
128047 :: EXPR :: reference :: D :: v10 = p0 $this .c::DD,128050
128046 :: EXPR :: assign :: Ljava/lang/Object :: v9 = v7 * v8::DD,128050
128051 :: EXPR :: reference :: D :: v13 = p0 $this .alphaRad::JM,128065:JM,128054
128050 :: EXPR :: assign :: Ljava/lang/Object :: v11 = v9 * v10::DD,128128
128054 :: CALL :: call :: D :: v15 = cos(v13)::JM,128065:JM,128054
128058 :: EXPR :: reference :: D :: v16 = p0 $this .alphaRad::JM,128065:JM,128061
128061 :: CALL :: call :: D :: v18 = cos(v16)::JM,128065:JM,128061
128065 :: EXPR :: assign :: Ljava/lang/Object :: v19 = v15 * v18::CF,128066
128067 :: EXPR :: reference :: D :: v21 = p0 $this .betaRad::JM,128081:JM,128070
128066 :: EXPR :: assign :: Ljava/lang/Object :: v20 = #(1.0 d) - v19::DD,128082
128070 :: CALL :: call :: D :: v23 = cos(v21)::JM,128081:JM,128070
128074 :: EXPR :: reference :: D :: v24 = p0 $this .betaRad::JM,128081:JM,128077
128077 :: CALL :: call :: D :: v26 = cos(v24)::JM,128081:JM,128077
128081 :: EXPR :: assign :: Ljava/lang/Object :: v27 = v23 * v26::CF,128082
128083 :: EXPR :: reference :: D :: v29 = p0 $this .gammaRad::JM,128097:JM,128086
128082 :: EXPR :: assign :: Ljava/lang/Object :: v28 = v20 - v27::DD,128098
128086 :: CALL :: call :: D :: v31 = cos(v29)::JM,128097:JM,128086
128090 :: EXPR :: reference :: D :: v32 = p0 $this .gammaRad::JM,128097:JM,128093
128093 :: CALL :: call :: D :: v34 = cos(v32)::JM,128097:JM,128093
128097 :: EXPR :: assign :: Ljava/lang/Object :: v35 = v31 * v34::CF,128098
128099 :: EXPR :: reference :: D :: v38 = p0 $this .alphaRad::JM,128102:JM,128106
128098 :: EXPR :: assign :: Ljava/lang/Object :: v36 = v28 - v35::DD,128123
128102 :: CALL :: call :: D :: v40 = cos(v38)::JM,128102:JM,128106
128107 :: EXPR :: reference :: D :: v42 = p0 $this .betaRad::JM,128114:JM,128110
128106 :: EXPR :: assign :: Ljava/lang/Object :: v41 = #(2.0 d) * v40::DD,128114
128110 :: CALL :: call :: D :: v44 = cos(v42)::JM,128114:JM,128110
128115 :: EXPR :: reference :: D :: v46 = p0 $this .gammaRad::JM,128118:JM,128122
128114 :: EXPR :: assign :: Ljava/lang/Object :: v45 = v41 * v44::DD,128122
128118 :: CALL :: call :: D :: v48 = cos(v46)::JM,128118:JM,128122
128123 :: EXPR :: assign :: Ljava/lang/Object :: v50 = v36 + v49::JM,128128:JM,128124
128122 :: EXPR :: assign :: Ljava/lang/Object :: v49 = v45 * v48::CF,128123
128124 :: CALL :: call :: D :: v52 = sqrt(v50)::JM,128128:JM,128124
128129 :: EXPR :: modify :: D :: p0 $this .volume = v53::
128128 :: EXPR :: assign :: Ljava/lang/Object :: v53 = v11 * v52::DD,128129
128435 :: EXIT :: exit :: Lorg/biojava/nbio/core/sequence/template/Sequence :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::JM,126562:JM,126741:JM,126580:JM,126551:JM,126567:JM,126742:JM,126568:JM,126554:JM,126575:JM,126624:JM,126612:JM,126743:JM,126552:JM,126619:JM,126558
128434 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.getNucleotideSequence(java.lang.String)::CE,128435:CD,128439:CD,128449:CD,128459:CD,128478:CD,128483:CD,128488:CD,128496:CD,128497:CD,128501
128439 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v5 = new org.biojava.nbio.core.sequence.DNASequence::DD,128501
128449 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/RNASequence :: v10 = new org.biojava.nbio.core.sequence.RNASequence::DD,128501
128459 :: NORM :: declaration :: Lorg/biojava/nbio/core/sequence/DNASequence :: v15 = new org.biojava.nbio.core.sequence.DNASequence::DD,128501
128478 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v25 = new java.lang.StringBuilder::
128483 :: CALL :: call :: Ljava/lang/StringBuilder :: v29 = v25.append(p1 $seq )::
128488 :: CALL :: call :: Ljava/lang/String :: v31 = v29.toString()::
128497 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return v34::DD,128435
128496 :: NORM :: compound :: Lorg/biojava/nbio/core/sequence/template/Sequence :: return #(null)::DD,128435
128501 :: EXPR :: assign :: null :: PHI v34 = v5, v10, v15::CF,128497
128509 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::JM,126738
128508 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.SeqRes2AtomAligner.mapDNAChains(java.util.List,java.util.List,org.biojava.nbio.core.alignment.template.SequencePair,java.util.Map,java.util.Map)::CE,128509:CD,128517:CD,128521:CD,128524:CD,128923:CD,128931:CD,128933:CD,128934:JM,128547:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128592:JM,128560:JM,128530:JM,128565:JM,128567:JM,128536:JM,128572:JM,128542
128517 :: CALL :: call :: I :: v9 = p3 $pair .getLength()::JM,128547:JM,128517:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128560:JM,128592:JM,128530:JM,128565:JM,128567:JM,128536:JM,128923:JM,128572:JM,128542
128521 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/compound/DNACompoundSet :: v12 = getDNACompoundSet()::JM,128560:JM,128565:JM,128554:JM,128524:JM,128559
128524 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v15 = v12.getCompoundForString(#(-))::JM,128560:JM,128565:JM,128554:JM,128524:JM,128559
128530 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v17 = p3 $pair .getCompoundAt(#(1), v194)::JM,128547:JM,128517:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128560:JM,128592:JM,128530:JM,128565:JM,128567:JM,128536:JM,128923:JM,128572:JM,128542
128536 :: CALL :: call :: Lorg/biojava/nbio/core/sequence/template/Compound :: v20 = p3 $pair .getCompoundAt(#(2), v194)::JM,128547:JM,128517:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128560:JM,128592:JM,128530:JM,128565:JM,128567:JM,128536:JM,128923:JM,128572:JM,128542
128542 :: CALL :: call :: I :: v22 = p3 $pair .getIndexInQueryAt(v194)::JM,128547:JM,128517:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128560:JM,128592:JM,128530:JM,128565:JM,128567:JM,128536:JM,128923:JM,128572:JM,128542
128547 :: EXPR :: assign :: Ljava/lang/Object :: v23 = v22 - #(1)::JM,128547:JM,128517:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128560:JM,128592:JM,128530:JM,128565:JM,128567:JM,128536:JM,128923:JM,128572:JM,128542
128548 :: CALL :: call :: I :: v25 = p3 $pair .getIndexInTargetAt(v194)::JM,128547:JM,128517:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128560:JM,128592:JM,128530:JM,128565:JM,128567:JM,128536:JM,128923:JM,128572:JM,128542
128553 :: EXPR :: assign :: Ljava/lang/Object :: v26 = v25 - #(1)::JM,128560:JM,128547:JM,128565:JM,128567:JM,128553:JM,128536:JM,128554:JM,128572:JM,128559
128554 :: CALL :: call :: Z :: v28 = v17.equals(v15)::JM,128560:JM,128547:JM,128565:JM,128567:JM,128553:JM,128536:JM,128554:JM,128572:JM,128559
128559 :: PRED :: IF :: Z :: if (v28 != #(0)) goto 567::CF,128932:CD,128560:CD,128565:JM,128547:JM,128567:JM,128553:JM,128554:JM,128572:JM,128559
128560 :: CALL :: call :: Z :: v31 = v20.equals(v15)::JM,128560:JM,128547:JM,128565:JM,128567:JM,128553:JM,128554:JM,128572:JM,128559
128565 :: PRED :: IF :: Z :: if (v31 == #(0)) goto 101::CD,128567:CD,128572:CD,128932:JM,128560:JM,128547:JM,128565:JM,128553:JM,128536:JM,128554:JM,128559
128567 :: CALL :: call :: Z :: v33 = v17.equals(v20)::JM,128560:JM,128547:JM,128565:JM,128567:JM,128553:JM,128536:JM,128554:JM,128572:JM,128559
128573 :: CALL :: call :: Ljava/lang/Integer :: v35 = valueOf(v23)::
128572 :: PRED :: IF :: Z :: if (v33 == #(0)) goto 567::CF,128932:CD,128573:CD,128577:CD,128582:CD,128583:CD,128587:CD,128592:CD,128593:CD,128597:CD,128602:CD,128603:CD,128607:CD,128612:CD,128613
128577 :: CALL :: call :: Ljava/lang/Object :: v37 = p4 $seqresIndexPosition .get(v35)::JM,128582
128583 :: CALL :: call :: I :: v40 = v38.intValue()::JM,128592
128582 :: EXPR :: assign :: Ljava/lang/Object :: v38 = CHECKCAST v37::JM,128592
128587 :: CALL :: call :: Ljava/lang/Object :: v42 = p1 $seqResGroups .get(v40)::JM,128547:JM,128517:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128592:JM,128560:JM,128530:JM,128565:JM,128567:JM,128536:JM,128923:JM,128572:JM,128542
128593 :: CALL :: call :: Ljava/lang/Integer :: v45 = valueOf(v26)::
128592 :: EXPR :: assign :: Ljava/lang/Object :: v43 = CHECKCAST v42::DD,128613
128597 :: CALL :: call :: Ljava/lang/Object :: v47 = p5 $atomIndexPosition .get(v45)::JM,128602
128603 :: CALL :: call :: I :: v50 = v48.intValue()::JM,128612
128602 :: EXPR :: assign :: Ljava/lang/Object :: v48 = CHECKCAST v47::JM,128612
128607 :: CALL :: call :: Ljava/lang/Object :: v52 = p2 $atomRes .get(v50)::JM,128547:JM,128517:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128560:JM,128592:JM,128530:JM,128565:JM,128567:JM,128536:JM,128923:JM,128572:JM,128542
128613 :: PRED :: IF :: Z :: if (v43 == #(null)) goto 175::CD,128614:CD,128617:CD,128622:CD,128627:CD,128632:CD,128637:CD,128642:CD,128647:CD,128652:CD,128657:CD,128662:CD,128667:CD,128672:CD,128677:CD,128932
128612 :: EXPR :: assign :: Ljava/lang/Object :: v53 = CHECKCAST v52::DD,128614:JM,128547:JM,128517:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128592:JM,128560:JM,128530:JM,128565:JM,128567:JM,128536:JM,128923:JM,128572:JM,128542:CF,128613
128614 :: PRED :: IF :: Z :: if (v53 != #(null)) goto 258::CD,128617:CD,128622:CD,128627:CD,128632:CD,128637:CD,128642:CD,128647:CD,128652:CD,128657:CD,128662:CD,128667:CD,128672:CD,128677:CD,128686:CD,128690:CD,128694:CD,128752:CD,128757:CD,128902:CD,128906:CD,128911:CD,128912:CD,128916:CD,128932
128617 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v56 = new java.lang.StringBuilder::
128622 :: CALL :: call :: Ljava/lang/StringBuilder :: v60 = v56.append(v194)::
128627 :: CALL :: call :: Ljava/lang/StringBuilder :: v63 = v60.append(#(:))::
128632 :: CALL :: call :: Ljava/lang/StringBuilder :: v65 = v63.append(v17)::
128637 :: CALL :: call :: Ljava/lang/StringBuilder :: v68 = v65.append(#( ))::
128642 :: CALL :: call :: Ljava/lang/StringBuilder :: v70 = v68.append(v23)::
128647 :: CALL :: call :: Ljava/lang/StringBuilder :: v72 = v70.append(#( ))::
128652 :: CALL :: call :: Ljava/lang/StringBuilder :: v74 = v72.append(v43)::
128657 :: CALL :: call :: Ljava/lang/StringBuilder :: v77 = v74.append(#( atom: ))::
128662 :: CALL :: call :: Ljava/lang/StringBuilder :: v79 = v77.append(v26)::
128667 :: CALL :: call :: Ljava/lang/StringBuilder :: v81 = v79.append(#( ))::
128672 :: CALL :: call :: Ljava/lang/StringBuilder :: v83 = v81.append(v53)::
128677 :: CALL :: call :: Ljava/lang/String :: v85 = v83.toString()::
128686 :: CALL :: call :: Ljava/lang/String :: v88 = v43.getPDBName()::JM,128771:JM,128757:JM,128694:CL,56427
128690 :: CALL :: call :: Ljava/lang/String :: v90 = v53.getPDBName()::JM,128771:JM,128757:JM,128695:CL,56427
128695 :: PRED :: IF :: Z :: if (v90 != #(null)) goto 357::CD,128698:CD,128703:CD,128708:CD,128713:CD,128718:CD,128723:CD,128728:CD,128733:CD,128738:JM,128771:JM,128757
128694 :: PRED :: IF :: Z :: if (v88 == #(null)) goto 284::CD,128695:CD,128698:CD,128703:CD,128708:CD,128713:CD,128718:CD,128723:CD,128728:CD,128733:CD,128738
128698 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v92 = new java.lang.StringBuilder::
128703 :: CALL :: call :: Ljava/lang/StringBuilder :: v96 = v92.append(v23)::
128708 :: CALL :: call :: Ljava/lang/StringBuilder :: v99 = v96.append(#( when trying to align ))::
128713 :: CALL :: call :: Ljava/lang/StringBuilder :: v101 = v99.append(v43)::
128718 :: CALL :: call :: Ljava/lang/StringBuilder :: v104 = v101.append(#( and ))::
128723 :: CALL :: call :: Ljava/lang/StringBuilder :: v106 = v104.append(v53)::
128728 :: CALL :: call :: Ljava/lang/StringBuilder :: v108 = v106.append(#( ))::
128733 :: CALL :: call :: Ljava/lang/StringBuilder :: v110 = v108.append(v26)::
128738 :: CALL :: call :: Ljava/lang/String :: v112 = v110.toString()::
128752 :: CALL :: call :: Z :: v118 = v90.equals(v88)::JM,128771:JM,128757
128757 :: PRED :: IF :: Z :: if (v118 != #(0)) goto 542::CD,128758:CD,128762:CD,128766:CD,128771:JM,128757
128758 :: CALL :: call :: Ljava/lang/String :: v120 = v90.trim()::JM,128771:JM,128757
128762 :: CALL :: call :: Ljava/lang/String :: v122 = v88.trim()::JM,128771:JM,128757
128766 :: CALL :: call :: Z :: v124 = v120.equals(v122)::JM,128771
128771 :: PRED :: IF :: Z :: if (v124 != #(0)) goto 542::CD,128774:CD,128778:CD,128783:CD,128788:CD,128793:CD,128798:CD,128803:CD,128808:CD,128813:CD,128818:CD,128823:CD,128828:CD,128833:CD,128841:CD,128845:CD,128847:CD,128852
128774 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v126 = new java.lang.StringBuilder::
128778 :: CALL :: call :: Ljava/lang/StringBuilder :: v129 = v126.append(v43)::
128783 :: CALL :: call :: Ljava/lang/StringBuilder :: v131 = v129.append(#( ))::
128788 :: CALL :: call :: Ljava/lang/StringBuilder :: v133 = v131.append(v23)::
128793 :: CALL :: call :: Ljava/lang/StringBuilder :: v136 = v133.append(#( does not align with ))::
128798 :: CALL :: call :: Ljava/lang/StringBuilder :: v138 = v136.append(v53)::
128803 :: CALL :: call :: Ljava/lang/StringBuilder :: v140 = v138.append(#( ))::
128808 :: CALL :: call :: Ljava/lang/StringBuilder :: v142 = v140.append(v26)::
128813 :: CALL :: call :: Ljava/lang/StringBuilder :: v145 = v142.append(#( should be: ))::
128818 :: CALL :: call :: Ljava/lang/StringBuilder :: v147 = v145.append(v17)::
128823 :: CALL :: call :: Ljava/lang/StringBuilder :: v150 = v147.append(#( : ))::
128828 :: CALL :: call :: Ljava/lang/StringBuilder :: v152 = v150.append(v20)::
128833 :: CALL :: call :: Ljava/lang/String :: v154 = v152.toString()::
128841 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v157 = v43.getType()::JM,128852:JM,128847:CL,97141:CL,97149:CL,97133
128845 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v158 = org.biojava.nbio.structure.HetatomImpl.type::JM,128852:JM,128847
128847 :: CALL :: call :: Z :: v160 = v157.equals(v158)::JM,128852:JM,128847
128853 :: CALL :: call :: Lorg/biojava/nbio/structure/GroupType :: v162 = v53.getType()::JM,128864:JM,128859:CL,97141:CL,97149:CL,97133
128852 :: PRED :: IF :: Z :: if (v160 == #(0)) goto 501::CD,128853:CD,128857:CD,128859:CD,128864:CD,128874:CD,128879:CD,128884:CD,128889:CD,128894
128857 :: EXPR :: reference :: Lorg/biojava/nbio/structure/GroupType :: v163 = org.biojava.nbio.structure.HetatomImpl.type::JM,128864:JM,128859
128859 :: CALL :: call :: Z :: v165 = v162.equals(v163)::JM,128864:JM,128859
128864 :: PRED :: IF :: Z :: if (v165 == #(0)) goto 501::CD,128874:CD,128879:CD,128884:CD,128889:CD,128894
128874 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v170 = new java.lang.StringBuilder::
128879 :: CALL :: call :: Ljava/lang/StringBuilder :: v174 = v170.append(v43)::
128884 :: CALL :: call :: Ljava/lang/StringBuilder :: v176 = v174.append(#( ))::
128889 :: CALL :: call :: Ljava/lang/StringBuilder :: v178 = v176.append(v53)::
128894 :: CALL :: call :: Ljava/lang/String :: v180 = v178.toString()::
128902 :: CALL :: call :: Ljava/lang/Integer :: v183 = valueOf(v23)::
128906 :: CALL :: call :: Ljava/lang/Object :: v185 = p4 $seqresIndexPosition .get(v183)::JM,128911
128911 :: EXPR :: assign :: Ljava/lang/Object :: v186 = CHECKCAST v185::
128912 :: CALL :: call :: I :: v188 = v186.intValue()::
128916 :: CALL :: call :: Ljava/lang/Object :: v190 = p1 $seqResGroups .set(v188, v53)::JM,128547:JM,128517:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128592:JM,128560:JM,128530:JM,128565:JM,128567:JM,128536:JM,128923:JM,128572:JM,128542
128923 :: PRED :: IF :: Z :: if (v194 <= v9) goto 32::CD,128530:CD,128536:CD,128542:CD,128547:CD,128548:CD,128553:CD,128554:CD,128559:CD,128922:CD,128932:CD,128933:CD,128934:JM,128517:JM,128612:JM,128560:JM,128592:JM,128565:JM,128567:JM,128923:JM,128572
128922 :: EXPR :: assign :: Ljava/lang/Object :: v192 = v194 + #(1)::DD,128934:CF,128933
128931 :: NORM :: compound :: Z :: return v193::DD,128509
128933 :: EXPR :: assign :: null :: PHI v193 = #(1), v191::CF,128934:DD,128931:DD,128932
128932 :: EXPR :: assign :: null :: PHI v191 = v193, v193, v193, v193, #(0)::DD,128933:CF,128922
128934 :: EXPR :: assign :: null :: PHI v194 = #(1), v192::JM,128547:JM,128548:JM,128612:JM,128553:JM,128554:JM,128559:JM,128560:JM,128530:JM,128565:JM,128567:JM,128536:JM,128572:JM,128542:JM,128592:DD,128922:DD,128923
129081 :: EXIT :: exit :: I :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::JM,127563
129080 :: ENTR :: entry :: null :: org.biojava.nbio.structure.quaternary.BiologicalAssemblyBuilder.1.compare(org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation,org.biojava.nbio.structure.quaternary.BiologicalAssemblyTransformation)::CE,129081:CD,129086:CD,129090:CD,129094:CD,129099:JM,129124:JM,129115:JM,129103
129086 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $t1 .getId()::JM,129090:JM,129124:JM,129094:JM,129115:JM,129099:JM,129103:JM,129086
129090 :: CALL :: call :: Ljava/lang/String :: v8 = p2 $t2 .getId()::JM,129090:JM,129124:JM,129094:JM,129115:JM,129099:JM,129103:JM,129086
129094 :: CALL :: call :: Z :: v10 = v6.equals(v8)::JM,129124:JM,129094:JM,129099
129099 :: PRED :: IF :: Z :: if (v10 == #(0)) goto 43::CD,129103:CD,129107:CD,129115:CD,129119:CD,129124:CD,129125:CD,129126
129100 :: EXPR :: reference :: Ljava/util/List :: v12 = p0 $this .val$chainIds::JM,129124
129103 :: CALL :: call :: Ljava/lang/String :: v14 = p1 $t1 .getChainId()::JM,129090:JM,129124:JM,129094:JM,129115:JM,129099:JM,129103:JM,129086
129107 :: CALL :: call :: I :: v16 = v12.indexOf(v14)::JM,129124:JM,129094:JM,129099
129112 :: EXPR :: reference :: Ljava/util/List :: v17 = p0 $this .val$chainIds::JM,129124
129115 :: CALL :: call :: Ljava/lang/String :: v19 = p2 $t2 .getChainId()::JM,129090:JM,129124:JM,129094:JM,129115:JM,129099:JM,129103:JM,129086
129119 :: CALL :: call :: I :: v21 = v17.indexOf(v19)::JM,129124:JM,129094:JM,129099
129125 :: NORM :: compound :: I :: return v22::CF,129081
129124 :: EXPR :: assign :: Ljava/lang/Object :: v22 = v16 - v21::CF,129125
129126 :: NORM :: compound :: I :: return #(0)::CF,129081
129135 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::CE,129136:CD,129141:CD,129146
129136 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.2.compare(java.lang.String,java.lang.String)::JM,127581
129141 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,129146
129146 :: NORM :: compound :: I :: return v6::CF,129136
129149 :: ENTR :: entry :: null :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::CE,129150:CD,129155:CD,129160
129150 :: EXIT :: exit :: I :: org.biojava.nbio.structure.PDBStatus.1.compare(java.lang.String,java.lang.String)::JM,127599
129155 :: CALL :: call :: I :: v6 = p2 $o2 .compareToIgnoreCase(p1 $o1 )::JM,129160
129160 :: NORM :: compound :: I :: return v6::CF,129150
129163 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initPath()::CD,129166:CD,129168
129166 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.path::DD,129168
129168 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 21::JM,29555:JM,29548
129186 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.initServerName()::CD,129189:CD,129191
129189 :: EXPR :: reference :: Ljava/lang/String :: v2 = org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.serverName::DD,129191
129191 :: PRED :: IF :: Z :: if (v2 != #(null)) goto 12::CD,129192
129192 :: CALL :: call :: Ljava/lang/String :: v5 = getServerName()::CL,43924
129201 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.getLocalFileName()::CD,129212:CD,129216
129212 :: CALL :: call :: Z :: v7 = v2.exists()::JM,129216
129216 :: PRED :: IF :: Z :: if (v7 != #(0)) goto 39::CD,129228
129228 :: CALL :: call :: Z :: v15 = v2.mkdir()::
129259 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.AllChemCompProvider.downloadFileFromRemote(java.net.URL,java.io.File)::CD,129266:CD,129271:CD,129276:CD,129281:CD,129286
129266 :: NORM :: declaration :: Ljava/lang/StringBuilder :: v5 = new java.lang.StringBuilder::
129271 :: CALL :: call :: Ljava/lang/StringBuilder :: v9 = v5.append(p1 $remoteURL )::
129276 :: CALL :: call :: Ljava/lang/StringBuilder :: v12 = v9.append(#( to: ))::
129281 :: CALL :: call :: Ljava/lang/StringBuilder :: v14 = v12.append(p2 $localFile )::
129286 :: CALL :: call :: Ljava/lang/String :: v16 = v14.toString()::
129501 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.model.ChemComp.setStandardFlag()::CD,129505
129505 :: CALL :: call :: Z :: v4 = isStandardChemComp(p0 $this )::JM,129509:CL,129958
129509 :: EXPR :: modify :: Z :: p0 $this .standard = v4::
129959 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,129509
129958 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.isStandardChemComp(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,129959:CD,129962:CD,129966:CD,129970:CD,129974
129962 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getMon_nstd_parent_comp_id()::JM,129975:JM,129974:JM,129980:CL,103580
129966 :: CALL :: call :: Ljava/lang/String :: v6 = p1 $cc .getOne_letter_code()::JM,129987:JM,129981:CL,97695
129970 :: CALL :: call :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v8 = p1 $cc .getPolymerType()::JM,130002:JM,129990:JM,129993:JM,130010:CL,97686
129975 :: CALL :: call :: Z :: v12 = v4.equals(#(?))::JM,129975:JM,129980
129974 :: PRED :: IF :: Z :: if (v4 == #(null)) goto 29::CD,129975:CD,129980:CD,129981
129981 :: PRED :: IF :: Z :: if (v6 == #(null)) goto 88::CD,129982:CD,129987:CD,130017
129980 :: PRED :: IF :: Z :: if (v12 == #(0)) goto 88::CD,129981:CD,130017
129982 :: CALL :: call :: Z :: v15 = v6.equals(#(?))::JM,129987
129987 :: PRED :: IF :: Z :: if (v15 != #(0)) goto 88::CD,129988:CD,129990:CD,130017
129988 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v16 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.peptide::CF,129990
129991 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v17 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dpeptide::CF,129993
129990 :: PRED :: IF :: Z :: if (v8 == v16) goto 57::CD,129991:CD,129993:CD,129994:CD,129999
129993 :: PRED :: IF :: Z :: if (v8 != v17) goto 62::CD,129994:CD,129999:CD,130000:CD,130002
129994 :: CALL :: call :: Z :: v25 = performPeptideCheck(p1 $cc , v6)::JM,129999:CL,130252
129999 :: NORM :: compound :: Z :: return v25::DD,129959
130000 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v18 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.rna::CF,130002
130003 :: CALL :: call :: Z :: v23 = performRNACheck(p1 $cc )::JM,130007:CL,130291
130002 :: PRED :: IF :: Z :: if (v8 != v18) goto 74::CD,130003:CD,130007:CD,130008:CD,130010
130007 :: NORM :: compound :: Z :: return v23::DD,129959
130008 :: EXPR :: reference :: Lorg/biojava/nbio/structure/io/mmcif/chem/PolymerType :: v19 = org.biojava.nbio.structure.io.mmcif.chem.PolymerType.dna::CF,130010
130011 :: CALL :: call :: Z :: v21 = performDNACheck(p1 $cc )::JM,130015:CL,130310
130010 :: PRED :: IF :: Z :: if (v8 != v19) goto 86::CD,130011:CD,130015:CD,130016
130015 :: NORM :: compound :: Z :: return v21::DD,129959
130017 :: NORM :: compound :: Z :: return #(0)::DD,129959
130016 :: NORM :: compound :: Z :: return #(0)::DD,129959
130253 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::JM,129999
130252 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performPeptideCheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp,java.lang.String)::CE,130253:CD,130257:CD,130259:CD,130263:CD,130268
130257 :: EXPR :: reference :: Ljava/lang/Character :: v4 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_ONE_LETTER_CODE::JM,130268
130259 :: CALL :: call :: Ljava/lang/String :: v6 = v4.toString()::JM,130268
130263 :: CALL :: call :: Z :: v8 = p2 $one .equals(v6)::JM,130268
130269 :: NORM :: compound :: Z :: return #(0)::DD,130253
130268 :: PRED :: IF :: Z :: if (v8 == #(0)) goto 16::CD,130269:CD,130274:CD,130278
130274 :: CALL :: call :: Ljava/lang/Character :: v13 = getAminoOneLetter(v11)::JM,130278:CL,132505
130279 :: NORM :: compound :: Z :: return #(0)::DD,130253
130278 :: PRED :: IF :: Z :: if (v13 != #(null)) goto 30::CD,130279:CD,130280
130280 :: NORM :: compound :: Z :: return #(1)::DD,130253
130291 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,130292:CD,130295:CD,130299:CD,130303
130292 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performRNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,130007
130295 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,130303:CL,102526
130299 :: CALL :: call :: I :: v6 = v4.length()::JM,130303
130303 :: PRED :: IF :: Z :: if (v6 != #(1)) goto 14::CD,130304:CD,130305
130305 :: NORM :: compound :: Z :: return #(0)::CF,130292
130304 :: NORM :: compound :: Z :: return #(1)::CF,130292
130311 :: EXIT :: exit :: Z :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::JM,130015
130310 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.performDNACheck(org.biojava.nbio.structure.io.mmcif.model.ChemComp)::CE,130311:CD,130314:CD,130318:CD,130320:CD,130324:CD,130329
130314 :: CALL :: call :: Ljava/lang/String :: v4 = p1 $cc .getId()::JM,130329:CL,102526
130318 :: EXPR :: reference :: Ljava/lang/Character :: v5 = org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.UNKNOWN_NUCLEOTIDE::JM,130329
130320 :: CALL :: call :: Ljava/lang/String :: v7 = v5.toString()::JM,130329
130324 :: CALL :: call :: Z :: v9 = v4.equals(v7)::JM,130329
130329 :: PRED :: IF :: Z :: if (v9 == #(0)) goto 19::CD,130330:CD,130335:CD,130339
130330 :: NORM :: compound :: Z :: return #(0)::DD,130311
130335 :: CALL :: call :: Ljava/lang/Character :: v14 = getDNAOneLetter(v12)::JM,130339:CL,132520
130339 :: PRED :: IF :: Z :: if (v14 != #(null)) goto 33::CD,130340:CD,130341
130341 :: NORM :: compound :: Z :: return #(1)::DD,130311
130340 :: NORM :: compound :: Z :: return #(0)::DD,130311
132506 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::JM,130278
132505 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getAminoOneLetter(java.lang.String)::CE,132506:CD,132511:CD,132516:CD,132517
132511 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,132516
132516 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,132517
132517 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,132506
132520 :: ENTR :: entry :: null :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::CE,132521:CD,132526:CD,132531:CD,132532
132521 :: EXIT :: exit :: Ljava/lang/Character :: org.biojava.nbio.structure.io.mmcif.chem.ChemCompTools.getDNAOneLetter(java.lang.String)::JM,130339
132526 :: CALL :: call :: Ljava/lang/Object :: v5 = v3.get(p1 $chemCompId )::JM,132531
132531 :: EXPR :: assign :: Ljava/lang/Object :: v6 = CHECKCAST v5::CF,132532
132532 :: NORM :: compound :: Ljava/lang/Character :: return v6::DD,132521
